(function () {
  ('use strict');
  /**
   * @ag-grid-community/all-modules - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue * @version v31.1.1
   * @link https://www.ag-grid.com/
   * @license MIT
   */ function ct(n) {
    return n == null || n === '' ? null : n;
  }
  function P(n, t) {
    return t === void 0 && (t = !1), n != null && (n !== '' || t);
  }
  function H(n) {
    return !P(n);
  }
  function Ge(n) {
    return n == null || n.length === 0;
  }
  function zr(n) {
    return n != null && typeof n.toString == 'function' ? n.toString() : null;
  }
  function Mt(n) {
    if (n !== void 0) {
      if (n === null || n === '') return null;
      if (typeof n == 'number') return isNaN(n) ? void 0 : n;
      var t = parseInt(n, 10);
      return isNaN(t) ? void 0 : t;
    }
  }
  function xo(n) {
    if (n !== void 0)
      return n === null || n === '' ? !1 : typeof n == 'boolean' ? n : /true/i.test(n);
  }
  function yc(n) {
    if (!(n == null || n === '')) return n;
  }
  function Yi(n, t) {
    var e = n ? JSON.stringify(n) : null,
      r = t ? JSON.stringify(t) : null;
    return e === r;
  }
  function mc(n, t, e) {
    e === void 0 && (e = !1);
    var r = n == null,
      o = t == null;
    if ((n && n.toNumber && (n = n.toNumber()), t && t.toNumber && (t = t.toNumber()), r && o))
      return 0;
    if (r) return -1;
    if (o) return 1;
    function i(s, a) {
      return s > a ? 1 : s < a ? -1 : 0;
    }
    if (typeof n != 'string' || !e) return i(n, t);
    try {
      return n.localeCompare(t);
    } catch {
      return i(n, t);
    }
  }
  function Zt(n) {
    if (n instanceof Set || n instanceof Map) {
      var t = [];
      return (
        n.forEach(function (e) {
          return t.push(e);
        }),
        t
      );
    }
    return Object.values(n);
  }
  var Cc = Object.freeze({
      __proto__: null,
      makeNull: ct,
      exists: P,
      missing: H,
      missingOrEmpty: Ge,
      toStringOrNull: zr,
      attrToNumber: Mt,
      attrToBoolean: xo,
      attrToString: yc,
      jsonEquals: Yi,
      defaultComparator: mc,
      values: Zt,
    }),
    Sc = (function () {
      function n() {
        this.existingKeys = {};
      }
      return (
        (n.prototype.addExistingKeys = function (t) {
          for (var e = 0; e < t.length; e++) this.existingKeys[t[e]] = !0;
        }),
        (n.prototype.getUniqueKey = function (t, e) {
          t = zr(t);
          for (var r = 0; ; ) {
            var o = void 0;
            if (
              (t
                ? ((o = t), r !== 0 && (o += '_' + r))
                : e
                ? ((o = e), r !== 0 && (o += '_' + r))
                : (o = r),
              !this.existingKeys[o])
            )
              return (this.existingKeys[o] = !0), String(o);
            r++;
          }
        }),
        n
      );
    })(),
    wc = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    },
    Ec = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    };
  function ye(n, t) {
    var e, r;
    if (n != null) {
      if (Array.isArray(n)) {
        for (var o = 0; o < n.length; o++) t(o.toString(), n[o]);
        return;
      }
      try {
        for (var i = wc(Object.entries(n)), s = i.next(); !s.done; s = i.next()) {
          var a = Ec(s.value, 2),
            l = a[0],
            u = a[1];
          t(l, u);
        }
      } catch (c) {
        e = { error: c };
      } finally {
        try {
          s && !s.done && (r = i.return) && r.call(i);
        } finally {
          if (e) throw e.error;
        }
      }
    }
  }
  function qi(n) {
    for (var t = {}, e = Object.keys(n), r = 0; r < e.length; r++) {
      var o = e[r],
        i = n[o];
      t[o] = i;
    }
    return t;
  }
  function No(n, t) {
    if (n) {
      var e = n,
        r = {};
      return (
        Object.keys(e).forEach(function (o) {
          if (!(t && t.indexOf(o) >= 0)) {
            var i = e[o],
              s = Go(i) && i.constructor === Object;
            s ? (r[o] = No(i)) : (r[o] = i);
          }
        }),
        r
      );
    }
  }
  function It(n) {
    if (!n) return [];
    var t = Object;
    if (typeof t.values == 'function') return t.values(n);
    var e = [];
    for (var r in n) n.hasOwnProperty(r) && n.propertyIsEnumerable(r) && e.push(n[r]);
    return e;
  }
  function Ve(n, t, e, r) {
    e === void 0 && (e = !0),
      r === void 0 && (r = !1),
      P(t) &&
        ye(t, function (o, i) {
          var s = n[o];
          if (s !== i) {
            if (r) {
              var a = s == null && i != null;
              if (a) {
                var l = typeof i == 'object' && i.constructor === Object,
                  u = l;
                u && ((s = {}), (n[o] = s));
              }
            }
            Go(i) && Go(s) && !Array.isArray(s)
              ? Ve(s, i, e, r)
              : (e || i !== void 0) && (n[o] = i);
          }
        });
  }
  function wr(n, t, e) {
    if (!(!t || !n)) {
      if (!e) return n[t];
      for (var r = t.split('.'), o = n, i = 0; i < r.length; i++) {
        if (o == null) return;
        o = o[r[i]];
      }
      return o;
    }
  }
  function ca(n, t, e) {
    t === void 0 && (t = []),
      Object.keys(n).forEach(function (s) {
        var a = n[s];
        typeof a == 'object' && !t.includes(s) && (n[s] = void 0);
      });
    var r = Object.getPrototypeOf(n),
      o = {},
      i = function (s) {
        return 'AG Grid: Grid API function '
          .concat(
            s,
            `() cannot be called as the grid has been destroyed.
    It is recommended to remove local references to the grid api. Alternatively, check gridApi.isDestroyed() to avoid calling methods against a destroyed grid.
    To run logic when the grid is about to be destroyed use the gridPreDestroy event. See: `
          )
          .concat(e);
      };
    Object.getOwnPropertyNames(r).forEach(function (s) {
      var a = r[s];
      if (typeof a == 'function' && !t.includes(s)) {
        var l = function () {
          console.warn(i(s));
        };
        o[s] = { value: l, writable: !0 };
      }
    }),
      Object.defineProperties(n, o);
  }
  function Go(n) {
    return typeof n == 'object' && n !== null;
  }
  var _c = Object.freeze({
      __proto__: null,
      iterateObject: ye,
      cloneObject: qi,
      deepCloneDefinition: No,
      getAllValuesInObject: It,
      mergeDeep: Ve,
      getValueUsingField: wr,
      removeAllReferences: ca,
      isNonNullObject: Go,
    }),
    pa = {};
  function er(n, t) {
    pa[t] || (n(), (pa[t] = !0));
  }
  function V(n) {
    er(function () {
      return console.warn('AG Grid: ' + n);
    }, n);
  }
  function pt(n) {
    er(function () {
      return console.error('AG Grid: ' + n);
    }, n);
  }
  function Vo(n) {
    if (n.name) return n.name;
    var t = /function\s+([^\(]+)/.exec(n.toString());
    return t && t.length === 2 ? t[1].trim() : null;
  }
  function Ho(n) {
    return !!(n && n.constructor && n.call && n.apply);
  }
  function da(n) {
    ha(n, 400);
  }
  var Qi = [],
    Xi = !1;
  function Ji(n) {
    Qi.push(n),
      !Xi &&
        ((Xi = !0),
        window.setTimeout(function () {
          var t = Qi.slice();
          (Qi.length = 0),
            (Xi = !1),
            t.forEach(function (e) {
              return e();
            });
        }, 0));
  }
  function ha(n, t) {
    t === void 0 && (t = 0),
      n.length > 0 &&
        window.setTimeout(function () {
          return n.forEach(function (e) {
            return e();
          });
        }, t);
  }
  function He(n, t) {
    var e;
    return function () {
      for (var r = [], o = 0; o < arguments.length; o++) r[o] = arguments[o];
      var i = this;
      window.clearTimeout(e),
        (e = window.setTimeout(function () {
          n.apply(i, r);
        }, t));
    };
  }
  function Zi(n, t) {
    var e = 0;
    return function () {
      for (var r = [], o = 0; o < arguments.length; o++) r[o] = arguments[o];
      var i = this,
        s = new Date().getTime();
      s - e < t || ((e = s), n.apply(i, r));
    };
  }
  function en(n, t, e, r) {
    e === void 0 && (e = 100);
    var o = new Date().getTime(),
      i = null,
      s = !1,
      a = function () {
        var l = new Date().getTime() - o > e;
        (n() || l) &&
          (t(),
          (s = !0),
          i != null && (window.clearInterval(i), (i = null)),
          l && r && console.warn(r));
      };
    a(), s || (i = window.setInterval(a, 10));
  }
  function Rc() {
    for (var n = [], t = 0; t < arguments.length; t++) n[t] = arguments[t];
    return function (e) {
      return n.reduce(function (r, o) {
        return o(r);
      }, e);
    };
  }
  var Oc = function () {},
    Tc = Object.freeze({
      __proto__: null,
      doOnce: er,
      warnOnce: V,
      errorOnce: pt,
      getFunctionName: Vo,
      isFunction: Ho,
      executeInAWhile: da,
      executeNextVMTurn: Ji,
      executeAfter: ha,
      debounce: He,
      throttle: Zi,
      waitUntil: en,
      compose: Rc,
      noop: Oc,
    }),
    G;
  (function (n) {
    (n.CommunityCoreModule = '@ag-grid-community/core'),
      (n.InfiniteRowModelModule = '@ag-grid-community/infinite-row-model'),
      (n.ClientSideRowModelModule = '@ag-grid-community/client-side-row-model'),
      (n.CsvExportModule = '@ag-grid-community/csv-export'),
      (n.EnterpriseCoreModule = '@ag-grid-enterprise/core'),
      (n.RowGroupingModule = '@ag-grid-enterprise/row-grouping'),
      (n.ColumnsToolPanelModule = '@ag-grid-enterprise/column-tool-panel'),
      (n.FiltersToolPanelModule = '@ag-grid-enterprise/filter-tool-panel'),
      (n.MenuModule = '@ag-grid-enterprise/menu'),
      (n.SetFilterModule = '@ag-grid-enterprise/set-filter'),
      (n.MultiFilterModule = '@ag-grid-enterprise/multi-filter'),
      (n.StatusBarModule = '@ag-grid-enterprise/status-bar'),
      (n.SideBarModule = '@ag-grid-enterprise/side-bar'),
      (n.RangeSelectionModule = '@ag-grid-enterprise/range-selection'),
      (n.MasterDetailModule = '@ag-grid-enterprise/master-detail'),
      (n.RichSelectModule = '@ag-grid-enterprise/rich-select'),
      (n.GridChartsModule = '@ag-grid-enterprise/charts'),
      (n.ViewportRowModelModule = '@ag-grid-enterprise/viewport-row-model'),
      (n.ServerSideRowModelModule = '@ag-grid-enterprise/server-side-row-model'),
      (n.ExcelExportModule = '@ag-grid-enterprise/excel-export'),
      (n.ClipboardModule = '@ag-grid-enterprise/clipboard'),
      (n.SparklinesModule = '@ag-grid-enterprise/sparklines'),
      (n.AdvancedFilterModule = '@ag-grid-enterprise/advanced-filter'),
      (n.AngularModule = '@ag-grid-community/angular'),
      (n.ReactModule = '@ag-grid-community/react'),
      (n.VueModule = '@ag-grid-community/vue');
  })(G || (G = {}));
  var Kr = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    fa = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    X = (function () {
      function n() {}
      return (
        (n.register = function (t) {
          n.__register(t, !0, void 0);
        }),
        (n.registerModules = function (t) {
          n.__registerModules(t, !0, void 0);
        }),
        (n.__register = function (t, e, r) {
          n.runVersionChecks(t),
            r !== void 0
              ? ((n.areGridScopedModules = !0),
                n.gridModulesMap[r] === void 0 && (n.gridModulesMap[r] = {}),
                (n.gridModulesMap[r][t.moduleName] = t))
              : (n.globalModulesMap[t.moduleName] = t),
            n.setModuleBased(e);
        }),
        (n.__unRegisterGridModules = function (t) {
          delete n.gridModulesMap[t];
        }),
        (n.__registerModules = function (t, e, r) {
          n.setModuleBased(e),
            t &&
              t.forEach(function (o) {
                return n.__register(o, e, r);
              });
        }),
        (n.isValidModuleVersion = function (t) {
          var e = Kr(t.version.split('.') || [], 2),
            r = e[0],
            o = e[1],
            i = Kr(n.currentModuleVersion.split('.') || [], 2),
            s = i[0],
            a = i[1];
          return r === s && o === a;
        }),
        (n.runVersionChecks = function (t) {
          if (
            (n.currentModuleVersion || (n.currentModuleVersion = t.version),
            t.version
              ? n.isValidModuleVersion(t) ||
                console.error(
                  "AG Grid: You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. '"
                    .concat(t.moduleName, "' is version ")
                    .concat(t.version, ' but the other modules are version ')
                    .concat(
                      this.currentModuleVersion,
                      '. Please update all modules to the same version.'
                    )
                )
              : console.error(
                  "AG Grid: You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. '".concat(
                    t.moduleName,
                    "' is incompatible. Please update all modules to the same version."
                  )
                ),
            t.validate)
          ) {
            var e = t.validate();
            if (!e.isValid) {
              var r = e;
              console.error('AG Grid: '.concat(r.message));
            }
          }
        }),
        (n.setModuleBased = function (t) {
          n.moduleBased === void 0
            ? (n.moduleBased = t)
            : n.moduleBased !== t &&
              er(function () {
                console.warn(
                  'AG Grid: You are mixing modules (i.e. @ag-grid-community/core) and packages (ag-grid-community) - you can only use one or the other of these mechanisms.'
                ),
                  console.warn(
                    'Please see https://www.ag-grid.com/javascript-grid/packages-modules/ for more information.'
                  );
              }, 'ModulePackageCheck');
        }),
        (n.__setIsBundled = function () {
          n.isBundled = !0;
        }),
        (n.__assertRegistered = function (t, e, r) {
          var o;
          if (this.__isRegistered(t, r)) return !0;
          var i = e + t,
            s;
          if (n.isBundled)
            s = 'AG Grid: unable to use '.concat(
              e,
              ` as 'ag-grid-enterprise' has not been loaded. Check you are using the Enterprise bundle:
        
        <script src="https://cdn.jsdelivr.net/npm/ag-grid-enterprise@AG_GRID_VERSION/dist/ag-grid-enterprise.min.js"><\/script>
        
For more info see: https://ag-grid.com/javascript-data-grid/getting-started/#getting-started-with-ag-grid-enterprise`
            );
          else if (n.moduleBased || n.moduleBased === void 0) {
            var a =
              (o = Object.entries(G).find(function (l) {
                var u = Kr(l, 2);
                u[0];
                var c = u[1];
                return c === t;
              })) === null || o === void 0
                ? void 0
                : o[0];
            s = 'AG Grid: unable to use '
              .concat(e, ' as the ')
              .concat(a, ' is not registered')
              .concat(
                n.areGridScopedModules ? ' for gridId: '.concat(r) : '',
                `. Check if you have registered the module:
           
    import { ModuleRegistry } from '@ag-grid-community/core';
    import { `
              )
              .concat(a, " } from '")
              .concat(
                t,
                `';
    
    ModuleRegistry.registerModules([ `
              )
              .concat(
                a,
                ` ]);

For more info see: https://www.ag-grid.com/javascript-grid/modules/`
              );
          } else
            s = 'AG Grid: unable to use '.concat(
              e,
              ` as package 'ag-grid-enterprise' has not been imported. Check that you have imported the package:
            
    import 'ag-grid-enterprise';
            
For more info see: https://www.ag-grid.com/javascript-grid/packages/`
            );
          return (
            er(function () {
              console.warn(s);
            }, i),
            !1
          );
        }),
        (n.__warnEnterpriseChartDisabled = function (t) {
          var e = 'ag-charts-enterprise',
            r = e + ':' + t,
            o = 'https://ag-grid.com/javascript-data-grid/integrated-charts/',
            i = "AG Grid: the '"
              .concat(t, "' chart type is not supported in AG Charts Community. See ")
              .concat(o, ' for more details.');
          er(function () {
            console.warn(i);
          }, r);
        }),
        (n.__isRegistered = function (t, e) {
          var r;
          return (
            !!n.globalModulesMap[t] ||
            !!(!((r = n.gridModulesMap[e]) === null || r === void 0) && r[t])
          );
        }),
        (n.__getRegisteredModules = function (t) {
          return fa(fa([], Kr(Zt(n.globalModulesMap)), !1), Kr(Zt(n.gridModulesMap[t] || {})), !1);
        }),
        (n.__getGridRegisteredModules = function (t) {
          var e;
          return Zt((e = n.gridModulesMap[t]) !== null && e !== void 0 ? e : {}) || [];
        }),
        (n.__isPackageBased = function () {
          return !n.moduleBased;
        }),
        (n.globalModulesMap = {}),
        (n.gridModulesMap = {}),
        (n.areGridScopedModules = !1),
        n
      );
    })(),
    Pc = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Dc = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    Ac = (function () {
      function n(t, e) {
        if (((this.beanWrappers = {}), (this.destroyed = !1), !(!t || !t.beanClasses))) {
          (this.contextParams = t),
            (this.logger = e),
            this.logger.log('>> creating ag-Application Context'),
            this.createBeans();
          var r = this.getBeanInstances();
          this.wireBeans(r),
            this.logger.log('>> ag-Application Context ready - component is alive');
        }
      }
      return (
        (n.prototype.getBeanInstances = function () {
          return Zt(this.beanWrappers).map(function (t) {
            return t.beanInstance;
          });
        }),
        (n.prototype.createBean = function (t, e) {
          if (!t) throw Error("Can't wire to bean since it is null");
          return this.wireBeans([t], e), t;
        }),
        (n.prototype.wireBeans = function (t, e) {
          this.autoWireBeans(t),
            this.methodWireBeans(t),
            this.callLifeCycleMethods(t, 'preConstructMethods'),
            P(e) && t.forEach(e),
            this.callLifeCycleMethods(t, 'postConstructMethods');
        }),
        (n.prototype.createBeans = function () {
          var t = this;
          this.contextParams.beanClasses.forEach(this.createBeanWrapper.bind(this)),
            ye(this.beanWrappers, function (r, o) {
              var i;
              o.bean.__agBeanMetaData &&
                o.bean.__agBeanMetaData.autowireMethods &&
                o.bean.__agBeanMetaData.autowireMethods.agConstructor &&
                (i = o.bean.__agBeanMetaData.autowireMethods.agConstructor);
              var s = t.getBeansForParameters(i, o.bean.name),
                a = new (o.bean.bind.apply(o.bean, Dc([null], Pc(s), !1)))();
              o.beanInstance = a;
            });
          var e = Object.keys(this.beanWrappers).join(', ');
          this.logger.log('created beans: '.concat(e));
        }),
        (n.prototype.createBeanWrapper = function (t) {
          var e = t.__agBeanMetaData;
          if (!e) {
            var r = void 0;
            t.prototype.constructor ? (r = Vo(t.prototype.constructor)) : (r = '' + t),
              console.error('Context item '.concat(r, ' is not a bean'));
            return;
          }
          var o = { bean: t, beanInstance: null, beanName: e.beanName };
          this.beanWrappers[e.beanName] = o;
        }),
        (n.prototype.autoWireBeans = function (t) {
          var e = this;
          t.forEach(function (r) {
            e.forEachMetaDataInHierarchy(r, function (o, i) {
              var s = o.agClassAttributes;
              s &&
                s.forEach(function (a) {
                  var l = e.lookupBeanInstance(i, a.beanName, a.optional);
                  r[a.attributeName] = l;
                });
            });
          });
        }),
        (n.prototype.methodWireBeans = function (t) {
          var e = this;
          t.forEach(function (r) {
            e.forEachMetaDataInHierarchy(r, function (o, i) {
              ye(o.autowireMethods, function (s, a) {
                if (s !== 'agConstructor') {
                  var l = e.getBeansForParameters(a, i);
                  r[s].apply(r, l);
                }
              });
            });
          });
        }),
        (n.prototype.forEachMetaDataInHierarchy = function (t, e) {
          for (var r = Object.getPrototypeOf(t); r != null; ) {
            var o = r.constructor;
            if (o.hasOwnProperty('__agBeanMetaData')) {
              var i = o.__agBeanMetaData,
                s = this.getBeanName(o);
              e(i, s);
            }
            r = Object.getPrototypeOf(r);
          }
        }),
        (n.prototype.getBeanName = function (t) {
          if (t.__agBeanMetaData && t.__agBeanMetaData.beanName) return t.__agBeanMetaData.beanName;
          var e = t.toString(),
            r = e.substring(9, e.indexOf('('));
          return r;
        }),
        (n.prototype.getBeansForParameters = function (t, e) {
          var r = this,
            o = [];
          return (
            t &&
              ye(t, function (i, s) {
                var a = r.lookupBeanInstance(e, s);
                o[Number(i)] = a;
              }),
            o
          );
        }),
        (n.prototype.lookupBeanInstance = function (t, e, r) {
          if ((r === void 0 && (r = !1), this.destroyed))
            return (
              this.logger.log(
                'AG Grid: bean reference '.concat(e, ' is used after the grid is destroyed!')
              ),
              null
            );
          if (e === 'context') return this;
          if (
            this.contextParams.providedBeanInstances &&
            this.contextParams.providedBeanInstances.hasOwnProperty(e)
          )
            return this.contextParams.providedBeanInstances[e];
          var o = this.beanWrappers[e];
          return o
            ? o.beanInstance
            : (r ||
                console.error(
                  'AG Grid: unable to find bean reference '
                    .concat(e, ' while initialising ')
                    .concat(t)
                ),
              null);
        }),
        (n.prototype.callLifeCycleMethods = function (t, e) {
          var r = this;
          t.forEach(function (o) {
            return r.callLifeCycleMethodsOnBean(o, e);
          });
        }),
        (n.prototype.callLifeCycleMethodsOnBean = function (t, e, r) {
          var o = {};
          this.forEachMetaDataInHierarchy(t, function (s) {
            var a = s[e];
            a &&
              a.forEach(function (l) {
                l != r && (o[l] = !0);
              });
          });
          var i = Object.keys(o);
          i.forEach(function (s) {
            return t[s]();
          });
        }),
        (n.prototype.getBean = function (t) {
          return this.lookupBeanInstance('getBean', t, !0);
        }),
        (n.prototype.destroy = function () {
          if (!this.destroyed) {
            (this.destroyed = !0), this.logger.log('>> Shutting down ag-Application Context');
            var t = this.getBeanInstances();
            this.destroyBeans(t),
              (this.contextParams.providedBeanInstances = null),
              X.__unRegisterGridModules(this.contextParams.gridId),
              this.logger.log('>> ag-Application Context shut down - component is dead');
          }
        }),
        (n.prototype.destroyBean = function (t) {
          t && this.destroyBeans([t]);
        }),
        (n.prototype.destroyBeans = function (t) {
          var e = this;
          return t
            ? (t.forEach(function (r) {
                e.callLifeCycleMethodsOnBean(r, 'preDestroyMethods', 'destroy');
                var o = r;
                typeof o.destroy == 'function' && o.destroy();
              }),
              [])
            : [];
        }),
        (n.prototype.isDestroyed = function () {
          return this.destroyed;
        }),
        (n.prototype.getGridId = function () {
          return this.contextParams.gridId;
        }),
        n
      );
    })();
  function va(n, t, e) {
    var r = tr(n.constructor);
    r.preConstructMethods || (r.preConstructMethods = []), r.preConstructMethods.push(t);
  }
  function F(n, t, e) {
    var r = tr(n.constructor);
    r.postConstructMethods || (r.postConstructMethods = []), r.postConstructMethods.push(t);
  }
  function Se(n, t, e) {
    var r = tr(n.constructor);
    r.preDestroyMethods || (r.preDestroyMethods = []), r.preDestroyMethods.push(t);
  }
  function x(n) {
    return function (t) {
      var e = tr(t);
      e.beanName = n;
    };
  }
  function v(n) {
    return function (t, e, r) {
      ga(t, n, !1, t, e, null);
    };
  }
  function Y(n) {
    return function (t, e, r) {
      ga(t, n, !0, t, e, null);
    };
  }
  function ga(n, t, e, r, o, i) {
    if (t === null) {
      console.error('AG Grid: Autowired name should not be null');
      return;
    }
    if (typeof i == 'number') {
      console.error('AG Grid: Autowired should be on an attribute');
      return;
    }
    var s = tr(n.constructor);
    s.agClassAttributes || (s.agClassAttributes = []),
      s.agClassAttributes.push({ attributeName: o, beanName: t, optional: e });
  }
  function Ye(n) {
    return function (t, e, r) {
      var o = typeof t == 'function' ? t : t.constructor,
        i;
      if (typeof r == 'number') {
        var s = void 0;
        e ? ((i = tr(o)), (s = e)) : ((i = tr(o)), (s = 'agConstructor')),
          i.autowireMethods || (i.autowireMethods = {}),
          i.autowireMethods[s] || (i.autowireMethods[s] = {}),
          (i.autowireMethods[s][r] = n);
      }
    };
  }
  function tr(n) {
    return n.hasOwnProperty('__agBeanMetaData') || (n.__agBeanMetaData = {}), n.__agBeanMetaData;
  }
  var ya = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Bo = function (n, t) {
      return function (e, r) {
        t(e, r, n);
      };
    },
    xt = (function () {
      function n() {
        (this.allSyncListeners = new Map()),
          (this.allAsyncListeners = new Map()),
          (this.globalSyncListeners = new Set()),
          (this.globalAsyncListeners = new Set()),
          (this.asyncFunctionsQueue = []),
          (this.scheduled = !1),
          (this.firedEvents = {});
      }
      return (
        (n.prototype.setBeans = function (t, e, r, o) {
          if (
            (r === void 0 && (r = null),
            o === void 0 && (o = null),
            (this.frameworkOverrides = e),
            (this.gridOptionsService = t),
            r)
          ) {
            var i = t.useAsyncEvents();
            this.addGlobalListener(r, i);
          }
          o && this.addGlobalListener(o, !1);
        }),
        (n.prototype.setFrameworkOverrides = function (t) {
          this.frameworkOverrides = t;
        }),
        (n.prototype.getListeners = function (t, e, r) {
          var o = e ? this.allAsyncListeners : this.allSyncListeners,
            i = o.get(t);
          return !i && r && ((i = new Set()), o.set(t, i)), i;
        }),
        (n.prototype.noRegisteredListenersExist = function () {
          return (
            this.allSyncListeners.size === 0 &&
            this.allAsyncListeners.size === 0 &&
            this.globalSyncListeners.size === 0 &&
            this.globalAsyncListeners.size === 0
          );
        }),
        (n.prototype.addEventListener = function (t, e, r) {
          r === void 0 && (r = !1), this.getListeners(t, r, !0).add(e);
        }),
        (n.prototype.removeEventListener = function (t, e, r) {
          r === void 0 && (r = !1);
          var o = this.getListeners(t, r, !1);
          if (o && (o.delete(e), o.size === 0)) {
            var i = r ? this.allAsyncListeners : this.allSyncListeners;
            i.delete(t);
          }
        }),
        (n.prototype.addGlobalListener = function (t, e) {
          e === void 0 && (e = !1),
            (e ? this.globalAsyncListeners : this.globalSyncListeners).add(t);
        }),
        (n.prototype.removeGlobalListener = function (t, e) {
          e === void 0 && (e = !1),
            (e ? this.globalAsyncListeners : this.globalSyncListeners).delete(t);
        }),
        (n.prototype.dispatchEvent = function (t) {
          var e = t;
          this.gridOptionsService && this.gridOptionsService.addGridCommonParams(e),
            this.dispatchToListeners(e, !0),
            this.dispatchToListeners(e, !1),
            (this.firedEvents[e.type] = !0);
        }),
        (n.prototype.dispatchEventOnce = function (t) {
          this.firedEvents[t.type] || this.dispatchEvent(t);
        }),
        (n.prototype.dispatchToListeners = function (t, e) {
          var r = this,
            o,
            i = t.type;
          if (e && 'event' in t) {
            var s = t.event;
            s instanceof Event && (t.eventPath = s.composedPath());
          }
          var a = function (p, d) {
              return p.forEach(function (h) {
                if (d.has(h)) {
                  var f = r.frameworkOverrides
                    ? function () {
                        return r.frameworkOverrides.wrapIncoming(function () {
                          return h(t);
                        });
                      }
                    : function () {
                        return h(t);
                      };
                  e ? r.dispatchAsync(f) : f();
                }
              });
            },
            l = (o = this.getListeners(i, e, !1)) !== null && o !== void 0 ? o : new Set(),
            u = new Set(l);
          u.size > 0 && a(u, l);
          var c = new Set(e ? this.globalAsyncListeners : this.globalSyncListeners);
          c.forEach(function (p) {
            var d = r.frameworkOverrides
              ? function () {
                  return r.frameworkOverrides.wrapIncoming(function () {
                    return p(i, t);
                  });
                }
              : function () {
                  return p(i, t);
                };
            e ? r.dispatchAsync(d) : d();
          });
        }),
        (n.prototype.dispatchAsync = function (t) {
          var e = this;
          this.asyncFunctionsQueue.push(t),
            this.scheduled ||
              (this.frameworkOverrides.wrapIncoming(function () {
                window.setTimeout(e.flushAsyncQueue.bind(e), 0);
              }),
              (this.scheduled = !0));
        }),
        (n.prototype.flushAsyncQueue = function () {
          this.scheduled = !1;
          var t = this.asyncFunctionsQueue.slice();
          (this.asyncFunctionsQueue = []),
            t.forEach(function (e) {
              return e();
            });
        }),
        ya(
          [
            Bo(0, Ye('gridOptionsService')),
            Bo(1, Ye('frameworkOverrides')),
            Bo(2, Ye('globalEventListener')),
            Bo(3, Ye('globalSyncEventListener')),
          ],
          n.prototype,
          'setBeans',
          null
        ),
        (n = ya([x('eventService')], n)),
        n
      );
    })(),
    tn = (function () {
      function n(t) {
        (this.frameworkOverrides = t),
          (this.wrappedListeners = new Map()),
          (this.wrappedGlobalListeners = new Map());
      }
      return (
        (n.prototype.wrap = function (t) {
          var e = this,
            r = t;
          return (
            this.frameworkOverrides.shouldWrapOutgoing &&
              ((r = function (o) {
                e.frameworkOverrides.wrapOutgoing(function () {
                  return t(o);
                });
              }),
              this.wrappedListeners.set(t, r)),
            r
          );
        }),
        (n.prototype.wrapGlobal = function (t) {
          var e = this,
            r = t;
          return (
            this.frameworkOverrides.shouldWrapOutgoing &&
              ((r = function (o, i) {
                e.frameworkOverrides.wrapOutgoing(function () {
                  return t(o, i);
                });
              }),
              this.wrappedGlobalListeners.set(t, r)),
            r
          );
        }),
        (n.prototype.unwrap = function (t) {
          var e;
          return (e = this.wrappedListeners.get(t)) !== null && e !== void 0 ? e : t;
        }),
        (n.prototype.unwrapGlobal = function (t) {
          var e;
          return (e = this.wrappedGlobalListeners.get(t)) !== null && e !== void 0 ? e : t;
        }),
        n
      );
    })(),
    $r = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    bc = { resizable: !0, sortable: !0 },
    Fc = 0;
  function ma() {
    return Fc++;
  }
  var J = (function () {
      function n(t, e, r, o) {
        (this.instanceId = ma()),
          (this.autoHeaderHeight = null),
          (this.moving = !1),
          (this.menuVisible = !1),
          (this.lastLeftPinned = !1),
          (this.firstRightPinned = !1),
          (this.filterActive = !1),
          (this.eventService = new xt()),
          (this.tooltipEnabled = !1),
          (this.rowGroupActive = !1),
          (this.pivotActive = !1),
          (this.aggregationActive = !1),
          (this.colDef = t),
          (this.userProvidedColDef = e),
          (this.colId = r),
          (this.primary = o),
          this.setState(t);
      }
      return (
        (n.prototype.getInstanceId = function () {
          return this.instanceId;
        }),
        (n.prototype.setState = function (t) {
          t.sort !== void 0
            ? (t.sort === 'asc' || t.sort === 'desc') && (this.sort = t.sort)
            : (t.initialSort === 'asc' || t.initialSort === 'desc') && (this.sort = t.initialSort);
          var e = t.sortIndex,
            r = t.initialSortIndex;
          e !== void 0 ? e !== null && (this.sortIndex = e) : r !== null && (this.sortIndex = r);
          var o = t.hide,
            i = t.initialHide;
          o !== void 0 ? (this.visible = !o) : (this.visible = !i),
            t.pinned !== void 0 ? this.setPinned(t.pinned) : this.setPinned(t.initialPinned);
          var s = t.flex,
            a = t.initialFlex;
          s !== void 0 ? (this.flex = s) : a !== void 0 && (this.flex = a);
        }),
        (n.prototype.setColDef = function (t, e, r) {
          (this.colDef = t),
            (this.userProvidedColDef = e),
            this.initMinAndMaxWidths(),
            this.initDotNotation(),
            this.initTooltip(),
            this.eventService.dispatchEvent(this.createColumnEvent('colDefChanged', r));
        }),
        (n.prototype.getUserProvidedColDef = function () {
          return this.userProvidedColDef;
        }),
        (n.prototype.setParent = function (t) {
          this.parent = t;
        }),
        (n.prototype.getParent = function () {
          return this.parent;
        }),
        (n.prototype.setOriginalParent = function (t) {
          this.originalParent = t;
        }),
        (n.prototype.getOriginalParent = function () {
          return this.originalParent;
        }),
        (n.prototype.initialise = function () {
          this.initMinAndMaxWidths(),
            this.resetActualWidth('gridInitializing'),
            this.initDotNotation(),
            this.initTooltip();
        }),
        (n.prototype.initDotNotation = function () {
          var t = this.gridOptionsService.get('suppressFieldDotNotation');
          (this.fieldContainsDots =
            P(this.colDef.field) && this.colDef.field.indexOf('.') >= 0 && !t),
            (this.tooltipFieldContainsDots =
              P(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf('.') >= 0 && !t);
        }),
        (n.prototype.initMinAndMaxWidths = function () {
          var t = this.colDef;
          (this.minWidth = this.columnUtils.calculateColMinWidth(t)),
            (this.maxWidth = this.columnUtils.calculateColMaxWidth(t));
        }),
        (n.prototype.initTooltip = function () {
          this.tooltipEnabled =
            P(this.colDef.tooltipField) ||
            P(this.colDef.tooltipValueGetter) ||
            P(this.colDef.tooltipComponent);
        }),
        (n.prototype.resetActualWidth = function (t) {
          var e = this.columnUtils.calculateColInitialWidth(this.colDef);
          this.setActualWidth(e, t, !0);
        }),
        (n.prototype.isEmptyGroup = function () {
          return !1;
        }),
        (n.prototype.isRowGroupDisplayed = function (t) {
          if (H(this.colDef) || H(this.colDef.showRowGroup)) return !1;
          var e = this.colDef.showRowGroup === !0,
            r = this.colDef.showRowGroup === t;
          return e || r;
        }),
        (n.prototype.isPrimary = function () {
          return this.primary;
        }),
        (n.prototype.isFilterAllowed = function () {
          var t = !!this.colDef.filter;
          return t;
        }),
        (n.prototype.isFieldContainsDots = function () {
          return this.fieldContainsDots;
        }),
        (n.prototype.isTooltipEnabled = function () {
          return this.tooltipEnabled;
        }),
        (n.prototype.isTooltipFieldContainsDots = function () {
          return this.tooltipFieldContainsDots;
        }),
        (n.prototype.addEventListener = function (t, e) {
          var r, o;
          this.frameworkOverrides.shouldWrapOutgoing &&
            !this.frameworkEventListenerService &&
            (this.eventService.setFrameworkOverrides(this.frameworkOverrides),
            (this.frameworkEventListenerService = new tn(this.frameworkOverrides)));
          var i =
            (o =
              (r = this.frameworkEventListenerService) === null || r === void 0
                ? void 0
                : r.wrap(e)) !== null && o !== void 0
              ? o
              : e;
          this.eventService.addEventListener(t, i);
        }),
        (n.prototype.removeEventListener = function (t, e) {
          var r,
            o,
            i =
              (o =
                (r = this.frameworkEventListenerService) === null || r === void 0
                  ? void 0
                  : r.unwrap(e)) !== null && o !== void 0
                ? o
                : e;
          this.eventService.removeEventListener(t, i);
        }),
        (n.prototype.createColumnFunctionCallbackParams = function (t) {
          return this.gridOptionsService.addGridCommonParams({
            node: t,
            data: t.data,
            column: this,
            colDef: this.colDef,
          });
        }),
        (n.prototype.isSuppressNavigable = function (t) {
          if (typeof this.colDef.suppressNavigable == 'boolean')
            return this.colDef.suppressNavigable;
          if (typeof this.colDef.suppressNavigable == 'function') {
            var e = this.createColumnFunctionCallbackParams(t),
              r = this.colDef.suppressNavigable;
            return r(e);
          }
          return !1;
        }),
        (n.prototype.isCellEditable = function (t) {
          return t.group && !this.gridOptionsService.get('enableGroupEdit')
            ? !1
            : this.isColumnFunc(t, this.colDef.editable);
        }),
        (n.prototype.isSuppressFillHandle = function () {
          return !!this.colDef.suppressFillHandle;
        }),
        (n.prototype.isAutoHeight = function () {
          return !!this.colDef.autoHeight;
        }),
        (n.prototype.isAutoHeaderHeight = function () {
          return !!this.colDef.autoHeaderHeight;
        }),
        (n.prototype.isRowDrag = function (t) {
          return this.isColumnFunc(t, this.colDef.rowDrag);
        }),
        (n.prototype.isDndSource = function (t) {
          return this.isColumnFunc(t, this.colDef.dndSource);
        }),
        (n.prototype.isCellCheckboxSelection = function (t) {
          return this.isColumnFunc(t, this.colDef.checkboxSelection);
        }),
        (n.prototype.isSuppressPaste = function (t) {
          return this.isColumnFunc(t, this.colDef ? this.colDef.suppressPaste : null);
        }),
        (n.prototype.isResizable = function () {
          return !!this.getColDefValue('resizable');
        }),
        (n.prototype.getColDefValue = function (t) {
          var e;
          return (e = this.colDef[t]) !== null && e !== void 0 ? e : bc[t];
        }),
        (n.prototype.isColumnFunc = function (t, e) {
          if (typeof e == 'boolean') return e;
          if (typeof e == 'function') {
            var r = this.createColumnFunctionCallbackParams(t),
              o = e;
            return o(r);
          }
          return !1;
        }),
        (n.prototype.setMoving = function (t, e) {
          (this.moving = t),
            this.eventService.dispatchEvent(this.createColumnEvent('movingChanged', e));
        }),
        (n.prototype.createColumnEvent = function (t, e) {
          return this.gridOptionsService.addGridCommonParams({
            type: t,
            column: this,
            columns: [this],
            source: e,
          });
        }),
        (n.prototype.isMoving = function () {
          return this.moving;
        }),
        (n.prototype.getSort = function () {
          return this.sort;
        }),
        (n.prototype.setSort = function (t, e) {
          this.sort !== t &&
            ((this.sort = t),
            this.eventService.dispatchEvent(this.createColumnEvent('sortChanged', e))),
            this.dispatchStateUpdatedEvent('sort');
        }),
        (n.prototype.setMenuVisible = function (t, e) {
          this.menuVisible !== t &&
            ((this.menuVisible = t),
            this.eventService.dispatchEvent(this.createColumnEvent('menuVisibleChanged', e)));
        }),
        (n.prototype.isMenuVisible = function () {
          return this.menuVisible;
        }),
        (n.prototype.isSortable = function () {
          return !!this.getColDefValue('sortable');
        }),
        (n.prototype.isSortAscending = function () {
          return this.sort === 'asc';
        }),
        (n.prototype.isSortDescending = function () {
          return this.sort === 'desc';
        }),
        (n.prototype.isSortNone = function () {
          return H(this.sort);
        }),
        (n.prototype.isSorting = function () {
          return P(this.sort);
        }),
        (n.prototype.getSortIndex = function () {
          return this.sortIndex;
        }),
        (n.prototype.setSortIndex = function (t) {
          (this.sortIndex = t), this.dispatchStateUpdatedEvent('sortIndex');
        }),
        (n.prototype.setAggFunc = function (t) {
          (this.aggFunc = t), this.dispatchStateUpdatedEvent('aggFunc');
        }),
        (n.prototype.getAggFunc = function () {
          return this.aggFunc;
        }),
        (n.prototype.getLeft = function () {
          return this.left;
        }),
        (n.prototype.getOldLeft = function () {
          return this.oldLeft;
        }),
        (n.prototype.getRight = function () {
          return this.left + this.actualWidth;
        }),
        (n.prototype.setLeft = function (t, e) {
          (this.oldLeft = this.left),
            this.left !== t &&
              ((this.left = t),
              this.eventService.dispatchEvent(this.createColumnEvent('leftChanged', e)));
        }),
        (n.prototype.isFilterActive = function () {
          return this.filterActive;
        }),
        (n.prototype.setFilterActive = function (t, e, r) {
          this.filterActive !== t &&
            ((this.filterActive = t),
            this.eventService.dispatchEvent(this.createColumnEvent('filterActiveChanged', e)));
          var o = this.createColumnEvent('filterChanged', e);
          r && Ve(o, r), this.eventService.dispatchEvent(o);
        }),
        (n.prototype.isHovered = function () {
          return this.columnHoverService.isHovered(this);
        }),
        (n.prototype.setPinned = function (t) {
          t === !0 || t === 'left'
            ? (this.pinned = 'left')
            : t === 'right'
            ? (this.pinned = 'right')
            : (this.pinned = null),
            this.dispatchStateUpdatedEvent('pinned');
        }),
        (n.prototype.setFirstRightPinned = function (t, e) {
          this.firstRightPinned !== t &&
            ((this.firstRightPinned = t),
            this.eventService.dispatchEvent(this.createColumnEvent('firstRightPinnedChanged', e)));
        }),
        (n.prototype.setLastLeftPinned = function (t, e) {
          this.lastLeftPinned !== t &&
            ((this.lastLeftPinned = t),
            this.eventService.dispatchEvent(this.createColumnEvent('lastLeftPinnedChanged', e)));
        }),
        (n.prototype.isFirstRightPinned = function () {
          return this.firstRightPinned;
        }),
        (n.prototype.isLastLeftPinned = function () {
          return this.lastLeftPinned;
        }),
        (n.prototype.isPinned = function () {
          return this.pinned === 'left' || this.pinned === 'right';
        }),
        (n.prototype.isPinnedLeft = function () {
          return this.pinned === 'left';
        }),
        (n.prototype.isPinnedRight = function () {
          return this.pinned === 'right';
        }),
        (n.prototype.getPinned = function () {
          return this.pinned;
        }),
        (n.prototype.setVisible = function (t, e) {
          var r = t === !0;
          this.visible !== r &&
            ((this.visible = r),
            this.eventService.dispatchEvent(this.createColumnEvent('visibleChanged', e))),
            this.dispatchStateUpdatedEvent('hide');
        }),
        (n.prototype.isVisible = function () {
          return this.visible;
        }),
        (n.prototype.isSpanHeaderHeight = function () {
          var t = this.getColDef();
          return !t.suppressSpanHeaderHeight && !t.autoHeaderHeight;
        }),
        (n.prototype.getColumnGroupPaddingInfo = function () {
          var t = this.getParent();
          if (!t || !t.isPadding()) return { numberOfParents: 0, isSpanningTotal: !1 };
          for (var e = t.getPaddingLevel() + 1, r = !0; t; ) {
            if (!t.isPadding()) {
              r = !1;
              break;
            }
            t = t.getParent();
          }
          return { numberOfParents: e, isSpanningTotal: r };
        }),
        (n.prototype.getColDef = function () {
          return this.colDef;
        }),
        (n.prototype.getColumnGroupShow = function () {
          return this.colDef.columnGroupShow;
        }),
        (n.prototype.getColId = function () {
          return this.colId;
        }),
        (n.prototype.getId = function () {
          return this.colId;
        }),
        (n.prototype.getUniqueId = function () {
          return this.colId;
        }),
        (n.prototype.getDefinition = function () {
          return this.colDef;
        }),
        (n.prototype.getActualWidth = function () {
          return this.actualWidth;
        }),
        (n.prototype.getAutoHeaderHeight = function () {
          return this.autoHeaderHeight;
        }),
        (n.prototype.setAutoHeaderHeight = function (t) {
          var e = t !== this.autoHeaderHeight;
          return (this.autoHeaderHeight = t), e;
        }),
        (n.prototype.createBaseColDefParams = function (t) {
          var e = this.gridOptionsService.addGridCommonParams({
            node: t,
            data: t.data,
            colDef: this.colDef,
            column: this,
          });
          return e;
        }),
        (n.prototype.getColSpan = function (t) {
          if (H(this.colDef.colSpan)) return 1;
          var e = this.createBaseColDefParams(t),
            r = this.colDef.colSpan(e);
          return Math.max(r, 1);
        }),
        (n.prototype.getRowSpan = function (t) {
          if (H(this.colDef.rowSpan)) return 1;
          var e = this.createBaseColDefParams(t),
            r = this.colDef.rowSpan(e);
          return Math.max(r, 1);
        }),
        (n.prototype.setActualWidth = function (t, e, r) {
          r === void 0 && (r = !1),
            this.minWidth != null && (t = Math.max(t, this.minWidth)),
            this.maxWidth != null && (t = Math.min(t, this.maxWidth)),
            this.actualWidth !== t &&
              ((this.actualWidth = t),
              this.flex && e !== 'flex' && e !== 'gridInitializing' && (this.flex = null),
              r || this.fireColumnWidthChangedEvent(e)),
            this.dispatchStateUpdatedEvent('width');
        }),
        (n.prototype.fireColumnWidthChangedEvent = function (t) {
          this.eventService.dispatchEvent(this.createColumnEvent('widthChanged', t));
        }),
        (n.prototype.isGreaterThanMax = function (t) {
          return this.maxWidth != null ? t > this.maxWidth : !1;
        }),
        (n.prototype.getMinWidth = function () {
          return this.minWidth;
        }),
        (n.prototype.getMaxWidth = function () {
          return this.maxWidth;
        }),
        (n.prototype.getFlex = function () {
          return this.flex || 0;
        }),
        (n.prototype.setFlex = function (t) {
          this.flex !== t && (this.flex = t), this.dispatchStateUpdatedEvent('flex');
        }),
        (n.prototype.setMinimum = function (t) {
          P(this.minWidth) && this.setActualWidth(this.minWidth, t);
        }),
        (n.prototype.setRowGroupActive = function (t, e) {
          this.rowGroupActive !== t &&
            ((this.rowGroupActive = t),
            this.eventService.dispatchEvent(this.createColumnEvent('columnRowGroupChanged', e))),
            this.dispatchStateUpdatedEvent('rowGroup');
        }),
        (n.prototype.isRowGroupActive = function () {
          return this.rowGroupActive;
        }),
        (n.prototype.setPivotActive = function (t, e) {
          this.pivotActive !== t &&
            ((this.pivotActive = t),
            this.eventService.dispatchEvent(this.createColumnEvent('columnPivotChanged', e))),
            this.dispatchStateUpdatedEvent('pivot');
        }),
        (n.prototype.isPivotActive = function () {
          return this.pivotActive;
        }),
        (n.prototype.isAnyFunctionActive = function () {
          return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();
        }),
        (n.prototype.isAnyFunctionAllowed = function () {
          return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();
        }),
        (n.prototype.setValueActive = function (t, e) {
          this.aggregationActive !== t &&
            ((this.aggregationActive = t),
            this.eventService.dispatchEvent(this.createColumnEvent('columnValueChanged', e)));
        }),
        (n.prototype.isValueActive = function () {
          return this.aggregationActive;
        }),
        (n.prototype.isAllowPivot = function () {
          return this.colDef.enablePivot === !0;
        }),
        (n.prototype.isAllowValue = function () {
          return this.colDef.enableValue === !0;
        }),
        (n.prototype.isAllowRowGroup = function () {
          return this.colDef.enableRowGroup === !0;
        }),
        (n.prototype.getMenuTabs = function (t) {
          V(
            "As of v31.1, 'getMenuTabs' is deprecated. Use 'getColDef().menuTabs ?? defaultValues' instead."
          );
          var e = this.getColDef().menuTabs;
          return e == null && (e = t), e;
        }),
        (n.prototype.dispatchStateUpdatedEvent = function (t) {
          this.eventService.dispatchEvent({ type: n.EVENT_STATE_UPDATED, key: t });
        }),
        (n.EVENT_MOVING_CHANGED = 'movingChanged'),
        (n.EVENT_LEFT_CHANGED = 'leftChanged'),
        (n.EVENT_WIDTH_CHANGED = 'widthChanged'),
        (n.EVENT_LAST_LEFT_PINNED_CHANGED = 'lastLeftPinnedChanged'),
        (n.EVENT_FIRST_RIGHT_PINNED_CHANGED = 'firstRightPinnedChanged'),
        (n.EVENT_VISIBLE_CHANGED = 'visibleChanged'),
        (n.EVENT_FILTER_CHANGED = 'filterChanged'),
        (n.EVENT_FILTER_ACTIVE_CHANGED = 'filterActiveChanged'),
        (n.EVENT_SORT_CHANGED = 'sortChanged'),
        (n.EVENT_COL_DEF_CHANGED = 'colDefChanged'),
        (n.EVENT_MENU_VISIBLE_CHANGED = 'menuVisibleChanged'),
        (n.EVENT_ROW_GROUP_CHANGED = 'columnRowGroupChanged'),
        (n.EVENT_PIVOT_CHANGED = 'columnPivotChanged'),
        (n.EVENT_VALUE_CHANGED = 'columnValueChanged'),
        (n.EVENT_STATE_UPDATED = 'columnStateUpdated'),
        $r([v('gridOptionsService')], n.prototype, 'gridOptionsService', void 0),
        $r([v('columnUtils')], n.prototype, 'columnUtils', void 0),
        $r([v('columnHoverService')], n.prototype, 'columnHoverService', void 0),
        $r([v('frameworkOverrides')], n.prototype, 'frameworkOverrides', void 0),
        $r([F], n.prototype, 'initialise', null),
        n
      );
    })(),
    Lc = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ie = (function () {
      function n(t, e, r, o) {
        (this.localEventService = new xt()),
          (this.expandable = !1),
          (this.instanceId = ma()),
          (this.expandableListenerRemoveCallback = null),
          (this.colGroupDef = t),
          (this.groupId = e),
          (this.expanded = !!t && !!t.openByDefault),
          (this.padding = r),
          (this.level = o);
      }
      return (
        (n.prototype.destroy = function () {
          this.expandableListenerRemoveCallback && this.reset(null, void 0);
        }),
        (n.prototype.reset = function (t, e) {
          (this.colGroupDef = t),
            (this.level = e),
            (this.originalParent = null),
            this.expandableListenerRemoveCallback && this.expandableListenerRemoveCallback(),
            (this.children = void 0),
            (this.expandable = void 0);
        }),
        (n.prototype.getInstanceId = function () {
          return this.instanceId;
        }),
        (n.prototype.setOriginalParent = function (t) {
          this.originalParent = t;
        }),
        (n.prototype.getOriginalParent = function () {
          return this.originalParent;
        }),
        (n.prototype.getLevel = function () {
          return this.level;
        }),
        (n.prototype.isVisible = function () {
          return this.children
            ? this.children.some(function (t) {
                return t.isVisible();
              })
            : !1;
        }),
        (n.prototype.isPadding = function () {
          return this.padding;
        }),
        (n.prototype.setExpanded = function (t) {
          this.expanded = t === void 0 ? !1 : t;
          var e = { type: n.EVENT_EXPANDED_CHANGED };
          this.localEventService.dispatchEvent(e);
        }),
        (n.prototype.isExpandable = function () {
          return this.expandable;
        }),
        (n.prototype.isExpanded = function () {
          return this.expanded;
        }),
        (n.prototype.getGroupId = function () {
          return this.groupId;
        }),
        (n.prototype.getId = function () {
          return this.getGroupId();
        }),
        (n.prototype.setChildren = function (t) {
          this.children = t;
        }),
        (n.prototype.getChildren = function () {
          return this.children;
        }),
        (n.prototype.getColGroupDef = function () {
          return this.colGroupDef;
        }),
        (n.prototype.getLeafColumns = function () {
          var t = [];
          return this.addLeafColumns(t), t;
        }),
        (n.prototype.addLeafColumns = function (t) {
          this.children &&
            this.children.forEach(function (e) {
              e instanceof J ? t.push(e) : e instanceof n && e.addLeafColumns(t);
            });
        }),
        (n.prototype.getColumnGroupShow = function () {
          var t = this.colGroupDef;
          if (t) return t.columnGroupShow;
        }),
        (n.prototype.setupExpandable = function () {
          var t = this;
          this.setExpandable(),
            this.expandableListenerRemoveCallback && this.expandableListenerRemoveCallback();
          var e = this.onColumnVisibilityChanged.bind(this);
          this.getLeafColumns().forEach(function (r) {
            return r.addEventListener('visibleChanged', e);
          }),
            (this.expandableListenerRemoveCallback = function () {
              t.getLeafColumns().forEach(function (r) {
                return r.removeEventListener('visibleChanged', e);
              }),
                (t.expandableListenerRemoveCallback = null);
            });
        }),
        (n.prototype.setExpandable = function () {
          if (!this.isPadding()) {
            for (
              var t = !1,
                e = !1,
                r = !1,
                o = this.findChildrenRemovingPadding(),
                i = 0,
                s = o.length;
              i < s;
              i++
            ) {
              var a = o[i];
              if (a.isVisible()) {
                var l = a.getColumnGroupShow();
                l === 'open'
                  ? ((t = !0), (r = !0))
                  : l === 'closed'
                  ? ((e = !0), (r = !0))
                  : ((t = !0), (e = !0));
              }
            }
            var u = t && e && r;
            if (this.expandable !== u) {
              this.expandable = u;
              var c = { type: n.EVENT_EXPANDABLE_CHANGED };
              this.localEventService.dispatchEvent(c);
            }
          }
        }),
        (n.prototype.findChildrenRemovingPadding = function () {
          var t = [],
            e = function (r) {
              r.forEach(function (o) {
                var i = o instanceof n && o.isPadding();
                i ? e(o.children) : t.push(o);
              });
            };
          return e(this.children), t;
        }),
        (n.prototype.onColumnVisibilityChanged = function () {
          this.setExpandable();
        }),
        (n.prototype.addEventListener = function (t, e) {
          this.localEventService.addEventListener(t, e);
        }),
        (n.prototype.removeEventListener = function (t, e) {
          this.localEventService.removeEventListener(t, e);
        }),
        (n.EVENT_EXPANDED_CHANGED = 'expandedChanged'),
        (n.EVENT_EXPANDABLE_CHANGED = 'expandableChanged'),
        Lc([Se], n.prototype, 'destroy', null),
        n
      );
    })(),
    Mc = {
      numericColumn: { headerClass: 'ag-right-aligned-header', cellClass: 'ag-right-aligned-cell' },
      rightAligned: { headerClass: 'ag-right-aligned-header', cellClass: 'ag-right-aligned-cell' },
    };
  function Ic(n) {
    return n != null && n.length > 0;
  }
  function q(n) {
    if (!(!n || !n.length)) return n[n.length - 1];
  }
  function Tt(n, t, e) {
    return n == null && t == null
      ? !0
      : n != null &&
          t != null &&
          n.length === t.length &&
          n.every(function (r, o) {
            return e ? e(r, t[o]) : t[o] === r;
          });
  }
  function xc(n, t) {
    return Tt(n, t);
  }
  function Ca(n) {
    return n.sort(function (t, e) {
      return t - e;
    });
  }
  function Nc(n, t) {
    if (n)
      for (var e = n.length - 2; e >= 0; e--) {
        var r = n[e] === t,
          o = n[e + 1] === t;
        r && o && n.splice(e + 1, 1);
      }
  }
  function rn(n, t) {
    var e = n.indexOf(t);
    e >= 0 && ((n[e] = n[n.length - 1]), n.pop());
  }
  function Ee(n, t) {
    var e = n.indexOf(t);
    e >= 0 && n.splice(e, 1);
  }
  function Sa(n, t) {
    for (var e = 0; e < t.length; e++) rn(n, t[e]);
  }
  function wa(n, t) {
    for (var e = 0; e < t.length; e++) Ee(n, t[e]);
  }
  function Yr(n, t, e) {
    n.splice(e, 0, t);
  }
  function Gc(n, t, e) {
    if (!(n == null || t == null))
      for (var r = t.length - 1; r >= 0; r--) {
        var o = t[r];
        Yr(n, o, e);
      }
  }
  function on(n, t, e) {
    wa(n, t),
      t
        .slice()
        .reverse()
        .forEach(function (r) {
          return Yr(n, r, e);
        });
  }
  function ot(n, t) {
    return n.indexOf(t) > -1;
  }
  function Ea(n) {
    return [].concat.apply([], n);
  }
  function nn(n, t) {
    t == null ||
      n == null ||
      t.forEach(function (e) {
        return n.push(e);
      });
  }
  function Vc(n) {
    return n.map(zr);
  }
  function Hc(n, t) {
    if (n != null) for (var e = n.length - 1; e >= 0; e--) t(n[e], e);
  }
  var Bc = Object.freeze({
      __proto__: null,
      existsAndNotEmpty: Ic,
      last: q,
      areEqual: Tt,
      shallowCompare: xc,
      sortNumerically: Ca,
      removeRepeatsFromArray: Nc,
      removeFromUnorderedArray: rn,
      removeFromArray: Ee,
      removeAllFromUnorderedArray: Sa,
      removeAllFromArray: wa,
      insertIntoArray: Yr,
      insertArrayIntoArray: Gc,
      moveInArray: on,
      includes: ot,
      flatten: Ea,
      pushAll: nn,
      toStrings: Vc,
      forEachReverse: Hc,
    }),
    _a = '__ag_Grid_Stop_Propagation',
    kc = ['touchstart', 'touchend', 'touchmove', 'touchcancel', 'scroll'],
    sn = {};
  function it(n) {
    n[_a] = !0;
  }
  function nt(n) {
    return n[_a] === !0;
  }
  var an = (function () {
    var n = {
        select: 'input',
        change: 'input',
        submit: 'form',
        reset: 'form',
        error: 'img',
        load: 'img',
        abort: 'img',
      },
      t = function (e) {
        if (typeof sn[e] == 'boolean') return sn[e];
        var r = document.createElement(n[e] || 'div');
        return (e = 'on' + e), (sn[e] = e in r);
      };
    return t;
  })();
  function ko(n, t, e) {
    for (var r = t; r; ) {
      var o = n.getDomData(r, e);
      if (o) return o;
      r = r.parentElement;
    }
    return null;
  }
  function Wo(n, t) {
    return !t || !n ? !1 : Oa(t).indexOf(n) >= 0;
  }
  function Ra(n) {
    for (var t = [], e = n.target; e; ) t.push(e), (e = e.parentElement);
    return t;
  }
  function Oa(n) {
    var t = n;
    return t.path ? t.path : t.composedPath ? t.composedPath() : Ra(t);
  }
  function Ta(n, t, e, r) {
    var o = ot(kc, e),
      i = o ? { passive: !0 } : void 0;
    n && n.addEventListener && n.addEventListener(t, e, r, i);
  }
  var Wc = Object.freeze({
      __proto__: null,
      stopPropagationForAgGrid: it,
      isStopPropagationForAgGrid: nt,
      isEventSupported: an,
      getCtrlForEventTarget: ko,
      isElementInEventPath: Wo,
      createEventPath: Ra,
      getEventPath: Oa,
      addSafePassiveEventListener: Ta,
    }),
    rr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    D = (function () {
      function n() {
        var t = this;
        (this.destroyFunctions = []),
          (this.destroyed = !1),
          (this.__v_skip = !0),
          (this.lastChangeSetIdLookup = {}),
          (this.propertyListenerId = 0),
          (this.isAlive = function () {
            return !t.destroyed;
          });
      }
      return (
        (n.prototype.getFrameworkOverrides = function () {
          return this.frameworkOverrides;
        }),
        (n.prototype.getContext = function () {
          return this.context;
        }),
        (n.prototype.destroy = function () {
          this.destroyFunctions.forEach(function (t) {
            return t();
          }),
            (this.destroyFunctions.length = 0),
            (this.destroyed = !0),
            this.dispatchEvent({ type: n.EVENT_DESTROYED });
        }),
        (n.prototype.addEventListener = function (t, e) {
          this.localEventService || (this.localEventService = new xt()),
            this.localEventService.addEventListener(t, e);
        }),
        (n.prototype.removeEventListener = function (t, e) {
          this.localEventService && this.localEventService.removeEventListener(t, e);
        }),
        (n.prototype.dispatchEvent = function (t) {
          this.localEventService && this.localEventService.dispatchEvent(t);
        }),
        (n.prototype.addManagedListener = function (t, e, r) {
          var o = this;
          if (!this.destroyed) {
            t instanceof HTMLElement
              ? Ta(this.getFrameworkOverrides(), t, e, r)
              : t.addEventListener(e, r);
            var i = function () {
              return (
                t.removeEventListener(e, r),
                (o.destroyFunctions = o.destroyFunctions.filter(function (s) {
                  return s !== i;
                })),
                null
              );
            };
            return this.destroyFunctions.push(i), i;
          }
        }),
        (n.prototype.setupGridOptionListener = function (t, e) {
          var r = this;
          this.gridOptionsService.addEventListener(t, e);
          var o = function () {
            return (
              r.gridOptionsService.removeEventListener(t, e),
              (r.destroyFunctions = r.destroyFunctions.filter(function (i) {
                return i !== o;
              })),
              null
            );
          };
          return this.destroyFunctions.push(o), o;
        }),
        (n.prototype.addManagedPropertyListener = function (t, e) {
          return this.destroyed
            ? function () {
                return null;
              }
            : this.setupGridOptionListener(t, e);
        }),
        (n.prototype.addManagedPropertyListeners = function (t, e) {
          var r = this;
          if (!this.destroyed) {
            var o = t.join('-') + this.propertyListenerId++,
              i = function (s) {
                if (s.changeSet) {
                  if (s.changeSet && s.changeSet.id === r.lastChangeSetIdLookup[o]) return;
                  r.lastChangeSetIdLookup[o] = s.changeSet.id;
                }
                var a = { type: 'gridPropertyChanged', changeSet: s.changeSet, source: s.source };
                e(a);
              };
            t.forEach(function (s) {
              return r.setupGridOptionListener(s, i);
            });
          }
        }),
        (n.prototype.addDestroyFunc = function (t) {
          this.isAlive() ? this.destroyFunctions.push(t) : t();
        }),
        (n.prototype.createManagedBean = function (t, e) {
          var r = this.createBean(t, e);
          return this.addDestroyFunc(this.destroyBean.bind(this, t, e)), r;
        }),
        (n.prototype.createBean = function (t, e, r) {
          return (e || this.getContext()).createBean(t, r);
        }),
        (n.prototype.destroyBean = function (t, e) {
          return (e || this.getContext()).destroyBean(t);
        }),
        (n.prototype.destroyBeans = function (t, e) {
          var r = this;
          return (
            t &&
              t.forEach(function (o) {
                return r.destroyBean(o, e);
              }),
            []
          );
        }),
        (n.EVENT_DESTROYED = 'destroyed'),
        rr([v('frameworkOverrides')], n.prototype, 'frameworkOverrides', void 0),
        rr([v('context')], n.prototype, 'context', void 0),
        rr([v('eventService')], n.prototype, 'eventService', void 0),
        rr([v('gridOptionsService')], n.prototype, 'gridOptionsService', void 0),
        rr([v('localeService')], n.prototype, 'localeService', void 0),
        rr([v('environment')], n.prototype, 'environment', void 0),
        rr([Se], n.prototype, 'destroy', null),
        n
      );
    })(),
    jc = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    jo = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Uc = function (n, t) {
      return function (e, r) {
        t(e, r, n);
      };
    },
    zc = (function (n) {
      jc(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.setBeans = function (e) {
          this.logger = e.create('ColumnFactory');
        }),
        (t.prototype.createColumnTree = function (e, r, o, i) {
          var s = new Sc(),
            a = this.extractExistingTreeData(o),
            l = a.existingCols,
            u = a.existingGroups,
            c = a.existingColKeys;
          s.addExistingKeys(c);
          var p = this.recursivelyCreateColumns(e, 0, r, l, s, u, i),
            d = this.findMaxDept(p, 0);
          this.logger.log('Number of levels for grouped columns is ' + d);
          var h = this.balanceColumnTree(p, 0, d, s),
            f = function (y, m) {
              y instanceof ie && y.setupExpandable(), y.setOriginalParent(m);
            };
          return (
            this.columnUtils.depthFirstOriginalTreeSearch(null, h, f),
            { columnTree: h, treeDept: d }
          );
        }),
        (t.prototype.extractExistingTreeData = function (e) {
          var r = [],
            o = [],
            i = [];
          return (
            e &&
              this.columnUtils.depthFirstOriginalTreeSearch(null, e, function (s) {
                if (s instanceof ie) {
                  var a = s;
                  o.push(a);
                } else {
                  var l = s;
                  i.push(l.getId()), r.push(l);
                }
              }),
            { existingCols: r, existingGroups: o, existingColKeys: i }
          );
        }),
        (t.prototype.createForAutoGroups = function (e, r) {
          var o = this;
          return e.map(function (i) {
            return o.createAutoGroupTreeItem(r, i);
          });
        }),
        (t.prototype.createAutoGroupTreeItem = function (e, r) {
          for (var o = this.findDepth(e), i = r, s = o - 1; s >= 0; s--) {
            var a = new ie(null, 'FAKE_PATH_'.concat(r.getId(), '}_').concat(s), !0, s);
            this.createBean(a), a.setChildren([i]), i.setOriginalParent(a), (i = a);
          }
          return o === 0 && r.setOriginalParent(null), i;
        }),
        (t.prototype.findDepth = function (e) {
          for (var r = 0, o = e; o && o[0] && o[0] instanceof ie; ) r++, (o = o[0].getChildren());
          return r;
        }),
        (t.prototype.balanceColumnTree = function (e, r, o, i) {
          for (var s = [], a = 0; a < e.length; a++) {
            var l = e[a];
            if (l instanceof ie) {
              var u = l,
                c = this.balanceColumnTree(u.getChildren(), r + 1, o, i);
              u.setChildren(c), s.push(u);
            } else {
              for (var p = void 0, d = void 0, h = o - 1; h >= r; h--) {
                var f = i.getUniqueKey(null, null),
                  y = this.createMergedColGroupDef(null),
                  m = new ie(y, f, !0, r);
                this.createBean(m), d && d.setChildren([m]), (d = m), p || (p = d);
              }
              if (p && d) {
                s.push(p);
                var C = e.some(function (w) {
                  return w instanceof ie;
                });
                if (C) {
                  d.setChildren([l]);
                  continue;
                } else {
                  d.setChildren(e);
                  break;
                }
              }
              s.push(l);
            }
          }
          return s;
        }),
        (t.prototype.findMaxDept = function (e, r) {
          for (var o = r, i = 0; i < e.length; i++) {
            var s = e[i];
            if (s instanceof ie) {
              var a = s,
                l = this.findMaxDept(a.getChildren(), r + 1);
              o < l && (o = l);
            }
          }
          return o;
        }),
        (t.prototype.recursivelyCreateColumns = function (e, r, o, i, s, a, l) {
          if (!e) return [];
          for (var u = new Array(e.length), c = 0; c < u.length; c++) {
            var p = e[c];
            this.isColumnGroup(p)
              ? (u[c] = this.createColumnGroup(o, p, r, i, s, a, l))
              : (u[c] = this.createColumn(o, p, i, s, l));
          }
          return u;
        }),
        (t.prototype.createColumnGroup = function (e, r, o, i, s, a, l) {
          var u = this.createMergedColGroupDef(r),
            c = s.getUniqueKey(u.groupId || null, null),
            p = new ie(u, c, !1, o);
          this.createBean(p);
          var d = this.findExistingGroup(r, a);
          d && a.splice(d.idx, 1);
          var h = d == null ? void 0 : d.group;
          h && p.setExpanded(h.isExpanded());
          var f = this.recursivelyCreateColumns(u.children, o + 1, e, i, s, a, l);
          return p.setChildren(f), p;
        }),
        (t.prototype.createMergedColGroupDef = function (e) {
          var r = {};
          return (
            Object.assign(r, this.gridOptionsService.get('defaultColGroupDef')),
            Object.assign(r, e),
            r
          );
        }),
        (t.prototype.createColumn = function (e, r, o, i, s) {
          var a = this.findExistingColumn(r, o);
          a && (o == null || o.splice(a.idx, 1));
          var l = a == null ? void 0 : a.column;
          if (l) {
            var c = this.addColumnDefaultAndTypes(r, l.getColId());
            l.setColDef(c, r, s), this.applyColumnState(l, c, s);
          } else {
            var u = i.getUniqueKey(r.colId, r.field),
              c = this.addColumnDefaultAndTypes(r, u);
            (l = new J(c, r, u, e)), this.context.createBean(l);
          }
          return this.dataTypeService.addColumnListeners(l), l;
        }),
        (t.prototype.applyColumnState = function (e, r, o) {
          var i = Mt(r.flex);
          i !== void 0 && e.setFlex(i);
          var s = e.getFlex() <= 0;
          if (s) {
            var a = Mt(r.width);
            if (a != null) e.setActualWidth(a, o);
            else {
              var l = e.getActualWidth();
              e.setActualWidth(l, o);
            }
          }
          r.sort !== void 0 &&
            (r.sort == 'asc' || r.sort == 'desc' ? e.setSort(r.sort, o) : e.setSort(void 0, o));
          var u = Mt(r.sortIndex);
          u !== void 0 && e.setSortIndex(u);
          var c = xo(r.hide);
          c !== void 0 && e.setVisible(!c, o), r.pinned !== void 0 && e.setPinned(r.pinned);
        }),
        (t.prototype.findExistingColumn = function (e, r) {
          if (r)
            for (var o = 0; o < r.length; o++) {
              var i = r[o].getUserProvidedColDef();
              if (i) {
                var s = e.colId != null;
                if (s) {
                  if (r[o].getId() === e.colId) return { idx: o, column: r[o] };
                  continue;
                }
                var a = e.field != null;
                if (a) {
                  if (i.field === e.field) return { idx: o, column: r[o] };
                  continue;
                }
                if (i === e) return { idx: o, column: r[o] };
              }
            }
        }),
        (t.prototype.findExistingGroup = function (e, r) {
          var o = e.groupId != null;
          if (o)
            for (var i = 0; i < r.length; i++) {
              var s = r[i],
                a = s.getColGroupDef();
              if (a && s.getId() === e.groupId) return { idx: i, group: s };
            }
        }),
        (t.prototype.addColumnDefaultAndTypes = function (e, r) {
          var o = {},
            i = this.gridOptionsService.get('defaultColDef');
          Ve(o, i, !1, !0);
          var s = this.dataTypeService.updateColDefAndGetColumnType(o, e, r);
          s && this.assignColumnTypes(s, o), Ve(o, e, !1, !0);
          var a = this.gridOptionsService.get('autoGroupColumnDef'),
            l = this.gridOptionsService.isColumnsSortingCoupledToGroup();
          return (
            e.rowGroup && a && l && Ve(o, { sort: a.sort, initialSort: a.initialSort }, !1, !0),
            this.dataTypeService.validateColDef(o),
            o
          );
        }),
        (t.prototype.assignColumnTypes = function (e, r) {
          if (e.length) {
            var o = Object.assign({}, Mc),
              i = this.gridOptionsService.get('columnTypes') || {};
            ye(i, function (s, a) {
              if (s in o)
                console.warn(
                  "AG Grid: the column type '".concat(
                    s,
                    "' is a default column type and cannot be overridden."
                  )
                );
              else {
                var l = a;
                l.type &&
                  V(
                    "Column type definitions 'columnTypes' with a 'type' attribute are not supported because a column type cannot refer to another column type. Only column definitions 'columnDefs' can use the 'type' attribute to refer to a column type."
                  ),
                  (o[s] = a);
              }
            }),
              e.forEach(function (s) {
                var a = o[s.trim()];
                a
                  ? Ve(r, a, !1, !0)
                  : console.warn(
                      "AG Grid: colDef.type '" +
                        s +
                        "' does not correspond to defined gridOptions.columnTypes"
                    );
              });
          }
        }),
        (t.prototype.isColumnGroup = function (e) {
          return e.children !== void 0;
        }),
        jo([v('columnUtils')], t.prototype, 'columnUtils', void 0),
        jo([v('dataTypeService')], t.prototype, 'dataTypeService', void 0),
        jo([Uc(0, Ye('loggerFactory'))], t.prototype, 'setBeans', null),
        (t = jo([x('columnFactory')], t)),
        t
      );
    })(D),
    Kc = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    se = (function () {
      function n(t, e, r, o) {
        (this.displayedChildren = []),
          (this.localEventService = new xt()),
          (this.groupId = e),
          (this.partId = r),
          (this.providedColumnGroup = t),
          (this.pinned = o);
      }
      return (
        (n.createUniqueId = function (t, e) {
          return t + '_' + e;
        }),
        (n.prototype.reset = function () {
          (this.parent = null), (this.children = null), (this.displayedChildren = null);
        }),
        (n.prototype.getParent = function () {
          return this.parent;
        }),
        (n.prototype.setParent = function (t) {
          this.parent = t;
        }),
        (n.prototype.getUniqueId = function () {
          return n.createUniqueId(this.groupId, this.partId);
        }),
        (n.prototype.isEmptyGroup = function () {
          return this.displayedChildren.length === 0;
        }),
        (n.prototype.isMoving = function () {
          var t = this.getProvidedColumnGroup().getLeafColumns();
          return !t || t.length === 0
            ? !1
            : t.every(function (e) {
                return e.isMoving();
              });
        }),
        (n.prototype.checkLeft = function () {
          if (
            (this.displayedChildren.forEach(function (o) {
              o instanceof n && o.checkLeft();
            }),
            this.displayedChildren.length > 0)
          )
            if (this.gridOptionsService.get('enableRtl')) {
              var t = q(this.displayedChildren),
                e = t.getLeft();
              this.setLeft(e);
            } else {
              var r = this.displayedChildren[0].getLeft();
              this.setLeft(r);
            }
          else this.setLeft(null);
        }),
        (n.prototype.getLeft = function () {
          return this.left;
        }),
        (n.prototype.getOldLeft = function () {
          return this.oldLeft;
        }),
        (n.prototype.setLeft = function (t) {
          (this.oldLeft = this.left),
            this.left !== t &&
              ((this.left = t),
              this.localEventService.dispatchEvent(this.createAgEvent(n.EVENT_LEFT_CHANGED)));
        }),
        (n.prototype.getPinned = function () {
          return this.pinned;
        }),
        (n.prototype.createAgEvent = function (t) {
          return { type: t };
        }),
        (n.prototype.addEventListener = function (t, e) {
          this.localEventService.addEventListener(t, e);
        }),
        (n.prototype.removeEventListener = function (t, e) {
          this.localEventService.removeEventListener(t, e);
        }),
        (n.prototype.getGroupId = function () {
          return this.groupId;
        }),
        (n.prototype.getPartId = function () {
          return this.partId;
        }),
        (n.prototype.isChildInThisGroupDeepSearch = function (t) {
          var e = !1;
          return (
            this.children.forEach(function (r) {
              t === r && (e = !0), r instanceof n && r.isChildInThisGroupDeepSearch(t) && (e = !0);
            }),
            e
          );
        }),
        (n.prototype.getActualWidth = function () {
          var t = 0;
          return (
            this.displayedChildren &&
              this.displayedChildren.forEach(function (e) {
                t += e.getActualWidth();
              }),
            t
          );
        }),
        (n.prototype.isResizable = function () {
          if (!this.displayedChildren) return !1;
          var t = !1;
          return (
            this.displayedChildren.forEach(function (e) {
              e.isResizable() && (t = !0);
            }),
            t
          );
        }),
        (n.prototype.getMinWidth = function () {
          var t = 0;
          return (
            this.displayedChildren.forEach(function (e) {
              t += e.getMinWidth() || 0;
            }),
            t
          );
        }),
        (n.prototype.addChild = function (t) {
          this.children || (this.children = []), this.children.push(t);
        }),
        (n.prototype.getDisplayedChildren = function () {
          return this.displayedChildren;
        }),
        (n.prototype.getLeafColumns = function () {
          var t = [];
          return this.addLeafColumns(t), t;
        }),
        (n.prototype.getDisplayedLeafColumns = function () {
          var t = [];
          return this.addDisplayedLeafColumns(t), t;
        }),
        (n.prototype.getDefinition = function () {
          return this.providedColumnGroup.getColGroupDef();
        }),
        (n.prototype.getColGroupDef = function () {
          return this.providedColumnGroup.getColGroupDef();
        }),
        (n.prototype.isPadding = function () {
          return this.providedColumnGroup.isPadding();
        }),
        (n.prototype.isExpandable = function () {
          return this.providedColumnGroup.isExpandable();
        }),
        (n.prototype.isExpanded = function () {
          return this.providedColumnGroup.isExpanded();
        }),
        (n.prototype.setExpanded = function (t) {
          this.providedColumnGroup.setExpanded(t);
        }),
        (n.prototype.addDisplayedLeafColumns = function (t) {
          this.displayedChildren.forEach(function (e) {
            e instanceof J ? t.push(e) : e instanceof n && e.addDisplayedLeafColumns(t);
          });
        }),
        (n.prototype.addLeafColumns = function (t) {
          this.children.forEach(function (e) {
            e instanceof J ? t.push(e) : e instanceof n && e.addLeafColumns(t);
          });
        }),
        (n.prototype.getChildren = function () {
          return this.children;
        }),
        (n.prototype.getColumnGroupShow = function () {
          return this.providedColumnGroup.getColumnGroupShow();
        }),
        (n.prototype.getProvidedColumnGroup = function () {
          return this.providedColumnGroup;
        }),
        (n.prototype.getPaddingLevel = function () {
          var t = this.getParent();
          return !this.isPadding() || !t || !t.isPadding() ? 0 : 1 + t.getPaddingLevel();
        }),
        (n.prototype.calculateDisplayedColumns = function () {
          var t = this;
          this.displayedChildren = [];
          for (var e = this; e != null && e.isPadding(); ) e = e.getParent();
          var r = e ? e.providedColumnGroup.isExpandable() : !1;
          if (!r) {
            (this.displayedChildren = this.children),
              this.localEventService.dispatchEvent(
                this.createAgEvent(n.EVENT_DISPLAYED_CHILDREN_CHANGED)
              );
            return;
          }
          this.children.forEach(function (o) {
            var i = o instanceof n && (!o.displayedChildren || !o.displayedChildren.length);
            if (!i) {
              var s = o.getColumnGroupShow();
              switch (s) {
                case 'open':
                  e.providedColumnGroup.isExpanded() && t.displayedChildren.push(o);
                  break;
                case 'closed':
                  e.providedColumnGroup.isExpanded() || t.displayedChildren.push(o);
                  break;
                default:
                  t.displayedChildren.push(o);
                  break;
              }
            }
          }),
            this.localEventService.dispatchEvent(
              this.createAgEvent(n.EVENT_DISPLAYED_CHILDREN_CHANGED)
            );
        }),
        (n.EVENT_LEFT_CHANGED = 'leftChanged'),
        (n.EVENT_DISPLAYED_CHILDREN_CHANGED = 'displayedChildrenChanged'),
        Kc([v('gridOptionsService')], n.prototype, 'gridOptionsService', void 0),
        n
      );
    })(),
    g = (function () {
      function n() {}
      return (
        (n.EVENT_COLUMN_EVERYTHING_CHANGED = 'columnEverythingChanged'),
        (n.EVENT_NEW_COLUMNS_LOADED = 'newColumnsLoaded'),
        (n.EVENT_COLUMN_PIVOT_MODE_CHANGED = 'columnPivotModeChanged'),
        (n.EVENT_COLUMN_ROW_GROUP_CHANGED = 'columnRowGroupChanged'),
        (n.EVENT_EXPAND_COLLAPSE_ALL = 'expandOrCollapseAll'),
        (n.EVENT_COLUMN_PIVOT_CHANGED = 'columnPivotChanged'),
        (n.EVENT_GRID_COLUMNS_CHANGED = 'gridColumnsChanged'),
        (n.EVENT_COLUMN_VALUE_CHANGED = 'columnValueChanged'),
        (n.EVENT_COLUMN_MOVED = 'columnMoved'),
        (n.EVENT_COLUMN_VISIBLE = 'columnVisible'),
        (n.EVENT_COLUMN_PINNED = 'columnPinned'),
        (n.EVENT_COLUMN_GROUP_OPENED = 'columnGroupOpened'),
        (n.EVENT_COLUMN_RESIZED = 'columnResized'),
        (n.EVENT_DISPLAYED_COLUMNS_CHANGED = 'displayedColumnsChanged'),
        (n.EVENT_SUPPRESS_COLUMN_MOVE_CHANGED = 'suppressMovableColumns'),
        (n.EVENT_SUPPRESS_MENU_HIDE_CHANGED = 'suppressMenuHide'),
        (n.EVENT_SUPPRESS_FIELD_DOT_NOTATION = 'suppressFieldDotNotation'),
        (n.EVENT_VIRTUAL_COLUMNS_CHANGED = 'virtualColumnsChanged'),
        (n.EVENT_COLUMN_HEADER_MOUSE_OVER = 'columnHeaderMouseOver'),
        (n.EVENT_COLUMN_HEADER_MOUSE_LEAVE = 'columnHeaderMouseLeave'),
        (n.EVENT_COLUMN_HEADER_CLICKED = 'columnHeaderClicked'),
        (n.EVENT_COLUMN_HEADER_CONTEXT_MENU = 'columnHeaderContextMenu'),
        (n.EVENT_ASYNC_TRANSACTIONS_FLUSHED = 'asyncTransactionsFlushed'),
        (n.EVENT_ROW_GROUP_OPENED = 'rowGroupOpened'),
        (n.EVENT_ROW_DATA_UPDATED = 'rowDataUpdated'),
        (n.EVENT_PINNED_ROW_DATA_CHANGED = 'pinnedRowDataChanged'),
        (n.EVENT_RANGE_SELECTION_CHANGED = 'rangeSelectionChanged'),
        (n.EVENT_CHART_CREATED = 'chartCreated'),
        (n.EVENT_CHART_RANGE_SELECTION_CHANGED = 'chartRangeSelectionChanged'),
        (n.EVENT_CHART_OPTIONS_CHANGED = 'chartOptionsChanged'),
        (n.EVENT_CHART_DESTROYED = 'chartDestroyed'),
        (n.EVENT_TOOL_PANEL_VISIBLE_CHANGED = 'toolPanelVisibleChanged'),
        (n.EVENT_TOOL_PANEL_SIZE_CHANGED = 'toolPanelSizeChanged'),
        (n.EVENT_COLUMN_PANEL_ITEM_DRAG_START = 'columnPanelItemDragStart'),
        (n.EVENT_COLUMN_PANEL_ITEM_DRAG_END = 'columnPanelItemDragEnd'),
        (n.EVENT_MODEL_UPDATED = 'modelUpdated'),
        (n.EVENT_CUT_START = 'cutStart'),
        (n.EVENT_CUT_END = 'cutEnd'),
        (n.EVENT_PASTE_START = 'pasteStart'),
        (n.EVENT_PASTE_END = 'pasteEnd'),
        (n.EVENT_FILL_START = 'fillStart'),
        (n.EVENT_FILL_END = 'fillEnd'),
        (n.EVENT_RANGE_DELETE_START = 'rangeDeleteStart'),
        (n.EVENT_RANGE_DELETE_END = 'rangeDeleteEnd'),
        (n.EVENT_UNDO_STARTED = 'undoStarted'),
        (n.EVENT_UNDO_ENDED = 'undoEnded'),
        (n.EVENT_REDO_STARTED = 'redoStarted'),
        (n.EVENT_REDO_ENDED = 'redoEnded'),
        (n.EVENT_KEY_SHORTCUT_CHANGED_CELL_START = 'keyShortcutChangedCellStart'),
        (n.EVENT_KEY_SHORTCUT_CHANGED_CELL_END = 'keyShortcutChangedCellEnd'),
        (n.EVENT_CELL_CLICKED = 'cellClicked'),
        (n.EVENT_CELL_DOUBLE_CLICKED = 'cellDoubleClicked'),
        (n.EVENT_CELL_MOUSE_DOWN = 'cellMouseDown'),
        (n.EVENT_CELL_CONTEXT_MENU = 'cellContextMenu'),
        (n.EVENT_CELL_VALUE_CHANGED = 'cellValueChanged'),
        (n.EVENT_CELL_EDIT_REQUEST = 'cellEditRequest'),
        (n.EVENT_ROW_VALUE_CHANGED = 'rowValueChanged'),
        (n.EVENT_CELL_FOCUSED = 'cellFocused'),
        (n.EVENT_CELL_FOCUS_CLEARED = 'cellFocusCleared'),
        (n.EVENT_FULL_WIDTH_ROW_FOCUSED = 'fullWidthRowFocused'),
        (n.EVENT_ROW_SELECTED = 'rowSelected'),
        (n.EVENT_SELECTION_CHANGED = 'selectionChanged'),
        (n.EVENT_TOOLTIP_SHOW = 'tooltipShow'),
        (n.EVENT_TOOLTIP_HIDE = 'tooltipHide'),
        (n.EVENT_CELL_KEY_DOWN = 'cellKeyDown'),
        (n.EVENT_CELL_MOUSE_OVER = 'cellMouseOver'),
        (n.EVENT_CELL_MOUSE_OUT = 'cellMouseOut'),
        (n.EVENT_FILTER_CHANGED = 'filterChanged'),
        (n.EVENT_FILTER_MODIFIED = 'filterModified'),
        (n.EVENT_FILTER_OPENED = 'filterOpened'),
        (n.EVENT_ADVANCED_FILTER_BUILDER_VISIBLE_CHANGED = 'advancedFilterBuilderVisibleChanged'),
        (n.EVENT_SORT_CHANGED = 'sortChanged'),
        (n.EVENT_VIRTUAL_ROW_REMOVED = 'virtualRowRemoved'),
        (n.EVENT_ROW_CLICKED = 'rowClicked'),
        (n.EVENT_ROW_DOUBLE_CLICKED = 'rowDoubleClicked'),
        (n.EVENT_GRID_READY = 'gridReady'),
        (n.EVENT_GRID_PRE_DESTROYED = 'gridPreDestroyed'),
        (n.EVENT_GRID_SIZE_CHANGED = 'gridSizeChanged'),
        (n.EVENT_VIEWPORT_CHANGED = 'viewportChanged'),
        (n.EVENT_SCROLLBAR_WIDTH_CHANGED = 'scrollbarWidthChanged'),
        (n.EVENT_FIRST_DATA_RENDERED = 'firstDataRendered'),
        (n.EVENT_DRAG_STARTED = 'dragStarted'),
        (n.EVENT_DRAG_STOPPED = 'dragStopped'),
        (n.EVENT_CHECKBOX_CHANGED = 'checkboxChanged'),
        (n.EVENT_ROW_EDITING_STARTED = 'rowEditingStarted'),
        (n.EVENT_ROW_EDITING_STOPPED = 'rowEditingStopped'),
        (n.EVENT_CELL_EDITING_STARTED = 'cellEditingStarted'),
        (n.EVENT_CELL_EDITING_STOPPED = 'cellEditingStopped'),
        (n.EVENT_BODY_SCROLL = 'bodyScroll'),
        (n.EVENT_BODY_SCROLL_END = 'bodyScrollEnd'),
        (n.EVENT_HEIGHT_SCALE_CHANGED = 'heightScaleChanged'),
        (n.EVENT_PAGINATION_CHANGED = 'paginationChanged'),
        (n.EVENT_COMPONENT_STATE_CHANGED = 'componentStateChanged'),
        (n.EVENT_STORE_REFRESHED = 'storeRefreshed'),
        (n.EVENT_STATE_UPDATED = 'stateUpdated'),
        (n.EVENT_COLUMN_MENU_VISIBLE_CHANGED = 'columnMenuVisibleChanged'),
        (n.EVENT_BODY_HEIGHT_CHANGED = 'bodyHeightChanged'),
        (n.EVENT_COLUMN_CONTAINER_WIDTH_CHANGED = 'columnContainerWidthChanged'),
        (n.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED = 'displayedColumnsWidthChanged'),
        (n.EVENT_SCROLL_VISIBILITY_CHANGED = 'scrollVisibilityChanged'),
        (n.EVENT_COLUMN_HOVER_CHANGED = 'columnHoverChanged'),
        (n.EVENT_FLASH_CELLS = 'flashCells'),
        (n.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED = 'paginationPixelOffsetChanged'),
        (n.EVENT_DISPLAYED_ROWS_CHANGED = 'displayedRowsChanged'),
        (n.EVENT_LEFT_PINNED_WIDTH_CHANGED = 'leftPinnedWidthChanged'),
        (n.EVENT_RIGHT_PINNED_WIDTH_CHANGED = 'rightPinnedWidthChanged'),
        (n.EVENT_ROW_CONTAINER_HEIGHT_CHANGED = 'rowContainerHeightChanged'),
        (n.EVENT_HEADER_HEIGHT_CHANGED = 'headerHeightChanged'),
        (n.EVENT_COLUMN_HEADER_HEIGHT_CHANGED = 'columnHeaderHeightChanged'),
        (n.EVENT_ROW_DRAG_ENTER = 'rowDragEnter'),
        (n.EVENT_ROW_DRAG_MOVE = 'rowDragMove'),
        (n.EVENT_ROW_DRAG_LEAVE = 'rowDragLeave'),
        (n.EVENT_ROW_DRAG_END = 'rowDragEnd'),
        (n.EVENT_GRID_STYLES_CHANGED = 'gridStylesChanged'),
        (n.EVENT_POPUP_TO_FRONT = 'popupToFront'),
        (n.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST = 'columnRowGroupChangeRequest'),
        (n.EVENT_COLUMN_PIVOT_CHANGE_REQUEST = 'columnPivotChangeRequest'),
        (n.EVENT_COLUMN_VALUE_CHANGE_REQUEST = 'columnValueChangeRequest'),
        (n.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST = 'columnAggFuncChangeRequest'),
        (n.EVENT_STORE_UPDATED = 'storeUpdated'),
        (n.EVENT_FILTER_DESTROYED = 'filterDestroyed'),
        (n.EVENT_ROW_DATA_UPDATE_STARTED = 'rowDataUpdateStarted'),
        (n.EVENT_ROW_COUNT_READY = 'rowCountReady'),
        (n.EVENT_ADVANCED_FILTER_ENABLED_CHANGED = 'advancedFilterEnabledChanged'),
        (n.EVENT_DATA_TYPES_INFERRED = 'dataTypesInferred'),
        (n.EVENT_FIELD_VALUE_CHANGED = 'fieldValueChanged'),
        (n.EVENT_FIELD_PICKER_VALUE_SELECTED = 'fieldPickerValueSelected'),
        (n.EVENT_SIDE_BAR_UPDATED = 'sideBarUpdated'),
        n
      );
    })(),
    Pa = (function () {
      function n() {
        this.existingIds = {};
      }
      return (
        (n.prototype.getInstanceIdForKey = function (t) {
          var e = this.existingIds[t],
            r;
          return typeof e != 'number' ? (r = 0) : (r = e + 1), (this.existingIds[t] = r), r;
        }),
        n
      );
    })(),
    $c = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ln = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Er = 'ag-Grid-AutoColumn',
    Yc = (function (n) {
      $c(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.createAutoGroupColumns = function (e) {
          var r = this,
            o = [],
            i = this.gridOptionsService.get('treeData'),
            s = this.gridOptionsService.isGroupMultiAutoColumn();
          return (
            i &&
              s &&
              (console.warn(
                'AG Grid: you cannot mix groupDisplayType = "multipleColumns" with treeData, only one column can be used to display groups when doing tree data'
              ),
              (s = !1)),
            s
              ? e.forEach(function (a, l) {
                  o.push(r.createOneAutoGroupColumn(a, l));
                })
              : o.push(this.createOneAutoGroupColumn()),
            o
          );
        }),
        (t.prototype.updateAutoGroupColumns = function (e, r) {
          var o = this;
          e.forEach(function (i, s) {
            return o.updateOneAutoGroupColumn(i, s, r);
          });
        }),
        (t.prototype.createOneAutoGroupColumn = function (e, r) {
          var o;
          e ? (o = ''.concat(Er, '-').concat(e.getId())) : (o = Er);
          var i = this.createAutoGroupColDef(o, e, r);
          i.colId = o;
          var s = new J(i, null, o, !0);
          return this.context.createBean(s), s;
        }),
        (t.prototype.updateOneAutoGroupColumn = function (e, r, o) {
          var i = e.getColDef(),
            s = typeof i.showRowGroup == 'string' ? i.showRowGroup : void 0,
            a = s != null ? this.columnModel.getPrimaryColumn(s) : void 0,
            l = this.createAutoGroupColDef(e.getId(), a ?? void 0, r);
          e.setColDef(l, null, o), this.columnFactory.applyColumnState(e, l, o);
        }),
        (t.prototype.createAutoGroupColDef = function (e, r, o) {
          var i = this.createBaseColDef(r),
            s = this.gridOptionsService.get('autoGroupColumnDef');
          if (
            (Ve(i, s),
            (i = this.columnFactory.addColumnDefaultAndTypes(i, e)),
            !this.gridOptionsService.get('treeData'))
          ) {
            var a =
              H(i.field) &&
              H(i.valueGetter) &&
              H(i.filterValueGetter) &&
              i.filter !== 'agGroupColumnFilter';
            a && (i.filter = !1);
          }
          o && o > 0 && (i.headerCheckboxSelection = !1);
          var l = this.gridOptionsService.isColumnsSortingCoupledToGroup(),
            u = i.valueGetter || i.field != null;
          return l && !u && ((i.sortIndex = void 0), (i.initialSort = void 0)), i;
        }),
        (t.prototype.createBaseColDef = function (e) {
          var r = this.gridOptionsService.get('autoGroupColumnDef'),
            o = this.localeService.getLocaleTextFunc(),
            i = { headerName: o('group', 'Group') },
            s = r && (r.cellRenderer || r.cellRendererSelector);
          if ((s || (i.cellRenderer = 'agGroupCellRenderer'), e)) {
            var a = e.getColDef();
            Object.assign(i, {
              headerName: this.columnModel.getDisplayNameForColumn(e, 'header'),
              headerValueGetter: a.headerValueGetter,
            }),
              a.cellRenderer &&
                Object.assign(i, {
                  cellRendererParams: {
                    innerRenderer: a.cellRenderer,
                    innerRendererParams: a.cellRendererParams,
                  },
                }),
              (i.showRowGroup = e.getColId());
          } else i.showRowGroup = !0;
          return i;
        }),
        ln([v('columnModel')], t.prototype, 'columnModel', void 0),
        ln([v('columnFactory')], t.prototype, 'columnFactory', void 0),
        (t = ln([x('autoGroupColService')], t)),
        t
      );
    })(D),
    qc = /[&<>"']/g,
    Qc = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;' };
  function Xc(n) {
    var t = String.fromCharCode;
    function e(p) {
      var d = [];
      if (!p) return [];
      for (var h = p.length, f = 0, y, m; f < h; )
        (y = p.charCodeAt(f++)),
          y >= 55296 && y <= 56319 && f < h
            ? ((m = p.charCodeAt(f++)),
              (m & 64512) == 56320
                ? d.push(((y & 1023) << 10) + (m & 1023) + 65536)
                : (d.push(y), f--))
            : d.push(y);
      return d;
    }
    function r(p) {
      if (p >= 55296 && p <= 57343)
        throw Error('Lone surrogate U+' + p.toString(16).toUpperCase() + ' is not a scalar value');
    }
    function o(p, d) {
      return t(((p >> d) & 63) | 128);
    }
    function i(p) {
      if (p >= 0 && p <= 31 && p !== 10) {
        var d = p.toString(16).toUpperCase(),
          h = d.padStart(4, '0');
        return '_x'.concat(h, '_');
      }
      if (!(p & 4294967168)) return t(p);
      var f = '';
      return (
        p & 4294965248
          ? p & 4294901760
            ? p & 4292870144 || ((f = t(((p >> 18) & 7) | 240)), (f += o(p, 12)), (f += o(p, 6)))
            : (r(p), (f = t(((p >> 12) & 15) | 224)), (f += o(p, 6)))
          : (f = t(((p >> 6) & 31) | 192)),
        (f += t((p & 63) | 128)),
        f
      );
    }
    for (var s = e(n), a = s.length, l = -1, u, c = ''; ++l < a; ) (u = s[l]), (c += i(u));
    return c;
  }
  function Jc(n) {
    return n[0].toUpperCase() + n.substring(1).toLowerCase();
  }
  function ae(n, t) {
    if (n == null) return null;
    var e = n.toString().toString();
    return t
      ? e
      : e.replace(qc, function (r) {
          return Qc[r];
        });
  }
  function Da(n) {
    if (!n || n == null) return null;
    var t = /([a-z])([A-Z])/g,
      e = /([A-Z]+)([A-Z])([a-z])/g,
      r = n.replace(t, '$1 $2').replace(e, '$1 $2$3').replace(/\./g, ' ').split(' ');
    return r
      .map(function (o) {
        return o.substring(0, 1).toUpperCase() + (o.length > 1 ? o.substring(1, o.length) : '');
      })
      .join(' ');
  }
  function Aa(n) {
    return n.replace(/[A-Z]/g, function (t) {
      return '-'.concat(t.toLocaleLowerCase());
    });
  }
  var Zc = Object.freeze({
    __proto__: null,
    utf8_encode: Xc,
    capitalise: Jc,
    escapeString: ae,
    camelCaseToHumanText: Da,
    camelCaseToHyphenated: Aa,
  });
  function Nt(n) {
    var t = new Map();
    return (
      n.forEach(function (e) {
        return t.set(e[0], e[1]);
      }),
      t
    );
  }
  function ep(n, t) {
    var e = new Map();
    return (
      n.forEach(function (r) {
        return e.set(t(r), r);
      }),
      e
    );
  }
  function tp(n) {
    var t = [];
    return (
      n.forEach(function (e, r) {
        return t.push(r);
      }),
      t
    );
  }
  var rp = Object.freeze({ __proto__: null, convertToMap: Nt, mapById: ep, keys: tp }),
    op = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ve = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ip = function (n, t) {
      return function (e, r) {
        t(e, r, n);
      };
    },
    np = function (n, t) {
      var e = {};
      for (var r in n)
        Object.prototype.hasOwnProperty.call(n, r) && t.indexOf(r) < 0 && (e[r] = n[r]);
      if (n != null && typeof Object.getOwnPropertySymbols == 'function')
        for (var o = 0, r = Object.getOwnPropertySymbols(n); o < r.length; o++)
          t.indexOf(r[o]) < 0 &&
            Object.prototype.propertyIsEnumerable.call(n, r[o]) &&
            (e[r[o]] = n[r[o]]);
      return e;
    },
    Be = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    ke = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    un = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    },
    sp = (function (n) {
      op(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.primaryHeaderRowCount = 0),
          (e.secondaryHeaderRowCount = 0),
          (e.gridHeaderRowCount = 0),
          (e.displayedColumnsLeft = []),
          (e.displayedColumnsRight = []),
          (e.displayedColumnsCenter = []),
          (e.displayedColumns = []),
          (e.displayedColumnsAndGroupsMap = {}),
          (e.viewportColumns = []),
          (e.viewportColumnsHash = ''),
          (e.headerViewportColumns = []),
          (e.viewportColumnsCenter = []),
          (e.headerViewportColumnsCenter = []),
          (e.viewportRowLeft = {}),
          (e.viewportRowRight = {}),
          (e.viewportRowCenter = {}),
          (e.autoHeightActiveAtLeastOnce = !1),
          (e.rowGroupColumns = []),
          (e.valueColumns = []),
          (e.pivotColumns = []),
          (e.ready = !1),
          (e.changeEventsDispatching = !1),
          (e.autoGroupsNeedBuilding = !1),
          (e.forceRecreateAutoGroups = !1),
          (e.pivotMode = !1),
          (e.bodyWidth = 0),
          (e.leftWidth = 0),
          (e.rightWidth = 0),
          (e.bodyWidthDirty = !0),
          (e.shouldQueueResizeOperations = !1),
          (e.resizeOperationQueue = []),
          e
        );
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          this.suppressColumnVirtualisation = this.gridOptionsService.get(
            'suppressColumnVirtualisation'
          );
          var r = this.gridOptionsService.get('pivotMode');
          this.isPivotSettingAllowed(r) && (this.pivotMode = r),
            this.addManagedPropertyListeners(
              ['groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents'],
              function (o) {
                return e.buildAutoGroupColumns(_r(o.source));
              }
            ),
            this.addManagedPropertyListener('autoGroupColumnDef', function (o) {
              return e.onAutoGroupColumnDefChanged(_r(o.source));
            }),
            this.addManagedPropertyListeners(
              ['defaultColDef', 'columnTypes', 'suppressFieldDotNotation'],
              function (o) {
                return e.onSharedColDefChanged(_r(o.source));
              }
            ),
            this.addManagedPropertyListener('pivotMode', function (o) {
              return e.setPivotMode(e.gridOptionsService.get('pivotMode'), _r(o.source));
            }),
            this.addManagedListener(this.eventService, g.EVENT_FIRST_DATA_RENDERED, function () {
              return e.onFirstDataRendered();
            });
        }),
        (t.prototype.buildAutoGroupColumns = function (e) {
          this.columnDefs &&
            ((this.autoGroupsNeedBuilding = !0),
            (this.forceRecreateAutoGroups = !0),
            this.updateGridColumns(),
            this.updateDisplayedColumns(e));
        }),
        (t.prototype.onAutoGroupColumnDefChanged = function (e) {
          this.groupAutoColumns &&
            this.autoGroupColService.updateAutoGroupColumns(this.groupAutoColumns, e);
        }),
        (t.prototype.onSharedColDefChanged = function (e) {
          this.gridColumns &&
            (this.groupAutoColumns &&
              this.autoGroupColService.updateAutoGroupColumns(this.groupAutoColumns, e),
            this.createColumnsFromColumnDefs(!0, e));
        }),
        (t.prototype.setColumnDefs = function (e, r) {
          var o = !!this.columnDefs;
          (this.columnDefs = e), this.createColumnsFromColumnDefs(o, r);
        }),
        (t.prototype.recreateColumnDefs = function (e) {
          this.onSharedColDefChanged(e);
        }),
        (t.prototype.destroyOldColumns = function (e, r) {
          var o = {};
          if (e) {
            this.columnUtils.depthFirstOriginalTreeSearch(null, e, function (s) {
              o[s.getInstanceId()] = s;
            }),
              r &&
                this.columnUtils.depthFirstOriginalTreeSearch(null, r, function (s) {
                  o[s.getInstanceId()] = null;
                });
            var i = Object.values(o).filter(function (s) {
              return s != null;
            });
            this.destroyBeans(i);
          }
        }),
        (t.prototype.destroyColumns = function () {
          this.destroyOldColumns(this.primaryColumnTree),
            this.destroyOldColumns(this.secondaryBalancedTree),
            this.destroyOldColumns(this.groupAutoColsBalancedTree);
        }),
        (t.prototype.createColumnsFromColumnDefs = function (e, r) {
          var o = this,
            i = e ? this.compareColumnStatesAndDispatchEvents(r) : void 0;
          this.valueCache.expire(), (this.autoGroupsNeedBuilding = !0);
          var s = this.primaryColumns,
            a = this.primaryColumnTree,
            l = this.columnFactory.createColumnTree(this.columnDefs, !0, a, r);
          this.destroyOldColumns(this.primaryColumnTree, l.columnTree),
            (this.primaryColumnTree = l.columnTree),
            (this.primaryHeaderRowCount = l.treeDept + 1),
            (this.primaryColumns = this.getColumnsFromTree(this.primaryColumnTree)),
            (this.primaryColumnsMap = {}),
            this.primaryColumns.forEach(function (p) {
              return (o.primaryColumnsMap[p.getId()] = p);
            }),
            this.extractRowGroupColumns(r, s),
            this.extractPivotColumns(r, s),
            this.extractValueColumns(r, s),
            (this.ready = !0);
          var u = this.gridColsArePrimary === void 0,
            c = this.gridColsArePrimary || u || this.autoGroupsNeedBuilding;
          c &&
            (this.updateGridColumns(),
            e &&
              this.gridColsArePrimary &&
              !this.gridOptionsService.get('maintainColumnOrder') &&
              this.orderGridColumnsLikePrimary(),
            this.updateDisplayedColumns(r),
            this.checkViewportColumns()),
            this.dispatchEverythingChanged(r),
            (this.changeEventsDispatching = !0),
            i && i(),
            (this.changeEventsDispatching = !1),
            this.dispatchNewColumnsLoaded(r);
        }),
        (t.prototype.shouldRowModelIgnoreRefresh = function () {
          return this.changeEventsDispatching;
        }),
        (t.prototype.dispatchNewColumnsLoaded = function (e) {
          var r = { type: g.EVENT_NEW_COLUMNS_LOADED, source: e };
          this.eventService.dispatchEvent(r), e === 'gridInitializing' && this.onColumnsReady();
        }),
        (t.prototype.dispatchEverythingChanged = function (e) {
          var r = { type: g.EVENT_COLUMN_EVERYTHING_CHANGED, source: e };
          this.eventService.dispatchEvent(r);
        }),
        (t.prototype.orderGridColumnsLikePrimary = function () {
          var e = this,
            r = this.primaryColumns;
          if (r) {
            var o = r.filter(function (s) {
                return e.gridColumns.indexOf(s) >= 0;
              }),
              i = this.gridColumns.filter(function (s) {
                return o.indexOf(s) < 0;
              });
            (this.gridColumns = ke(ke([], Be(i), !1), Be(o), !1)),
              (this.gridColumns = this.placeLockedColumns(this.gridColumns));
          }
        }),
        (t.prototype.getAllDisplayedAutoHeightCols = function () {
          return this.displayedAutoHeightCols;
        }),
        (t.prototype.setViewport = function () {
          this.gridOptionsService.get('enableRtl')
            ? ((this.viewportLeft = this.bodyWidth - this.scrollPosition - this.scrollWidth),
              (this.viewportRight = this.bodyWidth - this.scrollPosition))
            : ((this.viewportLeft = this.scrollPosition),
              (this.viewportRight = this.scrollWidth + this.scrollPosition));
        }),
        (t.prototype.getDisplayedColumnsStartingAt = function (e) {
          for (var r = e, o = []; r != null; ) o.push(r), (r = this.getDisplayedColAfter(r));
          return o;
        }),
        (t.prototype.checkViewportColumns = function (e) {
          if ((e === void 0 && (e = !1), this.displayedColumnsCenter != null)) {
            var r = this.extractViewport();
            if (r) {
              var o = { type: g.EVENT_VIRTUAL_COLUMNS_CHANGED, afterScroll: e };
              this.eventService.dispatchEvent(o);
            }
          }
        }),
        (t.prototype.setViewportPosition = function (e, r, o) {
          o === void 0 && (o = !1),
            (e !== this.scrollWidth || r !== this.scrollPosition || this.bodyWidthDirty) &&
              ((this.scrollWidth = e),
              (this.scrollPosition = r),
              (this.bodyWidthDirty = !0),
              this.setViewport(),
              this.ready && this.checkViewportColumns(o));
        }),
        (t.prototype.isPivotMode = function () {
          return this.pivotMode;
        }),
        (t.prototype.isPivotSettingAllowed = function (e) {
          return e && this.gridOptionsService.get('treeData')
            ? (console.warn(
                "AG Grid: Pivot mode not available in conjunction Tree Data i.e. 'gridOptions.treeData: true'"
              ),
              !1)
            : !0;
        }),
        (t.prototype.setPivotMode = function (e, r) {
          if (
            !(e === this.pivotMode || !this.isPivotSettingAllowed(this.pivotMode)) &&
            ((this.pivotMode = e), !!this.gridColumns)
          ) {
            (this.autoGroupsNeedBuilding = !0),
              this.updateGridColumns(),
              this.updateDisplayedColumns(r);
            var o = { type: g.EVENT_COLUMN_PIVOT_MODE_CHANGED };
            this.eventService.dispatchEvent(o);
          }
        }),
        (t.prototype.getSecondaryPivotColumn = function (e, r) {
          if (H(this.secondaryColumns)) return null;
          var o = this.getPrimaryColumn(r),
            i = null;
          return (
            this.secondaryColumns.forEach(function (s) {
              var a = s.getColDef().pivotKeys,
                l = s.getColDef().pivotValueColumn,
                u = Tt(a, e),
                c = l === o;
              u && c && (i = s);
            }),
            i
          );
        }),
        (t.prototype.setBeans = function (e) {
          this.logger = e.create('columnModel');
        }),
        (t.prototype.setFirstRightAndLastLeftPinned = function (e) {
          var r, o;
          this.gridOptionsService.get('enableRtl')
            ? ((r = this.displayedColumnsLeft ? this.displayedColumnsLeft[0] : null),
              (o = this.displayedColumnsRight ? q(this.displayedColumnsRight) : null))
            : ((r = this.displayedColumnsLeft ? q(this.displayedColumnsLeft) : null),
              (o = this.displayedColumnsRight ? this.displayedColumnsRight[0] : null)),
            this.gridColumns.forEach(function (i) {
              i.setLastLeftPinned(i === r, e), i.setFirstRightPinned(i === o, e);
            });
        }),
        (t.prototype.autoSizeColumns = function (e) {
          var r = this;
          if (this.shouldQueueResizeOperations) {
            this.resizeOperationQueue.push(function () {
              return r.autoSizeColumns(e);
            });
            return;
          }
          var o = e.columns,
            i = e.skipHeader,
            s = e.skipHeaderGroups,
            a = e.stopAtGroup,
            l = e.source,
            u = l === void 0 ? 'api' : l;
          this.animationFrameService.flushAllFrames();
          for (
            var c = [],
              p = -1,
              d = i ?? this.gridOptionsService.get('skipHeaderOnAutoSize'),
              h = s ?? d;
            p !== 0;

          )
            (p = 0),
              this.actionOnGridColumns(
                o,
                function (f) {
                  if (c.indexOf(f) >= 0) return !1;
                  var y = r.autoWidthCalculator.getPreferredWidthForColumn(f, d);
                  if (y > 0) {
                    var m = r.normaliseColumnWidth(f, y);
                    f.setActualWidth(m, u), c.push(f), p++;
                  }
                  return !0;
                },
                u
              );
          h || this.autoSizeColumnGroupsByColumns(o, u, a),
            this.dispatchColumnResizedEvent(c, !0, 'autosizeColumns');
        }),
        (t.prototype.dispatchColumnResizedEvent = function (e, r, o, i) {
          if ((i === void 0 && (i = null), e && e.length)) {
            var s = {
              type: g.EVENT_COLUMN_RESIZED,
              columns: e,
              column: e.length === 1 ? e[0] : null,
              flexColumns: i,
              finished: r,
              source: o,
            };
            this.eventService.dispatchEvent(s);
          }
        }),
        (t.prototype.dispatchColumnChangedEvent = function (e, r, o) {
          var i = { type: e, columns: r, column: r && r.length == 1 ? r[0] : null, source: o };
          this.eventService.dispatchEvent(i);
        }),
        (t.prototype.dispatchColumnMovedEvent = function (e) {
          var r = e.movedColumns,
            o = e.source,
            i = e.toIndex,
            s = e.finished,
            a = {
              type: g.EVENT_COLUMN_MOVED,
              columns: r,
              column: r && r.length === 1 ? r[0] : null,
              toIndex: i,
              finished: s,
              source: o,
            };
          this.eventService.dispatchEvent(a);
        }),
        (t.prototype.dispatchColumnPinnedEvent = function (e, r) {
          if (e.length) {
            var o = e.length === 1 ? e[0] : null,
              i = this.getCommonValue(e, function (a) {
                return a.getPinned();
              }),
              s = {
                type: g.EVENT_COLUMN_PINNED,
                pinned: i ?? null,
                columns: e,
                column: o,
                source: r,
              };
            this.eventService.dispatchEvent(s);
          }
        }),
        (t.prototype.dispatchColumnVisibleEvent = function (e, r) {
          if (e.length) {
            var o = e.length === 1 ? e[0] : null,
              i = this.getCommonValue(e, function (a) {
                return a.isVisible();
              }),
              s = { type: g.EVENT_COLUMN_VISIBLE, visible: i, columns: e, column: o, source: r };
            this.eventService.dispatchEvent(s);
          }
        }),
        (t.prototype.autoSizeColumn = function (e, r, o) {
          e &&
            this.autoSizeColumns({ columns: [e], skipHeader: o, skipHeaderGroups: !0, source: r });
        }),
        (t.prototype.autoSizeColumnGroupsByColumns = function (e, r, o) {
          var i,
            s,
            a,
            l,
            u = new Set(),
            c = this.getGridColumns(e);
          c.forEach(function (E) {
            for (var S = E.getParent(); S && S != o; )
              S.isPadding() || u.add(S), (S = S.getParent());
          });
          var p,
            d = [];
          try {
            for (var h = un(u), f = h.next(); !f.done; f = h.next()) {
              var y = f.value;
              try {
                for (
                  var m = ((a = void 0), un(this.ctrlsService.getHeaderRowContainerCtrls())),
                    C = m.next();
                  !C.done;
                  C = m.next()
                ) {
                  var w = C.value;
                  if (((p = w.getHeaderCtrlForColumn(y)), p)) break;
                }
              } catch (E) {
                a = { error: E };
              } finally {
                try {
                  C && !C.done && (l = m.return) && l.call(m);
                } finally {
                  if (a) throw a.error;
                }
              }
              p && p.resizeLeafColumnsToFit(r);
            }
          } catch (E) {
            i = { error: E };
          } finally {
            try {
              f && !f.done && (s = h.return) && s.call(h);
            } finally {
              if (i) throw i.error;
            }
          }
          return d;
        }),
        (t.prototype.autoSizeAllColumns = function (e, r) {
          var o = this;
          if (this.shouldQueueResizeOperations) {
            this.resizeOperationQueue.push(function () {
              return o.autoSizeAllColumns(e, r);
            });
            return;
          }
          var i = this.getAllDisplayedColumns();
          this.autoSizeColumns({ columns: i, skipHeader: r, source: e });
        }),
        (t.prototype.getColumnsFromTree = function (e) {
          var r = [],
            o = function (i) {
              for (var s = 0; s < i.length; s++) {
                var a = i[s];
                a instanceof J ? r.push(a) : a instanceof ie && o(a.getChildren());
              }
            };
          return o(e), r;
        }),
        (t.prototype.getAllDisplayedTrees = function () {
          return this.displayedTreeLeft && this.displayedTreeRight && this.displayedTreeCentre
            ? this.displayedTreeLeft
                .concat(this.displayedTreeCentre)
                .concat(this.displayedTreeRight)
            : null;
        }),
        (t.prototype.getPrimaryColumnTree = function () {
          return this.primaryColumnTree;
        }),
        (t.prototype.getHeaderRowCount = function () {
          return this.gridHeaderRowCount;
        }),
        (t.prototype.getDisplayedTreeLeft = function () {
          return this.displayedTreeLeft;
        }),
        (t.prototype.getDisplayedTreeRight = function () {
          return this.displayedTreeRight;
        }),
        (t.prototype.getDisplayedTreeCentre = function () {
          return this.displayedTreeCentre;
        }),
        (t.prototype.isColumnDisplayed = function (e) {
          return this.getAllDisplayedColumns().indexOf(e) >= 0;
        }),
        (t.prototype.getAllDisplayedColumns = function () {
          return this.displayedColumns;
        }),
        (t.prototype.getViewportColumns = function () {
          return this.viewportColumns;
        }),
        (t.prototype.getDisplayedLeftColumnsForRow = function (e) {
          return this.colSpanActive
            ? this.getDisplayedColumnsForRow(e, this.displayedColumnsLeft)
            : this.displayedColumnsLeft;
        }),
        (t.prototype.getDisplayedRightColumnsForRow = function (e) {
          return this.colSpanActive
            ? this.getDisplayedColumnsForRow(e, this.displayedColumnsRight)
            : this.displayedColumnsRight;
        }),
        (t.prototype.isColSpanActive = function () {
          return this.colSpanActive;
        }),
        (t.prototype.getDisplayedColumnsForRow = function (e, r, o, i) {
          for (
            var s = [],
              a = null,
              l = function (p) {
                var d = r[p],
                  h = r.length - p,
                  f = Math.min(d.getColSpan(e), h),
                  y = [d];
                if (f > 1) {
                  for (var m = f - 1, C = 1; C <= m; C++) y.push(r[p + C]);
                  p += m;
                }
                var w;
                if (
                  (o
                    ? ((w = !1),
                      y.forEach(function (S) {
                        o(S) && (w = !0);
                      }))
                    : (w = !0),
                  w)
                ) {
                  if (s.length === 0 && a) {
                    var E = i ? i(d) : !1;
                    E && s.push(a);
                  }
                  s.push(d);
                }
                (a = d), (u = p);
              },
              u,
              c = 0;
            c < r.length;
            c++
          )
            l(c), (c = u);
          return s;
        }),
        (t.prototype.getViewportCenterColumnsForRow = function (e) {
          var r = this;
          if (!this.colSpanActive) return this.viewportColumnsCenter;
          var o = function (s) {
              var a = s.getLeft();
              return P(a) && a > r.viewportLeft;
            },
            i = this.isColumnVirtualisationSuppressed()
              ? null
              : this.isColumnInRowViewport.bind(this);
          return this.getDisplayedColumnsForRow(e, this.displayedColumnsCenter, i, o);
        }),
        (t.prototype.isColumnAtEdge = function (e, r) {
          var o = this.getAllDisplayedColumns();
          if (!o.length) return !1;
          var i = r === 'first',
            s;
          if (e instanceof se) {
            var a = e.getDisplayedLeafColumns();
            if (!a.length) return !1;
            s = i ? a[0] : q(a);
          } else s = e;
          return (i ? o[0] : q(o)) === s;
        }),
        (t.prototype.getAriaColumnIndex = function (e) {
          var r;
          return (
            e instanceof se ? (r = e.getLeafColumns()[0]) : (r = e),
            this.ariaOrderColumns.indexOf(r) + 1
          );
        }),
        (t.prototype.isColumnInHeaderViewport = function (e) {
          return e.isAutoHeaderHeight() ? !0 : this.isColumnInRowViewport(e);
        }),
        (t.prototype.isColumnInRowViewport = function (e) {
          if (e.isAutoHeight()) return !0;
          var r = e.getLeft() || 0,
            o = r + e.getActualWidth(),
            i = this.viewportLeft - 200,
            s = this.viewportRight + 200,
            a = r < i && o < i,
            l = r > s && o > s;
          return !a && !l;
        }),
        (t.prototype.getDisplayedColumnsLeftWidth = function () {
          return this.getWidthOfColsInList(this.displayedColumnsLeft);
        }),
        (t.prototype.getDisplayedColumnsRightWidth = function () {
          return this.getWidthOfColsInList(this.displayedColumnsRight);
        }),
        (t.prototype.updatePrimaryColumnList = function (e, r, o, i, s, a) {
          var l = this;
          if (!(!e || Ge(e))) {
            var u = !1;
            if (
              (e.forEach(function (p) {
                if (p) {
                  var d = l.getPrimaryColumn(p);
                  if (d) {
                    if (o) {
                      if (r.indexOf(d) >= 0) return;
                      r.push(d);
                    } else {
                      if (r.indexOf(d) < 0) return;
                      Ee(r, d);
                    }
                    i(d), (u = !0);
                  }
                }
              }),
              !!u)
            ) {
              this.autoGroupsNeedBuilding && this.updateGridColumns(),
                this.updateDisplayedColumns(a);
              var c = { type: s, columns: r, column: r.length === 1 ? r[0] : null, source: a };
              this.eventService.dispatchEvent(c);
            }
          }
        }),
        (t.prototype.setRowGroupColumns = function (e, r) {
          (this.autoGroupsNeedBuilding = !0),
            this.setPrimaryColumnList(
              e,
              this.rowGroupColumns,
              g.EVENT_COLUMN_ROW_GROUP_CHANGED,
              !0,
              this.setRowGroupActive.bind(this),
              r
            );
        }),
        (t.prototype.setRowGroupActive = function (e, r, o) {
          e !== r.isRowGroupActive() &&
            (r.setRowGroupActive(e, o),
            e &&
              !this.gridOptionsService.get('suppressRowGroupHidesColumns') &&
              this.setColumnsVisible([r], !1, o),
            !e &&
              !this.gridOptionsService.get('suppressMakeColumnVisibleAfterUnGroup') &&
              this.setColumnsVisible([r], !0, o));
        }),
        (t.prototype.addRowGroupColumns = function (e, r) {
          (this.autoGroupsNeedBuilding = !0),
            this.updatePrimaryColumnList(
              e,
              this.rowGroupColumns,
              !0,
              this.setRowGroupActive.bind(this, !0),
              g.EVENT_COLUMN_ROW_GROUP_CHANGED,
              r
            );
        }),
        (t.prototype.removeRowGroupColumns = function (e, r) {
          (this.autoGroupsNeedBuilding = !0),
            this.updatePrimaryColumnList(
              e,
              this.rowGroupColumns,
              !1,
              this.setRowGroupActive.bind(this, !1),
              g.EVENT_COLUMN_ROW_GROUP_CHANGED,
              r
            );
        }),
        (t.prototype.addPivotColumns = function (e, r) {
          this.updatePrimaryColumnList(
            e,
            this.pivotColumns,
            !0,
            function (o) {
              return o.setPivotActive(!0, r);
            },
            g.EVENT_COLUMN_PIVOT_CHANGED,
            r
          );
        }),
        (t.prototype.setPivotColumns = function (e, r) {
          this.setPrimaryColumnList(
            e,
            this.pivotColumns,
            g.EVENT_COLUMN_PIVOT_CHANGED,
            !0,
            function (o, i) {
              i.setPivotActive(o, r);
            },
            r
          );
        }),
        (t.prototype.removePivotColumns = function (e, r) {
          this.updatePrimaryColumnList(
            e,
            this.pivotColumns,
            !1,
            function (o) {
              return o.setPivotActive(!1, r);
            },
            g.EVENT_COLUMN_PIVOT_CHANGED,
            r
          );
        }),
        (t.prototype.setPrimaryColumnList = function (e, r, o, i, s, a) {
          var l = this;
          if (this.gridColumns) {
            var u = new Map();
            r.forEach(function (c, p) {
              return u.set(c, p);
            }),
              (r.length = 0),
              P(e) &&
                e.forEach(function (c) {
                  var p = l.getPrimaryColumn(c);
                  p && r.push(p);
                }),
              r.forEach(function (c, p) {
                var d = u.get(c);
                if (d === void 0) {
                  u.set(c, 0);
                  return;
                }
                (i && d !== p) || u.delete(c);
              }),
              (this.primaryColumns || []).forEach(function (c) {
                var p = r.indexOf(c) >= 0;
                s(p, c);
              }),
              this.autoGroupsNeedBuilding && this.updateGridColumns(),
              this.updateDisplayedColumns(a),
              this.dispatchColumnChangedEvent(o, ke([], Be(u.keys()), !1), a);
          }
        }),
        (t.prototype.setValueColumns = function (e, r) {
          this.setPrimaryColumnList(
            e,
            this.valueColumns,
            g.EVENT_COLUMN_VALUE_CHANGED,
            !1,
            this.setValueActive.bind(this),
            r
          );
        }),
        (t.prototype.setValueActive = function (e, r, o) {
          if (e !== r.isValueActive() && (r.setValueActive(e, o), e && !r.getAggFunc())) {
            var i = this.aggFuncService.getDefaultAggFunc(r);
            r.setAggFunc(i);
          }
        }),
        (t.prototype.addValueColumns = function (e, r) {
          this.updatePrimaryColumnList(
            e,
            this.valueColumns,
            !0,
            this.setValueActive.bind(this, !0),
            g.EVENT_COLUMN_VALUE_CHANGED,
            r
          );
        }),
        (t.prototype.removeValueColumns = function (e, r) {
          this.updatePrimaryColumnList(
            e,
            this.valueColumns,
            !1,
            this.setValueActive.bind(this, !1),
            g.EVENT_COLUMN_VALUE_CHANGED,
            r
          );
        }),
        (t.prototype.normaliseColumnWidth = function (e, r) {
          var o = e.getMinWidth();
          P(o) && r < o && (r = o);
          var i = e.getMaxWidth();
          return P(i) && e.isGreaterThanMax(r) && (r = i), r;
        }),
        (t.prototype.getPrimaryOrGridColumn = function (e) {
          var r = this.getPrimaryColumn(e);
          return r || this.getGridColumn(e);
        }),
        (t.prototype.setColumnWidths = function (e, r, o, i) {
          var s = this,
            a = [];
          e.forEach(function (l) {
            var u = s.getPrimaryOrGridColumn(l.key);
            if (u) {
              a.push({ width: l.newWidth, ratios: [1], columns: [u] });
              var c = s.gridOptionsService.get('colResizeDefault') === 'shift';
              if ((c && (r = !r), r)) {
                var p = s.getDisplayedColAfter(u);
                if (!p) return;
                var d = u.getActualWidth() - l.newWidth,
                  h = p.getActualWidth() + d;
                a.push({ width: h, ratios: [1], columns: [p] });
              }
            }
          }),
            a.length !== 0 && this.resizeColumnSets({ resizeSets: a, finished: o, source: i });
        }),
        (t.prototype.checkMinAndMaxWidthsForSet = function (e) {
          var r = e.columns,
            o = e.width,
            i = 0,
            s = 0,
            a = !0;
          r.forEach(function (c) {
            var p = c.getMinWidth();
            i += p || 0;
            var d = c.getMaxWidth();
            P(d) && d > 0 ? (s += d) : (a = !1);
          });
          var l = o >= i,
            u = !a || o <= s;
          return l && u;
        }),
        (t.prototype.resizeColumnSets = function (e) {
          var r = this,
            o = e.resizeSets,
            i = e.finished,
            s = e.source,
            a =
              !o ||
              o.every(function (f) {
                return r.checkMinAndMaxWidthsForSet(f);
              });
          if (!a) {
            if (i) {
              var l = o && o.length > 0 ? o[0].columns : null;
              this.dispatchColumnResizedEvent(l, i, s);
            }
            return;
          }
          var u = [],
            c = [];
          o.forEach(function (f) {
            var y = f.width,
              m = f.columns,
              C = f.ratios,
              w = {},
              E = {};
            m.forEach(function (A) {
              return c.push(A);
            });
            for (
              var S = !0,
                R = 0,
                O = function () {
                  if ((R++, R > 1e3))
                    return console.error('AG Grid: infinite loop in resizeColumnSets'), 'break';
                  S = !1;
                  var A = [],
                    M = 0,
                    N = y;
                  m.forEach(function (W, ee) {
                    var oe = E[W.getId()];
                    if (oe) N -= w[W.getId()];
                    else {
                      A.push(W);
                      var Z = C[ee];
                      M += Z;
                    }
                  });
                  var I = 1 / M;
                  A.forEach(function (W, ee) {
                    var oe = ee === A.length - 1,
                      Z;
                    oe ? (Z = N) : ((Z = Math.round(C[ee] * y * I)), (N -= Z));
                    var te = W.getMinWidth(),
                      Q = W.getMaxWidth();
                    P(te) && Z < te
                      ? ((Z = te), (E[W.getId()] = !0), (S = !0))
                      : P(Q) && Q > 0 && Z > Q && ((Z = Q), (E[W.getId()] = !0), (S = !0)),
                      (w[W.getId()] = Z);
                  });
                };
              S;

            ) {
              var b = O();
              if (b === 'break') break;
            }
            m.forEach(function (A) {
              var M = w[A.getId()],
                N = A.getActualWidth();
              N !== M && (A.setActualWidth(M, s), u.push(A));
            });
          });
          var p = u.length > 0,
            d = [];
          p &&
            ((d = this.refreshFlexedColumns({ resizingCols: c, skipSetLeft: !0 })),
            this.setLeftValues(s),
            this.updateBodyWidths(),
            this.checkViewportColumns());
          var h = c.concat(d);
          (p || i) && this.dispatchColumnResizedEvent(h, i, s, d);
        }),
        (t.prototype.setColumnAggFunc = function (e, r, o) {
          if (e) {
            var i = this.getPrimaryColumn(e);
            i &&
              (i.setAggFunc(r),
              this.dispatchColumnChangedEvent(g.EVENT_COLUMN_VALUE_CHANGED, [i], o));
          }
        }),
        (t.prototype.moveRowGroupColumn = function (e, r, o) {
          if (!this.isRowGroupEmpty()) {
            var i = this.rowGroupColumns[e],
              s = this.rowGroupColumns.slice(e, r);
            this.rowGroupColumns.splice(e, 1), this.rowGroupColumns.splice(r, 0, i);
            var a = {
              type: g.EVENT_COLUMN_ROW_GROUP_CHANGED,
              columns: s,
              column: s.length === 1 ? s[0] : null,
              source: o,
            };
            this.eventService.dispatchEvent(a);
          }
        }),
        (t.prototype.moveColumns = function (e, r, o, i) {
          if ((i === void 0 && (i = !0), !!this.gridColumns)) {
            if ((this.columnAnimationService.start(), r > this.gridColumns.length - e.length)) {
              console.warn('AG Grid: tried to insert columns in invalid location, toIndex = ' + r),
                console.warn(
                  'AG Grid: remember that you should not count the moving columns when calculating the new index'
                );
              return;
            }
            var s = this.getGridColumns(e),
              a = !this.doesMovePassRules(s, r);
            a ||
              (on(this.gridColumns, s, r),
              this.updateDisplayedColumns(o),
              this.dispatchColumnMovedEvent({
                movedColumns: s,
                source: o,
                toIndex: r,
                finished: i,
              }),
              this.columnAnimationService.finish());
          }
        }),
        (t.prototype.doesMovePassRules = function (e, r) {
          var o = this.getProposedColumnOrder(e, r);
          return this.doesOrderPassRules(o);
        }),
        (t.prototype.doesOrderPassRules = function (e) {
          return !(!this.doesMovePassMarryChildren(e) || !this.doesMovePassLockedPositions(e));
        }),
        (t.prototype.getProposedColumnOrder = function (e, r) {
          var o = this.gridColumns.slice();
          return on(o, e, r), o;
        }),
        (t.prototype.sortColumnsLikeGridColumns = function (e) {
          var r = this;
          if (!(!e || e.length <= 1)) {
            var o =
              e.filter(function (i) {
                return r.gridColumns.indexOf(i) < 0;
              }).length > 0;
            o ||
              e.sort(function (i, s) {
                var a = r.gridColumns.indexOf(i),
                  l = r.gridColumns.indexOf(s);
                return a - l;
              });
          }
        }),
        (t.prototype.doesMovePassLockedPositions = function (e) {
          var r = 0,
            o = !0,
            i = function (s) {
              return s ? (s === !0 || s === 'left' ? 0 : 2) : 1;
            };
          return (
            e.forEach(function (s) {
              var a = i(s.getColDef().lockPosition);
              a < r && (o = !1), (r = a);
            }),
            o
          );
        }),
        (t.prototype.doesMovePassMarryChildren = function (e) {
          var r = !0;
          return (
            this.columnUtils.depthFirstOriginalTreeSearch(
              null,
              this.gridBalancedTree,
              function (o) {
                if (o instanceof ie) {
                  var i = o,
                    s = i.getColGroupDef(),
                    a = s && s.marryChildren;
                  if (a) {
                    var l = [];
                    i.getLeafColumns().forEach(function (h) {
                      var f = e.indexOf(h);
                      l.push(f);
                    });
                    var u = Math.max.apply(Math, l),
                      c = Math.min.apply(Math, l),
                      p = u - c,
                      d = i.getLeafColumns().length - 1;
                    p > d && (r = !1);
                  }
                }
              }
            ),
            r
          );
        }),
        (t.prototype.moveColumnByIndex = function (e, r, o) {
          if (this.gridColumns) {
            var i = this.gridColumns[e];
            this.moveColumns([i], r, o);
          }
        }),
        (t.prototype.getColumnDefs = function () {
          var e = this;
          if (this.primaryColumns) {
            var r = this.primaryColumns.slice();
            return (
              this.gridColsArePrimary
                ? r.sort(function (o, i) {
                    return e.gridColumns.indexOf(o) - e.gridColumns.indexOf(i);
                  })
                : this.lastPrimaryOrder &&
                  r.sort(function (o, i) {
                    return e.lastPrimaryOrder.indexOf(o) - e.lastPrimaryOrder.indexOf(i);
                  }),
              this.columnDefFactory.buildColumnDefs(r, this.rowGroupColumns, this.pivotColumns)
            );
          }
        }),
        (t.prototype.getBodyContainerWidth = function () {
          return this.bodyWidth;
        }),
        (t.prototype.getContainerWidth = function (e) {
          switch (e) {
            case 'left':
              return this.leftWidth;
            case 'right':
              return this.rightWidth;
            default:
              return this.bodyWidth;
          }
        }),
        (t.prototype.updateBodyWidths = function () {
          var e = this.getWidthOfColsInList(this.displayedColumnsCenter),
            r = this.getWidthOfColsInList(this.displayedColumnsLeft),
            o = this.getWidthOfColsInList(this.displayedColumnsRight);
          this.bodyWidthDirty = this.bodyWidth !== e;
          var i = this.bodyWidth !== e || this.leftWidth !== r || this.rightWidth !== o;
          if (i) {
            (this.bodyWidth = e), (this.leftWidth = r), (this.rightWidth = o);
            var s = { type: g.EVENT_COLUMN_CONTAINER_WIDTH_CHANGED };
            this.eventService.dispatchEvent(s);
            var a = { type: g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED };
            this.eventService.dispatchEvent(a);
          }
        }),
        (t.prototype.getValueColumns = function () {
          return this.valueColumns ? this.valueColumns : [];
        }),
        (t.prototype.getPivotColumns = function () {
          return this.pivotColumns ? this.pivotColumns : [];
        }),
        (t.prototype.isPivotActive = function () {
          return this.pivotColumns && this.pivotColumns.length > 0 && this.pivotMode;
        }),
        (t.prototype.getRowGroupColumns = function () {
          return this.rowGroupColumns ? this.rowGroupColumns : [];
        }),
        (t.prototype.getDisplayedCenterColumns = function () {
          return this.displayedColumnsCenter;
        }),
        (t.prototype.getDisplayedLeftColumns = function () {
          return this.displayedColumnsLeft;
        }),
        (t.prototype.getDisplayedRightColumns = function () {
          return this.displayedColumnsRight;
        }),
        (t.prototype.getDisplayedColumns = function (e) {
          switch (e) {
            case 'left':
              return this.getDisplayedLeftColumns();
            case 'right':
              return this.getDisplayedRightColumns();
            default:
              return this.getDisplayedCenterColumns();
          }
        }),
        (t.prototype.getAllPrimaryColumns = function () {
          return this.primaryColumns ? this.primaryColumns : null;
        }),
        (t.prototype.getSecondaryColumns = function () {
          return this.secondaryColumns ? this.secondaryColumns : null;
        }),
        (t.prototype.getAllColumnsForQuickFilter = function () {
          return this.columnsForQuickFilter;
        }),
        (t.prototype.getAllGridColumns = function () {
          var e;
          return (e = this.gridColumns) !== null && e !== void 0 ? e : [];
        }),
        (t.prototype.isEmpty = function () {
          return Ge(this.gridColumns);
        }),
        (t.prototype.isRowGroupEmpty = function () {
          return Ge(this.rowGroupColumns);
        }),
        (t.prototype.setColumnsVisible = function (e, r, o) {
          r === void 0 && (r = !1),
            this.applyColumnState(
              {
                state: e.map(function (i) {
                  return { colId: typeof i == 'string' ? i : i.getColId(), hide: !r };
                }),
              },
              o
            );
        }),
        (t.prototype.setColumnsPinned = function (e, r, o) {
          if (this.gridColumns) {
            if (this.gridOptionsService.isDomLayout('print')) {
              console.warn(
                "AG Grid: Changing the column pinning status is not allowed with domLayout='print'"
              );
              return;
            }
            this.columnAnimationService.start();
            var i;
            r === !0 || r === 'left' ? (i = 'left') : r === 'right' ? (i = 'right') : (i = null),
              this.actionOnGridColumns(
                e,
                function (s) {
                  return s.getPinned() !== i ? (s.setPinned(i), !0) : !1;
                },
                o,
                function () {
                  var s = {
                    type: g.EVENT_COLUMN_PINNED,
                    pinned: i,
                    column: null,
                    columns: null,
                    source: o,
                  };
                  return s;
                }
              ),
              this.columnAnimationService.finish();
          }
        }),
        (t.prototype.actionOnGridColumns = function (e, r, o, i) {
          var s = this;
          if (!Ge(e)) {
            var a = [];
            if (
              (e.forEach(function (u) {
                if (u) {
                  var c = s.getGridColumn(u);
                  if (c) {
                    var p = r(c);
                    p !== !1 && a.push(c);
                  }
                }
              }),
              !!a.length && (this.updateDisplayedColumns(o), P(i) && i))
            ) {
              var l = i();
              (l.columns = a),
                (l.column = a.length === 1 ? a[0] : null),
                this.eventService.dispatchEvent(l);
            }
          }
        }),
        (t.prototype.getDisplayedColBefore = function (e) {
          var r = this.getAllDisplayedColumns(),
            o = r.indexOf(e);
          return o > 0 ? r[o - 1] : null;
        }),
        (t.prototype.getDisplayedColAfter = function (e) {
          var r = this.getAllDisplayedColumns(),
            o = r.indexOf(e);
          return o < r.length - 1 ? r[o + 1] : null;
        }),
        (t.prototype.getDisplayedGroupAfter = function (e) {
          return this.getDisplayedGroupAtDirection(e, 'After');
        }),
        (t.prototype.getDisplayedGroupBefore = function (e) {
          return this.getDisplayedGroupAtDirection(e, 'Before');
        }),
        (t.prototype.getDisplayedGroupAtDirection = function (e, r) {
          for (
            var o = e.getProvidedColumnGroup().getLevel() + e.getPaddingLevel(),
              i = e.getDisplayedLeafColumns(),
              s = r === 'After' ? q(i) : i[0],
              a = 'getDisplayedCol'.concat(r);
            ;

          ) {
            var l = this[a](s);
            if (!l) return null;
            var u = this.getColumnGroupAtLevel(l, o);
            if (u !== e) return u;
          }
        }),
        (t.prototype.getColumnGroupAtLevel = function (e, r) {
          for (var o = e.getParent(), i, s; ; ) {
            var a = o.getProvidedColumnGroup();
            if (((i = a.getLevel()), (s = o.getPaddingLevel()), i + s <= r)) break;
            o = o.getParent();
          }
          return o;
        }),
        (t.prototype.isPinningLeft = function () {
          return this.displayedColumnsLeft.length > 0;
        }),
        (t.prototype.isPinningRight = function () {
          return this.displayedColumnsRight.length > 0;
        }),
        (t.prototype.getPrimaryAndSecondaryAndAutoColumns = function () {
          var e;
          return (e = []).concat.apply(e, [
            this.primaryColumns || [],
            this.groupAutoColumns || [],
            this.secondaryColumns || [],
          ]);
        }),
        (t.prototype.createStateItemFromColumn = function (e) {
          var r = e.isRowGroupActive() ? this.rowGroupColumns.indexOf(e) : null,
            o = e.isPivotActive() ? this.pivotColumns.indexOf(e) : null,
            i = e.isValueActive() ? e.getAggFunc() : null,
            s = e.getSort() != null ? e.getSort() : null,
            a = e.getSortIndex() != null ? e.getSortIndex() : null,
            l = e.getFlex() != null && e.getFlex() > 0 ? e.getFlex() : null,
            u = {
              colId: e.getColId(),
              width: e.getActualWidth(),
              hide: !e.isVisible(),
              pinned: e.getPinned(),
              sort: s,
              sortIndex: a,
              aggFunc: i,
              rowGroup: e.isRowGroupActive(),
              rowGroupIndex: r,
              pivot: e.isPivotActive(),
              pivotIndex: o,
              flex: l,
            };
          return u;
        }),
        (t.prototype.getColumnState = function () {
          if (H(this.primaryColumns) || !this.isAlive()) return [];
          var e = this.getPrimaryAndSecondaryAndAutoColumns(),
            r = e.map(this.createStateItemFromColumn.bind(this));
          return this.orderColumnStateList(r), r;
        }),
        (t.prototype.orderColumnStateList = function (e) {
          var r = Nt(
            this.gridColumns.map(function (o, i) {
              return [o.getColId(), i];
            })
          );
          e.sort(function (o, i) {
            var s = r.has(o.colId) ? r.get(o.colId) : -1,
              a = r.has(i.colId) ? r.get(i.colId) : -1;
            return s - a;
          });
        }),
        (t.prototype.resetColumnState = function (e) {
          var r = this;
          if (!Ge(this.primaryColumns)) {
            var o = this.getColumnsFromTree(this.primaryColumnTree),
              i = [],
              s = 1e3,
              a = 1e3,
              l = [];
            this.groupAutoColumns && (l = l.concat(this.groupAutoColumns)),
              o && (l = l.concat(o)),
              l.forEach(function (u) {
                var c = r.getColumnStateFromColDef(u);
                H(c.rowGroupIndex) && c.rowGroup && (c.rowGroupIndex = s++),
                  H(c.pivotIndex) && c.pivot && (c.pivotIndex = a++),
                  i.push(c);
              }),
              this.applyColumnState({ state: i, applyOrder: !0 }, e);
          }
        }),
        (t.prototype.getColumnStateFromColDef = function (e) {
          var r = function (m, C) {
              return m ?? C ?? null;
            },
            o = e.getColDef(),
            i = r(o.sort, o.initialSort),
            s = r(o.sortIndex, o.initialSortIndex),
            a = r(o.hide, o.initialHide),
            l = r(o.pinned, o.initialPinned),
            u = r(o.width, o.initialWidth),
            c = r(o.flex, o.initialFlex),
            p = r(o.rowGroupIndex, o.initialRowGroupIndex),
            d = r(o.rowGroup, o.initialRowGroup);
          p == null && (d == null || d == !1) && ((p = null), (d = null));
          var h = r(o.pivotIndex, o.initialPivotIndex),
            f = r(o.pivot, o.initialPivot);
          h == null && (f == null || f == !1) && ((h = null), (f = null));
          var y = r(o.aggFunc, o.initialAggFunc);
          return {
            colId: e.getColId(),
            sort: i,
            sortIndex: s,
            hide: a,
            pinned: l,
            width: u,
            flex: c,
            rowGroup: d,
            rowGroupIndex: p,
            pivot: f,
            pivotIndex: h,
            aggFunc: y,
          };
        }),
        (t.prototype.applyColumnState = function (e, r) {
          var o = this;
          if (Ge(this.primaryColumns)) return !1;
          if (e && e.state && !e.state.forEach)
            return (
              console.warn(
                'AG Grid: applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state.'
              ),
              !1
            );
          var i = function (u, c, p) {
            var d = o.compareColumnStatesAndDispatchEvents(r);
            o.autoGroupsNeedBuilding = !0;
            var h = c.slice(),
              f = {},
              y = {},
              m = [],
              C = [],
              w = 0,
              E = o.rowGroupColumns.slice(),
              S = o.pivotColumns.slice();
            u.forEach(function (A) {
              var M = A.colId || '',
                N = M.startsWith(Er);
              if (N) {
                m.push(A), C.push(A);
                return;
              }
              var I = p(M);
              I
                ? (o.syncColumnWithStateItem(I, A, e.defaultState, f, y, !1, r), Ee(h, I))
                : (C.push(A), (w += 1));
            });
            var R = function (A) {
              return o.syncColumnWithStateItem(A, null, e.defaultState, f, y, !1, r);
            };
            h.forEach(R);
            var O = function (A, M, N, I) {
              var W = A[N.getId()],
                ee = A[I.getId()],
                oe = W != null,
                Z = ee != null;
              if (oe && Z) return W - ee;
              if (oe) return -1;
              if (Z) return 1;
              var te = M.indexOf(N),
                Q = M.indexOf(I),
                Ne = te >= 0,
                ut = Q >= 0;
              return Ne && ut ? te - Q : Ne ? -1 : 1;
            };
            o.rowGroupColumns.sort(O.bind(o, f, E)),
              o.pivotColumns.sort(O.bind(o, y, S)),
              o.updateGridColumns();
            var b = o.groupAutoColumns ? o.groupAutoColumns.slice() : [];
            return (
              m.forEach(function (A) {
                var M = o.getAutoColumn(A.colId);
                Ee(b, M), o.syncColumnWithStateItem(M, A, e.defaultState, null, null, !0, r);
              }),
              b.forEach(R),
              o.applyOrderAfterApplyState(e),
              o.updateDisplayedColumns(r),
              o.dispatchEverythingChanged(r),
              d(),
              { unmatchedAndAutoStates: C, unmatchedCount: w }
            );
          };
          this.columnAnimationService.start();
          var s = i(e.state || [], this.primaryColumns || [], function (u) {
              return o.getPrimaryColumn(u);
            }),
            a = s.unmatchedAndAutoStates,
            l = s.unmatchedCount;
          return (
            (a.length > 0 || P(e.defaultState)) &&
              (l = i(a, this.secondaryColumns || [], function (u) {
                return o.getSecondaryColumn(u);
              }).unmatchedCount),
            this.columnAnimationService.finish(),
            l === 0
          );
        }),
        (t.prototype.applyOrderAfterApplyState = function (e) {
          var r = this;
          if (!(!e.applyOrder || !e.state)) {
            var o = [],
              i = {};
            e.state.forEach(function (a) {
              if (!(!a.colId || i[a.colId])) {
                var l = r.gridColumnsMap[a.colId];
                l && (o.push(l), (i[a.colId] = !0));
              }
            });
            var s = 0;
            if (
              (this.gridColumns.forEach(function (a) {
                var l = a.getColId(),
                  u = i[l] != null;
                if (!u) {
                  var c = l.startsWith(Er);
                  c ? Yr(o, a, s++) : o.push(a);
                }
              }),
              (o = this.placeLockedColumns(o)),
              !this.doesMovePassMarryChildren(o))
            ) {
              console.warn(
                'AG Grid: Applying column order broke a group where columns should be married together. Applying new order has been discarded.'
              );
              return;
            }
            this.gridColumns = o;
          }
        }),
        (t.prototype.compareColumnStatesAndDispatchEvents = function (e) {
          var r = this,
            o = {
              rowGroupColumns: this.rowGroupColumns.slice(),
              pivotColumns: this.pivotColumns.slice(),
              valueColumns: this.valueColumns.slice(),
            },
            i = this.getColumnState(),
            s = {};
          return (
            i.forEach(function (a) {
              s[a.colId] = a;
            }),
            function () {
              var a = r.getPrimaryAndSecondaryAndAutoColumns(),
                l = function (w, E, S, R) {
                  var O = E.map(R),
                    b = S.map(R),
                    A = Tt(O, b);
                  if (!A) {
                    var M = new Set(E);
                    S.forEach(function (W) {
                      M.delete(W) || M.add(W);
                    });
                    var N = ke([], Be(M), !1),
                      I = { type: w, columns: N, column: N.length === 1 ? N[0] : null, source: e };
                    r.eventService.dispatchEvent(I);
                  }
                },
                u = function (w) {
                  var E = [];
                  return (
                    a.forEach(function (S) {
                      var R = s[S.getColId()];
                      R && w(R, S) && E.push(S);
                    }),
                    E
                  );
                },
                c = function (w) {
                  return w.getColId();
                };
              l(g.EVENT_COLUMN_ROW_GROUP_CHANGED, o.rowGroupColumns, r.rowGroupColumns, c),
                l(g.EVENT_COLUMN_PIVOT_CHANGED, o.pivotColumns, r.pivotColumns, c);
              var p = function (w, E) {
                  var S = w.aggFunc != null,
                    R = S != E.isValueActive(),
                    O = S && w.aggFunc != E.getAggFunc();
                  return R || O;
                },
                d = u(p);
              d.length > 0 && r.dispatchColumnChangedEvent(g.EVENT_COLUMN_VALUE_CHANGED, d, e);
              var h = function (w, E) {
                return w.width != E.getActualWidth();
              };
              r.dispatchColumnResizedEvent(u(h), !0, e);
              var f = function (w, E) {
                return w.pinned != E.getPinned();
              };
              r.dispatchColumnPinnedEvent(u(f), e);
              var y = function (w, E) {
                return w.hide == E.isVisible();
              };
              r.dispatchColumnVisibleEvent(u(y), e);
              var m = function (w, E) {
                  return w.sort != E.getSort() || w.sortIndex != E.getSortIndex();
                },
                C = u(m);
              C.length > 0 && r.sortController.dispatchSortChangedEvents(e, C),
                r.normaliseColumnMovedEventForColumnState(i, e);
            }
          );
        }),
        (t.prototype.getCommonValue = function (e, r) {
          if (!(!e || e.length == 0)) {
            for (var o = r(e[0]), i = 1; i < e.length; i++) if (o !== r(e[i])) return;
            return o;
          }
        }),
        (t.prototype.normaliseColumnMovedEventForColumnState = function (e, r) {
          var o = this,
            i = this.getColumnState(),
            s = {};
          i.forEach(function (p) {
            return (s[p.colId] = p);
          });
          var a = {};
          e.forEach(function (p) {
            s[p.colId] && (a[p.colId] = !0);
          });
          var l = e.filter(function (p) {
              return a[p.colId];
            }),
            u = i.filter(function (p) {
              return a[p.colId];
            }),
            c = [];
          u.forEach(function (p, d) {
            var h = l && l[d];
            if (h && h.colId !== p.colId) {
              var f = o.getGridColumn(h.colId);
              f && c.push(f);
            }
          }),
            c.length && this.dispatchColumnMovedEvent({ movedColumns: c, source: r, finished: !0 });
        }),
        (t.prototype.syncColumnWithStateItem = function (e, r, o, i, s, a, l) {
          if (e) {
            var u = function (A, M) {
                var N = { value1: void 0, value2: void 0 },
                  I = !1;
                return (
                  r &&
                    (r[A] !== void 0 && ((N.value1 = r[A]), (I = !0)),
                    P(M) && r[M] !== void 0 && ((N.value2 = r[M]), (I = !0))),
                  !I &&
                    o &&
                    (o[A] !== void 0 && (N.value1 = o[A]),
                    P(M) && o[M] !== void 0 && (N.value2 = o[M])),
                  N
                );
              },
              c = u('hide').value1;
            c !== void 0 && e.setVisible(!c, l);
            var p = u('pinned').value1;
            p !== void 0 && e.setPinned(p);
            var d = this.columnUtils.calculateColMinWidth(e.getColDef()),
              h = u('flex').value1;
            if ((h !== void 0 && e.setFlex(h), h == null)) {
              var f = u('width').value1;
              f != null && d != null && f >= d && e.setActualWidth(f, l);
            }
            var y = u('sort').value1;
            y !== void 0 && (y === 'desc' || y === 'asc' ? e.setSort(y, l) : e.setSort(void 0, l));
            var m = u('sortIndex').value1;
            if ((m !== void 0 && e.setSortIndex(m), !(a || !e.isPrimary()))) {
              var C = u('aggFunc').value1;
              C !== void 0 &&
                (typeof C == 'string'
                  ? (e.setAggFunc(C),
                    e.isValueActive() || (e.setValueActive(!0, l), this.valueColumns.push(e)))
                  : (P(C) &&
                      console.warn(
                        'AG Grid: stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON.'
                      ),
                    e.isValueActive() && (e.setValueActive(!1, l), Ee(this.valueColumns, e))));
              var w = u('rowGroup', 'rowGroupIndex'),
                E = w.value1,
                S = w.value2;
              (E !== void 0 || S !== void 0) &&
                (typeof S == 'number' || E
                  ? (e.isRowGroupActive() ||
                      (e.setRowGroupActive(!0, l), this.rowGroupColumns.push(e)),
                    i && typeof S == 'number' && (i[e.getId()] = S))
                  : e.isRowGroupActive() &&
                    (e.setRowGroupActive(!1, l), Ee(this.rowGroupColumns, e)));
              var R = u('pivot', 'pivotIndex'),
                O = R.value1,
                b = R.value2;
              (O !== void 0 || b !== void 0) &&
                (typeof b == 'number' || O
                  ? (e.isPivotActive() || (e.setPivotActive(!0, l), this.pivotColumns.push(e)),
                    s && typeof b == 'number' && (s[e.getId()] = b))
                  : e.isPivotActive() && (e.setPivotActive(!1, l), Ee(this.pivotColumns, e)));
            }
          }
        }),
        (t.prototype.getGridColumns = function (e) {
          return this.getColumns(e, this.getGridColumn.bind(this));
        }),
        (t.prototype.getColumns = function (e, r) {
          var o = [];
          return (
            e &&
              e.forEach(function (i) {
                var s = r(i);
                s && o.push(s);
              }),
            o
          );
        }),
        (t.prototype.getColumnWithValidation = function (e) {
          if (e == null) return null;
          var r = this.getGridColumn(e);
          return r || console.warn('AG Grid: could not find column ' + e), r;
        }),
        (t.prototype.getPrimaryColumn = function (e) {
          return this.primaryColumns
            ? this.getColumn(e, this.primaryColumns, this.primaryColumnsMap)
            : null;
        }),
        (t.prototype.getGridColumn = function (e) {
          return this.getColumn(e, this.gridColumns, this.gridColumnsMap);
        }),
        (t.prototype.lookupGridColumn = function (e) {
          return this.gridColumnsMap[e];
        }),
        (t.prototype.getSecondaryColumn = function (e) {
          return this.secondaryColumns
            ? this.getColumn(e, this.secondaryColumns, this.secondaryColumnsMap)
            : null;
        }),
        (t.prototype.getColumn = function (e, r, o) {
          if (!e || !o) return null;
          if (typeof e == 'string' && o[e]) return o[e];
          for (var i = 0; i < r.length; i++) if (this.columnsMatch(r[i], e)) return r[i];
          return this.getAutoColumn(e);
        }),
        (t.prototype.getSourceColumnsForGroupColumn = function (e) {
          var r = e.getColDef().showRowGroup;
          if (!r) return null;
          if (r === !0) return this.rowGroupColumns.slice(0);
          var o = this.getPrimaryColumn(r);
          return o ? [o] : null;
        }),
        (t.prototype.getAutoColumn = function (e) {
          var r = this;
          return !this.groupAutoColumns || !P(this.groupAutoColumns) || H(this.groupAutoColumns)
            ? null
            : this.groupAutoColumns.find(function (o) {
                return r.columnsMatch(o, e);
              }) || null;
        }),
        (t.prototype.columnsMatch = function (e, r) {
          var o = e === r,
            i = e.getColDef() === r,
            s = e.getColId() == r;
          return o || i || s;
        }),
        (t.prototype.getDisplayNameForColumn = function (e, r, o) {
          if ((o === void 0 && (o = !1), !e)) return null;
          var i = this.getHeaderName(e.getColDef(), e, null, null, r);
          return o ? this.wrapHeaderNameWithAggFunc(e, i) : i;
        }),
        (t.prototype.getDisplayNameForProvidedColumnGroup = function (e, r, o) {
          var i = r ? r.getColGroupDef() : null;
          return i ? this.getHeaderName(i, null, e, r, o) : null;
        }),
        (t.prototype.getDisplayNameForColumnGroup = function (e, r) {
          return this.getDisplayNameForProvidedColumnGroup(e, e.getProvidedColumnGroup(), r);
        }),
        (t.prototype.getHeaderName = function (e, r, o, i, s) {
          var a = e.headerValueGetter;
          if (a) {
            var l = this.gridOptionsService.addGridCommonParams({
              colDef: e,
              column: r,
              columnGroup: o,
              providedColumnGroup: i,
              location: s,
            });
            return typeof a == 'function'
              ? a(l)
              : typeof a == 'string'
              ? this.expressionService.evaluate(a, l)
              : (console.warn('AG Grid: headerValueGetter must be a function or a string'), '');
          } else {
            if (e.headerName != null) return e.headerName;
            if (e.field) return Da(e.field);
          }
          return '';
        }),
        (t.prototype.wrapHeaderNameWithAggFunc = function (e, r) {
          if (this.gridOptionsService.get('suppressAggFuncInHeader')) return r;
          var o = e.getColDef().pivotValueColumn,
            i = P(o),
            s = null,
            a;
          if (i) {
            var l =
                this.gridOptionsService.get('removePivotHeaderRowWhenSingleValueColumn') &&
                this.valueColumns.length === 1,
              u = e.getColDef().pivotTotalColumnIds !== void 0;
            if (l && !u) return r;
            (s = o ? o.getAggFunc() : null), (a = !0);
          } else {
            var c = e.isValueActive(),
              p = this.pivotMode || !this.isRowGroupEmpty();
            c && p ? ((s = e.getAggFunc()), (a = !0)) : (a = !1);
          }
          if (a) {
            var d = typeof s == 'string' ? s : 'func',
              h = this.localeService.getLocaleTextFunc(),
              f = h(d, d);
            return ''.concat(f, '(').concat(r, ')');
          }
          return r;
        }),
        (t.prototype.getColumnGroup = function (e, r) {
          if (!e) return null;
          if (e instanceof se) return e;
          var o = this.getAllDisplayedTrees(),
            i = typeof r == 'number',
            s = null;
          return (
            this.columnUtils.depthFirstAllColumnTreeSearch(o, function (a) {
              if (a instanceof se) {
                var l = a,
                  u = void 0;
                i ? (u = e === l.getGroupId() && r === l.getPartId()) : (u = e === l.getGroupId()),
                  u && (s = l);
              }
            }),
            s
          );
        }),
        (t.prototype.isReady = function () {
          return this.ready;
        }),
        (t.prototype.extractValueColumns = function (e, r) {
          (this.valueColumns = this.extractColumns(
            r,
            this.valueColumns,
            function (o, i) {
              return o.setValueActive(i, e);
            },
            function () {},
            function () {},
            function (o) {
              var i = o.aggFunc;
              if (i === null || i === '') return null;
              if (i !== void 0) return !!i;
            },
            function (o) {
              return o.initialAggFunc != null && o.initialAggFunc != '';
            }
          )),
            this.valueColumns.forEach(function (o) {
              var i = o.getColDef();
              i.aggFunc != null && i.aggFunc != ''
                ? o.setAggFunc(i.aggFunc)
                : o.getAggFunc() || o.setAggFunc(i.initialAggFunc);
            });
        }),
        (t.prototype.extractRowGroupColumns = function (e, r) {
          this.rowGroupColumns = this.extractColumns(
            r,
            this.rowGroupColumns,
            function (o, i) {
              return o.setRowGroupActive(i, e);
            },
            function (o) {
              return o.rowGroupIndex;
            },
            function (o) {
              return o.initialRowGroupIndex;
            },
            function (o) {
              return o.rowGroup;
            },
            function (o) {
              return o.initialRowGroup;
            }
          );
        }),
        (t.prototype.extractColumns = function (e, r, o, i, s, a, l) {
          e === void 0 && (e = []), r === void 0 && (r = []);
          var u = [],
            c = [];
          (this.primaryColumns || []).forEach(function (h) {
            var f = e.indexOf(h) < 0,
              y = h.getColDef(),
              m = xo(a(y)),
              C = xo(l(y)),
              w = Mt(i(y)),
              E = Mt(s(y)),
              S,
              R = m !== void 0,
              O = w !== void 0,
              b = C !== void 0,
              A = E !== void 0;
            if (
              (R
                ? (S = m)
                : O
                ? w === null
                  ? (S = !1)
                  : (S = w >= 0)
                : f
                ? b
                  ? (S = C)
                  : A
                  ? (S = E != null && E >= 0)
                  : (S = !1)
                : (S = r.indexOf(h) >= 0),
              S)
            ) {
              var M = f ? w != null || E != null : w != null;
              M ? u.push(h) : c.push(h);
            }
          });
          var p = function (h) {
            var f = i(h.getColDef()),
              y = s(h.getColDef());
            return f ?? y;
          };
          u.sort(function (h, f) {
            var y = p(h),
              m = p(f);
            return y === m ? 0 : y < m ? -1 : 1;
          });
          var d = [].concat(u);
          return (
            r.forEach(function (h) {
              c.indexOf(h) >= 0 && d.push(h);
            }),
            c.forEach(function (h) {
              d.indexOf(h) < 0 && d.push(h);
            }),
            r.forEach(function (h) {
              d.indexOf(h) < 0 && o(h, !1);
            }),
            d.forEach(function (h) {
              r.indexOf(h) < 0 && o(h, !0);
            }),
            d
          );
        }),
        (t.prototype.extractPivotColumns = function (e, r) {
          this.pivotColumns = this.extractColumns(
            r,
            this.pivotColumns,
            function (o, i) {
              return o.setPivotActive(i, e);
            },
            function (o) {
              return o.pivotIndex;
            },
            function (o) {
              return o.initialPivotIndex;
            },
            function (o) {
              return o.pivot;
            },
            function (o) {
              return o.initialPivot;
            }
          );
        }),
        (t.prototype.resetColumnGroupState = function (e) {
          if (this.primaryColumnTree) {
            var r = [];
            this.columnUtils.depthFirstOriginalTreeSearch(
              null,
              this.primaryColumnTree,
              function (o) {
                if (o instanceof ie) {
                  var i = o.getColGroupDef(),
                    s = { groupId: o.getGroupId(), open: i ? i.openByDefault : void 0 };
                  r.push(s);
                }
              }
            ),
              this.setColumnGroupState(r, e);
          }
        }),
        (t.prototype.getColumnGroupState = function () {
          var e = [];
          return (
            this.columnUtils.depthFirstOriginalTreeSearch(
              null,
              this.gridBalancedTree,
              function (r) {
                r instanceof ie && e.push({ groupId: r.getGroupId(), open: r.isExpanded() });
              }
            ),
            e
          );
        }),
        (t.prototype.setColumnGroupState = function (e, r) {
          var o = this;
          if (this.gridBalancedTree) {
            this.columnAnimationService.start();
            var i = [];
            if (
              (e.forEach(function (a) {
                var l = a.groupId,
                  u = a.open,
                  c = o.getProvidedColumnGroup(l);
                c &&
                  c.isExpanded() !== u &&
                  (o.logger.log('columnGroupOpened(' + c.getGroupId() + ',' + u + ')'),
                  c.setExpanded(u),
                  i.push(c));
              }),
              this.updateGroupsAndDisplayedColumns(r),
              this.setFirstRightAndLastLeftPinned(r),
              i.length)
            ) {
              var s = {
                type: g.EVENT_COLUMN_GROUP_OPENED,
                columnGroup: ie.length === 1 ? i[0] : void 0,
                columnGroups: i,
              };
              this.eventService.dispatchEvent(s);
            }
            this.columnAnimationService.finish();
          }
        }),
        (t.prototype.setColumnGroupOpened = function (e, r, o) {
          var i;
          e instanceof ie ? (i = e.getId()) : (i = e || ''),
            this.setColumnGroupState([{ groupId: i, open: r }], o);
        }),
        (t.prototype.getProvidedColumnGroup = function (e) {
          typeof e != 'string' && console.error('AG Grid: group key must be a string');
          var r = null;
          return (
            this.columnUtils.depthFirstOriginalTreeSearch(
              null,
              this.gridBalancedTree,
              function (o) {
                o instanceof ie && o.getId() === e && (r = o);
              }
            ),
            r
          );
        }),
        (t.prototype.calculateColumnsForDisplay = function () {
          var e = this,
            r;
          return (
            this.pivotMode && H(this.secondaryColumns)
              ? (r = this.gridColumns.filter(function (o) {
                  var i = e.groupAutoColumns && ot(e.groupAutoColumns, o),
                    s = e.valueColumns && ot(e.valueColumns, o);
                  return i || s;
                }))
              : (r = this.gridColumns.filter(function (o) {
                  var i = e.groupAutoColumns && ot(e.groupAutoColumns, o);
                  return i || o.isVisible();
                })),
            r
          );
        }),
        (t.prototype.checkColSpanActiveInCols = function (e) {
          var r = !1;
          return (
            e.forEach(function (o) {
              P(o.getColDef().colSpan) && (r = !0);
            }),
            r
          );
        }),
        (t.prototype.calculateColumnsForGroupDisplay = function () {
          var e = this;
          (this.groupDisplayColumns = []), (this.groupDisplayColumnsMap = {});
          var r = function (o) {
            var i = o.getColDef(),
              s = i.showRowGroup;
            i &&
              P(s) &&
              (e.groupDisplayColumns.push(o),
              typeof s == 'string'
                ? (e.groupDisplayColumnsMap[s] = o)
                : s === !0 &&
                  e.getRowGroupColumns().forEach(function (a) {
                    e.groupDisplayColumnsMap[a.getId()] = o;
                  }));
          };
          this.gridColumns.forEach(r);
        }),
        (t.prototype.getGroupDisplayColumns = function () {
          return this.groupDisplayColumns;
        }),
        (t.prototype.getGroupDisplayColumnForGroup = function (e) {
          return this.groupDisplayColumnsMap[e];
        }),
        (t.prototype.updateDisplayedColumns = function (e) {
          var r = this.calculateColumnsForDisplay();
          this.buildDisplayedTrees(r),
            this.updateGroupsAndDisplayedColumns(e),
            this.setFirstRightAndLastLeftPinned(e);
        }),
        (t.prototype.isSecondaryColumnsPresent = function () {
          return P(this.secondaryColumns);
        }),
        (t.prototype.setSecondaryColumns = function (e, r) {
          var o = this;
          if (this.gridColumns) {
            var i = e && e.length > 0;
            if (!(!i && H(this.secondaryColumns))) {
              if (i) {
                this.processSecondaryColumnDefinitions(e);
                var s = this.columnFactory.createColumnTree(
                  e,
                  !1,
                  this.secondaryBalancedTree || this.previousSecondaryColumns || void 0,
                  r
                );
                this.destroyOldColumns(this.secondaryBalancedTree, s.columnTree),
                  (this.secondaryBalancedTree = s.columnTree),
                  (this.secondaryHeaderRowCount = s.treeDept + 1),
                  (this.secondaryColumns = this.getColumnsFromTree(this.secondaryBalancedTree)),
                  (this.secondaryColumnsMap = {}),
                  this.secondaryColumns.forEach(function (a) {
                    return (o.secondaryColumnsMap[a.getId()] = a);
                  }),
                  (this.previousSecondaryColumns = null);
              } else
                (this.previousSecondaryColumns = this.secondaryBalancedTree),
                  (this.secondaryBalancedTree = null),
                  (this.secondaryHeaderRowCount = -1),
                  (this.secondaryColumns = null),
                  (this.secondaryColumnsMap = {});
              this.updateGridColumns(), this.updateDisplayedColumns(r);
            }
          }
        }),
        (t.prototype.processSecondaryColumnDefinitions = function (e) {
          var r = this.gridOptionsService.get('processPivotResultColDef'),
            o = this.gridOptionsService.get('processPivotResultColGroupDef');
          if (!(!r && !o)) {
            var i = function (s) {
              s.forEach(function (a) {
                var l = P(a.children);
                if (l) {
                  var u = a;
                  o && o(u), i(u.children);
                } else {
                  var c = a;
                  r && r(c);
                }
              });
            };
            e && i(e);
          }
        }),
        (t.prototype.updateGridColumns = function () {
          var e = this,
            r = this.gridBalancedTree;
          this.gridColsArePrimary
            ? (this.lastPrimaryOrder = this.gridColumns)
            : (this.lastSecondaryOrder = this.gridColumns);
          var o = this.createGroupAutoColumnsIfNeeded();
          if (o) {
            var i = Nt(
              this.groupAutoColumns.map(function (u) {
                return [u, !0];
              })
            );
            this.lastPrimaryOrder &&
              ((this.lastPrimaryOrder = this.lastPrimaryOrder.filter(function (u) {
                return !i.has(u);
              })),
              (this.lastPrimaryOrder = ke(
                ke([], Be(this.groupAutoColumns), !1),
                Be(this.lastPrimaryOrder),
                !1
              ))),
              this.lastSecondaryOrder &&
                ((this.lastSecondaryOrder = this.lastSecondaryOrder.filter(function (u) {
                  return !i.has(u);
                })),
                (this.lastSecondaryOrder = ke(
                  ke([], Be(this.groupAutoColumns), !1),
                  Be(this.lastSecondaryOrder),
                  !1
                )));
          }
          var s;
          if (this.secondaryColumns && this.secondaryBalancedTree) {
            var a = this.secondaryColumns.some(function (u) {
              return e.gridColumnsMap[u.getColId()] !== void 0;
            });
            (this.gridBalancedTree = this.secondaryBalancedTree.slice()),
              (this.gridHeaderRowCount = this.secondaryHeaderRowCount),
              (this.gridColumns = this.secondaryColumns.slice()),
              (this.gridColsArePrimary = !1),
              a && (s = this.lastSecondaryOrder);
          } else
            this.primaryColumns &&
              ((this.gridBalancedTree = this.primaryColumnTree.slice()),
              (this.gridHeaderRowCount = this.primaryHeaderRowCount),
              (this.gridColumns = this.primaryColumns.slice()),
              (this.gridColsArePrimary = !0),
              (s = this.lastPrimaryOrder));
          if (
            (this.addAutoGroupToGridColumns(),
            this.orderGridColsLike(s),
            (this.gridColumns = this.placeLockedColumns(this.gridColumns)),
            this.calculateColumnsForGroupDisplay(),
            this.refreshQuickFilterColumns(),
            this.clearDisplayedAndViewportColumns(),
            (this.colSpanActive = this.checkColSpanActiveInCols(this.gridColumns)),
            (this.gridColumnsMap = {}),
            this.gridColumns.forEach(function (u) {
              return (e.gridColumnsMap[u.getId()] = u);
            }),
            this.setAutoHeightActive(),
            !Tt(r, this.gridBalancedTree))
          ) {
            var l = { type: g.EVENT_GRID_COLUMNS_CHANGED };
            this.eventService.dispatchEvent(l);
          }
        }),
        (t.prototype.setAutoHeightActive = function () {
          if (
            ((this.autoHeightActive =
              this.gridColumns.filter(function (r) {
                return r.isAutoHeight();
              }).length > 0),
            this.autoHeightActive)
          ) {
            this.autoHeightActiveAtLeastOnce = !0;
            var e =
              this.gridOptionsService.isRowModelType('clientSide') ||
              this.gridOptionsService.isRowModelType('serverSide');
            e ||
              V(
                'autoHeight columns only work with Client Side Row Model and Server Side Row Model.'
              );
          }
        }),
        (t.prototype.orderGridColsLike = function (e) {
          if (!H(e)) {
            var r = Nt(
                e.map(function (c, p) {
                  return [c, p];
                })
              ),
              o = !0;
            if (
              (this.gridColumns.forEach(function (c) {
                r.has(c) && (o = !1);
              }),
              !o)
            ) {
              var i = Nt(
                  this.gridColumns.map(function (c) {
                    return [c, !0];
                  })
                ),
                s = e.filter(function (c) {
                  return i.has(c);
                }),
                a = Nt(
                  s.map(function (c) {
                    return [c, !0];
                  })
                ),
                l = this.gridColumns.filter(function (c) {
                  return !a.has(c);
                }),
                u = s.slice();
              l.forEach(function (c) {
                var p = c.getOriginalParent();
                if (!p) {
                  u.push(c);
                  return;
                }
                for (var d = []; !d.length && p; ) {
                  var h = p.getLeafColumns();
                  h.forEach(function (m) {
                    var C = u.indexOf(m) >= 0,
                      w = d.indexOf(m) < 0;
                    C && w && d.push(m);
                  }),
                    (p = p.getOriginalParent());
                }
                if (!d.length) {
                  u.push(c);
                  return;
                }
                var f = d.map(function (m) {
                    return u.indexOf(m);
                  }),
                  y = Math.max.apply(Math, ke([], Be(f), !1));
                Yr(u, c, y + 1);
              }),
                (this.gridColumns = u);
            }
          }
        }),
        (t.prototype.isPrimaryColumnGroupsPresent = function () {
          return this.primaryHeaderRowCount > 1;
        }),
        (t.prototype.refreshQuickFilterColumns = function () {
          var e,
            r =
              (e = this.isPivotMode() ? this.secondaryColumns : this.primaryColumns) !== null &&
              e !== void 0
                ? e
                : [];
          this.groupAutoColumns && (r = r.concat(this.groupAutoColumns)),
            (this.columnsForQuickFilter = this.gridOptionsService.get(
              'includeHiddenColumnsInQuickFilter'
            )
              ? r
              : r.filter(function (o) {
                  return o.isVisible() || o.isRowGroupActive();
                }));
        }),
        (t.prototype.placeLockedColumns = function (e) {
          var r = [],
            o = [],
            i = [];
          return (
            e.forEach(function (s) {
              var a = s.getColDef().lockPosition;
              a === 'right' ? i.push(s) : a === 'left' || a === !0 ? r.push(s) : o.push(s);
            }),
            ke(ke(ke([], Be(r), !1), Be(o), !1), Be(i), !1)
          );
        }),
        (t.prototype.addAutoGroupToGridColumns = function () {
          if (H(this.groupAutoColumns)) {
            this.destroyOldColumns(this.groupAutoColsBalancedTree),
              (this.groupAutoColsBalancedTree = null);
            return;
          }
          this.gridColumns = this.groupAutoColumns
            ? this.groupAutoColumns.concat(this.gridColumns)
            : this.gridColumns;
          var e = this.columnFactory.createForAutoGroups(
            this.groupAutoColumns,
            this.gridBalancedTree
          );
          this.destroyOldColumns(this.groupAutoColsBalancedTree, e),
            (this.groupAutoColsBalancedTree = e),
            (this.gridBalancedTree = e.concat(this.gridBalancedTree));
        }),
        (t.prototype.clearDisplayedAndViewportColumns = function () {
          (this.viewportRowLeft = {}),
            (this.viewportRowRight = {}),
            (this.viewportRowCenter = {}),
            (this.displayedColumnsLeft = []),
            (this.displayedColumnsRight = []),
            (this.displayedColumnsCenter = []),
            (this.displayedColumns = []),
            (this.ariaOrderColumns = []),
            (this.viewportColumns = []),
            (this.headerViewportColumns = []),
            (this.viewportColumnsHash = '');
        }),
        (t.prototype.updateGroupsAndDisplayedColumns = function (e) {
          this.updateOpenClosedVisibilityInColumnGroups(),
            this.deriveDisplayedColumns(e),
            this.refreshFlexedColumns(),
            this.extractViewport(),
            this.updateBodyWidths();
          var r = { type: g.EVENT_DISPLAYED_COLUMNS_CHANGED };
          this.eventService.dispatchEvent(r);
        }),
        (t.prototype.deriveDisplayedColumns = function (e) {
          this.derivedDisplayedColumnsFromDisplayedTree(
            this.displayedTreeLeft,
            this.displayedColumnsLeft
          ),
            this.derivedDisplayedColumnsFromDisplayedTree(
              this.displayedTreeCentre,
              this.displayedColumnsCenter
            ),
            this.derivedDisplayedColumnsFromDisplayedTree(
              this.displayedTreeRight,
              this.displayedColumnsRight
            ),
            this.joinColumnsAriaOrder(),
            this.joinDisplayedColumns(),
            this.setLeftValues(e),
            (this.displayedAutoHeightCols = this.displayedColumns.filter(function (r) {
              return r.isAutoHeight();
            }));
        }),
        (t.prototype.isAutoRowHeightActive = function () {
          return this.autoHeightActive;
        }),
        (t.prototype.wasAutoRowHeightEverActive = function () {
          return this.autoHeightActiveAtLeastOnce;
        }),
        (t.prototype.joinColumnsAriaOrder = function () {
          var e,
            r,
            o = this.getAllGridColumns(),
            i = [],
            s = [],
            a = [];
          try {
            for (var l = un(o), u = l.next(); !u.done; u = l.next()) {
              var c = u.value,
                p = c.getPinned();
              p ? (p === !0 || p === 'left' ? i.push(c) : a.push(c)) : s.push(c);
            }
          } catch (d) {
            e = { error: d };
          } finally {
            try {
              u && !u.done && (r = l.return) && r.call(l);
            } finally {
              if (e) throw e.error;
            }
          }
          this.ariaOrderColumns = i.concat(s).concat(a);
        }),
        (t.prototype.joinDisplayedColumns = function () {
          this.gridOptionsService.get('enableRtl')
            ? (this.displayedColumns = this.displayedColumnsRight
                .concat(this.displayedColumnsCenter)
                .concat(this.displayedColumnsLeft))
            : (this.displayedColumns = this.displayedColumnsLeft
                .concat(this.displayedColumnsCenter)
                .concat(this.displayedColumnsRight));
        }),
        (t.prototype.setLeftValues = function (e) {
          this.setLeftValuesOfColumns(e), this.setLeftValuesOfGroups();
        }),
        (t.prototype.setLeftValuesOfColumns = function (e) {
          var r = this;
          if (this.primaryColumns) {
            var o = this.getPrimaryAndSecondaryAndAutoColumns().slice(0),
              i = this.gridOptionsService.get('enableRtl');
            [
              this.displayedColumnsLeft,
              this.displayedColumnsRight,
              this.displayedColumnsCenter,
            ].forEach(function (s) {
              if (i) {
                var a = r.getWidthOfColsInList(s);
                s.forEach(function (u) {
                  (a -= u.getActualWidth()), u.setLeft(a, e);
                });
              } else {
                var l = 0;
                s.forEach(function (u) {
                  u.setLeft(l, e), (l += u.getActualWidth());
                });
              }
              Sa(o, s);
            }),
              o.forEach(function (s) {
                s.setLeft(null, e);
              });
          }
        }),
        (t.prototype.setLeftValuesOfGroups = function () {
          [this.displayedTreeLeft, this.displayedTreeRight, this.displayedTreeCentre].forEach(
            function (e) {
              e.forEach(function (r) {
                if (r instanceof se) {
                  var o = r;
                  o.checkLeft();
                }
              });
            }
          );
        }),
        (t.prototype.derivedDisplayedColumnsFromDisplayedTree = function (e, r) {
          (r.length = 0),
            this.columnUtils.depthFirstDisplayedColumnTreeSearch(e, function (o) {
              o instanceof J && r.push(o);
            });
        }),
        (t.prototype.isColumnVirtualisationSuppressed = function () {
          return this.suppressColumnVirtualisation || this.viewportRight === 0;
        }),
        (t.prototype.extractViewportColumns = function () {
          this.isColumnVirtualisationSuppressed()
            ? ((this.viewportColumnsCenter = this.displayedColumnsCenter),
              (this.headerViewportColumnsCenter = this.displayedColumnsCenter))
            : ((this.viewportColumnsCenter = this.displayedColumnsCenter.filter(
                this.isColumnInRowViewport.bind(this)
              )),
              (this.headerViewportColumnsCenter = this.displayedColumnsCenter.filter(
                this.isColumnInHeaderViewport.bind(this)
              ))),
            (this.viewportColumns = this.viewportColumnsCenter
              .concat(this.displayedColumnsLeft)
              .concat(this.displayedColumnsRight)),
            (this.headerViewportColumns = this.headerViewportColumnsCenter
              .concat(this.displayedColumnsLeft)
              .concat(this.displayedColumnsRight));
        }),
        (t.prototype.getVirtualHeaderGroupRow = function (e, r) {
          var o;
          switch (e) {
            case 'left':
              o = this.viewportRowLeft[r];
              break;
            case 'right':
              o = this.viewportRowRight[r];
              break;
            default:
              o = this.viewportRowCenter[r];
              break;
          }
          return H(o) && (o = []), o;
        }),
        (t.prototype.calculateHeaderRows = function () {
          (this.viewportRowLeft = {}), (this.viewportRowRight = {}), (this.viewportRowCenter = {});
          var e = {};
          this.headerViewportColumns.forEach(function (o) {
            return (e[o.getId()] = !0);
          });
          var r = function (o, i, s) {
            for (var a = !1, l = 0; l < o.length; l++) {
              var u = o[l],
                c = !1;
              if (u instanceof J) c = e[u.getId()] === !0;
              else {
                var p = u,
                  d = p.getDisplayedChildren();
                d && (c = r(d, i, s + 1));
              }
              c && ((a = !0), i[s] || (i[s] = []), i[s].push(u));
            }
            return a;
          };
          r(this.displayedTreeLeft, this.viewportRowLeft, 0),
            r(this.displayedTreeRight, this.viewportRowRight, 0),
            r(this.displayedTreeCentre, this.viewportRowCenter, 0);
        }),
        (t.prototype.extractViewport = function () {
          var e = function (i) {
            return ''.concat(i.getId(), '-').concat(i.getPinned() || 'normal');
          };
          this.extractViewportColumns();
          var r = this.viewportColumns.map(e).join('#'),
            o = this.viewportColumnsHash !== r;
          return o && ((this.viewportColumnsHash = r), this.calculateHeaderRows()), o;
        }),
        (t.prototype.refreshFlexedColumns = function (e) {
          var r;
          e === void 0 && (e = {});
          var o = e.source ? e.source : 'flex';
          if (
            (e.viewportWidth != null && (this.flexViewportWidth = e.viewportWidth),
            !this.flexViewportWidth)
          )
            return [];
          var i = -1;
          if (e.resizingCols) {
            for (
              var s = new Set(e.resizingCols), a = this.displayedColumnsCenter, l = a.length - 1;
              l >= 0;
              l--
            )
              if (s.has(a[l])) {
                i = l;
                break;
              }
          }
          for (
            var u = 0, c = [], p = 0, d = 0, l = 0;
            l < this.displayedColumnsCenter.length;
            l++
          ) {
            var h = this.displayedColumnsCenter[l].getFlex() && l > i;
            h
              ? (c.push(this.displayedColumnsCenter[l]),
                (d += this.displayedColumnsCenter[l].getFlex()),
                (p +=
                  (r = this.displayedColumnsCenter[l].getMinWidth()) !== null && r !== void 0
                    ? r
                    : 0))
              : (u += this.displayedColumnsCenter[l].getActualWidth());
          }
          if (!c.length) return [];
          var f = [];
          u + p > this.flexViewportWidth &&
            (c.forEach(function (A) {
              var M;
              return A.setActualWidth((M = A.getMinWidth()) !== null && M !== void 0 ? M : 0, o);
            }),
            (f = c),
            (c = []));
          var y = [],
            m;
          e: for (;;) {
            m = this.flexViewportWidth - u;
            for (var C = m / d, l = 0; l < c.length; l++) {
              var w = c[l],
                E = C * w.getFlex(),
                S = 0,
                R = w.getMinWidth(),
                O = w.getMaxWidth();
              if ((P(R) && E < R ? (S = R) : P(O) && E > O && (S = O), S)) {
                w.setActualWidth(S, o),
                  rn(c, w),
                  (d -= w.getFlex()),
                  f.push(w),
                  (u += w.getActualWidth());
                continue e;
              }
              y[l] = Math.round(E);
            }
            break;
          }
          var b = m;
          return (
            c.forEach(function (A, M) {
              A.setActualWidth(Math.min(y[M], b), o), f.push(A), (b -= y[M]);
            }),
            e.skipSetLeft || this.setLeftValues(o),
            e.updateBodyWidths && this.updateBodyWidths(),
            e.fireResizedEvent && this.dispatchColumnResizedEvent(f, !0, o, c),
            c
          );
        }),
        (t.prototype.sizeColumnsToFit = function (e, r, o, i) {
          var s = this,
            a,
            l,
            u,
            c,
            p;
          if ((r === void 0 && (r = 'sizeColumnsToFit'), this.shouldQueueResizeOperations)) {
            this.resizeOperationQueue.push(function () {
              return s.sizeColumnsToFit(e, r, o, i);
            });
            return;
          }
          var d = {};
          i &&
            ((a = i == null ? void 0 : i.columnLimits) === null ||
              a === void 0 ||
              a.forEach(function (Q) {
                var Ne = Q.key,
                  ut = np(Q, ['key']);
                d[typeof Ne == 'string' ? Ne : Ne.getColId()] = ut;
              }));
          var h = this.getAllDisplayedColumns(),
            f = e === this.getWidthOfColsInList(h);
          if (!(e <= 0 || !h.length || f)) {
            var y = [],
              m = [];
            h.forEach(function (Q) {
              Q.getColDef().suppressSizeToFit === !0 ? m.push(Q) : y.push(Q);
            });
            var C = y.slice(0),
              w = !1,
              E = function (Q) {
                Ee(y, Q), m.push(Q);
              };
            for (
              y.forEach(function (Q) {
                var Ne, ut;
                Q.resetActualWidth(r);
                var Lt = d == null ? void 0 : d[Q.getId()],
                  la =
                    (Ne = Lt == null ? void 0 : Lt.minWidth) !== null && Ne !== void 0
                      ? Ne
                      : i == null
                      ? void 0
                      : i.defaultMinWidth,
                  ua =
                    (ut = Lt == null ? void 0 : Lt.maxWidth) !== null && ut !== void 0
                      ? ut
                      : i == null
                      ? void 0
                      : i.defaultMaxWidth,
                  gc = Q.getActualWidth();
                typeof la == 'number' && gc < la
                  ? Q.setActualWidth(la, r, !0)
                  : typeof ua == 'number' && gc > ua && Q.setActualWidth(ua, r, !0);
              });
              !w;

            ) {
              w = !0;
              var S = e - this.getWidthOfColsInList(m);
              if (S <= 0)
                y.forEach(function (Q) {
                  var Ne,
                    ut,
                    Lt =
                      (ut =
                        (Ne = d == null ? void 0 : d[Q.getId()]) === null || Ne === void 0
                          ? void 0
                          : Ne.minWidth) !== null && ut !== void 0
                        ? ut
                        : i == null
                        ? void 0
                        : i.defaultMinWidth;
                  if (typeof Lt == 'number') {
                    Q.setActualWidth(Lt, r, !0);
                    return;
                  }
                  Q.setMinimum(r);
                });
              else
                for (
                  var R = S / this.getWidthOfColsInList(y), O = S, b = y.length - 1;
                  b >= 0;
                  b--
                ) {
                  var A = y[b],
                    M = d == null ? void 0 : d[A.getId()],
                    N =
                      (l = M == null ? void 0 : M.minWidth) !== null && l !== void 0
                        ? l
                        : i == null
                        ? void 0
                        : i.defaultMinWidth,
                    I =
                      (u = M == null ? void 0 : M.maxWidth) !== null && u !== void 0
                        ? u
                        : i == null
                        ? void 0
                        : i.defaultMaxWidth,
                    W = (c = A.getMinWidth()) !== null && c !== void 0 ? c : 0,
                    ee = (p = A.getMaxWidth()) !== null && p !== void 0 ? p : Number.MAX_VALUE,
                    oe = typeof N == 'number' && N > W ? N : A.getMinWidth(),
                    Z = typeof I == 'number' && I < ee ? I : A.getMaxWidth(),
                    te = Math.round(A.getActualWidth() * R);
                  P(oe) && te < oe
                    ? ((te = oe), E(A), (w = !1))
                    : P(Z) && te > Z
                    ? ((te = Z), E(A), (w = !1))
                    : b === 0 && (te = O),
                    A.setActualWidth(te, r, !0),
                    (O -= te);
                }
            }
            C.forEach(function (Q) {
              Q.fireColumnWidthChangedEvent(r);
            }),
              this.setLeftValues(r),
              this.updateBodyWidths(),
              !o && this.dispatchColumnResizedEvent(C, !0, r);
          }
        }),
        (t.prototype.buildDisplayedTrees = function (e) {
          var r = [],
            o = [],
            i = [];
          e.forEach(function (a) {
            switch (a.getPinned()) {
              case 'left':
                r.push(a);
                break;
              case 'right':
                o.push(a);
                break;
              default:
                i.push(a);
                break;
            }
          });
          var s = new Pa();
          (this.displayedTreeLeft = this.displayedGroupCreator.createDisplayedGroups(
            r,
            s,
            'left',
            this.displayedTreeLeft
          )),
            (this.displayedTreeRight = this.displayedGroupCreator.createDisplayedGroups(
              o,
              s,
              'right',
              this.displayedTreeRight
            )),
            (this.displayedTreeCentre = this.displayedGroupCreator.createDisplayedGroups(
              i,
              s,
              null,
              this.displayedTreeCentre
            )),
            this.updateDisplayedMap();
        }),
        (t.prototype.updateDisplayedMap = function () {
          var e = this;
          this.displayedColumnsAndGroupsMap = {};
          var r = function (o) {
            e.displayedColumnsAndGroupsMap[o.getUniqueId()] = o;
          };
          this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeCentre, r),
            this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeLeft, r),
            this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeRight, r);
        }),
        (t.prototype.isDisplayed = function (e) {
          var r = this.displayedColumnsAndGroupsMap[e.getUniqueId()];
          return r === e;
        }),
        (t.prototype.updateOpenClosedVisibilityInColumnGroups = function () {
          var e = this.getAllDisplayedTrees();
          this.columnUtils.depthFirstAllColumnTreeSearch(e, function (r) {
            r instanceof se && r.calculateDisplayedColumns();
          });
        }),
        (t.prototype.getGroupAutoColumns = function () {
          return this.groupAutoColumns;
        }),
        (t.prototype.createGroupAutoColumnsIfNeeded = function () {
          var e = this.forceRecreateAutoGroups;
          if (((this.forceRecreateAutoGroups = !1), !this.autoGroupsNeedBuilding)) return !1;
          this.autoGroupsNeedBuilding = !1;
          var r = this.gridOptionsService.isGroupUseEntireRow(this.pivotMode),
            o = this.pivotMode
              ? this.gridOptionsService.get('pivotSuppressAutoColumn')
              : this.isGroupSuppressAutoColumn(),
            i = this.rowGroupColumns.length > 0 || this.gridOptionsService.get('treeData'),
            s = i && !o && !r;
          if (s) {
            var a = this.autoGroupColService.createAutoGroupColumns(this.rowGroupColumns),
              l = !this.autoColsEqual(a, this.groupAutoColumns);
            if (l || e) return (this.groupAutoColumns = a), !0;
          } else this.groupAutoColumns = null;
          return !1;
        }),
        (t.prototype.isGroupSuppressAutoColumn = function () {
          var e = this.gridOptionsService.get('groupDisplayType'),
            r = e === 'custom';
          if (r) return !0;
          var o = this.gridOptionsService.get('treeDataDisplayType');
          return o === 'custom';
        }),
        (t.prototype.autoColsEqual = function (e, r) {
          return Tt(e, r, function (o, i) {
            return o.getColId() === i.getColId();
          });
        }),
        (t.prototype.getWidthOfColsInList = function (e) {
          return e.reduce(function (r, o) {
            return r + o.getActualWidth();
          }, 0);
        }),
        (t.prototype.getFirstDisplayedColumn = function () {
          var e = this.gridOptionsService.get('enableRtl'),
            r = [
              'getDisplayedLeftColumns',
              'getDisplayedCenterColumns',
              'getDisplayedRightColumns',
            ];
          e && r.reverse();
          for (var o = 0; o < r.length; o++) {
            var i = this[r[o]]();
            if (i.length) return e ? q(i) : i[0];
          }
          return null;
        }),
        (t.prototype.setColumnHeaderHeight = function (e, r) {
          var o = e.setAutoHeaderHeight(r);
          if (o) {
            var i = {
              type: g.EVENT_COLUMN_HEADER_HEIGHT_CHANGED,
              column: e,
              columns: [e],
              source: 'autosizeColumnHeaderHeight',
            };
            this.eventService.dispatchEvent(i);
          }
        }),
        (t.prototype.getColumnGroupHeaderRowHeight = function () {
          return this.isPivotMode()
            ? this.getPivotGroupHeaderHeight()
            : this.getGroupHeaderHeight();
        }),
        (t.prototype.getColumnHeaderRowHeight = function () {
          var e = this.isPivotMode() ? this.getPivotHeaderHeight() : this.getHeaderHeight(),
            r = this.getAllDisplayedColumns()
              .filter(function (o) {
                return o.isAutoHeaderHeight();
              })
              .map(function (o) {
                return o.getAutoHeaderHeight() || 0;
              });
          return Math.max.apply(Math, ke([e], Be(r), !1));
        }),
        (t.prototype.getHeaderHeight = function () {
          var e;
          return (e = this.gridOptionsService.get('headerHeight')) !== null && e !== void 0
            ? e
            : this.environment.getFromTheme(25, 'headerHeight');
        }),
        (t.prototype.getFloatingFiltersHeight = function () {
          var e;
          return (e = this.gridOptionsService.get('floatingFiltersHeight')) !== null && e !== void 0
            ? e
            : this.getHeaderHeight();
        }),
        (t.prototype.getGroupHeaderHeight = function () {
          var e;
          return (e = this.gridOptionsService.get('groupHeaderHeight')) !== null && e !== void 0
            ? e
            : this.getHeaderHeight();
        }),
        (t.prototype.getPivotHeaderHeight = function () {
          var e;
          return (e = this.gridOptionsService.get('pivotHeaderHeight')) !== null && e !== void 0
            ? e
            : this.getHeaderHeight();
        }),
        (t.prototype.getPivotGroupHeaderHeight = function () {
          var e;
          return (e = this.gridOptionsService.get('pivotGroupHeaderHeight')) !== null &&
            e !== void 0
            ? e
            : this.getGroupHeaderHeight();
        }),
        (t.prototype.queueResizeOperations = function () {
          this.shouldQueueResizeOperations = !0;
        }),
        (t.prototype.processResizeOperations = function () {
          (this.shouldQueueResizeOperations = !1),
            this.resizeOperationQueue.forEach(function (e) {
              return e();
            }),
            (this.resizeOperationQueue = []);
        }),
        (t.prototype.resetColumnDefIntoColumn = function (e, r) {
          var o = e.getUserProvidedColDef();
          if (!o) return !1;
          var i = this.columnFactory.addColumnDefaultAndTypes(o, e.getColId());
          return e.setColDef(i, o, r), !0;
        }),
        (t.prototype.isColumnGroupingLocked = function (e) {
          var r = this.gridOptionsService.get('groupLockGroupColumns');
          if (!e.isRowGroupActive() || r === 0) return !1;
          if (r === -1) return !0;
          var o = this.rowGroupColumns.findIndex(function (i) {
            return i.getColId() === e.getColId();
          });
          return r > o;
        }),
        (t.prototype.generateColumnStateForRowGroupAndPivotIndexes = function (e, r) {
          var o = this,
            i = {},
            s = function (a, l, u, c, p, d) {
              if (!l.length || !o.primaryColumns) return [];
              for (
                var h = Object.keys(a),
                  f = new Set(h),
                  y = new Set(h),
                  m = new Set(
                    l
                      .map(function (N) {
                        var I = N.getColId();
                        return y.delete(I), I;
                      })
                      .concat(h)
                  ),
                  C = [],
                  w = {},
                  E = 0,
                  S = 0;
                S < o.primaryColumns.length;
                S++
              ) {
                var R = o.primaryColumns[S].getColId();
                m.has(R) && (C.push(R), (w[R] = E++));
              }
              var O = 1e3,
                b = !1,
                A = 0,
                M = function (N) {
                  for (var I = w[N], W = A; W < I; W++) {
                    var ee = C[W];
                    y.has(ee) && ((a[ee][p] = O++), y.delete(ee));
                  }
                  A = I;
                };
              l.forEach(function (N) {
                var I = N.getColId();
                if (f.has(I)) M(I), (a[I][p] = O++);
                else {
                  var W = N.getColDef(),
                    ee = W[p] === null || (W[p] === void 0 && W[d] == null);
                  if (ee) {
                    if (!b) {
                      var oe = W[u] || (W[u] === void 0 && W[c]);
                      oe
                        ? M(I)
                        : (y.forEach(function (Z) {
                            a[Z][p] = O + w[Z];
                          }),
                          (O += C.length),
                          (b = !0));
                    }
                    i[I] || (i[I] = { colId: I }), (i[I][p] = O++);
                  }
                }
              });
            };
          return (
            s(
              e,
              this.rowGroupColumns,
              'rowGroup',
              'initialRowGroup',
              'rowGroupIndex',
              'initialRowGroupIndex'
            ),
            s(r, this.pivotColumns, 'pivot', 'initialPivot', 'pivotIndex', 'initialPivotIndex'),
            Object.values(i)
          );
        }),
        (t.prototype.onColumnsReady = function () {
          var e = this,
            r = this.gridOptionsService.get('autoSizeStrategy');
          if (r) {
            var o = r.type;
            setTimeout(function () {
              if (o === 'fitGridWidth') {
                var i = r.columnLimits,
                  s = r.defaultMinWidth,
                  a = r.defaultMaxWidth,
                  l =
                    i == null
                      ? void 0
                      : i.map(function (u) {
                          var c = u.colId,
                            p = u.minWidth,
                            d = u.maxWidth;
                          return { key: c, minWidth: p, maxWidth: d };
                        });
                e.ctrlsService
                  .getGridBodyCtrl()
                  .sizeColumnsToFit({ defaultMinWidth: s, defaultMaxWidth: a, columnLimits: l });
              } else o === 'fitProvidedWidth' && e.sizeColumnsToFit(r.width, 'sizeColumnsToFit');
            });
          }
        }),
        (t.prototype.onFirstDataRendered = function () {
          var e = this,
            r = this.gridOptionsService.get('autoSizeStrategy');
          if ((r == null ? void 0 : r.type) === 'fitCellContents') {
            var o = r.colIds,
              i = r.skipHeader;
            setTimeout(function () {
              o
                ? e.autoSizeColumns({ columns: o, skipHeader: i, source: 'autosizeColumns' })
                : e.autoSizeAllColumns('autosizeColumns', i);
            });
          }
        }),
        ve([v('expressionService')], t.prototype, 'expressionService', void 0),
        ve([v('columnFactory')], t.prototype, 'columnFactory', void 0),
        ve([v('displayedGroupCreator')], t.prototype, 'displayedGroupCreator', void 0),
        ve([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        ve([v('autoWidthCalculator')], t.prototype, 'autoWidthCalculator', void 0),
        ve([v('columnUtils')], t.prototype, 'columnUtils', void 0),
        ve([v('columnAnimationService')], t.prototype, 'columnAnimationService', void 0),
        ve([v('autoGroupColService')], t.prototype, 'autoGroupColService', void 0),
        ve([Y('aggFuncService')], t.prototype, 'aggFuncService', void 0),
        ve([Y('valueCache')], t.prototype, 'valueCache', void 0),
        ve([Y('animationFrameService')], t.prototype, 'animationFrameService', void 0),
        ve([v('sortController')], t.prototype, 'sortController', void 0),
        ve([v('columnDefFactory')], t.prototype, 'columnDefFactory', void 0),
        ve([F], t.prototype, 'init', null),
        ve([Se], t.prototype, 'destroyColumns', null),
        ve([ip(0, Ye('loggerFactory'))], t.prototype, 'setBeans', null),
        (t = ve([x('columnModel')], t)),
        t
      );
    })(D);
  function _r(n) {
    return n === 'gridOptionsUpdated' ? 'gridOptionsChanged' : n;
  }
  var ap = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    lp = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    up = (function (n) {
      ap(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.calculateColMinWidth = function (e) {
          return e.minWidth != null ? e.minWidth : this.environment.getMinColWidth();
        }),
        (t.prototype.calculateColMaxWidth = function (e) {
          return e.maxWidth != null ? e.maxWidth : Number.MAX_SAFE_INTEGER;
        }),
        (t.prototype.calculateColInitialWidth = function (e) {
          var r = this.calculateColMinWidth(e),
            o = this.calculateColMaxWidth(e),
            i,
            s = Mt(e.width),
            a = Mt(e.initialWidth);
          return s != null ? (i = s) : a != null ? (i = a) : (i = 200), Math.max(Math.min(i, o), r);
        }),
        (t.prototype.getOriginalPathForColumn = function (e, r) {
          var o = [],
            i = !1,
            s = function (a, l) {
              for (var u = 0; u < a.length; u++) {
                if (i) return;
                var c = a[u];
                if (c instanceof ie) {
                  var p = c;
                  s(p.getChildren(), l + 1), (o[l] = c);
                } else c === e && (i = !0);
              }
            };
          return s(r, 0), i ? o : null;
        }),
        (t.prototype.depthFirstOriginalTreeSearch = function (e, r, o) {
          var i = this;
          r &&
            r.forEach(function (s) {
              s instanceof ie && i.depthFirstOriginalTreeSearch(s, s.getChildren(), o), o(s, e);
            });
        }),
        (t.prototype.depthFirstAllColumnTreeSearch = function (e, r) {
          var o = this;
          e &&
            e.forEach(function (i) {
              i instanceof se && o.depthFirstAllColumnTreeSearch(i.getChildren(), r), r(i);
            });
        }),
        (t.prototype.depthFirstDisplayedColumnTreeSearch = function (e, r) {
          var o = this;
          e &&
            e.forEach(function (i) {
              i instanceof se && o.depthFirstDisplayedColumnTreeSearch(i.getDisplayedChildren(), r),
                r(i);
            });
        }),
        (t = lp([x('columnUtils')], t)),
        t
      );
    })(D),
    cp = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    pp = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    dp = (function (n) {
      cp(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.createDisplayedGroups = function (e, r, o, i) {
          for (
            var s = this,
              a = this.mapOldGroupsById(i),
              l = [],
              u = e,
              c = function () {
                var p = u;
                u = [];
                for (
                  var d = 0,
                    h = function (R) {
                      var O = d;
                      d = R;
                      var b = p[O],
                        A = b instanceof se ? b.getProvidedColumnGroup() : b,
                        M = A.getOriginalParent();
                      if (M == null) {
                        for (var N = O; N < R; N++) l.push(p[N]);
                        return;
                      }
                      for (var I = s.createColumnGroup(M, r, a, o), N = O; N < R; N++)
                        I.addChild(p[N]);
                      u.push(I);
                    },
                    f = 1;
                  f < p.length;
                  f++
                ) {
                  var y = p[f],
                    m = y instanceof se ? y.getProvidedColumnGroup() : y,
                    C = m.getOriginalParent(),
                    w = p[d],
                    E = w instanceof se ? w.getProvidedColumnGroup() : w,
                    S = E.getOriginalParent();
                  C !== S && h(f);
                }
                d < p.length && h(p.length);
              };
            u.length;

          )
            c();
          return this.setupParentsIntoColumns(l, null), l;
        }),
        (t.prototype.createColumnGroup = function (e, r, o, i) {
          var s = e.getGroupId(),
            a = r.getInstanceIdForKey(s),
            l = se.createUniqueId(s, a),
            u = o[l];
          return (
            u && u.getProvidedColumnGroup() !== e && (u = null),
            P(u) ? u.reset() : ((u = new se(e, s, a, i)), this.context.createBean(u)),
            u
          );
        }),
        (t.prototype.mapOldGroupsById = function (e) {
          var r = {},
            o = function (i) {
              i.forEach(function (s) {
                if (s instanceof se) {
                  var a = s;
                  (r[s.getUniqueId()] = a), o(a.getChildren());
                }
              });
            };
          return e && o(e), r;
        }),
        (t.prototype.setupParentsIntoColumns = function (e, r) {
          var o = this;
          e.forEach(function (i) {
            if ((i.setParent(r), i instanceof se)) {
              var s = i;
              o.setupParentsIntoColumns(s.getChildren(), s);
            }
          });
        }),
        (t = pp([x('displayedGroupCreator')], t)),
        t
      );
    })(D),
    Gt = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Vt = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    hp = {
      enableBrowserTooltips: !0,
      tooltipTrigger: !0,
      tooltipMouseTrack: !0,
      tooltipInteraction: !0,
      defaultColGroupDef: !0,
      suppressAutoSize: !0,
      skipHeaderOnAutoSize: !0,
      autoSizeStrategy: !0,
      components: !0,
      stopEditingWhenCellsLoseFocus: !0,
      undoRedoCellEditing: !0,
      undoRedoCellEditingLimit: !0,
      excelStyles: !0,
      cacheQuickFilter: !0,
      excludeHiddenColumnsFromQuickFilter: !0,
      advancedFilterModel: !0,
      customChartThemes: !0,
      chartThemeOverrides: !0,
      enableChartToolPanelsButton: !0,
      suppressChartToolPanelsButton: !0,
      chartToolPanelsDef: !0,
      loadingCellRendererSelector: !0,
      localeText: !0,
      keepDetailRows: !0,
      keepDetailRowsCount: !0,
      detailRowHeight: !0,
      detailRowAutoHeight: !0,
      tabIndex: !0,
      valueCache: !0,
      valueCacheNeverExpires: !0,
      enableCellExpressions: !0,
      suppressParentsInRowNodes: !0,
      suppressTouch: !0,
      suppressAsyncEvents: !0,
      suppressBrowserResizeObserver: !0,
      suppressPropertyNamesCheck: !0,
      debug: !0,
      loadingOverlayComponent: !0,
      suppressLoadingOverlay: !0,
      noRowsOverlayComponent: !0,
      paginationPageSizeSelector: !0,
      paginateChildRows: !0,
      pivotPanelShow: !0,
      pivotSuppressAutoColumn: !0,
      suppressExpandablePivotGroups: !0,
      aggFuncs: !0,
      suppressAggFuncInHeader: !0,
      suppressAggAtRootLevel: !0,
      removePivotHeaderRowWhenSingleValueColumn: !0,
      allowShowChangeAfterFilter: !0,
      ensureDomOrder: !0,
      enableRtl: !0,
      suppressColumnVirtualisation: !0,
      suppressMaxRenderedRowRestriction: !0,
      suppressRowVirtualisation: !0,
      rowDragText: !0,
      suppressGroupMaintainValueType: !0,
      groupLockGroupColumns: !0,
      rowGroupPanelSuppressSort: !0,
      suppressGroupRowsSticky: !0,
      rowModelType: !0,
      cacheOverflowSize: !0,
      infiniteInitialRowCount: !0,
      serverSideInitialRowCount: !0,
      suppressServerSideInfiniteScroll: !0,
      maxBlocksInCache: !0,
      maxConcurrentDatasourceRequests: !0,
      blockLoadDebounceMillis: !0,
      serverSideOnlyRefreshFilteredGroups: !0,
      serverSidePivotResultFieldSeparator: !0,
      viewportRowModelPageSize: !0,
      viewportRowModelBufferSize: !0,
      debounceVerticalScrollbar: !0,
      suppressAnimationFrame: !0,
      suppressPreventDefaultOnMouseWheel: !0,
      scrollbarWidth: !0,
      icons: !0,
      suppressRowTransform: !0,
      gridId: !0,
      functionsPassive: !0,
      enableGroupEdit: !0,
      initialState: !0,
      processUnpinnedColumns: !0,
      createChartContainer: !0,
      getLocaleText: !0,
      getRowId: !0,
      reactiveCustomComponents: !0,
      columnMenu: !0,
    },
    dt = (function () {
      function n() {}
      return (
        (n.STRING_PROPERTIES = [
          'rowSelection',
          'overlayLoadingTemplate',
          'overlayNoRowsTemplate',
          'gridId',
          'quickFilterText',
          'rowModelType',
          'editType',
          'domLayout',
          'clipboardDelimiter',
          'rowGroupPanelShow',
          'multiSortKey',
          'pivotColumnGroupTotals',
          'pivotRowTotals',
          'pivotPanelShow',
          'fillHandleDirection',
          'groupDisplayType',
          'treeDataDisplayType',
          'colResizeDefault',
          'tooltipTrigger',
          'serverSidePivotResultFieldSeparator',
          'columnMenu',
        ]),
        (n.OBJECT_PROPERTIES = [
          'components',
          'rowStyle',
          'context',
          'autoGroupColumnDef',
          'localeText',
          'icons',
          'datasource',
          'serverSideDatasource',
          'viewportDatasource',
          'groupRowRendererParams',
          'aggFuncs',
          'fullWidthCellRendererParams',
          'defaultColGroupDef',
          'defaultColDef',
          'defaultCsvExportParams',
          'defaultExcelExportParams',
          'columnTypes',
          'rowClassRules',
          'detailCellRendererParams',
          'loadingCellRendererParams',
          'loadingOverlayComponentParams',
          'noRowsOverlayComponentParams',
          'popupParent',
          'statusBar',
          'sideBar',
          'chartThemeOverrides',
          'customChartThemes',
          'chartToolPanelsDef',
          'dataTypeDefinitions',
          'advancedFilterModel',
          'advancedFilterParent',
          'advancedFilterBuilderParams',
          'initialState',
          'autoSizeStrategy',
        ]),
        (n.ARRAY_PROPERTIES = [
          'sortingOrder',
          'alignedGrids',
          'rowData',
          'columnDefs',
          'excelStyles',
          'pinnedTopRowData',
          'pinnedBottomRowData',
          'chartThemes',
          'rowClass',
          'paginationPageSizeSelector',
        ]),
        (n.NUMBER_PROPERTIES = [
          'rowHeight',
          'detailRowHeight',
          'rowBuffer',
          'headerHeight',
          'groupHeaderHeight',
          'groupLockGroupColumns',
          'floatingFiltersHeight',
          'pivotHeaderHeight',
          'pivotGroupHeaderHeight',
          'groupDefaultExpanded',
          'pivotDefaultExpanded',
          'viewportRowModelPageSize',
          'viewportRowModelBufferSize',
          'autoSizePadding',
          'maxBlocksInCache',
          'maxConcurrentDatasourceRequests',
          'tooltipShowDelay',
          'tooltipHideDelay',
          'cacheOverflowSize',
          'paginationPageSize',
          'cacheBlockSize',
          'infiniteInitialRowCount',
          'serverSideInitialRowCount',
          'scrollbarWidth',
          'asyncTransactionWaitMillis',
          'blockLoadDebounceMillis',
          'keepDetailRowsCount',
          'undoRedoCellEditingLimit',
          'cellFlashDelay',
          'cellFadeDelay',
          'cellFlashDuration',
          'cellFadeDuration',
          'tabIndex',
        ]),
        (n.BOOLEAN_PROPERTIES = [
          'suppressMakeColumnVisibleAfterUnGroup',
          'suppressRowClickSelection',
          'suppressCellFocus',
          'suppressHeaderFocus',
          'suppressHorizontalScroll',
          'groupSelectsChildren',
          'alwaysShowHorizontalScroll',
          'alwaysShowVerticalScroll',
          'debug',
          'enableBrowserTooltips',
          'enableCellExpressions',
          'groupIncludeTotalFooter',
          'groupSuppressBlankHeader',
          'suppressMenuHide',
          'suppressRowDeselection',
          'unSortIcon',
          'suppressMultiSort',
          'alwaysMultiSort',
          'singleClickEdit',
          'suppressLoadingOverlay',
          'suppressNoRowsOverlay',
          'suppressAutoSize',
          'skipHeaderOnAutoSize',
          'suppressParentsInRowNodes',
          'suppressColumnMoveAnimation',
          'suppressMovableColumns',
          'suppressFieldDotNotation',
          'enableRangeSelection',
          'enableRangeHandle',
          'enableFillHandle',
          'suppressClearOnFillReduction',
          'deltaSort',
          'suppressTouch',
          'suppressAsyncEvents',
          'allowContextMenuWithControlKey',
          'suppressContextMenu',
          'enableCellChangeFlash',
          'suppressDragLeaveHidesColumns',
          'suppressRowGroupHidesColumns',
          'suppressMiddleClickScrolls',
          'suppressPreventDefaultOnMouseWheel',
          'suppressCopyRowsToClipboard',
          'copyHeadersToClipboard',
          'copyGroupHeadersToClipboard',
          'pivotMode',
          'suppressAggFuncInHeader',
          'suppressColumnVirtualisation',
          'alwaysAggregateAtRootLevel',
          'suppressAggAtRootLevel',
          'suppressFocusAfterRefresh',
          'functionsPassive',
          'functionsReadOnly',
          'animateRows',
          'groupSelectsFiltered',
          'groupRemoveSingleChildren',
          'groupRemoveLowestSingleChildren',
          'enableRtl',
          'suppressClickEdit',
          'rowDragEntireRow',
          'rowDragManaged',
          'suppressRowDrag',
          'suppressMoveWhenRowDragging',
          'rowDragMultiRow',
          'enableGroupEdit',
          'embedFullWidthRows',
          'suppressPaginationPanel',
          'groupHideOpenParents',
          'groupAllowUnbalanced',
          'pagination',
          'paginationAutoPageSize',
          'suppressScrollOnNewData',
          'suppressScrollWhenPopupsAreOpen',
          'purgeClosedRowNodes',
          'cacheQuickFilter',
          'includeHiddenColumnsInQuickFilter',
          'excludeHiddenColumnsFromQuickFilter',
          'ensureDomOrder',
          'accentedSort',
          'suppressChangeDetection',
          'valueCache',
          'valueCacheNeverExpires',
          'aggregateOnlyChangedColumns',
          'suppressAnimationFrame',
          'suppressExcelExport',
          'suppressCsvExport',
          'includeHiddenColumnsInAdvancedFilter',
          'suppressMultiRangeSelection',
          'enterMovesDown',
          'enterMovesDownAfterEdit',
          'enterNavigatesVerticallyAfterEdit',
          'enterNavigatesVertically',
          'suppressPropertyNamesCheck',
          'rowMultiSelectWithClick',
          'suppressRowHoverHighlight',
          'suppressRowTransform',
          'suppressClipboardPaste',
          'suppressLastEmptyLineOnPaste',
          'enableCharts',
          'enableChartToolPanelsButton',
          'suppressChartToolPanelsButton',
          'suppressMaintainUnsortedOrder',
          'enableCellTextSelection',
          'suppressBrowserResizeObserver',
          'suppressMaxRenderedRowRestriction',
          'excludeChildrenWhenTreeDataFiltering',
          'tooltipMouseTrack',
          'tooltipInteraction',
          'keepDetailRows',
          'paginateChildRows',
          'preventDefaultOnContextMenu',
          'undoRedoCellEditing',
          'allowDragFromColumnsToolPanel',
          'pivotSuppressAutoColumn',
          'suppressExpandablePivotGroups',
          'debounceVerticalScrollbar',
          'detailRowAutoHeight',
          'serverSideFilterAllLevels',
          'serverSideSortAllLevels',
          'serverSideEnableClientSideSort',
          'serverSideOnlyRefreshFilteredGroups',
          'serverSideSortOnServer',
          'serverSideFilterOnServer',
          'suppressAggFilteredOnly',
          'showOpenedGroup',
          'suppressClipboardApi',
          'suppressModelUpdateAfterUpdateTransaction',
          'stopEditingWhenCellsLoseFocus',
          'maintainColumnOrder',
          'groupMaintainOrder',
          'columnHoverHighlight',
          'readOnlyEdit',
          'suppressRowVirtualisation',
          'enableCellEditingOnBackspace',
          'resetRowDataOnUpdate',
          'removePivotHeaderRowWhenSingleValueColumn',
          'suppressCopySingleCellRanges',
          'suppressGroupRowsSticky',
          'suppressCutToClipboard',
          'suppressServerSideInfiniteScroll',
          'rowGroupPanelSuppressSort',
          'allowShowChangeAfterFilter',
          'enableAdvancedFilter',
          'masterDetail',
          'treeData',
          'suppressGroupMaintainValueType',
          'reactiveCustomComponents',
        ]),
        (n.FUNCTIONAL_PROPERTIES = [
          'doesExternalFilterPass',
          'processPivotResultColDef',
          'processPivotResultColGroupDef',
          'getBusinessKeyForNode',
          'isRowSelectable',
          'rowDragText',
          'groupRowRenderer',
          'fullWidthCellRenderer',
          'loadingCellRenderer',
          'loadingOverlayComponent',
          'noRowsOverlayComponent',
          'detailCellRenderer',
          'quickFilterParser',
          'quickFilterMatcher',
        ]),
        (n.CALLBACK_PROPERTIES = [
          'getLocaleText',
          'isExternalFilterPresent',
          'getRowHeight',
          'getRowClass',
          'getRowStyle',
          'getContextMenuItems',
          'getMainMenuItems',
          'processRowPostCreate',
          'processCellForClipboard',
          'getGroupRowAgg',
          'isFullWidthRow',
          'sendToClipboard',
          'navigateToNextHeader',
          'tabToNextHeader',
          'navigateToNextCell',
          'tabToNextCell',
          'processCellFromClipboard',
          'getDocument',
          'postProcessPopup',
          'getChildCount',
          'getDataPath',
          'isRowMaster',
          'postSortRows',
          'processHeaderForClipboard',
          'processUnpinnedColumns',
          'processGroupHeaderForClipboard',
          'paginationNumberFormatter',
          'processDataFromClipboard',
          'getServerSideGroupKey',
          'isServerSideGroup',
          'createChartContainer',
          'getChartToolbarItems',
          'fillOperation',
          'isApplyServerSideTransaction',
          'getServerSideGroupLevelParams',
          'isServerSideGroupOpenByDefault',
          'isGroupOpenByDefault',
          'initialGroupOrderComparator',
          'groupIncludeFooter',
          'loadingCellRendererSelector',
          'getRowId',
          'groupAggFiltering',
        ]),
        (n.FUNCTION_PROPERTIES = Vt(
          Vt([], Gt(n.FUNCTIONAL_PROPERTIES), !1),
          Gt(n.CALLBACK_PROPERTIES),
          !1
        )),
        (n.ALL_PROPERTIES = Vt(
          Vt(
            Vt(
              Vt(
                Vt(Vt([], Gt(n.ARRAY_PROPERTIES), !1), Gt(n.OBJECT_PROPERTIES), !1),
                Gt(n.STRING_PROPERTIES),
                !1
              ),
              Gt(n.NUMBER_PROPERTIES),
              !1
            ),
            Gt(n.FUNCTION_PROPERTIES),
            !1
          ),
          Gt(n.BOOLEAN_PROPERTIES),
          !1
        )),
        n
      );
    })(),
    cn = function () {
      return (
        (cn =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        cn.apply(this, arguments)
      );
    },
    ba = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Fa = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    La = (function () {
      function n() {}
      (n.getCallbackForEvent = function (e) {
        return !e || e.length < 2 ? e : 'on' + e[0].toUpperCase() + e.substring(1);
      }),
        (n.getGridOptionKeys = function () {
          return this.ALL_PROPERTIES_AND_CALLBACKS;
        }),
        (n.combineAttributesAndGridOptions = function (e, r) {
          typeof e != 'object' && (e = {});
          var o = cn({}, e),
            i = n.getGridOptionKeys();
          return (
            i.forEach(function (s) {
              var a = r[s];
              typeof a < 'u' && a !== n.VUE_OMITTED_PROPERTY && (o[s] = a);
            }),
            o
          );
        }),
        (n.processOnChange = function (e, r) {
          if (e) {
            var o = {},
              i = !1;
            if (
              (Object.keys(e)
                .filter(function (a) {
                  return n.ALL_PROPERTIES_AND_CALLBACKS_SET.has(a);
                })
                .forEach(function (a) {
                  (o[a] = e[a]), (i = !0);
                }),
              !!i)
            ) {
              r.__internalUpdateGridOptions(o);
              var s = { type: g.EVENT_COMPONENT_STATE_CHANGED };
              ye(o, function (a, l) {
                s[a] = l;
              }),
                r.dispatchEvent(s);
            }
          }
        });
      var t;
      return (
        (t = n),
        (n.EVENTS = Zt(g)),
        (n.VUE_OMITTED_PROPERTY = 'AG-VUE-OMITTED-PROPERTY'),
        (n.EXCLUDED_INTERNAL_EVENTS = [
          g.EVENT_SCROLLBAR_WIDTH_CHANGED,
          g.EVENT_CHECKBOX_CHANGED,
          g.EVENT_HEIGHT_SCALE_CHANGED,
          g.EVENT_BODY_HEIGHT_CHANGED,
          g.EVENT_COLUMN_CONTAINER_WIDTH_CHANGED,
          g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
          g.EVENT_SCROLL_VISIBILITY_CHANGED,
          g.EVENT_COLUMN_HOVER_CHANGED,
          g.EVENT_FLASH_CELLS,
          g.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED,
          g.EVENT_DISPLAYED_ROWS_CHANGED,
          g.EVENT_LEFT_PINNED_WIDTH_CHANGED,
          g.EVENT_RIGHT_PINNED_WIDTH_CHANGED,
          g.EVENT_ROW_CONTAINER_HEIGHT_CHANGED,
          g.EVENT_POPUP_TO_FRONT,
          g.EVENT_STORE_UPDATED,
          g.EVENT_COLUMN_PANEL_ITEM_DRAG_START,
          g.EVENT_COLUMN_PANEL_ITEM_DRAG_END,
          g.EVENT_FILL_START,
          g.EVENT_FILL_END,
          g.EVENT_KEY_SHORTCUT_CHANGED_CELL_START,
          g.EVENT_KEY_SHORTCUT_CHANGED_CELL_END,
          g.EVENT_FULL_WIDTH_ROW_FOCUSED,
          g.EVENT_HEADER_HEIGHT_CHANGED,
          g.EVENT_COLUMN_HEADER_HEIGHT_CHANGED,
          g.EVENT_CELL_FOCUS_CLEARED,
          g.EVENT_GRID_STYLES_CHANGED,
          g.EVENT_FILTER_DESTROYED,
          g.EVENT_ROW_DATA_UPDATE_STARTED,
          g.EVENT_ADVANCED_FILTER_ENABLED_CHANGED,
          g.EVENT_DATA_TYPES_INFERRED,
          g.EVENT_FIELD_VALUE_CHANGED,
          g.EVENT_FIELD_PICKER_VALUE_SELECTED,
          g.EVENT_SUPPRESS_COLUMN_MOVE_CHANGED,
          g.EVENT_SUPPRESS_MENU_HIDE_CHANGED,
          g.EVENT_SUPPRESS_FIELD_DOT_NOTATION,
          g.EVENT_ROW_COUNT_READY,
          g.EVENT_SIDE_BAR_UPDATED,
        ]),
        (n.PUBLIC_EVENTS = n.EVENTS.filter(function (e) {
          return !ot(n.EXCLUDED_INTERNAL_EVENTS, e);
        })),
        (n.EVENT_CALLBACKS = n.EVENTS.map(function (e) {
          return n.getCallbackForEvent(e);
        })),
        (n.STRING_PROPERTIES = dt.STRING_PROPERTIES),
        (n.OBJECT_PROPERTIES = dt.OBJECT_PROPERTIES),
        (n.ARRAY_PROPERTIES = dt.ARRAY_PROPERTIES),
        (n.NUMBER_PROPERTIES = dt.NUMBER_PROPERTIES),
        (n.BOOLEAN_PROPERTIES = dt.BOOLEAN_PROPERTIES),
        (n.FUNCTION_PROPERTIES = dt.FUNCTION_PROPERTIES),
        (n.ALL_PROPERTIES = dt.ALL_PROPERTIES),
        (n.ALL_PROPERTIES_AND_CALLBACKS = Fa(
          Fa([], ba(t.ALL_PROPERTIES), !1),
          ba(t.EVENT_CALLBACKS),
          !1
        )),
        (n.ALL_PROPERTIES_AND_CALLBACKS_SET = new Set(n.ALL_PROPERTIES_AND_CALLBACKS)),
        n
      );
    })(),
    fp = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    vp = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    gp = (function (n) {
      fp(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.componentsMappedByName = {}), e;
      }
      return (
        (t.prototype.setupComponents = function (e) {
          var r = this;
          e &&
            e.forEach(function (o) {
              return r.addComponent(o);
            });
        }),
        (t.prototype.addComponent = function (e) {
          var r = e.componentName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(),
            o = r.toUpperCase();
          this.componentsMappedByName[o] = e.componentClass;
        }),
        (t.prototype.getComponentClass = function (e) {
          return this.componentsMappedByName[e];
        }),
        (t = vp([x('agStackComponentsRegistry')], t)),
        t
      );
    })(D);
  function qe(n, t, e) {
    e == null || (typeof e == 'string' && e == '') ? pn(n, t) : Qe(n, t, e);
  }
  function Qe(n, t, e) {
    n.setAttribute(Ma(t), e.toString());
  }
  function pn(n, t) {
    n.removeAttribute(Ma(t));
  }
  function Ma(n) {
    return 'aria-'.concat(n);
  }
  function le(n, t) {
    t ? n.setAttribute('role', t) : n.removeAttribute('role');
  }
  function Ia(n) {
    var t;
    return (
      n === 'asc'
        ? (t = 'ascending')
        : n === 'desc'
        ? (t = 'descending')
        : n === 'mixed'
        ? (t = 'other')
        : (t = 'none'),
      t
    );
  }
  function yp(n) {
    return parseInt(n.getAttribute('aria-level'), 10);
  }
  function xa(n) {
    return parseInt(n.getAttribute('aria-posinset'), 10);
  }
  function Na(n) {
    return n.getAttribute('aria-label');
  }
  function Ht(n, t) {
    qe(n, 'label', t);
  }
  function Uo(n, t) {
    qe(n, 'labelledby', t);
  }
  function mp(n, t) {
    qe(n, 'describedby', t);
  }
  function dn(n, t) {
    qe(n, 'live', t);
  }
  function Ga(n, t) {
    qe(n, 'atomic', t);
  }
  function Va(n, t) {
    qe(n, 'relevant', t);
  }
  function Ha(n, t) {
    qe(n, 'level', t);
  }
  function hn(n, t) {
    qe(n, 'disabled', t);
  }
  function zo(n, t) {
    qe(n, 'hidden', t);
  }
  function fn(n, t) {
    qe(n, 'activedescendant', t);
  }
  function Pt(n, t) {
    Qe(n, 'expanded', t);
  }
  function Ba(n) {
    pn(n, 'expanded');
  }
  function vn(n, t) {
    Qe(n, 'setsize', t);
  }
  function gn(n, t) {
    Qe(n, 'posinset', t);
  }
  function ka(n, t) {
    Qe(n, 'multiselectable', t);
  }
  function Wa(n, t) {
    Qe(n, 'rowcount', t);
  }
  function yn(n, t) {
    Qe(n, 'rowindex', t);
  }
  function ja(n, t) {
    Qe(n, 'colcount', t);
  }
  function mn(n, t) {
    Qe(n, 'colindex', t);
  }
  function Ua(n, t) {
    Qe(n, 'colspan', t);
  }
  function za(n, t) {
    Qe(n, 'sort', t);
  }
  function Ka(n) {
    pn(n, 'sort');
  }
  function Rr(n, t) {
    qe(n, 'selected', t);
  }
  function Cp(n, t) {
    Qe(n, 'checked', t === void 0 ? 'mixed' : t);
  }
  function Cn(n, t) {
    qe(n, 'controls', t.id), Uo(t, n.id);
  }
  function Sn(n, t) {
    return t === void 0
      ? n('ariaIndeterminate', 'indeterminate')
      : t === !0
      ? n('ariaChecked', 'checked')
      : n('ariaUnchecked', 'unchecked');
  }
  var Sp = Object.freeze({
      __proto__: null,
      setAriaRole: le,
      getAriaSortState: Ia,
      getAriaLevel: yp,
      getAriaPosInSet: xa,
      getAriaLabel: Na,
      setAriaLabel: Ht,
      setAriaLabelledBy: Uo,
      setAriaDescribedBy: mp,
      setAriaLive: dn,
      setAriaAtomic: Ga,
      setAriaRelevant: Va,
      setAriaLevel: Ha,
      setAriaDisabled: hn,
      setAriaHidden: zo,
      setAriaActiveDescendant: fn,
      setAriaExpanded: Pt,
      removeAriaExpanded: Ba,
      setAriaSetSize: vn,
      setAriaPosInSet: gn,
      setAriaMultiSelectable: ka,
      setAriaRowCount: Wa,
      setAriaRowIndex: yn,
      setAriaColCount: ja,
      setAriaColIndex: mn,
      setAriaColSpan: Ua,
      setAriaSort: za,
      removeAriaSort: Ka,
      setAriaSelected: Rr,
      setAriaChecked: Cp,
      setAriaControls: Cn,
      getAriaCheckboxStateName: Sn,
    }),
    wn,
    Ko,
    En,
    _n,
    Rn,
    On,
    Tn,
    Pn;
  function ht() {
    return wn === void 0 && (wn = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)), wn;
  }
  function Dn() {
    if (Ko === void 0)
      if (ht()) {
        var n = navigator.userAgent.match(/version\/(\d+)/i);
        n && (Ko = n[1] != null ? parseFloat(n[1]) : 0);
      } else Ko = 0;
    return Ko;
  }
  function $o() {
    if (En === void 0) {
      var n = window;
      En =
        (!!n.chrome && (!!n.chrome.webstore || !!n.chrome.runtime)) ||
        (/Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor));
    }
    return En;
  }
  function An() {
    return _n === void 0 && (_n = /(firefox)/i.test(navigator.userAgent)), _n;
  }
  function bn() {
    return Rn === void 0 && (Rn = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)), Rn;
  }
  function Dt() {
    return (
      On === void 0 &&
        (On =
          /iPad|iPhone|iPod/.test(navigator.platform) ||
          (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)),
      On
    );
  }
  function Fn() {
    return !ht() || Dn() >= 15;
  }
  function Yo(n) {
    if (!n) return null;
    var t = n.tabIndex,
      e = n.getAttribute('tabIndex');
    return t === -1 && (e === null || (e === '' && !An())) ? null : t.toString();
  }
  function $a() {
    if (!document.body) return -1;
    var n = 1e6,
      t = navigator.userAgent.toLowerCase().match(/firefox/) ? 6e6 : 1e9,
      e = document.createElement('div');
    for (document.body.appendChild(e); ; ) {
      var r = n * 2;
      if (((e.style.height = r + 'px'), r > t || e.clientHeight !== r)) break;
      n = r;
    }
    return document.body.removeChild(e), n;
  }
  function Ya() {
    var n, t, e;
    return (t = (n = document.body) === null || n === void 0 ? void 0 : n.clientWidth) !== null &&
      t !== void 0
      ? t
      : window.innerHeight ||
          ((e = document.documentElement) === null || e === void 0 ? void 0 : e.clientWidth) ||
          -1;
  }
  function qa() {
    var n, t, e;
    return (t = (n = document.body) === null || n === void 0 ? void 0 : n.clientHeight) !== null &&
      t !== void 0
      ? t
      : window.innerHeight ||
          ((e = document.documentElement) === null || e === void 0 ? void 0 : e.clientHeight) ||
          -1;
  }
  function Qa() {
    return Pn == null && Xa(), Pn;
  }
  function Xa() {
    var n = document.body,
      t = document.createElement('div');
    (t.style.width = t.style.height = '100px'),
      (t.style.opacity = '0'),
      (t.style.overflow = 'scroll'),
      (t.style.msOverflowStyle = 'scrollbar'),
      (t.style.position = 'absolute'),
      n.appendChild(t);
    var e = t.offsetWidth - t.clientWidth;
    e === 0 && t.clientWidth === 0 && (e = null),
      t.parentNode && t.parentNode.removeChild(t),
      e != null && ((Pn = e), (Tn = e === 0));
  }
  function Ln() {
    return Tn == null && Xa(), Tn;
  }
  var wp = Object.freeze({
    __proto__: null,
    isBrowserSafari: ht,
    getSafariVersion: Dn,
    isBrowserChrome: $o,
    isBrowserFirefox: An,
    isMacOsUserAgent: bn,
    isIOSUserAgent: Dt,
    browserSupportsPreventScroll: Fn,
    getTabIndex: Yo,
    getMaxDivHeight: $a,
    getBodyWidth: Ya,
    getBodyHeight: qa,
    getScrollbarWidth: Qa,
    isInvisibleScrollbar: Ln,
  });
  function Or(n, t) {
    return n.toString().padStart(t, '0');
  }
  function Ja(n, t) {
    for (var e = [], r = n; r <= t; r++) e.push(r);
    return e;
  }
  function Ep(n) {
    return (
      typeof n == 'string' && (n = parseInt(n, 10)), typeof n == 'number' ? Math.floor(n) : null
    );
  }
  function _p(n, t) {
    for (var e = '', r = 0; r < t; r++) (e += String.fromCharCode(n & 255)), (n >>>= 8);
    return e;
  }
  function Rp(n, t, e) {
    return typeof n != 'number' ? '' : Mn(Math.round(n * 100) / 100, t, e);
  }
  function Mn(n, t, e) {
    return typeof n != 'number'
      ? ''
      : n
          .toString()
          .replace('.', e)
          .replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1'.concat(t));
  }
  function Op(n) {
    return n == null
      ? null
      : n.reduce(function (t, e) {
          return t + e;
        }, 0);
  }
  var Tp = Object.freeze({
      __proto__: null,
      padStartWidthZeros: Or,
      createArrayOfNumbers: Ja,
      cleanNumber: Ep,
      decToHex: _p,
      formatNumberTwoDecimalPlacesAndCommas: Rp,
      formatNumberCommas: Mn,
      sum: Op,
    }),
    In = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    };
  function Xe(n, t, e) {
    if ((t === void 0 && (t = !0), e === void 0 && (e = '-'), !n)) return null;
    var r = [n.getFullYear(), n.getMonth() + 1, n.getDate()]
      .map(function (o) {
        return Or(o, 2);
      })
      .join(e);
    return (
      t &&
        (r +=
          ' ' +
          [n.getHours(), n.getMinutes(), n.getSeconds()]
            .map(function (o) {
              return Or(o, 2);
            })
            .join(':')),
      r
    );
  }
  var xn = function (n) {
    if (n > 3 && n < 21) return 'th';
    var t = n % 10;
    switch (t) {
      case 1:
        return 'st';
      case 2:
        return 'nd';
      case 3:
        return 'rd';
    }
    return 'th';
  };
  function Tr(n, t) {
    t === void 0 && (t = 'YYYY-MM-DD');
    var e = Or(n.getFullYear(), 4),
      r = [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December',
      ],
      o = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
      i = {
        YYYY: function () {
          return e.slice(e.length - 4, e.length);
        },
        YY: function () {
          return e.slice(e.length - 2, e.length);
        },
        Y: function () {
          return ''.concat(n.getFullYear());
        },
        MMMM: function () {
          return r[n.getMonth()];
        },
        MMM: function () {
          return r[n.getMonth()].slice(0, 3);
        },
        MM: function () {
          return Or(n.getMonth() + 1, 2);
        },
        Mo: function () {
          return ''.concat(n.getMonth() + 1).concat(xn(n.getMonth() + 1));
        },
        M: function () {
          return ''.concat(n.getMonth() + 1);
        },
        Do: function () {
          return ''.concat(n.getDate()).concat(xn(n.getDate()));
        },
        DD: function () {
          return Or(n.getDate(), 2);
        },
        D: function () {
          return ''.concat(n.getDate());
        },
        dddd: function () {
          return o[n.getDay()];
        },
        ddd: function () {
          return o[n.getDay()].slice(0, 3);
        },
        dd: function () {
          return o[n.getDay()].slice(0, 2);
        },
        do: function () {
          return ''.concat(n.getDay()).concat(xn(n.getDay()));
        },
        d: function () {
          return ''.concat(n.getDay());
        },
      },
      s = new RegExp(Object.keys(i).join('|'), 'g');
    return t.replace(s, function (a) {
      return a in i ? i[a]() : a;
    });
  }
  function _e(n) {
    if (!n) return null;
    var t = In(n.split(' '), 2),
      e = t[0],
      r = t[1];
    if (!e) return null;
    var o = e.split('-').map(function (f) {
      return parseInt(f, 10);
    });
    if (
      o.filter(function (f) {
        return !isNaN(f);
      }).length !== 3
    )
      return null;
    var i = In(o, 3),
      s = i[0],
      a = i[1],
      l = i[2],
      u = new Date(s, a - 1, l);
    if (u.getFullYear() !== s || u.getMonth() !== a - 1 || u.getDate() !== l) return null;
    if (!r || r === '00:00:00') return u;
    var c = In(
        r.split(':').map(function (f) {
          return parseInt(f, 10);
        }),
        3
      ),
      p = c[0],
      d = c[1],
      h = c[2];
    return (
      p >= 0 && p < 24 && u.setHours(p),
      d >= 0 && d < 60 && u.setMinutes(d),
      h >= 0 && h < 60 && u.setSeconds(h),
      u
    );
  }
  var Pp = Object.freeze({
      __proto__: null,
      serialiseDate: Xe,
      dateToFormattedString: Tr,
      parseDateTimeFromString: _e,
    }),
    Dp = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    },
    Ap = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    qo;
  function Nn(n, t, e) {
    for (var r = n.parentElement, o = r && r.firstChild; o; )
      t && o.classList.toggle(t, o === n), e && o.classList.toggle(e, o !== n), (o = o.nextSibling);
  }
  var Za = '[tabindex], input, select, button, textarea, [href]',
    Gn = '[disabled], .ag-disabled:not(.ag-button), .ag-disabled *';
  function Vn(n) {
    var t = Element.prototype.matches || Element.prototype.msMatchesSelector,
      e = 'input, select, button, textarea',
      r = t.call(n, e),
      o = t.call(n, Gn),
      i = We(n),
      s = r && !o && i;
    return s;
  }
  function $(n, t, e) {
    e === void 0 && (e = {});
    var r = e.skipAriaHidden;
    n.classList.toggle('ag-hidden', !t), r || zo(n, !t);
  }
  function el(n, t, e) {
    e === void 0 && (e = {});
    var r = e.skipAriaHidden;
    n.classList.toggle('ag-invisible', !t), r || zo(n, !t);
  }
  function Pr(n, t) {
    var e = 'disabled',
      r = t
        ? function (o) {
            return o.setAttribute(e, '');
          }
        : function (o) {
            return o.removeAttribute(e);
          };
    r(n),
      zn(n.querySelectorAll('input'), function (o) {
        return r(o);
      });
  }
  function or(n, t, e) {
    for (var r = 0; n; ) {
      if (n.classList.contains(t)) return !0;
      if (((n = n.parentElement), typeof e == 'number')) {
        if (++r > e) break;
      } else if (n === e) break;
    }
    return !1;
  }
  function Bt(n) {
    var t = window.getComputedStyle(n),
      e = t.height,
      r = t.width,
      o = t.borderTopWidth,
      i = t.borderRightWidth,
      s = t.borderBottomWidth,
      a = t.borderLeftWidth,
      l = t.paddingTop,
      u = t.paddingRight,
      c = t.paddingBottom,
      p = t.paddingLeft,
      d = t.marginTop,
      h = t.marginRight,
      f = t.marginBottom,
      y = t.marginLeft,
      m = t.boxSizing;
    return {
      height: parseFloat(e || '0'),
      width: parseFloat(r || '0'),
      borderTopWidth: parseFloat(o || '0'),
      borderRightWidth: parseFloat(i || '0'),
      borderBottomWidth: parseFloat(s || '0'),
      borderLeftWidth: parseFloat(a || '0'),
      paddingTop: parseFloat(l || '0'),
      paddingRight: parseFloat(u || '0'),
      paddingBottom: parseFloat(c || '0'),
      paddingLeft: parseFloat(p || '0'),
      marginTop: parseFloat(d || '0'),
      marginRight: parseFloat(h || '0'),
      marginBottom: parseFloat(f || '0'),
      marginLeft: parseFloat(y || '0'),
      boxSizing: m,
    };
  }
  function qr(n) {
    var t = Bt(n);
    return t.boxSizing === 'border-box' ? t.height - t.paddingTop - t.paddingBottom : t.height;
  }
  function ir(n) {
    var t = Bt(n);
    return t.boxSizing === 'border-box' ? t.width - t.paddingLeft - t.paddingRight : t.width;
  }
  function Hn(n) {
    var t = Bt(n),
      e = t.marginBottom + t.marginTop;
    return Math.ceil(n.offsetHeight + e);
  }
  function Qr(n) {
    var t = Bt(n),
      e = t.marginLeft + t.marginRight;
    return Math.ceil(n.offsetWidth + e);
  }
  function Bn(n) {
    var t = n.getBoundingClientRect(),
      e = Bt(n),
      r = e.borderTopWidth,
      o = e.borderLeftWidth,
      i = e.borderRightWidth,
      s = e.borderBottomWidth;
    return {
      top: t.top + (r || 0),
      left: t.left + (o || 0),
      right: t.right + (i || 0),
      bottom: t.bottom + (s || 0),
    };
  }
  function Xr() {
    if (typeof qo == 'boolean') return qo;
    var n = document.createElement('div');
    return (
      (n.style.direction = 'rtl'),
      (n.style.width = '1px'),
      (n.style.height = '1px'),
      (n.style.position = 'fixed'),
      (n.style.top = '0px'),
      (n.style.overflow = 'hidden'),
      (n.dir = 'rtl'),
      (n.innerHTML = `<div style="width: 2px">
            <span style="display: inline-block; width: 1px"></span>
            <span style="display: inline-block; width: 1px"></span>
        </div>`),
      document.body.appendChild(n),
      (n.scrollLeft = 1),
      (qo = Math.floor(n.scrollLeft) === 0),
      document.body.removeChild(n),
      qo
    );
  }
  function Jr(n, t) {
    var e = n.scrollLeft;
    return t && ((e = Math.abs(e)), $o() && !Xr() && (e = n.scrollWidth - n.clientWidth - e)), e;
  }
  function Zr(n, t, e) {
    e && (Xr() ? (t *= -1) : (ht() || $o()) && (t = n.scrollWidth - n.clientWidth - t)),
      (n.scrollLeft = t);
  }
  function de(n) {
    for (; n && n.firstChild; ) n.removeChild(n.firstChild);
  }
  function ft(n) {
    n && n.parentNode && n.parentNode.removeChild(n);
  }
  function kn(n) {
    return !!n.offsetParent;
  }
  function We(n) {
    var t = n;
    if (t.checkVisibility) return t.checkVisibility({ checkVisibilityCSS: !0 });
    var e = !kn(n) || window.getComputedStyle(n).visibility !== 'visible';
    return !e;
  }
  function Re(n) {
    var t = document.createElement('div');
    return (t.innerHTML = (n || '').trim()), t.firstChild;
  }
  function Wn(n, t, e) {
    (e && e.nextSibling === t) ||
      (e
        ? e.nextSibling
          ? n.insertBefore(t, e.nextSibling)
          : n.appendChild(t)
        : n.firstChild && n.firstChild !== t && n.insertAdjacentElement('afterbegin', t));
  }
  function jn(n, t) {
    for (var e = 0; e < t.length; e++) {
      var r = t[e],
        o = n.children[e];
      o !== r && n.insertBefore(r, o);
    }
  }
  function tl(n, t, e) {
    e
      ? e.insertAdjacentElement('afterend', t)
      : n.firstChild
      ? n.insertAdjacentElement('afterbegin', t)
      : n.appendChild(t);
  }
  function Un(n, t) {
    var e, r;
    if (t)
      try {
        for (var o = Dp(Object.entries(t)), i = o.next(); !i.done; i = o.next()) {
          var s = Ap(i.value, 2),
            a = s[0],
            l = s[1];
          if (!(!a || !a.length || l == null)) {
            var u = Aa(a),
              c = l.toString(),
              p = c.replace(/\s*!important/g, ''),
              d = p.length != c.length ? 'important' : void 0;
            n.style.setProperty(u, p, d);
          }
        }
      } catch (h) {
        e = { error: h };
      } finally {
        try {
          i && !i.done && (r = o.return) && r.call(o);
        } finally {
          if (e) throw e.error;
        }
      }
  }
  function rl(n) {
    return n.clientWidth < n.scrollWidth;
  }
  function ol(n) {
    return n.clientHeight < n.scrollHeight;
  }
  function eo(n, t) {
    t === 'flex'
      ? (n.style.removeProperty('width'),
        n.style.removeProperty('minWidth'),
        n.style.removeProperty('maxWidth'),
        (n.style.flex = '1 1 auto'))
      : Je(n, t);
  }
  function Je(n, t) {
    (t = Qo(t)),
      (n.style.width = t.toString()),
      (n.style.maxWidth = t.toString()),
      (n.style.minWidth = t.toString());
  }
  function bp(n, t) {
    t === 'flex'
      ? (n.style.removeProperty('height'),
        n.style.removeProperty('minHeight'),
        n.style.removeProperty('maxHeight'),
        (n.style.flex = '1 1 auto'))
      : nr(n, t);
  }
  function nr(n, t) {
    (t = Qo(t)),
      (n.style.height = t.toString()),
      (n.style.maxHeight = t.toString()),
      (n.style.minHeight = t.toString());
  }
  function Qo(n) {
    return typeof n == 'number' ? ''.concat(n, 'px') : n;
  }
  function to(n) {
    return n instanceof Node || n instanceof HTMLElement;
  }
  function il(n) {
    if (n == null) return [];
    var t = [];
    return (
      zn(n, function (e) {
        return t.push(e);
      }),
      t
    );
  }
  function nl(n, t) {
    if (n)
      for (var e = 0; e < n.length; e++) {
        var r = n[e];
        t(r.name, r.value);
      }
  }
  function vt(n, t, e) {
    e == null ? n.removeAttribute(t) : n.setAttribute(t, e.toString());
  }
  function zn(n, t) {
    if (n != null) for (var e = 0; e < n.length; e++) t(n[e]);
  }
  function Kn(n, t) {
    n.then(function (e) {
      var r = e.getGui();
      r != null && (typeof r == 'object' ? t.appendChild(r) : (t.innerHTML = r));
    });
  }
  var Fp = Object.freeze({
      __proto__: null,
      radioCssClass: Nn,
      FOCUSABLE_SELECTOR: Za,
      FOCUSABLE_EXCLUDE: Gn,
      isFocusableFormField: Vn,
      setDisplayed: $,
      setVisible: el,
      setDisabled: Pr,
      isElementChildOfClass: or,
      getElementSize: Bt,
      getInnerHeight: qr,
      getInnerWidth: ir,
      getAbsoluteHeight: Hn,
      getAbsoluteWidth: Qr,
      getElementRectWithOffset: Bn,
      isRtlNegativeScroll: Xr,
      getScrollLeft: Jr,
      setScrollLeft: Zr,
      clearElement: de,
      removeFromParent: ft,
      isInDOM: kn,
      isVisible: We,
      loadTemplate: Re,
      ensureDomOrder: Wn,
      setDomChildOrder: jn,
      insertWithDomOrder: tl,
      addStylesToElement: Un,
      isHorizontalScrollShowing: rl,
      isVerticalScrollShowing: ol,
      setElementWidth: eo,
      setFixedWidth: Je,
      setElementHeight: bp,
      setFixedHeight: nr,
      formatSize: Qo,
      isNodeOrElement: to,
      copyNodeList: il,
      iterateNamedNodeMap: nl,
      addOrRemoveAttribute: vt,
      nodeListForEach: zn,
      bindCellRendererToHtmlElement: Kn,
    }),
    Lp = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    };
  function sl(n, t, e) {
    var r = {},
      o = n.filter(function (i) {
        return !t.some(function (s) {
          return s === i;
        });
      });
    return (
      o.length > 0 &&
        o.forEach(function (i) {
          return (r[i] = ro(i, e).values);
        }),
      r
    );
  }
  function ro(n, t, e, r) {
    var o,
      i,
      s = t.map(function (f, y) {
        return { value: f, relevance: Mp(n.toLowerCase(), f.toLocaleLowerCase()), idx: y };
      });
    if (
      (s.sort(function (f, y) {
        return y.relevance - f.relevance;
      }),
      e &&
        (s = s.filter(function (f) {
          return f.relevance !== 0;
        })),
      s.length > 0 && r && r > 0)
    ) {
      var a = s[0].relevance,
        l = a * r;
      s = s.filter(function (f) {
        return l - f.relevance < 0;
      });
    }
    var u = [],
      c = [];
    try {
      for (var p = Lp(s), d = p.next(); !d.done; d = p.next()) {
        var h = d.value;
        u.push(h.value), c.push(h.idx);
      }
    } catch (f) {
      o = { error: f };
    } finally {
      try {
        d && !d.done && (i = p.return) && i.call(p);
      } finally {
        if (o) throw o.error;
      }
    }
    return { values: u, indices: c };
  }
  function Mp(n, t) {
    for (
      var e = n.replace(/\s/g, ''), r = t.replace(/\s/g, ''), o = 0, i = -1, s = 0;
      s < e.length;
      s++
    ) {
      var a = r.indexOf(e[s], i + 1);
      a !== -1 && ((i = a), (o += 100 - ((i * 100) / 1e4) * 100));
    }
    return o;
  }
  var Ip = Object.freeze({ __proto__: null, fuzzyCheckStrings: sl, fuzzySuggestions: ro }),
    al = {
      columnGroupOpened: 'expanded',
      columnGroupClosed: 'contracted',
      columnSelectClosed: 'tree-closed',
      columnSelectOpen: 'tree-open',
      columnSelectIndeterminate: 'tree-indeterminate',
      columnMovePin: 'pin',
      columnMoveHide: 'eye-slash',
      columnMoveMove: 'arrows',
      columnMoveLeft: 'left',
      columnMoveRight: 'right',
      columnMoveGroup: 'group',
      columnMoveValue: 'aggregation',
      columnMovePivot: 'pivot',
      dropNotAllowed: 'not-allowed',
      groupContracted: 'tree-closed',
      groupExpanded: 'tree-open',
      setFilterGroupClosed: 'tree-closed',
      setFilterGroupOpen: 'tree-open',
      setFilterGroupIndeterminate: 'tree-indeterminate',
      chart: 'chart',
      close: 'cross',
      cancel: 'cancel',
      check: 'tick',
      first: 'first',
      previous: 'previous',
      next: 'next',
      last: 'last',
      linked: 'linked',
      unlinked: 'unlinked',
      colorPicker: 'color-picker',
      groupLoading: 'loading',
      menu: 'menu',
      menuAlt: 'menu-alt',
      filter: 'filter',
      columns: 'columns',
      maximize: 'maximize',
      minimize: 'minimize',
      menuPin: 'pin',
      menuValue: 'aggregation',
      menuAddRowGroup: 'group',
      menuRemoveRowGroup: 'group',
      clipboardCopy: 'copy',
      clipboardCut: 'cut',
      clipboardPaste: 'paste',
      pivotPanel: 'pivot',
      rowGroupPanel: 'group',
      valuePanel: 'aggregation',
      columnDrag: 'grip',
      rowDrag: 'grip',
      save: 'save',
      csvExport: 'csv',
      excelExport: 'excel',
      smallDown: 'small-down',
      smallLeft: 'small-left',
      smallRight: 'small-right',
      smallUp: 'small-up',
      sortAscending: 'asc',
      sortDescending: 'desc',
      sortUnSort: 'none',
      advancedFilterBuilder: 'group',
      advancedFilterBuilderDrag: 'grip',
      advancedFilterBuilderInvalid: 'not-allowed',
      advancedFilterBuilderMoveUp: 'up',
      advancedFilterBuilderMoveDown: 'down',
      advancedFilterBuilderAdd: 'plus',
      advancedFilterBuilderRemove: 'minus',
    };
  function Ze(n, t, e) {
    var r = ne(n, t, e);
    if (r) {
      var o = r.className;
      if (
        (typeof o == 'string' && o.indexOf('ag-icon') > -1) ||
        (typeof o == 'object' && o['ag-icon'])
      )
        return r;
    }
    var i = document.createElement('span');
    return i.appendChild(r), i;
  }
  function ne(n, t, e, r) {
    var o = null,
      i = e && e.getColDef().icons;
    if ((i && (o = i[n]), t && !o)) {
      var s = t.get('icons');
      s && (o = s[n]);
    }
    if (o) {
      var a = void 0;
      if (typeof o == 'function') a = o();
      else if (typeof o == 'string') a = o;
      else throw new Error('icon from grid options needs to be a string or a function');
      if (typeof a == 'string') return Re(a);
      if (to(a)) return a;
      console.warn('AG Grid: iconRenderer should return back a string or a dom object');
    } else {
      var l = document.createElement('span'),
        u = al[n];
      return (
        u || (r ? (u = n) : (console.warn('AG Grid: Did not find icon '.concat(n)), (u = ''))),
        l.setAttribute('class', 'ag-icon ag-icon-'.concat(u)),
        l.setAttribute('unselectable', 'on'),
        le(l, 'presentation'),
        l
      );
    }
  }
  var xp = Object.freeze({
      __proto__: null,
      iconNameClassMap: al,
      createIcon: Ze,
      createIconNoSpan: ne,
    }),
    _ = (function () {
      function n() {}
      return (
        (n.BACKSPACE = 'Backspace'),
        (n.TAB = 'Tab'),
        (n.ENTER = 'Enter'),
        (n.ESCAPE = 'Escape'),
        (n.SPACE = ' '),
        (n.LEFT = 'ArrowLeft'),
        (n.UP = 'ArrowUp'),
        (n.RIGHT = 'ArrowRight'),
        (n.DOWN = 'ArrowDown'),
        (n.DELETE = 'Delete'),
        (n.F2 = 'F2'),
        (n.PAGE_UP = 'PageUp'),
        (n.PAGE_DOWN = 'PageDown'),
        (n.PAGE_HOME = 'Home'),
        (n.PAGE_END = 'End'),
        (n.A = 'KeyA'),
        (n.C = 'KeyC'),
        (n.D = 'KeyD'),
        (n.V = 'KeyV'),
        (n.X = 'KeyX'),
        (n.Y = 'KeyY'),
        (n.Z = 'KeyZ'),
        n
      );
    })(),
    Np = 65,
    Gp = 67,
    Vp = 86,
    Hp = 68,
    Bp = 90,
    kp = 89;
  function Xo(n) {
    if (n.altKey || n.ctrlKey || n.metaKey) return !1;
    var t = n.key.length === 1;
    return t;
  }
  function Jo(n, t, e, r, o) {
    var i = r ? r.getColDef().suppressKeyboardEvent : void 0;
    if (!i) return !1;
    var s = n.addGridCommonParams({
      event: t,
      editing: o,
      column: r,
      node: e,
      data: e.data,
      colDef: r.getColDef(),
    });
    if (i) {
      var a = i(s);
      if (a) return !0;
    }
    return !1;
  }
  function ll(n, t, e, r) {
    var o = r.getDefinition(),
      i = o && o.suppressHeaderKeyboardEvent;
    if (!P(i)) return !1;
    var s = n.addGridCommonParams({ colDef: o, column: r, headerRowIndex: e, event: t });
    return !!i(s);
  }
  function ul(n) {
    var t = n.keyCode,
      e;
    switch (t) {
      case Np:
        e = _.A;
        break;
      case Gp:
        e = _.C;
        break;
      case Vp:
        e = _.V;
        break;
      case Hp:
        e = _.D;
        break;
      case Bp:
        e = _.Z;
        break;
      case kp:
        e = _.Y;
        break;
      default:
        e = n.code;
    }
    return e;
  }
  function cl(n, t) {
    return t === void 0 && (t = !1), n === _.DELETE ? !0 : !t && n === _.BACKSPACE ? bn() : !1;
  }
  var Wp = Object.freeze({
    __proto__: null,
    isEventFromPrintableCharacter: Xo,
    isUserSuppressingKeyboardEvent: Jo,
    isUserSuppressingHeaderKeyboardEvent: ll,
    normaliseQwertyAzerty: ul,
    isDeleteKey: cl,
  });
  function $n(n, t, e) {
    if (e === 0) return !1;
    var r = Math.abs(n.clientX - t.clientX),
      o = Math.abs(n.clientY - t.clientY);
    return Math.max(r, o) <= e;
  }
  var jp = Object.freeze({ __proto__: null, areEventsNear: $n });
  function Up(n, t) {
    if (!n) return !1;
    for (
      var e = function (a, l) {
          var u = t[a.id],
            c = t[l.id],
            p = u !== void 0,
            d = c !== void 0,
            h = p && d,
            f = !p && !d;
          return h ? u - c : f ? a.__objectId - l.__objectId : p ? 1 : -1;
        },
        r,
        o,
        i = !1,
        s = 0;
      s < n.length - 1;
      s++
    )
      if (((r = n[s]), (o = n[s + 1]), e(r, o) > 0)) {
        i = !0;
        break;
      }
    return i ? (n.sort(e), !0) : !1;
  }
  var zp = Object.freeze({ __proto__: null, sortRowNodesByOrder: Up });
  function Yn(n) {
    var t = new Set();
    return (
      n.forEach(function (e) {
        return t.add(e);
      }),
      t
    );
  }
  var Kp = Object.freeze({ __proto__: null, convertToSet: Yn }),
    ue = function () {
      return (
        (ue =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        ue.apply(this, arguments)
      );
    },
    $p = ue(
      ue(
        ue(
          ue(
            ue(
              ue(
                ue(
                  ue(
                    ue(
                      ue(ue(ue(ue(ue(ue(ue(ue(ue({}, Sp), Bc), wp), Pp), Fp), Wc), Tc), Ip), Cc),
                      xp
                    ),
                    Wp
                  ),
                  rp
                ),
                jp
              ),
              Tp
            ),
            _c
          ),
          zp
        ),
        Kp
      ),
      Zc
    ),
    j = $p,
    Dr = (function () {
      function n(t, e) {
        t === void 0 && (t = 0), e === void 0 && (e = 1), (this.nextValue = t), (this.step = e);
      }
      return (
        (n.prototype.next = function () {
          var t = this.nextValue;
          return (this.nextValue += this.step), t;
        }),
        (n.prototype.peek = function () {
          return this.nextValue;
        }),
        (n.prototype.skip = function (t) {
          this.nextValue += t;
        }),
        n
      );
    })(),
    Ar;
  (function (n) {
    (n[(n.IN_PROGRESS = 0)] = 'IN_PROGRESS'), (n[(n.RESOLVED = 1)] = 'RESOLVED');
  })(Ar || (Ar = {}));
  var je = (function () {
      function n(t) {
        var e = this;
        (this.status = Ar.IN_PROGRESS),
          (this.resolution = null),
          (this.waiters = []),
          t(
            function (r) {
              return e.onDone(r);
            },
            function (r) {
              return e.onReject(r);
            }
          );
      }
      return (
        (n.all = function (t) {
          return new n(function (e) {
            var r = t.length,
              o = new Array(r);
            t.forEach(function (i, s) {
              i.then(function (a) {
                (o[s] = a), r--, r === 0 && e(o);
              });
            });
          });
        }),
        (n.resolve = function (t) {
          return (
            t === void 0 && (t = null),
            new n(function (e) {
              return e(t);
            })
          );
        }),
        (n.prototype.then = function (t) {
          var e = this;
          return new n(function (r) {
            e.status === Ar.RESOLVED
              ? r(t(e.resolution))
              : e.waiters.push(function (o) {
                  return r(t(o));
                });
          });
        }),
        (n.prototype.resolveNow = function (t, e) {
          return this.status === Ar.RESOLVED ? e(this.resolution) : t;
        }),
        (n.prototype.onDone = function (t) {
          (this.status = Ar.RESOLVED),
            (this.resolution = t),
            this.waiters.forEach(function (e) {
              return e(t);
            });
        }),
        (n.prototype.onReject = function (t) {
          console.warn('TBI');
        }),
        n
      );
    })(),
    Yp = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    sr = function () {
      return (
        (sr =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        sr.apply(this, arguments)
      );
    },
    qn = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    st;
  (function (n) {
    (n[(n.NOTHING = 0)] = 'NOTHING'),
      (n[(n.WAITING_TO_SHOW = 1)] = 'WAITING_TO_SHOW'),
      (n[(n.SHOWING = 2)] = 'SHOWING');
  })(st || (st = {}));
  var gt;
  (function (n) {
    (n[(n.HOVER = 0)] = 'HOVER'), (n[(n.FOCUS = 1)] = 'FOCUS');
  })(gt || (gt = {}));
  var pl = (function (n) {
      Yp(t, n);
      function t(e, r, o) {
        var i = n.call(this) || this;
        return (
          (i.parentComp = e),
          (i.tooltipShowDelayOverride = r),
          (i.tooltipHideDelayOverride = o),
          (i.SHOW_QUICK_TOOLTIP_DIFF = 1e3),
          (i.FADE_OUT_TOOLTIP_TIMEOUT = 1e3),
          (i.INTERACTIVE_HIDE_DELAY = 100),
          (i.interactionEnabled = !1),
          (i.isInteractingWithTooltip = !1),
          (i.state = st.NOTHING),
          (i.tooltipInstanceCount = 0),
          (i.tooltipMouseTrack = !1),
          i
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          this.gridOptionsService.get('tooltipInteraction') && (this.interactionEnabled = !0),
            (this.tooltipTrigger = this.getTooltipTrigger()),
            (this.tooltipMouseTrack = this.gridOptionsService.get('tooltipMouseTrack'));
          var e = this.parentComp.getGui();
          this.tooltipTrigger === gt.HOVER &&
            (this.addManagedListener(e, 'mouseenter', this.onMouseEnter.bind(this)),
            this.addManagedListener(e, 'mouseleave', this.onMouseLeave.bind(this))),
            this.tooltipTrigger === gt.FOCUS &&
              (this.addManagedListener(e, 'focusin', this.onFocusIn.bind(this)),
              this.addManagedListener(e, 'focusout', this.onFocusOut.bind(this))),
            this.addManagedListener(e, 'mousemove', this.onMouseMove.bind(this)),
            this.interactionEnabled ||
              (this.addManagedListener(e, 'mousedown', this.onMouseDown.bind(this)),
              this.addManagedListener(e, 'keydown', this.onKeyDown.bind(this)));
        }),
        (t.prototype.getGridOptionsTooltipDelay = function (e) {
          var r = this.gridOptionsService.get(e);
          return r < 0 && V(''.concat(e, ' should not be lower than 0')), Math.max(200, r);
        }),
        (t.prototype.getTooltipDelay = function (e) {
          var r, o;
          return e === 'show'
            ? (r = this.tooltipShowDelayOverride) !== null && r !== void 0
              ? r
              : this.getGridOptionsTooltipDelay('tooltipShowDelay')
            : (o = this.tooltipHideDelayOverride) !== null && o !== void 0
            ? o
            : this.getGridOptionsTooltipDelay('tooltipHideDelay');
        }),
        (t.prototype.destroy = function () {
          this.setToDoNothing(), n.prototype.destroy.call(this);
        }),
        (t.prototype.getTooltipTrigger = function () {
          var e = this.gridOptionsService.get('tooltipTrigger');
          return !e || e === 'hover' ? gt.HOVER : gt.FOCUS;
        }),
        (t.prototype.onMouseEnter = function (e) {
          var r = this;
          this.interactionEnabled &&
            this.interactiveTooltipTimeoutId &&
            (this.unlockService(), this.startHideTimeout()),
            !Dt() &&
              (t.isLocked
                ? (this.showTooltipTimeoutId = window.setTimeout(function () {
                    r.prepareToShowTooltip(e);
                  }, this.INTERACTIVE_HIDE_DELAY))
                : this.prepareToShowTooltip(e));
        }),
        (t.prototype.onMouseMove = function (e) {
          this.lastMouseEvent && (this.lastMouseEvent = e),
            this.tooltipMouseTrack &&
              this.state === st.SHOWING &&
              this.tooltipComp &&
              this.positionTooltip();
        }),
        (t.prototype.onMouseDown = function () {
          this.setToDoNothing();
        }),
        (t.prototype.onMouseLeave = function () {
          this.interactionEnabled ? this.lockService() : this.setToDoNothing();
        }),
        (t.prototype.onFocusIn = function () {
          this.prepareToShowTooltip();
        }),
        (t.prototype.onFocusOut = function (e) {
          var r,
            o = e.relatedTarget,
            i = this.parentComp.getGui(),
            s = (r = this.tooltipComp) === null || r === void 0 ? void 0 : r.getGui();
          this.isInteractingWithTooltip ||
            i.contains(o) ||
            (this.interactionEnabled && s != null && s.contains(o)) ||
            this.setToDoNothing();
        }),
        (t.prototype.onKeyDown = function () {
          this.setToDoNothing();
        }),
        (t.prototype.prepareToShowTooltip = function (e) {
          if (this.state != st.NOTHING || t.isLocked) return !1;
          var r = 0;
          return (
            e && (r = this.isLastTooltipHiddenRecently() ? 200 : this.getTooltipDelay('show')),
            (this.lastMouseEvent = e || null),
            (this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), r)),
            (this.state = st.WAITING_TO_SHOW),
            !0
          );
        }),
        (t.prototype.isLastTooltipHiddenRecently = function () {
          var e = new Date().getTime(),
            r = t.lastTooltipHideTime;
          return e - r < this.SHOW_QUICK_TOOLTIP_DIFF;
        }),
        (t.prototype.setToDoNothing = function () {
          this.state === st.SHOWING && this.hideTooltip(),
            this.onBodyScrollEventCallback &&
              (this.onBodyScrollEventCallback(), (this.onBodyScrollEventCallback = void 0)),
            this.onColumnMovedEventCallback &&
              (this.onColumnMovedEventCallback(), (this.onColumnMovedEventCallback = void 0)),
            this.clearTimeouts(),
            (this.state = st.NOTHING),
            (this.lastMouseEvent = null);
        }),
        (t.prototype.showTooltip = function () {
          var e = sr({}, this.parentComp.getTooltipParams());
          if (!P(e.value)) {
            this.setToDoNothing();
            return;
          }
          (this.state = st.SHOWING), this.tooltipInstanceCount++;
          var r = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount),
            o = this.userComponentFactory.getTooltipCompDetails(e);
          o.newAgStackInstance().then(r);
        }),
        (t.prototype.hideTooltip = function (e) {
          if (!(!e && this.isInteractingWithTooltip)) {
            this.tooltipComp &&
              (this.destroyTooltipComp(), (t.lastTooltipHideTime = new Date().getTime()));
            var r = { type: g.EVENT_TOOLTIP_HIDE, parentGui: this.parentComp.getGui() };
            this.eventService.dispatchEvent(r), (this.state = st.NOTHING);
          }
        }),
        (t.prototype.newTooltipComponentCallback = function (e, r) {
          var o = this.state !== st.SHOWING || this.tooltipInstanceCount !== e;
          if (o) {
            this.getContext().destroyBean(r);
            return;
          }
          var i = r.getGui();
          (this.tooltipComp = r),
            i.classList.contains('ag-tooltip') || i.classList.add('ag-tooltip-custom'),
            this.tooltipTrigger === gt.HOVER && i.classList.add('ag-tooltip-animate'),
            this.interactionEnabled && i.classList.add('ag-tooltip-interactive');
          var s = this.localeService.getLocaleTextFunc(),
            a = this.popupService.addPopup({
              eChild: i,
              ariaLabel: s('ariaLabelTooltip', 'Tooltip'),
            });
          a && (this.tooltipPopupDestroyFunc = a.hideFunc),
            this.positionTooltip(),
            this.tooltipTrigger === gt.FOCUS &&
              ((this.onBodyScrollEventCallback = this.addManagedListener(
                this.eventService,
                g.EVENT_BODY_SCROLL,
                this.setToDoNothing.bind(this)
              )),
              (this.onColumnMovedEventCallback = this.addManagedListener(
                this.eventService,
                g.EVENT_COLUMN_MOVED,
                this.setToDoNothing.bind(this)
              ))),
            this.interactionEnabled &&
              (this.tooltipTrigger === gt.HOVER
                ? ((this.tooltipMouseEnterListener =
                    this.addManagedListener(i, 'mouseenter', this.onTooltipMouseEnter.bind(this)) ||
                    null),
                  (this.tooltipMouseLeaveListener =
                    this.addManagedListener(i, 'mouseleave', this.onTooltipMouseLeave.bind(this)) ||
                    null))
                : ((this.tooltipFocusInListener =
                    this.addManagedListener(i, 'focusin', this.onTooltipFocusIn.bind(this)) ||
                    null),
                  (this.tooltipFocusOutListener =
                    this.addManagedListener(i, 'focusout', this.onTooltipFocusOut.bind(this)) ||
                    null)));
          var l = {
            type: g.EVENT_TOOLTIP_SHOW,
            tooltipGui: i,
            parentGui: this.parentComp.getGui(),
          };
          this.eventService.dispatchEvent(l), this.startHideTimeout();
        }),
        (t.prototype.onTooltipMouseEnter = function () {
          (this.isInteractingWithTooltip = !0), this.unlockService();
        }),
        (t.prototype.onTooltipMouseLeave = function () {
          (this.isInteractingWithTooltip = !1), this.lockService();
        }),
        (t.prototype.onTooltipFocusIn = function () {
          this.isInteractingWithTooltip = !0;
        }),
        (t.prototype.onTooltipFocusOut = function (e) {
          var r,
            o = this.parentComp.getGui(),
            i = (r = this.tooltipComp) === null || r === void 0 ? void 0 : r.getGui(),
            s = e.relatedTarget;
          (i != null && i.contains(s)) ||
            ((this.isInteractingWithTooltip = !1),
            o.contains(s) ? this.startHideTimeout() : this.hideTooltip());
        }),
        (t.prototype.positionTooltip = function () {
          var e = {
            type: 'tooltip',
            ePopup: this.tooltipComp.getGui(),
            nudgeY: 18,
            skipObserver: this.tooltipMouseTrack,
          };
          this.lastMouseEvent
            ? this.popupService.positionPopupUnderMouseEvent(
                sr(sr({}, e), { mouseEvent: this.lastMouseEvent })
              )
            : this.popupService.positionPopupByComponent(
                sr(sr({}, e), {
                  eventSource: this.parentComp.getGui(),
                  position: 'under',
                  keepWithinBounds: !0,
                  nudgeY: 5,
                })
              );
        }),
        (t.prototype.destroyTooltipComp = function () {
          var e = this;
          this.tooltipComp.getGui().classList.add('ag-tooltip-hiding');
          var r = this.tooltipPopupDestroyFunc,
            o = this.tooltipComp,
            i = this.tooltipTrigger === gt.HOVER ? this.FADE_OUT_TOOLTIP_TIMEOUT : 0;
          window.setTimeout(function () {
            r(), e.getContext().destroyBean(o);
          }, i),
            this.clearTooltipListeners(),
            (this.tooltipPopupDestroyFunc = void 0),
            (this.tooltipComp = void 0);
        }),
        (t.prototype.clearTooltipListeners = function () {
          [
            this.tooltipMouseEnterListener,
            this.tooltipMouseLeaveListener,
            this.tooltipFocusInListener,
            this.tooltipFocusOutListener,
          ].forEach(function (e) {
            e && e();
          }),
            (this.tooltipMouseEnterListener =
              this.tooltipMouseLeaveListener =
              this.tooltipFocusInListener =
              this.tooltipFocusOutListener =
                null);
        }),
        (t.prototype.lockService = function () {
          var e = this;
          (t.isLocked = !0),
            (this.interactiveTooltipTimeoutId = window.setTimeout(function () {
              e.unlockService(), e.setToDoNothing();
            }, this.INTERACTIVE_HIDE_DELAY));
        }),
        (t.prototype.unlockService = function () {
          (t.isLocked = !1), this.clearInteractiveTimeout();
        }),
        (t.prototype.startHideTimeout = function () {
          this.clearHideTimeout(),
            (this.hideTooltipTimeoutId = window.setTimeout(
              this.hideTooltip.bind(this),
              this.getTooltipDelay('hide')
            ));
        }),
        (t.prototype.clearShowTimeout = function () {
          this.showTooltipTimeoutId &&
            (window.clearTimeout(this.showTooltipTimeoutId), (this.showTooltipTimeoutId = void 0));
        }),
        (t.prototype.clearHideTimeout = function () {
          this.hideTooltipTimeoutId &&
            (window.clearTimeout(this.hideTooltipTimeoutId), (this.hideTooltipTimeoutId = void 0));
        }),
        (t.prototype.clearInteractiveTimeout = function () {
          this.interactiveTooltipTimeoutId &&
            (window.clearTimeout(this.interactiveTooltipTimeoutId),
            (this.interactiveTooltipTimeoutId = void 0));
        }),
        (t.prototype.clearTimeouts = function () {
          this.clearShowTimeout(), this.clearHideTimeout(), this.clearInteractiveTimeout();
        }),
        (t.isLocked = !1),
        qn([v('popupService')], t.prototype, 'popupService', void 0),
        qn([v('userComponentFactory')], t.prototype, 'userComponentFactory', void 0),
        qn([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    qp = (function () {
      function n(t) {
        (this.cssClassStates = {}), (this.getGui = t);
      }
      return (
        (n.prototype.addCssClass = function (t) {
          var e = this,
            r = (t || '').split(' ');
          if (r.length > 1) {
            r.forEach(function (s) {
              return e.addCssClass(s);
            });
            return;
          }
          var o = this.cssClassStates[t] !== !0;
          if (o && t.length) {
            var i = this.getGui();
            i && i.classList.add(t), (this.cssClassStates[t] = !0);
          }
        }),
        (n.prototype.removeCssClass = function (t) {
          var e = this,
            r = (t || '').split(' ');
          if (r.length > 1) {
            r.forEach(function (s) {
              return e.removeCssClass(s);
            });
            return;
          }
          var o = this.cssClassStates[t] !== !1;
          if (o && t.length) {
            var i = this.getGui();
            i && i.classList.remove(t), (this.cssClassStates[t] = !1);
          }
        }),
        (n.prototype.containsCssClass = function (t) {
          var e = this.getGui();
          return e ? e.classList.contains(t) : !1;
        }),
        (n.prototype.addOrRemoveCssClass = function (t, e) {
          var r = this;
          if (t) {
            if (t.indexOf(' ') >= 0) {
              var o = (t || '').split(' ');
              if (o.length > 1) {
                o.forEach(function (a) {
                  return r.addOrRemoveCssClass(a, e);
                });
                return;
              }
            }
            var i = this.cssClassStates[t] !== e;
            if (i && t.length) {
              var s = this.getGui();
              s && s.classList.toggle(t, e), (this.cssClassStates[t] = e);
            }
          }
        }),
        n
      );
    })(),
    Qp = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Qn = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Xp = new Dr(),
    k = (function (n) {
      Qp(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (
          (r.displayed = !0),
          (r.visible = !0),
          (r.compId = Xp.next()),
          (r.cssClassManager = new qp(function () {
            return r.eGui;
          })),
          e && r.setTemplate(e),
          r
        );
      }
      return (
        (t.prototype.preConstructOnComponent = function () {
          this.usingBrowserTooltips = this.gridOptionsService.get('enableBrowserTooltips');
        }),
        (t.prototype.getCompId = function () {
          return this.compId;
        }),
        (t.prototype.getTooltipParams = function () {
          return { value: this.tooltipText, location: 'UNKNOWN' };
        }),
        (t.prototype.setTooltip = function (e, r, o) {
          var i = this,
            s = function () {
              i.usingBrowserTooltips
                ? i.getGui().removeAttribute('title')
                : (i.tooltipFeature = i.destroyBean(i.tooltipFeature));
            },
            a = function () {
              i.usingBrowserTooltips
                ? i.getGui().setAttribute('title', i.tooltipText)
                : (i.tooltipFeature = i.createBean(new pl(i, r, o)));
            };
          this.tooltipText != e &&
            (this.tooltipText && s(),
            e != null && ((this.tooltipText = e), this.tooltipText && a()));
        }),
        (t.prototype.createChildComponentsFromTags = function (e, r) {
          var o = this,
            i = il(e.childNodes);
          i.forEach(function (s) {
            if (s instanceof HTMLElement) {
              var a = o.createComponentFromElement(
                s,
                function (u) {
                  var c = u.getGui();
                  c && o.copyAttributesFromNode(s, u.getGui());
                },
                r
              );
              if (a) {
                if (a.addItems && s.children.length) {
                  o.createChildComponentsFromTags(s, r);
                  var l = Array.prototype.slice.call(s.children);
                  a.addItems(l);
                }
                o.swapComponentForNode(a, e, s);
              } else s.childNodes && o.createChildComponentsFromTags(s, r);
            }
          });
        }),
        (t.prototype.createComponentFromElement = function (e, r, o) {
          var i = e.nodeName,
            s = o ? o[e.getAttribute('ref')] : void 0,
            a = this.agStackComponentsRegistry.getComponentClass(i);
          if (a) {
            t.elementGettingCreated = e;
            var l = new a(s);
            return l.setParentComponent(this), this.createBean(l, null, r), l;
          }
          return null;
        }),
        (t.prototype.copyAttributesFromNode = function (e, r) {
          nl(e.attributes, function (o, i) {
            return r.setAttribute(o, i);
          });
        }),
        (t.prototype.swapComponentForNode = function (e, r, o) {
          var i = e.getGui();
          r.replaceChild(i, o),
            r.insertBefore(document.createComment(o.nodeName), i),
            this.addDestroyFunc(this.destroyBean.bind(this, e)),
            this.swapInComponentForQuerySelectors(e, o);
        }),
        (t.prototype.swapInComponentForQuerySelectors = function (e, r) {
          var o = this;
          this.iterateOverQuerySelectors(function (i) {
            o[i.attributeName] === r && (o[i.attributeName] = e);
          });
        }),
        (t.prototype.iterateOverQuerySelectors = function (e) {
          for (var r = Object.getPrototypeOf(this); r != null; ) {
            var o = r.__agComponentMetaData,
              i = Vo(r.constructor);
            o &&
              o[i] &&
              o[i].querySelectors &&
              o[i].querySelectors.forEach(function (s) {
                return e(s);
              }),
              (r = Object.getPrototypeOf(r));
          }
        }),
        (t.prototype.activateTabIndex = function (e) {
          var r = this.gridOptionsService.get('tabIndex');
          e || (e = []),
            e.length || e.push(this.getGui()),
            e.forEach(function (o) {
              return o.setAttribute('tabindex', r.toString());
            });
        }),
        (t.prototype.setTemplate = function (e, r) {
          var o = Re(e);
          this.setTemplateFromElement(o, r);
        }),
        (t.prototype.setTemplateFromElement = function (e, r) {
          (this.eGui = e),
            (this.eGui.__agComponent = this),
            this.wireQuerySelectors(),
            this.getContext() && this.createChildComponentsFromTags(this.getGui(), r);
        }),
        (t.prototype.createChildComponentsPreConstruct = function () {
          this.getGui() && this.createChildComponentsFromTags(this.getGui());
        }),
        (t.prototype.wireQuerySelectors = function () {
          var e = this;
          if (this.eGui) {
            var r = this;
            this.iterateOverQuerySelectors(function (o) {
              var i = function (l) {
                  return (r[o.attributeName] = l);
                },
                s = o.refSelector && e.getAttribute('ref') === o.refSelector;
              if (s) i(e.eGui);
              else {
                var a = e.eGui.querySelector(o.querySelector);
                a && i(a.__agComponent || a);
              }
            });
          }
        }),
        (t.prototype.getGui = function () {
          return this.eGui;
        }),
        (t.prototype.getFocusableElement = function () {
          return this.eGui;
        }),
        (t.prototype.getAriaElement = function () {
          return this.getFocusableElement();
        }),
        (t.prototype.setParentComponent = function (e) {
          this.parentComponent = e;
        }),
        (t.prototype.getParentComponent = function () {
          return this.parentComponent;
        }),
        (t.prototype.setGui = function (e) {
          this.eGui = e;
        }),
        (t.prototype.queryForHtmlElement = function (e) {
          return this.eGui.querySelector(e);
        }),
        (t.prototype.queryForHtmlInputElement = function (e) {
          return this.eGui.querySelector(e);
        }),
        (t.prototype.appendChild = function (e, r) {
          if (e != null)
            if ((r || (r = this.eGui), to(e))) r.appendChild(e);
            else {
              var o = e;
              r.appendChild(o.getGui());
            }
        }),
        (t.prototype.isDisplayed = function () {
          return this.displayed;
        }),
        (t.prototype.setVisible = function (e, r) {
          if ((r === void 0 && (r = {}), e !== this.visible)) {
            this.visible = e;
            var o = r.skipAriaHidden;
            el(this.eGui, e, { skipAriaHidden: o });
          }
        }),
        (t.prototype.setDisplayed = function (e, r) {
          if ((r === void 0 && (r = {}), e !== this.displayed)) {
            this.displayed = e;
            var o = r.skipAriaHidden;
            $(this.eGui, e, { skipAriaHidden: o });
            var i = { type: t.EVENT_DISPLAYED_CHANGED, visible: this.displayed };
            this.dispatchEvent(i);
          }
        }),
        (t.prototype.destroy = function () {
          this.tooltipFeature && (this.tooltipFeature = this.destroyBean(this.tooltipFeature)),
            this.parentComponent && (this.parentComponent = void 0);
          var e = this.eGui;
          e && e.__agComponent && (e.__agComponent = void 0), n.prototype.destroy.call(this);
        }),
        (t.prototype.addGuiEventListener = function (e, r, o) {
          var i = this;
          this.eGui.addEventListener(e, r, o),
            this.addDestroyFunc(function () {
              return i.eGui.removeEventListener(e, r);
            });
        }),
        (t.prototype.addCssClass = function (e) {
          this.cssClassManager.addCssClass(e);
        }),
        (t.prototype.removeCssClass = function (e) {
          this.cssClassManager.removeCssClass(e);
        }),
        (t.prototype.containsCssClass = function (e) {
          return this.cssClassManager.containsCssClass(e);
        }),
        (t.prototype.addOrRemoveCssClass = function (e, r) {
          this.cssClassManager.addOrRemoveCssClass(e, r);
        }),
        (t.prototype.getAttribute = function (e) {
          var r = this.eGui;
          return r ? r.getAttribute(e) : null;
        }),
        (t.prototype.getRefElement = function (e) {
          return this.queryForHtmlElement('[ref="'.concat(e, '"]'));
        }),
        (t.EVENT_DISPLAYED_CHANGED = 'displayedChanged'),
        Qn([v('agStackComponentsRegistry')], t.prototype, 'agStackComponentsRegistry', void 0),
        Qn([va], t.prototype, 'preConstructOnComponent', null),
        Qn([va], t.prototype, 'createChildComponentsPreConstruct', null),
        t
      );
    })(D);
  function L(n) {
    return Jp.bind(this, '[ref='.concat(n, ']'), n);
  }
  function Jp(n, t, e, r, o) {
    if (n === null) {
      console.error('AG Grid: QuerySelector selector should not be null');
      return;
    }
    if (typeof o == 'number') {
      console.error('AG Grid: QuerySelector should be on an attribute');
      return;
    }
    Zp(e, 'querySelectors', { attributeName: r, querySelector: n, refSelector: t });
  }
  function Zp(n, t, e) {
    var r = ed(n, Vo(n.constructor));
    r[t] || (r[t] = []), r[t].push(e);
  }
  function ed(n, t) {
    return (
      n.__agComponentMetaData || (n.__agComponentMetaData = {}),
      n.__agComponentMetaData[t] || (n.__agComponentMetaData[t] = {}),
      n.__agComponentMetaData[t]
    );
  }
  var td = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    dl = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    rd = (function (n) {
      td(t, n);
      function t() {
        return (
          n.call(
            this,
            `
            <div class="ag-floating-filter-input" role="presentation">
                <ag-input-text-field ref="eFloatingFilterText"></ag-input-text-field>
            </div>`
          ) || this
        );
      }
      return (
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        (t.prototype.init = function (e) {
          this.params = e;
          var r = this.columnModel.getDisplayNameForColumn(e.column, 'header', !0),
            o = this.localeService.getLocaleTextFunc();
          this.eFloatingFilterText
            .setDisabled(!0)
            .setInputAriaLabel(''.concat(r, ' ').concat(o('ariaFilterInput', 'Filter Input')));
        }),
        (t.prototype.onParentModelChanged = function (e) {
          var r = this;
          if (e == null) {
            this.eFloatingFilterText.setValue('');
            return;
          }
          this.params.parentFilterInstance(function (o) {
            if (o.getModelAsString) {
              var i = o.getModelAsString(e);
              r.eFloatingFilterText.setValue(i);
            }
          });
        }),
        (t.prototype.onParamsUpdated = function (e) {
          this.refresh(e);
        }),
        (t.prototype.refresh = function (e) {
          this.init(e);
        }),
        dl([L('eFloatingFilterText')], t.prototype, 'eFloatingFilterText', void 0),
        dl([v('columnModel')], t.prototype, 'columnModel', void 0),
        t
      );
    })(k),
    hl = (function () {
      function n(t, e, r, o) {
        var i = this;
        (this.alive = !0), (this.context = t), (this.eParent = o);
        var s = e.getDateCompDetails(r),
          a = s.newAgStackInstance();
        a.then(function (l) {
          if (!i.alive) {
            t.destroyBean(l);
            return;
          }
          (i.dateComp = l),
            l &&
              (o.appendChild(l.getGui()),
              l.afterGuiAttached && l.afterGuiAttached(),
              i.tempValue && l.setDate(i.tempValue),
              i.disabled != null && i.setDateCompDisabled(i.disabled));
        });
      }
      return (
        (n.prototype.destroy = function () {
          (this.alive = !1), (this.dateComp = this.context.destroyBean(this.dateComp));
        }),
        (n.prototype.getDate = function () {
          return this.dateComp ? this.dateComp.getDate() : this.tempValue;
        }),
        (n.prototype.setDate = function (t) {
          this.dateComp ? this.dateComp.setDate(t) : (this.tempValue = t);
        }),
        (n.prototype.setDisabled = function (t) {
          this.dateComp ? this.setDateCompDisabled(t) : (this.disabled = t);
        }),
        (n.prototype.setDisplayed = function (t) {
          $(this.eParent, t);
        }),
        (n.prototype.setInputPlaceholder = function (t) {
          this.dateComp &&
            this.dateComp.setInputPlaceholder &&
            this.dateComp.setInputPlaceholder(t);
        }),
        (n.prototype.setInputAriaLabel = function (t) {
          this.dateComp && this.dateComp.setInputAriaLabel && this.dateComp.setInputAriaLabel(t);
        }),
        (n.prototype.afterGuiAttached = function (t) {
          this.dateComp &&
            typeof this.dateComp.afterGuiAttached == 'function' &&
            this.dateComp.afterGuiAttached(t);
        }),
        (n.prototype.updateParams = function (t) {
          var e,
            r,
            o = !1;
          if (
            !((e = this.dateComp) === null || e === void 0) &&
            e.refresh &&
            typeof this.dateComp.refresh == 'function'
          ) {
            var i = this.dateComp.refresh(t);
            i !== null && (o = !0);
          }
          if (
            !o &&
            !((r = this.dateComp) === null || r === void 0) &&
            r.onParamsUpdated &&
            typeof this.dateComp.onParamsUpdated == 'function'
          ) {
            var i = this.dateComp.onParamsUpdated(t);
            i !== null &&
              V(
                "Custom date component method 'onParamsUpdated' is deprecated. Use 'refresh' instead."
              );
          }
        }),
        (n.prototype.setDateCompDisabled = function (t) {
          this.dateComp != null &&
            this.dateComp.setDisabled != null &&
            this.dateComp.setDisabled(t);
        }),
        n
      );
    })(),
    fl = (function () {
      function n() {
        this.customFilterOptions = {};
      }
      return (
        (n.prototype.init = function (t, e) {
          (this.filterOptions = t.filterOptions || e),
            this.mapCustomOptions(),
            this.selectDefaultItem(t);
        }),
        (n.prototype.getFilterOptions = function () {
          return this.filterOptions;
        }),
        (n.prototype.mapCustomOptions = function () {
          var t = this;
          this.filterOptions &&
            this.filterOptions.forEach(function (e) {
              if (typeof e != 'string') {
                var r = [['displayKey'], ['displayName'], ['predicate', 'test']],
                  o = function (i) {
                    return i.some(function (s) {
                      return e[s] != null;
                    })
                      ? !0
                      : (console.warn(
                          "AG Grid: ignoring FilterOptionDef as it doesn't contain one of '".concat(
                            i,
                            "'"
                          )
                        ),
                        !1);
                  };
                if (!r.every(o)) {
                  t.filterOptions =
                    t.filterOptions.filter(function (i) {
                      return i === e;
                    }) || [];
                  return;
                }
                t.customFilterOptions[e.displayKey] = e;
              }
            });
        }),
        (n.prototype.selectDefaultItem = function (t) {
          if (t.defaultOption) this.defaultOption = t.defaultOption;
          else if (this.filterOptions.length >= 1) {
            var e = this.filterOptions[0];
            typeof e == 'string'
              ? (this.defaultOption = e)
              : e.displayKey
              ? (this.defaultOption = e.displayKey)
              : console.warn(
                  "AG Grid: invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'"
                );
          } else console.warn('AG Grid: no filter options for filter');
        }),
        (n.prototype.getDefaultOption = function () {
          return this.defaultOption;
        }),
        (n.prototype.getCustomOption = function (t) {
          return this.customFilterOptions[t];
        }),
        n
      );
    })(),
    vl = {
      applyFilter: 'Apply',
      clearFilter: 'Clear',
      resetFilter: 'Reset',
      cancelFilter: 'Cancel',
      textFilter: 'Text Filter',
      numberFilter: 'Number Filter',
      dateFilter: 'Date Filter',
      setFilter: 'Set Filter',
      filterOoo: 'Filter...',
      empty: 'Choose one',
      equals: 'Equals',
      notEqual: 'Does not equal',
      lessThan: 'Less than',
      greaterThan: 'Greater than',
      inRange: 'Between',
      inRangeStart: 'From',
      inRangeEnd: 'To',
      lessThanOrEqual: 'Less than or equal to',
      greaterThanOrEqual: 'Greater than or equal to',
      contains: 'Contains',
      notContains: 'Does not contain',
      startsWith: 'Begins with',
      endsWith: 'Ends with',
      blank: 'Blank',
      notBlank: 'Not blank',
      before: 'Before',
      after: 'After',
      andCondition: 'AND',
      orCondition: 'OR',
      dateFormatOoo: 'yyyy-mm-dd',
    },
    od = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Xn = function () {
      return (
        (Xn =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Xn.apply(this, arguments)
      );
    },
    gl = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ar = (function (n) {
      od(t, n);
      function t(e, r) {
        r === void 0 && (r = {});
        var o = n.call(this) || this;
        return (
          (o.eFocusableElement = e),
          (o.callbacks = r),
          (o.callbacks = Xn(
            {
              shouldStopEventPropagation: function () {
                return !1;
              },
              onTabKeyDown: function (i) {
                if (!i.defaultPrevented) {
                  var s = o.focusService.findNextFocusableElement(
                    o.eFocusableElement,
                    !1,
                    i.shiftKey
                  );
                  s && (s.focus(), i.preventDefault());
                }
              },
            },
            r
          )),
          o
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          this.eFocusableElement.classList.add(t.FOCUS_MANAGED_CLASS),
            this.addKeyDownListeners(this.eFocusableElement),
            this.callbacks.onFocusIn &&
              this.addManagedListener(this.eFocusableElement, 'focusin', this.callbacks.onFocusIn),
            this.callbacks.onFocusOut &&
              this.addManagedListener(
                this.eFocusableElement,
                'focusout',
                this.callbacks.onFocusOut
              );
        }),
        (t.prototype.addKeyDownListeners = function (e) {
          var r = this;
          this.addManagedListener(e, 'keydown', function (o) {
            if (!(o.defaultPrevented || nt(o))) {
              if (r.callbacks.shouldStopEventPropagation(o)) {
                it(o);
                return;
              }
              o.key === _.TAB
                ? r.callbacks.onTabKeyDown(o)
                : r.callbacks.handleKeyDown && r.callbacks.handleKeyDown(o);
            }
          });
        }),
        (t.FOCUS_MANAGED_CLASS = 'ag-focus-managed'),
        gl([v('focusService')], t.prototype, 'focusService', void 0),
        gl([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    id = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Jn = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    yl = 'ag-resizer-wrapper',
    nd = '<div class="'.concat(
      yl,
      `">
        <div ref="eTopLeftResizer" class="ag-resizer ag-resizer-topLeft"></div>
        <div ref="eTopResizer" class="ag-resizer ag-resizer-top"></div>
        <div ref="eTopRightResizer" class="ag-resizer ag-resizer-topRight"></div>
        <div ref="eRightResizer" class="ag-resizer ag-resizer-right"></div>
        <div ref="eBottomRightResizer" class="ag-resizer ag-resizer-bottomRight"></div>
        <div ref="eBottomResizer" class="ag-resizer ag-resizer-bottom"></div>
        <div ref="eBottomLeftResizer" class="ag-resizer ag-resizer-bottomLeft"></div>
        <div ref="eLeftResizer" class="ag-resizer ag-resizer-left"></div>
    </div>`
    ),
    ml = (function (n) {
      id(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return (
          (o.element = e),
          (o.dragStartPosition = { x: 0, y: 0 }),
          (o.position = { x: 0, y: 0 }),
          (o.lastSize = { width: -1, height: -1 }),
          (o.positioned = !1),
          (o.resizersAdded = !1),
          (o.resizeListeners = []),
          (o.boundaryEl = null),
          (o.isResizing = !1),
          (o.isMoving = !1),
          (o.resizable = {}),
          (o.movable = !1),
          (o.currentResizer = null),
          (o.config = Object.assign({}, { popup: !1 }, r)),
          o
        );
      }
      return (
        (t.prototype.center = function () {
          var e = this.offsetParent,
            r = e.clientHeight,
            o = e.clientWidth,
            i = o / 2 - this.getWidth() / 2,
            s = r / 2 - this.getHeight() / 2;
          this.offsetElement(i, s);
        }),
        (t.prototype.initialisePosition = function () {
          if (!this.positioned) {
            var e = this.config,
              r = e.centered,
              o = e.forcePopupParentAsOffsetParent,
              i = e.minWidth,
              s = e.width,
              a = e.minHeight,
              l = e.height,
              u = e.x,
              c = e.y;
            this.offsetParent || this.setOffsetParent();
            var p = 0,
              d = 0,
              h = We(this.element);
            if (h) {
              var f = this.findBoundaryElement(),
                y = window.getComputedStyle(f);
              if (y.minWidth != null) {
                var m = f.offsetWidth - this.element.offsetWidth;
                d = parseInt(y.minWidth, 10) - m;
              }
              if (y.minHeight != null) {
                var C = f.offsetHeight - this.element.offsetHeight;
                p = parseInt(y.minHeight, 10) - C;
              }
            }
            if (
              ((this.minHeight = a || p),
              (this.minWidth = i || d),
              s && this.setWidth(s),
              l && this.setHeight(l),
              (!s || !l) && this.refreshSize(),
              r)
            )
              this.center();
            else if (u || c) this.offsetElement(u, c);
            else if (h && o) {
              var f = this.boundaryEl,
                w = !0;
              if ((f || ((f = this.findBoundaryElement()), (w = !1)), f)) {
                var E = parseFloat(f.style.top),
                  S = parseFloat(f.style.left);
                w ? this.offsetElement(isNaN(S) ? 0 : S, isNaN(E) ? 0 : E) : this.setPosition(S, E);
              }
            }
            this.positioned = !!this.offsetParent;
          }
        }),
        (t.prototype.isPositioned = function () {
          return this.positioned;
        }),
        (t.prototype.getPosition = function () {
          return this.position;
        }),
        (t.prototype.setMovable = function (e, r) {
          if (!(!this.config.popup || e === this.movable)) {
            this.movable = e;
            var o = this.moveElementDragListener || {
              eElement: r,
              onDragStart: this.onMoveStart.bind(this),
              onDragging: this.onMove.bind(this),
              onDragStop: this.onMoveEnd.bind(this),
            };
            e
              ? (this.dragService.addDragSource(o), (this.moveElementDragListener = o))
              : (this.dragService.removeDragSource(o), (this.moveElementDragListener = void 0));
          }
        }),
        (t.prototype.setResizable = function (e) {
          var r = this;
          if (
            (this.clearResizeListeners(),
            e ? this.addResizers() : this.removeResizers(),
            typeof e == 'boolean')
          ) {
            if (e === !1) return;
            e = {
              topLeft: e,
              top: e,
              topRight: e,
              right: e,
              bottomRight: e,
              bottom: e,
              bottomLeft: e,
              left: e,
            };
          }
          Object.keys(e).forEach(function (o) {
            var i = e,
              s = !!i[o],
              a = r.getResizerElement(o),
              l = {
                dragStartPixels: 0,
                eElement: a,
                onDragStart: function (u) {
                  return r.onResizeStart(u, o);
                },
                onDragging: r.onResize.bind(r),
                onDragStop: function (u) {
                  return r.onResizeEnd(u, o);
                },
              };
            (s || (!r.isAlive() && !s)) &&
              (s
                ? (r.dragService.addDragSource(l),
                  r.resizeListeners.push(l),
                  (a.style.pointerEvents = 'all'))
                : (a.style.pointerEvents = 'none'),
              (r.resizable[o] = s));
          });
        }),
        (t.prototype.removeSizeFromEl = function () {
          this.element.style.removeProperty('height'),
            this.element.style.removeProperty('width'),
            this.element.style.removeProperty('flex');
        }),
        (t.prototype.restoreLastSize = function () {
          this.element.style.flex = '0 0 auto';
          var e = this.lastSize,
            r = e.height,
            o = e.width;
          o !== -1 && (this.element.style.width = ''.concat(o, 'px')),
            r !== -1 && (this.element.style.height = ''.concat(r, 'px'));
        }),
        (t.prototype.getHeight = function () {
          return this.element.offsetHeight;
        }),
        (t.prototype.setHeight = function (e) {
          var r = this.config.popup,
            o = this.element,
            i = !1;
          if (typeof e == 'string' && e.indexOf('%') !== -1) nr(o, e), (e = Hn(o)), (i = !0);
          else if (((e = Math.max(this.minHeight, e)), this.positioned)) {
            var s = this.getAvailableHeight();
            s && e > s && (e = s);
          }
          this.getHeight() !== e &&
            (i
              ? ((o.style.maxHeight = 'unset'), (o.style.minHeight = 'unset'))
              : r
              ? nr(o, e)
              : ((o.style.height = ''.concat(e, 'px')),
                (o.style.flex = '0 0 auto'),
                (this.lastSize.height = typeof e == 'number' ? e : parseFloat(e))));
        }),
        (t.prototype.getAvailableHeight = function () {
          var e = this.config,
            r = e.popup,
            o = e.forcePopupParentAsOffsetParent;
          this.positioned || this.initialisePosition();
          var i = this.offsetParent.clientHeight;
          if (!i) return null;
          var s = this.element.getBoundingClientRect(),
            a = this.offsetParent.getBoundingClientRect(),
            l = r ? this.position.y : s.top,
            u = r ? 0 : a.top,
            c = 0;
          if (o) {
            var p = this.element.parentElement;
            if (p) {
              var d = p.getBoundingClientRect().bottom;
              c = d - s.bottom;
            }
          }
          var h = i + u - l - c;
          return h;
        }),
        (t.prototype.getWidth = function () {
          return this.element.offsetWidth;
        }),
        (t.prototype.setWidth = function (e) {
          var r = this.element,
            o = this.config.popup,
            i = !1;
          if (typeof e == 'string' && e.indexOf('%') !== -1) Je(r, e), (e = Qr(r)), (i = !0);
          else if (this.positioned) {
            e = Math.max(this.minWidth, e);
            var s = this.offsetParent.clientWidth,
              a = o ? this.position.x : this.element.getBoundingClientRect().left;
            s && e + a > s && (e = s - a);
          }
          this.getWidth() !== e &&
            (i
              ? ((r.style.maxWidth = 'unset'), (r.style.minWidth = 'unset'))
              : this.config.popup
              ? Je(r, e)
              : ((r.style.width = ''.concat(e, 'px')),
                (r.style.flex = ' unset'),
                (this.lastSize.width = typeof e == 'number' ? e : parseFloat(e))));
        }),
        (t.prototype.offsetElement = function (e, r) {
          e === void 0 && (e = 0), r === void 0 && (r = 0);
          var o = this.config.forcePopupParentAsOffsetParent,
            i = o ? this.boundaryEl : this.element;
          i &&
            (this.popupService.positionPopup({
              ePopup: i,
              keepWithinBounds: !0,
              skipObserver: this.movable || this.isResizable(),
              updatePosition: function () {
                return { x: e, y: r };
              },
            }),
            this.setPosition(parseFloat(i.style.left), parseFloat(i.style.top)));
        }),
        (t.prototype.constrainSizeToAvailableHeight = function (e) {
          var r = this;
          if (this.config.forcePopupParentAsOffsetParent) {
            var o = function () {
              var i = r.getAvailableHeight();
              r.element.style.setProperty('max-height', ''.concat(i, 'px'));
            };
            e
              ? (this.resizeObserverSubscriber = this.resizeObserverService.observeResize(
                  this.popupService.getPopupParent(),
                  o
                ))
              : (this.element.style.removeProperty('max-height'),
                this.resizeObserverSubscriber &&
                  (this.resizeObserverSubscriber(), (this.resizeObserverSubscriber = void 0)));
          }
        }),
        (t.prototype.setPosition = function (e, r) {
          (this.position.x = e), (this.position.y = r);
        }),
        (t.prototype.updateDragStartPosition = function (e, r) {
          this.dragStartPosition = { x: e, y: r };
        }),
        (t.prototype.calculateMouseMovement = function (e) {
          var r = e.e,
            o = e.isLeft,
            i = e.isTop,
            s = e.anywhereWithin,
            a = e.topBuffer,
            l = r.clientX - this.dragStartPosition.x,
            u = r.clientY - this.dragStartPosition.y,
            c = this.shouldSkipX(r, !!o, !!s, l) ? 0 : l,
            p = this.shouldSkipY(r, !!i, a, u) ? 0 : u;
          return { movementX: c, movementY: p };
        }),
        (t.prototype.shouldSkipX = function (e, r, o, i) {
          var s = this.element.getBoundingClientRect(),
            a = this.offsetParent.getBoundingClientRect(),
            l = this.boundaryEl.getBoundingClientRect(),
            u = this.config.popup ? this.position.x : s.left,
            c = (u <= 0 && a.left >= e.clientX) || (a.right <= e.clientX && a.right <= l.right);
          return c
            ? !0
            : (r
                ? (c = (i < 0 && e.clientX > u + a.left) || (i > 0 && e.clientX < u + a.left))
                : o
                ? (c = (i < 0 && e.clientX > l.right) || (i > 0 && e.clientX < u + a.left))
                : (c = (i < 0 && e.clientX > l.right) || (i > 0 && e.clientX < l.right)),
              c);
        }),
        (t.prototype.shouldSkipY = function (e, r, o, i) {
          o === void 0 && (o = 0);
          var s = this.element.getBoundingClientRect(),
            a = this.offsetParent.getBoundingClientRect(),
            l = this.boundaryEl.getBoundingClientRect(),
            u = this.config.popup ? this.position.y : s.top,
            c = (u <= 0 && a.top >= e.clientY) || (a.bottom <= e.clientY && a.bottom <= l.bottom);
          return c
            ? !0
            : (r
                ? (c = (i < 0 && e.clientY > u + a.top + o) || (i > 0 && e.clientY < u + a.top))
                : (c = (i < 0 && e.clientY > l.bottom) || (i > 0 && e.clientY < l.bottom)),
              c);
        }),
        (t.prototype.createResizeMap = function () {
          var e = this.element;
          this.resizerMap = {
            topLeft: { element: e.querySelector('[ref=eTopLeftResizer]') },
            top: { element: e.querySelector('[ref=eTopResizer]') },
            topRight: { element: e.querySelector('[ref=eTopRightResizer]') },
            right: { element: e.querySelector('[ref=eRightResizer]') },
            bottomRight: { element: e.querySelector('[ref=eBottomRightResizer]') },
            bottom: { element: e.querySelector('[ref=eBottomResizer]') },
            bottomLeft: { element: e.querySelector('[ref=eBottomLeftResizer]') },
            left: { element: e.querySelector('[ref=eLeftResizer]') },
          };
        }),
        (t.prototype.addResizers = function () {
          if (!this.resizersAdded) {
            var e = this.element;
            if (e) {
              var r = new DOMParser(),
                o = r.parseFromString(nd, 'text/html').body;
              e.appendChild(o.firstChild), this.createResizeMap(), (this.resizersAdded = !0);
            }
          }
        }),
        (t.prototype.removeResizers = function () {
          this.resizerMap = void 0;
          var e = this.element.querySelector('.'.concat(yl));
          e && this.element.removeChild(e), (this.resizersAdded = !1);
        }),
        (t.prototype.getResizerElement = function (e) {
          return this.resizerMap[e].element;
        }),
        (t.prototype.onResizeStart = function (e, r) {
          (this.boundaryEl = this.findBoundaryElement()),
            this.positioned || this.initialisePosition(),
            (this.currentResizer = {
              isTop: !!r.match(/top/i),
              isRight: !!r.match(/right/i),
              isBottom: !!r.match(/bottom/i),
              isLeft: !!r.match(/left/i),
            }),
            this.element.classList.add('ag-resizing'),
            this.resizerMap[r].element.classList.add('ag-active');
          var o = this.config,
            i = o.popup,
            s = o.forcePopupParentAsOffsetParent;
          !i &&
            !s &&
            this.applySizeToSiblings(this.currentResizer.isBottom || this.currentResizer.isTop),
            (this.isResizing = !0),
            this.updateDragStartPosition(e.clientX, e.clientY);
        }),
        (t.prototype.getSiblings = function () {
          var e = this.element,
            r = e.parentElement;
          return r
            ? Array.prototype.slice.call(r.children).filter(function (o) {
                return !o.classList.contains('ag-hidden');
              })
            : null;
        }),
        (t.prototype.getMinSizeOfSiblings = function () {
          for (var e = this.getSiblings() || [], r = 0, o = 0, i = 0; i < e.length; i++) {
            var s = e[i],
              a = !!s.style.flex && s.style.flex !== '0 0 auto';
            if (s !== this.element) {
              var l = this.minHeight || 0,
                u = this.minWidth || 0;
              if (a) {
                var c = window.getComputedStyle(s);
                c.minHeight && (l = parseInt(c.minHeight, 10)),
                  c.minWidth && (u = parseInt(c.minWidth, 10));
              } else (l = s.offsetHeight), (u = s.offsetWidth);
              (r += l), (o += u);
            }
          }
          return { height: r, width: o };
        }),
        (t.prototype.applySizeToSiblings = function (e) {
          var r = null,
            o = this.getSiblings();
          if (o) {
            for (var i = 0; i < o.length; i++) {
              var s = o[i];
              s !== r &&
                (e
                  ? (s.style.height = ''.concat(s.offsetHeight, 'px'))
                  : (s.style.width = ''.concat(s.offsetWidth, 'px')),
                (s.style.flex = '0 0 auto'),
                s === this.element && (r = o[i + 1]));
            }
            r &&
              (r.style.removeProperty('height'),
              r.style.removeProperty('min-height'),
              r.style.removeProperty('max-height'),
              (r.style.flex = '1 1 auto'));
          }
        }),
        (t.prototype.isResizable = function () {
          return Object.values(this.resizable).some(function (e) {
            return e;
          });
        }),
        (t.prototype.onResize = function (e) {
          if (!(!this.isResizing || !this.currentResizer)) {
            var r = this.config,
              o = r.popup,
              i = r.forcePopupParentAsOffsetParent,
              s = this.currentResizer,
              a = s.isTop,
              l = s.isRight,
              u = s.isBottom,
              c = s.isLeft,
              p = l || c,
              d = u || a,
              h = this.calculateMouseMovement({ e, isLeft: c, isTop: a }),
              f = h.movementX,
              y = h.movementY,
              m = this.position.x,
              C = this.position.y,
              w = 0,
              E = 0;
            if (p && f) {
              var S = c ? -1 : 1,
                R = this.getWidth(),
                O = R + f * S,
                b = !1;
              c && ((w = R - O), (m + w <= 0 || O <= this.minWidth) && ((b = !0), (w = 0))),
                b || this.setWidth(O);
            }
            if (d && y) {
              var S = a ? -1 : 1,
                A = this.getHeight(),
                M = A + y * S,
                N = !1;
              a
                ? ((E = A - M), (C + E <= 0 || M <= this.minHeight) && ((N = !0), (E = 0)))
                : !this.config.popup &&
                  !this.config.forcePopupParentAsOffsetParent &&
                  A < M &&
                  this.getMinSizeOfSiblings().height + M >
                    this.element.parentElement.offsetHeight &&
                  (N = !0),
                N || this.setHeight(M);
            }
            this.updateDragStartPosition(e.clientX, e.clientY),
              (((o || i) && w) || E) && this.offsetElement(m + w, C + E);
          }
        }),
        (t.prototype.onResizeEnd = function (e, r) {
          (this.isResizing = !1), (this.currentResizer = null), (this.boundaryEl = null);
          var o = { type: 'resize' };
          this.element.classList.remove('ag-resizing'),
            this.resizerMap[r].element.classList.remove('ag-active'),
            this.dispatchEvent(o);
        }),
        (t.prototype.refreshSize = function () {
          var e = this.element;
          this.config.popup &&
            (this.config.width || this.setWidth(e.offsetWidth),
            this.config.height || this.setHeight(e.offsetHeight));
        }),
        (t.prototype.onMoveStart = function (e) {
          (this.boundaryEl = this.findBoundaryElement()),
            this.positioned || this.initialisePosition(),
            (this.isMoving = !0),
            this.element.classList.add('ag-moving'),
            this.updateDragStartPosition(e.clientX, e.clientY);
        }),
        (t.prototype.onMove = function (e) {
          if (this.isMoving) {
            var r = this.position,
              o = r.x,
              i = r.y,
              s;
            this.config.calculateTopBuffer && (s = this.config.calculateTopBuffer());
            var a = this.calculateMouseMovement({ e, isTop: !0, anywhereWithin: !0, topBuffer: s }),
              l = a.movementX,
              u = a.movementY;
            this.offsetElement(o + l, i + u), this.updateDragStartPosition(e.clientX, e.clientY);
          }
        }),
        (t.prototype.onMoveEnd = function () {
          (this.isMoving = !1),
            (this.boundaryEl = null),
            this.element.classList.remove('ag-moving');
        }),
        (t.prototype.setOffsetParent = function () {
          this.config.forcePopupParentAsOffsetParent
            ? (this.offsetParent = this.popupService.getPopupParent())
            : (this.offsetParent = this.element.offsetParent);
        }),
        (t.prototype.findBoundaryElement = function () {
          for (var e = this.element; e; ) {
            if (window.getComputedStyle(e).position !== 'static') return e;
            e = e.parentElement;
          }
          return this.element;
        }),
        (t.prototype.clearResizeListeners = function () {
          for (; this.resizeListeners.length; ) {
            var e = this.resizeListeners.pop();
            this.dragService.removeDragSource(e);
          }
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this),
            this.moveElementDragListener &&
              this.dragService.removeDragSource(this.moveElementDragListener),
            this.constrainSizeToAvailableHeight(!1),
            this.clearResizeListeners(),
            this.removeResizers();
        }),
        Jn([v('popupService')], t.prototype, 'popupService', void 0),
        Jn([v('resizeObserverService')], t.prototype, 'resizeObserverService', void 0),
        Jn([v('dragService')], t.prototype, 'dragService', void 0),
        t
      );
    })(D),
    sd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Zn = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Zo = (function (n) {
      sd(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (
          (r.filterNameKey = e),
          (r.applyActive = !1),
          (r.hidePopup = null),
          (r.debouncePending = !1),
          (r.appliedModel = null),
          (r.buttonListeners = []),
          r
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          this.resetTemplate(),
            this.createManagedBean(
              new ar(this.getFocusableElement(), { handleKeyDown: this.handleKeyDown.bind(this) })
            ),
            (this.positionableFeature = new ml(this.getPositionableElement(), {
              forcePopupParentAsOffsetParent: !0,
            })),
            this.createBean(this.positionableFeature);
        }),
        (t.prototype.handleKeyDown = function (e) {}),
        (t.prototype.getFilterTitle = function () {
          return this.translate(this.filterNameKey);
        }),
        (t.prototype.isFilterActive = function () {
          return !!this.appliedModel;
        }),
        (t.prototype.resetTemplate = function (e) {
          var r = this.getGui();
          r && r.removeEventListener('submit', this.onFormSubmit);
          var o = `
            <form class="ag-filter-wrapper">
                <div class="ag-filter-body-wrapper ag-`
            .concat(
              this.getCssIdentifier(),
              `-body-wrapper" ref="eFilterBody">
                    `
            )
            .concat(
              this.createBodyTemplate(),
              `
                </div>
            </form>`
            );
          this.setTemplate(o, e),
            (r = this.getGui()),
            r && r.addEventListener('submit', this.onFormSubmit);
        }),
        (t.prototype.isReadOnly = function () {
          return !!this.providedFilterParams.readOnly;
        }),
        (t.prototype.init = function (e) {
          var r = this;
          this.setParams(e),
            this.resetUiToDefaults(!0).then(function () {
              r.updateUiVisibility(), r.setupOnBtApplyDebounce();
            });
        }),
        (t.prototype.setParams = function (e) {
          (this.providedFilterParams = e),
            (this.applyActive = t.isUseApplyButton(e)),
            this.resetButtonsPanel();
        }),
        (t.prototype.updateParams = function (e) {
          var r = this;
          (this.providedFilterParams = e),
            (this.applyActive = t.isUseApplyButton(e)),
            this.resetUiToActiveModel(this.getModel(), function () {
              r.updateUiVisibility(), r.setupOnBtApplyDebounce();
            });
        }),
        (t.prototype.resetButtonsPanel = function () {
          var e = this,
            r = this.providedFilterParams.buttons,
            o = r && r.length > 0 && !this.isReadOnly();
          if (
            (this.eButtonsPanel
              ? (de(this.eButtonsPanel),
                this.buttonListeners.forEach(function (a) {
                  return a == null ? void 0 : a();
                }),
                (this.buttonListeners = []))
              : o &&
                ((this.eButtonsPanel = document.createElement('div')),
                this.eButtonsPanel.classList.add('ag-filter-apply-panel')),
            !o)
          ) {
            this.eButtonsPanel && ft(this.eButtonsPanel);
            return;
          }
          var i = document.createDocumentFragment(),
            s = function (a) {
              var l, u;
              switch (a) {
                case 'apply':
                  (l = e.translate('applyFilter')),
                    (u = function (d) {
                      return e.onBtApply(!1, !1, d);
                    });
                  break;
                case 'clear':
                  (l = e.translate('clearFilter')),
                    (u = function () {
                      return e.onBtClear();
                    });
                  break;
                case 'reset':
                  (l = e.translate('resetFilter')),
                    (u = function () {
                      return e.onBtReset();
                    });
                  break;
                case 'cancel':
                  (l = e.translate('cancelFilter')),
                    (u = function (d) {
                      e.onBtCancel(d);
                    });
                  break;
                default:
                  console.warn('AG Grid: Unknown button type specified');
                  return;
              }
              var c = a === 'apply' ? 'submit' : 'button',
                p = Re(
                  `<button
                    type="`
                    .concat(
                      c,
                      `"
                    ref="`
                    )
                    .concat(
                      a,
                      `FilterButton"
                    class="ag-button ag-standard-button ag-filter-apply-panel-button"
                >`
                    )
                    .concat(
                      l,
                      `
                </button>`
                    )
                );
              e.buttonListeners.push(e.addManagedListener(p, 'click', u)), i.append(p);
            };
          Yn(r).forEach(function (a) {
            return s(a);
          }),
            this.eButtonsPanel.append(i),
            this.getGui().appendChild(this.eButtonsPanel);
        }),
        (t.prototype.getDefaultDebounceMs = function () {
          return 0;
        }),
        (t.prototype.setupOnBtApplyDebounce = function () {
          var e = this,
            r = t.getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs()),
            o = He(this.checkApplyDebounce.bind(this), r);
          this.onBtApplyDebounce = function () {
            (e.debouncePending = !0), o();
          };
        }),
        (t.prototype.checkApplyDebounce = function () {
          this.debouncePending && ((this.debouncePending = !1), this.onBtApply());
        }),
        (t.prototype.getModel = function () {
          return this.appliedModel ? this.appliedModel : null;
        }),
        (t.prototype.setModel = function (e) {
          var r = this,
            o = e != null ? this.setModelIntoUi(e) : this.resetUiToDefaults();
          return o.then(function () {
            r.updateUiVisibility(), r.applyModel('api');
          });
        }),
        (t.prototype.onBtCancel = function (e) {
          var r = this;
          this.resetUiToActiveModel(this.getModel(), function () {
            r.handleCancelEnd(e);
          });
        }),
        (t.prototype.handleCancelEnd = function (e) {
          this.providedFilterParams.closeOnApply && this.close(e);
        }),
        (t.prototype.resetUiToActiveModel = function (e, r) {
          var o = this,
            i = function () {
              o.onUiChanged(!1, 'prevent'), r == null || r();
            };
          e != null ? this.setModelIntoUi(e).then(i) : this.resetUiToDefaults().then(i);
        }),
        (t.prototype.onBtClear = function () {
          var e = this;
          this.resetUiToDefaults().then(function () {
            return e.onUiChanged();
          });
        }),
        (t.prototype.onBtReset = function () {
          this.onBtClear(), this.onBtApply();
        }),
        (t.prototype.applyModel = function (e) {
          var r = this.getModelFromUi();
          if (!this.isModelValid(r)) return !1;
          var o = this.appliedModel;
          return (this.appliedModel = r), !this.areModelsEqual(o, r);
        }),
        (t.prototype.isModelValid = function (e) {
          return !0;
        }),
        (t.prototype.onFormSubmit = function (e) {
          e.preventDefault();
        }),
        (t.prototype.onBtApply = function (e, r, o) {
          if (
            (e === void 0 && (e = !1),
            r === void 0 && (r = !1),
            o && o.preventDefault(),
            this.applyModel(r ? 'rowDataUpdated' : 'ui'))
          ) {
            var i = 'columnFilter';
            this.providedFilterParams.filterChangedCallback({
              afterFloatingFilter: e,
              afterDataChange: r,
              source: i,
            });
          }
          var s = this.providedFilterParams.closeOnApply;
          s && this.applyActive && !e && !r && this.close(o);
        }),
        (t.prototype.onNewRowsLoaded = function () {}),
        (t.prototype.close = function (e) {
          if (this.hidePopup) {
            var r = e,
              o = r && r.key,
              i;
            (o === 'Enter' || o === 'Space') && (i = { keyboardEvent: r }),
              this.hidePopup(i),
              (this.hidePopup = null);
          }
        }),
        (t.prototype.onUiChanged = function (e, r) {
          if (
            (e === void 0 && (e = !1),
            this.updateUiVisibility(),
            this.providedFilterParams.filterModifiedCallback(),
            this.applyActive && !this.isReadOnly())
          ) {
            var o = this.isModelValid(this.getModelFromUi()),
              i = this.getRefElement('applyFilterButton');
            i && Pr(i, !o);
          }
          (e && !r) || r === 'immediately'
            ? this.onBtApply(e)
            : ((!this.applyActive && !r) || r === 'debounce') && this.onBtApplyDebounce();
        }),
        (t.prototype.afterGuiAttached = function (e) {
          e && (this.hidePopup = e.hidePopup),
            this.refreshFilterResizer(e == null ? void 0 : e.container);
        }),
        (t.prototype.refreshFilterResizer = function (e) {
          if (!(!this.positionableFeature || e === 'toolPanel')) {
            var r = e === 'floatingFilter' || e === 'columnFilter',
              o = this,
              i = o.positionableFeature,
              s = o.gridOptionsService;
            r
              ? (i.restoreLastSize(),
                i.setResizable(
                  s.get('enableRtl')
                    ? { bottom: !0, bottomLeft: !0, left: !0 }
                    : { bottom: !0, bottomRight: !0, right: !0 }
                ))
              : (this.positionableFeature.removeSizeFromEl(),
                this.positionableFeature.setResizable(!1)),
              this.positionableFeature.constrainSizeToAvailableHeight(!0);
          }
        }),
        (t.prototype.afterGuiDetached = function () {
          this.checkApplyDebounce(),
            this.positionableFeature && this.positionableFeature.constrainSizeToAvailableHeight(!1);
        }),
        (t.getDebounceMs = function (e, r) {
          return t.isUseApplyButton(e)
            ? (e.debounceMs != null &&
                console.warn('AG Grid: debounceMs is ignored when apply button is present'),
              0)
            : e.debounceMs != null
            ? e.debounceMs
            : r;
        }),
        (t.isUseApplyButton = function (e) {
          return !!e.buttons && e.buttons.indexOf('apply') >= 0;
        }),
        (t.prototype.refresh = function (e) {
          return (this.providedFilterParams = e), !0;
        }),
        (t.prototype.destroy = function () {
          var e = this.getGui();
          e && e.removeEventListener('submit', this.onFormSubmit),
            (this.hidePopup = null),
            this.positionableFeature &&
              (this.positionableFeature = this.destroyBean(this.positionableFeature)),
            (this.appliedModel = null),
            n.prototype.destroy.call(this);
        }),
        (t.prototype.translate = function (e) {
          var r = this.localeService.getLocaleTextFunc();
          return r(e, vl[e]);
        }),
        (t.prototype.getCellValue = function (e) {
          return this.providedFilterParams.getValue(e);
        }),
        (t.prototype.getPositionableElement = function () {
          return this.eFilterBody;
        }),
        Zn([v('rowModel')], t.prototype, 'rowModel', void 0),
        Zn([L('eFilterBody')], t.prototype, 'eFilterBody', void 0),
        Zn([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    ad = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ld = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Cl = (function (n) {
      ad(t, n);
      function t(e, r) {
        var o = n.call(this, r) || this;
        return (
          (o.labelSeparator = ''),
          (o.labelAlignment = 'left'),
          (o.disabled = !1),
          (o.label = ''),
          (o.config = e || {}),
          o
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addCssClass('ag-labeled'), this.eLabel.classList.add('ag-label');
          var e = this.config,
            r = e.labelSeparator,
            o = e.label,
            i = e.labelWidth,
            s = e.labelAlignment;
          r != null && this.setLabelSeparator(r),
            o != null && this.setLabel(o),
            i != null && this.setLabelWidth(i),
            this.setLabelAlignment(s || this.labelAlignment),
            this.refreshLabel();
        }),
        (t.prototype.refreshLabel = function () {
          de(this.eLabel),
            typeof this.label == 'string'
              ? (this.eLabel.innerText = this.label + this.labelSeparator)
              : this.label && this.eLabel.appendChild(this.label),
            this.label === ''
              ? ($(this.eLabel, !1), le(this.eLabel, 'presentation'))
              : ($(this.eLabel, !0), le(this.eLabel, null));
        }),
        (t.prototype.setLabelSeparator = function (e) {
          return this.labelSeparator === e
            ? this
            : ((this.labelSeparator = e), this.label != null && this.refreshLabel(), this);
        }),
        (t.prototype.getLabelId = function () {
          return (
            (this.eLabel.id = this.eLabel.id || 'ag-'.concat(this.getCompId(), '-label')),
            this.eLabel.id
          );
        }),
        (t.prototype.getLabel = function () {
          return this.label;
        }),
        (t.prototype.setLabel = function (e) {
          return this.label === e ? this : ((this.label = e), this.refreshLabel(), this);
        }),
        (t.prototype.setLabelAlignment = function (e) {
          var r = this.getGui(),
            o = r.classList;
          return (
            o.toggle('ag-label-align-left', e === 'left'),
            o.toggle('ag-label-align-right', e === 'right'),
            o.toggle('ag-label-align-top', e === 'top'),
            this
          );
        }),
        (t.prototype.setLabelEllipsis = function (e) {
          return this.eLabel.classList.toggle('ag-label-ellipsis', e), this;
        }),
        (t.prototype.setLabelWidth = function (e) {
          return this.label == null ? this : (eo(this.eLabel, e), this);
        }),
        (t.prototype.setDisabled = function (e) {
          e = !!e;
          var r = this.getGui();
          return Pr(r, e), r.classList.toggle('ag-disabled', e), (this.disabled = e), this;
        }),
        (t.prototype.isDisabled = function () {
          return !!this.disabled;
        }),
        ld([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    ud = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Sl = (function (n) {
      ud(t, n);
      function t(e, r, o) {
        var i = n.call(this, e, r) || this;
        return (i.className = o), i;
      }
      return (
        (t.prototype.postConstruct = function () {
          n.prototype.postConstruct.call(this),
            this.className && this.addCssClass(this.className),
            this.refreshAriaLabelledBy();
        }),
        (t.prototype.refreshAriaLabelledBy = function () {
          var e = this.getAriaElement(),
            r = this.getLabelId();
          Na(e) !== null ? Uo(e, '') : Uo(e, r ?? '');
        }),
        (t.prototype.setAriaLabel = function (e) {
          return Ht(this.getAriaElement(), e), this.refreshAriaLabelledBy(), this;
        }),
        (t.prototype.onValueChange = function (e) {
          var r = this;
          return (
            this.addManagedListener(this, g.EVENT_FIELD_VALUE_CHANGED, function () {
              return e(r.getValue());
            }),
            this
          );
        }),
        (t.prototype.getWidth = function () {
          return this.getGui().clientWidth;
        }),
        (t.prototype.setWidth = function (e) {
          return Je(this.getGui(), e), this;
        }),
        (t.prototype.getPreviousValue = function () {
          return this.previousValue;
        }),
        (t.prototype.getValue = function () {
          return this.value;
        }),
        (t.prototype.setValue = function (e, r) {
          return this.value === e
            ? this
            : ((this.previousValue = this.value),
              (this.value = e),
              r || this.dispatchEvent({ type: g.EVENT_FIELD_VALUE_CHANGED }),
              this);
        }),
        t
      );
    })(Cl),
    cd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    oo = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    pd = `
    <div class="ag-picker-field" role="presentation">
        <div ref="eLabel"></div>
            <div ref="eWrapper" class="ag-wrapper ag-picker-field-wrapper ag-picker-collapsed">
            <div ref="eDisplayField" class="ag-picker-field-display"></div>
            <div ref="eIcon" class="ag-picker-field-icon" aria-hidden="true"></div>
        </div>
    </div>`,
    wl = (function (n) {
      cd(t, n);
      function t(e) {
        var r =
          n.call(
            this,
            e,
            (e == null ? void 0 : e.template) || pd,
            e == null ? void 0 : e.className
          ) || this;
        if (
          ((r.isPickerDisplayed = !1),
          (r.skipClick = !1),
          (r.pickerGap = 4),
          (r.hideCurrentPicker = null),
          (r.ariaRole = e == null ? void 0 : e.ariaRole),
          (r.onPickerFocusIn = r.onPickerFocusIn.bind(r)),
          (r.onPickerFocusOut = r.onPickerFocusOut.bind(r)),
          !e)
        )
          return r;
        var o = e.pickerGap,
          i = e.maxPickerHeight,
          s = e.variableWidth,
          a = e.minPickerWidth,
          l = e.maxPickerWidth;
        return (
          o != null && (r.pickerGap = o),
          (r.variableWidth = !!s),
          i != null && r.setPickerMaxHeight(i),
          a != null && r.setPickerMinWidth(a),
          l != null && r.setPickerMaxWidth(l),
          r
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          n.prototype.postConstruct.call(this), this.setupAria();
          var e = 'ag-'.concat(this.getCompId(), '-display');
          this.eDisplayField.setAttribute('id', e);
          var r = this.getAriaElement();
          this.addManagedListener(r, 'keydown', this.onKeyDown.bind(this)),
            this.addManagedListener(
              this.eLabel,
              'mousedown',
              this.onLabelOrWrapperMouseDown.bind(this)
            ),
            this.addManagedListener(
              this.eWrapper,
              'mousedown',
              this.onLabelOrWrapperMouseDown.bind(this)
            );
          var o = this.config.pickerIcon;
          if (o) {
            var i = ne(o, this.gridOptionsService);
            i && this.eIcon.appendChild(i);
          }
        }),
        (t.prototype.setupAria = function () {
          var e = this.getAriaElement();
          e.setAttribute('tabindex', this.gridOptionsService.get('tabIndex').toString()),
            Pt(e, !1),
            this.ariaRole && le(e, this.ariaRole);
        }),
        (t.prototype.onLabelOrWrapperMouseDown = function (e) {
          if (e) {
            var r = this.getFocusableElement();
            if (r !== this.eWrapper && (e == null ? void 0 : e.target) === r) return;
            e.preventDefault(), this.getFocusableElement().focus();
          }
          if (this.skipClick) {
            this.skipClick = !1;
            return;
          }
          this.isDisabled() || (this.isPickerDisplayed ? this.hidePicker() : this.showPicker());
        }),
        (t.prototype.onKeyDown = function (e) {
          switch (e.key) {
            case _.UP:
            case _.DOWN:
            case _.ENTER:
            case _.SPACE:
              e.preventDefault(), this.onLabelOrWrapperMouseDown();
              break;
            case _.ESCAPE:
              this.isPickerDisplayed &&
                (e.preventDefault(),
                e.stopPropagation(),
                this.hideCurrentPicker && this.hideCurrentPicker());
              break;
          }
        }),
        (t.prototype.showPicker = function () {
          (this.isPickerDisplayed = !0),
            this.pickerComponent || (this.pickerComponent = this.createPickerComponent());
          var e = this.pickerComponent.getGui();
          e.addEventListener('focusin', this.onPickerFocusIn),
            e.addEventListener('focusout', this.onPickerFocusOut),
            (this.hideCurrentPicker = this.renderAndPositionPicker()),
            this.toggleExpandedStyles(!0);
        }),
        (t.prototype.renderAndPositionPicker = function () {
          var e = this,
            r = this.gridOptionsService.getDocument(),
            o = this.pickerComponent.getGui();
          this.gridOptionsService.get('suppressScrollWhenPopupsAreOpen') ||
            (this.destroyMouseWheelFunc = this.addManagedListener(
              this.eventService,
              g.EVENT_BODY_SCROLL,
              function () {
                e.hidePicker();
              }
            ));
          var i = this.localeService.getLocaleTextFunc(),
            s = this.config,
            a = s.pickerAriaLabelKey,
            l = s.pickerAriaLabelValue,
            u = s.modalPicker,
            c = u === void 0 ? !0 : u,
            p = {
              modal: c,
              eChild: o,
              closeOnEsc: !0,
              closedCallback: function () {
                var E = r.activeElement === r.body;
                e.beforeHidePicker(), E && e.isAlive() && e.getFocusableElement().focus();
              },
              ariaLabel: i(a, l),
            },
            d = this.popupService.addPopup(p),
            h = this,
            f = h.maxPickerHeight,
            y = h.minPickerWidth,
            m = h.maxPickerWidth,
            C = h.variableWidth;
          C
            ? (y && (o.style.minWidth = y),
              (o.style.width = Qo(Qr(this.eWrapper))),
              m && (o.style.maxWidth = m))
            : eo(o, m ?? Qr(this.eWrapper));
          var w = f ?? ''.concat(qr(this.popupService.getPopupParent()), 'px');
          return (
            o.style.setProperty('max-height', w),
            (o.style.position = 'absolute'),
            this.alignPickerToComponent(),
            d.hideFunc
          );
        }),
        (t.prototype.alignPickerToComponent = function () {
          if (this.pickerComponent) {
            var e = this.config.pickerType,
              r = this.pickerGap,
              o = this.gridOptionsService.get('enableRtl') ? 'right' : 'left';
            this.popupService.positionPopupByComponent({
              type: e,
              eventSource: this.eWrapper,
              ePopup: this.pickerComponent.getGui(),
              position: 'under',
              alignSide: o,
              keepWithinBounds: !0,
              nudgeY: r,
            });
          }
        }),
        (t.prototype.beforeHidePicker = function () {
          this.destroyMouseWheelFunc &&
            (this.destroyMouseWheelFunc(), (this.destroyMouseWheelFunc = void 0)),
            this.toggleExpandedStyles(!1);
          var e = this.pickerComponent.getGui();
          e.removeEventListener('focusin', this.onPickerFocusIn),
            e.removeEventListener('focusout', this.onPickerFocusOut),
            (this.isPickerDisplayed = !1),
            (this.pickerComponent = void 0),
            (this.hideCurrentPicker = null);
        }),
        (t.prototype.toggleExpandedStyles = function (e) {
          if (this.isAlive()) {
            var r = this.getAriaElement();
            Pt(r, e),
              this.eWrapper.classList.toggle('ag-picker-expanded', e),
              this.eWrapper.classList.toggle('ag-picker-collapsed', !e);
          }
        }),
        (t.prototype.onPickerFocusIn = function () {
          this.togglePickerHasFocus(!0);
        }),
        (t.prototype.onPickerFocusOut = function (e) {
          var r;
          (!((r = this.pickerComponent) === null || r === void 0) &&
            r.getGui().contains(e.relatedTarget)) ||
            this.togglePickerHasFocus(!1);
        }),
        (t.prototype.togglePickerHasFocus = function (e) {
          this.pickerComponent && this.eWrapper.classList.toggle('ag-picker-has-focus', e);
        }),
        (t.prototype.hidePicker = function () {
          this.hideCurrentPicker && this.hideCurrentPicker();
        }),
        (t.prototype.setInputWidth = function (e) {
          return eo(this.eWrapper, e), this;
        }),
        (t.prototype.getFocusableElement = function () {
          return this.eWrapper;
        }),
        (t.prototype.setPickerGap = function (e) {
          return (this.pickerGap = e), this;
        }),
        (t.prototype.setPickerMinWidth = function (e) {
          return (
            typeof e == 'number' && (e = ''.concat(e, 'px')),
            (this.minPickerWidth = e ?? void 0),
            this
          );
        }),
        (t.prototype.setPickerMaxWidth = function (e) {
          return (
            typeof e == 'number' && (e = ''.concat(e, 'px')),
            (this.maxPickerWidth = e ?? void 0),
            this
          );
        }),
        (t.prototype.setPickerMaxHeight = function (e) {
          return (
            typeof e == 'number' && (e = ''.concat(e, 'px')),
            (this.maxPickerHeight = e ?? void 0),
            this
          );
        }),
        (t.prototype.destroy = function () {
          this.hidePicker(), n.prototype.destroy.call(this);
        }),
        oo([v('popupService')], t.prototype, 'popupService', void 0),
        oo([L('eLabel')], t.prototype, 'eLabel', void 0),
        oo([L('eWrapper')], t.prototype, 'eWrapper', void 0),
        oo([L('eDisplayField')], t.prototype, 'eDisplayField', void 0),
        oo([L('eIcon')], t.prototype, 'eIcon', void 0),
        t
      );
    })(Sl),
    dd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    hd = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    El = (function (n) {
      dd(t, n);
      function t(e) {
        e === void 0 && (e = 'default');
        var r =
          n.call(this, '<div class="ag-list ag-'.concat(e, '-list" role="listbox"></div>')) || this;
        return (r.cssIdentifier = e), (r.options = []), (r.itemEls = []), r;
      }
      return (
        (t.prototype.init = function () {
          this.addManagedListener(this.getGui(), 'keydown', this.handleKeyDown.bind(this));
        }),
        (t.prototype.handleKeyDown = function (e) {
          var r = e.key;
          switch (r) {
            case _.ENTER:
              if (!this.highlightedEl) this.setValue(this.getValue());
              else {
                var o = this.itemEls.indexOf(this.highlightedEl);
                this.setValueByIndex(o);
              }
              break;
            case _.DOWN:
            case _.UP:
              var i = r === _.DOWN,
                s = void 0;
              if ((e.preventDefault(), !this.highlightedEl))
                s = this.itemEls[i ? 0 : this.itemEls.length - 1];
              else {
                var a = this.itemEls.indexOf(this.highlightedEl),
                  l = a + (i ? 1 : -1);
                (l = Math.min(Math.max(l, 0), this.itemEls.length - 1)), (s = this.itemEls[l]);
              }
              this.highlightItem(s);
              break;
          }
        }),
        (t.prototype.addOptions = function (e) {
          var r = this;
          return (
            e.forEach(function (o) {
              return r.addOption(o);
            }),
            this
          );
        }),
        (t.prototype.addOption = function (e) {
          var r = e.value,
            o = e.text,
            i = ae(o || r);
          return (
            this.options.push({ value: r, text: i }),
            this.renderOption(r, i),
            this.updateIndices(),
            this
          );
        }),
        (t.prototype.updateIndices = function () {
          var e = this.getGui().querySelectorAll('.ag-list-item');
          e.forEach(function (r, o) {
            gn(r, o + 1), vn(r, e.length);
          });
        }),
        (t.prototype.renderOption = function (e, r) {
          var o = this,
            i = document.createElement('div');
          le(i, 'option'),
            i.classList.add('ag-list-item', 'ag-'.concat(this.cssIdentifier, '-list-item')),
            (i.innerHTML = '<span>'.concat(r, '</span>')),
            (i.tabIndex = -1),
            this.itemEls.push(i),
            this.addManagedListener(i, 'mouseover', function () {
              return o.highlightItem(i);
            }),
            this.addManagedListener(i, 'mouseleave', function () {
              return o.clearHighlighted();
            }),
            this.addManagedListener(i, 'click', function () {
              return o.setValue(e);
            }),
            this.getGui().appendChild(i);
        }),
        (t.prototype.setValue = function (e, r) {
          if (this.value === e) return this.fireItemSelected(), this;
          if (e == null) return this.reset(), this;
          var o = this.options.findIndex(function (s) {
            return s.value === e;
          });
          if (o !== -1) {
            var i = this.options[o];
            (this.value = i.value),
              (this.displayValue = i.text != null ? i.text : i.value),
              this.highlightItem(this.itemEls[o]),
              r || this.fireChangeEvent();
          }
          return this;
        }),
        (t.prototype.setValueByIndex = function (e) {
          return this.setValue(this.options[e].value);
        }),
        (t.prototype.getValue = function () {
          return this.value;
        }),
        (t.prototype.getDisplayValue = function () {
          return this.displayValue;
        }),
        (t.prototype.refreshHighlighted = function () {
          var e = this;
          this.clearHighlighted();
          var r = this.options.findIndex(function (o) {
            return o.value === e.value;
          });
          r !== -1 && this.highlightItem(this.itemEls[r]);
        }),
        (t.prototype.reset = function () {
          (this.value = null),
            (this.displayValue = null),
            this.clearHighlighted(),
            this.fireChangeEvent();
        }),
        (t.prototype.highlightItem = function (e) {
          We(e) &&
            (this.clearHighlighted(),
            (this.highlightedEl = e),
            this.highlightedEl.classList.add(t.ACTIVE_CLASS),
            Rr(this.highlightedEl, !0),
            this.highlightedEl.focus());
        }),
        (t.prototype.clearHighlighted = function () {
          !this.highlightedEl ||
            !We(this.highlightedEl) ||
            (this.highlightedEl.classList.remove(t.ACTIVE_CLASS),
            Rr(this.highlightedEl, !1),
            (this.highlightedEl = null));
        }),
        (t.prototype.fireChangeEvent = function () {
          this.dispatchEvent({ type: g.EVENT_FIELD_VALUE_CHANGED }), this.fireItemSelected();
        }),
        (t.prototype.fireItemSelected = function () {
          this.dispatchEvent({ type: t.EVENT_ITEM_SELECTED });
        }),
        (t.EVENT_ITEM_SELECTED = 'selectedItem'),
        (t.ACTIVE_CLASS = 'ag-active-item'),
        hd([F], t.prototype, 'init', null),
        t
      );
    })(k),
    fd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    es = function () {
      return (
        (es =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        es.apply(this, arguments)
      );
    },
    ei = (function (n) {
      fd(t, n);
      function t(e) {
        return (
          n.call(
            this,
            es(
              {
                pickerAriaLabelKey: 'ariaLabelSelectField',
                pickerAriaLabelValue: 'Select Field',
                pickerType: 'ag-list',
                className: 'ag-select',
                pickerIcon: 'smallDown',
                ariaRole: 'combobox',
              },
              e
            )
          ) || this
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          n.prototype.postConstruct.call(this),
            this.createListComponent(),
            (this.eWrapper.tabIndex = this.gridOptionsService.get('tabIndex'));
        }),
        (t.prototype.createListComponent = function () {
          var e = this;
          (this.listComponent = this.createBean(new El('select'))),
            this.listComponent.setParentComponent(this);
          var r = this.listComponent.getAriaElement(),
            o = 'ag-select-list-'.concat(this.listComponent.getCompId());
          r.setAttribute('id', o),
            Cn(this.getAriaElement(), r),
            this.listComponent.addGuiEventListener('keydown', function (i) {
              i.key === _.TAB &&
                (i.preventDefault(),
                i.stopImmediatePropagation(),
                e.getGui().dispatchEvent(
                  new KeyboardEvent('keydown', {
                    key: i.key,
                    shiftKey: i.shiftKey,
                    ctrlKey: i.ctrlKey,
                    bubbles: !0,
                  })
                ));
            }),
            this.listComponent.addManagedListener(
              this.listComponent,
              El.EVENT_ITEM_SELECTED,
              function () {
                e.hidePicker(), e.dispatchEvent({ type: t.EVENT_ITEM_SELECTED });
              }
            ),
            this.listComponent.addManagedListener(
              this.listComponent,
              g.EVENT_FIELD_VALUE_CHANGED,
              function () {
                e.listComponent && (e.setValue(e.listComponent.getValue(), !1, !0), e.hidePicker());
              }
            );
        }),
        (t.prototype.createPickerComponent = function () {
          return this.listComponent;
        }),
        (t.prototype.showPicker = function () {
          this.listComponent &&
            (n.prototype.showPicker.call(this), this.listComponent.refreshHighlighted());
        }),
        (t.prototype.addOptions = function (e) {
          var r = this;
          return (
            e.forEach(function (o) {
              return r.addOption(o);
            }),
            this
          );
        }),
        (t.prototype.addOption = function (e) {
          return this.listComponent.addOption(e), this;
        }),
        (t.prototype.setValue = function (e, r, o) {
          if (this.value === e || !this.listComponent) return this;
          o || this.listComponent.setValue(e, !0);
          var i = this.listComponent.getValue();
          return i === this.getValue()
            ? this
            : ((this.eDisplayField.innerHTML = this.listComponent.getDisplayValue()),
              n.prototype.setValue.call(this, e, r));
        }),
        (t.prototype.destroy = function () {
          this.listComponent &&
            (this.destroyBean(this.listComponent), (this.listComponent = void 0)),
            n.prototype.destroy.call(this);
        }),
        (t.EVENT_ITEM_SELECTED = 'selectedItem'),
        t
      );
    })(wl),
    vd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ts = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    kt = (function (n) {
      vd(t, n);
      function t(e, r, o, i) {
        o === void 0 && (o = 'text'), i === void 0 && (i = 'input');
        var s =
          n.call(
            this,
            e,
            `
            <div role="presentation">
                <div ref="eLabel" class="ag-input-field-label"></div>
                <div ref="eWrapper" class="ag-wrapper ag-input-wrapper" role="presentation">
                    <`
              .concat(i, ' ref="eInput" class="ag-input-field-input"></')
              .concat(
                i,
                `>
                </div>
            </div>`
              ),
            r
          ) || this;
        return (s.inputType = o), (s.displayFieldTag = i), s;
      }
      return (
        (t.prototype.postConstruct = function () {
          n.prototype.postConstruct.call(this),
            this.setInputType(),
            this.eLabel.classList.add(''.concat(this.className, '-label')),
            this.eWrapper.classList.add(''.concat(this.className, '-input-wrapper')),
            this.eInput.classList.add(''.concat(this.className, '-input')),
            this.addCssClass('ag-input-field'),
            (this.eInput.id = this.eInput.id || 'ag-'.concat(this.getCompId(), '-input'));
          var e = this.config,
            r = e.width,
            o = e.value;
          r != null && this.setWidth(r),
            o != null && this.setValue(o),
            this.addInputListeners(),
            this.activateTabIndex([this.eInput]);
        }),
        (t.prototype.addInputListeners = function () {
          var e = this;
          this.addManagedListener(this.eInput, 'input', function (r) {
            return e.setValue(r.target.value);
          });
        }),
        (t.prototype.setInputType = function () {
          this.displayFieldTag === 'input' && this.eInput.setAttribute('type', this.inputType);
        }),
        (t.prototype.getInputElement = function () {
          return this.eInput;
        }),
        (t.prototype.setInputWidth = function (e) {
          return eo(this.eWrapper, e), this;
        }),
        (t.prototype.setInputName = function (e) {
          return this.getInputElement().setAttribute('name', e), this;
        }),
        (t.prototype.getFocusableElement = function () {
          return this.eInput;
        }),
        (t.prototype.setMaxLength = function (e) {
          var r = this.eInput;
          return (r.maxLength = e), this;
        }),
        (t.prototype.setInputPlaceholder = function (e) {
          return vt(this.eInput, 'placeholder', e), this;
        }),
        (t.prototype.setInputAriaLabel = function (e) {
          return Ht(this.eInput, e), this.refreshAriaLabelledBy(), this;
        }),
        (t.prototype.setDisabled = function (e) {
          return Pr(this.eInput, e), n.prototype.setDisabled.call(this, e);
        }),
        (t.prototype.setAutoComplete = function (e) {
          if (e === !0) vt(this.eInput, 'autocomplete', null);
          else {
            var r = typeof e == 'string' ? e : 'off';
            vt(this.eInput, 'autocomplete', r);
          }
          return this;
        }),
        ts([L('eLabel')], t.prototype, 'eLabel', void 0),
        ts([L('eWrapper')], t.prototype, 'eWrapper', void 0),
        ts([L('eInput')], t.prototype, 'eInput', void 0),
        t
      );
    })(Sl),
    gd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ti = (function (n) {
      gd(t, n);
      function t(e, r, o) {
        r === void 0 && (r = 'ag-checkbox'), o === void 0 && (o = 'checkbox');
        var i = n.call(this, e, r, o) || this;
        return (
          (i.labelAlignment = 'right'), (i.selected = !1), (i.readOnly = !1), (i.passive = !1), i
        );
      }
      return (
        (t.prototype.addInputListeners = function () {
          this.addManagedListener(this.eInput, 'click', this.onCheckboxClick.bind(this)),
            this.addManagedListener(this.eLabel, 'click', this.toggle.bind(this));
        }),
        (t.prototype.getNextValue = function () {
          return this.selected === void 0 ? !0 : !this.selected;
        }),
        (t.prototype.setPassive = function (e) {
          this.passive = e;
        }),
        (t.prototype.isReadOnly = function () {
          return this.readOnly;
        }),
        (t.prototype.setReadOnly = function (e) {
          this.eWrapper.classList.toggle('ag-disabled', e),
            (this.eInput.disabled = e),
            (this.readOnly = e);
        }),
        (t.prototype.setDisabled = function (e) {
          return (
            this.eWrapper.classList.toggle('ag-disabled', e), n.prototype.setDisabled.call(this, e)
          );
        }),
        (t.prototype.toggle = function () {
          if (!this.eInput.disabled) {
            var e = this.isSelected(),
              r = this.getNextValue();
            this.passive ? this.dispatchChange(r, e) : this.setValue(r);
          }
        }),
        (t.prototype.getValue = function () {
          return this.isSelected();
        }),
        (t.prototype.setValue = function (e, r) {
          return this.refreshSelectedClass(e), this.setSelected(e, r), this;
        }),
        (t.prototype.setName = function (e) {
          var r = this.getInputElement();
          return (r.name = e), this;
        }),
        (t.prototype.isSelected = function () {
          return this.selected;
        }),
        (t.prototype.setSelected = function (e, r) {
          this.isSelected() !== e &&
            ((this.previousValue = this.isSelected()),
            (e = this.selected = typeof e == 'boolean' ? e : void 0),
            (this.eInput.checked = e),
            (this.eInput.indeterminate = e === void 0),
            r || this.dispatchChange(this.selected, this.previousValue));
        }),
        (t.prototype.dispatchChange = function (e, r, o) {
          this.dispatchEvent({
            type: g.EVENT_FIELD_VALUE_CHANGED,
            selected: e,
            previousValue: r,
            event: o,
          });
          var i = this.getInputElement(),
            s = {
              type: g.EVENT_CHECKBOX_CHANGED,
              id: i.id,
              name: i.name,
              selected: e,
              previousValue: r,
            };
          this.eventService.dispatchEvent(s);
        }),
        (t.prototype.onCheckboxClick = function (e) {
          if (!(this.passive || this.eInput.disabled)) {
            var r = this.isSelected(),
              o = (this.selected = e.target.checked);
            this.refreshSelectedClass(o), this.dispatchChange(o, r, e);
          }
        }),
        (t.prototype.refreshSelectedClass = function (e) {
          this.eWrapper.classList.toggle('ag-checked', e === !0),
            this.eWrapper.classList.toggle('ag-indeterminate', e == null);
        }),
        t
      );
    })(kt),
    yd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    _l = (function (n) {
      yd(t, n);
      function t(e) {
        return n.call(this, e, 'ag-radio-button', 'radio') || this;
      }
      return (
        (t.prototype.isSelected = function () {
          return this.eInput.checked;
        }),
        (t.prototype.toggle = function () {
          this.eInput.disabled || this.isSelected() || this.setValue(!0);
        }),
        (t.prototype.addInputListeners = function () {
          n.prototype.addInputListeners.call(this),
            this.addManagedListener(
              this.eventService,
              g.EVENT_CHECKBOX_CHANGED,
              this.onChange.bind(this)
            );
        }),
        (t.prototype.onChange = function (e) {
          e.selected &&
            e.name &&
            this.eInput.name &&
            this.eInput.name === e.name &&
            e.id &&
            this.eInput.id !== e.id &&
            this.setValue(!1, !0);
        }),
        t
      );
    })(ti),
    md = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Cd = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Sd = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    rs = (function () {
      function n(t, e, r) {
        (this.localeService = t), (this.optionsFactory = e), (this.valueFormatter = r);
      }
      return (
        (n.prototype.getModelAsString = function (t) {
          var e = this;
          if (!t) return null;
          var r = t.operator != null,
            o = this.localeService.getLocaleTextFunc();
          if (r) {
            var i = t,
              s = i.conditions;
            if (!s) {
              var a = i.condition1,
                l = i.condition2;
              s = [a, l];
            }
            var u = s.map(function (C) {
                return e.getModelAsString(C);
              }),
              c = i.operator === 'AND' ? 'andCondition' : 'orCondition';
            return u.join(' '.concat(o(c, vl[c]), ' '));
          } else {
            if (t.type === re.BLANK || t.type === re.NOT_BLANK) return o(t.type, t.type);
            var p = t,
              d = this.optionsFactory.getCustomOption(p.type),
              h = d || {},
              f = h.displayKey,
              y = h.displayName,
              m = h.numberOfInputs;
            return f && y && m === 0 ? (o(f, y), y) : this.conditionToString(p, d);
          }
        }),
        (n.prototype.updateParams = function (t) {
          this.optionsFactory = t.optionsFactory;
        }),
        (n.prototype.formatValue = function (t) {
          var e;
          return this.valueFormatter
            ? (e = this.valueFormatter(t ?? null)) !== null && e !== void 0
              ? e
              : ''
            : String(t);
        }),
        n
      );
    })(),
    re = (function (n) {
      md(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.eTypes = []),
          (e.eJoinOperatorPanels = []),
          (e.eJoinOperatorsAnd = []),
          (e.eJoinOperatorsOr = []),
          (e.eConditionBodies = []),
          (e.listener = function () {
            return e.onUiChanged();
          }),
          (e.lastUiCompletePosition = null),
          (e.joinOperatorId = 0),
          e
        );
      }
      return (
        (t.prototype.getNumberOfInputs = function (e) {
          var r = this.optionsFactory.getCustomOption(e);
          if (r) {
            var o = r.numberOfInputs;
            return o ?? 1;
          }
          var i = [t.EMPTY, t.NOT_BLANK, t.BLANK];
          return e && i.indexOf(e) >= 0 ? 0 : e === t.IN_RANGE ? 2 : 1;
        }),
        (t.prototype.onFloatingFilterChanged = function (e, r) {
          this.setTypeFromFloatingFilter(e),
            this.setValueFromFloatingFilter(r),
            this.onUiChanged(!0);
        }),
        (t.prototype.setTypeFromFloatingFilter = function (e) {
          var r = this;
          this.eTypes.forEach(function (o, i) {
            i === 0 ? o.setValue(e, !0) : o.setValue(r.optionsFactory.getDefaultOption(), !0);
          });
        }),
        (t.prototype.getModelFromUi = function () {
          var e = this.getUiCompleteConditions();
          return e.length === 0
            ? null
            : this.maxNumConditions > 1 && e.length > 1
            ? {
                filterType: this.getFilterType(),
                operator: this.getJoinOperator(),
                condition1: e[0],
                condition2: e[1],
                conditions: e,
              }
            : e[0];
        }),
        (t.prototype.getConditionTypes = function () {
          return this.eTypes.map(function (e) {
            return e.getValue();
          });
        }),
        (t.prototype.getConditionType = function (e) {
          return this.eTypes[e].getValue();
        }),
        (t.prototype.getJoinOperator = function () {
          return this.eJoinOperatorsOr.length === 0
            ? this.defaultJoinOperator
            : this.eJoinOperatorsOr[0].getValue() === !0
            ? 'OR'
            : 'AND';
        }),
        (t.prototype.areModelsEqual = function (e, r) {
          var o = this;
          if (!e && !r) return !0;
          if ((!e && r) || (e && !r)) return !1;
          var i = !e.operator,
            s = !r.operator,
            a = (!i && s) || (i && !s);
          if (a) return !1;
          var l;
          if (i) {
            var u = e,
              c = r;
            l = this.areSimpleModelsEqual(u, c);
          } else {
            var p = e,
              d = r;
            l =
              p.operator === d.operator &&
              Tt(p.conditions, d.conditions, function (h, f) {
                return o.areSimpleModelsEqual(h, f);
              });
          }
          return l;
        }),
        (t.prototype.shouldRefresh = function (e) {
          var r,
            o,
            i,
            s = this.getModel(),
            a = s ? ((r = s.conditions) !== null && r !== void 0 ? r : [s]) : null,
            l =
              (i =
                (o = e.filterOptions) === null || o === void 0
                  ? void 0
                  : o.map(function (c) {
                      return typeof c == 'string' ? c : c.displayKey;
                    })) !== null && i !== void 0
                ? i
                : this.getDefaultFilterOptions(),
            u =
              !a ||
              a.every(function (c) {
                return (
                  l.find(function (p) {
                    return p === c.type;
                  }) !== void 0
                );
              });
          return !(
            !u ||
            (typeof e.maxNumConditions == 'number' && a && a.length > e.maxNumConditions)
          );
        }),
        (t.prototype.refresh = function (e) {
          if (!this.shouldRefresh(e)) return !1;
          var r = n.prototype.refresh.call(this, e);
          return r
            ? (this.setParams(e),
              this.removeConditionsAndOperators(0),
              this.createOption(),
              this.setModel(this.getModel()),
              !0)
            : !1;
        }),
        (t.prototype.setModelIntoUi = function (e) {
          var r = this,
            o = e.operator;
          if (o) {
            var i = e;
            i.conditions || (i.conditions = [i.condition1, i.condition2]);
            var s = this.validateAndUpdateConditions(i.conditions),
              a = this.getNumConditions();
            if (s < a) this.removeConditionsAndOperators(s);
            else if (s > a)
              for (var l = a; l < s; l++) this.createJoinOperatorPanel(), this.createOption();
            var u = i.operator === 'OR';
            this.eJoinOperatorsAnd.forEach(function (p) {
              return p.setValue(!u, !0);
            }),
              this.eJoinOperatorsOr.forEach(function (p) {
                return p.setValue(u, !0);
              }),
              i.conditions.forEach(function (p, d) {
                r.eTypes[d].setValue(p.type, !0), r.setConditionIntoUi(p, d);
              });
          } else {
            var c = e;
            this.getNumConditions() > 1 && this.removeConditionsAndOperators(1),
              this.eTypes[0].setValue(c.type, !0),
              this.setConditionIntoUi(c, 0);
          }
          return (
            (this.lastUiCompletePosition = this.getNumConditions() - 1),
            this.createMissingConditionsAndOperators(),
            this.onUiChanged(),
            je.resolve()
          );
        }),
        (t.prototype.validateAndUpdateConditions = function (e) {
          var r = e.length;
          return (
            r > this.maxNumConditions &&
              (e.splice(this.maxNumConditions),
              V(
                'Filter Model contains more conditions than "filterParams.maxNumConditions". Additional conditions have been ignored.'
              ),
              (r = this.maxNumConditions)),
            r
          );
        }),
        (t.prototype.doesFilterPass = function (e) {
          var r = this,
            o,
            i = this.getModel();
          if (i == null) return !0;
          var s = i.operator,
            a = [];
          if (s) {
            var l = i;
            a.push.apply(a, Sd([], Cd((o = l.conditions) !== null && o !== void 0 ? o : []), !1));
          } else a.push(i);
          var u = s && s === 'OR' ? 'some' : 'every';
          return a[u](function (c) {
            return r.individualConditionPasses(e, c);
          });
        }),
        (t.prototype.setParams = function (e) {
          n.prototype.setParams.call(this, e),
            this.setNumConditions(e),
            (this.defaultJoinOperator = this.getDefaultJoinOperator(e.defaultJoinOperator)),
            (this.filterPlaceholder = e.filterPlaceholder),
            (this.optionsFactory = new fl()),
            this.optionsFactory.init(e, this.getDefaultFilterOptions()),
            this.createFilterListOptions(),
            this.createOption(),
            this.createMissingConditionsAndOperators(),
            this.isReadOnly() && this.eFilterBody.setAttribute('tabindex', '-1');
        }),
        (t.prototype.setNumConditions = function (e) {
          var r, o;
          e.suppressAndOrCondition != null &&
            V(
              'Since v29.2 "filterParams.suppressAndOrCondition" is deprecated. Use "filterParams.maxNumConditions = 1" instead.'
            ),
            e.alwaysShowBothConditions != null &&
              V(
                'Since v29.2 "filterParams.alwaysShowBothConditions" is deprecated. Use "filterParams.numAlwaysVisibleConditions = 2" instead.'
              ),
            (this.maxNumConditions =
              (r = e.maxNumConditions) !== null && r !== void 0
                ? r
                : e.suppressAndOrCondition
                ? 1
                : 2),
            this.maxNumConditions < 1 &&
              (V('"filterParams.maxNumConditions" must be greater than or equal to zero.'),
              (this.maxNumConditions = 1)),
            (this.numAlwaysVisibleConditions =
              (o = e.numAlwaysVisibleConditions) !== null && o !== void 0
                ? o
                : e.alwaysShowBothConditions
                ? 2
                : 1),
            this.numAlwaysVisibleConditions < 1 &&
              (V(
                '"filterParams.numAlwaysVisibleConditions" must be greater than or equal to zero.'
              ),
              (this.numAlwaysVisibleConditions = 1)),
            this.numAlwaysVisibleConditions > this.maxNumConditions &&
              (V(
                '"filterParams.numAlwaysVisibleConditions" cannot be greater than "filterParams.maxNumConditions".'
              ),
              (this.numAlwaysVisibleConditions = this.maxNumConditions));
        }),
        (t.prototype.createOption = function () {
          var e = this,
            r = this.createManagedBean(new ei());
          this.eTypes.push(r),
            r.addCssClass('ag-filter-select'),
            this.eFilterBody.appendChild(r.getGui());
          var o = this.createValueElement();
          this.eConditionBodies.push(o),
            this.eFilterBody.appendChild(o),
            this.putOptionsIntoDropdown(r),
            this.resetType(r);
          var i = this.getNumConditions() - 1;
          this.forEachPositionInput(i, function (s) {
            return e.resetInput(s);
          }),
            this.addChangedListeners(r, i);
        }),
        (t.prototype.createJoinOperatorPanel = function () {
          var e = document.createElement('div');
          this.eJoinOperatorPanels.push(e), e.classList.add('ag-filter-condition');
          var r = this.createJoinOperator(this.eJoinOperatorsAnd, e, 'and'),
            o = this.createJoinOperator(this.eJoinOperatorsOr, e, 'or');
          this.eFilterBody.appendChild(e);
          var i = this.eJoinOperatorPanels.length - 1,
            s = this.joinOperatorId++;
          this.resetJoinOperatorAnd(r, i, s),
            this.resetJoinOperatorOr(o, i, s),
            this.isReadOnly() || (r.onValueChange(this.listener), o.onValueChange(this.listener));
        }),
        (t.prototype.createJoinOperator = function (e, r, o) {
          var i = this.createManagedBean(new _l());
          return (
            e.push(i),
            i.addCssClass('ag-filter-condition-operator'),
            i.addCssClass('ag-filter-condition-operator-'.concat(o)),
            r.appendChild(i.getGui()),
            i
          );
        }),
        (t.prototype.getDefaultJoinOperator = function (e) {
          return e === 'AND' || e === 'OR' ? e : 'AND';
        }),
        (t.prototype.createFilterListOptions = function () {
          var e = this,
            r = this.optionsFactory.getFilterOptions();
          this.filterListOptions = r.map(function (o) {
            return typeof o == 'string'
              ? e.createBoilerplateListOption(o)
              : e.createCustomListOption(o);
          });
        }),
        (t.prototype.putOptionsIntoDropdown = function (e) {
          this.filterListOptions.forEach(function (r) {
            e.addOption(r);
          }),
            e.setDisabled(this.filterListOptions.length <= 1);
        }),
        (t.prototype.createBoilerplateListOption = function (e) {
          return { value: e, text: this.translate(e) };
        }),
        (t.prototype.createCustomListOption = function (e) {
          var r = e.displayKey,
            o = this.optionsFactory.getCustomOption(e.displayKey);
          return {
            value: r,
            text: o
              ? this.localeService.getLocaleTextFunc()(o.displayKey, o.displayName)
              : this.translate(r),
          };
        }),
        (t.prototype.isAllowTwoConditions = function () {
          return this.maxNumConditions >= 2;
        }),
        (t.prototype.createBodyTemplate = function () {
          return '';
        }),
        (t.prototype.getCssIdentifier = function () {
          return 'simple-filter';
        }),
        (t.prototype.updateUiVisibility = function () {
          var e = this.getJoinOperator();
          this.updateNumConditions(),
            this.updateConditionStatusesAndValues(this.lastUiCompletePosition, e);
        }),
        (t.prototype.updateNumConditions = function () {
          for (var e, r = -1, o = !0, i = 0; i < this.getNumConditions(); i++)
            this.isConditionUiComplete(i) ? (r = i) : (o = !1);
          if (this.shouldAddNewConditionAtEnd(o))
            this.createJoinOperatorPanel(), this.createOption();
          else {
            var s =
              (e = this.lastUiCompletePosition) !== null && e !== void 0
                ? e
                : this.getNumConditions() - 2;
            if (r < s) {
              this.removeConditionsAndOperators(s + 1);
              var a = r + 1,
                l = s - a;
              l > 0 && this.removeConditionsAndOperators(a, l),
                this.createMissingConditionsAndOperators();
            }
          }
          this.lastUiCompletePosition = r;
        }),
        (t.prototype.updateConditionStatusesAndValues = function (e, r) {
          var o = this;
          this.eTypes.forEach(function (s, a) {
            var l = o.isConditionDisabled(a, e);
            s.setDisabled(l || o.filterListOptions.length <= 1),
              a === 1 &&
                (Pr(o.eJoinOperatorPanels[0], l),
                o.eJoinOperatorsAnd[0].setDisabled(l),
                o.eJoinOperatorsOr[0].setDisabled(l));
          }),
            this.eConditionBodies.forEach(function (s, a) {
              $(s, o.isConditionBodyVisible(a));
            });
          var i = (r ?? this.getJoinOperator()) === 'OR';
          this.eJoinOperatorsAnd.forEach(function (s, a) {
            s.setValue(!i, !0);
          }),
            this.eJoinOperatorsOr.forEach(function (s, a) {
              s.setValue(i, !0);
            }),
            this.forEachInput(function (s, a, l, u) {
              o.setElementDisplayed(s, a < u), o.setElementDisabled(s, o.isConditionDisabled(l, e));
            }),
            this.resetPlaceholder();
        }),
        (t.prototype.shouldAddNewConditionAtEnd = function (e) {
          return e && this.getNumConditions() < this.maxNumConditions && !this.isReadOnly();
        }),
        (t.prototype.removeConditionsAndOperators = function (e, r) {
          if (!(e >= this.getNumConditions())) {
            this.removeComponents(this.eTypes, e, r),
              this.removeElements(this.eConditionBodies, e, r),
              this.removeValueElements(e, r);
            var o = Math.max(e - 1, 0);
            this.removeElements(this.eJoinOperatorPanels, o, r),
              this.removeComponents(this.eJoinOperatorsAnd, o, r),
              this.removeComponents(this.eJoinOperatorsOr, o, r);
          }
        }),
        (t.prototype.removeElements = function (e, r, o) {
          var i = this.removeItems(e, r, o);
          i.forEach(function (s) {
            return ft(s);
          });
        }),
        (t.prototype.removeComponents = function (e, r, o) {
          var i = this,
            s = this.removeItems(e, r, o);
          s.forEach(function (a) {
            ft(a.getGui()), i.destroyBean(a);
          });
        }),
        (t.prototype.removeItems = function (e, r, o) {
          return o == null ? e.splice(r) : e.splice(r, o);
        }),
        (t.prototype.afterGuiAttached = function (e) {
          if (
            (n.prototype.afterGuiAttached.call(this, e),
            this.resetPlaceholder(),
            !(e != null && e.suppressFocus))
          )
            if (this.isReadOnly()) this.eFilterBody.focus();
            else {
              var r = this.getInputs(0)[0];
              if (!r) return;
              r instanceof kt && r.getInputElement().focus();
            }
        }),
        (t.prototype.afterGuiDetached = function () {
          n.prototype.afterGuiDetached.call(this);
          var e = this.getModel();
          this.resetUiToActiveModel(e);
          for (
            var r = -1, o = -1, i = !1, s = this.getJoinOperator(), a = this.getNumConditions() - 1;
            a >= 0;
            a--
          )
            if (this.isConditionUiComplete(a)) r === -1 && ((r = a), (o = a));
            else {
              var l = a >= this.numAlwaysVisibleConditions && !this.isConditionUiComplete(a - 1),
                u = a < r;
              (l || u) && (this.removeConditionsAndOperators(a, 1), (i = !0), u && o--);
            }
          var c = !1;
          this.getNumConditions() < this.numAlwaysVisibleConditions &&
            (this.createMissingConditionsAndOperators(), (c = !0)),
            this.shouldAddNewConditionAtEnd(o === this.getNumConditions() - 1) &&
              (this.createJoinOperatorPanel(), this.createOption(), (c = !0)),
            c && this.updateConditionStatusesAndValues(o, s),
            i && this.updateJoinOperatorsDisabled(),
            (this.lastUiCompletePosition = o);
        }),
        (t.prototype.getPlaceholderText = function (e, r) {
          var o = this.translate(e);
          if (Ho(this.filterPlaceholder)) {
            var i = this.filterPlaceholder,
              s = this.eTypes[r].getValue(),
              a = this.translate(s);
            o = i({ filterOptionKey: s, filterOption: a, placeholder: o });
          } else typeof this.filterPlaceholder == 'string' && (o = this.filterPlaceholder);
          return o;
        }),
        (t.prototype.resetPlaceholder = function () {
          var e = this,
            r = this.localeService.getLocaleTextFunc();
          this.forEachInput(function (o, i, s, a) {
            if (o instanceof kt) {
              var l = i === 0 && a > 1 ? 'inRangeStart' : i === 0 ? 'filterOoo' : 'inRangeEnd',
                u =
                  i === 0 && a > 1
                    ? r('ariaFilterFromValue', 'Filter from value')
                    : i === 0
                    ? r('ariaFilterValue', 'Filter Value')
                    : r('ariaFilterToValue', 'Filter to Value');
              o.setInputPlaceholder(e.getPlaceholderText(l, s)), o.setInputAriaLabel(u);
            }
          });
        }),
        (t.prototype.setElementValue = function (e, r, o) {
          e instanceof kt && e.setValue(r != null ? String(r) : null, !0);
        }),
        (t.prototype.setElementDisplayed = function (e, r) {
          e instanceof k && $(e.getGui(), r);
        }),
        (t.prototype.setElementDisabled = function (e, r) {
          e instanceof k && Pr(e.getGui(), r);
        }),
        (t.prototype.attachElementOnChange = function (e, r) {
          e instanceof kt && e.onValueChange(r);
        }),
        (t.prototype.forEachInput = function (e) {
          var r = this;
          this.getConditionTypes().forEach(function (o, i) {
            r.forEachPositionTypeInput(i, o, e);
          });
        }),
        (t.prototype.forEachPositionInput = function (e, r) {
          var o = this.getConditionType(e);
          this.forEachPositionTypeInput(e, o, r);
        }),
        (t.prototype.forEachPositionTypeInput = function (e, r, o) {
          for (var i = this.getNumberOfInputs(r), s = this.getInputs(e), a = 0; a < s.length; a++) {
            var l = s[a];
            l != null && o(l, a, e, i);
          }
        }),
        (t.prototype.isConditionDisabled = function (e, r) {
          return this.isReadOnly() ? !0 : e === 0 ? !1 : e > r + 1;
        }),
        (t.prototype.isConditionBodyVisible = function (e) {
          var r = this.getConditionType(e),
            o = this.getNumberOfInputs(r);
          return o > 0;
        }),
        (t.prototype.isConditionUiComplete = function (e) {
          if (e >= this.getNumConditions()) return !1;
          var r = this.getConditionType(e);
          return !(
            r === t.EMPTY ||
            this.getValues(e).some(function (o) {
              return o == null;
            })
          );
        }),
        (t.prototype.getNumConditions = function () {
          return this.eTypes.length;
        }),
        (t.prototype.getUiCompleteConditions = function () {
          for (var e = [], r = 0; r < this.getNumConditions(); r++)
            this.isConditionUiComplete(r) && e.push(this.createCondition(r));
          return e;
        }),
        (t.prototype.createMissingConditionsAndOperators = function () {
          if (!this.isReadOnly())
            for (var e = this.getNumConditions(); e < this.numAlwaysVisibleConditions; e++)
              this.createJoinOperatorPanel(), this.createOption();
        }),
        (t.prototype.resetUiToDefaults = function (e) {
          var r = this;
          return (
            this.removeConditionsAndOperators(
              this.isReadOnly() ? 1 : this.numAlwaysVisibleConditions
            ),
            this.eTypes.forEach(function (o) {
              return r.resetType(o);
            }),
            this.eJoinOperatorsAnd.forEach(function (o, i) {
              return r.resetJoinOperatorAnd(o, i, r.joinOperatorId + i);
            }),
            this.eJoinOperatorsOr.forEach(function (o, i) {
              return r.resetJoinOperatorOr(o, i, r.joinOperatorId + i);
            }),
            this.joinOperatorId++,
            this.forEachInput(function (o) {
              return r.resetInput(o);
            }),
            this.resetPlaceholder(),
            this.createMissingConditionsAndOperators(),
            (this.lastUiCompletePosition = null),
            e || this.onUiChanged(),
            je.resolve()
          );
        }),
        (t.prototype.resetType = function (e) {
          var r = this.localeService.getLocaleTextFunc(),
            o = r('ariaFilteringOperator', 'Filtering operator');
          e.setValue(this.optionsFactory.getDefaultOption(), !0)
            .setAriaLabel(o)
            .setDisabled(this.isReadOnly() || this.filterListOptions.length <= 1);
        }),
        (t.prototype.resetJoinOperatorAnd = function (e, r, o) {
          this.resetJoinOperator(
            e,
            r,
            this.isDefaultOperator('AND'),
            this.translate('andCondition'),
            o
          );
        }),
        (t.prototype.resetJoinOperatorOr = function (e, r, o) {
          this.resetJoinOperator(
            e,
            r,
            this.isDefaultOperator('OR'),
            this.translate('orCondition'),
            o
          );
        }),
        (t.prototype.resetJoinOperator = function (e, r, o, i, s) {
          this.updateJoinOperatorDisabled(
            e
              .setValue(o, !0)
              .setName('ag-simple-filter-and-or-'.concat(this.getCompId(), '-').concat(s))
              .setLabel(i),
            r
          );
        }),
        (t.prototype.updateJoinOperatorsDisabled = function () {
          var e = this;
          this.eJoinOperatorsAnd.forEach(function (r, o) {
            return e.updateJoinOperatorDisabled(r, o);
          }),
            this.eJoinOperatorsOr.forEach(function (r, o) {
              return e.updateJoinOperatorDisabled(r, o);
            });
        }),
        (t.prototype.updateJoinOperatorDisabled = function (e, r) {
          e.setDisabled(this.isReadOnly() || r > 0);
        }),
        (t.prototype.resetInput = function (e) {
          this.setElementValue(e, null), this.setElementDisabled(e, this.isReadOnly());
        }),
        (t.prototype.setConditionIntoUi = function (e, r) {
          var o = this,
            i = this.mapValuesFromModel(e);
          this.forEachInput(function (s, a, l, u) {
            l === r && o.setElementValue(s, i[a] != null ? i[a] : null);
          });
        }),
        (t.prototype.setValueFromFloatingFilter = function (e) {
          var r = this;
          this.forEachInput(function (o, i, s, a) {
            r.setElementValue(o, i === 0 && s === 0 ? e : null, !0);
          });
        }),
        (t.prototype.isDefaultOperator = function (e) {
          return e === this.defaultJoinOperator;
        }),
        (t.prototype.addChangedListeners = function (e, r) {
          var o = this;
          this.isReadOnly() ||
            (e.onValueChange(this.listener),
            this.forEachPositionInput(r, function (i) {
              o.attachElementOnChange(i, o.listener);
            }));
        }),
        (t.prototype.individualConditionPasses = function (e, r) {
          var o = this.getCellValue(e.node),
            i = this.mapValuesFromModel(r),
            s = this.optionsFactory.getCustomOption(r.type),
            a = this.evaluateCustomFilter(s, i, o);
          return (
            a ??
            (o == null ? this.evaluateNullValue(r.type) : this.evaluateNonNullValue(i, o, r, e))
          );
        }),
        (t.prototype.evaluateCustomFilter = function (e, r, o) {
          if (e != null) {
            var i = e.predicate;
            if (
              i != null &&
              !r.some(function (s) {
                return s == null;
              })
            )
              return i(r, o);
          }
        }),
        (t.prototype.isBlank = function (e) {
          return e == null || (typeof e == 'string' && e.trim().length === 0);
        }),
        (t.prototype.hasInvalidInputs = function () {
          return !1;
        }),
        (t.EMPTY = 'empty'),
        (t.BLANK = 'blank'),
        (t.NOT_BLANK = 'notBlank'),
        (t.EQUALS = 'equals'),
        (t.NOT_EQUAL = 'notEqual'),
        (t.LESS_THAN = 'lessThan'),
        (t.LESS_THAN_OR_EQUAL = 'lessThanOrEqual'),
        (t.GREATER_THAN = 'greaterThan'),
        (t.GREATER_THAN_OR_EQUAL = 'greaterThanOrEqual'),
        (t.IN_RANGE = 'inRange'),
        (t.CONTAINS = 'contains'),
        (t.NOT_CONTAINS = 'notContains'),
        (t.STARTS_WITH = 'startsWith'),
        (t.ENDS_WITH = 'endsWith'),
        t
      );
    })(Zo),
    wd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ce = (function (n) {
      wd(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.setParams = function (e) {
          n.prototype.setParams.call(this, e), (this.scalarFilterParams = e);
        }),
        (t.prototype.evaluateNullValue = function (e) {
          switch (e) {
            case t.EQUALS:
            case t.NOT_EQUAL:
              if (this.scalarFilterParams.includeBlanksInEquals) return !0;
              break;
            case t.GREATER_THAN:
            case t.GREATER_THAN_OR_EQUAL:
              if (this.scalarFilterParams.includeBlanksInGreaterThan) return !0;
              break;
            case t.LESS_THAN:
            case t.LESS_THAN_OR_EQUAL:
              if (this.scalarFilterParams.includeBlanksInLessThan) return !0;
              break;
            case t.IN_RANGE:
              if (this.scalarFilterParams.includeBlanksInRange) return !0;
              break;
            case t.BLANK:
              return !0;
            case t.NOT_BLANK:
              return !1;
          }
          return !1;
        }),
        (t.prototype.evaluateNonNullValue = function (e, r, o) {
          var i = this.comparator(),
            s = e[0] != null ? i(e[0], r) : 0;
          switch (o.type) {
            case t.EQUALS:
              return s === 0;
            case t.NOT_EQUAL:
              return s !== 0;
            case t.GREATER_THAN:
              return s > 0;
            case t.GREATER_THAN_OR_EQUAL:
              return s >= 0;
            case t.LESS_THAN:
              return s < 0;
            case t.LESS_THAN_OR_EQUAL:
              return s <= 0;
            case t.IN_RANGE: {
              var a = i(e[1], r);
              return this.scalarFilterParams.inRangeInclusive ? s >= 0 && a <= 0 : s > 0 && a < 0;
            }
            case t.BLANK:
              return this.isBlank(r);
            case t.NOT_BLANK:
              return !this.isBlank(r);
            default:
              return (
                console.warn(
                  'AG Grid: Unexpected type of filter "' +
                    o.type +
                    '", it looks like the filter was configured with incorrect Filter Options'
                ),
                !0
              );
          }
        }),
        t
      );
    })(re),
    Rl = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    os = function () {
      return (
        (os =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        os.apply(this, arguments)
      );
    },
    Ed = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Ol = 1e3,
    Tl = 1 / 0,
    Pl = (function (n) {
      Rl(t, n);
      function t(e, r, o) {
        var i = n.call(this, r, o) || this;
        return (i.dateFilterParams = e), i;
      }
      return (
        (t.prototype.conditionToString = function (e, r) {
          var o = e.type,
            i = (r || {}).numberOfInputs,
            s = o == re.IN_RANGE || i === 2,
            a = _e(e.dateFrom),
            l = _e(e.dateTo),
            u = this.dateFilterParams.inRangeFloatingFilterDateFormat;
          if (s) {
            var c = a !== null ? Tr(a, u) : 'null',
              p = l !== null ? Tr(l, u) : 'null';
            return ''.concat(c, '-').concat(p);
          }
          return a != null ? Tr(a, u) : ''.concat(o);
        }),
        (t.prototype.updateParams = function (e) {
          n.prototype.updateParams.call(this, e), (this.dateFilterParams = e.dateFilterParams);
        }),
        t
      );
    })(rs),
    Dl = (function (n) {
      Rl(t, n);
      function t() {
        var e = n.call(this, 'dateFilter') || this;
        return (
          (e.eConditionPanelsFrom = []),
          (e.eConditionPanelsTo = []),
          (e.dateConditionFromComps = []),
          (e.dateConditionToComps = []),
          (e.minValidYear = Ol),
          (e.maxValidYear = Tl),
          (e.minValidDate = null),
          (e.maxValidDate = null),
          e
        );
      }
      return (
        (t.prototype.afterGuiAttached = function (e) {
          n.prototype.afterGuiAttached.call(this, e),
            this.dateConditionFromComps[0].afterGuiAttached(e);
        }),
        (t.prototype.mapValuesFromModel = function (e) {
          var r = e || {},
            o = r.dateFrom,
            i = r.dateTo,
            s = r.type;
          return [(o && _e(o)) || null, (i && _e(i)) || null].slice(0, this.getNumberOfInputs(s));
        }),
        (t.prototype.comparator = function () {
          return this.dateFilterParams.comparator
            ? this.dateFilterParams.comparator
            : this.defaultComparator.bind(this);
        }),
        (t.prototype.defaultComparator = function (e, r) {
          var o = r;
          return r == null || o < e ? -1 : o > e ? 1 : 0;
        }),
        (t.prototype.setParams = function (e) {
          (this.dateFilterParams = e), n.prototype.setParams.call(this, e);
          var r = function (o, i) {
            if (e[o] != null)
              if (isNaN(e[o])) console.warn('AG Grid: DateFilter '.concat(o, ' is not a number'));
              else return e[o] == null ? i : Number(e[o]);
            return i;
          };
          (this.minValidYear = r('minValidYear', Ol)),
            (this.maxValidYear = r('maxValidYear', Tl)),
            this.minValidYear > this.maxValidYear &&
              console.warn('AG Grid: DateFilter minValidYear should be <= maxValidYear'),
            e.minValidDate
              ? (this.minValidDate =
                  e.minValidDate instanceof Date ? e.minValidDate : _e(e.minValidDate))
              : (this.minValidDate = null),
            e.maxValidDate
              ? (this.maxValidDate =
                  e.maxValidDate instanceof Date ? e.maxValidDate : _e(e.maxValidDate))
              : (this.maxValidDate = null),
            this.minValidDate &&
              this.maxValidDate &&
              this.minValidDate > this.maxValidDate &&
              console.warn('AG Grid: DateFilter minValidDate should be <= maxValidDate'),
            (this.filterModelFormatter = new Pl(
              this.dateFilterParams,
              this.localeService,
              this.optionsFactory
            ));
        }),
        (t.prototype.createDateCompWrapper = function (e) {
          var r = this,
            o = new hl(
              this.getContext(),
              this.userComponentFactory,
              {
                onDateChanged: function () {
                  return r.onUiChanged();
                },
                filterParams: this.dateFilterParams,
              },
              e
            );
          return (
            this.addDestroyFunc(function () {
              return o.destroy();
            }),
            o
          );
        }),
        (t.prototype.setElementValue = function (e, r) {
          e.setDate(r);
        }),
        (t.prototype.setElementDisplayed = function (e, r) {
          e.setDisplayed(r);
        }),
        (t.prototype.setElementDisabled = function (e, r) {
          e.setDisabled(r);
        }),
        (t.prototype.getDefaultFilterOptions = function () {
          return t.DEFAULT_FILTER_OPTIONS;
        }),
        (t.prototype.createValueElement = function () {
          var e = document.createElement('div');
          return (
            e.classList.add('ag-filter-body'),
            this.createFromToElement(
              e,
              this.eConditionPanelsFrom,
              this.dateConditionFromComps,
              'from'
            ),
            this.createFromToElement(e, this.eConditionPanelsTo, this.dateConditionToComps, 'to'),
            e
          );
        }),
        (t.prototype.createFromToElement = function (e, r, o, i) {
          var s = document.createElement('div');
          s.classList.add('ag-filter-'.concat(i)),
            s.classList.add('ag-filter-date-'.concat(i)),
            r.push(s),
            e.appendChild(s),
            o.push(this.createDateCompWrapper(s));
        }),
        (t.prototype.removeValueElements = function (e, r) {
          this.removeDateComps(this.dateConditionFromComps, e, r),
            this.removeDateComps(this.dateConditionToComps, e, r),
            this.removeItems(this.eConditionPanelsFrom, e, r),
            this.removeItems(this.eConditionPanelsTo, e, r);
        }),
        (t.prototype.removeDateComps = function (e, r, o) {
          var i = this.removeItems(e, r, o);
          i.forEach(function (s) {
            return s.destroy();
          });
        }),
        (t.prototype.isValidDateValue = function (e) {
          if (e === null) return !1;
          if (this.minValidDate) {
            if (e < this.minValidDate) return !1;
          } else if (e.getUTCFullYear() < this.minValidYear) return !1;
          if (this.maxValidDate) {
            if (e > this.maxValidDate) return !1;
          } else if (e.getUTCFullYear() > this.maxValidYear) return !1;
          return !0;
        }),
        (t.prototype.isConditionUiComplete = function (e) {
          var r = this;
          if (!n.prototype.isConditionUiComplete.call(this, e)) return !1;
          var o = !0;
          return (
            this.forEachInput(function (i, s, a, l) {
              a !== e || !o || s >= l || (o = o && r.isValidDateValue(i.getDate()));
            }),
            o
          );
        }),
        (t.prototype.areSimpleModelsEqual = function (e, r) {
          return e.dateFrom === r.dateFrom && e.dateTo === r.dateTo && e.type === r.type;
        }),
        (t.prototype.getFilterType = function () {
          return 'date';
        }),
        (t.prototype.createCondition = function (e) {
          var r = this.getConditionType(e),
            o = {},
            i = this.getValues(e);
          return (
            i.length > 0 && (o.dateFrom = Xe(i[0])),
            i.length > 1 && (o.dateTo = Xe(i[1])),
            os({ dateFrom: null, dateTo: null, filterType: this.getFilterType(), type: r }, o)
          );
        }),
        (t.prototype.resetPlaceholder = function () {
          var e = this.localeService.getLocaleTextFunc(),
            r = this.translate('dateFormatOoo'),
            o = e('ariaFilterValue', 'Filter Value');
          this.forEachInput(function (i) {
            i.setInputPlaceholder(r), i.setInputAriaLabel(o);
          });
        }),
        (t.prototype.getInputs = function (e) {
          return e >= this.dateConditionFromComps.length
            ? [null, null]
            : [this.dateConditionFromComps[e], this.dateConditionToComps[e]];
        }),
        (t.prototype.getValues = function (e) {
          var r = [];
          return (
            this.forEachPositionInput(e, function (o, i, s, a) {
              i < a && r.push(o.getDate());
            }),
            r
          );
        }),
        (t.prototype.translate = function (e) {
          return e === ce.LESS_THAN
            ? n.prototype.translate.call(this, 'before')
            : e === ce.GREATER_THAN
            ? n.prototype.translate.call(this, 'after')
            : n.prototype.translate.call(this, e);
        }),
        (t.prototype.getModelAsString = function (e) {
          var r;
          return (r = this.filterModelFormatter.getModelAsString(e)) !== null && r !== void 0
            ? r
            : '';
        }),
        (t.DEFAULT_FILTER_OPTIONS = [
          ce.EQUALS,
          ce.NOT_EQUAL,
          ce.LESS_THAN,
          ce.GREATER_THAN,
          ce.IN_RANGE,
          ce.BLANK,
          ce.NOT_BLANK,
        ]),
        Ed([v('userComponentFactory')], t.prototype, 'userComponentFactory', void 0),
        t
      );
    })(ce),
    _d = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Al = (function (n) {
      _d(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.getDefaultDebounceMs = function () {
          return 0;
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        (t.prototype.isEventFromFloatingFilter = function (e) {
          return e && e.afterFloatingFilter;
        }),
        (t.prototype.isEventFromDataChange = function (e) {
          return e == null ? void 0 : e.afterDataChange;
        }),
        (t.prototype.getLastType = function () {
          return this.lastType;
        }),
        (t.prototype.isReadOnly = function () {
          return this.readOnly;
        }),
        (t.prototype.setLastTypeFromModel = function (e) {
          if (!e) {
            this.lastType = this.optionsFactory.getDefaultOption();
            return;
          }
          var r = e.operator,
            o;
          if (r) {
            var i = e;
            o = i.conditions[0];
          } else o = e;
          this.lastType = o.type;
        }),
        (t.prototype.canWeEditAfterModelFromParentFilter = function (e) {
          if (!e) return this.isTypeEditable(this.lastType);
          var r = e.operator;
          if (r) return !1;
          var o = e;
          return this.isTypeEditable(o.type);
        }),
        (t.prototype.init = function (e) {
          this.setSimpleParams(e, !1);
        }),
        (t.prototype.setSimpleParams = function (e, r) {
          r === void 0 && (r = !0),
            (this.optionsFactory = new fl()),
            this.optionsFactory.init(e.filterParams, this.getDefaultFilterOptions()),
            r || (this.lastType = this.optionsFactory.getDefaultOption()),
            (this.readOnly = !!e.filterParams.readOnly);
          var o = this.isTypeEditable(this.optionsFactory.getDefaultOption());
          this.setEditable(o);
        }),
        (t.prototype.onParamsUpdated = function (e) {
          this.refresh(e);
        }),
        (t.prototype.refresh = function (e) {
          this.setSimpleParams(e);
        }),
        (t.prototype.doesFilterHaveSingleInput = function (e) {
          var r = this.optionsFactory.getCustomOption(e),
            o = (r || {}).numberOfInputs;
          return o == null || o == 1;
        }),
        (t.prototype.isTypeEditable = function (e) {
          var r = [re.IN_RANGE, re.EMPTY, re.BLANK, re.NOT_BLANK];
          return !!e && !this.isReadOnly() && this.doesFilterHaveSingleInput(e) && r.indexOf(e) < 0;
        }),
        t
      );
    })(k),
    Rd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    is = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Od = (function (n) {
      Rd(t, n);
      function t() {
        return (
          n.call(
            this,
            `
            <div class="ag-floating-filter-input" role="presentation">
                <ag-input-text-field ref="eReadOnlyText"></ag-input-text-field>
                <div ref="eDateWrapper" style="display: flex;"></div>
            </div>`
          ) || this
        );
      }
      return (
        (t.prototype.getDefaultFilterOptions = function () {
          return Dl.DEFAULT_FILTER_OPTIONS;
        }),
        (t.prototype.init = function (e) {
          n.prototype.init.call(this, e),
            (this.params = e),
            (this.filterParams = e.filterParams),
            this.createDateComponent(),
            (this.filterModelFormatter = new Pl(
              this.filterParams,
              this.localeService,
              this.optionsFactory
            ));
          var r = this.localeService.getLocaleTextFunc();
          this.eReadOnlyText
            .setDisabled(!0)
            .setInputAriaLabel(r('ariaDateFilterInput', 'Date Filter Input'));
        }),
        (t.prototype.onParamsUpdated = function (e) {
          this.refresh(e);
        }),
        (t.prototype.refresh = function (e) {
          n.prototype.refresh.call(this, e),
            (this.params = e),
            (this.filterParams = e.filterParams),
            this.updateDateComponent(),
            this.filterModelFormatter.updateParams({
              optionsFactory: this.optionsFactory,
              dateFilterParams: this.filterParams,
            }),
            this.updateCompOnModelChange(e.currentParentModel());
        }),
        (t.prototype.updateCompOnModelChange = function (e) {
          var r = !this.isReadOnly() && this.canWeEditAfterModelFromParentFilter(e);
          if ((this.setEditable(r), r)) {
            if (e) {
              var o = e;
              this.dateComp.setDate(_e(o.dateFrom));
            } else this.dateComp.setDate(null);
            this.eReadOnlyText.setValue('');
          } else
            this.eReadOnlyText.setValue(this.filterModelFormatter.getModelAsString(e)),
              this.dateComp.setDate(null);
        }),
        (t.prototype.setEditable = function (e) {
          $(this.eDateWrapper, e), $(this.eReadOnlyText.getGui(), !e);
        }),
        (t.prototype.onParentModelChanged = function (e, r) {
          this.isEventFromFloatingFilter(r) ||
            this.isEventFromDataChange(r) ||
            (n.prototype.setLastTypeFromModel.call(this, e), this.updateCompOnModelChange(e));
        }),
        (t.prototype.onDateChanged = function () {
          var e = this,
            r = this.dateComp.getDate(),
            o = Xe(r);
          this.params.parentFilterInstance(function (i) {
            if (i) {
              var s = _e(o);
              i.onFloatingFilterChanged(e.getLastType() || null, s);
            }
          });
        }),
        (t.prototype.getDateComponentParams = function () {
          var e = Zo.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());
          return {
            onDateChanged: He(this.onDateChanged.bind(this), e),
            filterParams: this.params.column.getColDef().filterParams,
          };
        }),
        (t.prototype.createDateComponent = function () {
          var e = this;
          (this.dateComp = new hl(
            this.getContext(),
            this.userComponentFactory,
            this.getDateComponentParams(),
            this.eDateWrapper
          )),
            this.addDestroyFunc(function () {
              return e.dateComp.destroy();
            });
        }),
        (t.prototype.updateDateComponent = function () {
          var e = this.gridOptionsService.addGridCommonParams(this.getDateComponentParams());
          this.dateComp.updateParams(e);
        }),
        (t.prototype.getFilterModelFormatter = function () {
          return this.filterModelFormatter;
        }),
        is([v('userComponentFactory')], t.prototype, 'userComponentFactory', void 0),
        is([L('eReadOnlyText')], t.prototype, 'eReadOnlyText', void 0),
        is([L('eDateWrapper')], t.prototype, 'eDateWrapper', void 0),
        t
      );
    })(Al),
    Td = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Pd = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Dd = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Ad = (function (n) {
      Td(t, n);
      function t() {
        return (
          n.call(
            this,
            `
            <div class="ag-filter-filter">
                <ag-input-text-field class="ag-date-filter" ref="eDateInput"></ag-input-text-field>
            </div>`
          ) || this
        );
      }
      return (
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        (t.prototype.init = function (e) {
          var r = this;
          (this.params = e), this.setParams(e);
          var o = this.gridOptionsService.getDocument(),
            i = this.eDateInput.getInputElement();
          this.addManagedListener(i, 'mousedown', function () {
            r.eDateInput.isDisabled() || r.usingSafariDatePicker || i.focus();
          }),
            this.addManagedListener(i, 'input', function (s) {
              s.target === o.activeElement &&
                (r.eDateInput.isDisabled() || r.params.onDateChanged());
            });
        }),
        (t.prototype.setParams = function (e) {
          var r = this.eDateInput.getInputElement(),
            o = this.shouldUseBrowserDatePicker(e);
          (this.usingSafariDatePicker = o && ht()), (r.type = o ? 'date' : 'text');
          var i = e.filterParams || {},
            s = i.minValidYear,
            a = i.maxValidYear,
            l = i.minValidDate,
            u = i.maxValidDate;
          if (
            (l &&
              s &&
              V(
                'DateFilter should not have both minValidDate and minValidYear parameters set at the same time! minValidYear will be ignored.'
              ),
            u &&
              a &&
              V(
                'DateFilter should not have both maxValidDate and maxValidYear parameters set at the same time! maxValidYear will be ignored.'
              ),
            l && u)
          ) {
            var c = Dd(
                [l, u].map(function (h) {
                  return h instanceof Date ? h : _e(h);
                }),
                2
              ),
              p = c[0],
              d = c[1];
            p &&
              d &&
              p.getTime() > d.getTime() &&
              V(
                'DateFilter parameter minValidDate should always be lower than or equal to parameter maxValidDate.'
              );
          }
          l
            ? l instanceof Date
              ? (r.min = Tr(l))
              : (r.min = l)
            : s && (r.min = ''.concat(s, '-01-01')),
            u
              ? u instanceof Date
                ? (r.max = Tr(u))
                : (r.max = u)
              : a && (r.max = ''.concat(a, '-12-31'));
        }),
        (t.prototype.onParamsUpdated = function (e) {
          this.refresh(e);
        }),
        (t.prototype.refresh = function (e) {
          (this.params = e), this.setParams(e);
        }),
        (t.prototype.getDate = function () {
          return _e(this.eDateInput.getValue());
        }),
        (t.prototype.setDate = function (e) {
          this.eDateInput.setValue(Xe(e, !1));
        }),
        (t.prototype.setInputPlaceholder = function (e) {
          this.eDateInput.setInputPlaceholder(e);
        }),
        (t.prototype.setDisabled = function (e) {
          this.eDateInput.setDisabled(e);
        }),
        (t.prototype.afterGuiAttached = function (e) {
          (!e || !e.suppressFocus) && this.eDateInput.getInputElement().focus();
        }),
        (t.prototype.shouldUseBrowserDatePicker = function (e) {
          return e.filterParams && e.filterParams.browserDatePicker != null
            ? e.filterParams.browserDatePicker
            : $o() || An() || (ht() && Dn() >= 14.1);
        }),
        Pd([L('eDateInput')], t.prototype, 'eDateInput', void 0),
        t
      );
    })(k),
    bd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    lr = (function (n) {
      bd(t, n);
      function t(e, r, o) {
        return (
          r === void 0 && (r = 'ag-text-field'),
          o === void 0 && (o = 'text'),
          n.call(this, e, r, o) || this
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          n.prototype.postConstruct.call(this),
            this.config.allowedCharPattern && this.preventDisallowedCharacters();
        }),
        (t.prototype.setValue = function (e, r) {
          return (
            this.eInput.value !== e && (this.eInput.value = P(e) ? e : ''),
            n.prototype.setValue.call(this, e, r)
          );
        }),
        (t.prototype.setStartValue = function (e) {
          this.setValue(e, !0);
        }),
        (t.prototype.preventDisallowedCharacters = function () {
          var e = new RegExp('['.concat(this.config.allowedCharPattern, ']')),
            r = function (o) {
              Xo(o) && o.key && !e.test(o.key) && o.preventDefault();
            };
          this.addManagedListener(this.eInput, 'keydown', r),
            this.addManagedListener(this.eInput, 'paste', function (o) {
              var i,
                s = (i = o.clipboardData) === null || i === void 0 ? void 0 : i.getData('text');
              s &&
                s.split('').some(function (a) {
                  return !e.test(a);
                }) &&
                o.preventDefault();
            });
        }),
        t
      );
    })(kt),
    Fd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ns = (function (n) {
      Fd(t, n);
      function t(e) {
        return n.call(this, e, 'ag-number-field', 'number') || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          n.prototype.postConstruct.call(this),
            this.addManagedListener(this.eInput, 'blur', function () {
              var r = parseFloat(e.eInput.value),
                o = isNaN(r) ? '' : e.normalizeValue(r.toString());
              e.value !== o && e.setValue(o);
            }),
            this.addManagedListener(this.eInput, 'wheel', this.onWheel.bind(this)),
            (this.eInput.step = 'any');
        }),
        (t.prototype.onWheel = function (e) {
          document.activeElement === this.eInput && e.preventDefault();
        }),
        (t.prototype.normalizeValue = function (e) {
          if (e === '') return '';
          this.precision != null && (e = this.adjustPrecision(e));
          var r = parseFloat(e);
          return (
            this.min != null && r < this.min
              ? (e = this.min.toString())
              : this.max != null && r > this.max && (e = this.max.toString()),
            e
          );
        }),
        (t.prototype.adjustPrecision = function (e, r) {
          if (this.precision == null) return e;
          if (r) {
            var o = parseFloat(e).toFixed(this.precision);
            return parseFloat(o).toString();
          }
          var i = String(e).split('.');
          if (i.length > 1) {
            if (i[1].length <= this.precision) return e;
            if (this.precision > 0)
              return ''.concat(i[0], '.').concat(i[1].slice(0, this.precision));
          }
          return i[0];
        }),
        (t.prototype.setMin = function (e) {
          return this.min === e ? this : ((this.min = e), vt(this.eInput, 'min', e), this);
        }),
        (t.prototype.setMax = function (e) {
          return this.max === e ? this : ((this.max = e), vt(this.eInput, 'max', e), this);
        }),
        (t.prototype.setPrecision = function (e) {
          return (this.precision = e), this;
        }),
        (t.prototype.setStep = function (e) {
          return this.step === e ? this : ((this.step = e), vt(this.eInput, 'step', e), this);
        }),
        (t.prototype.setValue = function (e, r) {
          var o = this;
          return this.setValueOrInputValue(
            function (i) {
              return n.prototype.setValue.call(o, i, r);
            },
            function () {
              return o;
            },
            e
          );
        }),
        (t.prototype.setStartValue = function (e) {
          var r = this;
          return this.setValueOrInputValue(
            function (o) {
              return n.prototype.setValue.call(r, o, !0);
            },
            function (o) {
              r.eInput.value = o;
            },
            e
          );
        }),
        (t.prototype.setValueOrInputValue = function (e, r, o) {
          if (P(o)) {
            var i = this.isScientificNotation(o);
            if (i && this.eInput.validity.valid) return e(o);
            if (!i) {
              o = this.adjustPrecision(o);
              var s = this.normalizeValue(o);
              i = o != s;
            }
            if (i) return r(o);
          }
          return e(o);
        }),
        (t.prototype.getValue = function () {
          if (this.eInput.validity.valid) {
            var e = this.eInput.value;
            return this.isScientificNotation(e)
              ? this.adjustPrecision(e, !0)
              : n.prototype.getValue.call(this);
          }
        }),
        (t.prototype.isScientificNotation = function (e) {
          return typeof e == 'string' && e.includes('e');
        }),
        t
      );
    })(lr),
    bl = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Fl = (function (n) {
      bl(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.conditionToString = function (e, r) {
          var o = (r || {}).numberOfInputs,
            i = e.type == re.IN_RANGE || o === 2;
          return i
            ? ''.concat(this.formatValue(e.filter), '-').concat(this.formatValue(e.filterTo))
            : e.filter != null
            ? this.formatValue(e.filter)
            : ''.concat(e.type);
        }),
        t
      );
    })(rs);
  function ss(n) {
    var t = (n ?? {}).allowedCharPattern;
    return t ?? null;
  }
  var Ll = (function (n) {
      bl(t, n);
      function t() {
        var e = n.call(this, 'numberFilter') || this;
        return (e.eValuesFrom = []), (e.eValuesTo = []), e;
      }
      return (
        (t.prototype.refresh = function (e) {
          return this.numberFilterParams.allowedCharPattern !== e.allowedCharPattern
            ? !1
            : n.prototype.refresh.call(this, e);
        }),
        (t.prototype.mapValuesFromModel = function (e) {
          var r = e || {},
            o = r.filter,
            i = r.filterTo,
            s = r.type;
          return [this.processValue(o), this.processValue(i)].slice(0, this.getNumberOfInputs(s));
        }),
        (t.prototype.getDefaultDebounceMs = function () {
          return 500;
        }),
        (t.prototype.comparator = function () {
          return function (e, r) {
            return e === r ? 0 : e < r ? 1 : -1;
          };
        }),
        (t.prototype.setParams = function (e) {
          (this.numberFilterParams = e),
            n.prototype.setParams.call(this, e),
            (this.filterModelFormatter = new Fl(
              this.localeService,
              this.optionsFactory,
              this.numberFilterParams.numberFormatter
            ));
        }),
        (t.prototype.getDefaultFilterOptions = function () {
          return t.DEFAULT_FILTER_OPTIONS;
        }),
        (t.prototype.setElementValue = function (e, r, o) {
          var i =
            !o && this.numberFilterParams.numberFormatter
              ? this.numberFilterParams.numberFormatter(r ?? null)
              : r;
          n.prototype.setElementValue.call(this, e, i);
        }),
        (t.prototype.createValueElement = function () {
          var e = ss(this.numberFilterParams),
            r = document.createElement('div');
          return (
            r.classList.add('ag-filter-body'),
            le(r, 'presentation'),
            this.createFromToElement(r, this.eValuesFrom, 'from', e),
            this.createFromToElement(r, this.eValuesTo, 'to', e),
            r
          );
        }),
        (t.prototype.createFromToElement = function (e, r, o, i) {
          var s = this.createManagedBean(i ? new lr({ allowedCharPattern: i }) : new ns());
          s.addCssClass('ag-filter-'.concat(o)),
            s.addCssClass('ag-filter-filter'),
            r.push(s),
            e.appendChild(s.getGui());
        }),
        (t.prototype.removeValueElements = function (e, r) {
          this.removeComponents(this.eValuesFrom, e, r),
            this.removeComponents(this.eValuesTo, e, r);
        }),
        (t.prototype.getValues = function (e) {
          var r = this,
            o = [];
          return (
            this.forEachPositionInput(e, function (i, s, a, l) {
              s < l && o.push(r.processValue(r.stringToFloat(i.getValue())));
            }),
            o
          );
        }),
        (t.prototype.areSimpleModelsEqual = function (e, r) {
          return e.filter === r.filter && e.filterTo === r.filterTo && e.type === r.type;
        }),
        (t.prototype.getFilterType = function () {
          return 'number';
        }),
        (t.prototype.processValue = function (e) {
          return e == null || isNaN(e) ? null : e;
        }),
        (t.prototype.stringToFloat = function (e) {
          if (typeof e == 'number') return e;
          var r = ct(e);
          return (
            r != null && r.trim() === '' && (r = null),
            this.numberFilterParams.numberParser
              ? this.numberFilterParams.numberParser(r)
              : r == null || r.trim() === '-'
              ? null
              : parseFloat(r)
          );
        }),
        (t.prototype.createCondition = function (e) {
          var r = this.getConditionType(e),
            o = { filterType: this.getFilterType(), type: r },
            i = this.getValues(e);
          return i.length > 0 && (o.filter = i[0]), i.length > 1 && (o.filterTo = i[1]), o;
        }),
        (t.prototype.getInputs = function (e) {
          return e >= this.eValuesFrom.length
            ? [null, null]
            : [this.eValuesFrom[e], this.eValuesTo[e]];
        }),
        (t.prototype.getModelAsString = function (e) {
          var r;
          return (r = this.filterModelFormatter.getModelAsString(e)) !== null && r !== void 0
            ? r
            : '';
        }),
        (t.prototype.hasInvalidInputs = function () {
          var e = !1;
          return (
            this.forEachInput(function (r) {
              if (!r.getInputElement().validity.valid) {
                e = !0;
                return;
              }
            }),
            e
          );
        }),
        (t.DEFAULT_FILTER_OPTIONS = [
          ce.EQUALS,
          ce.NOT_EQUAL,
          ce.GREATER_THAN,
          ce.GREATER_THAN_OR_EQUAL,
          ce.LESS_THAN,
          ce.LESS_THAN_OR_EQUAL,
          ce.IN_RANGE,
          ce.BLANK,
          ce.NOT_BLANK,
        ]),
        t
      );
    })(ce),
    Ml = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ri = function () {
      return (
        (ri =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        ri.apply(this, arguments)
      );
    },
    Il = (function (n) {
      Ml(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.conditionToString = function (e, r) {
          var o = (r || {}).numberOfInputs,
            i = e.type == re.IN_RANGE || o === 2;
          return i
            ? ''.concat(e.filter, '-').concat(e.filterTo)
            : e.filter != null
            ? ''.concat(e.filter)
            : ''.concat(e.type);
        }),
        t
      );
    })(rs),
    as = (function (n) {
      Ml(t, n);
      function t() {
        var e = n.call(this, 'textFilter') || this;
        return (e.eValuesFrom = []), (e.eValuesTo = []), e;
      }
      return (
        (t.trimInput = function (e) {
          var r = e && e.trim();
          return r === '' ? e : r;
        }),
        (t.prototype.getDefaultDebounceMs = function () {
          return 500;
        }),
        (t.prototype.setParams = function (e) {
          (this.textFilterParams = e),
            n.prototype.setParams.call(this, e),
            (this.matcher = this.getTextMatcher()),
            (this.formatter =
              this.textFilterParams.textFormatter ||
              (this.textFilterParams.caseSensitive
                ? t.DEFAULT_FORMATTER
                : t.DEFAULT_LOWERCASE_FORMATTER)),
            (this.filterModelFormatter = new Il(this.localeService, this.optionsFactory));
        }),
        (t.prototype.getTextMatcher = function () {
          var e = this.textFilterParams.textCustomComparator;
          return e
            ? (j.warnOnce('textCustomComparator is deprecated, use textMatcher instead.'),
              function (r) {
                var o = r.filterOption,
                  i = r.value,
                  s = r.filterText;
                return e(o, i, s);
              })
            : this.textFilterParams.textMatcher || t.DEFAULT_MATCHER;
        }),
        (t.prototype.createCondition = function (e) {
          var r = this.getConditionType(e),
            o = { filterType: this.getFilterType(), type: r },
            i = this.getValuesWithSideEffects(e, !0);
          return i.length > 0 && (o.filter = i[0]), i.length > 1 && (o.filterTo = i[1]), o;
        }),
        (t.prototype.getFilterType = function () {
          return 'text';
        }),
        (t.prototype.areSimpleModelsEqual = function (e, r) {
          return e.filter === r.filter && e.filterTo === r.filterTo && e.type === r.type;
        }),
        (t.prototype.getInputs = function (e) {
          return e >= this.eValuesFrom.length
            ? [null, null]
            : [this.eValuesFrom[e], this.eValuesTo[e]];
        }),
        (t.prototype.getValues = function (e) {
          return this.getValuesWithSideEffects(e, !1);
        }),
        (t.prototype.getValuesWithSideEffects = function (e, r) {
          var o = this,
            i = [];
          return (
            this.forEachPositionInput(e, function (s, a, l, u) {
              var c;
              if (a < u) {
                var p = ct(s.getValue());
                r &&
                  o.textFilterParams.trimInput &&
                  ((p = (c = t.trimInput(p)) !== null && c !== void 0 ? c : null),
                  s.setValue(p, !0)),
                  i.push(p);
              }
            }),
            i
          );
        }),
        (t.prototype.getDefaultFilterOptions = function () {
          return t.DEFAULT_FILTER_OPTIONS;
        }),
        (t.prototype.createValueElement = function () {
          var e = document.createElement('div');
          return (
            e.classList.add('ag-filter-body'),
            le(e, 'presentation'),
            this.createFromToElement(e, this.eValuesFrom, 'from'),
            this.createFromToElement(e, this.eValuesTo, 'to'),
            e
          );
        }),
        (t.prototype.createFromToElement = function (e, r, o) {
          var i = this.createManagedBean(new lr());
          i.addCssClass('ag-filter-'.concat(o)),
            i.addCssClass('ag-filter-filter'),
            r.push(i),
            e.appendChild(i.getGui());
        }),
        (t.prototype.removeValueElements = function (e, r) {
          this.removeComponents(this.eValuesFrom, e, r),
            this.removeComponents(this.eValuesTo, e, r);
        }),
        (t.prototype.mapValuesFromModel = function (e) {
          var r = e || {},
            o = r.filter,
            i = r.filterTo,
            s = r.type;
          return [o || null, i || null].slice(0, this.getNumberOfInputs(s));
        }),
        (t.prototype.evaluateNullValue = function (e) {
          var r = [re.NOT_EQUAL, re.NOT_CONTAINS, re.BLANK];
          return e ? r.indexOf(e) >= 0 : !1;
        }),
        (t.prototype.evaluateNonNullValue = function (e, r, o, i) {
          var s = this,
            a =
              e.map(function (C) {
                return s.formatter(C);
              }) || [],
            l = this.formatter(r),
            u = this.textFilterParams,
            c = u.api,
            p = u.colDef,
            d = u.column,
            h = u.columnApi,
            f = u.context,
            y = u.textFormatter;
          if (o.type === re.BLANK) return this.isBlank(r);
          if (o.type === re.NOT_BLANK) return !this.isBlank(r);
          var m = {
            api: c,
            colDef: p,
            column: d,
            columnApi: h,
            context: f,
            node: i.node,
            data: i.data,
            filterOption: o.type,
            value: l,
            textFormatter: y,
          };
          return a.some(function (C) {
            return s.matcher(ri(ri({}, m), { filterText: C }));
          });
        }),
        (t.prototype.getModelAsString = function (e) {
          var r;
          return (r = this.filterModelFormatter.getModelAsString(e)) !== null && r !== void 0
            ? r
            : '';
        }),
        (t.DEFAULT_FILTER_OPTIONS = [
          re.CONTAINS,
          re.NOT_CONTAINS,
          re.EQUALS,
          re.NOT_EQUAL,
          re.STARTS_WITH,
          re.ENDS_WITH,
          re.BLANK,
          re.NOT_BLANK,
        ]),
        (t.DEFAULT_FORMATTER = function (e) {
          return e;
        }),
        (t.DEFAULT_LOWERCASE_FORMATTER = function (e) {
          return e == null ? null : e.toString().toLowerCase();
        }),
        (t.DEFAULT_MATCHER = function (e) {
          var r = e.filterOption,
            o = e.value,
            i = e.filterText;
          if (i == null) return !1;
          switch (r) {
            case t.CONTAINS:
              return o.indexOf(i) >= 0;
            case t.NOT_CONTAINS:
              return o.indexOf(i) < 0;
            case t.EQUALS:
              return o === i;
            case t.NOT_EQUAL:
              return o != i;
            case t.STARTS_WITH:
              return o.indexOf(i) === 0;
            case t.ENDS_WITH:
              var s = o.lastIndexOf(i);
              return s >= 0 && s === o.length - i.length;
            default:
              return !1;
          }
        }),
        t
      );
    })(re),
    xl = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ls = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Nl = (function (n) {
      xl(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.params = e), (r.valueChangedListener = function () {}), r;
      }
      return (
        (t.prototype.setupGui = function (e) {
          var r = this,
            o;
          this.eFloatingFilterTextInput = this.createManagedBean(
            new lr((o = this.params) === null || o === void 0 ? void 0 : o.config)
          );
          var i = this.eFloatingFilterTextInput.getGui();
          e.appendChild(i),
            this.addManagedListener(i, 'input', function (s) {
              return r.valueChangedListener(s);
            }),
            this.addManagedListener(i, 'keydown', function (s) {
              return r.valueChangedListener(s);
            });
        }),
        (t.prototype.setEditable = function (e) {
          this.eFloatingFilterTextInput.setDisabled(!e);
        }),
        (t.prototype.setAutoComplete = function (e) {
          this.eFloatingFilterTextInput.setAutoComplete(e);
        }),
        (t.prototype.getValue = function () {
          return this.eFloatingFilterTextInput.getValue();
        }),
        (t.prototype.setValue = function (e, r) {
          this.eFloatingFilterTextInput.setValue(e, r);
        }),
        (t.prototype.setValueChangedListener = function (e) {
          this.valueChangedListener = e;
        }),
        (t.prototype.setParams = function (e) {
          this.setAriaLabel(e.ariaLabel),
            e.autoComplete !== void 0 && this.setAutoComplete(e.autoComplete);
        }),
        (t.prototype.setAriaLabel = function (e) {
          this.eFloatingFilterTextInput.setInputAriaLabel(e);
        }),
        t
      );
    })(D),
    Gl = (function (n) {
      xl(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.setTemplate(`
            <div class="ag-floating-filter-input" role="presentation" ref="eFloatingFilterInputContainer"></div>
        `);
        }),
        (t.prototype.getDefaultDebounceMs = function () {
          return 500;
        }),
        (t.prototype.onParentModelChanged = function (e, r) {
          this.isEventFromFloatingFilter(r) ||
            this.isEventFromDataChange(r) ||
            (this.setLastTypeFromModel(e),
            this.setEditable(this.canWeEditAfterModelFromParentFilter(e)),
            this.floatingFilterInputService.setValue(
              this.getFilterModelFormatter().getModelAsString(e)
            ));
        }),
        (t.prototype.init = function (e) {
          this.setupFloatingFilterInputService(e),
            n.prototype.init.call(this, e),
            this.setTextInputParams(e);
        }),
        (t.prototype.setupFloatingFilterInputService = function (e) {
          (this.floatingFilterInputService = this.createFloatingFilterInputService(e)),
            this.floatingFilterInputService.setupGui(this.eFloatingFilterInputContainer);
        }),
        (t.prototype.setTextInputParams = function (e) {
          var r;
          this.params = e;
          var o = (r = e.browserAutoComplete) !== null && r !== void 0 ? r : !1;
          if (
            (this.floatingFilterInputService.setParams({
              ariaLabel: this.getAriaLabel(e),
              autoComplete: o,
            }),
            (this.applyActive = Zo.isUseApplyButton(this.params.filterParams)),
            !this.isReadOnly())
          ) {
            var i = Zo.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs()),
              s = He(this.syncUpWithParentFilter.bind(this), i);
            this.floatingFilterInputService.setValueChangedListener(s);
          }
        }),
        (t.prototype.onParamsUpdated = function (e) {
          this.refresh(e);
        }),
        (t.prototype.refresh = function (e) {
          n.prototype.refresh.call(this, e), this.setTextInputParams(e);
        }),
        (t.prototype.recreateFloatingFilterInputService = function (e) {
          var r = this.floatingFilterInputService.getValue();
          de(this.eFloatingFilterInputContainer),
            this.destroyBean(this.floatingFilterInputService),
            this.setupFloatingFilterInputService(e),
            this.floatingFilterInputService.setValue(r, !0);
        }),
        (t.prototype.getAriaLabel = function (e) {
          var r = this.columnModel.getDisplayNameForColumn(e.column, 'header', !0),
            o = this.localeService.getLocaleTextFunc();
          return ''.concat(r, ' ').concat(o('ariaFilterInput', 'Filter Input'));
        }),
        (t.prototype.syncUpWithParentFilter = function (e) {
          var r = this,
            o = e.key === _.ENTER;
          if (!(this.applyActive && !o)) {
            var i = this.floatingFilterInputService.getValue();
            this.params.filterParams.trimInput &&
              ((i = as.trimInput(i)), this.floatingFilterInputService.setValue(i, !0)),
              this.params.parentFilterInstance(function (s) {
                s && s.onFloatingFilterChanged(r.getLastType() || null, i || null);
              });
          }
        }),
        (t.prototype.setEditable = function (e) {
          this.floatingFilterInputService.setEditable(e);
        }),
        ls([v('columnModel')], t.prototype, 'columnModel', void 0),
        ls(
          [L('eFloatingFilterInputContainer')],
          t.prototype,
          'eFloatingFilterInputContainer',
          void 0
        ),
        ls([F], t.prototype, 'postConstruct', null),
        t
      );
    })(Al),
    Vl = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ld = (function (n) {
      Vl(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.valueChangedListener = function () {}), (e.numberInputActive = !0), e;
      }
      return (
        (t.prototype.setupGui = function (e) {
          var r = this;
          (this.eFloatingFilterNumberInput = this.createManagedBean(new ns())),
            (this.eFloatingFilterTextInput = this.createManagedBean(new lr())),
            this.eFloatingFilterTextInput.setDisabled(!0);
          var o = this.eFloatingFilterNumberInput.getGui(),
            i = this.eFloatingFilterTextInput.getGui();
          e.appendChild(o),
            e.appendChild(i),
            this.setupListeners(o, function (s) {
              return r.valueChangedListener(s);
            }),
            this.setupListeners(i, function (s) {
              return r.valueChangedListener(s);
            });
        }),
        (t.prototype.setEditable = function (e) {
          (this.numberInputActive = e),
            this.eFloatingFilterNumberInput.setDisplayed(this.numberInputActive),
            this.eFloatingFilterTextInput.setDisplayed(!this.numberInputActive);
        }),
        (t.prototype.setAutoComplete = function (e) {
          this.eFloatingFilterNumberInput.setAutoComplete(e),
            this.eFloatingFilterTextInput.setAutoComplete(e);
        }),
        (t.prototype.getValue = function () {
          return this.getActiveInputElement().getValue();
        }),
        (t.prototype.setValue = function (e, r) {
          this.getActiveInputElement().setValue(e, r);
        }),
        (t.prototype.getActiveInputElement = function () {
          return this.numberInputActive
            ? this.eFloatingFilterNumberInput
            : this.eFloatingFilterTextInput;
        }),
        (t.prototype.setValueChangedListener = function (e) {
          this.valueChangedListener = e;
        }),
        (t.prototype.setupListeners = function (e, r) {
          this.addManagedListener(e, 'input', r), this.addManagedListener(e, 'keydown', r);
        }),
        (t.prototype.setParams = function (e) {
          this.setAriaLabel(e.ariaLabel),
            e.autoComplete !== void 0 && this.setAutoComplete(e.autoComplete);
        }),
        (t.prototype.setAriaLabel = function (e) {
          this.eFloatingFilterNumberInput.setInputAriaLabel(e),
            this.eFloatingFilterTextInput.setInputAriaLabel(e);
        }),
        t
      );
    })(D),
    Md = (function (n) {
      Vl(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.init = function (e) {
          var r;
          n.prototype.init.call(this, e),
            (this.filterModelFormatter = new Fl(
              this.localeService,
              this.optionsFactory,
              (r = e.filterParams) === null || r === void 0 ? void 0 : r.numberFormatter
            ));
        }),
        (t.prototype.onParamsUpdated = function (e) {
          this.refresh(e);
        }),
        (t.prototype.refresh = function (e) {
          var r = ss(e.filterParams);
          r !== this.allowedCharPattern && this.recreateFloatingFilterInputService(e),
            n.prototype.refresh.call(this, e),
            this.filterModelFormatter.updateParams({ optionsFactory: this.optionsFactory });
        }),
        (t.prototype.getDefaultFilterOptions = function () {
          return Ll.DEFAULT_FILTER_OPTIONS;
        }),
        (t.prototype.getFilterModelFormatter = function () {
          return this.filterModelFormatter;
        }),
        (t.prototype.createFloatingFilterInputService = function (e) {
          return (
            (this.allowedCharPattern = ss(e.filterParams)),
            this.allowedCharPattern
              ? this.createManagedBean(
                  new Nl({ config: { allowedCharPattern: this.allowedCharPattern } })
                )
              : this.createManagedBean(new Ld())
          );
        }),
        t
      );
    })(Gl),
    Id = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    xd = (function (n) {
      Id(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.init = function (e) {
          n.prototype.init.call(this, e),
            (this.filterModelFormatter = new Il(this.localeService, this.optionsFactory));
        }),
        (t.prototype.onParamsUpdated = function (e) {
          this.refresh(e);
        }),
        (t.prototype.refresh = function (e) {
          n.prototype.refresh.call(this, e),
            this.filterModelFormatter.updateParams({ optionsFactory: this.optionsFactory });
        }),
        (t.prototype.getDefaultFilterOptions = function () {
          return as.DEFAULT_FILTER_OPTIONS;
        }),
        (t.prototype.getFilterModelFormatter = function () {
          return this.filterModelFormatter;
        }),
        (t.prototype.createFloatingFilterInputService = function () {
          return this.createManagedBean(new Nl());
        }),
        t
      );
    })(Gl),
    me = (function () {
      function n(t, e) {
        e === void 0 && (e = !1);
        var r = this;
        (this.destroyFuncs = []),
          (this.touching = !1),
          (this.eventService = new xt()),
          (this.eElement = t),
          (this.preventMouseClick = e);
        var o = this.onTouchStart.bind(this),
          i = this.onTouchMove.bind(this),
          s = this.onTouchEnd.bind(this);
        this.eElement.addEventListener('touchstart', o, { passive: !0 }),
          this.eElement.addEventListener('touchmove', i, { passive: !0 }),
          this.eElement.addEventListener('touchend', s, { passive: !1 }),
          this.destroyFuncs.push(function () {
            r.eElement.removeEventListener('touchstart', o, { passive: !0 }),
              r.eElement.removeEventListener('touchmove', i, { passive: !0 }),
              r.eElement.removeEventListener('touchend', s, { passive: !1 });
          });
      }
      return (
        (n.prototype.getActiveTouch = function (t) {
          for (var e = 0; e < t.length; e++) {
            var r = t[e].identifier === this.touchStart.identifier;
            if (r) return t[e];
          }
          return null;
        }),
        (n.prototype.addEventListener = function (t, e) {
          this.eventService.addEventListener(t, e);
        }),
        (n.prototype.removeEventListener = function (t, e) {
          this.eventService.removeEventListener(t, e);
        }),
        (n.prototype.onTouchStart = function (t) {
          var e = this;
          if (!this.touching) {
            (this.touchStart = t.touches[0]), (this.touching = !0), (this.moved = !1);
            var r = this.touchStart;
            window.setTimeout(function () {
              var o = e.touchStart === r;
              if (e.touching && o && !e.moved) {
                e.moved = !0;
                var i = { type: n.EVENT_LONG_TAP, touchStart: e.touchStart, touchEvent: t };
                e.eventService.dispatchEvent(i);
              }
            }, 500);
          }
        }),
        (n.prototype.onTouchMove = function (t) {
          if (this.touching) {
            var e = this.getActiveTouch(t.touches);
            if (e) {
              var r = !$n(e, this.touchStart, 4);
              r && (this.moved = !0);
            }
          }
        }),
        (n.prototype.onTouchEnd = function (t) {
          if (this.touching) {
            if (!this.moved) {
              var e = { type: n.EVENT_TAP, touchStart: this.touchStart };
              this.eventService.dispatchEvent(e), this.checkForDoubleTap();
            }
            this.preventMouseClick && t.cancelable && t.preventDefault(), (this.touching = !1);
          }
        }),
        (n.prototype.checkForDoubleTap = function () {
          var t = new Date().getTime();
          if (this.lastTapTime && this.lastTapTime > 0) {
            var e = t - this.lastTapTime;
            if (e > n.DOUBLE_TAP_MILLIS) {
              var r = { type: n.EVENT_DOUBLE_TAP, touchStart: this.touchStart };
              this.eventService.dispatchEvent(r), (this.lastTapTime = null);
            } else this.lastTapTime = t;
          } else this.lastTapTime = t;
        }),
        (n.prototype.destroy = function () {
          this.destroyFuncs.forEach(function (t) {
            return t();
          });
        }),
        (n.EVENT_TAP = 'tap'),
        (n.EVENT_DOUBLE_TAP = 'doubleTap'),
        (n.EVENT_LONG_TAP = 'longTap'),
        (n.DOUBLE_TAP_MILLIS = 500),
        n
      );
    })(),
    Nd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ur = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    us = (function (n) {
      Nd(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return e || r.setTemplate(t.TEMPLATE), r;
      }
      return (
        (t.prototype.attachCustomElements = function (e, r, o, i, s) {
          (this.eSortOrder = e),
            (this.eSortAsc = r),
            (this.eSortDesc = o),
            (this.eSortMixed = i),
            (this.eSortNone = s);
        }),
        (t.prototype.setupSort = function (e, r) {
          var o = this;
          r === void 0 && (r = !1),
            (this.column = e),
            (this.suppressOrder = r),
            this.setupMultiSortIndicator(),
            this.column.isSortable() &&
              (this.addInIcon('sortAscending', this.eSortAsc, e),
              this.addInIcon('sortDescending', this.eSortDesc, e),
              this.addInIcon('sortUnSort', this.eSortNone, e),
              this.addManagedPropertyListener('unSortIcon', function () {
                return o.updateIcons();
              }),
              this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, function () {
                return o.updateIcons();
              }),
              this.addManagedListener(this.eventService, g.EVENT_SORT_CHANGED, function () {
                return o.onSortChanged();
              }),
              this.addManagedListener(
                this.eventService,
                g.EVENT_COLUMN_ROW_GROUP_CHANGED,
                function () {
                  return o.onSortChanged();
                }
              ),
              this.onSortChanged());
        }),
        (t.prototype.addInIcon = function (e, r, o) {
          if (r != null) {
            var i = ne(e, this.gridOptionsService, o);
            i && r.appendChild(i);
          }
        }),
        (t.prototype.onSortChanged = function () {
          this.updateIcons(), this.suppressOrder || this.updateSortOrder();
        }),
        (t.prototype.updateIcons = function () {
          var e = this.sortController.getDisplaySortForColumn(this.column);
          if (this.eSortAsc) {
            var r = e === 'asc';
            $(this.eSortAsc, r, { skipAriaHidden: !0 });
          }
          if (this.eSortDesc) {
            var o = e === 'desc';
            $(this.eSortDesc, o, { skipAriaHidden: !0 });
          }
          if (this.eSortNone) {
            var i =
                !this.column.getColDef().unSortIcon && !this.gridOptionsService.get('unSortIcon'),
              s = e == null;
            $(this.eSortNone, !i && s, { skipAriaHidden: !0 });
          }
        }),
        (t.prototype.setupMultiSortIndicator = function () {
          var e = this;
          this.addInIcon('sortUnSort', this.eSortMixed, this.column);
          var r = this.column.getColDef().showRowGroup,
            o = this.gridOptionsService.isColumnsSortingCoupledToGroup();
          o &&
            r &&
            (this.addManagedListener(this.eventService, g.EVENT_SORT_CHANGED, function () {
              return e.updateMultiSortIndicator();
            }),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_ROW_GROUP_CHANGED,
              function () {
                return e.updateMultiSortIndicator();
              }
            ),
            this.updateMultiSortIndicator());
        }),
        (t.prototype.updateMultiSortIndicator = function () {
          if (this.eSortMixed) {
            var e = this.sortController.getDisplaySortForColumn(this.column) === 'mixed';
            $(this.eSortMixed, e, { skipAriaHidden: !0 });
          }
        }),
        (t.prototype.updateSortOrder = function () {
          var e = this,
            r;
          if (this.eSortOrder) {
            var o = this.sortController.getColumnsWithSortingOrdered(),
              i =
                (r = this.sortController.getDisplaySortIndexForColumn(this.column)) !== null &&
                r !== void 0
                  ? r
                  : -1,
              s = o.some(function (l) {
                var u;
                return (u = e.sortController.getDisplaySortIndexForColumn(l)) !== null &&
                  u !== void 0
                  ? u
                  : -1 >= 1;
              }),
              a = i >= 0 && s;
            $(this.eSortOrder, a, { skipAriaHidden: !0 }),
              i >= 0 ? (this.eSortOrder.textContent = (i + 1).toString()) : de(this.eSortOrder);
          }
        }),
        (t.TEMPLATE = `<span class="ag-sort-indicator-container">
            <span ref="eSortOrder" class="ag-sort-indicator-icon ag-sort-order ag-hidden" aria-hidden="true"></span>
            <span ref="eSortAsc" class="ag-sort-indicator-icon ag-sort-ascending-icon ag-hidden" aria-hidden="true"></span>
            <span ref="eSortDesc" class="ag-sort-indicator-icon ag-sort-descending-icon ag-hidden" aria-hidden="true"></span>
            <span ref="eSortMixed" class="ag-sort-indicator-icon ag-sort-mixed-icon ag-hidden" aria-hidden="true"></span>
            <span ref="eSortNone" class="ag-sort-indicator-icon ag-sort-none-icon ag-hidden" aria-hidden="true"></span>
        </span>`),
        ur([L('eSortOrder')], t.prototype, 'eSortOrder', void 0),
        ur([L('eSortAsc')], t.prototype, 'eSortAsc', void 0),
        ur([L('eSortDesc')], t.prototype, 'eSortDesc', void 0),
        ur([L('eSortMixed')], t.prototype, 'eSortMixed', void 0),
        ur([L('eSortNone')], t.prototype, 'eSortNone', void 0),
        ur([v('columnModel')], t.prototype, 'columnModel', void 0),
        ur([v('sortController')], t.prototype, 'sortController', void 0),
        t
      );
    })(k),
    Gd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Oe = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    cs = (function (n) {
      Gd(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.lastMovingChanged = 0), e;
      }
      return (
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        (t.prototype.refresh = function (e) {
          return (
            (this.params = e),
            this.workOutTemplate() != this.currentTemplate ||
            this.workOutShowMenu() != this.currentShowMenu ||
            this.workOutSort() != this.currentSort ||
            this.shouldSuppressMenuHide() != this.currentSuppressMenuHide
              ? !1
              : (this.setDisplayName(e), !0)
          );
        }),
        (t.prototype.workOutTemplate = function () {
          var e,
            r = (e = this.params.template) !== null && e !== void 0 ? e : t.TEMPLATE;
          return (r = r && r.trim ? r.trim() : r), r;
        }),
        (t.prototype.init = function (e) {
          (this.params = e),
            (this.currentTemplate = this.workOutTemplate()),
            this.setTemplate(this.currentTemplate),
            this.setupTap(),
            this.setMenu(),
            this.setupSort(),
            this.setupFilterIcon(),
            this.setupFilterButton(),
            this.setDisplayName(e);
        }),
        (t.prototype.setDisplayName = function (e) {
          if (this.currentDisplayName != e.displayName) {
            this.currentDisplayName = e.displayName;
            var r = ae(this.currentDisplayName, !0);
            this.eText && (this.eText.textContent = r);
          }
        }),
        (t.prototype.addInIcon = function (e, r, o) {
          if (r != null) {
            var i = ne(e, this.gridOptionsService, o);
            i && r.appendChild(i);
          }
        }),
        (t.prototype.setupTap = function () {
          var e = this,
            r = this.gridOptionsService;
          if (!r.get('suppressTouch')) {
            var o = new me(this.getGui(), !0),
              i = this.shouldSuppressMenuHide(),
              s = i && P(this.eMenu),
              a = s ? new me(this.eMenu, !0) : o;
            if (this.params.enableMenu) {
              var l = s ? 'EVENT_TAP' : 'EVENT_LONG_TAP',
                u = function (d) {
                  return e.params.showColumnMenuAfterMouseClick(d.touchStart);
                };
              this.addManagedListener(a, me[l], u);
            }
            if (this.params.enableSorting) {
              var c = function (d) {
                var h,
                  f,
                  y = d.touchStart.target;
                (i &&
                  ((!((h = e.eMenu) === null || h === void 0) && h.contains(y)) ||
                    (!((f = e.eFilterButton) === null || f === void 0) && f.contains(y)))) ||
                  e.sortController.progressSort(e.params.column, !1, 'uiColumnSorted');
              };
              this.addManagedListener(o, me.EVENT_TAP, c);
            }
            if (this.params.enableFilterButton) {
              var p = new me(this.eFilterButton, !0);
              this.addManagedListener(p, 'tap', function () {
                return e.params.showFilter(e.eFilterButton);
              }),
                this.addDestroyFunc(function () {
                  return p.destroy();
                });
            }
            this.addDestroyFunc(function () {
              return o.destroy();
            }),
              s &&
                this.addDestroyFunc(function () {
                  return a.destroy();
                });
          }
        }),
        (t.prototype.workOutShowMenu = function () {
          return this.params.enableMenu && this.menuService.isHeaderMenuButtonEnabled();
        }),
        (t.prototype.shouldSuppressMenuHide = function () {
          return this.menuService.isHeaderMenuButtonAlwaysShowEnabled();
        }),
        (t.prototype.setMenu = function () {
          var e = this;
          if (this.eMenu) {
            if (((this.currentShowMenu = this.workOutShowMenu()), !this.currentShowMenu)) {
              ft(this.eMenu), (this.eMenu = void 0);
              return;
            }
            var r = this.menuService.isLegacyMenuEnabled();
            this.addInIcon(r ? 'menu' : 'menuAlt', this.eMenu, this.params.column),
              this.eMenu.classList.toggle('ag-header-menu-icon', !r),
              (this.currentSuppressMenuHide = this.shouldSuppressMenuHide()),
              this.addManagedListener(this.eMenu, 'click', function () {
                return e.params.showColumnMenu(e.eMenu);
              }),
              this.eMenu.classList.toggle(
                'ag-header-menu-always-show',
                this.currentSuppressMenuHide
              );
          }
        }),
        (t.prototype.onMenuKeyboardShortcut = function (e) {
          var r,
            o,
            i,
            s,
            a = this.params.column,
            l = this.menuService.isLegacyMenuEnabled();
          if (e && !l) {
            if (this.menuService.isFilterMenuInHeaderEnabled(a))
              return (
                this.params.showFilter(
                  (o = (r = this.eFilterButton) !== null && r !== void 0 ? r : this.eMenu) !==
                    null && o !== void 0
                    ? o
                    : this.getGui()
                ),
                !0
              );
          } else if (this.params.enableMenu)
            return (
              this.params.showColumnMenu(
                (s = (i = this.eMenu) !== null && i !== void 0 ? i : this.eFilterButton) !== null &&
                  s !== void 0
                  ? s
                  : this.getGui()
              ),
              !0
            );
          return !1;
        }),
        (t.prototype.workOutSort = function () {
          return this.params.enableSorting;
        }),
        (t.prototype.setupSort = function () {
          var e = this;
          if (
            ((this.currentSort = this.params.enableSorting),
            this.eSortIndicator ||
              ((this.eSortIndicator = this.context.createBean(new us(!0))),
              this.eSortIndicator.attachCustomElements(
                this.eSortOrder,
                this.eSortAsc,
                this.eSortDesc,
                this.eSortMixed,
                this.eSortNone
              )),
            this.eSortIndicator.setupSort(this.params.column),
            !!this.currentSort)
          ) {
            this.addManagedListener(this.params.column, J.EVENT_MOVING_CHANGED, function () {
              e.lastMovingChanged = new Date().getTime();
            }),
              this.eLabel &&
                this.addManagedListener(this.eLabel, 'click', function (o) {
                  var i = e.params.column.isMoving(),
                    s = new Date().getTime(),
                    a = s - e.lastMovingChanged < 50,
                    l = i || a;
                  if (!l) {
                    var u = e.gridOptionsService.get('multiSortKey') === 'ctrl',
                      c = u ? o.ctrlKey || o.metaKey : o.shiftKey;
                    e.params.progressSort(c);
                  }
                });
            var r = function () {
              if (
                (e.addOrRemoveCssClass(
                  'ag-header-cell-sorted-asc',
                  e.params.column.isSortAscending()
                ),
                e.addOrRemoveCssClass(
                  'ag-header-cell-sorted-desc',
                  e.params.column.isSortDescending()
                ),
                e.addOrRemoveCssClass('ag-header-cell-sorted-none', e.params.column.isSortNone()),
                e.params.column.getColDef().showRowGroup)
              ) {
                var o = e.columnModel.getSourceColumnsForGroupColumn(e.params.column),
                  i =
                    o == null
                      ? void 0
                      : o.every(function (a) {
                          return e.params.column.getSort() == a.getSort();
                        }),
                  s = !i;
                e.addOrRemoveCssClass('ag-header-cell-sorted-mixed', s);
              }
            };
            this.addManagedListener(this.eventService, g.EVENT_SORT_CHANGED, r),
              this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, r);
          }
        }),
        (t.prototype.setupFilterIcon = function () {
          this.eFilter &&
            this.configureFilter(
              this.params.enableFilterIcon,
              this.eFilter,
              this.onFilterChangedIcon.bind(this)
            );
        }),
        (t.prototype.setupFilterButton = function () {
          var e = this;
          if (this.eFilterButton) {
            var r = this.configureFilter(
              this.params.enableFilterButton,
              this.eFilterButton,
              this.onFilterChangedButton.bind(this)
            );
            r
              ? this.addManagedListener(this.eFilterButton, 'click', function () {
                  return e.params.showFilter(e.eFilterButton);
                })
              : (this.eFilterButton = void 0);
          }
        }),
        (t.prototype.configureFilter = function (e, r, o) {
          if (!e) return ft(r), !1;
          var i = this.params.column;
          return (
            this.addInIcon('filter', r, i),
            this.addManagedListener(i, J.EVENT_FILTER_CHANGED, o),
            o(),
            !0
          );
        }),
        (t.prototype.onFilterChangedIcon = function () {
          var e = this.params.column.isFilterActive();
          $(this.eFilter, e, { skipAriaHidden: !0 });
        }),
        (t.prototype.onFilterChangedButton = function () {
          var e = this.params.column.isFilterActive();
          this.eFilterButton.classList.toggle('ag-filter-active', e);
        }),
        (t.prototype.getAnchorElementForMenu = function (e) {
          var r, o, i, s;
          return e
            ? (o = (r = this.eFilterButton) !== null && r !== void 0 ? r : this.eMenu) !== null &&
              o !== void 0
              ? o
              : this.getGui()
            : (s = (i = this.eMenu) !== null && i !== void 0 ? i : this.eFilterButton) !== null &&
              s !== void 0
            ? s
            : this.getGui();
        }),
        (t.TEMPLATE = `<div class="ag-cell-label-container" role="presentation">
            <span ref="eMenu" class="ag-header-icon ag-header-cell-menu-button" aria-hidden="true"></span>
            <span ref="eFilterButton" class="ag-header-icon ag-header-cell-filter-button" aria-hidden="true"></span>
            <div ref="eLabel" class="ag-header-cell-label" role="presentation">
                <span ref="eText" class="ag-header-cell-text"></span>
                <span ref="eFilter" class="ag-header-icon ag-header-label-icon ag-filter-icon" aria-hidden="true"></span>
                <ag-sort-indicator ref="eSortIndicator"></ag-sort-indicator>
            </div>
        </div>`),
        Oe([v('sortController')], t.prototype, 'sortController', void 0),
        Oe([v('menuService')], t.prototype, 'menuService', void 0),
        Oe([v('columnModel')], t.prototype, 'columnModel', void 0),
        Oe([L('eFilter')], t.prototype, 'eFilter', void 0),
        Oe([L('eFilterButton')], t.prototype, 'eFilterButton', void 0),
        Oe([L('eSortIndicator')], t.prototype, 'eSortIndicator', void 0),
        Oe([L('eMenu')], t.prototype, 'eMenu', void 0),
        Oe([L('eLabel')], t.prototype, 'eLabel', void 0),
        Oe([L('eText')], t.prototype, 'eText', void 0),
        Oe([L('eSortOrder')], t.prototype, 'eSortOrder', void 0),
        Oe([L('eSortAsc')], t.prototype, 'eSortAsc', void 0),
        Oe([L('eSortDesc')], t.prototype, 'eSortDesc', void 0),
        Oe([L('eSortMixed')], t.prototype, 'eSortMixed', void 0),
        Oe([L('eSortNone')], t.prototype, 'eSortNone', void 0),
        t
      );
    })(k),
    Vd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ps = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Hd = (function (n) {
      Vd(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return (
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        (t.prototype.init = function (e) {
          (this.params = e),
            this.checkWarnings(),
            this.setupLabel(),
            this.addGroupExpandIcon(),
            this.setupExpandIcons();
        }),
        (t.prototype.checkWarnings = function () {
          var e = this.params;
          e.template &&
            V(
              'A template was provided for Header Group Comp - templates are only supported for Header Comps (not groups)'
            );
        }),
        (t.prototype.setupExpandIcons = function () {
          var e = this;
          this.addInIcon('columnGroupOpened', 'agOpened'),
            this.addInIcon('columnGroupClosed', 'agClosed');
          var r = function (s) {
            if (!nt(s)) {
              var a = !e.params.columnGroup.isExpanded();
              e.columnModel.setColumnGroupOpened(
                e.params.columnGroup.getProvidedColumnGroup(),
                a,
                'uiColumnExpanded'
              );
            }
          };
          this.addTouchAndClickListeners(this.eCloseIcon, r),
            this.addTouchAndClickListeners(this.eOpenIcon, r);
          var o = function (s) {
            it(s);
          };
          this.addManagedListener(this.eCloseIcon, 'dblclick', o),
            this.addManagedListener(this.eOpenIcon, 'dblclick', o),
            this.addManagedListener(this.getGui(), 'dblclick', r),
            this.updateIconVisibility();
          var i = this.params.columnGroup.getProvidedColumnGroup();
          this.addManagedListener(
            i,
            ie.EVENT_EXPANDED_CHANGED,
            this.updateIconVisibility.bind(this)
          ),
            this.addManagedListener(
              i,
              ie.EVENT_EXPANDABLE_CHANGED,
              this.updateIconVisibility.bind(this)
            );
        }),
        (t.prototype.addTouchAndClickListeners = function (e, r) {
          var o = new me(e, !0);
          this.addManagedListener(o, me.EVENT_TAP, r),
            this.addDestroyFunc(function () {
              return o.destroy();
            }),
            this.addManagedListener(e, 'click', r);
        }),
        (t.prototype.updateIconVisibility = function () {
          var e = this.params.columnGroup;
          if (e.isExpandable()) {
            var r = this.params.columnGroup.isExpanded();
            $(this.eOpenIcon, r), $(this.eCloseIcon, !r);
          } else $(this.eOpenIcon, !1), $(this.eCloseIcon, !1);
        }),
        (t.prototype.addInIcon = function (e, r) {
          var o = ne(e, this.gridOptionsService, null);
          o && this.getRefElement(r).appendChild(o);
        }),
        (t.prototype.addGroupExpandIcon = function () {
          if (!this.params.columnGroup.isExpandable()) {
            $(this.eOpenIcon, !1), $(this.eCloseIcon, !1);
            return;
          }
        }),
        (t.prototype.setupLabel = function () {
          var e,
            r = this.params,
            o = r.displayName,
            i = r.columnGroup;
          if (P(o)) {
            var s = ae(o, !0);
            this.getRefElement('agLabel').textContent = s;
          }
          this.addOrRemoveCssClass(
            'ag-sticky-label',
            !(!((e = i.getColGroupDef()) === null || e === void 0) && e.suppressStickyLabel)
          );
        }),
        (t.TEMPLATE = `<div class="ag-header-group-cell-label" ref="agContainer" role="presentation">
            <span ref="agLabel" class="ag-header-group-text" role="presentation"></span>
            <span ref="agOpened" class="ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded"></span>
            <span ref="agClosed" class="ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed"></span>
        </div>`),
        ps([v('columnModel')], t.prototype, 'columnModel', void 0),
        ps([L('agOpened')], t.prototype, 'eOpenIcon', void 0),
        ps([L('agClosed')], t.prototype, 'eCloseIcon', void 0),
        t
      );
    })(k),
    Bd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    cr = (function (n) {
      Bd(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.isPopup = function () {
          return !0;
        }),
        (t.prototype.setParentComponent = function (e) {
          e.addCssClass('ag-has-popup'), n.prototype.setParentComponent.call(this, e);
        }),
        (t.prototype.destroy = function () {
          var e = this.parentComponent,
            r = e && e.isAlive();
          r && e.getGui().classList.remove('ag-has-popup'), n.prototype.destroy.call(this);
        }),
        t
      );
    })(k),
    kd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Wd = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    jd = (function (n) {
      kd(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return (
        (t.prototype.init = function (e) {
          (this.params = e),
            (this.focusAfterAttached = e.cellStartedEdit),
            this.eTextArea
              .setMaxLength(e.maxLength || 200)
              .setCols(e.cols || 60)
              .setRows(e.rows || 10),
            P(e.value, !0) && this.eTextArea.setValue(e.value.toString(), !0),
            this.addGuiEventListener('keydown', this.onKeyDown.bind(this)),
            this.activateTabIndex();
        }),
        (t.prototype.onKeyDown = function (e) {
          var r = e.key;
          (r === _.LEFT ||
            r === _.UP ||
            r === _.RIGHT ||
            r === _.DOWN ||
            (e.shiftKey && r === _.ENTER)) &&
            e.stopPropagation();
        }),
        (t.prototype.afterGuiAttached = function () {
          var e = this.localeService.getLocaleTextFunc();
          this.eTextArea.setInputAriaLabel(e('ariaInputEditor', 'Input Editor')),
            this.focusAfterAttached && this.eTextArea.getFocusableElement().focus();
        }),
        (t.prototype.getValue = function () {
          var e = this.eTextArea.getValue();
          return !P(e) && !P(this.params.value) ? this.params.value : this.params.parseValue(e);
        }),
        (t.TEMPLATE = `<div class="ag-large-text">
            <ag-input-text-area ref="eTextArea" class="ag-large-text-input"></ag-input-text-area>
        </div>`),
        Wd([L('eTextArea')], t.prototype, 'eTextArea', void 0),
        t
      );
    })(cr),
    Ud = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Hl = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    zd = (function (n) {
      Ud(t, n);
      function t() {
        var e =
          n.call(
            this,
            `<div class="ag-cell-edit-wrapper">
                <ag-select class="ag-cell-editor" ref="eSelect"></ag-select>
            </div>`
          ) || this;
        return (e.startedByEnter = !1), e;
      }
      return (
        (t.prototype.init = function (e) {
          this.focusAfterAttached = e.cellStartedEdit;
          var r = this,
            o = r.eSelect,
            i = r.valueFormatterService,
            s = r.gridOptionsService,
            a = e.values,
            l = e.value,
            u = e.eventKey;
          if (H(a)) {
            console.warn('AG Grid: no values found for select cellEditor');
            return;
          }
          this.startedByEnter = u != null ? u === _.ENTER : !1;
          var c = !1;
          a.forEach(function (f) {
            var y = { value: f },
              m = i.formatValue(e.column, null, f),
              C = m != null;
            (y.text = C ? m : f), o.addOption(y), (c = c || l === f);
          }),
            c ? o.setValue(e.value, !0) : e.values.length && o.setValue(e.values[0], !0);
          var p = e.valueListGap,
            d = e.valueListMaxWidth,
            h = e.valueListMaxHeight;
          p != null && o.setPickerGap(p),
            h != null && o.setPickerMaxHeight(h),
            d != null && o.setPickerMaxWidth(d),
            s.get('editType') !== 'fullRow' &&
              this.addManagedListener(this.eSelect, ei.EVENT_ITEM_SELECTED, function () {
                return e.stopEditing();
              });
        }),
        (t.prototype.afterGuiAttached = function () {
          var e = this;
          this.focusAfterAttached && this.eSelect.getFocusableElement().focus(),
            this.startedByEnter &&
              setTimeout(function () {
                e.isAlive() && e.eSelect.showPicker();
              });
        }),
        (t.prototype.focusIn = function () {
          this.eSelect.getFocusableElement().focus();
        }),
        (t.prototype.getValue = function () {
          return this.eSelect.getValue();
        }),
        (t.prototype.isPopup = function () {
          return !1;
        }),
        Hl([v('valueFormatterService')], t.prototype, 'valueFormatterService', void 0),
        Hl([L('eSelect')], t.prototype, 'eSelect', void 0),
        t
      );
    })(cr),
    Kd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    $d = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    oi = (function (n) {
      Kd(t, n);
      function t(e) {
        var r =
          n.call(
            this,
            `
            <div class="ag-cell-edit-wrapper">
                `.concat(
              e.getTemplate(),
              `
            </div>`
            )
          ) || this;
        return (r.cellEditorInput = e), r;
      }
      return (
        (t.prototype.init = function (e) {
          this.params = e;
          var r = this.eInput;
          this.cellEditorInput.init(r, e);
          var o;
          if (e.cellStartedEdit) {
            this.focusAfterAttached = !0;
            var i = e.eventKey;
            i === _.BACKSPACE || e.eventKey === _.DELETE
              ? (o = '')
              : i && i.length === 1
              ? (o = i)
              : ((o = this.cellEditorInput.getStartValue()),
                i !== _.F2 && (this.highlightAllOnFocus = !0));
          } else (this.focusAfterAttached = !1), (o = this.cellEditorInput.getStartValue());
          o != null && r.setStartValue(o),
            this.addManagedListener(r.getGui(), 'keydown', function (s) {
              var a = s.key;
              (a === _.PAGE_UP || a === _.PAGE_DOWN) && s.preventDefault();
            });
        }),
        (t.prototype.afterGuiAttached = function () {
          var e,
            r,
            o = this.localeService.getLocaleTextFunc(),
            i = this.eInput;
          if (
            (i.setInputAriaLabel(o('ariaInputEditor', 'Input Editor')), !!this.focusAfterAttached)
          ) {
            ht() || i.getFocusableElement().focus();
            var s = i.getInputElement();
            this.highlightAllOnFocus
              ? s.select()
              : (r = (e = this.cellEditorInput).setCaret) === null || r === void 0 || r.call(e);
          }
        }),
        (t.prototype.focusIn = function () {
          var e = this.eInput,
            r = e.getFocusableElement(),
            o = e.getInputElement();
          r.focus(), o.select();
        }),
        (t.prototype.getValue = function () {
          return this.cellEditorInput.getValue();
        }),
        (t.prototype.isPopup = function () {
          return !1;
        }),
        $d([L('eInput')], t.prototype, 'eInput', void 0),
        t
      );
    })(cr),
    Yd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    qd = (function () {
      function n() {}
      return (
        (n.prototype.getTemplate = function () {
          return '<ag-input-text-field class="ag-cell-editor" ref="eInput"></ag-input-text-field>';
        }),
        (n.prototype.init = function (t, e) {
          (this.eInput = t), (this.params = e), e.maxLength != null && t.setMaxLength(e.maxLength);
        }),
        (n.prototype.getValue = function () {
          var t = this.eInput.getValue();
          return !P(t) && !P(this.params.value) ? this.params.value : this.params.parseValue(t);
        }),
        (n.prototype.getStartValue = function () {
          var t = this.params.useFormatter || this.params.column.getColDef().refData;
          return t ? this.params.formatValue(this.params.value) : this.params.value;
        }),
        (n.prototype.setCaret = function () {
          var t = this.eInput.getValue(),
            e = (P(t) && t.length) || 0;
          e && this.eInput.getInputElement().setSelectionRange(e, e);
        }),
        n
      );
    })(),
    Bl = (function (n) {
      Yd(t, n);
      function t() {
        return n.call(this, new qd()) || this;
      }
      return t;
    })(oi),
    Qd = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Xd = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Jd = '↑',
    Zd = '↓',
    eh = (function (n) {
      Qd(t, n);
      function t() {
        var e = n.call(this) || this;
        e.refreshCount = 0;
        var r = document.createElement('span'),
          o = document.createElement('span');
        o.setAttribute('class', 'ag-value-change-delta');
        var i = document.createElement('span');
        return (
          i.setAttribute('class', 'ag-value-change-value'),
          r.appendChild(o),
          r.appendChild(i),
          e.setTemplateFromElement(r),
          e
        );
      }
      return (
        (t.prototype.init = function (e) {
          (this.eValue = this.queryForHtmlElement('.ag-value-change-value')),
            (this.eDelta = this.queryForHtmlElement('.ag-value-change-delta')),
            this.refresh(e, !0);
        }),
        (t.prototype.showDelta = function (e, r) {
          var o = Math.abs(r),
            i = e.formatValue(o),
            s = P(i) ? i : o,
            a = r >= 0;
          a ? (this.eDelta.textContent = Jd + s) : (this.eDelta.textContent = Zd + s),
            this.eDelta.classList.toggle('ag-value-change-delta-up', a),
            this.eDelta.classList.toggle('ag-value-change-delta-down', !a);
        }),
        (t.prototype.setTimerToRemoveDelta = function () {
          var e = this;
          this.refreshCount++;
          var r = this.refreshCount;
          this.getFrameworkOverrides().wrapIncoming(function () {
            window.setTimeout(function () {
              r === e.refreshCount && e.hideDeltaValue();
            }, 2e3);
          });
        }),
        (t.prototype.hideDeltaValue = function () {
          this.eValue.classList.remove('ag-value-change-value-highlight'), de(this.eDelta);
        }),
        (t.prototype.refresh = function (e, r) {
          r === void 0 && (r = !1);
          var o = e.value;
          if (
            o === this.lastValue ||
            (P(e.valueFormatted)
              ? (this.eValue.textContent = e.valueFormatted)
              : P(e.value)
              ? (this.eValue.textContent = o)
              : de(this.eValue),
            this.filterManager.isSuppressFlashingCellsBecauseFiltering())
          )
            return !1;
          if (typeof o == 'number' && typeof this.lastValue == 'number') {
            var i = o - this.lastValue;
            this.showDelta(e, i);
          }
          return (
            this.lastValue && this.eValue.classList.add('ag-value-change-value-highlight'),
            r || this.setTimerToRemoveDelta(),
            (this.lastValue = o),
            !0
          );
        }),
        Xd([v('filterManager')], t.prototype, 'filterManager', void 0),
        t
      );
    })(k),
    th = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    rh = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    oh = (function (n) {
      th(t, n);
      function t() {
        var e = n.call(this) || this;
        e.refreshCount = 0;
        var r = document.createElement('span'),
          o = document.createElement('span');
        return (
          o.setAttribute('class', 'ag-value-slide-current'),
          r.appendChild(o),
          e.setTemplateFromElement(r),
          (e.eCurrent = e.queryForHtmlElement('.ag-value-slide-current')),
          e
        );
      }
      return (
        (t.prototype.init = function (e) {
          this.refresh(e, !0);
        }),
        (t.prototype.addSlideAnimation = function () {
          var e = this;
          this.refreshCount++;
          var r = this.refreshCount;
          this.ePrevious && this.getGui().removeChild(this.ePrevious);
          var o = document.createElement('span');
          o.setAttribute('class', 'ag-value-slide-previous ag-value-slide-out'),
            (this.ePrevious = o),
            (this.ePrevious.textContent = this.eCurrent.textContent),
            this.getGui().insertBefore(this.ePrevious, this.eCurrent),
            this.getFrameworkOverrides().wrapIncoming(function () {
              window.setTimeout(function () {
                r === e.refreshCount && e.ePrevious.classList.add('ag-value-slide-out-end');
              }, 50),
                window.setTimeout(function () {
                  r === e.refreshCount &&
                    (e.getGui().removeChild(e.ePrevious), (e.ePrevious = null));
                }, 3e3);
            });
        }),
        (t.prototype.refresh = function (e, r) {
          r === void 0 && (r = !1);
          var o = e.value;
          return (
            H(o) && (o = ''),
            o === this.lastValue || this.filterManager.isSuppressFlashingCellsBecauseFiltering()
              ? !1
              : (r || this.addSlideAnimation(),
                (this.lastValue = o),
                P(e.valueFormatted)
                  ? (this.eCurrent.textContent = e.valueFormatted)
                  : P(e.value)
                  ? (this.eCurrent.textContent = o)
                  : de(this.eCurrent),
                !0)
          );
        }),
        rh([v('filterManager')], t.prototype, 'filterManager', void 0),
        t
      );
    })(k),
    br = function () {
      return (
        (br =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        br.apply(this, arguments)
      );
    },
    U = (function () {
      function n(t) {
        (this.rowIndex = null),
          (this.key = null),
          (this.childrenMapped = {}),
          (this.displayed = !1),
          (this.rowTop = null),
          (this.oldRowTop = null),
          (this.selectable = !0),
          (this.__objectId = n.OBJECT_ID_SEQUENCE++),
          (this.__autoHeights = {}),
          (this.alreadyRendered = !1),
          (this.highlighted = null),
          (this.hovered = !1),
          (this.selected = !1),
          (this.beans = t);
      }
      return (
        (n.prototype.setData = function (t) {
          this.setDataCommon(t, !1);
        }),
        (n.prototype.updateData = function (t) {
          this.setDataCommon(t, !0);
        }),
        (n.prototype.setDataCommon = function (t, e) {
          var r = this.data;
          (this.data = t),
            this.beans.valueCache.onDataChanged(),
            this.updateDataOnDetailNode(),
            this.checkRowSelectable(),
            this.resetQuickFilterAggregateText();
          var o = this.createDataChangedEvent(t, r, e);
          this.dispatchLocalEvent(o);
        }),
        (n.prototype.updateDataOnDetailNode = function () {
          this.detailNode && (this.detailNode.data = this.data);
        }),
        (n.prototype.createDataChangedEvent = function (t, e, r) {
          return { type: n.EVENT_DATA_CHANGED, node: this, oldData: e, newData: t, update: r };
        }),
        (n.prototype.createLocalRowEvent = function (t) {
          return { type: t, node: this };
        }),
        (n.prototype.getRowIndexString = function () {
          return this.rowPinned === 'top'
            ? 't-' + this.rowIndex
            : this.rowPinned === 'bottom'
            ? 'b-' + this.rowIndex
            : this.rowIndex.toString();
        }),
        (n.prototype.createDaemonNode = function () {
          var t = new n(this.beans);
          return (
            (t.id = this.id),
            (t.data = this.data),
            (t.__daemon = !0),
            (t.selected = this.selected),
            (t.level = this.level),
            t
          );
        }),
        (n.prototype.setDataAndId = function (t, e) {
          var r = P(this.id) ? this.createDaemonNode() : null,
            o = this.data;
          (this.data = t),
            this.updateDataOnDetailNode(),
            this.setId(e),
            this.checkRowSelectable(),
            this.beans.selectionService.syncInRowNode(this, r);
          var i = this.createDataChangedEvent(t, o, !1);
          this.dispatchLocalEvent(i);
        }),
        (n.prototype.checkRowSelectable = function () {
          var t = this.beans.gridOptionsService.get('isRowSelectable');
          this.setRowSelectable(t ? t(this) : !0);
        }),
        (n.prototype.setRowSelectable = function (t, e) {
          if (this.selectable !== t) {
            if (
              ((this.selectable = t),
              this.eventService &&
                this.eventService.dispatchEvent(
                  this.createLocalRowEvent(n.EVENT_SELECTABLE_CHANGED)
                ),
              e)
            )
              return;
            var r = this.beans.gridOptionsService.get('groupSelectsChildren');
            if (r) {
              var o = this.calculateSelectedFromChildren();
              this.setSelectedParams({ newValue: o ?? !1, source: 'selectableChanged' });
              return;
            }
            this.isSelected() &&
              !this.selectable &&
              this.setSelectedParams({ newValue: !1, source: 'selectableChanged' });
          }
        }),
        (n.prototype.setId = function (t) {
          var e = this.beans.gridOptionsService.getCallback('getRowId');
          if (e)
            if (this.data) {
              var r = this.getGroupKeys(!0);
              (this.id = e({
                data: this.data,
                parentKeys: r.length > 0 ? r : void 0,
                level: this.level,
              })),
                this.id !== null &&
                  typeof this.id == 'string' &&
                  this.id.startsWith(n.ID_PREFIX_ROW_GROUP) &&
                  console.error(
                    'AG Grid: Row IDs cannot start with '.concat(
                      n.ID_PREFIX_ROW_GROUP,
                      ", this is a reserved prefix for AG Grid's row grouping feature."
                    )
                  ),
                this.id !== null && typeof this.id != 'string' && (this.id = '' + this.id);
            } else this.id = void 0;
          else this.id = t;
        }),
        (n.prototype.getGroupKeys = function (t) {
          t === void 0 && (t = !1);
          var e = [],
            r = this;
          for (t && (r = r.parent); r && r.level >= 0; ) e.push(r.key), (r = r.parent);
          return e.reverse(), e;
        }),
        (n.prototype.isPixelInRange = function (t) {
          return !P(this.rowTop) || !P(this.rowHeight)
            ? !1
            : t >= this.rowTop && t < this.rowTop + this.rowHeight;
        }),
        (n.prototype.setFirstChild = function (t) {
          this.firstChild !== t &&
            ((this.firstChild = t),
            this.eventService &&
              this.eventService.dispatchEvent(
                this.createLocalRowEvent(n.EVENT_FIRST_CHILD_CHANGED)
              ));
        }),
        (n.prototype.setLastChild = function (t) {
          this.lastChild !== t &&
            ((this.lastChild = t),
            this.eventService &&
              this.eventService.dispatchEvent(
                this.createLocalRowEvent(n.EVENT_LAST_CHILD_CHANGED)
              ));
        }),
        (n.prototype.setChildIndex = function (t) {
          this.childIndex !== t &&
            ((this.childIndex = t),
            this.eventService &&
              this.eventService.dispatchEvent(
                this.createLocalRowEvent(n.EVENT_CHILD_INDEX_CHANGED)
              ));
        }),
        (n.prototype.setRowTop = function (t) {
          (this.oldRowTop = this.rowTop),
            this.rowTop !== t &&
              ((this.rowTop = t),
              this.eventService &&
                this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_TOP_CHANGED)),
              this.setDisplayed(t !== null));
        }),
        (n.prototype.clearRowTopAndRowIndex = function () {
          (this.oldRowTop = null), this.setRowTop(null), this.setRowIndex(null);
        }),
        (n.prototype.setDisplayed = function (t) {
          this.displayed !== t &&
            ((this.displayed = t),
            this.eventService &&
              this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_DISPLAYED_CHANGED)));
        }),
        (n.prototype.setDragging = function (t) {
          this.dragging !== t &&
            ((this.dragging = t),
            this.eventService &&
              this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_DRAGGING_CHANGED)));
        }),
        (n.prototype.setHighlighted = function (t) {
          t !== this.highlighted &&
            ((this.highlighted = t),
            this.eventService &&
              this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HIGHLIGHT_CHANGED)));
        }),
        (n.prototype.setHovered = function (t) {
          this.hovered !== t && (this.hovered = t);
        }),
        (n.prototype.isHovered = function () {
          return this.hovered;
        }),
        (n.prototype.setAllChildrenCount = function (t) {
          this.allChildrenCount !== t &&
            ((this.allChildrenCount = t),
            this.eventService &&
              this.eventService.dispatchEvent(
                this.createLocalRowEvent(n.EVENT_ALL_CHILDREN_COUNT_CHANGED)
              ));
        }),
        (n.prototype.setMaster = function (t) {
          this.master !== t &&
            (this.master && !t && (this.expanded = !1),
            (this.master = t),
            this.eventService &&
              this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_MASTER_CHANGED)));
        }),
        (n.prototype.setGroup = function (t) {
          this.group !== t &&
            (this.group && !t && (this.expanded = !1),
            (this.group = t),
            this.updateHasChildren(),
            this.eventService &&
              this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_GROUP_CHANGED)));
        }),
        (n.prototype.setRowHeight = function (t, e) {
          e === void 0 && (e = !1),
            (this.rowHeight = t),
            (this.rowHeightEstimated = e),
            this.eventService &&
              this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HEIGHT_CHANGED));
        }),
        (n.prototype.setRowAutoHeight = function (t, e) {
          this.__autoHeights || (this.__autoHeights = {}),
            (this.__autoHeights[e.getId()] = t),
            t != null &&
              (this.checkAutoHeightsDebounced == null &&
                (this.checkAutoHeightsDebounced = He(this.checkAutoHeights.bind(this), 1)),
              this.checkAutoHeightsDebounced());
        }),
        (n.prototype.checkAutoHeights = function () {
          var t = this,
            e = !1,
            r = !0,
            o = 0,
            i = this.__autoHeights;
          if (i != null) {
            var s = this.beans.columnModel.getAllDisplayedAutoHeightCols();
            if (
              (s.forEach(function (l) {
                var u = i[l.getId()];
                if (u == null)
                  if (t.beans.columnModel.isColSpanActive()) {
                    var c = [];
                    switch (l.getPinned()) {
                      case 'left':
                        c = t.beans.columnModel.getDisplayedLeftColumnsForRow(t);
                        break;
                      case 'right':
                        c = t.beans.columnModel.getDisplayedRightColumnsForRow(t);
                        break;
                      case null:
                        c = t.beans.columnModel.getViewportCenterColumnsForRow(t);
                        break;
                    }
                    if (c.includes(l)) {
                      e = !0;
                      return;
                    }
                    u = -1;
                  } else {
                    e = !0;
                    return;
                  }
                else r = !1;
                u > o && (o = u);
              }),
              !e &&
                ((r || o < 10) &&
                  (o = this.beans.gridOptionsService.getRowHeightForNode(this).height),
                o != this.rowHeight))
            ) {
              this.setRowHeight(o);
              var a = this.beans.rowModel;
              a.onRowHeightChangedDebounced && a.onRowHeightChangedDebounced();
            }
          }
        }),
        (n.prototype.setRowIndex = function (t) {
          this.rowIndex !== t &&
            ((this.rowIndex = t),
            this.eventService &&
              this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_ROW_INDEX_CHANGED)));
        }),
        (n.prototype.setUiLevel = function (t) {
          this.uiLevel !== t &&
            ((this.uiLevel = t),
            this.eventService &&
              this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_UI_LEVEL_CHANGED)));
        }),
        (n.prototype.setExpanded = function (t, e) {
          if (this.expanded !== t) {
            (this.expanded = t),
              this.eventService &&
                this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_EXPANDED_CHANGED));
            var r = Object.assign({}, this.createGlobalRowEvent(g.EVENT_ROW_GROUP_OPENED), {
              expanded: t,
              event: e || null,
            });
            this.beans.rowNodeEventThrottle.dispatchExpanded(r),
              this.sibling && this.beans.rowRenderer.refreshCells({ rowNodes: [this] });
          }
        }),
        (n.prototype.createGlobalRowEvent = function (t) {
          return this.beans.gridOptionsService.addGridCommonParams({
            type: t,
            node: this,
            data: this.data,
            rowIndex: this.rowIndex,
            rowPinned: this.rowPinned,
          });
        }),
        (n.prototype.dispatchLocalEvent = function (t) {
          this.eventService && this.eventService.dispatchEvent(t);
        }),
        (n.prototype.setDataValue = function (t, e, r) {
          var o = this,
            i = function () {
              var u;
              return typeof t != 'string'
                ? t
                : (u = o.beans.columnModel.getGridColumn(t)) !== null && u !== void 0
                ? u
                : o.beans.columnModel.getPrimaryColumn(t);
            },
            s = i(),
            a = this.getValueFromValueService(s);
          if (this.beans.gridOptionsService.get('readOnlyEdit'))
            return this.dispatchEventForSaveValueReadOnly(s, a, e, r), !1;
          var l = this.beans.valueService.setValue(this, s, e, r);
          return this.dispatchCellChangedEvent(s, e, a), this.checkRowSelectable(), l;
        }),
        (n.prototype.getValueFromValueService = function (t) {
          var e = this.leafGroup && this.beans.columnModel.isPivotMode(),
            r = this.group && this.expanded && !this.footer && !e,
            o = this.beans.gridOptionsService.getGroupIncludeFooter(),
            i = o({ node: this }),
            s = this.beans.gridOptionsService.get('groupSuppressBlankHeader'),
            a = r && i && !s,
            l = this.beans.valueService.getValue(t, this, !1, a);
          return l;
        }),
        (n.prototype.dispatchEventForSaveValueReadOnly = function (t, e, r, o) {
          var i = this.beans.gridOptionsService.addGridCommonParams({
            type: g.EVENT_CELL_EDIT_REQUEST,
            event: null,
            rowIndex: this.rowIndex,
            rowPinned: this.rowPinned,
            column: t,
            colDef: t.getColDef(),
            data: this.data,
            node: this,
            oldValue: e,
            newValue: r,
            value: r,
            source: o,
          });
          this.beans.eventService.dispatchEvent(i);
        }),
        (n.prototype.setGroupValue = function (t, e) {
          var r = this.beans.columnModel.getGridColumn(t);
          H(this.groupData) && (this.groupData = {});
          var o = r.getColId(),
            i = this.groupData[o];
          i !== e && ((this.groupData[o] = e), this.dispatchCellChangedEvent(r, e, i));
        }),
        (n.prototype.setAggData = function (t) {
          var e = this,
            r = this.aggData;
          if (((this.aggData = t), this.eventService)) {
            var o = function (s) {
              var a = e.aggData ? e.aggData[s] : void 0,
                l = r ? r[s] : void 0;
              if (a !== l) {
                var u = e.beans.columnModel.lookupGridColumn(s);
                u && e.dispatchCellChangedEvent(u, a, l);
              }
            };
            for (var i in this.aggData) o(i);
            for (var i in t) i in this.aggData || o(i);
          }
        }),
        (n.prototype.updateHasChildren = function () {
          var t =
              (this.group && !this.footer) ||
              (this.childrenAfterGroup && this.childrenAfterGroup.length > 0),
            e = this.beans.gridOptionsService.isRowModelType('serverSide');
          if (e) {
            var r = this.beans.gridOptionsService.get('treeData'),
              o = this.beans.gridOptionsService.get('isServerSideGroup');
            t = !this.stub && !this.footer && (r ? !!o && o(this.data) : !!this.group);
          }
          t !== this.__hasChildren &&
            ((this.__hasChildren = !!t),
            this.eventService &&
              this.eventService.dispatchEvent(
                this.createLocalRowEvent(n.EVENT_HAS_CHILDREN_CHANGED)
              ));
        }),
        (n.prototype.hasChildren = function () {
          return this.__hasChildren == null && this.updateHasChildren(), this.__hasChildren;
        }),
        (n.prototype.isEmptyRowGroupNode = function () {
          return this.group && Ge(this.childrenAfterGroup);
        }),
        (n.prototype.dispatchCellChangedEvent = function (t, e, r) {
          var o = { type: n.EVENT_CELL_CHANGED, node: this, column: t, newValue: e, oldValue: r };
          this.dispatchLocalEvent(o);
        }),
        (n.prototype.resetQuickFilterAggregateText = function () {
          this.quickFilterAggregateText = null;
        }),
        (n.prototype.isExpandable = function () {
          return this.footer
            ? !1
            : this.beans.columnModel.isPivotMode()
            ? this.hasChildren() && !this.leafGroup
            : this.hasChildren() || !!this.master;
        }),
        (n.prototype.isSelected = function () {
          return this.footer ? this.sibling.isSelected() : this.selected;
        }),
        (n.prototype.depthFirstSearch = function (t) {
          this.childrenAfterGroup &&
            this.childrenAfterGroup.forEach(function (e) {
              return e.depthFirstSearch(t);
            }),
            t(this);
        }),
        (n.prototype.calculateSelectedFromChildren = function () {
          var t,
            e = !1,
            r = !1,
            o = !1;
          if (!(!((t = this.childrenAfterGroup) === null || t === void 0) && t.length))
            return this.selectable ? this.selected : null;
          for (var i = 0; i < this.childrenAfterGroup.length; i++) {
            var s = this.childrenAfterGroup[i],
              a = s.isSelected();
            if (!s.selectable) {
              var l = s.calculateSelectedFromChildren();
              if (l === null) continue;
              a = l;
            }
            switch (a) {
              case !0:
                e = !0;
                break;
              case !1:
                r = !0;
                break;
              default:
                o = !0;
                break;
            }
          }
          if (!(o || (e && r))) return e ? !0 : r ? !1 : this.selectable ? this.selected : null;
        }),
        (n.prototype.setSelectedInitialValue = function (t) {
          this.selected = t;
        }),
        (n.prototype.selectThisNode = function (t, e, r) {
          r === void 0 && (r = 'api');
          var o = !this.selectable && t,
            i = this.selected === t;
          if (o || i) return !1;
          if (((this.selected = t), this.eventService)) {
            this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_ROW_SELECTED));
            var s = this.sibling;
            s && s.footer && s.dispatchLocalEvent(s.createLocalRowEvent(n.EVENT_ROW_SELECTED));
          }
          var a = br(br({}, this.createGlobalRowEvent(g.EVENT_ROW_SELECTED)), {
            event: e || null,
            source: r,
          });
          return this.beans.eventService.dispatchEvent(a), !0;
        }),
        (n.prototype.setSelected = function (t, e, r) {
          if ((e === void 0 && (e = !1), r === void 0 && (r = 'api'), typeof r == 'boolean')) {
            console.warn(
              'AG Grid: since version v30, rowNode.setSelected() property `suppressFinishActions` has been removed, please use `gridApi.setNodesSelected()` for bulk actions, and the event `source` property for ignoring events instead.'
            );
            return;
          }
          this.setSelectedParams({ newValue: t, clearSelection: e, rangeSelect: !1, source: r });
        }),
        (n.prototype.setSelectedParams = function (t) {
          return this.rowPinned
            ? (console.warn('AG Grid: cannot select pinned rows'), 0)
            : this.id === void 0
            ? (console.warn('AG Grid: cannot select node until id for node is known'), 0)
            : this.beans.selectionService.setNodesSelected(
                br(br({}, t), { nodes: [this.footer ? this.sibling : this] })
              );
        }),
        (n.prototype.isRowPinned = function () {
          return this.rowPinned === 'top' || this.rowPinned === 'bottom';
        }),
        (n.prototype.isParentOfNode = function (t) {
          for (var e = this.parent; e; ) {
            if (e === t) return !0;
            e = e.parent;
          }
          return !1;
        }),
        (n.prototype.addEventListener = function (t, e) {
          var r, o;
          this.eventService || (this.eventService = new xt()),
            this.beans.frameworkOverrides.shouldWrapOutgoing &&
              !this.frameworkEventListenerService &&
              (this.eventService.setFrameworkOverrides(this.beans.frameworkOverrides),
              (this.frameworkEventListenerService = new tn(this.beans.frameworkOverrides)));
          var i =
            (o =
              (r = this.frameworkEventListenerService) === null || r === void 0
                ? void 0
                : r.wrap(e)) !== null && o !== void 0
              ? o
              : e;
          this.eventService.addEventListener(t, i);
        }),
        (n.prototype.removeEventListener = function (t, e) {
          var r, o;
          if (this.eventService) {
            var i =
              (o =
                (r = this.frameworkEventListenerService) === null || r === void 0
                  ? void 0
                  : r.unwrap(e)) !== null && o !== void 0
                ? o
                : e;
            this.eventService.removeEventListener(t, i),
              this.eventService.noRegisteredListenersExist() && (this.eventService = null);
          }
        }),
        (n.prototype.onMouseEnter = function () {
          this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_MOUSE_ENTER));
        }),
        (n.prototype.onMouseLeave = function () {
          this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_MOUSE_LEAVE));
        }),
        (n.prototype.getFirstChildOfFirstChild = function (t) {
          for (var e = this, r = !0, o = !1, i = null; r && !o; ) {
            var s = e.parent,
              a = P(s) && e.firstChild;
            a ? s.rowGroupColumn === t && ((o = !0), (i = s)) : (r = !1), (e = s);
          }
          return o ? i : null;
        }),
        (n.prototype.isFullWidthCell = function () {
          if (this.detail) return !0;
          var t = this.beans.gridOptionsService.getCallback('isFullWidthRow');
          return t ? t({ rowNode: this }) : !1;
        }),
        (n.prototype.getRoute = function () {
          if (this.key != null) {
            for (var t = [], e = this; e.key != null; ) t.push(e.key), (e = e.parent);
            return t.reverse();
          }
        }),
        (n.prototype.createFooter = function () {
          var t = this;
          if (!this.sibling) {
            var e = new Set(['eventService', '__objectId', 'sticky']),
              r = new n(this.beans);
            Object.keys(this).forEach(function (o) {
              e.has(o) || (r[o] = t[o]);
            }),
              (r.footer = !0),
              r.setRowTop(null),
              r.setRowIndex(null),
              (r.oldRowTop = null),
              (r.id = 'rowGroupFooter_' + this.id),
              (r.sibling = this),
              (this.sibling = r);
          }
        }),
        (n.prototype.destroyFooter = function () {
          this.sibling &&
            (this.sibling.setRowTop(null), this.sibling.setRowIndex(null), (this.sibling = void 0));
        }),
        (n.ID_PREFIX_ROW_GROUP = 'row-group-'),
        (n.ID_PREFIX_TOP_PINNED = 't-'),
        (n.ID_PREFIX_BOTTOM_PINNED = 'b-'),
        (n.OBJECT_ID_SEQUENCE = 0),
        (n.EVENT_ROW_SELECTED = 'rowSelected'),
        (n.EVENT_DATA_CHANGED = 'dataChanged'),
        (n.EVENT_CELL_CHANGED = 'cellChanged'),
        (n.EVENT_ALL_CHILDREN_COUNT_CHANGED = 'allChildrenCountChanged'),
        (n.EVENT_MASTER_CHANGED = 'masterChanged'),
        (n.EVENT_GROUP_CHANGED = 'groupChanged'),
        (n.EVENT_MOUSE_ENTER = 'mouseEnter'),
        (n.EVENT_MOUSE_LEAVE = 'mouseLeave'),
        (n.EVENT_HEIGHT_CHANGED = 'heightChanged'),
        (n.EVENT_TOP_CHANGED = 'topChanged'),
        (n.EVENT_DISPLAYED_CHANGED = 'displayedChanged'),
        (n.EVENT_FIRST_CHILD_CHANGED = 'firstChildChanged'),
        (n.EVENT_LAST_CHILD_CHANGED = 'lastChildChanged'),
        (n.EVENT_CHILD_INDEX_CHANGED = 'childIndexChanged'),
        (n.EVENT_ROW_INDEX_CHANGED = 'rowIndexChanged'),
        (n.EVENT_EXPANDED_CHANGED = 'expandedChanged'),
        (n.EVENT_HAS_CHILDREN_CHANGED = 'hasChildrenChanged'),
        (n.EVENT_SELECTABLE_CHANGED = 'selectableChanged'),
        (n.EVENT_UI_LEVEL_CHANGED = 'uiLevelChanged'),
        (n.EVENT_HIGHLIGHT_CHANGED = 'rowHighlightChanged'),
        (n.EVENT_DRAGGING_CHANGED = 'draggingChanged'),
        n
      );
    })(),
    ih = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ii = function () {
      return (
        (ii =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        ii.apply(this, arguments)
      );
    },
    kl = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Wl = (function (n) {
      ih(t, n);
      function t() {
        return (
          n.call(
            this,
            `
            <div class="ag-selection-checkbox" role="presentation">
                <ag-checkbox role="presentation" ref="eCheckbox"></ag-checkbox>
            </div>`
          ) || this
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          this.eCheckbox.setPassive(!0);
        }),
        (t.prototype.getCheckboxId = function () {
          return this.eCheckbox.getInputElement().id;
        }),
        (t.prototype.onDataChanged = function () {
          this.onSelectionChanged();
        }),
        (t.prototype.onSelectableChanged = function () {
          this.showOrHideSelect();
        }),
        (t.prototype.onSelectionChanged = function () {
          var e = this.rowNode.isSelected();
          this.eCheckbox.setValue(e, !0);
        }),
        (t.prototype.onClicked = function (e, r, o) {
          return this.rowNode.setSelectedParams({
            newValue: e,
            rangeSelect: o.shiftKey,
            groupSelectsFiltered: r,
            event: o,
            source: 'checkboxSelected',
          });
        }),
        (t.prototype.init = function (e) {
          var r = this;
          (this.rowNode = e.rowNode),
            (this.column = e.column),
            (this.overrides = e.overrides),
            this.onSelectionChanged(),
            this.addManagedListener(this.eCheckbox.getInputElement(), 'dblclick', function (a) {
              it(a);
            }),
            this.addManagedListener(this.eCheckbox.getInputElement(), 'click', function (a) {
              it(a);
              var l = r.gridOptionsService.get('groupSelectsFiltered'),
                u = r.eCheckbox.getValue();
              if (r.shouldHandleIndeterminateState(u, l)) {
                var c = r.onClicked(!0, l, a || {});
                c === 0 && r.onClicked(!1, l, a);
              } else u ? r.onClicked(!1, l, a) : r.onClicked(!0, l, a || {});
            }),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_ROW_SELECTED,
              this.onSelectionChanged.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_DATA_CHANGED,
              this.onDataChanged.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_SELECTABLE_CHANGED,
              this.onSelectableChanged.bind(this)
            );
          var o = this.gridOptionsService.get('isRowSelectable'),
            i = o || typeof this.getIsVisible() == 'function';
          if (i) {
            var s = this.showOrHideSelect.bind(this);
            this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, s),
              this.addManagedListener(this.rowNode, U.EVENT_DATA_CHANGED, s),
              this.addManagedListener(this.rowNode, U.EVENT_CELL_CHANGED, s),
              this.showOrHideSelect();
          }
          this.eCheckbox.getInputElement().setAttribute('tabindex', '-1');
        }),
        (t.prototype.shouldHandleIndeterminateState = function (e, r) {
          return (
            r &&
            (this.eCheckbox.getPreviousValue() === void 0 || e === void 0) &&
            this.gridOptionsService.isRowModelType('clientSide')
          );
        }),
        (t.prototype.showOrHideSelect = function () {
          var e,
            r,
            o,
            i,
            s = this.rowNode.selectable,
            a = this.getIsVisible();
          if (s)
            if (typeof a == 'function') {
              var l = (e = this.overrides) === null || e === void 0 ? void 0 : e.callbackParams,
                u =
                  (r = this.column) === null || r === void 0
                    ? void 0
                    : r.createColumnFunctionCallbackParams(this.rowNode);
              s = u ? a(ii(ii({}, l), u)) : !1;
            } else s = a ?? !1;
          var c =
            (o = this.column) === null || o === void 0
              ? void 0
              : o.getColDef().showDisabledCheckboxes;
          if (c) {
            this.eCheckbox.setDisabled(!s), this.setVisible(!0), this.setDisplayed(!0);
            return;
          }
          if (!((i = this.overrides) === null || i === void 0) && i.removeHidden) {
            this.setDisplayed(s);
            return;
          }
          this.setVisible(s);
        }),
        (t.prototype.getIsVisible = function () {
          var e, r;
          return this.overrides
            ? this.overrides.isVisible
            : (r = (e = this.column) === null || e === void 0 ? void 0 : e.getColDef()) === null ||
              r === void 0
            ? void 0
            : r.checkboxSelection;
        }),
        kl([L('eCheckbox')], t.prototype, 'eCheckbox', void 0),
        kl([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    Fr;
  (function (n) {
    (n[(n.Up = 0)] = 'Up'), (n[(n.Down = 1)] = 'Down');
  })(Fr || (Fr = {}));
  var Ue;
  (function (n) {
    (n[(n.Left = 0)] = 'Left'), (n[(n.Right = 1)] = 'Right');
  })(Ue || (Ue = {}));
  var nh = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    pr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ni = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    },
    Te;
  (function (n) {
    (n[(n.ToolPanel = 0)] = 'ToolPanel'),
      (n[(n.HeaderCell = 1)] = 'HeaderCell'),
      (n[(n.RowDrag = 2)] = 'RowDrag'),
      (n[(n.ChartPanel = 3)] = 'ChartPanel'),
      (n[(n.AdvancedFilterBuilder = 4)] = 'AdvancedFilterBuilder');
  })(Te || (Te = {}));
  var he = (function (n) {
      nh(t, n);
      function t() {
        var r = (n !== null && n.apply(this, arguments)) || this;
        return (r.dragSourceAndParamsList = []), (r.dropTargets = []), r;
      }
      (e = t),
        (t.prototype.init = function () {
          (this.ePinnedIcon = Ze('columnMovePin', this.gridOptionsService, null)),
            (this.eHideIcon = Ze('columnMoveHide', this.gridOptionsService, null)),
            (this.eMoveIcon = Ze('columnMoveMove', this.gridOptionsService, null)),
            (this.eLeftIcon = Ze('columnMoveLeft', this.gridOptionsService, null)),
            (this.eRightIcon = Ze('columnMoveRight', this.gridOptionsService, null)),
            (this.eGroupIcon = Ze('columnMoveGroup', this.gridOptionsService, null)),
            (this.eAggregateIcon = Ze('columnMoveValue', this.gridOptionsService, null)),
            (this.ePivotIcon = Ze('columnMovePivot', this.gridOptionsService, null)),
            (this.eDropNotAllowedIcon = Ze('dropNotAllowed', this.gridOptionsService, null));
        }),
        (t.prototype.addDragSource = function (r, o) {
          o === void 0 && (o = !1);
          var i = {
            eElement: r.eElement,
            dragStartPixels: r.dragStartPixels,
            onDragStart: this.onDragStart.bind(this, r),
            onDragStop: this.onDragStop.bind(this),
            onDragging: this.onDragging.bind(this),
            includeTouch: o,
          };
          this.dragSourceAndParamsList.push({ params: i, dragSource: r }),
            this.dragService.addDragSource(i);
        }),
        (t.prototype.removeDragSource = function (r) {
          var o = this.dragSourceAndParamsList.find(function (i) {
            return i.dragSource === r;
          });
          o && (this.dragService.removeDragSource(o.params), Ee(this.dragSourceAndParamsList, o));
        }),
        (t.prototype.clearDragSourceParamsList = function () {
          var r = this;
          this.dragSourceAndParamsList.forEach(function (o) {
            return r.dragService.removeDragSource(o.params);
          }),
            (this.dragSourceAndParamsList.length = 0),
            (this.dropTargets.length = 0);
        }),
        (t.prototype.nudge = function () {
          this.dragging && this.onDragging(this.eventLastTime, !0);
        }),
        (t.prototype.onDragStart = function (r, o) {
          (this.dragging = !0),
            (this.dragSource = r),
            (this.eventLastTime = o),
            (this.dragItem = this.dragSource.getDragItem()),
            this.dragSource.onDragStarted && this.dragSource.onDragStarted(),
            this.createGhost();
        }),
        (t.prototype.onDragStop = function (r) {
          if (
            ((this.eventLastTime = null),
            (this.dragging = !1),
            this.dragSource.onDragStopped && this.dragSource.onDragStopped(),
            this.lastDropTarget && this.lastDropTarget.onDragStop)
          ) {
            var o = this.createDropTargetEvent(this.lastDropTarget, r, null, null, !1);
            this.lastDropTarget.onDragStop(o);
          }
          (this.lastDropTarget = null), (this.dragItem = null), this.removeGhost();
        }),
        (t.prototype.onDragging = function (r, o) {
          var i = this,
            s,
            a,
            l,
            u,
            c = this.getHorizontalDirection(r),
            p = this.getVerticalDirection(r);
          (this.eventLastTime = r), this.positionGhost(r);
          var d = this.dropTargets.filter(function (y) {
              return i.isMouseOnDropTarget(r, y);
            }),
            h = this.findCurrentDropTarget(r, d);
          if (h !== this.lastDropTarget)
            this.leaveLastTargetIfExists(r, c, p, o),
              this.lastDropTarget !== null &&
                h === null &&
                ((a = (s = this.dragSource).onGridExit) === null ||
                  a === void 0 ||
                  a.call(s, this.dragItem)),
              this.lastDropTarget === null &&
                h !== null &&
                ((u = (l = this.dragSource).onGridEnter) === null ||
                  u === void 0 ||
                  u.call(l, this.dragItem)),
              this.enterDragTargetIfExists(h, r, c, p, o),
              (this.lastDropTarget = h);
          else if (h && h.onDragging) {
            var f = this.createDropTargetEvent(h, r, c, p, o);
            h.onDragging(f);
          }
        }),
        (t.prototype.getAllContainersFromDropTarget = function (r) {
          var o = r.getSecondaryContainers ? r.getSecondaryContainers() : null,
            i = [[r.getContainer()]];
          return o ? i.concat(o) : i;
        }),
        (t.prototype.allContainersIntersect = function (r, o) {
          var i, s;
          try {
            for (var a = ni(o), l = a.next(); !l.done; l = a.next()) {
              var u = l.value,
                c = u.getBoundingClientRect();
              if (c.width === 0 || c.height === 0) return !1;
              var p = r.clientX >= c.left && r.clientX < c.right,
                d = r.clientY >= c.top && r.clientY < c.bottom;
              if (!p || !d) return !1;
            }
          } catch (h) {
            i = { error: h };
          } finally {
            try {
              l && !l.done && (s = a.return) && s.call(a);
            } finally {
              if (i) throw i.error;
            }
          }
          return !0;
        }),
        (t.prototype.isMouseOnDropTarget = function (r, o) {
          var i,
            s,
            a = this.getAllContainersFromDropTarget(o),
            l = !1;
          try {
            for (var u = ni(a), c = u.next(); !c.done; c = u.next()) {
              var p = c.value;
              if (this.allContainersIntersect(r, p)) {
                l = !0;
                break;
              }
            }
          } catch (d) {
            i = { error: d };
          } finally {
            try {
              c && !c.done && (s = u.return) && s.call(u);
            } finally {
              if (i) throw i.error;
            }
          }
          return o.targetContainsSource && !o.getContainer().contains(this.dragSource.eElement)
            ? !1
            : l && o.isInterestedIn(this.dragSource.type, this.dragSource.eElement);
        }),
        (t.prototype.findCurrentDropTarget = function (r, o) {
          var i,
            s,
            a,
            l,
            u = o.length;
          if (u === 0) return null;
          if (u === 1) return o[0];
          var c = this.gridOptionsService.getRootNode(),
            p = c.elementsFromPoint(r.clientX, r.clientY);
          try {
            for (var d = ni(p), h = d.next(); !h.done; h = d.next()) {
              var f = h.value;
              try {
                for (var y = ((a = void 0), ni(o)), m = y.next(); !m.done; m = y.next()) {
                  var C = m.value,
                    w = Ea(this.getAllContainersFromDropTarget(C));
                  if (w.indexOf(f) !== -1) return C;
                }
              } catch (E) {
                a = { error: E };
              } finally {
                try {
                  m && !m.done && (l = y.return) && l.call(y);
                } finally {
                  if (a) throw a.error;
                }
              }
            }
          } catch (E) {
            i = { error: E };
          } finally {
            try {
              h && !h.done && (s = d.return) && s.call(d);
            } finally {
              if (i) throw i.error;
            }
          }
          return null;
        }),
        (t.prototype.enterDragTargetIfExists = function (r, o, i, s, a) {
          if (r) {
            if (r.onDragEnter) {
              var l = this.createDropTargetEvent(r, o, i, s, a);
              r.onDragEnter(l);
            }
            this.setGhostIcon(r.getIconName ? r.getIconName() : null);
          }
        }),
        (t.prototype.leaveLastTargetIfExists = function (r, o, i, s) {
          if (this.lastDropTarget) {
            if (this.lastDropTarget.onDragLeave) {
              var a = this.createDropTargetEvent(this.lastDropTarget, r, o, i, s);
              this.lastDropTarget.onDragLeave(a);
            }
            this.setGhostIcon(null);
          }
        }),
        (t.prototype.addDropTarget = function (r) {
          this.dropTargets.push(r);
        }),
        (t.prototype.removeDropTarget = function (r) {
          this.dropTargets = this.dropTargets.filter(function (o) {
            return o.getContainer() !== r.getContainer();
          });
        }),
        (t.prototype.hasExternalDropZones = function () {
          return this.dropTargets.some(function (r) {
            return r.external;
          });
        }),
        (t.prototype.findExternalZone = function (r) {
          var o = this.dropTargets.filter(function (i) {
            return i.external;
          });
          return (
            o.find(function (i) {
              return i.getContainer() === r.getContainer();
            }) || null
          );
        }),
        (t.prototype.getHorizontalDirection = function (r) {
          var o = this.eventLastTime && this.eventLastTime.clientX,
            i = r.clientX;
          return o === i ? null : o > i ? Ue.Left : Ue.Right;
        }),
        (t.prototype.getVerticalDirection = function (r) {
          var o = this.eventLastTime && this.eventLastTime.clientY,
            i = r.clientY;
          return o === i ? null : o > i ? Fr.Up : Fr.Down;
        }),
        (t.prototype.createDropTargetEvent = function (r, o, i, s, a) {
          var l = r.getContainer(),
            u = l.getBoundingClientRect(),
            c = this,
            p = c.gridApi,
            d = c.columnApi,
            h = c.dragItem,
            f = c.dragSource,
            y = o.clientX - u.left,
            m = o.clientY - u.top;
          return {
            event: o,
            x: y,
            y: m,
            vDirection: s,
            hDirection: i,
            dragSource: f,
            fromNudge: a,
            dragItem: h,
            api: p,
            columnApi: d,
            dropZoneTarget: l,
          };
        }),
        (t.prototype.positionGhost = function (r) {
          var o = this.eGhost;
          if (o) {
            var i = o.getBoundingClientRect(),
              s = i.height,
              a = Ya() - 2,
              l = qa() - 2,
              u = Bn(o.offsetParent),
              c = r.clientY,
              p = r.clientX,
              d = c - u.top - s / 2,
              h = p - u.left - 10,
              f = this.gridOptionsService.getDocument(),
              y = f.defaultView || window,
              m = y.pageYOffset || f.documentElement.scrollTop,
              C = y.pageXOffset || f.documentElement.scrollLeft;
            a > 0 && h + o.clientWidth > a + C && (h = a + C - o.clientWidth),
              h < 0 && (h = 0),
              l > 0 && d + o.clientHeight > l + m && (d = l + m - o.clientHeight),
              d < 0 && (d = 0),
              (o.style.left = ''.concat(h, 'px')),
              (o.style.top = ''.concat(d, 'px'));
          }
        }),
        (t.prototype.removeGhost = function () {
          this.eGhost && this.eGhostParent && this.eGhostParent.removeChild(this.eGhost),
            (this.eGhost = null);
        }),
        (t.prototype.createGhost = function () {
          (this.eGhost = Re(e.GHOST_TEMPLATE)),
            this.mouseEventService.stampTopLevelGridCompWithGridInstance(this.eGhost);
          var r = this.environment.getTheme().theme;
          r && this.eGhost.classList.add(r),
            (this.eGhostIcon = this.eGhost.querySelector('.ag-dnd-ghost-icon')),
            this.setGhostIcon(null);
          var o = this.eGhost.querySelector('.ag-dnd-ghost-label'),
            i = this.dragSource.dragItemName;
          Ho(i) && (i = i()),
            (o.innerHTML = ae(i) || ''),
            (this.eGhost.style.height = '25px'),
            (this.eGhost.style.top = '20px'),
            (this.eGhost.style.left = '20px');
          var s = this.gridOptionsService.getDocument(),
            a = null,
            l = null;
          try {
            a = s.fullscreenElement;
          } catch {
          } finally {
            a || (a = this.gridOptionsService.getRootNode());
            var u = a.querySelector('body');
            u
              ? (l = u)
              : a instanceof ShadowRoot
              ? (l = a)
              : a instanceof Document
              ? (l = a == null ? void 0 : a.documentElement)
              : (l = a);
          }
          (this.eGhostParent = l),
            this.eGhostParent
              ? this.eGhostParent.appendChild(this.eGhost)
              : console.warn(
                  'AG Grid: could not find document body, it is needed for dragging columns'
                );
        }),
        (t.prototype.setGhostIcon = function (r, o) {
          o === void 0 && (o = !1), de(this.eGhostIcon);
          var i = null;
          switch (
            (r ||
              (r = this.dragSource.getDefaultIconName
                ? this.dragSource.getDefaultIconName()
                : e.ICON_NOT_ALLOWED),
            r)
          ) {
            case e.ICON_PINNED:
              i = this.ePinnedIcon;
              break;
            case e.ICON_MOVE:
              i = this.eMoveIcon;
              break;
            case e.ICON_LEFT:
              i = this.eLeftIcon;
              break;
            case e.ICON_RIGHT:
              i = this.eRightIcon;
              break;
            case e.ICON_GROUP:
              i = this.eGroupIcon;
              break;
            case e.ICON_AGGREGATE:
              i = this.eAggregateIcon;
              break;
            case e.ICON_PIVOT:
              i = this.ePivotIcon;
              break;
            case e.ICON_NOT_ALLOWED:
              i = this.eDropNotAllowedIcon;
              break;
            case e.ICON_HIDE:
              i = this.eHideIcon;
              break;
          }
          this.eGhostIcon.classList.toggle('ag-shake-left-to-right', o),
            !(
              i === this.eHideIcon && this.gridOptionsService.get('suppressDragLeaveHidesColumns')
            ) &&
              i &&
              this.eGhostIcon.appendChild(i);
        });
      var e;
      return (
        (t.ICON_PINNED = 'pinned'),
        (t.ICON_MOVE = 'move'),
        (t.ICON_LEFT = 'left'),
        (t.ICON_RIGHT = 'right'),
        (t.ICON_GROUP = 'group'),
        (t.ICON_AGGREGATE = 'aggregate'),
        (t.ICON_PIVOT = 'pivot'),
        (t.ICON_NOT_ALLOWED = 'notAllowed'),
        (t.ICON_HIDE = 'hide'),
        (t.GHOST_TEMPLATE = `<div class="ag-dnd-ghost ag-unselectable">
            <span class="ag-dnd-ghost-icon ag-shake-left-to-right"></span>
            <div class="ag-dnd-ghost-label"></div>
        </div>`),
        pr([v('dragService')], t.prototype, 'dragService', void 0),
        pr([v('mouseEventService')], t.prototype, 'mouseEventService', void 0),
        pr([v('columnApi')], t.prototype, 'columnApi', void 0),
        pr([v('gridApi')], t.prototype, 'gridApi', void 0),
        pr([F], t.prototype, 'init', null),
        pr([Se], t.prototype, 'clearDragSourceParamsList', null),
        (t = e = pr([x('dragAndDropService')], t)),
        t
      );
    })(D),
    si = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    io = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ai = (function (n) {
      si(t, n);
      function t(e, r, o, i, s, a) {
        var l = n.call(this) || this;
        return (
          (l.cellValueFn = e),
          (l.rowNode = r),
          (l.column = o),
          (l.customGui = i),
          (l.dragStartPixels = s),
          (l.suppressVisibilityChange = a),
          (l.dragSource = null),
          l
        );
      }
      return (
        (t.prototype.isCustomGui = function () {
          return this.customGui != null;
        }),
        (t.prototype.postConstruct = function () {
          if (
            (this.customGui
              ? this.setDragElement(this.customGui, this.dragStartPixels)
              : (this.setTemplate(
                  '<div class="ag-drag-handle ag-row-drag" aria-hidden="true"></div>'
                ),
                this.getGui().appendChild(ne('rowDrag', this.gridOptionsService, null)),
                this.addDragSource()),
            this.checkCompatibility(),
            !this.suppressVisibilityChange)
          ) {
            var e = this.gridOptionsService.get('rowDragManaged')
              ? new ah(this, this.beans, this.rowNode, this.column)
              : new sh(this, this.beans, this.rowNode, this.column);
            this.createManagedBean(e, this.beans.context);
          }
        }),
        (t.prototype.setDragElement = function (e, r) {
          this.setTemplateFromElement(e), this.addDragSource(r);
        }),
        (t.prototype.getSelectedNodes = function () {
          var e = this.gridOptionsService.get('rowDragMultiRow');
          if (!e) return [this.rowNode];
          var r = this.beans.selectionService.getSelectedNodes();
          return r.indexOf(this.rowNode) !== -1 ? r : [this.rowNode];
        }),
        (t.prototype.checkCompatibility = function () {
          var e = this.gridOptionsService.get('rowDragManaged'),
            r = this.gridOptionsService.get('treeData');
          r && e && V('If using row drag with tree data, you cannot have rowDragManaged=true');
        }),
        (t.prototype.getDragItem = function () {
          return {
            rowNode: this.rowNode,
            rowNodes: this.getSelectedNodes(),
            columns: this.column ? [this.column] : void 0,
            defaultTextValue: this.cellValueFn(),
          };
        }),
        (t.prototype.getRowDragText = function (e) {
          if (e) {
            var r = e.getColDef();
            if (r.rowDragText) return r.rowDragText;
          }
          return this.gridOptionsService.get('rowDragText');
        }),
        (t.prototype.addDragSource = function (e) {
          var r = this;
          e === void 0 && (e = 4), this.dragSource && this.removeDragSource();
          var o = this.localeService.getLocaleTextFunc();
          (this.dragSource = {
            type: Te.RowDrag,
            eElement: this.getGui(),
            dragItemName: function () {
              var i,
                s = r.getDragItem(),
                a = ((i = s.rowNodes) === null || i === void 0 ? void 0 : i.length) || 1,
                l = r.getRowDragText(r.column);
              return l
                ? l(s, a)
                : a === 1
                ? r.cellValueFn()
                : ''.concat(a, ' ').concat(o('rowDragRows', 'rows'));
            },
            getDragItem: function () {
              return r.getDragItem();
            },
            dragStartPixels: e,
            dragSourceDomDataKey: this.gridOptionsService.getDomDataKey(),
          }),
            this.beans.dragAndDropService.addDragSource(this.dragSource, !0);
        }),
        (t.prototype.removeDragSource = function () {
          this.dragSource && this.beans.dragAndDropService.removeDragSource(this.dragSource),
            (this.dragSource = null);
        }),
        io([v('beans')], t.prototype, 'beans', void 0),
        io([F], t.prototype, 'postConstruct', null),
        io([Se], t.prototype, 'removeDragSource', null),
        t
      );
    })(k),
    jl = (function (n) {
      si(t, n);
      function t(e, r, o) {
        var i = n.call(this) || this;
        return (i.parent = e), (i.rowNode = r), (i.column = o), i;
      }
      return (
        (t.prototype.setDisplayedOrVisible = function (e) {
          var r = { skipAriaHidden: !0 };
          if (e) this.parent.setDisplayed(!1, r);
          else {
            var o = !0,
              i = !1;
            this.column &&
              ((o = this.column.isRowDrag(this.rowNode) || this.parent.isCustomGui()),
              (i = Ho(this.column.getColDef().rowDrag))),
              i
                ? (this.parent.setDisplayed(!0, r), this.parent.setVisible(o, r))
                : (this.parent.setDisplayed(o, r), this.parent.setVisible(!0, r));
          }
        }),
        t
      );
    })(D),
    sh = (function (n) {
      si(t, n);
      function t(e, r, o, i) {
        var s = n.call(this, e, o, i) || this;
        return (s.beans = r), s;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addManagedPropertyListener('suppressRowDrag', this.onSuppressRowDrag.bind(this)),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_DATA_CHANGED,
              this.workOutVisibility.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_CELL_CHANGED,
              this.workOutVisibility.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_CELL_CHANGED,
              this.workOutVisibility.bind(this)
            ),
            this.addManagedListener(
              this.beans.eventService,
              g.EVENT_NEW_COLUMNS_LOADED,
              this.workOutVisibility.bind(this)
            ),
            this.workOutVisibility();
        }),
        (t.prototype.onSuppressRowDrag = function () {
          this.workOutVisibility();
        }),
        (t.prototype.workOutVisibility = function () {
          var e = this.gridOptionsService.get('suppressRowDrag');
          this.setDisplayedOrVisible(e);
        }),
        io([F], t.prototype, 'postConstruct', null),
        t
      );
    })(jl),
    ah = (function (n) {
      si(t, n);
      function t(e, r, o, i) {
        var s = n.call(this, e, o, i) || this;
        return (s.beans = r), s;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addManagedListener(
            this.beans.eventService,
            g.EVENT_SORT_CHANGED,
            this.workOutVisibility.bind(this)
          ),
            this.addManagedListener(
              this.beans.eventService,
              g.EVENT_FILTER_CHANGED,
              this.workOutVisibility.bind(this)
            ),
            this.addManagedListener(
              this.beans.eventService,
              g.EVENT_COLUMN_ROW_GROUP_CHANGED,
              this.workOutVisibility.bind(this)
            ),
            this.addManagedListener(
              this.beans.eventService,
              g.EVENT_NEW_COLUMNS_LOADED,
              this.workOutVisibility.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_DATA_CHANGED,
              this.workOutVisibility.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_CELL_CHANGED,
              this.workOutVisibility.bind(this)
            ),
            this.addManagedPropertyListener('suppressRowDrag', this.onSuppressRowDrag.bind(this)),
            this.workOutVisibility();
        }),
        (t.prototype.onSuppressRowDrag = function () {
          this.workOutVisibility();
        }),
        (t.prototype.workOutVisibility = function () {
          var e = this.beans.ctrlsService.getGridBodyCtrl(),
            r = e.getRowDragFeature(),
            o = r && r.shouldPreventRowMove(),
            i = this.gridOptionsService.get('suppressRowDrag'),
            s = this.beans.dragAndDropService.hasExternalDropZones(),
            a = (o && !s) || i;
          this.setDisplayedOrVisible(a);
        }),
        io([F], t.prototype, 'postConstruct', null),
        t
      );
    })(jl),
    lh = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    li = function () {
      return (
        (li =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        li.apply(this, arguments)
      );
    },
    no = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    uh = (function (n) {
      lh(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.init = function (e, r, o, i, s, a, l) {
          var u, c, p, d;
          (this.params = l),
            (this.eGui = r),
            (this.eCheckbox = o),
            (this.eExpanded = i),
            (this.eContracted = s),
            (this.comp = e),
            (this.compClass = a);
          var h = l.node;
          l.value;
          var f = l.colDef,
            y = this.isTopLevelFooter();
          if (!y) {
            var m = this.isEmbeddedRowMismatch();
            if (m) return;
            if (h.footer && this.gridOptionsService.get('groupHideOpenParents')) {
              var C = f && f.showRowGroup,
                w = h.rowGroupColumn && h.rowGroupColumn.getColId();
              if (C !== w) return;
            }
          }
          if ((this.setupShowingValueForOpenedParent(), this.findDisplayedGroupNode(), !y)) {
            var E =
                l.node.footer &&
                l.node.rowGroupIndex ===
                  this.columnModel.getRowGroupColumns().findIndex(function (N) {
                    var I;
                    return (
                      N.getColId() ===
                      ((I = l.colDef) === null || I === void 0 ? void 0 : I.showRowGroup)
                    );
                  }),
              S =
                this.gridOptionsService.get('groupDisplayType') != 'multipleColumns' ||
                this.gridOptionsService.get('treeData'),
              R =
                S ||
                (this.gridOptionsService.get('showOpenedGroup') &&
                  !l.node.footer &&
                  (!l.node.group ||
                    (l.node.rowGroupIndex != null &&
                      l.node.rowGroupIndex >
                        this.columnModel.getRowGroupColumns().findIndex(function (N) {
                          var I;
                          return (
                            N.getColId() ===
                            ((I = l.colDef) === null || I === void 0 ? void 0 : I.showRowGroup)
                          );
                        })))),
              O =
                !h.group &&
                (((u = this.params.colDef) === null || u === void 0 ? void 0 : u.field) ||
                  ((c = this.params.colDef) === null || c === void 0 ? void 0 : c.valueGetter)),
              b = this.isExpandable(),
              A =
                this.columnModel.isPivotMode() &&
                h.leafGroup &&
                ((p = h.rowGroupColumn) === null || p === void 0 ? void 0 : p.getColId()) ===
                  ((d = l.column) === null || d === void 0 ? void 0 : d.getColDef().showRowGroup),
              M = !this.showingValueForOpenedParent && !b && !O && !R && !E && !A;
            if (M) return;
          }
          this.addExpandAndContract(),
            this.addFullWidthRowDraggerIfNeeded(),
            this.addCheckboxIfNeeded(),
            this.addValueElement(),
            this.setupIndent(),
            this.refreshAriaExpanded();
        }),
        (t.prototype.getCellAriaRole = function () {
          var e,
            r,
            o = (e = this.params.colDef) === null || e === void 0 ? void 0 : e.cellAriaRole,
            i =
              (r = this.params.column) === null || r === void 0
                ? void 0
                : r.getColDef().cellAriaRole;
          return o || i || 'gridcell';
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this), (this.expandListener = null);
        }),
        (t.prototype.refreshAriaExpanded = function () {
          var e = this.params,
            r = e.node,
            o = e.eGridCell;
          if (
            (this.expandListener && (this.expandListener = this.expandListener()),
            !this.isExpandable())
          ) {
            Ba(o);
            return;
          }
          var i = function () {
            Pt(o, !!r.expanded);
          };
          (this.expandListener = this.addManagedListener(r, U.EVENT_EXPANDED_CHANGED, i) || null),
            i();
        }),
        (t.prototype.isTopLevelFooter = function () {
          if (
            !this.gridOptionsService.get('groupIncludeTotalFooter') ||
            this.params.value != null ||
            this.params.node.level != -1
          )
            return !1;
          var e = this.params.colDef,
            r = e == null;
          if (r || e.showRowGroup === !0) return !0;
          var o = this.columnModel.getRowGroupColumns();
          if (!o || o.length === 0) return !0;
          var i = o[0];
          return i.getId() === e.showRowGroup;
        }),
        (t.prototype.isEmbeddedRowMismatch = function () {
          if (!this.params.fullWidth || !this.gridOptionsService.get('embedFullWidthRows'))
            return !1;
          var e = this.params.pinned === 'left',
            r = this.params.pinned === 'right',
            o = !e && !r;
          return this.gridOptionsService.get('enableRtl')
            ? this.columnModel.isPinningLeft()
              ? !r
              : !o
            : this.columnModel.isPinningLeft()
            ? !e
            : !o;
        }),
        (t.prototype.findDisplayedGroupNode = function () {
          var e = this.params.column,
            r = this.params.node;
          if (this.showingValueForOpenedParent)
            for (var o = r.parent; o != null; ) {
              if (o.rowGroupColumn && e.isRowGroupDisplayed(o.rowGroupColumn.getId())) {
                this.displayedGroupNode = o;
                break;
              }
              o = o.parent;
            }
          H(this.displayedGroupNode) && (this.displayedGroupNode = r);
        }),
        (t.prototype.setupShowingValueForOpenedParent = function () {
          var e = this.params.node,
            r = this.params.column;
          if (!this.gridOptionsService.get('groupHideOpenParents')) {
            this.showingValueForOpenedParent = !1;
            return;
          }
          if (!e.groupData) {
            this.showingValueForOpenedParent = !1;
            return;
          }
          var o = e.rowGroupColumn != null;
          if (o) {
            var i = e.rowGroupColumn.getId(),
              s = r.isRowGroupDisplayed(i);
            if (s) {
              this.showingValueForOpenedParent = !1;
              return;
            }
          }
          var a = e.groupData[r.getId()] != null;
          this.showingValueForOpenedParent = a;
        }),
        (t.prototype.addValueElement = function () {
          this.displayedGroupNode.footer
            ? this.addFooterValue()
            : (this.addGroupValue(), this.addChildCount());
        }),
        (t.prototype.addGroupValue = function () {
          var e,
            r = this.adjustParamsWithDetailsFromRelatedColumn(),
            o = this.getInnerCompDetails(r),
            i = r.valueFormatted,
            s = r.value,
            a = i;
          if (a == null) {
            var l =
              this.displayedGroupNode.rowGroupColumn &&
              ((e = this.params.column) === null || e === void 0
                ? void 0
                : e.isRowGroupDisplayed(this.displayedGroupNode.rowGroupColumn.getId()));
            if (this.displayedGroupNode.key === '' && this.displayedGroupNode.group && l) {
              var u = this.localeService.getLocaleTextFunc();
              a = u('blanks', '(Blanks)');
            } else a = s ?? null;
          }
          this.comp.setInnerRenderer(o, a);
        }),
        (t.prototype.adjustParamsWithDetailsFromRelatedColumn = function () {
          var e = this.displayedGroupNode.rowGroupColumn,
            r = this.params.column;
          if (!e) return this.params;
          var o = r != null;
          if (o) {
            var i = r.isRowGroupDisplayed(e.getId());
            if (!i) return this.params;
          }
          var s = this.params,
            a = this.params,
            l = a.value,
            u = a.node,
            c = this.valueFormatterService.formatValue(e, u, l),
            p = li(li({}, s), { valueFormatted: c });
          return p;
        }),
        (t.prototype.addFooterValue = function () {
          var e = this.params.footerValueGetter,
            r = '';
          if (e) {
            var o = qi(this.params);
            (o.value = this.params.value),
              typeof e == 'function'
                ? (r = e(o))
                : typeof e == 'string'
                ? (r = this.expressionService.evaluate(e, o))
                : console.warn(
                    'AG Grid: footerValueGetter should be either a function or a string (expression)'
                  );
          } else {
            var i = this.localeService.getLocaleTextFunc(),
              s = i('footerTotal', 'Total');
            r = s + ' ' + (this.params.value != null ? this.params.value : '');
          }
          var a = this.getInnerCompDetails(this.params);
          this.comp.setInnerRenderer(a, r);
        }),
        (t.prototype.getInnerCompDetails = function (e) {
          var r = this;
          if (e.fullWidth)
            return this.userComponentFactory.getFullWidthGroupRowInnerCellRenderer(
              this.gridOptionsService.get('groupRowRendererParams'),
              e
            );
          var o = this.userComponentFactory.getInnerRendererDetails(e, e),
            i = function (c) {
              return c && c.componentClass == r.compClass;
            };
          if (o && !i(o)) return o;
          var s = this.displayedGroupNode.rowGroupColumn,
            a = s ? s.getColDef() : void 0;
          if (a) {
            var l = this.userComponentFactory.getCellRendererDetails(a, e);
            if (l && !i(l)) return l;
            if (i(l) && a.cellRendererParams && a.cellRendererParams.innerRenderer) {
              var u = this.userComponentFactory.getInnerRendererDetails(a.cellRendererParams, e);
              return u;
            }
          }
        }),
        (t.prototype.addChildCount = function () {
          this.params.suppressCount ||
            (this.addManagedListener(
              this.displayedGroupNode,
              U.EVENT_ALL_CHILDREN_COUNT_CHANGED,
              this.updateChildCount.bind(this)
            ),
            this.updateChildCount());
        }),
        (t.prototype.updateChildCount = function () {
          var e = this.displayedGroupNode.allChildrenCount,
            r = this.isShowRowGroupForThisRow(),
            o = r && e != null && e >= 0,
            i = o ? '('.concat(e, ')') : '';
          this.comp.setChildCount(i);
        }),
        (t.prototype.isShowRowGroupForThisRow = function () {
          if (this.gridOptionsService.get('treeData')) return !0;
          var e = this.displayedGroupNode.rowGroupColumn;
          if (!e) return !1;
          var r = this.params.column,
            o = r == null || r.isRowGroupDisplayed(e.getId());
          return o;
        }),
        (t.prototype.addExpandAndContract = function () {
          var e,
            r = this.params,
            o = ne('groupExpanded', this.gridOptionsService, null),
            i = ne('groupContracted', this.gridOptionsService, null);
          o && this.eExpanded.appendChild(o), i && this.eContracted.appendChild(i);
          var s = r.eGridCell,
            a =
              ((e = this.params.column) === null || e === void 0
                ? void 0
                : e.isCellEditable(r.node)) && this.gridOptionsService.get('enableGroupEdit');
          !a &&
            this.isExpandable() &&
            !r.suppressDoubleClickExpand &&
            this.addManagedListener(s, 'dblclick', this.onCellDblClicked.bind(this)),
            this.addManagedListener(this.eExpanded, 'click', this.onExpandClicked.bind(this)),
            this.addManagedListener(this.eContracted, 'click', this.onExpandClicked.bind(this)),
            this.addManagedListener(s, 'keydown', this.onKeyDown.bind(this)),
            this.addManagedListener(
              r.node,
              U.EVENT_EXPANDED_CHANGED,
              this.showExpandAndContractIcons.bind(this)
            ),
            this.showExpandAndContractIcons();
          var l = this.onRowNodeIsExpandableChanged.bind(this);
          this.addManagedListener(this.displayedGroupNode, U.EVENT_ALL_CHILDREN_COUNT_CHANGED, l),
            this.addManagedListener(this.displayedGroupNode, U.EVENT_MASTER_CHANGED, l),
            this.addManagedListener(this.displayedGroupNode, U.EVENT_GROUP_CHANGED, l),
            this.addManagedListener(this.displayedGroupNode, U.EVENT_HAS_CHILDREN_CHANGED, l);
        }),
        (t.prototype.onExpandClicked = function (e) {
          nt(e) || (it(e), this.onExpandOrContract(e));
        }),
        (t.prototype.onExpandOrContract = function (e) {
          var r = this.displayedGroupNode,
            o = !r.expanded;
          !o && r.sticky && this.scrollToStickyNode(r), r.setExpanded(o, e);
        }),
        (t.prototype.scrollToStickyNode = function (e) {
          var r = this.ctrlsService.getGridBodyCtrl(),
            o = r.getScrollFeature();
          o.setVerticalScrollPosition(e.rowTop - e.stickyRowTop);
        }),
        (t.prototype.isExpandable = function () {
          if (this.showingValueForOpenedParent) return !0;
          var e = this.displayedGroupNode,
            r = this.columnModel.isPivotMode() && e.leafGroup,
            o = e.isExpandable() && !e.footer && !r;
          if (!o) return !1;
          var i = this.params.column,
            s = i != null && typeof i.getColDef().showRowGroup == 'string';
          if (s) {
            var a = this.isShowRowGroupForThisRow();
            return a;
          }
          return !0;
        }),
        (t.prototype.showExpandAndContractIcons = function () {
          var e = this,
            r = e.params,
            o = e.displayedGroupNode,
            i = e.columnModel,
            s = r.node,
            a = this.isExpandable();
          if (a) {
            var l = this.showingValueForOpenedParent ? !0 : s.expanded;
            this.comp.setExpandedDisplayed(l), this.comp.setContractedDisplayed(!l);
          } else this.comp.setExpandedDisplayed(!1), this.comp.setContractedDisplayed(!1);
          var u = i.isPivotMode(),
            c = u && o.leafGroup,
            p = a && !c,
            d = s.footer && s.level === -1;
          this.comp.addOrRemoveCssClass('ag-cell-expandable', p),
            this.comp.addOrRemoveCssClass('ag-row-group', p),
            u
              ? this.comp.addOrRemoveCssClass('ag-pivot-leaf-group', c)
              : d || this.comp.addOrRemoveCssClass('ag-row-group-leaf-indent', !p);
        }),
        (t.prototype.onRowNodeIsExpandableChanged = function () {
          this.showExpandAndContractIcons(), this.setIndent(), this.refreshAriaExpanded();
        }),
        (t.prototype.setupIndent = function () {
          var e = this.params.node,
            r = this.params.suppressPadding;
          r ||
            (this.addManagedListener(e, U.EVENT_UI_LEVEL_CHANGED, this.setIndent.bind(this)),
            this.setIndent());
        }),
        (t.prototype.setIndent = function () {
          if (!this.gridOptionsService.get('groupHideOpenParents')) {
            var e = this.params,
              r = e.node,
              o = !!e.colDef,
              i = this.gridOptionsService.get('treeData'),
              s = !o || i || e.colDef.showRowGroup === !0,
              a = s ? r.uiLevel : 0;
            this.indentClass && this.comp.addOrRemoveCssClass(this.indentClass, !1),
              (this.indentClass = 'ag-row-group-indent-' + a),
              this.comp.addOrRemoveCssClass(this.indentClass, !0);
          }
        }),
        (t.prototype.addFullWidthRowDraggerIfNeeded = function () {
          var e = this;
          if (!(!this.params.fullWidth || !this.params.rowDrag)) {
            var r = new ai(function () {
              return e.params.value;
            }, this.params.node);
            this.createManagedBean(r, this.context),
              this.eGui.insertAdjacentElement('afterbegin', r.getGui());
          }
        }),
        (t.prototype.isUserWantsSelected = function () {
          var e = this.params.checkbox;
          return typeof e == 'function' || e === !0;
        }),
        (t.prototype.addCheckboxIfNeeded = function () {
          var e = this,
            r = this.displayedGroupNode,
            o = this.isUserWantsSelected() && !r.footer && !r.rowPinned && !r.detail;
          if (o) {
            var i = new Wl();
            this.getContext().createBean(i),
              i.init({
                rowNode: this.params.node,
                column: this.params.column,
                overrides: {
                  isVisible: this.params.checkbox,
                  callbackParams: this.params,
                  removeHidden: !0,
                },
              }),
              this.eCheckbox.appendChild(i.getGui()),
              this.addDestroyFunc(function () {
                return e.getContext().destroyBean(i);
              });
          }
          this.comp.setCheckboxVisible(o);
        }),
        (t.prototype.onKeyDown = function (e) {
          var r = e.key === _.ENTER;
          if (!(!r || this.params.suppressEnterExpand)) {
            var o = this.params.column && this.params.column.isCellEditable(this.params.node);
            o || this.onExpandOrContract(e);
          }
        }),
        (t.prototype.onCellDblClicked = function (e) {
          if (!nt(e)) {
            var r = Wo(this.eExpanded, e) || Wo(this.eContracted, e);
            r || this.onExpandOrContract(e);
          }
        }),
        no([v('expressionService')], t.prototype, 'expressionService', void 0),
        no([v('valueFormatterService')], t.prototype, 'valueFormatterService', void 0),
        no([v('columnModel')], t.prototype, 'columnModel', void 0),
        no([v('userComponentFactory')], t.prototype, 'userComponentFactory', void 0),
        no([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        t
      );
    })(D),
    ch = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    so = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Ul = (function (n) {
      ch(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return (
        (t.prototype.init = function (e) {
          var r = this,
            o = {
              setInnerRenderer: function (l, u) {
                return r.setRenderDetails(l, u);
              },
              setChildCount: function (l) {
                return (r.eChildCount.textContent = l);
              },
              addOrRemoveCssClass: function (l, u) {
                return r.addOrRemoveCssClass(l, u);
              },
              setContractedDisplayed: function (l) {
                return $(r.eContracted, l);
              },
              setExpandedDisplayed: function (l) {
                return $(r.eExpanded, l);
              },
              setCheckboxVisible: function (l) {
                return r.eCheckbox.classList.toggle('ag-invisible', !l);
              },
            },
            i = this.createManagedBean(new uh()),
            s = !e.colDef,
            a = this.getGui();
          i.init(o, a, this.eCheckbox, this.eExpanded, this.eContracted, this.constructor, e),
            s && le(a, i.getCellAriaRole());
        }),
        (t.prototype.setRenderDetails = function (e, r) {
          var o = this;
          if (e) {
            var i = e.newAgStackInstance();
            if (!i) return;
            i.then(function (s) {
              if (s) {
                var a = function () {
                  return o.context.destroyBean(s);
                };
                o.isAlive() ? (o.eValue.appendChild(s.getGui()), o.addDestroyFunc(a)) : a();
              }
            });
          } else this.eValue.innerText = r;
        }),
        (t.prototype.destroy = function () {
          this.getContext().destroyBean(this.innerCellRenderer), n.prototype.destroy.call(this);
        }),
        (t.prototype.refresh = function () {
          return !1;
        }),
        (t.TEMPLATE = `<span class="ag-cell-wrapper">
            <span class="ag-group-expanded" ref="eExpanded"></span>
            <span class="ag-group-contracted" ref="eContracted"></span>
            <span class="ag-group-checkbox ag-invisible" ref="eCheckbox"></span>
            <span class="ag-group-value" ref="eValue"></span>
            <span class="ag-group-child-count" ref="eChildCount"></span>
        </span>`),
        so([L('eExpanded')], t.prototype, 'eExpanded', void 0),
        so([L('eContracted')], t.prototype, 'eContracted', void 0),
        so([L('eCheckbox')], t.prototype, 'eCheckbox', void 0),
        so([L('eValue')], t.prototype, 'eValue', void 0),
        so([L('eChildCount')], t.prototype, 'eChildCount', void 0),
        t
      );
    })(k),
    ph = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    zl = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    dh = (function (n) {
      ph(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return (
        (t.prototype.init = function (e) {
          e.node.failedLoad ? this.setupFailed() : this.setupLoading();
        }),
        (t.prototype.setupFailed = function () {
          var e = this.localeService.getLocaleTextFunc();
          this.eLoadingText.innerText = e('loadingError', 'ERR');
        }),
        (t.prototype.setupLoading = function () {
          var e = ne('groupLoading', this.gridOptionsService, null);
          e && this.eLoadingIcon.appendChild(e);
          var r = this.localeService.getLocaleTextFunc();
          this.eLoadingText.innerText = r('loadingOoo', 'Loading');
        }),
        (t.prototype.refresh = function (e) {
          return !1;
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        (t.TEMPLATE = `<div class="ag-loading">
            <span class="ag-loading-icon" ref="eLoadingIcon"></span>
            <span class="ag-loading-text" ref="eLoadingText"></span>
        </div>`),
        zl([L('eLoadingIcon')], t.prototype, 'eLoadingIcon', void 0),
        zl([L('eLoadingText')], t.prototype, 'eLoadingText', void 0),
        t
      );
    })(k),
    hh = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    fh = (function (n) {
      hh(t, n);
      function t() {
        return n.call(this) || this;
      }
      return (
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        (t.prototype.init = function (e) {
          var r = this,
            o = this.gridOptionsService.get('overlayLoadingTemplate');
          if ((this.setTemplate(o ?? t.DEFAULT_LOADING_OVERLAY_TEMPLATE), !o)) {
            var i = this.localeService.getLocaleTextFunc();
            setTimeout(function () {
              r.getGui().textContent = i('loadingOoo', 'Loading...');
            });
          }
        }),
        (t.DEFAULT_LOADING_OVERLAY_TEMPLATE =
          '<span aria-live="polite" aria-atomic="true" class="ag-overlay-loading-center"></span>'),
        t
      );
    })(k),
    vh = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    gh = (function (n) {
      vh(t, n);
      function t() {
        return n.call(this) || this;
      }
      return (
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        (t.prototype.init = function (e) {
          var r = this,
            o = this.gridOptionsService.get('overlayNoRowsTemplate');
          if ((this.setTemplate(o ?? t.DEFAULT_NO_ROWS_TEMPLATE), !o)) {
            var i = this.localeService.getLocaleTextFunc();
            setTimeout(function () {
              r.getGui().textContent = i('noRowsToShow', 'No Rows To Show');
            });
          }
        }),
        (t.DEFAULT_NO_ROWS_TEMPLATE = '<span class="ag-overlay-no-rows-center"></span>'),
        t
      );
    })(k),
    yh = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    mh = (function (n) {
      yh(t, n);
      function t() {
        return n.call(this, '<div class="ag-tooltip"></div>') || this;
      }
      return (
        (t.prototype.init = function (e) {
          var r = e.value;
          this.getGui().textContent = ae(r, !0);
        }),
        t
      );
    })(cr),
    Ch = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Sh = (function () {
      function n() {}
      return (
        (n.prototype.getTemplate = function () {
          return '<ag-input-number-field class="ag-cell-editor" ref="eInput"></ag-input-number-field>';
        }),
        (n.prototype.init = function (t, e) {
          (this.eInput = t),
            (this.params = e),
            e.max != null && t.setMax(e.max),
            e.min != null && t.setMin(e.min),
            e.precision != null && t.setPrecision(e.precision),
            e.step != null && t.setStep(e.step);
          var r = t.getInputElement();
          e.preventStepping
            ? t.addManagedListener(r, 'keydown', this.preventStepping)
            : e.showStepperButtons && r.classList.add('ag-number-field-input-stepper');
        }),
        (n.prototype.preventStepping = function (t) {
          (t.key === _.UP || t.key === _.DOWN) && t.preventDefault();
        }),
        (n.prototype.getValue = function () {
          var t = this.eInput.getValue();
          if (!P(t) && !P(this.params.value)) return this.params.value;
          var e = this.params.parseValue(t);
          if (e == null) return e;
          if (typeof e == 'string') {
            if (e === '') return null;
            e = Number(e);
          }
          return isNaN(e) ? null : e;
        }),
        (n.prototype.getStartValue = function () {
          return this.params.value;
        }),
        n
      );
    })(),
    wh = (function (n) {
      Ch(t, n);
      function t() {
        return n.call(this, new Sh()) || this;
      }
      return t;
    })(oi),
    Eh = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    _h = (function () {
      function n() {}
      return (
        (n.prototype.getTemplate = function () {
          return '<ag-input-date-field class="ag-cell-editor" ref="eInput"></ag-input-date-field>';
        }),
        (n.prototype.init = function (t, e) {
          (this.eInput = t),
            (this.params = e),
            e.min != null && t.setMin(e.min),
            e.max != null && t.setMax(e.max),
            e.step != null && t.setStep(e.step);
        }),
        (n.prototype.getValue = function () {
          var t = this.eInput.getDate();
          return !P(t) && !P(this.params.value) ? this.params.value : t ?? null;
        }),
        (n.prototype.getStartValue = function () {
          var t = this.params.value;
          if (t instanceof Date) return Xe(t, !1);
        }),
        n
      );
    })(),
    Rh = (function (n) {
      Eh(t, n);
      function t() {
        return n.call(this, new _h()) || this;
      }
      return t;
    })(oi),
    Oh = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Th = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Ph = (function () {
      function n(t) {
        this.getDataTypeService = t;
      }
      return (
        (n.prototype.getTemplate = function () {
          return '<ag-input-date-field class="ag-cell-editor" ref="eInput"></ag-input-date-field>';
        }),
        (n.prototype.init = function (t, e) {
          (this.eInput = t),
            (this.params = e),
            e.min != null && t.setMin(e.min),
            e.max != null && t.setMax(e.max),
            e.step != null && t.setStep(e.step);
        }),
        (n.prototype.getValue = function () {
          var t = this.formatDate(this.eInput.getDate());
          return !P(t) && !P(this.params.value)
            ? this.params.value
            : this.params.parseValue(t ?? '');
        }),
        (n.prototype.getStartValue = function () {
          var t, e;
          return Xe(
            (e = this.parseDate((t = this.params.value) !== null && t !== void 0 ? t : void 0)) !==
              null && e !== void 0
              ? e
              : null,
            !1
          );
        }),
        (n.prototype.parseDate = function (t) {
          return this.getDataTypeService().getDateParserFunction(this.params.column)(t);
        }),
        (n.prototype.formatDate = function (t) {
          return this.getDataTypeService().getDateFormatterFunction(this.params.column)(t);
        }),
        n
      );
    })(),
    Dh = (function (n) {
      Oh(t, n);
      function t() {
        var e =
          n.call(
            this,
            new Ph(function () {
              return e.dataTypeService;
            })
          ) || this;
        return e;
      }
      return Th([v('dataTypeService')], t.prototype, 'dataTypeService', void 0), t;
    })(oi),
    Ah = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    bh = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Fh = (function (n) {
      Ah(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return (
        (t.prototype.init = function (e) {
          var r = this;
          (this.params = e), this.updateCheckbox(e);
          var o = this.eCheckbox.getInputElement();
          o.setAttribute('tabindex', '-1'),
            dn(o, 'polite'),
            this.addManagedListener(o, 'click', function (s) {
              if ((it(s), !r.eCheckbox.isDisabled())) {
                var a = r.eCheckbox.getValue();
                r.onCheckboxChanged(a);
              }
            }),
            this.addManagedListener(o, 'dblclick', function (s) {
              it(s);
            });
          var i = this.gridOptionsService.getDocument();
          this.addManagedListener(this.params.eGridCell, 'keydown', function (s) {
            if (s.key === _.SPACE && !r.eCheckbox.isDisabled()) {
              r.params.eGridCell === i.activeElement && r.eCheckbox.toggle();
              var a = r.eCheckbox.getValue();
              r.onCheckboxChanged(a), s.preventDefault();
            }
          });
        }),
        (t.prototype.refresh = function (e) {
          return (this.params = e), this.updateCheckbox(e), !0;
        }),
        (t.prototype.updateCheckbox = function (e) {
          var r,
            o,
            i,
            s,
            a = !0;
          if (e.node.group && e.column) {
            var l = e.column.getColId();
            l.startsWith(Er)
              ? (s = e.value == null || e.value === '' ? void 0 : e.value === 'true')
              : e.node.aggData && e.node.aggData[l] !== void 0
              ? (s = (r = e.value) !== null && r !== void 0 ? r : void 0)
              : (a = !1);
          } else s = (o = e.value) !== null && o !== void 0 ? o : void 0;
          if (!a) {
            this.eCheckbox.setDisplayed(!1);
            return;
          }
          this.eCheckbox.setValue(s);
          var u =
            e.disabled != null
              ? e.disabled
              : !(!((i = e.column) === null || i === void 0) && i.isCellEditable(e.node));
          this.eCheckbox.setDisabled(u);
          var c = this.localeService.getLocaleTextFunc(),
            p = Sn(c, s),
            d = u
              ? p
              : ''
                  .concat(c('ariaToggleCellValue', 'Press SPACE to toggle cell value'), ' (')
                  .concat(p, ')');
          this.eCheckbox.setInputAriaLabel(d);
        }),
        (t.prototype.onCheckboxChanged = function (e) {
          var r = this.params,
            o = r.column,
            i = r.node,
            s = r.rowIndex,
            a = r.value,
            l = {
              type: g.EVENT_CELL_EDITING_STARTED,
              column: o,
              colDef: o == null ? void 0 : o.getColDef(),
              data: i.data,
              node: i,
              rowIndex: s,
              rowPinned: i.rowPinned,
              value: a,
            };
          this.eventService.dispatchEvent(l);
          var u = this.params.node.setDataValue(this.params.column, e, 'edit'),
            c = {
              type: g.EVENT_CELL_EDITING_STOPPED,
              column: o,
              colDef: o == null ? void 0 : o.getColDef(),
              data: i.data,
              node: i,
              rowIndex: s,
              rowPinned: i.rowPinned,
              value: a,
              oldValue: a,
              newValue: e,
              valueChanged: u,
            };
          this.eventService.dispatchEvent(c);
        }),
        (t.TEMPLATE = `
        <div class="ag-cell-wrapper ag-checkbox-cell" role="presentation">
            <ag-checkbox role="presentation" ref="eCheckbox"></ag-checkbox>
        </div>`),
        bh([L('eCheckbox')], t.prototype, 'eCheckbox', void 0),
        t
      );
    })(k),
    Lh = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Mh = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Ih = (function (n) {
      Lh(t, n);
      function t() {
        return (
          n.call(
            this,
            `
            <div class="ag-cell-wrapper ag-cell-edit-wrapper ag-checkbox-edit">
                <ag-checkbox role="presentation" ref="eCheckbox"></ag-checkbox>
            </div>`
          ) || this
        );
      }
      return (
        (t.prototype.init = function (e) {
          var r = this,
            o;
          this.params = e;
          var i = (o = e.value) !== null && o !== void 0 ? o : void 0;
          this.eCheckbox.setValue(i);
          var s = this.eCheckbox.getInputElement();
          s.setAttribute('tabindex', '-1'),
            this.setAriaLabel(i),
            this.addManagedListener(this.eCheckbox, g.EVENT_FIELD_VALUE_CHANGED, function (a) {
              return r.setAriaLabel(a.selected);
            });
        }),
        (t.prototype.getValue = function () {
          return this.eCheckbox.getValue();
        }),
        (t.prototype.focusIn = function () {
          this.eCheckbox.getFocusableElement().focus();
        }),
        (t.prototype.afterGuiAttached = function () {
          this.params.cellStartedEdit && this.focusIn();
        }),
        (t.prototype.isPopup = function () {
          return !1;
        }),
        (t.prototype.setAriaLabel = function (e) {
          var r = this.localeService.getLocaleTextFunc(),
            o = Sn(r, e),
            i = r('ariaToggleCellValue', 'Press SPACE to toggle cell value');
          this.eCheckbox.setInputAriaLabel(''.concat(i, ' (').concat(o, ')'));
        }),
        Mh([L('eCheckbox')], t.prototype, 'eCheckbox', void 0),
        t
      );
    })(cr),
    xh = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Nh = (function (n) {
      xh(t, n);
      function t() {
        var e = n.call(this) || this;
        return e.setTemplate('<div></div>'), e;
      }
      return (
        (t.prototype.init = function (e) {
          var r;
          (this.params = e),
            (this.cssClassPrefix =
              (r = this.params.cssClassPrefix) !== null && r !== void 0 ? r : 'ag-menu-option'),
            this.addIcon(),
            this.addName(),
            this.addShortcut(),
            this.addSubMenu();
        }),
        (t.prototype.configureDefaults = function () {
          return !0;
        }),
        (t.prototype.addIcon = function () {
          if (!this.params.isCompact) {
            var e = Re(
              '<span ref="eIcon" class="'
                .concat(this.getClassName('part'), ' ')
                .concat(this.getClassName('icon'), '" role="presentation"></span>')
            );
            this.params.checked
              ? e.appendChild(ne('check', this.gridOptionsService))
              : this.params.icon &&
                (to(this.params.icon)
                  ? e.appendChild(this.params.icon)
                  : typeof this.params.icon == 'string'
                  ? (e.innerHTML = this.params.icon)
                  : console.warn('AG Grid: menu item icon must be DOM node or string')),
              this.getGui().appendChild(e);
          }
        }),
        (t.prototype.addName = function () {
          var e = Re(
            '<span ref="eName" class="'
              .concat(this.getClassName('part'), ' ')
              .concat(this.getClassName('text'), '">')
              .concat(this.params.name || '', '</span>')
          );
          this.getGui().appendChild(e);
        }),
        (t.prototype.addShortcut = function () {
          if (!this.params.isCompact) {
            var e = Re(
              '<span ref="eShortcut" class="'
                .concat(this.getClassName('part'), ' ')
                .concat(this.getClassName('shortcut'), '">')
                .concat(this.params.shortcut || '', '</span>')
            );
            this.getGui().appendChild(e);
          }
        }),
        (t.prototype.addSubMenu = function () {
          var e = Re(
              '<span ref="ePopupPointer" class="'
                .concat(this.getClassName('part'), ' ')
                .concat(this.getClassName('popup-pointer'), '"></span>')
            ),
            r = this.getGui();
          if (this.params.subMenu) {
            var o = this.gridOptionsService.get('enableRtl') ? 'smallLeft' : 'smallRight';
            Pt(r, !1), e.appendChild(ne(o, this.gridOptionsService));
          }
          r.appendChild(e);
        }),
        (t.prototype.getClassName = function (e) {
          return ''.concat(this.cssClassPrefix, '-').concat(e);
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        t
      );
    })(k),
    Gh = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ds = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Kl = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    $l = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    Vh = (function (n) {
      Gh(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.agGridDefaults = {
            agDateInput: Ad,
            agColumnHeader: cs,
            agColumnGroupHeader: Hd,
            agSortIndicator: us,
            agTextColumnFloatingFilter: xd,
            agNumberColumnFloatingFilter: Md,
            agDateColumnFloatingFilter: Od,
            agReadOnlyFloatingFilter: rd,
            agAnimateShowChangeCellRenderer: eh,
            agAnimateSlideCellRenderer: oh,
            agGroupCellRenderer: Ul,
            agGroupRowRenderer: Ul,
            agLoadingCellRenderer: dh,
            agCheckboxCellRenderer: Fh,
            agCellEditor: Bl,
            agTextCellEditor: Bl,
            agNumberCellEditor: wh,
            agDateCellEditor: Rh,
            agDateStringCellEditor: Dh,
            agSelectCellEditor: zd,
            agLargeTextCellEditor: jd,
            agCheckboxCellEditor: Ih,
            agTextColumnFilter: as,
            agNumberColumnFilter: Ll,
            agDateColumnFilter: Dl,
            agLoadingOverlay: fh,
            agNoRowsOverlay: gh,
            agTooltipComponent: mh,
            agMenuItem: Nh,
          }),
          (e.enterpriseAgDefaultCompsModule = {
            agSetColumnFilter: G.SetFilterModule,
            agSetColumnFloatingFilter: G.SetFilterModule,
            agMultiColumnFilter: G.MultiFilterModule,
            agMultiColumnFloatingFilter: G.MultiFilterModule,
            agGroupColumnFilter: G.RowGroupingModule,
            agGroupColumnFloatingFilter: G.RowGroupingModule,
            agRichSelect: G.RichSelectModule,
            agRichSelectCellEditor: G.RichSelectModule,
            agDetailCellRenderer: G.MasterDetailModule,
            agSparklineCellRenderer: G.SparklinesModule,
          }),
          (e.jsComps = {}),
          e
        );
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          this.gridOptions.components != null &&
            ye(this.gridOptions.components, function (r, o) {
              return e.registerJsComponent(r, o);
            });
        }),
        (t.prototype.registerDefaultComponent = function (e, r) {
          if (this.agGridDefaults[e]) {
            console.error(
              'Trying to overwrite a default component. You should call registerComponent'
            );
            return;
          }
          this.agGridDefaults[e] = r;
        }),
        (t.prototype.registerJsComponent = function (e, r) {
          this.jsComps[e] = r;
        }),
        (t.prototype.retrieve = function (e, r) {
          var o = this,
            i = function (p, d) {
              return { componentFromFramework: d, component: p };
            },
            s = this.getFrameworkOverrides().frameworkComponent(r, this.gridOptions.components);
          if (s != null) return i(s, !0);
          var a = this.jsComps[r];
          if (a) {
            var l = this.getFrameworkOverrides().isFrameworkComponent(a);
            return i(a, l);
          }
          var u = this.agGridDefaults[r];
          if (u) return i(u, !1);
          var c = this.enterpriseAgDefaultCompsModule[r];
          return (
            c
              ? X.__assertRegistered(
                  c,
                  "AG Grid '".concat(e, "' component: ").concat(r),
                  this.context.getGridId()
                )
              : er(function () {
                  o.warnAboutMissingComponent(e, r);
                }, 'MissingComp' + r),
            null
          );
        }),
        (t.prototype.warnAboutMissingComponent = function (e, r) {
          var o = $l(
              $l(
                [],
                Kl(
                  Object.keys(this.agGridDefaults).filter(function (s) {
                    return !['agCellEditor', 'agGroupRowRenderer', 'agSortIndicator'].includes(s);
                  })
                ),
                !1
              ),
              Kl(Object.keys(this.jsComps)),
              !1
            ),
            i = ro(r, o, !0, 0.8).values;
          console.warn(
            "AG Grid: Could not find '"
              .concat(r, `' component. It was configured as "`)
              .concat(e, ": '")
              .concat(r, `'" but it wasn't found in the list of registered components.`)
          ),
            i.length > 0 && console.warn('         Did you mean: ['.concat(i.slice(0, 3), ']?')),
            console.warn(
              'If using a custom component check it has been registered as described in: '.concat(
                this.getFrameworkOverrides().getDocLink('components/')
              )
            );
        }),
        ds([v('gridOptions')], t.prototype, 'gridOptions', void 0),
        ds([F], t.prototype, 'init', null),
        (t = ds([x('userComponentRegistry')], t)),
        t
      );
    })(D),
    Hh = { propertyName: 'dateComponent', cellRenderer: !1 },
    Bh = { propertyName: 'headerComponent', cellRenderer: !1 },
    kh = { propertyName: 'headerGroupComponent', cellRenderer: !1 },
    Yl = { propertyName: 'cellRenderer', cellRenderer: !0 },
    Wh = { propertyName: 'cellEditor', cellRenderer: !1 },
    ql = { propertyName: 'innerRenderer', cellRenderer: !0 },
    jh = { propertyName: 'loadingOverlayComponent', cellRenderer: !1 },
    Uh = { propertyName: 'noRowsOverlayComponent', cellRenderer: !1 },
    zh = { propertyName: 'tooltipComponent', cellRenderer: !1 },
    hs = { propertyName: 'filter', cellRenderer: !1 },
    Kh = { propertyName: 'floatingFilterComponent', cellRenderer: !1 },
    $h = { propertyName: 'toolPanel', cellRenderer: !1 },
    Yh = { propertyName: 'statusPanel', cellRenderer: !1 },
    qh = { propertyName: 'fullWidthCellRenderer', cellRenderer: !0 },
    Qh = { propertyName: 'loadingCellRenderer', cellRenderer: !0 },
    Xh = { propertyName: 'groupRowRenderer', cellRenderer: !0 },
    Jh = { propertyName: 'detailCellRenderer', cellRenderer: !0 },
    Zh = { propertyName: 'menuItem', cellRenderer: !1 },
    ef = (function () {
      function n() {}
      return (
        (n.getFloatingFilterType = function (t) {
          return this.filterToFloatingFilterMapping[t];
        }),
        (n.filterToFloatingFilterMapping = {
          set: 'agSetColumnFloatingFilter',
          agSetColumnFilter: 'agSetColumnFloatingFilter',
          multi: 'agMultiColumnFloatingFilter',
          agMultiColumnFilter: 'agMultiColumnFloatingFilter',
          group: 'agGroupColumnFloatingFilter',
          agGroupColumnFilter: 'agGroupColumnFloatingFilter',
          number: 'agNumberColumnFloatingFilter',
          agNumberColumnFilter: 'agNumberColumnFloatingFilter',
          date: 'agDateColumnFloatingFilter',
          agDateColumnFilter: 'agDateColumnFloatingFilter',
          text: 'agTextColumnFloatingFilter',
          agTextColumnFilter: 'agTextColumnFloatingFilter',
        }),
        n
      );
    })(),
    tf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Lr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    rf = (function (n) {
      tf(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.getHeaderCompDetails = function (e, r) {
          return this.getCompDetails(e, Bh, 'agColumnHeader', r);
        }),
        (t.prototype.getHeaderGroupCompDetails = function (e) {
          var r = e.columnGroup.getColGroupDef();
          return this.getCompDetails(r, kh, 'agColumnGroupHeader', e);
        }),
        (t.prototype.getFullWidthCellRendererDetails = function (e) {
          return this.getCompDetails(this.gridOptions, qh, null, e, !0);
        }),
        (t.prototype.getFullWidthLoadingCellRendererDetails = function (e) {
          return this.getCompDetails(this.gridOptions, Qh, 'agLoadingCellRenderer', e, !0);
        }),
        (t.prototype.getFullWidthGroupCellRendererDetails = function (e) {
          return this.getCompDetails(this.gridOptions, Xh, 'agGroupRowRenderer', e, !0);
        }),
        (t.prototype.getFullWidthDetailCellRendererDetails = function (e) {
          return this.getCompDetails(this.gridOptions, Jh, 'agDetailCellRenderer', e, !0);
        }),
        (t.prototype.getInnerRendererDetails = function (e, r) {
          return this.getCompDetails(e, ql, null, r);
        }),
        (t.prototype.getFullWidthGroupRowInnerCellRenderer = function (e, r) {
          return this.getCompDetails(e, ql, null, r);
        }),
        (t.prototype.getCellRendererDetails = function (e, r) {
          return this.getCompDetails(e, Yl, null, r);
        }),
        (t.prototype.getCellEditorDetails = function (e, r) {
          return this.getCompDetails(e, Wh, 'agCellEditor', r, !0);
        }),
        (t.prototype.getFilterDetails = function (e, r, o) {
          return this.getCompDetails(e, hs, o, r, !0);
        }),
        (t.prototype.getDateCompDetails = function (e) {
          return this.getCompDetails(this.gridOptions, Hh, 'agDateInput', e, !0);
        }),
        (t.prototype.getLoadingOverlayCompDetails = function (e) {
          return this.getCompDetails(this.gridOptions, jh, 'agLoadingOverlay', e, !0);
        }),
        (t.prototype.getNoRowsOverlayCompDetails = function (e) {
          return this.getCompDetails(this.gridOptions, Uh, 'agNoRowsOverlay', e, !0);
        }),
        (t.prototype.getTooltipCompDetails = function (e) {
          return this.getCompDetails(e.colDef, zh, 'agTooltipComponent', e, !0);
        }),
        (t.prototype.getSetFilterCellRendererDetails = function (e, r) {
          return this.getCompDetails(e, Yl, null, r);
        }),
        (t.prototype.getFloatingFilterCompDetails = function (e, r, o) {
          return this.getCompDetails(e, Kh, o, r);
        }),
        (t.prototype.getToolPanelCompDetails = function (e, r) {
          return this.getCompDetails(e, $h, null, r, !0);
        }),
        (t.prototype.getStatusPanelCompDetails = function (e, r) {
          return this.getCompDetails(e, Yh, null, r, !0);
        }),
        (t.prototype.getMenuItemCompDetails = function (e, r) {
          return this.getCompDetails(e, Zh, 'agMenuItem', r, !0);
        }),
        (t.prototype.getCompDetails = function (e, r, o, i, s) {
          var a = this;
          s === void 0 && (s = !1);
          var l = r.propertyName,
            u = r.cellRenderer,
            c = this.getCompKeys(e, r, i),
            p = c.compName,
            d = c.jsComp,
            h = c.fwComp,
            f = c.paramsFromSelector,
            y = c.popupFromSelector,
            m = c.popupPositionFromSelector,
            C = function (R) {
              var O = a.userComponentRegistry.retrieve(l, R);
              O &&
                ((d = O.componentFromFramework ? void 0 : O.component),
                (h = O.componentFromFramework ? O.component : void 0));
            };
          if (
            (p != null && C(p),
            d == null && h == null && o != null && C(o),
            d &&
              u &&
              !this.agComponentUtils.doesImplementIComponent(d) &&
              (d = this.agComponentUtils.adaptFunction(l, d)),
            !d && !h)
          ) {
            s &&
              console.error(
                'AG Grid: Could not find component '.concat(
                  p,
                  ', did you forget to configure this component?'
                )
              );
            return;
          }
          var w = this.mergeParamsWithApplicationProvidedParams(e, r, i, f),
            E = d == null,
            S = d || h;
          return {
            componentFromFramework: E,
            componentClass: S,
            params: w,
            type: r,
            popupFromSelector: y,
            popupPositionFromSelector: m,
            newAgStackInstance: function () {
              return a.newAgStackInstance(S, E, w, r);
            },
          };
        }),
        (t.prototype.getCompKeys = function (e, r, o) {
          var i = this,
            s = r.propertyName,
            a,
            l,
            u,
            c,
            p,
            d;
          if (e) {
            var h = e,
              f = h[s + 'Selector'],
              y = f ? f(o) : null,
              m = function (C) {
                if (typeof C == 'string') a = C;
                else if (C != null && C !== !0) {
                  var w = i.getFrameworkOverrides().isFrameworkComponent(C);
                  w ? (u = C) : (l = C);
                }
              };
            y ? (m(y.component), (c = y.params), (p = y.popup), (d = y.popupPosition)) : m(h[s]);
          }
          return {
            compName: a,
            jsComp: l,
            fwComp: u,
            paramsFromSelector: c,
            popupFromSelector: p,
            popupPositionFromSelector: d,
          };
        }),
        (t.prototype.newAgStackInstance = function (e, r, o, i) {
          var s = i.propertyName,
            a = !r,
            l;
          if (a) l = new e();
          else {
            var u = this.componentMetadataProvider.retrieve(s);
            l = this.frameworkComponentWrapper.wrap(
              e,
              u.mandatoryMethodList,
              u.optionalMethodList,
              i
            );
          }
          var c = this.initComponent(l, o);
          return c == null
            ? je.resolve(l)
            : c.then(function () {
                return l;
              });
        }),
        (t.prototype.mergeParamsWithApplicationProvidedParams = function (e, r, o, i) {
          i === void 0 && (i = null);
          var s = this.gridOptionsService.getGridCommonParams();
          Ve(s, o);
          var a = e,
            l = a && a[r.propertyName + 'Params'];
          if (typeof l == 'function') {
            var u = l(o);
            Ve(s, u);
          } else typeof l == 'object' && Ve(s, l);
          return Ve(s, i), s;
        }),
        (t.prototype.initComponent = function (e, r) {
          if ((this.context.createBean(e), e.init != null)) return e.init(r);
        }),
        (t.prototype.getDefaultFloatingFilterType = function (e, r) {
          if (e == null) return null;
          var o = null,
            i = this.getCompKeys(e, hs),
            s = i.compName,
            a = i.jsComp,
            l = i.fwComp;
          if (s) o = ef.getFloatingFilterType(s);
          else {
            var u = a == null && l == null && e.filter === !0;
            u && (o = r());
          }
          return o;
        }),
        Lr([v('gridOptions')], t.prototype, 'gridOptions', void 0),
        Lr([v('agComponentUtils')], t.prototype, 'agComponentUtils', void 0),
        Lr([v('componentMetadataProvider')], t.prototype, 'componentMetadataProvider', void 0),
        Lr([v('userComponentRegistry')], t.prototype, 'userComponentRegistry', void 0),
        Lr([Y('frameworkComponentWrapper')], t.prototype, 'frameworkComponentWrapper', void 0),
        (t = Lr([x('userComponentFactory')], t)),
        t
      );
    })(D),
    of = (function () {
      function n() {}
      return (
        (n.ColDefPropertyMap = {
          headerName: void 0,
          columnGroupShow: void 0,
          headerClass: void 0,
          toolPanelClass: void 0,
          headerValueGetter: void 0,
          pivotKeys: void 0,
          groupId: void 0,
          colId: void 0,
          sort: void 0,
          initialSort: void 0,
          field: void 0,
          type: void 0,
          cellDataType: void 0,
          tooltipComponent: void 0,
          tooltipField: void 0,
          headerTooltip: void 0,
          cellClass: void 0,
          showRowGroup: void 0,
          filter: void 0,
          initialAggFunc: void 0,
          defaultAggFunc: void 0,
          aggFunc: void 0,
          pinned: void 0,
          initialPinned: void 0,
          chartDataType: void 0,
          cellAriaRole: void 0,
          cellEditorPopupPosition: void 0,
          headerGroupComponent: void 0,
          headerGroupComponentParams: void 0,
          cellStyle: void 0,
          cellRenderer: void 0,
          cellRendererParams: void 0,
          cellEditor: void 0,
          cellEditorParams: void 0,
          filterParams: void 0,
          pivotValueColumn: void 0,
          headerComponent: void 0,
          headerComponentParams: void 0,
          floatingFilterComponent: void 0,
          floatingFilterComponentParams: void 0,
          tooltipComponentParams: void 0,
          refData: void 0,
          columnsMenuParams: void 0,
          columnChooserParams: void 0,
          children: void 0,
          sortingOrder: void 0,
          allowedAggFuncs: void 0,
          menuTabs: void 0,
          pivotTotalColumnIds: void 0,
          cellClassRules: void 0,
          icons: void 0,
          sortIndex: void 0,
          initialSortIndex: void 0,
          flex: void 0,
          initialFlex: void 0,
          width: void 0,
          initialWidth: void 0,
          minWidth: void 0,
          maxWidth: void 0,
          rowGroupIndex: void 0,
          initialRowGroupIndex: void 0,
          pivotIndex: void 0,
          initialPivotIndex: void 0,
          suppressCellFlash: void 0,
          suppressColumnsToolPanel: void 0,
          suppressFiltersToolPanel: void 0,
          openByDefault: void 0,
          marryChildren: void 0,
          suppressStickyLabel: void 0,
          hide: void 0,
          initialHide: void 0,
          rowGroup: void 0,
          initialRowGroup: void 0,
          pivot: void 0,
          initialPivot: void 0,
          checkboxSelection: void 0,
          showDisabledCheckboxes: void 0,
          headerCheckboxSelection: void 0,
          headerCheckboxSelectionFilteredOnly: void 0,
          headerCheckboxSelectionCurrentPageOnly: void 0,
          suppressMenu: void 0,
          suppressHeaderMenuButton: void 0,
          suppressMovable: void 0,
          lockPosition: void 0,
          lockVisible: void 0,
          lockPinned: void 0,
          unSortIcon: void 0,
          suppressSizeToFit: void 0,
          suppressAutoSize: void 0,
          enableRowGroup: void 0,
          enablePivot: void 0,
          enableValue: void 0,
          editable: void 0,
          suppressPaste: void 0,
          suppressNavigable: void 0,
          enableCellChangeFlash: void 0,
          rowDrag: void 0,
          dndSource: void 0,
          autoHeight: void 0,
          wrapText: void 0,
          sortable: void 0,
          resizable: void 0,
          singleClickEdit: void 0,
          floatingFilter: void 0,
          cellEditorPopup: void 0,
          suppressFillHandle: void 0,
          wrapHeaderText: void 0,
          autoHeaderHeight: void 0,
          dndSourceOnRowDrag: void 0,
          valueGetter: void 0,
          valueSetter: void 0,
          filterValueGetter: void 0,
          keyCreator: void 0,
          valueFormatter: void 0,
          valueParser: void 0,
          comparator: void 0,
          equals: void 0,
          pivotComparator: void 0,
          suppressKeyboardEvent: void 0,
          suppressHeaderKeyboardEvent: void 0,
          colSpan: void 0,
          rowSpan: void 0,
          getQuickFilterText: void 0,
          onCellValueChanged: void 0,
          onCellClicked: void 0,
          onCellDoubleClicked: void 0,
          onCellContextMenu: void 0,
          rowDragText: void 0,
          tooltipValueGetter: void 0,
          cellRendererSelector: void 0,
          cellEditorSelector: void 0,
          suppressSpanHeaderHeight: void 0,
          useValueFormatterForExport: void 0,
          useValueParserForImport: void 0,
          mainMenuItems: void 0,
          contextMenuItems: void 0,
          suppressFloatingFilterButton: void 0,
          suppressHeaderFilterButton: void 0,
          suppressHeaderContextMenu: void 0,
        }),
        (n.ALL_PROPERTIES = Object.keys(n.ColDefPropertyMap)),
        n
      );
    })(),
    ui;
  (function (n) {
    (n[(n.SINGLE_SHEET = 0)] = 'SINGLE_SHEET'), (n[(n.MULTI_SHEET = 1)] = 'MULTI_SHEET');
  })(ui || (ui = {}));
  var nf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    fs = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    sf = (function (n) {
      nf(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.dragEndFunctions = []), (e.dragSources = []), e;
      }
      return (
        (t.prototype.removeAllListeners = function () {
          this.dragSources.forEach(this.removeListener.bind(this)), (this.dragSources.length = 0);
        }),
        (t.prototype.removeListener = function (e) {
          var r = e.dragSource.eElement,
            o = e.mouseDownListener;
          if ((r.removeEventListener('mousedown', o), e.touchEnabled)) {
            var i = e.touchStartListener;
            r.removeEventListener('touchstart', i, { passive: !0 });
          }
        }),
        (t.prototype.removeDragSource = function (e) {
          var r = this.dragSources.find(function (o) {
            return o.dragSource === e;
          });
          r && (this.removeListener(r), Ee(this.dragSources, r));
        }),
        (t.prototype.isDragging = function () {
          return this.dragging;
        }),
        (t.prototype.addDragSource = function (e) {
          var r = this,
            o = this.onMouseDown.bind(this, e),
            i = e.eElement,
            s = e.includeTouch,
            a = e.stopPropagationForTouch;
          i.addEventListener('mousedown', o);
          var l = null,
            u = this.gridOptionsService.get('suppressTouch');
          s &&
            !u &&
            ((l = function (c) {
              Vn(c.target) ||
                (c.cancelable && (c.preventDefault(), a && c.stopPropagation()),
                r.onTouchStart(e, c));
            }),
            i.addEventListener('touchstart', l, { passive: !1 })),
            this.dragSources.push({
              dragSource: e,
              mouseDownListener: o,
              touchStartListener: l,
              touchEnabled: !!s,
            });
        }),
        (t.prototype.getStartTarget = function () {
          return this.startTarget;
        }),
        (t.prototype.onTouchStart = function (e, r) {
          var o = this;
          (this.currentDragParams = e), (this.dragging = !1);
          var i = r.touches[0];
          (this.touchLastTime = i), (this.touchStart = i);
          var s = function (p) {
              return o.onTouchMove(p, e.eElement);
            },
            a = function (p) {
              return o.onTouchUp(p, e.eElement);
            },
            l = function (p) {
              p.cancelable && p.preventDefault();
            },
            u = r.target,
            c = [
              {
                target: this.gridOptionsService.getRootNode(),
                type: 'touchmove',
                listener: l,
                options: { passive: !1 },
              },
              { target: u, type: 'touchmove', listener: s, options: { passive: !0 } },
              { target: u, type: 'touchend', listener: a, options: { passive: !0 } },
              { target: u, type: 'touchcancel', listener: a, options: { passive: !0 } },
            ];
          this.addTemporaryEvents(c),
            e.dragStartPixels === 0 && this.onCommonMove(i, this.touchStart, e.eElement);
        }),
        (t.prototype.onMouseDown = function (e, r) {
          var o = this,
            i = r;
          if (
            !(e.skipMouseEvent && e.skipMouseEvent(r)) &&
            !i._alreadyProcessedByDragService &&
            ((i._alreadyProcessedByDragService = !0), r.button === 0)
          ) {
            this.shouldPreventMouseEvent(r) && r.preventDefault(),
              (this.currentDragParams = e),
              (this.dragging = !1),
              (this.mouseStartEvent = r),
              (this.startTarget = r.target);
            var s = function (p) {
                return o.onMouseMove(p, e.eElement);
              },
              a = function (p) {
                return o.onMouseUp(p, e.eElement);
              },
              l = function (p) {
                return p.preventDefault();
              },
              u = this.gridOptionsService.getRootNode(),
              c = [
                { target: u, type: 'mousemove', listener: s },
                { target: u, type: 'mouseup', listener: a },
                { target: u, type: 'contextmenu', listener: l },
              ];
            this.addTemporaryEvents(c), e.dragStartPixels === 0 && this.onMouseMove(r, e.eElement);
          }
        }),
        (t.prototype.addTemporaryEvents = function (e) {
          e.forEach(function (r) {
            var o = r.target,
              i = r.type,
              s = r.listener,
              a = r.options;
            o.addEventListener(i, s, a);
          }),
            this.dragEndFunctions.push(function () {
              e.forEach(function (r) {
                var o = r.target,
                  i = r.type,
                  s = r.listener,
                  a = r.options;
                o.removeEventListener(i, s, a);
              });
            });
        }),
        (t.prototype.isEventNearStartEvent = function (e, r) {
          var o = this.currentDragParams.dragStartPixels,
            i = P(o) ? o : 4;
          return $n(e, r, i);
        }),
        (t.prototype.getFirstActiveTouch = function (e) {
          for (var r = 0; r < e.length; r++)
            if (e[r].identifier === this.touchStart.identifier) return e[r];
          return null;
        }),
        (t.prototype.onCommonMove = function (e, r, o) {
          if (!this.dragging) {
            if (!this.dragging && this.isEventNearStartEvent(e, r)) return;
            this.dragging = !0;
            var i = { type: g.EVENT_DRAG_STARTED, target: o };
            this.eventService.dispatchEvent(i),
              this.currentDragParams.onDragStart(r),
              this.currentDragParams.onDragging(r);
          }
          this.currentDragParams.onDragging(e);
        }),
        (t.prototype.onTouchMove = function (e, r) {
          var o = this.getFirstActiveTouch(e.touches);
          o && this.onCommonMove(o, this.touchStart, r);
        }),
        (t.prototype.onMouseMove = function (e, r) {
          var o;
          if (ht()) {
            var i = this.gridOptionsService.getDocument();
            (o = i.getSelection()) === null || o === void 0 || o.removeAllRanges();
          }
          this.shouldPreventMouseEvent(e) && e.preventDefault(),
            this.onCommonMove(e, this.mouseStartEvent, r);
        }),
        (t.prototype.shouldPreventMouseEvent = function (e) {
          var r = this.gridOptionsService.get('enableCellTextSelection'),
            o = e.type === 'mousemove';
          return (
            r &&
            o &&
            e.cancelable &&
            this.mouseEventService.isEventFromThisGrid(e) &&
            !this.isOverFormFieldElement(e)
          );
        }),
        (t.prototype.isOverFormFieldElement = function (e) {
          var r = e.target,
            o = r == null ? void 0 : r.tagName.toLocaleLowerCase();
          return !!(o != null && o.match('^a$|textarea|input|select|button'));
        }),
        (t.prototype.onTouchUp = function (e, r) {
          var o = this.getFirstActiveTouch(e.changedTouches);
          o || (o = this.touchLastTime), this.onUpCommon(o, r);
        }),
        (t.prototype.onMouseUp = function (e, r) {
          this.onUpCommon(e, r);
        }),
        (t.prototype.onUpCommon = function (e, r) {
          if (this.dragging) {
            (this.dragging = !1), this.currentDragParams.onDragStop(e);
            var o = { type: g.EVENT_DRAG_STOPPED, target: r };
            this.eventService.dispatchEvent(o);
          }
          (this.mouseStartEvent = null),
            (this.startTarget = null),
            (this.touchStart = null),
            (this.touchLastTime = null),
            (this.currentDragParams = null),
            this.dragEndFunctions.forEach(function (i) {
              return i();
            }),
            (this.dragEndFunctions.length = 0);
        }),
        fs([v('mouseEventService')], t.prototype, 'mouseEventService', void 0),
        fs([Se], t.prototype, 'removeAllListeners', null),
        (t = fs([x('dragService')], t)),
        t
      );
    })(D),
    Ql = (function () {
      function n(t) {
        (this.tickingInterval = null),
          (this.onScrollCallback = null),
          (this.scrollContainer = t.scrollContainer),
          (this.scrollHorizontally = t.scrollAxis.indexOf('x') !== -1),
          (this.scrollVertically = t.scrollAxis.indexOf('y') !== -1),
          (this.scrollByTick = t.scrollByTick != null ? t.scrollByTick : 20),
          t.onScrollCallback && (this.onScrollCallback = t.onScrollCallback),
          this.scrollVertically &&
            ((this.getVerticalPosition = t.getVerticalPosition),
            (this.setVerticalPosition = t.setVerticalPosition)),
          this.scrollHorizontally &&
            ((this.getHorizontalPosition = t.getHorizontalPosition),
            (this.setHorizontalPosition = t.setHorizontalPosition)),
          (this.shouldSkipVerticalScroll =
            t.shouldSkipVerticalScroll ||
            function () {
              return !1;
            }),
          (this.shouldSkipHorizontalScroll =
            t.shouldSkipHorizontalScroll ||
            function () {
              return !1;
            });
      }
      return (
        (n.prototype.check = function (t, e) {
          e === void 0 && (e = !1);
          var r = e || this.shouldSkipVerticalScroll();
          if (!(r && this.shouldSkipHorizontalScroll())) {
            var o = this.scrollContainer.getBoundingClientRect(),
              i = this.scrollByTick;
            (this.tickLeft = t.clientX < o.left + i),
              (this.tickRight = t.clientX > o.right - i),
              (this.tickUp = t.clientY < o.top + i && !r),
              (this.tickDown = t.clientY > o.bottom - i && !r),
              this.tickLeft || this.tickRight || this.tickUp || this.tickDown
                ? this.ensureTickingStarted()
                : this.ensureCleared();
          }
        }),
        (n.prototype.ensureTickingStarted = function () {
          this.tickingInterval === null &&
            ((this.tickingInterval = window.setInterval(this.doTick.bind(this), 100)),
            (this.tickCount = 0));
        }),
        (n.prototype.doTick = function () {
          this.tickCount++;
          var t;
          if (
            ((t = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40), this.scrollVertically)
          ) {
            var e = this.getVerticalPosition();
            this.tickUp && this.setVerticalPosition(e - t),
              this.tickDown && this.setVerticalPosition(e + t);
          }
          if (this.scrollHorizontally) {
            var r = this.getHorizontalPosition();
            this.tickLeft && this.setHorizontalPosition(r - t),
              this.tickRight && this.setHorizontalPosition(r + t);
          }
          this.onScrollCallback && this.onScrollCallback();
        }),
        (n.prototype.ensureCleared = function () {
          this.tickingInterval &&
            (window.clearInterval(this.tickingInterval), (this.tickingInterval = null));
        }),
        n
      );
    })(),
    af = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Xl = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    vs = 'ag-list-item-hovered';
  (function (n) {
    af(t, n);
    function t(e, r, o) {
      var i = n.call(this) || this;
      return (
        (i.comp = e),
        (i.virtualList = r),
        (i.params = o),
        (i.currentDragValue = null),
        (i.lastHoveredListItem = null),
        i
      );
    }
    return (
      (t.prototype.postConstruct = function () {
        this.addManagedListener(
          this.params.eventSource,
          this.params.listItemDragStartEvent,
          this.listItemDragStart.bind(this)
        ),
          this.addManagedListener(
            this.params.eventSource,
            this.params.listItemDragEndEvent,
            this.listItemDragEnd.bind(this)
          ),
          this.createDropTarget(),
          this.createAutoScrollService();
      }),
      (t.prototype.listItemDragStart = function (e) {
        (this.currentDragValue = this.params.getCurrentDragValue(e)),
          (this.moveBlocked = this.params.isMoveBlocked(this.currentDragValue));
      }),
      (t.prototype.listItemDragEnd = function () {
        var e = this;
        window.setTimeout(function () {
          (e.currentDragValue = null), (e.moveBlocked = !1);
        }, 10);
      }),
      (t.prototype.createDropTarget = function () {
        var e = this,
          r = {
            isInterestedIn: function (o) {
              return o === e.params.dragSourceType;
            },
            getIconName: function () {
              return e.moveBlocked ? he.ICON_PINNED : he.ICON_MOVE;
            },
            getContainer: function () {
              return e.comp.getGui();
            },
            onDragging: function (o) {
              return e.onDragging(o);
            },
            onDragStop: function () {
              return e.onDragStop();
            },
            onDragLeave: function () {
              return e.onDragLeave();
            },
          };
        this.dragAndDropService.addDropTarget(r);
      }),
      (t.prototype.createAutoScrollService = function () {
        var e = this.virtualList.getGui();
        this.autoScrollService = new Ql({
          scrollContainer: e,
          scrollAxis: 'y',
          getVerticalPosition: function () {
            return e.scrollTop;
          },
          setVerticalPosition: function (r) {
            return (e.scrollTop = r);
          },
        });
      }),
      (t.prototype.onDragging = function (e) {
        if (!(!this.currentDragValue || this.moveBlocked)) {
          var r = this.getListDragItem(e),
            o = this.virtualList.getComponentAt(r.rowIndex);
          if (o) {
            var i = o.getGui().parentElement;
            (this.lastHoveredListItem &&
              this.lastHoveredListItem.rowIndex === r.rowIndex &&
              this.lastHoveredListItem.position === r.position) ||
              (this.autoScrollService.check(e.event),
              this.clearHoveredItems(),
              (this.lastHoveredListItem = r),
              Nn(i, vs),
              Nn(i, 'ag-item-highlight-'.concat(r.position)));
          }
        }
      }),
      (t.prototype.getListDragItem = function (e) {
        var r = this.virtualList.getGui(),
          o = parseFloat(window.getComputedStyle(r).paddingTop),
          i = this.virtualList.getRowHeight(),
          s = this.virtualList.getScrollTop(),
          a = Math.max(0, (e.y - o + s) / i),
          l = this.params.getNumRows(this.comp) - 1,
          u = Math.min(l, a) | 0;
        return {
          rowIndex: u,
          position: Math.round(a) > a || a > l ? 'bottom' : 'top',
          component: this.virtualList.getComponentAt(u),
        };
      }),
      (t.prototype.onDragStop = function () {
        this.moveBlocked ||
          (this.params.moveItem(this.currentDragValue, this.lastHoveredListItem),
          this.clearHoveredItems(),
          this.autoScrollService.ensureCleared());
      }),
      (t.prototype.onDragLeave = function () {
        this.clearHoveredItems(), this.autoScrollService.ensureCleared();
      }),
      (t.prototype.clearHoveredItems = function () {
        var e = this.virtualList.getGui();
        e.querySelectorAll('.'.concat(vs)).forEach(function (r) {
          [vs, 'ag-item-highlight-top', 'ag-item-highlight-bottom'].forEach(function (o) {
            r.classList.remove(o);
          });
        }),
          (this.lastHoveredListItem = null);
      }),
      Xl([v('dragAndDropService')], t.prototype, 'dragAndDropService', void 0),
      Xl([F], t.prototype, 'postConstruct', null),
      t
    );
  })(D);
  var et;
  (function (n) {
    (n[(n.Above = 0)] = 'Above'), (n[(n.Below = 1)] = 'Below');
  })(et || (et = {}));
  var K = function (n, t, e, r) {
    var o = arguments.length,
      i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
      s;
    if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
      i = Reflect.decorate(n, t, e, r);
    else
      for (var a = n.length - 1; a >= 0; a--)
        (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  };
  function dr(n) {
    var t = n,
      e = t != null && t.getFrameworkComponentInstance != null;
    return e ? t.getFrameworkComponentInstance() : n;
  }
  var Jl = (function () {
      function n() {
        (this.detailGridInfoMap = {}), (this.destroyCalled = !1);
      }
      return (
        (n.prototype.init = function () {
          var t = this;
          switch (this.rowModel.getType()) {
            case 'clientSide':
              this.clientSideRowModel = this.rowModel;
              break;
            case 'infinite':
              this.infiniteRowModel = this.rowModel;
              break;
            case 'serverSide':
              this.serverSideRowModel = this.rowModel;
              break;
          }
          this.ctrlsService.whenReady(function () {
            t.gridBodyCtrl = t.ctrlsService.getGridBodyCtrl();
          });
        }),
        (n.prototype.__getAlignedGridService = function () {
          return this.alignedGridsService;
        }),
        (n.prototype.__getContext = function () {
          return this.context;
        }),
        (n.prototype.__getModel = function () {
          return this.rowModel;
        }),
        (n.prototype.getGridId = function () {
          return this.context.getGridId();
        }),
        (n.prototype.addDetailGridInfo = function (t, e) {
          this.detailGridInfoMap[t] = e;
        }),
        (n.prototype.removeDetailGridInfo = function (t) {
          this.detailGridInfoMap[t] = void 0;
        }),
        (n.prototype.getDetailGridInfo = function (t) {
          return this.detailGridInfoMap[t];
        }),
        (n.prototype.forEachDetailGridInfo = function (t) {
          var e = 0;
          ye(this.detailGridInfoMap, function (r, o) {
            P(o) && (t(o, e), e++);
          });
        }),
        (n.prototype.getDataAsCsv = function (t) {
          if (X.__assertRegistered(G.CsvExportModule, 'api.getDataAsCsv', this.context.getGridId()))
            return this.csvCreator.getDataAsCsv(t);
        }),
        (n.prototype.exportDataAsCsv = function (t) {
          X.__assertRegistered(
            G.CsvExportModule,
            'api.exportDataAsCSv',
            this.context.getGridId()
          ) && this.csvCreator.exportDataAsCsv(t);
        }),
        (n.prototype.assertNotExcelMultiSheet = function (t, e) {
          return X.__assertRegistered(G.ExcelExportModule, 'api.' + t, this.context.getGridId())
            ? this.excelCreator.getFactoryMode() === ui.MULTI_SHEET
              ? (console.warn(
                  "AG Grid: The Excel Exporter is currently on Multi Sheet mode. End that operation by calling 'api.getMultipleSheetAsExcel()' or 'api.exportMultipleSheetsAsExcel()'"
                ),
                !1)
              : !0
            : !1;
        }),
        (n.prototype.getDataAsExcel = function (t) {
          if (this.assertNotExcelMultiSheet('getDataAsExcel', t))
            return this.excelCreator.getDataAsExcel(t);
        }),
        (n.prototype.exportDataAsExcel = function (t) {
          this.assertNotExcelMultiSheet('exportDataAsExcel', t) &&
            this.excelCreator.exportDataAsExcel(t);
        }),
        (n.prototype.getSheetDataForExcel = function (t) {
          if (
            X.__assertRegistered(
              G.ExcelExportModule,
              'api.getSheetDataForExcel',
              this.context.getGridId()
            )
          )
            return (
              this.excelCreator.setFactoryMode(ui.MULTI_SHEET),
              this.excelCreator.getSheetDataForExcel(t)
            );
        }),
        (n.prototype.getMultipleSheetsAsExcel = function (t) {
          if (
            X.__assertRegistered(
              G.ExcelExportModule,
              'api.getMultipleSheetsAsExcel',
              this.context.getGridId()
            )
          )
            return this.excelCreator.getMultipleSheetsAsExcel(t);
        }),
        (n.prototype.exportMultipleSheetsAsExcel = function (t) {
          X.__assertRegistered(
            G.ExcelExportModule,
            'api.exportMultipleSheetsAsExcel',
            this.context.getGridId()
          ) && this.excelCreator.exportMultipleSheetsAsExcel(t);
        }),
        (n.prototype.setGridAriaProperty = function (t, e) {
          if (t) {
            var r = this.ctrlsService.getGridBodyCtrl().getGui(),
              o = 'aria-'.concat(t);
            e === null ? r.removeAttribute(o) : r.setAttribute(o, e);
          }
        }),
        (n.prototype.logMissingRowModel = function (t) {
          for (var e = [], r = 1; r < arguments.length; r++) e[r - 1] = arguments[r];
          console.error(
            'AG Grid: api.'
              .concat(t, ' can only be called when gridOptions.rowModelType is ')
              .concat(e.join(' or '))
          );
        }),
        (n.prototype.logDeprecation = function (t, e, r, o) {
          V(
            'Since '
              .concat(t, ' api.')
              .concat(e, ' is deprecated. Please use ')
              .concat(r, ' instead. ')
              .concat(o)
          );
        }),
        (n.prototype.getPinnedTopRowCount = function () {
          return this.pinnedRowModel.getPinnedTopRowCount();
        }),
        (n.prototype.getPinnedBottomRowCount = function () {
          return this.pinnedRowModel.getPinnedBottomRowCount();
        }),
        (n.prototype.getPinnedTopRow = function (t) {
          return this.pinnedRowModel.getPinnedTopRow(t);
        }),
        (n.prototype.getPinnedBottomRow = function (t) {
          return this.pinnedRowModel.getPinnedBottomRow(t);
        }),
        (n.prototype.expireValueCache = function () {
          this.valueCache.expire();
        }),
        (n.prototype.getVerticalPixelRange = function () {
          return this.gridBodyCtrl.getScrollFeature().getVScrollPosition();
        }),
        (n.prototype.getHorizontalPixelRange = function () {
          return this.gridBodyCtrl.getScrollFeature().getHScrollPosition();
        }),
        (n.prototype.refreshCells = function (t) {
          var e = this;
          t === void 0 && (t = {}),
            this.frameworkOverrides.wrapIncoming(function () {
              return e.rowRenderer.refreshCells(t);
            });
        }),
        (n.prototype.flashCells = function (t) {
          var e = this;
          t === void 0 && (t = {});
          var r = function (o) {
            return V(
              "Since v31.1 api.flashCells parameter '"
                .concat(o, "Delay' is deprecated. Please use '")
                .concat(o, "Duration' instead.")
            );
          };
          P(t.fadeDelay) && r('fade'),
            P(t.flashDelay) && r('flash'),
            this.frameworkOverrides.wrapIncoming(function () {
              return e.rowRenderer.flashCells(t);
            });
        }),
        (n.prototype.redrawRows = function (t) {
          var e = this;
          t === void 0 && (t = {});
          var r = t ? t.rowNodes : void 0;
          this.frameworkOverrides.wrapIncoming(function () {
            return e.rowRenderer.redrawRows(r);
          });
        }),
        (n.prototype.refreshHeader = function () {
          var t = this;
          this.frameworkOverrides.wrapIncoming(function () {
            return t.ctrlsService.getHeaderRowContainerCtrls().forEach(function (e) {
              return e.refresh();
            });
          });
        }),
        (n.prototype.isAnyFilterPresent = function () {
          return this.filterManager.isAnyFilterPresent();
        }),
        (n.prototype.isColumnFilterPresent = function () {
          return (
            this.filterManager.isColumnFilterPresent() ||
            this.filterManager.isAggregateFilterPresent()
          );
        }),
        (n.prototype.isQuickFilterPresent = function () {
          return this.filterManager.isQuickFilterPresent();
        }),
        (n.prototype.getModel = function () {
          return (
            V(
              'Since v31.1 getModel() is deprecated. Please use the appropriate grid API methods instead.'
            ),
            this.rowModel
          );
        }),
        (n.prototype.setRowNodeExpanded = function (t, e, r) {
          this.expansionService.setRowNodeExpanded(t, e, r);
        }),
        (n.prototype.onGroupExpandedOrCollapsed = function () {
          if (H(this.clientSideRowModel)) {
            this.logMissingRowModel('onGroupExpandedOrCollapsed', 'clientSide');
            return;
          }
          this.expansionService.onGroupExpandedOrCollapsed();
        }),
        (n.prototype.refreshClientSideRowModel = function (t) {
          if (H(this.clientSideRowModel)) {
            this.logMissingRowModel('refreshClientSideRowModel', 'clientSide');
            return;
          }
          this.clientSideRowModel.refreshModel(t);
        }),
        (n.prototype.isAnimationFrameQueueEmpty = function () {
          return this.animationFrameService.isQueueEmpty();
        }),
        (n.prototype.flushAllAnimationFrames = function () {
          this.animationFrameService.flushAllFrames();
        }),
        (n.prototype.getRowNode = function (t) {
          return this.rowModel.getRowNode(t);
        }),
        (n.prototype.getSizesForCurrentTheme = function () {
          return {
            rowHeight: this.gos.getRowHeightAsNumber(),
            headerHeight: this.columnModel.getHeaderHeight(),
          };
        }),
        (n.prototype.expandAll = function () {
          this.clientSideRowModel || this.serverSideRowModel
            ? this.expansionService.expandAll(!0)
            : this.logMissingRowModel('expandAll', 'clientSide', 'serverSide');
        }),
        (n.prototype.collapseAll = function () {
          this.clientSideRowModel || this.serverSideRowModel
            ? this.expansionService.expandAll(!1)
            : this.logMissingRowModel('collapseAll', 'clientSide', 'serverSide');
        }),
        (n.prototype.addRenderedRowListener = function (t, e, r) {
          this.rowRenderer.addRenderedRowListener(t, e, r);
        }),
        (n.prototype.getQuickFilter = function () {
          return this.gos.get('quickFilterText');
        }),
        (n.prototype.getAdvancedFilterModel = function () {
          return X.__assertRegistered(
            G.AdvancedFilterModule,
            'api.getAdvancedFilterModel',
            this.context.getGridId()
          )
            ? this.filterManager.getAdvancedFilterModel()
            : null;
        }),
        (n.prototype.setAdvancedFilterModel = function (t) {
          this.filterManager.setAdvancedFilterModel(t);
        }),
        (n.prototype.showAdvancedFilterBuilder = function () {
          X.__assertRegistered(
            G.AdvancedFilterModule,
            'api.setAdvancedFilterModel',
            this.context.getGridId()
          ) && this.filterManager.showAdvancedFilterBuilder('api');
        }),
        (n.prototype.setNodesSelected = function (t) {
          var e = t.nodes.every(function (a) {
            return a.rowPinned
              ? (console.warn('AG Grid: cannot select pinned rows'), !1)
              : a.id === void 0
              ? (console.warn('AG Grid: cannot select node until id for node is known'), !1)
              : !0;
          });
          if (e) {
            var r = t.nodes,
              o = t.source,
              i = t.newValue,
              s = r;
            this.selectionService.setNodesSelected({ nodes: s, source: o ?? 'api', newValue: i });
          }
        }),
        (n.prototype.selectAll = function (t) {
          t === void 0 && (t = 'apiSelectAll'),
            this.selectionService.selectAllRowNodes({ source: t });
        }),
        (n.prototype.deselectAll = function (t) {
          t === void 0 && (t = 'apiSelectAll'),
            this.selectionService.deselectAllRowNodes({ source: t });
        }),
        (n.prototype.selectAllFiltered = function (t) {
          t === void 0 && (t = 'apiSelectAllFiltered'),
            this.selectionService.selectAllRowNodes({ source: t, justFiltered: !0 });
        }),
        (n.prototype.deselectAllFiltered = function (t) {
          t === void 0 && (t = 'apiSelectAllFiltered'),
            this.selectionService.deselectAllRowNodes({ source: t, justFiltered: !0 });
        }),
        (n.prototype.getServerSideSelectionState = function () {
          return H(this.serverSideRowModel)
            ? (this.logMissingRowModel('getServerSideSelectionState', 'serverSide'), null)
            : this.selectionService.getSelectionState();
        }),
        (n.prototype.setServerSideSelectionState = function (t) {
          if (H(this.serverSideRowModel)) {
            this.logMissingRowModel('setServerSideSelectionState', 'serverSide');
            return;
          }
          this.selectionService.setSelectionState(t, 'api');
        }),
        (n.prototype.selectAllOnCurrentPage = function (t) {
          t === void 0 && (t = 'apiSelectAllCurrentPage'),
            this.selectionService.selectAllRowNodes({ source: t, justCurrentPage: !0 });
        }),
        (n.prototype.deselectAllOnCurrentPage = function (t) {
          t === void 0 && (t = 'apiSelectAllCurrentPage'),
            this.selectionService.deselectAllRowNodes({ source: t, justCurrentPage: !0 });
        }),
        (n.prototype.showLoadingOverlay = function () {
          this.overlayService.showLoadingOverlay();
        }),
        (n.prototype.showNoRowsOverlay = function () {
          this.overlayService.showNoRowsOverlay();
        }),
        (n.prototype.hideOverlay = function () {
          this.overlayService.hideOverlay();
        }),
        (n.prototype.getSelectedNodes = function () {
          return this.selectionService.getSelectedNodes();
        }),
        (n.prototype.getSelectedRows = function () {
          return this.selectionService.getSelectedRows();
        }),
        (n.prototype.getBestCostNodeSelection = function () {
          if (H(this.clientSideRowModel)) {
            this.logMissingRowModel('getBestCostNodeSelection', 'clientSide');
            return;
          }
          return this.selectionService.getBestCostNodeSelection();
        }),
        (n.prototype.getRenderedNodes = function () {
          return this.rowRenderer.getRenderedNodes();
        }),
        (n.prototype.ensureColumnVisible = function (t, e) {
          var r = this;
          e === void 0 && (e = 'auto'),
            this.frameworkOverrides.wrapIncoming(function () {
              return r.gridBodyCtrl.getScrollFeature().ensureColumnVisible(t, e);
            }, 'ensureVisible');
        }),
        (n.prototype.ensureIndexVisible = function (t, e) {
          var r = this;
          this.frameworkOverrides.wrapIncoming(function () {
            return r.gridBodyCtrl.getScrollFeature().ensureIndexVisible(t, e);
          }, 'ensureVisible');
        }),
        (n.prototype.ensureNodeVisible = function (t, e) {
          var r = this;
          e === void 0 && (e = null),
            this.frameworkOverrides.wrapIncoming(function () {
              return r.gridBodyCtrl.getScrollFeature().ensureNodeVisible(t, e);
            }, 'ensureVisible');
        }),
        (n.prototype.forEachLeafNode = function (t) {
          if (H(this.clientSideRowModel)) {
            this.logMissingRowModel('forEachLeafNode', 'clientSide');
            return;
          }
          this.clientSideRowModel.forEachLeafNode(t);
        }),
        (n.prototype.forEachNode = function (t, e) {
          this.rowModel.forEachNode(t, e);
        }),
        (n.prototype.forEachNodeAfterFilter = function (t) {
          if (H(this.clientSideRowModel)) {
            this.logMissingRowModel('forEachNodeAfterFilter', 'clientSide');
            return;
          }
          this.clientSideRowModel.forEachNodeAfterFilter(t);
        }),
        (n.prototype.forEachNodeAfterFilterAndSort = function (t) {
          if (H(this.clientSideRowModel)) {
            this.logMissingRowModel('forEachNodeAfterFilterAndSort', 'clientSide');
            return;
          }
          this.clientSideRowModel.forEachNodeAfterFilterAndSort(t);
        }),
        (n.prototype.getFilterInstance = function (t, e) {
          return (
            V(
              "'getFilterInstance' is deprecated. To get/set individual filter models, use 'getColumnFilterModel' or 'setColumnFilterModel' instead. To get hold of the filter instance, use 'getColumnFilterInstance' which returns the instance asynchronously."
            ),
            this.filterManager.getFilterInstance(t, e)
          );
        }),
        (n.prototype.getColumnFilterInstance = function (t) {
          return this.filterManager.getColumnFilterInstance(t);
        }),
        (n.prototype.destroyFilter = function (t) {
          var e = this.columnModel.getPrimaryColumn(t);
          if (e) return this.filterManager.destroyFilter(e, 'api');
        }),
        (n.prototype.getStatusPanel = function (t) {
          if (
            X.__assertRegistered(G.StatusBarModule, 'api.getStatusPanel', this.context.getGridId())
          ) {
            var e = this.statusBarService.getStatusPanel(t);
            return dr(e);
          }
        }),
        (n.prototype.getColumnDef = function (t) {
          var e = this.columnModel.getPrimaryColumn(t);
          return e ? e.getColDef() : null;
        }),
        (n.prototype.getColumnDefs = function () {
          return this.columnModel.getColumnDefs();
        }),
        (n.prototype.onFilterChanged = function (t) {
          t === void 0 && (t = 'api'), this.filterManager.onFilterChanged({ source: t });
        }),
        (n.prototype.onSortChanged = function () {
          this.sortController.onSortChanged('api');
        }),
        (n.prototype.setFilterModel = function (t) {
          var e = this;
          this.frameworkOverrides.wrapIncoming(function () {
            return e.filterManager.setFilterModel(t);
          });
        }),
        (n.prototype.getFilterModel = function () {
          return this.filterManager.getFilterModel();
        }),
        (n.prototype.getColumnFilterModel = function (t) {
          return this.filterManager.getColumnFilterModel(t);
        }),
        (n.prototype.setColumnFilterModel = function (t, e) {
          return this.filterManager.setColumnFilterModel(t, e);
        }),
        (n.prototype.getFocusedCell = function () {
          return this.focusService.getFocusedCell();
        }),
        (n.prototype.clearFocusedCell = function () {
          return this.focusService.clearFocusedCell();
        }),
        (n.prototype.setFocusedCell = function (t, e, r) {
          this.focusService.setFocusedCell({
            rowIndex: t,
            column: e,
            rowPinned: r,
            forceBrowserFocus: !0,
          });
        }),
        (n.prototype.addRowDropZone = function (t) {
          this.gridBodyCtrl.getRowDragFeature().addRowDropZone(t);
        }),
        (n.prototype.removeRowDropZone = function (t) {
          var e = this.dragAndDropService.findExternalZone(t);
          e && this.dragAndDropService.removeDropTarget(e);
        }),
        (n.prototype.getRowDropZoneParams = function (t) {
          return this.gridBodyCtrl.getRowDragFeature().getRowDropZone(t);
        }),
        (n.prototype.assertSideBarLoaded = function (t) {
          return X.__assertRegistered(G.SideBarModule, 'api.' + t, this.context.getGridId());
        }),
        (n.prototype.isSideBarVisible = function () {
          return (
            this.assertSideBarLoaded('isSideBarVisible') &&
            this.sideBarService.getSideBarComp().isDisplayed()
          );
        }),
        (n.prototype.setSideBarVisible = function (t) {
          this.assertSideBarLoaded('setSideBarVisible') &&
            this.sideBarService.getSideBarComp().setDisplayed(t);
        }),
        (n.prototype.setSideBarPosition = function (t) {
          this.assertSideBarLoaded('setSideBarPosition') &&
            this.sideBarService.getSideBarComp().setSideBarPosition(t);
        }),
        (n.prototype.openToolPanel = function (t) {
          this.assertSideBarLoaded('openToolPanel') &&
            this.sideBarService.getSideBarComp().openToolPanel(t, 'api');
        }),
        (n.prototype.closeToolPanel = function () {
          this.assertSideBarLoaded('closeToolPanel') &&
            this.sideBarService.getSideBarComp().close('api');
        }),
        (n.prototype.getOpenedToolPanel = function () {
          return this.assertSideBarLoaded('getOpenedToolPanel')
            ? this.sideBarService.getSideBarComp().openedItem()
            : null;
        }),
        (n.prototype.refreshToolPanel = function () {
          this.assertSideBarLoaded('refreshToolPanel') &&
            this.sideBarService.getSideBarComp().refresh();
        }),
        (n.prototype.isToolPanelShowing = function () {
          return (
            this.assertSideBarLoaded('isToolPanelShowing') &&
            this.sideBarService.getSideBarComp().isToolPanelShowing()
          );
        }),
        (n.prototype.getToolPanelInstance = function (t) {
          if (this.assertSideBarLoaded('getToolPanelInstance')) {
            var e = this.sideBarService.getSideBarComp().getToolPanelInstance(t);
            return dr(e);
          }
        }),
        (n.prototype.getSideBar = function () {
          if (this.assertSideBarLoaded('getSideBar'))
            return this.sideBarService.getSideBarComp().getDef();
        }),
        (n.prototype.resetRowHeights = function () {
          if (P(this.clientSideRowModel)) {
            if (this.columnModel.isAutoRowHeightActive()) {
              console.warn(
                'AG Grid: calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.'
              );
              return;
            }
            this.clientSideRowModel.resetRowHeights();
          }
        }),
        (n.prototype.setRowCount = function (t, e) {
          if (this.serverSideRowModel) {
            if (this.columnModel.isRowGroupEmpty()) {
              this.serverSideRowModel.setRowCount(t, e);
              return;
            }
            console.error('AG Grid: setRowCount cannot be used while using row grouping.');
            return;
          }
          if (this.infiniteRowModel) {
            this.infiniteRowModel.setRowCount(t, e);
            return;
          }
          this.logMissingRowModel('setRowCount', 'infinite', 'serverSide');
        }),
        (n.prototype.onRowHeightChanged = function () {
          this.clientSideRowModel
            ? this.clientSideRowModel.onRowHeightChanged()
            : this.serverSideRowModel && this.serverSideRowModel.onRowHeightChanged();
        }),
        (n.prototype.getValue = function (t, e) {
          var r = this.columnModel.getPrimaryColumn(t);
          return (
            H(r) && (r = this.columnModel.getGridColumn(t)),
            H(r) ? null : this.valueService.getValue(r, e)
          );
        }),
        (n.prototype.addEventListener = function (t, e) {
          this.apiEventService.addEventListener(t, e);
        }),
        (n.prototype.addGlobalListener = function (t) {
          this.apiEventService.addGlobalListener(t);
        }),
        (n.prototype.removeEventListener = function (t, e) {
          this.apiEventService.removeEventListener(t, e);
        }),
        (n.prototype.removeGlobalListener = function (t) {
          this.apiEventService.removeGlobalListener(t);
        }),
        (n.prototype.dispatchEvent = function (t) {
          this.eventService.dispatchEvent(t);
        }),
        (n.prototype.destroy = function () {
          var t = 'See '.concat(
            this.frameworkOverrides.getDocLink('grid-lifecycle/#grid-pre-destroyed')
          );
          if (!this.destroyCalled) {
            var e = { type: g.EVENT_GRID_PRE_DESTROYED, state: this.getState() };
            this.dispatchEvent(e), (this.destroyCalled = !0);
            var r = this.ctrlsService.getGridCtrl();
            r && r.destroyGridUi(), this.context.destroy(), ca(this, ['isDestroyed'], t);
          }
        }),
        (n.prototype.isDestroyed = function () {
          return this.destroyCalled;
        }),
        (n.prototype.resetQuickFilter = function () {
          this.filterManager.resetQuickFilterCache();
        }),
        (n.prototype.getCellRanges = function () {
          return this.rangeService
            ? this.rangeService.getCellRanges()
            : (X.__assertRegistered(
                G.RangeSelectionModule,
                'api.getCellRanges',
                this.context.getGridId()
              ),
              null);
        }),
        (n.prototype.addCellRange = function (t) {
          if (this.rangeService) {
            this.rangeService.addCellRange(t);
            return;
          }
          X.__assertRegistered(
            G.RangeSelectionModule,
            'api.addCellRange',
            this.context.getGridId()
          );
        }),
        (n.prototype.clearRangeSelection = function () {
          this.rangeService && this.rangeService.removeAllCellRanges(),
            X.__assertRegistered(
              G.RangeSelectionModule,
              'gridApi.clearRangeSelection',
              this.context.getGridId()
            );
        }),
        (n.prototype.undoCellEditing = function () {
          this.undoRedoService.undo('api');
        }),
        (n.prototype.redoCellEditing = function () {
          this.undoRedoService.redo('api');
        }),
        (n.prototype.getCurrentUndoSize = function () {
          return this.undoRedoService.getCurrentUndoStackSize();
        }),
        (n.prototype.getCurrentRedoSize = function () {
          return this.undoRedoService.getCurrentRedoStackSize();
        }),
        (n.prototype.assertChart = function (t, e) {
          if (X.__assertRegistered(G.GridChartsModule, 'api.' + t, this.context.getGridId()))
            return this.frameworkOverrides.wrapIncoming(function () {
              return e();
            });
        }),
        (n.prototype.getChartModels = function () {
          var t = this;
          return this.assertChart('getChartModels', function () {
            return t.chartService.getChartModels();
          });
        }),
        (n.prototype.getChartRef = function (t) {
          var e = this;
          return this.assertChart('getChartRef', function () {
            return e.chartService.getChartRef(t);
          });
        }),
        (n.prototype.getChartImageDataURL = function (t) {
          var e = this;
          return this.assertChart('getChartImageDataURL', function () {
            return e.chartService.getChartImageDataURL(t);
          });
        }),
        (n.prototype.downloadChart = function (t) {
          var e = this;
          return this.assertChart('downloadChart', function () {
            return e.chartService.downloadChart(t);
          });
        }),
        (n.prototype.openChartToolPanel = function (t) {
          var e = this;
          return this.assertChart('openChartToolPanel', function () {
            return e.chartService.openChartToolPanel(t);
          });
        }),
        (n.prototype.closeChartToolPanel = function (t) {
          var e = this;
          return this.assertChart('closeChartToolPanel', function () {
            return e.chartService.closeChartToolPanel(t.chartId);
          });
        }),
        (n.prototype.createRangeChart = function (t) {
          var e = this;
          return this.assertChart('createRangeChart', function () {
            return e.chartService.createRangeChart(t);
          });
        }),
        (n.prototype.createPivotChart = function (t) {
          var e = this;
          return this.assertChart('createPivotChart', function () {
            return e.chartService.createPivotChart(t);
          });
        }),
        (n.prototype.createCrossFilterChart = function (t) {
          var e = this;
          return this.assertChart('createCrossFilterChart', function () {
            return e.chartService.createCrossFilterChart(t);
          });
        }),
        (n.prototype.updateChart = function (t) {
          var e = this;
          return this.assertChart('updateChart', function () {
            return e.chartService.updateChart(t);
          });
        }),
        (n.prototype.restoreChart = function (t, e) {
          var r = this;
          return this.assertChart('restoreChart', function () {
            return r.chartService.restoreChart(t, e);
          });
        }),
        (n.prototype.assertClipboard = function (t, e) {
          X.__assertRegistered(G.ClipboardModule, 'api' + t, this.context.getGridId()) && e();
        }),
        (n.prototype.copyToClipboard = function (t) {
          var e = this;
          this.assertClipboard('copyToClipboard', function () {
            return e.clipboardService.copyToClipboard(t);
          });
        }),
        (n.prototype.cutToClipboard = function (t) {
          var e = this;
          this.assertClipboard('cutToClipboard', function () {
            return e.clipboardService.cutToClipboard(t);
          });
        }),
        (n.prototype.copySelectedRowsToClipboard = function (t) {
          var e = this;
          this.assertClipboard('copySelectedRowsToClipboard', function () {
            return e.clipboardService.copySelectedRowsToClipboard(t);
          });
        }),
        (n.prototype.copySelectedRangeToClipboard = function (t) {
          var e = this;
          this.assertClipboard('copySelectedRangeToClipboard', function () {
            return e.clipboardService.copySelectedRangeToClipboard(t);
          });
        }),
        (n.prototype.copySelectedRangeDown = function () {
          var t = this;
          this.assertClipboard('copySelectedRangeDown', function () {
            return t.clipboardService.copyRangeDown();
          });
        }),
        (n.prototype.pasteFromClipboard = function () {
          var t = this;
          this.assertClipboard('pasteFromClipboard', function () {
            return t.clipboardService.pasteFromClipboard();
          });
        }),
        (n.prototype.showColumnMenuAfterButtonClick = function (t, e) {
          V(
            "'showColumnMenuAfterButtonClick' is deprecated. Use 'IHeaderParams.showColumnMenu' within a header component, or 'api.showColumnMenu' elsewhere."
          );
          var r = this.columnModel.getGridColumn(t);
          this.menuService.showColumnMenu({ column: r, buttonElement: e, positionBy: 'button' });
        }),
        (n.prototype.showColumnMenuAfterMouseClick = function (t, e) {
          V(
            "'showColumnMenuAfterMouseClick' is deprecated. Use 'IHeaderParams.showColumnMenuAfterMouseClick' within a header component, or 'api.showColumnMenu' elsewhere."
          );
          var r = this.columnModel.getGridColumn(t);
          if ((r || (r = this.columnModel.getPrimaryColumn(t)), !r)) {
            console.error("AG Grid: column '".concat(t, "' not found"));
            return;
          }
          this.menuService.showColumnMenu({ column: r, mouseEvent: e, positionBy: 'mouse' });
        }),
        (n.prototype.showColumnChooser = function (t) {
          this.menuService.showColumnChooser({ chooserParams: t });
        }),
        (n.prototype.showColumnFilter = function (t) {
          var e = this.columnModel.getGridColumn(t);
          if (!e) {
            console.error("AG Grid: column '".concat(t, "' not found"));
            return;
          }
          this.menuService.showFilterMenu({
            column: e,
            containerType: 'columnFilter',
            positionBy: 'auto',
          });
        }),
        (n.prototype.showColumnMenu = function (t) {
          var e = this.columnModel.getGridColumn(t);
          if (!e) {
            console.error("AG Grid: column '".concat(t, "' not found"));
            return;
          }
          this.menuService.showColumnMenu({ column: e, positionBy: 'auto' });
        }),
        (n.prototype.hidePopupMenu = function () {
          this.menuService.hidePopupMenu();
        }),
        (n.prototype.hideColumnChooser = function () {
          this.menuService.hideColumnChooser();
        }),
        (n.prototype.tabToNextCell = function (t) {
          return this.navigationService.tabToNextCell(!1, t);
        }),
        (n.prototype.tabToPreviousCell = function (t) {
          return this.navigationService.tabToNextCell(!0, t);
        }),
        (n.prototype.getCellRendererInstances = function (t) {
          t === void 0 && (t = {});
          var e = this.rowRenderer.getCellRendererInstances(t),
            r = e.map(dr);
          return r;
        }),
        (n.prototype.getCellEditorInstances = function (t) {
          t === void 0 && (t = {});
          var e = this.rowRenderer.getCellEditorInstances(t),
            r = e.map(dr);
          return r;
        }),
        (n.prototype.getEditingCells = function () {
          return this.rowRenderer.getEditingCells();
        }),
        (n.prototype.stopEditing = function (t) {
          t === void 0 && (t = !1), this.rowRenderer.stopEditing(t);
        }),
        (n.prototype.startEditingCell = function (t) {
          var e = this.columnModel.getGridColumn(t.colKey);
          if (!e) {
            console.warn('AG Grid: no column found for '.concat(t.colKey));
            return;
          }
          var r = { rowIndex: t.rowIndex, rowPinned: t.rowPinned || null, column: e },
            o = t.rowPinned == null;
          o && this.ensureIndexVisible(t.rowIndex), this.ensureColumnVisible(t.colKey);
          var i = this.navigationService.getCellByPosition(r);
          i &&
            (this.focusService.isCellFocused(r) || this.focusService.setFocusedCell(r),
            i.startRowOrCellEdit(t.key));
        }),
        (n.prototype.addAggFunc = function (t, e) {
          this.logDeprecation('v31.1', 'addAggFunc(key, func)', 'addAggFuncs({ key: func })'),
            this.aggFuncService && this.aggFuncService.addAggFuncs({ key: e });
        }),
        (n.prototype.addAggFuncs = function (t) {
          this.aggFuncService && this.aggFuncService.addAggFuncs(t);
        }),
        (n.prototype.clearAggFuncs = function () {
          this.aggFuncService && this.aggFuncService.clear();
        }),
        (n.prototype.applyServerSideTransaction = function (t) {
          if (!this.serverSideTransactionManager) {
            this.logMissingRowModel('applyServerSideTransaction', 'serverSide');
            return;
          }
          return this.serverSideTransactionManager.applyTransaction(t);
        }),
        (n.prototype.applyServerSideTransactionAsync = function (t, e) {
          if (!this.serverSideTransactionManager) {
            this.logMissingRowModel('applyServerSideTransactionAsync', 'serverSide');
            return;
          }
          return this.serverSideTransactionManager.applyTransactionAsync(t, e);
        }),
        (n.prototype.applyServerSideRowData = function (t) {
          var e,
            r,
            o = (e = t.startRow) !== null && e !== void 0 ? e : 0,
            i = (r = t.route) !== null && r !== void 0 ? r : [];
          if (o < 0) {
            console.warn(
              'AG Grid: invalid value '.concat(
                t.startRow,
                ' for startRow, the value should be >= 0'
              )
            );
            return;
          }
          this.serverSideRowModel
            ? this.serverSideRowModel.applyRowData(t.successParams, o, i)
            : this.logMissingRowModel('setServerSideDatasource', 'serverSide');
        }),
        (n.prototype.retryServerSideLoads = function () {
          if (!this.serverSideRowModel) {
            this.logMissingRowModel('retryServerSideLoads', 'serverSide');
            return;
          }
          this.serverSideRowModel.retryLoads();
        }),
        (n.prototype.flushServerSideAsyncTransactions = function () {
          if (!this.serverSideTransactionManager) {
            this.logMissingRowModel('flushServerSideAsyncTransactions', 'serverSide');
            return;
          }
          return this.serverSideTransactionManager.flushAsyncTransactions();
        }),
        (n.prototype.applyTransaction = function (t) {
          var e = this;
          if (!this.clientSideRowModel) {
            this.logMissingRowModel('applyTransaction', 'clientSide');
            return;
          }
          return this.frameworkOverrides.wrapIncoming(function () {
            return e.clientSideRowModel.updateRowData(t);
          });
        }),
        (n.prototype.applyTransactionAsync = function (t, e) {
          var r = this;
          if (!this.clientSideRowModel) {
            this.logMissingRowModel('applyTransactionAsync', 'clientSide');
            return;
          }
          this.frameworkOverrides.wrapIncoming(function () {
            return r.clientSideRowModel.batchUpdateRowData(t, e);
          });
        }),
        (n.prototype.flushAsyncTransactions = function () {
          var t = this;
          if (!this.clientSideRowModel) {
            this.logMissingRowModel('flushAsyncTransactions', 'clientSide');
            return;
          }
          this.frameworkOverrides.wrapIncoming(function () {
            return t.clientSideRowModel.flushAsyncTransactions();
          });
        }),
        (n.prototype.refreshInfiniteCache = function () {
          this.infiniteRowModel
            ? this.infiniteRowModel.refreshCache()
            : this.logMissingRowModel('refreshInfiniteCache', 'infinite');
        }),
        (n.prototype.purgeInfiniteCache = function () {
          this.infiniteRowModel
            ? this.infiniteRowModel.purgeCache()
            : this.logMissingRowModel('purgeInfiniteCache', 'infinite');
        }),
        (n.prototype.refreshServerSide = function (t) {
          if (!this.serverSideRowModel) {
            this.logMissingRowModel('refreshServerSide', 'serverSide');
            return;
          }
          this.serverSideRowModel.refreshStore(t);
        }),
        (n.prototype.getServerSideGroupLevelState = function () {
          return this.serverSideRowModel
            ? this.serverSideRowModel.getStoreState()
            : (this.logMissingRowModel('getServerSideGroupLevelState', 'serverSide'), []);
        }),
        (n.prototype.getInfiniteRowCount = function () {
          if (this.infiniteRowModel) return this.infiniteRowModel.getRowCount();
          this.logMissingRowModel('getInfiniteRowCount', 'infinite');
        }),
        (n.prototype.isLastRowIndexKnown = function () {
          if (this.infiniteRowModel) return this.infiniteRowModel.isLastRowIndexKnown();
          this.logMissingRowModel('isLastRowIndexKnown', 'infinite');
        }),
        (n.prototype.getCacheBlockState = function () {
          return this.rowNodeBlockLoader.getBlockState();
        }),
        (n.prototype.getFirstDisplayedRow = function () {
          return (
            this.logDeprecation('v31.1', 'getFirstDisplayedRow', 'getFirstDisplayedRowIndex'),
            this.getFirstDisplayedRowIndex()
          );
        }),
        (n.prototype.getFirstDisplayedRowIndex = function () {
          return this.rowRenderer.getFirstVirtualRenderedRow();
        }),
        (n.prototype.getLastDisplayedRow = function () {
          return (
            this.logDeprecation('v31.1', 'getLastDisplayedRow', 'getLastDisplayedRowIndex'),
            this.getLastDisplayedRowIndex()
          );
        }),
        (n.prototype.getLastDisplayedRowIndex = function () {
          return this.rowRenderer.getLastVirtualRenderedRow();
        }),
        (n.prototype.getDisplayedRowAtIndex = function (t) {
          return this.rowModel.getRow(t);
        }),
        (n.prototype.getDisplayedRowCount = function () {
          return this.rowModel.getRowCount();
        }),
        (n.prototype.paginationIsLastPageFound = function () {
          return this.paginationProxy.isLastPageFound();
        }),
        (n.prototype.paginationGetPageSize = function () {
          return this.paginationProxy.getPageSize();
        }),
        (n.prototype.paginationGetCurrentPage = function () {
          return this.paginationProxy.getCurrentPage();
        }),
        (n.prototype.paginationGetTotalPages = function () {
          return this.paginationProxy.getTotalPages();
        }),
        (n.prototype.paginationGetRowCount = function () {
          return this.paginationProxy.getMasterRowCount();
        }),
        (n.prototype.paginationGoToNextPage = function () {
          this.paginationProxy.goToNextPage();
        }),
        (n.prototype.paginationGoToPreviousPage = function () {
          this.paginationProxy.goToPreviousPage();
        }),
        (n.prototype.paginationGoToFirstPage = function () {
          this.paginationProxy.goToFirstPage();
        }),
        (n.prototype.paginationGoToLastPage = function () {
          this.paginationProxy.goToLastPage();
        }),
        (n.prototype.paginationGoToPage = function (t) {
          this.paginationProxy.goToPage(t);
        }),
        (n.prototype.sizeColumnsToFit = function (t) {
          typeof t == 'number'
            ? this.columnModel.sizeColumnsToFit(t, 'api')
            : this.gridBodyCtrl.sizeColumnsToFit(t);
        }),
        (n.prototype.setColumnGroupOpened = function (t, e) {
          this.columnModel.setColumnGroupOpened(t, e, 'api');
        }),
        (n.prototype.getColumnGroup = function (t, e) {
          return this.columnModel.getColumnGroup(t, e);
        }),
        (n.prototype.getProvidedColumnGroup = function (t) {
          return this.columnModel.getProvidedColumnGroup(t);
        }),
        (n.prototype.getDisplayNameForColumn = function (t, e) {
          return this.columnModel.getDisplayNameForColumn(t, e) || '';
        }),
        (n.prototype.getDisplayNameForColumnGroup = function (t, e) {
          return this.columnModel.getDisplayNameForColumnGroup(t, e) || '';
        }),
        (n.prototype.getColumn = function (t) {
          return this.columnModel.getPrimaryColumn(t);
        }),
        (n.prototype.getColumns = function () {
          return this.columnModel.getAllPrimaryColumns();
        }),
        (n.prototype.applyColumnState = function (t) {
          return this.columnModel.applyColumnState(t, 'api');
        }),
        (n.prototype.getColumnState = function () {
          return this.columnModel.getColumnState();
        }),
        (n.prototype.resetColumnState = function () {
          this.columnModel.resetColumnState('api');
        }),
        (n.prototype.getColumnGroupState = function () {
          return this.columnModel.getColumnGroupState();
        }),
        (n.prototype.setColumnGroupState = function (t) {
          this.columnModel.setColumnGroupState(t, 'api');
        }),
        (n.prototype.resetColumnGroupState = function () {
          this.columnModel.resetColumnGroupState('api');
        }),
        (n.prototype.isPinning = function () {
          return this.columnModel.isPinningLeft() || this.columnModel.isPinningRight();
        }),
        (n.prototype.isPinningLeft = function () {
          return this.columnModel.isPinningLeft();
        }),
        (n.prototype.isPinningRight = function () {
          return this.columnModel.isPinningRight();
        }),
        (n.prototype.getDisplayedColAfter = function (t) {
          return this.columnModel.getDisplayedColAfter(t);
        }),
        (n.prototype.getDisplayedColBefore = function (t) {
          return this.columnModel.getDisplayedColBefore(t);
        }),
        (n.prototype.setColumnVisible = function (t, e) {
          this.logDeprecation(
            'v31.1',
            'setColumnVisible(key,visible)',
            'setColumnsVisible([key],visible)'
          ),
            this.columnModel.setColumnsVisible([t], e, 'api');
        }),
        (n.prototype.setColumnsVisible = function (t, e) {
          this.columnModel.setColumnsVisible(t, e, 'api');
        }),
        (n.prototype.setColumnPinned = function (t, e) {
          this.logDeprecation(
            'v31.1',
            'setColumnPinned(key,pinned)',
            'setColumnsPinned([key],pinned)'
          ),
            this.columnModel.setColumnsPinned([t], e, 'api');
        }),
        (n.prototype.setColumnsPinned = function (t, e) {
          this.columnModel.setColumnsPinned(t, e, 'api');
        }),
        (n.prototype.getAllGridColumns = function () {
          return this.columnModel.getAllGridColumns();
        }),
        (n.prototype.getDisplayedLeftColumns = function () {
          return this.columnModel.getDisplayedLeftColumns();
        }),
        (n.prototype.getDisplayedCenterColumns = function () {
          return this.columnModel.getDisplayedCenterColumns();
        }),
        (n.prototype.getDisplayedRightColumns = function () {
          return this.columnModel.getDisplayedRightColumns();
        }),
        (n.prototype.getAllDisplayedColumns = function () {
          return this.columnModel.getAllDisplayedColumns();
        }),
        (n.prototype.getAllDisplayedVirtualColumns = function () {
          return this.columnModel.getViewportColumns();
        }),
        (n.prototype.moveColumn = function (t, e) {
          this.logDeprecation('v31.1', 'moveColumn(key, toIndex)', 'moveColumns([key], toIndex)'),
            this.columnModel.moveColumns([t], e, 'api');
        }),
        (n.prototype.moveColumnByIndex = function (t, e) {
          this.columnModel.moveColumnByIndex(t, e, 'api');
        }),
        (n.prototype.moveColumns = function (t, e) {
          this.columnModel.moveColumns(t, e, 'api');
        }),
        (n.prototype.moveRowGroupColumn = function (t, e) {
          this.columnModel.moveRowGroupColumn(t, e, 'api');
        }),
        (n.prototype.setColumnAggFunc = function (t, e) {
          this.columnModel.setColumnAggFunc(t, e, 'api');
        }),
        (n.prototype.setColumnWidth = function (t, e, r, o) {
          r === void 0 && (r = !0),
            o === void 0 && (o = 'api'),
            this.logDeprecation(
              'v31.1',
              'setColumnWidth(col, width)',
              'setColumnWidths([{key: col, newWidth: width}])'
            ),
            this.columnModel.setColumnWidths([{ key: t, newWidth: e }], !1, r, o);
        }),
        (n.prototype.setColumnWidths = function (t, e, r) {
          e === void 0 && (e = !0),
            r === void 0 && (r = 'api'),
            this.columnModel.setColumnWidths(t, !1, e, r);
        }),
        (n.prototype.isPivotMode = function () {
          return this.columnModel.isPivotMode();
        }),
        (n.prototype.getPivotResultColumn = function (t, e) {
          return this.columnModel.getSecondaryPivotColumn(t, e);
        }),
        (n.prototype.setValueColumns = function (t) {
          this.columnModel.setValueColumns(t, 'api');
        }),
        (n.prototype.getValueColumns = function () {
          return this.columnModel.getValueColumns();
        }),
        (n.prototype.removeValueColumn = function (t) {
          this.logDeprecation('v31.1', 'removeValueColumn(colKey)', 'removeValueColumns([colKey])'),
            this.columnModel.removeValueColumns([t], 'api');
        }),
        (n.prototype.removeValueColumns = function (t) {
          this.columnModel.removeValueColumns(t, 'api');
        }),
        (n.prototype.addValueColumn = function (t) {
          this.logDeprecation('v31.1', 'addValueColumn(colKey)', 'addValueColumns([colKey])'),
            this.columnModel.addValueColumns([t], 'api');
        }),
        (n.prototype.addValueColumns = function (t) {
          this.columnModel.addValueColumns(t, 'api');
        }),
        (n.prototype.setRowGroupColumns = function (t) {
          this.columnModel.setRowGroupColumns(t, 'api');
        }),
        (n.prototype.removeRowGroupColumn = function (t) {
          this.logDeprecation(
            'v31.1',
            'removeRowGroupColumn(colKey)',
            'removeRowGroupColumns([colKey])'
          ),
            this.columnModel.removeRowGroupColumns([t], 'api');
        }),
        (n.prototype.removeRowGroupColumns = function (t) {
          this.columnModel.removeRowGroupColumns(t, 'api');
        }),
        (n.prototype.addRowGroupColumn = function (t) {
          this.logDeprecation('v31.1', 'addRowGroupColumn(colKey)', 'addRowGroupColumns([colKey])'),
            this.columnModel.addRowGroupColumns([t], 'api');
        }),
        (n.prototype.addRowGroupColumns = function (t) {
          this.columnModel.addRowGroupColumns(t, 'api');
        }),
        (n.prototype.getRowGroupColumns = function () {
          return this.columnModel.getRowGroupColumns();
        }),
        (n.prototype.setPivotColumns = function (t) {
          this.columnModel.setPivotColumns(t, 'api');
        }),
        (n.prototype.removePivotColumn = function (t) {
          this.logDeprecation('v31.1', 'removePivotColumn(colKey)', 'removePivotColumns([colKey])'),
            this.columnModel.removePivotColumns([t], 'api');
        }),
        (n.prototype.removePivotColumns = function (t) {
          this.columnModel.removePivotColumns(t, 'api');
        }),
        (n.prototype.addPivotColumn = function (t) {
          this.logDeprecation('v31.1', 'addPivotColumn(colKey)', 'addPivotColumns([colKey])'),
            this.columnModel.addPivotColumns([t], 'api');
        }),
        (n.prototype.addPivotColumns = function (t) {
          this.columnModel.addPivotColumns(t, 'api');
        }),
        (n.prototype.getPivotColumns = function () {
          return this.columnModel.getPivotColumns();
        }),
        (n.prototype.getLeftDisplayedColumnGroups = function () {
          return this.columnModel.getDisplayedTreeLeft();
        }),
        (n.prototype.getCenterDisplayedColumnGroups = function () {
          return this.columnModel.getDisplayedTreeCentre();
        }),
        (n.prototype.getRightDisplayedColumnGroups = function () {
          return this.columnModel.getDisplayedTreeRight();
        }),
        (n.prototype.getAllDisplayedColumnGroups = function () {
          return this.columnModel.getAllDisplayedTrees();
        }),
        (n.prototype.autoSizeColumn = function (t, e) {
          return (
            this.logDeprecation(
              'v31.1',
              'autoSizeColumn(key, skipHeader)',
              'autoSizeColumns([key], skipHeader)'
            ),
            this.columnModel.autoSizeColumns({ columns: [t], skipHeader: e, source: 'api' })
          );
        }),
        (n.prototype.autoSizeColumns = function (t, e) {
          this.columnModel.autoSizeColumns({ columns: t, skipHeader: e, source: 'api' });
        }),
        (n.prototype.autoSizeAllColumns = function (t) {
          this.columnModel.autoSizeAllColumns('api', t);
        }),
        (n.prototype.setPivotResultColumns = function (t) {
          this.columnModel.setSecondaryColumns(t, 'api');
        }),
        (n.prototype.getPivotResultColumns = function () {
          return this.columnModel.getSecondaryColumns();
        }),
        (n.prototype.getState = function () {
          return this.stateService.getState();
        }),
        (n.prototype.getGridOption = function (t) {
          return this.gos.get(t);
        }),
        (n.prototype.setGridOption = function (t, e) {
          var r;
          this.updateGridOptions(((r = {}), (r[t] = e), r));
        }),
        (n.prototype.updateGridOptions = function (t) {
          this.gos.updateGridOptions({ options: t });
        }),
        (n.prototype.__internalUpdateGridOptions = function (t) {
          this.gos.updateGridOptions({ options: t, source: 'gridOptionsUpdated' });
        }),
        (n.prototype.deprecatedUpdateGridOption = function (t, e) {
          V(
            'set'
              .concat(t.charAt(0).toUpperCase())
              .concat(t.slice(1, t.length), " is deprecated. Please use 'api.setGridOption('")
              .concat(t, "', newValue)' or 'api.updateGridOptions({ ")
              .concat(t, ": newValue })' instead.")
          ),
            this.setGridOption(t, e);
        }),
        (n.prototype.setPivotMode = function (t) {
          this.deprecatedUpdateGridOption('pivotMode', t);
        }),
        (n.prototype.setPinnedTopRowData = function (t) {
          this.deprecatedUpdateGridOption('pinnedTopRowData', t);
        }),
        (n.prototype.setPinnedBottomRowData = function (t) {
          this.deprecatedUpdateGridOption('pinnedBottomRowData', t);
        }),
        (n.prototype.setPopupParent = function (t) {
          this.deprecatedUpdateGridOption('popupParent', t);
        }),
        (n.prototype.setSuppressModelUpdateAfterUpdateTransaction = function (t) {
          this.deprecatedUpdateGridOption('suppressModelUpdateAfterUpdateTransaction', t);
        }),
        (n.prototype.setDataTypeDefinitions = function (t) {
          this.deprecatedUpdateGridOption('dataTypeDefinitions', t);
        }),
        (n.prototype.setPagination = function (t) {
          this.deprecatedUpdateGridOption('pagination', t);
        }),
        (n.prototype.paginationSetPageSize = function (t) {
          this.deprecatedUpdateGridOption('paginationPageSize', t);
        }),
        (n.prototype.setSideBar = function (t) {
          this.deprecatedUpdateGridOption('sideBar', t);
        }),
        (n.prototype.setSuppressClipboardPaste = function (t) {
          this.deprecatedUpdateGridOption('suppressClipboardPaste', t);
        }),
        (n.prototype.setGroupRemoveSingleChildren = function (t) {
          this.deprecatedUpdateGridOption('groupRemoveSingleChildren', t);
        }),
        (n.prototype.setGroupRemoveLowestSingleChildren = function (t) {
          this.deprecatedUpdateGridOption('groupRemoveLowestSingleChildren', t);
        }),
        (n.prototype.setGroupDisplayType = function (t) {
          this.deprecatedUpdateGridOption('groupDisplayType', t);
        }),
        (n.prototype.setGroupIncludeFooter = function (t) {
          this.deprecatedUpdateGridOption('groupIncludeFooter', t);
        }),
        (n.prototype.setGroupIncludeTotalFooter = function (t) {
          this.deprecatedUpdateGridOption('groupIncludeTotalFooter', t);
        }),
        (n.prototype.setRowClass = function (t) {
          this.deprecatedUpdateGridOption('rowClass', t);
        }),
        (n.prototype.setDeltaSort = function (t) {
          this.deprecatedUpdateGridOption('deltaSort', t);
        }),
        (n.prototype.setSuppressRowDrag = function (t) {
          this.deprecatedUpdateGridOption('suppressRowDrag', t);
        }),
        (n.prototype.setSuppressMoveWhenRowDragging = function (t) {
          this.deprecatedUpdateGridOption('suppressMoveWhenRowDragging', t);
        }),
        (n.prototype.setSuppressRowClickSelection = function (t) {
          this.deprecatedUpdateGridOption('suppressRowClickSelection', t);
        }),
        (n.prototype.setEnableAdvancedFilter = function (t) {
          this.deprecatedUpdateGridOption('enableAdvancedFilter', t);
        }),
        (n.prototype.setIncludeHiddenColumnsInAdvancedFilter = function (t) {
          this.deprecatedUpdateGridOption('includeHiddenColumnsInAdvancedFilter', t);
        }),
        (n.prototype.setAdvancedFilterParent = function (t) {
          this.deprecatedUpdateGridOption('advancedFilterParent', t);
        }),
        (n.prototype.setAdvancedFilterBuilderParams = function (t) {
          this.deprecatedUpdateGridOption('advancedFilterBuilderParams', t);
        }),
        (n.prototype.setQuickFilter = function (t) {
          V(
            "setQuickFilter is deprecated. Please use 'api.setGridOption('quickFilterText', newValue)' or 'api.updateGridOptions({ quickFilterText: newValue })' instead."
          ),
            this.gos.updateGridOptions({ options: { quickFilterText: t } });
        }),
        (n.prototype.setExcludeHiddenColumnsFromQuickFilter = function (t) {
          this.deprecatedUpdateGridOption('includeHiddenColumnsInQuickFilter', !t);
        }),
        (n.prototype.setIncludeHiddenColumnsInQuickFilter = function (t) {
          this.deprecatedUpdateGridOption('includeHiddenColumnsInQuickFilter', t);
        }),
        (n.prototype.setQuickFilterParser = function (t) {
          this.deprecatedUpdateGridOption('quickFilterParser', t);
        }),
        (n.prototype.setQuickFilterMatcher = function (t) {
          this.deprecatedUpdateGridOption('quickFilterMatcher', t);
        }),
        (n.prototype.setAlwaysShowHorizontalScroll = function (t) {
          this.deprecatedUpdateGridOption('alwaysShowHorizontalScroll', t);
        }),
        (n.prototype.setAlwaysShowVerticalScroll = function (t) {
          this.deprecatedUpdateGridOption('alwaysShowVerticalScroll', t);
        }),
        (n.prototype.setFunctionsReadOnly = function (t) {
          this.deprecatedUpdateGridOption('functionsReadOnly', t);
        }),
        (n.prototype.setColumnDefs = function (t, e) {
          e === void 0 && (e = 'api'),
            V(
              "setColumnDefs is deprecated. Please use 'api.setGridOption('columnDefs', newValue)' or 'api.updateGridOptions({ columnDefs: newValue })' instead."
            ),
            this.gos.updateGridOptions({ options: { columnDefs: t }, source: e });
        }),
        (n.prototype.setAutoGroupColumnDef = function (t, e) {
          e === void 0 && (e = 'api'),
            V(
              "setAutoGroupColumnDef is deprecated. Please use 'api.setGridOption('autoGroupColumnDef', newValue)' or 'api.updateGridOptions({ autoGroupColumnDef: newValue })' instead."
            ),
            this.gos.updateGridOptions({ options: { autoGroupColumnDef: t }, source: e });
        }),
        (n.prototype.setDefaultColDef = function (t, e) {
          e === void 0 && (e = 'api'),
            V(
              "setDefaultColDef is deprecated. Please use 'api.setGridOption('defaultColDef', newValue)' or 'api.updateGridOptions({ defaultColDef: newValue })' instead."
            ),
            this.gos.updateGridOptions({ options: { defaultColDef: t }, source: e });
        }),
        (n.prototype.setColumnTypes = function (t, e) {
          e === void 0 && (e = 'api'),
            V(
              "setColumnTypes is deprecated. Please use 'api.setGridOption('columnTypes', newValue)' or 'api.updateGridOptions({ columnTypes: newValue })' instead."
            ),
            this.gos.updateGridOptions({ options: { columnTypes: t }, source: e });
        }),
        (n.prototype.setTreeData = function (t) {
          this.deprecatedUpdateGridOption('treeData', t);
        }),
        (n.prototype.setServerSideDatasource = function (t) {
          this.deprecatedUpdateGridOption('serverSideDatasource', t);
        }),
        (n.prototype.setCacheBlockSize = function (t) {
          this.deprecatedUpdateGridOption('cacheBlockSize', t);
        }),
        (n.prototype.setDatasource = function (t) {
          this.deprecatedUpdateGridOption('datasource', t);
        }),
        (n.prototype.setViewportDatasource = function (t) {
          this.deprecatedUpdateGridOption('viewportDatasource', t);
        }),
        (n.prototype.setRowData = function (t) {
          this.deprecatedUpdateGridOption('rowData', t);
        }),
        (n.prototype.setEnableCellTextSelection = function (t) {
          this.deprecatedUpdateGridOption('enableCellTextSelection', t);
        }),
        (n.prototype.setHeaderHeight = function (t) {
          this.deprecatedUpdateGridOption('headerHeight', t);
        }),
        (n.prototype.setDomLayout = function (t) {
          this.deprecatedUpdateGridOption('domLayout', t);
        }),
        (n.prototype.setFillHandleDirection = function (t) {
          this.deprecatedUpdateGridOption('fillHandleDirection', t);
        }),
        (n.prototype.setGroupHeaderHeight = function (t) {
          this.deprecatedUpdateGridOption('groupHeaderHeight', t);
        }),
        (n.prototype.setFloatingFiltersHeight = function (t) {
          this.deprecatedUpdateGridOption('floatingFiltersHeight', t);
        }),
        (n.prototype.setPivotHeaderHeight = function (t) {
          this.deprecatedUpdateGridOption('pivotHeaderHeight', t);
        }),
        (n.prototype.setPivotGroupHeaderHeight = function (t) {
          this.deprecatedUpdateGridOption('pivotGroupHeaderHeight', t);
        }),
        (n.prototype.setAnimateRows = function (t) {
          this.deprecatedUpdateGridOption('animateRows', t);
        }),
        (n.prototype.setIsExternalFilterPresent = function (t) {
          this.deprecatedUpdateGridOption('isExternalFilterPresent', t);
        }),
        (n.prototype.setDoesExternalFilterPass = function (t) {
          this.deprecatedUpdateGridOption('doesExternalFilterPass', t);
        }),
        (n.prototype.setNavigateToNextCell = function (t) {
          this.deprecatedUpdateGridOption('navigateToNextCell', t);
        }),
        (n.prototype.setTabToNextCell = function (t) {
          this.deprecatedUpdateGridOption('tabToNextCell', t);
        }),
        (n.prototype.setTabToNextHeader = function (t) {
          this.deprecatedUpdateGridOption('tabToNextHeader', t);
        }),
        (n.prototype.setNavigateToNextHeader = function (t) {
          this.deprecatedUpdateGridOption('navigateToNextHeader', t);
        }),
        (n.prototype.setRowGroupPanelShow = function (t) {
          this.deprecatedUpdateGridOption('rowGroupPanelShow', t);
        }),
        (n.prototype.setGetGroupRowAgg = function (t) {
          this.deprecatedUpdateGridOption('getGroupRowAgg', t);
        }),
        (n.prototype.setGetBusinessKeyForNode = function (t) {
          this.deprecatedUpdateGridOption('getBusinessKeyForNode', t);
        }),
        (n.prototype.setGetChildCount = function (t) {
          this.deprecatedUpdateGridOption('getChildCount', t);
        }),
        (n.prototype.setProcessRowPostCreate = function (t) {
          this.deprecatedUpdateGridOption('processRowPostCreate', t);
        }),
        (n.prototype.setGetRowId = function (t) {
          V('getRowId is a static property and can no longer be updated.');
        }),
        (n.prototype.setGetRowClass = function (t) {
          this.deprecatedUpdateGridOption('getRowClass', t);
        }),
        (n.prototype.setIsFullWidthRow = function (t) {
          this.deprecatedUpdateGridOption('isFullWidthRow', t);
        }),
        (n.prototype.setIsRowSelectable = function (t) {
          this.deprecatedUpdateGridOption('isRowSelectable', t);
        }),
        (n.prototype.setIsRowMaster = function (t) {
          this.deprecatedUpdateGridOption('isRowMaster', t);
        }),
        (n.prototype.setPostSortRows = function (t) {
          this.deprecatedUpdateGridOption('postSortRows', t);
        }),
        (n.prototype.setGetDocument = function (t) {
          this.deprecatedUpdateGridOption('getDocument', t);
        }),
        (n.prototype.setGetContextMenuItems = function (t) {
          this.deprecatedUpdateGridOption('getContextMenuItems', t);
        }),
        (n.prototype.setGetMainMenuItems = function (t) {
          this.deprecatedUpdateGridOption('getMainMenuItems', t);
        }),
        (n.prototype.setProcessCellForClipboard = function (t) {
          this.deprecatedUpdateGridOption('processCellForClipboard', t);
        }),
        (n.prototype.setSendToClipboard = function (t) {
          this.deprecatedUpdateGridOption('sendToClipboard', t);
        }),
        (n.prototype.setProcessCellFromClipboard = function (t) {
          this.deprecatedUpdateGridOption('processCellFromClipboard', t);
        }),
        (n.prototype.setProcessPivotResultColDef = function (t) {
          this.deprecatedUpdateGridOption('processPivotResultColDef', t);
        }),
        (n.prototype.setProcessPivotResultColGroupDef = function (t) {
          this.deprecatedUpdateGridOption('processPivotResultColGroupDef', t);
        }),
        (n.prototype.setPostProcessPopup = function (t) {
          this.deprecatedUpdateGridOption('postProcessPopup', t);
        }),
        (n.prototype.setInitialGroupOrderComparator = function (t) {
          this.deprecatedUpdateGridOption('initialGroupOrderComparator', t);
        }),
        (n.prototype.setGetChartToolbarItems = function (t) {
          this.deprecatedUpdateGridOption('getChartToolbarItems', t);
        }),
        (n.prototype.setPaginationNumberFormatter = function (t) {
          this.deprecatedUpdateGridOption('paginationNumberFormatter', t);
        }),
        (n.prototype.setGetServerSideGroupLevelParams = function (t) {
          this.deprecatedUpdateGridOption('getServerSideGroupLevelParams', t);
        }),
        (n.prototype.setIsServerSideGroupOpenByDefault = function (t) {
          this.deprecatedUpdateGridOption('isServerSideGroupOpenByDefault', t);
        }),
        (n.prototype.setIsApplyServerSideTransaction = function (t) {
          this.deprecatedUpdateGridOption('isApplyServerSideTransaction', t);
        }),
        (n.prototype.setIsServerSideGroup = function (t) {
          this.deprecatedUpdateGridOption('isServerSideGroup', t);
        }),
        (n.prototype.setGetServerSideGroupKey = function (t) {
          this.deprecatedUpdateGridOption('getServerSideGroupKey', t);
        }),
        (n.prototype.setGetRowStyle = function (t) {
          this.deprecatedUpdateGridOption('getRowStyle', t);
        }),
        (n.prototype.setGetRowHeight = function (t) {
          this.deprecatedUpdateGridOption('getRowHeight', t);
        }),
        K([Y('csvCreator')], n.prototype, 'csvCreator', void 0),
        K([Y('excelCreator')], n.prototype, 'excelCreator', void 0),
        K([v('rowRenderer')], n.prototype, 'rowRenderer', void 0),
        K([v('navigationService')], n.prototype, 'navigationService', void 0),
        K([v('filterManager')], n.prototype, 'filterManager', void 0),
        K([v('columnModel')], n.prototype, 'columnModel', void 0),
        K([v('selectionService')], n.prototype, 'selectionService', void 0),
        K([v('gridOptionsService')], n.prototype, 'gos', void 0),
        K([v('valueService')], n.prototype, 'valueService', void 0),
        K([v('alignedGridsService')], n.prototype, 'alignedGridsService', void 0),
        K([v('eventService')], n.prototype, 'eventService', void 0),
        K([v('pinnedRowModel')], n.prototype, 'pinnedRowModel', void 0),
        K([v('context')], n.prototype, 'context', void 0),
        K([v('rowModel')], n.prototype, 'rowModel', void 0),
        K([v('sortController')], n.prototype, 'sortController', void 0),
        K([v('paginationProxy')], n.prototype, 'paginationProxy', void 0),
        K([v('focusService')], n.prototype, 'focusService', void 0),
        K([v('dragAndDropService')], n.prototype, 'dragAndDropService', void 0),
        K([Y('rangeService')], n.prototype, 'rangeService', void 0),
        K([Y('clipboardService')], n.prototype, 'clipboardService', void 0),
        K([Y('aggFuncService')], n.prototype, 'aggFuncService', void 0),
        K([v('menuService')], n.prototype, 'menuService', void 0),
        K([v('valueCache')], n.prototype, 'valueCache', void 0),
        K([v('animationFrameService')], n.prototype, 'animationFrameService', void 0),
        K([Y('statusBarService')], n.prototype, 'statusBarService', void 0),
        K([Y('chartService')], n.prototype, 'chartService', void 0),
        K([Y('undoRedoService')], n.prototype, 'undoRedoService', void 0),
        K([Y('rowNodeBlockLoader')], n.prototype, 'rowNodeBlockLoader', void 0),
        K([Y('ssrmTransactionManager')], n.prototype, 'serverSideTransactionManager', void 0),
        K([v('ctrlsService')], n.prototype, 'ctrlsService', void 0),
        K([v('overlayService')], n.prototype, 'overlayService', void 0),
        K([Y('sideBarService')], n.prototype, 'sideBarService', void 0),
        K([v('stateService')], n.prototype, 'stateService', void 0),
        K([v('expansionService')], n.prototype, 'expansionService', void 0),
        K([v('apiEventService')], n.prototype, 'apiEventService', void 0),
        K([v('frameworkOverrides')], n.prototype, 'frameworkOverrides', void 0),
        K([F], n.prototype, 'init', null),
        (n = K([x('gridApi')], n)),
        n
      );
    })(),
    lf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ao = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Zl = (function (n) {
      lf(t, n);
      function t() {
        var r = (n !== null && n.apply(this, arguments)) || this;
        return (r.quickFilter = null), (r.quickFilterParts = null), r;
      }
      (e = t),
        (t.prototype.postConstruct = function () {
          var r = this;
          this.addManagedListener(
            this.eventService,
            g.EVENT_COLUMN_PIVOT_MODE_CHANGED,
            function () {
              return r.resetQuickFilterCache();
            }
          ),
            this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, function () {
              return r.resetQuickFilterCache();
            }),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_ROW_GROUP_CHANGED,
              function () {
                return r.resetQuickFilterCache();
              }
            ),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_VISIBLE, function () {
              r.gridOptionsService.get('includeHiddenColumnsInQuickFilter') ||
                r.resetQuickFilterCache();
            }),
            this.addManagedPropertyListener('quickFilterText', function (o) {
              return r.setQuickFilter(o.currentValue);
            }),
            this.addManagedPropertyListener('includeHiddenColumnsInQuickFilter', function () {
              return r.onIncludeHiddenColumnsInQuickFilterChanged();
            }),
            (this.quickFilter = this.parseQuickFilter(
              this.gridOptionsService.get('quickFilterText')
            )),
            (this.parser = this.gridOptionsService.get('quickFilterParser')),
            (this.matcher = this.gridOptionsService.get('quickFilterMatcher')),
            this.setQuickFilterParts(),
            this.addManagedPropertyListeners(
              ['quickFilterMatcher', 'quickFilterParser'],
              function () {
                return r.setQuickFilterParserAndMatcher();
              }
            );
        }),
        (t.prototype.isQuickFilterPresent = function () {
          return this.quickFilter !== null;
        }),
        (t.prototype.doesRowPassQuickFilter = function (r) {
          var o = this,
            i = this.gridOptionsService.get('cacheQuickFilter');
          return this.matcher
            ? this.doesRowPassQuickFilterMatcher(i, r)
            : this.quickFilterParts.every(function (s) {
                return i
                  ? o.doesRowPassQuickFilterCache(r, s)
                  : o.doesRowPassQuickFilterNoCache(r, s);
              });
        }),
        (t.prototype.resetQuickFilterCache = function () {
          this.rowModel.forEachNode(function (r) {
            return (r.quickFilterAggregateText = null);
          });
        }),
        (t.prototype.setQuickFilterParts = function () {
          var r = this,
            o = r.quickFilter,
            i = r.parser;
          o ? (this.quickFilterParts = i ? i(o) : o.split(' ')) : (this.quickFilterParts = null);
        }),
        (t.prototype.parseQuickFilter = function (r) {
          return P(r)
            ? this.gridOptionsService.isRowModelType('clientSide')
              ? r.toUpperCase()
              : (console.warn(
                  'AG Grid - Quick filtering only works with the Client-Side Row Model'
                ),
                null)
            : null;
        }),
        (t.prototype.setQuickFilter = function (r) {
          if (r != null && typeof r != 'string') {
            console.warn(
              'AG Grid - Grid option quickFilterText only supports string inputs, received: '.concat(
                typeof r
              )
            );
            return;
          }
          var o = this.parseQuickFilter(r);
          this.quickFilter !== o &&
            ((this.quickFilter = o),
            this.setQuickFilterParts(),
            this.dispatchEvent({ type: e.EVENT_QUICK_FILTER_CHANGED }));
        }),
        (t.prototype.setQuickFilterParserAndMatcher = function () {
          var r = this.gridOptionsService.get('quickFilterParser'),
            o = this.gridOptionsService.get('quickFilterMatcher'),
            i = r !== this.parser || o !== this.matcher;
          (this.parser = r),
            (this.matcher = o),
            i &&
              (this.setQuickFilterParts(),
              this.dispatchEvent({ type: e.EVENT_QUICK_FILTER_CHANGED }));
        }),
        (t.prototype.onIncludeHiddenColumnsInQuickFilterChanged = function () {
          this.columnModel.refreshQuickFilterColumns(),
            this.resetQuickFilterCache(),
            this.isQuickFilterPresent() &&
              this.dispatchEvent({ type: e.EVENT_QUICK_FILTER_CHANGED });
        }),
        (t.prototype.doesRowPassQuickFilterNoCache = function (r, o) {
          var i = this,
            s = this.columnModel.getAllColumnsForQuickFilter();
          return s.some(function (a) {
            var l = i.getQuickFilterTextForColumn(a, r);
            return P(l) && l.indexOf(o) >= 0;
          });
        }),
        (t.prototype.doesRowPassQuickFilterCache = function (r, o) {
          return (
            this.checkGenerateQuickFilterAggregateText(r),
            r.quickFilterAggregateText.indexOf(o) >= 0
          );
        }),
        (t.prototype.doesRowPassQuickFilterMatcher = function (r, o) {
          var i;
          r
            ? (this.checkGenerateQuickFilterAggregateText(o), (i = o.quickFilterAggregateText))
            : (i = this.getQuickFilterAggregateText(o));
          var s = this,
            a = s.quickFilterParts,
            l = s.matcher;
          return l(a, i);
        }),
        (t.prototype.checkGenerateQuickFilterAggregateText = function (r) {
          r.quickFilterAggregateText ||
            (r.quickFilterAggregateText = this.getQuickFilterAggregateText(r));
        }),
        (t.prototype.getQuickFilterTextForColumn = function (r, o) {
          var i = this.valueService.getValue(r, o, !0),
            s = r.getColDef();
          if (s.getQuickFilterText) {
            var a = this.gridOptionsService.addGridCommonParams({
              value: i,
              node: o,
              data: o.data,
              column: r,
              colDef: s,
            });
            i = s.getQuickFilterText(a);
          }
          return P(i) ? i.toString().toUpperCase() : null;
        }),
        (t.prototype.getQuickFilterAggregateText = function (r) {
          var o = this,
            i = [],
            s = this.columnModel.getAllColumnsForQuickFilter();
          return (
            s.forEach(function (a) {
              var l = o.getQuickFilterTextForColumn(a, r);
              P(l) && i.push(l);
            }),
            i.join(e.QUICK_FILTER_SEPARATOR)
          );
        });
      var e;
      return (
        (t.EVENT_QUICK_FILTER_CHANGED = 'quickFilterChanged'),
        (t.QUICK_FILTER_SEPARATOR = `
`),
        ao([v('valueService')], t.prototype, 'valueService', void 0),
        ao([v('columnModel')], t.prototype, 'columnModel', void 0),
        ao([v('rowModel')], t.prototype, 'rowModel', void 0),
        ao([F], t.prototype, 'postConstruct', null),
        (t = e = ao([x('quickFilterService')], t)),
        t
      );
    })(D),
    uf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    yt = function () {
      return (
        (yt =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        yt.apply(this, arguments)
      );
    },
    mt = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    cf = (function (n) {
      uf(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.allColumnFilters = new Map()),
          (e.allColumnListeners = new Map()),
          (e.activeAggregateFilters = []),
          (e.activeColumnFilters = []),
          (e.processingFilterChange = !1),
          (e.filterModelUpdateQueue = []),
          (e.columnFilterModelUpdateQueue = []),
          (e.advancedFilterModelUpdateQueue = []),
          e
        );
      }
      return (
        (t.prototype.init = function () {
          var e = this,
            r,
            o,
            i;
          this.addManagedListener(this.eventService, g.EVENT_GRID_COLUMNS_CHANGED, function () {
            return e.onColumnsChanged();
          }),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_VALUE_CHANGED, function () {
              return e.refreshFiltersForAggregations();
            }),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_CHANGED, function () {
              return e.refreshFiltersForAggregations();
            }),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_PIVOT_MODE_CHANGED,
              function () {
                return e.refreshFiltersForAggregations();
              }
            ),
            this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, function () {
              return e.updateAdvancedFilterColumns();
            }),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_VISIBLE, function () {
              return e.updateAdvancedFilterColumns();
            }),
            this.addManagedListener(this.eventService, g.EVENT_ROW_DATA_UPDATED, function () {
              return e.onNewRowsLoaded('rowDataUpdated');
            }),
            (this.externalFilterPresent = this.isExternalFilterPresentCallback()),
            this.addManagedPropertyListeners(
              ['isExternalFilterPresent', 'doesExternalFilterPass'],
              function () {
                e.onFilterChanged({ source: 'api' });
              }
            ),
            this.updateAggFiltering(),
            this.addManagedPropertyListener('groupAggFiltering', function () {
              e.updateAggFiltering(), e.onFilterChanged();
            }),
            this.addManagedPropertyListener('advancedFilterModel', function (s) {
              return e.setAdvancedFilterModel(s.currentValue);
            }),
            this.addManagedListener(
              this.eventService,
              g.EVENT_ADVANCED_FILTER_ENABLED_CHANGED,
              function (s) {
                var a = s.enabled;
                return e.onAdvancedFilterEnabledChanged(a);
              }
            ),
            this.addManagedListener(this.eventService, g.EVENT_DATA_TYPES_INFERRED, function () {
              return e.processFilterModelUpdateQueue();
            }),
            this.addManagedListener(
              this.quickFilterService,
              Zl.EVENT_QUICK_FILTER_CHANGED,
              function () {
                return e.onFilterChanged({ source: 'quickFilter' });
              }
            ),
            (this.initialFilterModel = yt(
              {},
              (i =
                (o =
                  (r = this.gridOptionsService.get('initialState')) === null || r === void 0
                    ? void 0
                    : r.filter) === null || o === void 0
                  ? void 0
                  : o.filterModel) !== null && i !== void 0
                ? i
                : {}
            ));
        }),
        (t.prototype.isExternalFilterPresentCallback = function () {
          var e = this.gridOptionsService.getCallback('isExternalFilterPresent');
          return typeof e == 'function' ? e({}) : !1;
        }),
        (t.prototype.doesExternalFilterPass = function (e) {
          var r = this.gridOptionsService.get('doesExternalFilterPass');
          return typeof r == 'function' ? r(e) : !1;
        }),
        (t.prototype.setFilterModel = function (e, r) {
          var o = this;
          if ((r === void 0 && (r = 'api'), this.isAdvancedFilterEnabled())) {
            this.warnAdvancedFilters();
            return;
          }
          if (this.dataTypeService.isPendingInference()) {
            this.filterModelUpdateQueue.push({ model: e, source: r });
            return;
          }
          var i = [],
            s = this.getFilterModel();
          if (e) {
            var a = Yn(Object.keys(e));
            this.allColumnFilters.forEach(function (l, u) {
              var c = e[u];
              i.push(o.setModelOnFilterWrapper(l.filterPromise, c)), a.delete(u);
            }),
              a.forEach(function (l) {
                var u = o.columnModel.getPrimaryColumn(l) || o.columnModel.getGridColumn(l);
                if (!u) {
                  console.warn('AG Grid: setFilterModel() - no column found for colId: ' + l);
                  return;
                }
                if (!u.isFilterAllowed()) {
                  console.warn(
                    'AG Grid: setFilterModel() - unable to fully apply model, filtering disabled for colId: ' +
                      l
                  );
                  return;
                }
                var c = o.getOrCreateFilterWrapper(u, 'NO_UI');
                if (!c) {
                  console.warn(
                    'AG-Grid: setFilterModel() - unable to fully apply model, unable to create filter for colId: ' +
                      l
                  );
                  return;
                }
                i.push(o.setModelOnFilterWrapper(c.filterPromise, e[l]));
              });
          } else
            this.allColumnFilters.forEach(function (l) {
              i.push(o.setModelOnFilterWrapper(l.filterPromise, null));
            });
          je.all(i).then(function () {
            var l = o.getFilterModel(),
              u = [];
            o.allColumnFilters.forEach(function (c, p) {
              var d = s ? s[p] : null,
                h = l ? l[p] : null;
              j.jsonEquals(d, h) || u.push(c.column);
            }),
              u.length > 0 && o.onFilterChanged({ columns: u, source: r });
          });
        }),
        (t.prototype.setModelOnFilterWrapper = function (e, r) {
          return new je(function (o) {
            e.then(function (i) {
              typeof i.setModel != 'function' &&
                (console.warn(
                  'AG Grid: filter missing setModel method, which is needed for setFilterModel'
                ),
                o()),
                (i.setModel(r) || je.resolve()).then(function () {
                  return o();
                });
            });
          });
        }),
        (t.prototype.getFilterModel = function () {
          var e = this,
            r = {};
          return (
            this.allColumnFilters.forEach(function (o, i) {
              var s = e.getModelFromFilterWrapper(o);
              P(s) && (r[i] = s);
            }),
            r
          );
        }),
        (t.prototype.getModelFromFilterWrapper = function (e) {
          var r,
            o = e.filterPromise,
            i = o.resolveNow(null, function (s) {
              return s;
            });
          return i == null
            ? (r = this.initialFilterModel[e.column.getColId()]) !== null && r !== void 0
              ? r
              : null
            : typeof i.getModel != 'function'
            ? (console.warn(
                'AG Grid: filter API missing getModel method, which is needed for getFilterModel'
              ),
              null)
            : i.getModel();
        }),
        (t.prototype.isColumnFilterPresent = function () {
          return this.activeColumnFilters.length > 0;
        }),
        (t.prototype.isAggregateFilterPresent = function () {
          return !!this.activeAggregateFilters.length;
        }),
        (t.prototype.isExternalFilterPresent = function () {
          return this.externalFilterPresent;
        }),
        (t.prototype.isChildFilterPresent = function () {
          return (
            this.isColumnFilterPresent() ||
            this.isQuickFilterPresent() ||
            this.isExternalFilterPresent() ||
            this.isAdvancedFilterPresent()
          );
        }),
        (t.prototype.isAdvancedFilterPresent = function () {
          return this.isAdvancedFilterEnabled() && this.advancedFilterService.isFilterPresent();
        }),
        (t.prototype.onAdvancedFilterEnabledChanged = function (e) {
          var r = this,
            o;
          e
            ? this.allColumnFilters.size &&
              (this.allColumnFilters.forEach(function (i) {
                return r.disposeFilterWrapper(i, 'advancedFilterEnabled');
              }),
              this.onFilterChanged({ source: 'advancedFilter' }))
            : !((o = this.advancedFilterService) === null || o === void 0) &&
              o.isFilterPresent() &&
              (this.advancedFilterService.setModel(null),
              this.onFilterChanged({ source: 'advancedFilter' }));
        }),
        (t.prototype.isAdvancedFilterEnabled = function () {
          var e;
          return (e = this.advancedFilterService) === null || e === void 0 ? void 0 : e.isEnabled();
        }),
        (t.prototype.isAdvancedFilterHeaderActive = function () {
          return this.isAdvancedFilterEnabled() && this.advancedFilterService.isHeaderActive();
        }),
        (t.prototype.doAggregateFiltersPass = function (e, r) {
          return this.doColumnFiltersPass(e, r, !0);
        }),
        (t.prototype.updateActiveFilters = function () {
          var e = this;
          (this.activeColumnFilters.length = 0), (this.activeAggregateFilters.length = 0);
          var r = function (s) {
              return s
                ? s.isFilterActive
                  ? s.isFilterActive()
                  : (console.warn('AG Grid: Filter is missing isFilterActive() method'), !1)
                : !1;
            },
            o = !!this.gridOptionsService.getGroupAggFiltering(),
            i = function (s) {
              var a = !s.isPrimary();
              if (a) return !0;
              var l = !e.columnModel.isPivotActive(),
                u = s.isValueActive();
              return !u || !l ? !1 : e.columnModel.isPivotMode() ? !0 : o;
            };
          this.allColumnFilters.forEach(function (s) {
            if (s.filterPromise.resolveNow(!1, r)) {
              var a = s.filterPromise.resolveNow(null, function (l) {
                return l;
              });
              i(s.column) ? e.activeAggregateFilters.push(a) : e.activeColumnFilters.push(a);
            }
          });
        }),
        (t.prototype.updateFilterFlagInColumns = function (e, r) {
          this.allColumnFilters.forEach(function (o) {
            var i = o.filterPromise.resolveNow(!1, function (s) {
              return s.isFilterActive();
            });
            o.column.setFilterActive(i, e, r);
          });
        }),
        (t.prototype.isAnyFilterPresent = function () {
          return (
            this.isQuickFilterPresent() ||
            this.isColumnFilterPresent() ||
            this.isAggregateFilterPresent() ||
            this.isExternalFilterPresent() ||
            this.isAdvancedFilterPresent()
          );
        }),
        (t.prototype.doColumnFiltersPass = function (e, r, o) {
          for (
            var i = e.data,
              s = e.aggData,
              a = o ? this.activeAggregateFilters : this.activeColumnFilters,
              l = o ? s : i,
              u = 0;
            u < a.length;
            u++
          ) {
            var c = a[u];
            if (!(c == null || c === r)) {
              if (typeof c.doesFilterPass != 'function')
                throw new Error('Filter is missing method doesFilterPass');
              if (!c.doesFilterPass({ node: e, data: l })) return !1;
            }
          }
          return !0;
        }),
        (t.prototype.resetQuickFilterCache = function () {
          this.quickFilterService.resetQuickFilterCache();
        }),
        (t.prototype.refreshFiltersForAggregations = function () {
          var e = this.gridOptionsService.getGroupAggFiltering();
          e && this.onFilterChanged();
        }),
        (t.prototype.callOnFilterChangedOutsideRenderCycle = function (e) {
          var r = this,
            o = function () {
              return r.onFilterChanged(e);
            };
          this.rowRenderer.isRefreshInProgress() ? setTimeout(o, 0) : o();
        }),
        (t.prototype.onFilterChanged = function (e) {
          e === void 0 && (e = {});
          var r = e.source,
            o = e.filterInstance,
            i = e.additionalEventAttributes,
            s = e.columns;
          this.updateDependantFilters(),
            this.updateActiveFilters(),
            this.updateFilterFlagInColumns('filterChanged', i),
            (this.externalFilterPresent = this.isExternalFilterPresentCallback()),
            this.allColumnFilters.forEach(function (l) {
              l.filterPromise &&
                l.filterPromise.then(function (u) {
                  u && u !== o && u.onAnyFilterChanged && u.onAnyFilterChanged();
                });
            });
          var a = { source: r, type: g.EVENT_FILTER_CHANGED, columns: s || [] };
          i && Ve(a, i),
            (this.processingFilterChange = !0),
            this.eventService.dispatchEvent(a),
            (this.processingFilterChange = !1);
        }),
        (t.prototype.isSuppressFlashingCellsBecauseFiltering = function () {
          var e,
            r =
              (e = this.gridOptionsService.get('allowShowChangeAfterFilter')) !== null &&
              e !== void 0
                ? e
                : !1;
          return !r && this.processingFilterChange;
        }),
        (t.prototype.isQuickFilterPresent = function () {
          return this.quickFilterService.isQuickFilterPresent();
        }),
        (t.prototype.updateAggFiltering = function () {
          this.aggFiltering = !!this.gridOptionsService.getGroupAggFiltering();
        }),
        (t.prototype.isAggregateQuickFilterPresent = function () {
          return (
            this.isQuickFilterPresent() && (this.aggFiltering || this.columnModel.isPivotMode())
          );
        }),
        (t.prototype.isNonAggregateQuickFilterPresent = function () {
          return (
            this.isQuickFilterPresent() && !(this.aggFiltering || this.columnModel.isPivotMode())
          );
        }),
        (t.prototype.doesRowPassOtherFilters = function (e, r) {
          return this.doesRowPassFilter({ rowNode: r, filterInstanceToSkip: e });
        }),
        (t.prototype.doesRowPassAggregateFilters = function (e) {
          return !(
            (this.isAggregateQuickFilterPresent() &&
              !this.quickFilterService.doesRowPassQuickFilter(e.rowNode)) ||
            (this.isAggregateFilterPresent() &&
              !this.doAggregateFiltersPass(e.rowNode, e.filterInstanceToSkip))
          );
        }),
        (t.prototype.doesRowPassFilter = function (e) {
          return !(
            (this.isNonAggregateQuickFilterPresent() &&
              !this.quickFilterService.doesRowPassQuickFilter(e.rowNode)) ||
            (this.isExternalFilterPresent() && !this.doesExternalFilterPass(e.rowNode)) ||
            (this.isColumnFilterPresent() &&
              !this.doColumnFiltersPass(e.rowNode, e.filterInstanceToSkip)) ||
            (this.isAdvancedFilterPresent() &&
              !this.advancedFilterService.doesFilterPass(e.rowNode))
          );
        }),
        (t.prototype.onNewRowsLoaded = function (e) {
          this.allColumnFilters.forEach(function (r) {
            r.filterPromise.then(function (o) {
              o.onNewRowsLoaded && o.onNewRowsLoaded();
            });
          }),
            this.updateFilterFlagInColumns(e, { afterDataChange: !0 }),
            this.updateActiveFilters();
        }),
        (t.prototype.createValueGetter = function (e) {
          var r = this;
          return function (o) {
            var i = o.node;
            return r.valueService.getValue(e, i, !0);
          };
        }),
        (t.prototype.createGetValue = function (e) {
          var r = this;
          return function (o, i) {
            var s = i ? r.columnModel.getGridColumn(i) : e;
            return s ? r.valueService.getValue(s, o, !0) : void 0;
          };
        }),
        (t.prototype.getFilterComponent = function (e, r, o) {
          var i;
          if ((o === void 0 && (o = !0), o))
            return (
              ((i = this.getOrCreateFilterWrapper(e, r)) === null || i === void 0
                ? void 0
                : i.filterPromise) || null
            );
          var s = this.cachedFilter(e);
          return s ? s.filterPromise : null;
        }),
        (t.prototype.isFilterActive = function (e) {
          var r = this.cachedFilter(e);
          return (
            !!r &&
            r.filterPromise.resolveNow(!1, function (o) {
              return o.isFilterActive();
            })
          );
        }),
        (t.prototype.getOrCreateFilterWrapper = function (e, r) {
          if (!e.isFilterAllowed()) return null;
          var o = this.cachedFilter(e);
          return (
            o
              ? r !== 'NO_UI' && this.putIntoGui(o, r)
              : ((o = this.createFilterWrapper(e, r)), this.setColumnFilterWrapper(e, o)),
            o
          );
        }),
        (t.prototype.cachedFilter = function (e) {
          return this.allColumnFilters.get(e.getColId());
        }),
        (t.prototype.getDefaultFilter = function (e) {
          var r;
          if (X.__isRegistered(G.SetFilterModule, this.context.getGridId()))
            r = 'agSetColumnFilter';
          else {
            var o = this.dataTypeService.getBaseDataType(e);
            o === 'number'
              ? (r = 'agNumberColumnFilter')
              : o === 'date' || o === 'dateString'
              ? (r = 'agDateColumnFilter')
              : (r = 'agTextColumnFilter');
          }
          return r;
        }),
        (t.prototype.getDefaultFloatingFilter = function (e) {
          var r;
          if (X.__isRegistered(G.SetFilterModule, this.context.getGridId()))
            r = 'agSetColumnFloatingFilter';
          else {
            var o = this.dataTypeService.getBaseDataType(e);
            o === 'number'
              ? (r = 'agNumberColumnFloatingFilter')
              : o === 'date' || o === 'dateString'
              ? (r = 'agDateColumnFloatingFilter')
              : (r = 'agTextColumnFloatingFilter');
          }
          return r;
        }),
        (t.prototype.createFilterInstance = function (e) {
          var r = this,
            o = this.getDefaultFilter(e),
            i = e.getColDef(),
            s,
            a = yt(yt({}, this.createFilterParams(e, i)), {
              filterModifiedCallback: function () {
                return r.filterModifiedCallbackFactory(s, e)();
              },
              filterChangedCallback: function (u) {
                return r.filterChangedCallbackFactory(s, e)(u);
              },
              doesRowPassOtherFilter: function (u) {
                return r.doesRowPassOtherFilters(s, u);
              },
            }),
            l = this.userComponentFactory.getFilterDetails(i, a, o);
          return l
            ? {
                filterPromise: function () {
                  var u = l.newAgStackInstance();
                  return (
                    u &&
                      u.then(function (c) {
                        return (s = c);
                      }),
                    u
                  );
                },
                compDetails: l,
              }
            : { filterPromise: null, compDetails: null };
        }),
        (t.prototype.createFilterParams = function (e, r) {
          var o = this.gridOptionsService.addGridCommonParams({
            column: e,
            colDef: qi(r),
            rowModel: this.rowModel,
            filterChangedCallback: function () {},
            filterModifiedCallback: function () {},
            valueGetter: this.createValueGetter(e),
            getValue: this.createGetValue(e),
            doesRowPassOtherFilter: function () {
              return !0;
            },
          });
          return o;
        }),
        (t.prototype.createFilterWrapper = function (e, r) {
          var o,
            i = {
              column: e,
              filterPromise: null,
              compiledElement: null,
              guiPromise: je.resolve(null),
              compDetails: null,
            },
            s = this.createFilterInstance(e),
            a = s.filterPromise,
            l = s.compDetails;
          return (
            (i.filterPromise = (o = a == null ? void 0 : a()) !== null && o !== void 0 ? o : null),
            (i.compDetails = l),
            a && this.putIntoGui(i, r),
            i
          );
        }),
        (t.prototype.putIntoGui = function (e, r) {
          var o = this,
            i = document.createElement('div');
          (i.className = 'ag-filter'),
            (e.guiPromise = new je(function (s) {
              e.filterPromise.then(function (a) {
                var l = a.getGui();
                P(l) ||
                  console.warn(
                    'AG Grid: getGui method from filter returned '.concat(
                      l,
                      ', it should be a DOM element or an HTML template string.'
                    )
                  ),
                  typeof l == 'string' && (l = Re(l)),
                  i.appendChild(l),
                  s(i);
                var u = { type: g.EVENT_FILTER_OPENED, column: e.column, source: r, eGui: i };
                o.eventService.dispatchEvent(u);
              });
            }));
        }),
        (t.prototype.onColumnsChanged = function () {
          var e = this,
            r = [];
          this.allColumnFilters.forEach(function (o, i) {
            var s;
            o.column.isPrimary()
              ? (s = e.columnModel.getPrimaryColumn(i))
              : (s = e.columnModel.getGridColumn(i)),
              !s &&
                (r.push(o.column),
                e.disposeFilterWrapper(o, 'columnChanged'),
                e.disposeColumnListener(i));
          }),
            r.length > 0
              ? this.onFilterChanged({ columns: r, source: 'api' })
              : this.updateDependantFilters();
        }),
        (t.prototype.updateDependantFilters = function () {
          var e = this,
            r = this.columnModel.getGroupAutoColumns();
          r == null ||
            r.forEach(function (o) {
              o.getColDef().filter === 'agGroupColumnFilter' &&
                e.getOrCreateFilterWrapper(o, 'NO_UI');
            });
        }),
        (t.prototype.isFilterAllowed = function (e) {
          var r, o;
          if (this.isAdvancedFilterEnabled()) return !1;
          var i = e.isFilterAllowed();
          if (!i) return !1;
          var s = this.allColumnFilters.get(e.getColId());
          return (o =
            (r = s == null ? void 0 : s.filterPromise) === null || r === void 0
              ? void 0
              : r.resolveNow(!0, function (a) {
                  return typeof (a == null ? void 0 : a.isFilterAllowed) == 'function'
                    ? a == null
                      ? void 0
                      : a.isFilterAllowed()
                    : !0;
                })) !== null && o !== void 0
            ? o
            : !0;
        }),
        (t.prototype.getFloatingFilterCompDetails = function (e, r) {
          var o = this,
            i = function (p) {
              var d = o.getFilterComponent(e, 'NO_UI');
              d != null &&
                d.then(function (h) {
                  p(dr(h));
                });
            },
            s = e.getColDef(),
            a = yt(yt({}, this.createFilterParams(e, s)), {
              filterChangedCallback: function () {
                return i(function (p) {
                  return o.filterChangedCallbackFactory(p, e)();
                });
              },
            }),
            l = this.userComponentFactory.mergeParamsWithApplicationProvidedParams(s, hs, a),
            u = this.userComponentFactory.getDefaultFloatingFilterType(s, function () {
              return o.getDefaultFloatingFilter(e);
            });
          u == null && (u = 'agReadOnlyFloatingFilter');
          var c = {
            column: e,
            filterParams: l,
            currentParentModel: function () {
              return o.getCurrentFloatingFilterParentModel(e);
            },
            parentFilterInstance: i,
            showParentFilter: r,
            suppressFilterButton: !1,
          };
          return this.userComponentFactory.getFloatingFilterCompDetails(s, c, u);
        }),
        (t.prototype.getCurrentFloatingFilterParentModel = function (e) {
          var r = this.getFilterComponent(e, 'NO_UI', !1);
          return r
            ? r.resolveNow(null, function (o) {
                return o && o.getModel();
              })
            : null;
        }),
        (t.prototype.destroyFilter = function (e, r) {
          r === void 0 && (r = 'api');
          var o = e.getColId(),
            i = this.allColumnFilters.get(o);
          this.disposeColumnListener(o),
            delete this.initialFilterModel[o],
            i &&
              (this.disposeFilterWrapper(i, r),
              this.onFilterChanged({ columns: [e], source: 'api' }));
        }),
        (t.prototype.disposeColumnListener = function (e) {
          var r = this.allColumnListeners.get(e);
          r && (this.allColumnListeners.delete(e), r());
        }),
        (t.prototype.disposeFilterWrapper = function (e, r) {
          var o = this;
          e.filterPromise.then(function (i) {
            o.getContext().destroyBean(i),
              e.column.setFilterActive(!1, 'filterDestroyed'),
              o.allColumnFilters.delete(e.column.getColId());
            var s = { type: g.EVENT_FILTER_DESTROYED, source: r, column: e.column };
            o.eventService.dispatchEvent(s);
          });
        }),
        (t.prototype.filterModifiedCallbackFactory = function (e, r) {
          var o = this;
          return function () {
            var i = { type: g.EVENT_FILTER_MODIFIED, column: r, filterInstance: e };
            o.eventService.dispatchEvent(i);
          };
        }),
        (t.prototype.filterChangedCallbackFactory = function (e, r) {
          var o = this;
          return function (i) {
            var s,
              a = (s = i == null ? void 0 : i.source) !== null && s !== void 0 ? s : 'api',
              l = { filter: e, additionalEventAttributes: i, columns: [r], source: a };
            o.callOnFilterChangedOutsideRenderCycle(l);
          };
        }),
        (t.prototype.checkDestroyFilter = function (e) {
          var r = this,
            o = this.allColumnFilters.get(e);
          if (o) {
            var i = o.column,
              s = (i.isFilterAllowed() ? this.createFilterInstance(i) : { compDetails: null })
                .compDetails;
            if (this.areFilterCompsDifferent(o.compDetails, s)) {
              this.destroyFilter(i, 'paramsUpdated');
              return;
            }
            var a = i.getColDef().filterParams;
            if (!o.filterPromise) {
              this.destroyFilter(i, 'paramsUpdated');
              return;
            }
            o.filterPromise.then(function (l) {
              var u =
                l != null && l.refresh
                  ? l.refresh(
                      yt(
                        yt(yt({}, r.createFilterParams(i, i.getColDef())), {
                          filterModifiedCallback: r.filterModifiedCallbackFactory(l, i),
                          filterChangedCallback: r.filterChangedCallbackFactory(l, i),
                          doesRowPassOtherFilter: function (c) {
                            return r.doesRowPassOtherFilters(l, c);
                          },
                        }),
                        a
                      )
                    )
                  : !0;
              u === !1 && r.destroyFilter(i, 'paramsUpdated');
            });
          }
        }),
        (t.prototype.setColumnFilterWrapper = function (e, r) {
          var o = this,
            i = e.getColId();
          this.allColumnFilters.set(i, r),
            this.allColumnListeners.set(
              i,
              this.addManagedListener(e, J.EVENT_COL_DEF_CHANGED, function () {
                return o.checkDestroyFilter(i);
              })
            );
        }),
        (t.prototype.areFilterCompsDifferent = function (e, r) {
          if (!r || !e) return !0;
          var o = e.componentClass,
            i = r.componentClass,
            s =
              o === i ||
              ((o == null ? void 0 : o.render) &&
                (i == null ? void 0 : i.render) &&
                o.render === i.render);
          return !s;
        }),
        (t.prototype.getAdvancedFilterModel = function () {
          return this.isAdvancedFilterEnabled() ? this.advancedFilterService.getModel() : null;
        }),
        (t.prototype.setAdvancedFilterModel = function (e) {
          if (this.isAdvancedFilterEnabled()) {
            if (this.dataTypeService.isPendingInference()) {
              this.advancedFilterModelUpdateQueue.push(e);
              return;
            }
            this.advancedFilterService.setModel(e ?? null),
              this.onFilterChanged({ source: 'advancedFilter' });
          }
        }),
        (t.prototype.showAdvancedFilterBuilder = function (e) {
          this.isAdvancedFilterEnabled() &&
            this.advancedFilterService.getCtrl().toggleFilterBuilder(e, !0);
        }),
        (t.prototype.updateAdvancedFilterColumns = function () {
          this.isAdvancedFilterEnabled() &&
            this.advancedFilterService.updateValidity() &&
            this.onFilterChanged({ source: 'advancedFilter' });
        }),
        (t.prototype.hasFloatingFilters = function () {
          if (this.isAdvancedFilterEnabled()) return !1;
          var e = this.columnModel.getAllGridColumns();
          return e.some(function (r) {
            return r.getColDef().floatingFilter;
          });
        }),
        (t.prototype.getFilterInstance = function (e, r) {
          if (this.isAdvancedFilterEnabled()) {
            this.warnAdvancedFilters();
            return;
          }
          var o = this.getFilterInstanceImpl(e, function (s) {
              if (r) {
                var a = dr(s);
                r(a);
              }
            }),
            i = dr(o);
          return i;
        }),
        (t.prototype.getColumnFilterInstance = function (e) {
          var r = this;
          return new Promise(function (o) {
            r.getFilterInstance(e, function (i) {
              o(i);
            });
          });
        }),
        (t.prototype.getFilterInstanceImpl = function (e, r) {
          var o = this.columnModel.getPrimaryColumn(e);
          if (o) {
            var i = this.getFilterComponent(o, 'NO_UI'),
              s =
                i &&
                i.resolveNow(null, function (a) {
                  return a;
                });
            return (
              s
                ? setTimeout(r, 0, s)
                : i &&
                  i.then(function (a) {
                    r(a);
                  }),
              s
            );
          }
        }),
        (t.prototype.warnAdvancedFilters = function () {
          V('Column Filter API methods have been disabled as Advanced Filters are enabled.');
        }),
        (t.prototype.setupAdvancedFilterHeaderComp = function (e) {
          var r;
          (r = this.advancedFilterService) === null ||
            r === void 0 ||
            r.getCtrl().setupHeaderComp(e);
        }),
        (t.prototype.getHeaderRowCount = function () {
          return this.isAdvancedFilterHeaderActive() ? 1 : 0;
        }),
        (t.prototype.getHeaderHeight = function () {
          return this.isAdvancedFilterHeaderActive()
            ? this.advancedFilterService.getCtrl().getHeaderHeight()
            : 0;
        }),
        (t.prototype.processFilterModelUpdateQueue = function () {
          var e = this;
          this.filterModelUpdateQueue.forEach(function (r) {
            var o = r.model,
              i = r.source;
            return e.setFilterModel(o, i);
          }),
            (this.filterModelUpdateQueue = []),
            this.columnFilterModelUpdateQueue.forEach(function (r) {
              var o = r.key,
                i = r.model,
                s = r.resolve;
              e.setColumnFilterModel(o, i).then(function () {
                return s();
              });
            }),
            (this.columnFilterModelUpdateQueue = []),
            this.advancedFilterModelUpdateQueue.forEach(function (r) {
              return e.setAdvancedFilterModel(r);
            }),
            (this.advancedFilterModelUpdateQueue = []);
        }),
        (t.prototype.getColumnFilterModel = function (e) {
          var r = this.getFilterWrapper(e);
          return r ? this.getModelFromFilterWrapper(r) : null;
        }),
        (t.prototype.setColumnFilterModel = function (e, r) {
          if (this.isAdvancedFilterEnabled()) return this.warnAdvancedFilters(), Promise.resolve();
          if (this.dataTypeService.isPendingInference()) {
            var o = function () {},
              i = new Promise(function (u) {
                o = u;
              });
            return this.columnFilterModelUpdateQueue.push({ key: e, model: r, resolve: o }), i;
          }
          var s = this.columnModel.getPrimaryColumn(e),
            a = s ? this.getOrCreateFilterWrapper(s, 'NO_UI') : null,
            l = function (u) {
              return new Promise(function (c) {
                u.then(function (p) {
                  return c(p);
                });
              });
            };
          return a ? l(this.setModelOnFilterWrapper(a.filterPromise, r)) : Promise.resolve();
        }),
        (t.prototype.getFilterWrapper = function (e) {
          var r,
            o = this.columnModel.getPrimaryColumn(e);
          return o && (r = this.cachedFilter(o)) !== null && r !== void 0 ? r : null;
        }),
        (t.prototype.destroy = function () {
          var e = this;
          n.prototype.destroy.call(this),
            this.allColumnFilters.forEach(function (r) {
              return e.disposeFilterWrapper(r, 'gridDestroyed');
            }),
            this.allColumnListeners.clear();
        }),
        mt([v('valueService')], t.prototype, 'valueService', void 0),
        mt([v('columnModel')], t.prototype, 'columnModel', void 0),
        mt([v('rowModel')], t.prototype, 'rowModel', void 0),
        mt([v('userComponentFactory')], t.prototype, 'userComponentFactory', void 0),
        mt([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        mt([v('dataTypeService')], t.prototype, 'dataTypeService', void 0),
        mt([v('quickFilterService')], t.prototype, 'quickFilterService', void 0),
        mt([Y('advancedFilterService')], t.prototype, 'advancedFilterService', void 0),
        mt([F], t.prototype, 'init', null),
        (t = mt([x('filterManager')], t)),
        t
      );
    })(D),
    pf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    gs = (function (n) {
      pf(t, n);
      function t(e, r) {
        var o = n.call(this, e) || this;
        return (o.ctrl = r), o;
      }
      return (
        (t.prototype.getCtrl = function () {
          return this.ctrl;
        }),
        t
      );
    })(k),
    df = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    lo = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    hf = (function (n) {
      df(t, n);
      function t(e) {
        return n.call(this, t.TEMPLATE, e) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this,
            r = this.getGui(),
            o = {
              addOrRemoveCssClass: function (i, s) {
                return e.addOrRemoveCssClass(i, s);
              },
              addOrRemoveBodyCssClass: function (i, s) {
                return e.eFloatingFilterBody.classList.toggle(i, s);
              },
              setButtonWrapperDisplayed: function (i) {
                return $(e.eButtonWrapper, i);
              },
              setCompDetails: function (i) {
                return e.setCompDetails(i);
              },
              getFloatingFilterComp: function () {
                return e.compPromise;
              },
              setWidth: function (i) {
                return (r.style.width = i);
              },
              setMenuIcon: function (i) {
                return e.eButtonShowMainFilter.appendChild(i);
              },
            };
          this.ctrl.setComp(o, r, this.eButtonShowMainFilter, this.eFloatingFilterBody);
        }),
        (t.prototype.setCompDetails = function (e) {
          var r = this;
          if (!e) {
            this.destroyFloatingFilterComp(), (this.compPromise = null);
            return;
          }
          (this.compPromise = e.newAgStackInstance()),
            this.compPromise.then(function (o) {
              return r.afterCompCreated(o);
            });
        }),
        (t.prototype.destroyFloatingFilterComp = function () {
          this.floatingFilterComp &&
            (this.eFloatingFilterBody.removeChild(this.floatingFilterComp.getGui()),
            (this.floatingFilterComp = this.destroyBean(this.floatingFilterComp)));
        }),
        (t.prototype.afterCompCreated = function (e) {
          if (e) {
            if (!this.isAlive()) {
              this.destroyBean(e);
              return;
            }
            this.destroyFloatingFilterComp(),
              (this.floatingFilterComp = e),
              this.eFloatingFilterBody.appendChild(e.getGui()),
              e.afterGuiAttached && e.afterGuiAttached();
          }
        }),
        (t.TEMPLATE = `<div class="ag-header-cell ag-floating-filter" role="gridcell">
            <div ref="eFloatingFilterBody" role="presentation"></div>
            <div class="ag-floating-filter-button ag-hidden" ref="eButtonWrapper" role="presentation">
                <button type="button" class="ag-button ag-floating-filter-button-button" ref="eButtonShowMainFilter" tabindex="-1"></button>
            </div>
        </div>`),
        lo([L('eFloatingFilterBody')], t.prototype, 'eFloatingFilterBody', void 0),
        lo([L('eButtonWrapper')], t.prototype, 'eButtonWrapper', void 0),
        lo([L('eButtonShowMainFilter')], t.prototype, 'eButtonShowMainFilter', void 0),
        lo([F], t.prototype, 'postConstruct', null),
        lo([Se], t.prototype, 'destroyFloatingFilterComp', null),
        t
      );
    })(gs),
    ff = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    vf = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    pe;
  (function (n) {
    (n.AUTO_HEIGHT = 'ag-layout-auto-height'),
      (n.NORMAL = 'ag-layout-normal'),
      (n.PRINT = 'ag-layout-print');
  })(pe || (pe = {}));
  var ys = (function (n) {
      ff(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.view = e), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addManagedPropertyListener('domLayout', this.updateLayoutClasses.bind(this)),
            this.updateLayoutClasses();
        }),
        (t.prototype.updateLayoutClasses = function () {
          var e = this.getDomLayout(),
            r = { autoHeight: e === 'autoHeight', normal: e === 'normal', print: e === 'print' },
            o = r.autoHeight ? pe.AUTO_HEIGHT : r.print ? pe.PRINT : pe.NORMAL;
          this.view.updateLayoutClasses(o, r);
        }),
        (t.prototype.getDomLayout = function () {
          var e,
            r =
              (e = this.gridOptionsService.get('domLayout')) !== null && e !== void 0
                ? e
                : 'normal',
            o = ['normal', 'print', 'autoHeight'];
          return o.indexOf(r) === -1
            ? (V(
                ''.concat(
                  r,
                  " is not valid for DOM Layout, valid values are 'normal', 'autoHeight', 'print'."
                )
              ),
              'normal')
            : r;
        }),
        vf([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    gf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ci = function () {
      return (
        (ci =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        ci.apply(this, arguments)
      );
    },
    Wt = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Ce;
  (function (n) {
    (n[(n.Vertical = 0)] = 'Vertical'), (n[(n.Horizontal = 1)] = 'Horizontal');
  })(Ce || (Ce = {}));
  var we;
  (function (n) {
    (n[(n.Container = 0)] = 'Container'), (n[(n.FakeContainer = 1)] = 'FakeContainer');
  })(we || (we = {}));
  var yf = (function (n) {
      gf(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (
          (r.lastScrollSource = [null, null]),
          (r.scrollLeft = -1),
          (r.nextScrollTop = -1),
          (r.scrollTop = -1),
          (r.lastOffsetHeight = -1),
          (r.lastScrollTop = -1),
          (r.eBodyViewport = e),
          (r.resetLastHScrollDebounced = He(function () {
            return (r.lastScrollSource[Ce.Horizontal] = null);
          }, 500)),
          (r.resetLastVScrollDebounced = He(function () {
            return (r.lastScrollSource[Ce.Vertical] = null);
          }, 500)),
          r
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          (this.enableRtl = this.gridOptionsService.get('enableRtl')),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
              this.onDisplayedColumnsWidthChanged.bind(this)
            ),
            this.ctrlsService.whenReady(function (r) {
              (e.centerRowContainerCtrl = r.centerRowContainerCtrl),
                e.onDisplayedColumnsWidthChanged(),
                e.addScrollListener();
            });
        }),
        (t.prototype.addScrollListener = function () {
          var e = this.ctrlsService.getFakeHScrollComp(),
            r = this.ctrlsService.getFakeVScrollComp();
          this.addManagedListener(
            this.centerRowContainerCtrl.getViewportElement(),
            'scroll',
            this.onHScroll.bind(this)
          ),
            e.onScrollCallback(this.onFakeHScroll.bind(this));
          var o = this.gridOptionsService.get('debounceVerticalScrollbar'),
            i = o ? He(this.onVScroll.bind(this), 100) : this.onVScroll.bind(this),
            s = o ? He(this.onFakeVScroll.bind(this), 100) : this.onFakeVScroll.bind(this);
          this.addManagedListener(this.eBodyViewport, 'scroll', i), r.onScrollCallback(s);
        }),
        (t.prototype.onDisplayedColumnsWidthChanged = function () {
          this.enableRtl && this.horizontallyScrollHeaderCenterAndFloatingCenter();
        }),
        (t.prototype.horizontallyScrollHeaderCenterAndFloatingCenter = function (e) {
          var r = this.centerRowContainerCtrl == null;
          if (!r) {
            e === void 0 && (e = this.centerRowContainerCtrl.getCenterViewportScrollLeft());
            var o = this.enableRtl ? e : -e,
              i = this.ctrlsService.getTopCenterRowContainerCtrl(),
              s = this.ctrlsService.getStickyTopCenterRowContainerCtrl(),
              a = this.ctrlsService.getBottomCenterRowContainerCtrl(),
              l = this.ctrlsService.getFakeHScrollComp(),
              u = this.ctrlsService.getHeaderRowContainerCtrl();
            u.setHorizontalScroll(-o),
              a.setContainerTranslateX(o),
              i.setContainerTranslateX(o),
              s.setContainerTranslateX(o);
            var c = this.centerRowContainerCtrl.getViewportElement(),
              p = this.lastScrollSource[Ce.Horizontal] === we.Container;
            (e = Math.abs(e)), p ? l.setScrollPosition(e) : Zr(c, e, this.enableRtl);
          }
        }),
        (t.prototype.isControllingScroll = function (e, r) {
          return this.lastScrollSource[r] == null
            ? ((this.lastScrollSource[r] = e), !0)
            : this.lastScrollSource[r] === e;
        }),
        (t.prototype.onFakeHScroll = function () {
          this.isControllingScroll(we.FakeContainer, Ce.Horizontal) &&
            this.onHScrollCommon(we.FakeContainer);
        }),
        (t.prototype.onHScroll = function () {
          this.isControllingScroll(we.Container, Ce.Horizontal) &&
            this.onHScrollCommon(we.Container);
        }),
        (t.prototype.onHScrollCommon = function (e) {
          var r = this.centerRowContainerCtrl.getViewportElement(),
            o = r.scrollLeft;
          if (!this.shouldBlockScrollUpdate(Ce.Horizontal, o, !0)) {
            var i;
            e === we.Container
              ? (i = Jr(r, this.enableRtl))
              : (i = this.ctrlsService.getFakeHScrollComp().getScrollPosition()),
              this.doHorizontalScroll(Math.round(i)),
              this.resetLastHScrollDebounced();
          }
        }),
        (t.prototype.onFakeVScroll = function () {
          this.isControllingScroll(we.FakeContainer, Ce.Vertical) &&
            this.onVScrollCommon(we.FakeContainer);
        }),
        (t.prototype.onVScroll = function () {
          this.isControllingScroll(we.Container, Ce.Vertical) && this.onVScrollCommon(we.Container);
        }),
        (t.prototype.onVScrollCommon = function (e) {
          var r;
          e === we.Container
            ? (r = this.eBodyViewport.scrollTop)
            : (r = this.ctrlsService.getFakeVScrollComp().getScrollPosition()),
            !this.shouldBlockScrollUpdate(Ce.Vertical, r, !0) &&
              (this.animationFrameService.setScrollTop(r),
              (this.nextScrollTop = r),
              e === we.Container
                ? this.ctrlsService.getFakeVScrollComp().setScrollPosition(r)
                : (this.eBodyViewport.scrollTop = r),
              this.gridOptionsService.get('suppressAnimationFrame')
                ? this.scrollGridIfNeeded()
                : this.animationFrameService.schedule(),
              this.resetLastVScrollDebounced());
        }),
        (t.prototype.doHorizontalScroll = function (e) {
          var r = this.ctrlsService.getFakeHScrollComp().getScrollPosition();
          (this.scrollLeft === e && e === r) ||
            ((this.scrollLeft = e),
            this.fireScrollEvent(Ce.Horizontal),
            this.horizontallyScrollHeaderCenterAndFloatingCenter(e),
            this.centerRowContainerCtrl.onHorizontalViewportChanged(!0));
        }),
        (t.prototype.fireScrollEvent = function (e) {
          var r = this,
            o = {
              type: g.EVENT_BODY_SCROLL,
              direction: e === Ce.Horizontal ? 'horizontal' : 'vertical',
              left: this.scrollLeft,
              top: this.scrollTop,
            };
          this.eventService.dispatchEvent(o),
            window.clearTimeout(this.scrollTimer),
            (this.scrollTimer = void 0),
            (this.scrollTimer = window.setTimeout(function () {
              var i = ci(ci({}, o), { type: g.EVENT_BODY_SCROLL_END });
              r.eventService.dispatchEvent(i);
            }, 100));
        }),
        (t.prototype.shouldBlockScrollUpdate = function (e, r, o) {
          return (
            o === void 0 && (o = !1),
            o && !Dt()
              ? !1
              : e === Ce.Vertical
              ? this.shouldBlockVerticalScroll(r)
              : this.shouldBlockHorizontalScroll(r)
          );
        }),
        (t.prototype.shouldBlockVerticalScroll = function (e) {
          var r = qr(this.eBodyViewport),
            o = this.eBodyViewport.scrollHeight;
          return e < 0 || e + r > o;
        }),
        (t.prototype.shouldBlockHorizontalScroll = function (e) {
          var r = this.centerRowContainerCtrl.getCenterWidth(),
            o = this.centerRowContainerCtrl.getViewportElement().scrollWidth;
          if (this.enableRtl && Xr()) {
            if (e > 0) return !0;
          } else if (e < 0) return !0;
          return Math.abs(e) + r > o;
        }),
        (t.prototype.redrawRowsAfterScroll = function () {
          this.fireScrollEvent(Ce.Vertical);
        }),
        (t.prototype.checkScrollLeft = function () {
          this.scrollLeft !== this.centerRowContainerCtrl.getCenterViewportScrollLeft() &&
            this.onHScrollCommon(we.Container);
        }),
        (t.prototype.scrollGridIfNeeded = function () {
          var e = this.scrollTop != this.nextScrollTop;
          return e && ((this.scrollTop = this.nextScrollTop), this.redrawRowsAfterScroll()), e;
        }),
        (t.prototype.setHorizontalScrollPosition = function (e, r) {
          r === void 0 && (r = !1);
          var o = 0,
            i =
              this.centerRowContainerCtrl.getViewportElement().scrollWidth -
              this.centerRowContainerCtrl.getCenterWidth();
          !r &&
            this.shouldBlockScrollUpdate(Ce.Horizontal, e) &&
            (this.enableRtl && Xr() ? (e = e > 0 ? 0 : i) : (e = Math.min(Math.max(e, o), i))),
            Zr(this.centerRowContainerCtrl.getViewportElement(), Math.abs(e), this.enableRtl),
            this.doHorizontalScroll(e);
        }),
        (t.prototype.setVerticalScrollPosition = function (e) {
          this.eBodyViewport.scrollTop = e;
        }),
        (t.prototype.getVScrollPosition = function () {
          (this.lastScrollTop = this.eBodyViewport.scrollTop),
            (this.lastOffsetHeight = this.eBodyViewport.offsetHeight);
          var e = { top: this.lastScrollTop, bottom: this.lastScrollTop + this.lastOffsetHeight };
          return e;
        }),
        (t.prototype.getApproximateVScollPosition = function () {
          return this.lastScrollTop >= 0 && this.lastOffsetHeight >= 0
            ? { top: this.scrollTop, bottom: this.scrollTop + this.lastOffsetHeight }
            : this.getVScrollPosition();
        }),
        (t.prototype.getHScrollPosition = function () {
          return this.centerRowContainerCtrl.getHScrollPosition();
        }),
        (t.prototype.isHorizontalScrollShowing = function () {
          return this.centerRowContainerCtrl.isHorizontalScrollShowing();
        }),
        (t.prototype.scrollHorizontally = function (e) {
          var r = this.centerRowContainerCtrl.getViewportElement().scrollLeft;
          return (
            this.setHorizontalScrollPosition(r + e),
            this.centerRowContainerCtrl.getViewportElement().scrollLeft - r
          );
        }),
        (t.prototype.scrollToTop = function () {
          this.eBodyViewport.scrollTop = 0;
        }),
        (t.prototype.ensureNodeVisible = function (e, r) {
          r === void 0 && (r = null);
          for (var o = this.rowModel.getRowCount(), i = -1, s = 0; s < o; s++) {
            var a = this.rowModel.getRow(s);
            if (typeof e == 'function') {
              var l = e;
              if (a && l(a)) {
                i = s;
                break;
              }
            } else if (e === a || e === a.data) {
              i = s;
              break;
            }
          }
          i >= 0 && this.ensureIndexVisible(i, r);
        }),
        (t.prototype.ensureIndexVisible = function (e, r) {
          var o = this;
          if (!this.gridOptionsService.isDomLayout('print')) {
            var i = this.paginationProxy.getRowCount();
            if (typeof e != 'number' || e < 0 || e >= i) {
              console.warn('AG Grid: Invalid row index for ensureIndexVisible: ' + e);
              return;
            }
            var s = this.gridOptionsService.get('pagination'),
              a = s && !this.gridOptionsService.get('suppressPaginationPanel');
            this.getFrameworkOverrides().wrapIncoming(function () {
              a || o.paginationProxy.goToPageWithIndex(e);
              var l = o.ctrlsService.getGridBodyCtrl(),
                u = l.getStickyTopHeight(),
                c = o.paginationProxy.getRow(e),
                p;
              do {
                var d = c.rowTop,
                  h = c.rowHeight,
                  f = o.paginationProxy.getPixelOffset(),
                  y = c.rowTop - f,
                  m = y + c.rowHeight,
                  C = o.getVScrollPosition(),
                  w = o.heightScaler.getDivStretchOffset(),
                  E = C.top + w,
                  S = C.bottom + w,
                  R = S - E,
                  O = o.heightScaler.getScrollPositionForPixel(y),
                  b = o.heightScaler.getScrollPositionForPixel(m - R),
                  A = Math.min((O + b) / 2, y),
                  M = E + u > y,
                  N = S < m,
                  I = null;
                r === 'top'
                  ? (I = O)
                  : r === 'bottom'
                  ? (I = b)
                  : r === 'middle'
                  ? (I = A)
                  : M
                  ? (I = O - u)
                  : N && (I = b),
                  I !== null &&
                    (o.setVerticalScrollPosition(I), o.rowRenderer.redraw({ afterScroll: !0 })),
                  (p = d !== c.rowTop || h !== c.rowHeight);
              } while (p);
              o.animationFrameService.flushAllFrames();
            });
          }
        }),
        (t.prototype.ensureColumnVisible = function (e, r) {
          var o = this;
          r === void 0 && (r = 'auto');
          var i = this.columnModel.getGridColumn(e);
          if (i && !i.isPinned() && this.columnModel.isColumnDisplayed(i)) {
            var s = this.getPositionedHorizontalScroll(i, r);
            this.getFrameworkOverrides().wrapIncoming(function () {
              s !== null && o.centerRowContainerCtrl.setCenterViewportScrollLeft(s),
                o.centerRowContainerCtrl.onHorizontalViewportChanged(),
                o.animationFrameService.flushAllFrames();
            });
          }
        }),
        (t.prototype.setScrollPosition = function (e, r) {
          var o = this;
          this.getFrameworkOverrides().wrapIncoming(function () {
            o.centerRowContainerCtrl.setCenterViewportScrollLeft(r),
              o.setVerticalScrollPosition(e),
              o.rowRenderer.redraw({ afterScroll: !0 }),
              o.animationFrameService.flushAllFrames();
          });
        }),
        (t.prototype.getPositionedHorizontalScroll = function (e, r) {
          var o = this.isColumnOutsideViewport(e),
            i = o.columnBeforeStart,
            s = o.columnAfterEnd,
            a = this.centerRowContainerCtrl.getCenterWidth() < e.getActualWidth(),
            l = this.centerRowContainerCtrl.getCenterWidth(),
            u = this.enableRtl,
            c = (u ? i : s) || a,
            p = u ? s : i;
          r !== 'auto' && ((c = r === 'start'), (p = r === 'end'));
          var d = r === 'middle';
          if (c || p || d) {
            var h = this.getColumnBounds(e),
              f = h.colLeft,
              y = h.colMiddle,
              m = h.colRight;
            return d ? y - l / 2 : c ? (u ? m : f) : u ? f - l : m - l;
          }
          return null;
        }),
        (t.prototype.isColumnOutsideViewport = function (e) {
          var r = this.getViewportBounds(),
            o = r.start,
            i = r.end,
            s = this.getColumnBounds(e),
            a = s.colLeft,
            l = s.colRight,
            u = this.enableRtl,
            c = u ? o > l : i < l,
            p = u ? i < a : o > a;
          return { columnBeforeStart: c, columnAfterEnd: p };
        }),
        (t.prototype.getColumnBounds = function (e) {
          var r = this.enableRtl,
            o = this.columnModel.getBodyContainerWidth(),
            i = e.getActualWidth(),
            s = e.getLeft(),
            a = r ? -1 : 1,
            l = r ? o - s : s,
            u = l + i * a,
            c = l + (i / 2) * a;
          return { colLeft: l, colMiddle: c, colRight: u };
        }),
        (t.prototype.getViewportBounds = function () {
          var e = this.centerRowContainerCtrl.getCenterWidth(),
            r = this.centerRowContainerCtrl.getCenterViewportScrollLeft(),
            o = r,
            i = e + r;
          return { start: o, end: i, width: e };
        }),
        Wt([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Wt([v('animationFrameService')], t.prototype, 'animationFrameService', void 0),
        Wt([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        Wt([v('rowModel')], t.prototype, 'rowModel', void 0),
        Wt([v('rowContainerHeightService')], t.prototype, 'heightScaler', void 0),
        Wt([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        Wt([v('columnModel')], t.prototype, 'columnModel', void 0),
        Wt([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    mf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ms = function () {
      return (
        (ms =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        ms.apply(this, arguments)
      );
    },
    tt = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Cf = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Sf = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    wf = (function (n) {
      mf(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.isMultiRowDrag = !1), (r.eContainer = e), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.gridOptionsService.isRowModelType('clientSide') &&
            (this.clientSideRowModel = this.rowModel),
            this.ctrlsService.whenReady(function () {
              var r = e.ctrlsService.getGridBodyCtrl();
              e.autoScrollService = new Ql({
                scrollContainer: r.getBodyViewportElement(),
                scrollAxis: 'y',
                getVerticalPosition: function () {
                  return r.getScrollFeature().getVScrollPosition().top;
                },
                setVerticalPosition: function (o) {
                  return r.getScrollFeature().setVerticalScrollPosition(o);
                },
                onScrollCallback: function () {
                  e.onDragging(e.lastDraggingEvent);
                },
              });
            });
        }),
        (t.prototype.getContainer = function () {
          return this.eContainer;
        }),
        (t.prototype.isInterestedIn = function (e) {
          return e === Te.RowDrag;
        }),
        (t.prototype.getIconName = function () {
          var e = this.gridOptionsService.get('rowDragManaged');
          return e && this.shouldPreventRowMove() ? he.ICON_NOT_ALLOWED : he.ICON_MOVE;
        }),
        (t.prototype.shouldPreventRowMove = function () {
          var e = this.columnModel.getRowGroupColumns();
          if (e.length) return !0;
          var r = this.filterManager.isAnyFilterPresent();
          if (r) return !0;
          var o = this.sortController.isSortActive();
          return !!o;
        }),
        (t.prototype.getRowNodes = function (e) {
          var r = this;
          if (!this.isFromThisGrid(e)) return e.dragItem.rowNodes || [];
          var o = this.gridOptionsService.get('rowDragMultiRow'),
            i = Sf([], Cf(this.selectionService.getSelectedNodes()), !1).sort(function (a, l) {
              return a.rowIndex == null || l.rowIndex == null
                ? 0
                : r.getRowIndexNumber(a) - r.getRowIndexNumber(l);
            }),
            s = e.dragItem.rowNode;
          return o && i.indexOf(s) !== -1
            ? ((this.isMultiRowDrag = !0), i)
            : ((this.isMultiRowDrag = !1), [s]);
        }),
        (t.prototype.onDragEnter = function (e) {
          (e.dragItem.rowNodes = this.getRowNodes(e)),
            this.dispatchGridEvent(g.EVENT_ROW_DRAG_ENTER, e),
            this.getRowNodes(e).forEach(function (r) {
              r.setDragging(!0);
            }),
            this.onEnterOrDragging(e);
        }),
        (t.prototype.onDragging = function (e) {
          this.onEnterOrDragging(e);
        }),
        (t.prototype.isFromThisGrid = function (e) {
          var r = e.dragSource.dragSourceDomDataKey;
          return r === this.gridOptionsService.getDomDataKey();
        }),
        (t.prototype.isDropZoneWithinThisGrid = function (e) {
          var r = this.ctrlsService.getGridBodyCtrl(),
            o = r.getGui(),
            i = e.dropZoneTarget;
          return !o.contains(i);
        }),
        (t.prototype.onEnterOrDragging = function (e) {
          this.dispatchGridEvent(g.EVENT_ROW_DRAG_MOVE, e), (this.lastDraggingEvent = e);
          var r = this.mouseEventService.getNormalisedPosition(e).y,
            o = this.gridOptionsService.get('rowDragManaged');
          o && this.doManagedDrag(e, r), this.autoScrollService.check(e.event);
        }),
        (t.prototype.doManagedDrag = function (e, r) {
          var o = this.isFromThisGrid(e),
            i = this.gridOptionsService.get('rowDragManaged'),
            s = e.dragItem.rowNodes;
          (i && this.shouldPreventRowMove()) ||
            (this.gridOptionsService.get('suppressMoveWhenRowDragging') || !o
              ? this.isDropZoneWithinThisGrid(e) ||
                this.clientSideRowModel.highlightRowAtPixel(s[0], r)
              : this.moveRows(s, r));
        }),
        (t.prototype.getRowIndexNumber = function (e) {
          return parseInt(q(e.getRowIndexString().split('-')), 10);
        }),
        (t.prototype.moveRowAndClearHighlight = function (e) {
          var r = this,
            o = this.clientSideRowModel.getLastHighlightedRowNode(),
            i = o && o.highlighted === et.Below,
            s = this.mouseEventService.getNormalisedPosition(e).y,
            a = e.dragItem.rowNodes,
            l = i ? 1 : 0;
          if (this.isFromThisGrid(e))
            a.forEach(function (p) {
              p.rowTop < s && (l -= 1);
            }),
              this.moveRows(a, s, l);
          else {
            var u = this.gridOptionsService.getCallback('getRowId'),
              c = this.clientSideRowModel.getRowIndexAtPixel(s) + 1;
            this.clientSideRowModel.getHighlightPosition(s) === et.Above && c--,
              this.clientSideRowModel.updateRowData({
                add: a
                  .map(function (p) {
                    return p.data;
                  })
                  .filter(function (p) {
                    return !r.clientSideRowModel.getRowNode(u ? u({ data: p, level: 0 }) : p.id);
                  }),
                addIndex: c,
              });
          }
          this.clearRowHighlight();
        }),
        (t.prototype.clearRowHighlight = function () {
          this.clientSideRowModel.highlightRowAtPixel(null);
        }),
        (t.prototype.moveRows = function (e, r, o) {
          o === void 0 && (o = 0);
          var i = this.clientSideRowModel.ensureRowsAtPixel(e, r, o);
          i &&
            (this.focusService.clearFocusedCell(),
            this.rangeService && this.rangeService.removeAllCellRanges());
        }),
        (t.prototype.addRowDropZone = function (e) {
          var r = this;
          if (!e.getContainer()) {
            V('addRowDropZone - A container target needs to be provided');
            return;
          }
          if (this.dragAndDropService.findExternalZone(e)) {
            console.warn(
              'AG Grid: addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again.'
            );
            return;
          }
          var o = { getContainer: e.getContainer };
          e.fromGrid
            ? ((e.fromGrid = void 0), (o = e))
            : (e.onDragEnter &&
                (o.onDragEnter = function (i) {
                  e.onDragEnter(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_ENTER, i));
                }),
              e.onDragLeave &&
                (o.onDragLeave = function (i) {
                  e.onDragLeave(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_LEAVE, i));
                }),
              e.onDragging &&
                (o.onDragging = function (i) {
                  e.onDragging(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_MOVE, i));
                }),
              e.onDragStop &&
                (o.onDragStop = function (i) {
                  e.onDragStop(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_END, i));
                })),
            this.dragAndDropService.addDropTarget(
              ms(
                {
                  isInterestedIn: function (i) {
                    return i === Te.RowDrag;
                  },
                  getIconName: function () {
                    return he.ICON_MOVE;
                  },
                  external: !0,
                },
                o
              )
            );
        }),
        (t.prototype.getRowDropZone = function (e) {
          var r = this,
            o = this.getContainer.bind(this),
            i = this.onDragEnter.bind(this),
            s = this.onDragLeave.bind(this),
            a = this.onDragging.bind(this),
            l = this.onDragStop.bind(this);
          return e
            ? {
                getContainer: o,
                onDragEnter: e.onDragEnter
                  ? function (u) {
                      i(u), e.onDragEnter(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_ENTER, u));
                    }
                  : i,
                onDragLeave: e.onDragLeave
                  ? function (u) {
                      s(u), e.onDragLeave(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_LEAVE, u));
                    }
                  : s,
                onDragging: e.onDragging
                  ? function (u) {
                      a(u), e.onDragging(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_MOVE, u));
                    }
                  : a,
                onDragStop: e.onDragStop
                  ? function (u) {
                      l(u), e.onDragStop(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_END, u));
                    }
                  : l,
                fromGrid: !0,
              }
            : {
                getContainer: o,
                onDragEnter: i,
                onDragLeave: s,
                onDragging: a,
                onDragStop: l,
                fromGrid: !0,
              };
        }),
        (t.prototype.draggingToRowDragEvent = function (e, r) {
          var o = this.mouseEventService.getNormalisedPosition(r).y,
            i = o > this.paginationProxy.getCurrentPageHeight(),
            s = -1,
            a;
          i || ((s = this.rowModel.getRowIndexAtPixel(o)), (a = this.rowModel.getRow(s)));
          var l;
          switch (r.vDirection) {
            case Fr.Down:
              l = 'down';
              break;
            case Fr.Up:
              l = 'up';
              break;
            default:
              l = null;
              break;
          }
          var u = this.gridOptionsService.addGridCommonParams({
            type: e,
            event: r.event,
            node: r.dragItem.rowNode,
            nodes: r.dragItem.rowNodes,
            overIndex: s,
            overNode: a,
            y: o,
            vDirection: l,
          });
          return u;
        }),
        (t.prototype.dispatchGridEvent = function (e, r) {
          var o = this.draggingToRowDragEvent(e, r);
          this.eventService.dispatchEvent(o);
        }),
        (t.prototype.onDragLeave = function (e) {
          this.dispatchGridEvent(g.EVENT_ROW_DRAG_LEAVE, e),
            this.stopDragging(e),
            this.gridOptionsService.get('rowDragManaged') && this.clearRowHighlight(),
            this.isFromThisGrid(e) && (this.isMultiRowDrag = !1);
        }),
        (t.prototype.onDragStop = function (e) {
          this.dispatchGridEvent(g.EVENT_ROW_DRAG_END, e),
            this.stopDragging(e),
            this.gridOptionsService.get('rowDragManaged') &&
              (this.gridOptionsService.get('suppressMoveWhenRowDragging') ||
                !this.isFromThisGrid(e)) &&
              !this.isDropZoneWithinThisGrid(e) &&
              this.moveRowAndClearHighlight(e);
        }),
        (t.prototype.stopDragging = function (e) {
          this.autoScrollService.ensureCleared(),
            this.getRowNodes(e).forEach(function (r) {
              r.setDragging(!1);
            });
        }),
        tt([v('dragAndDropService')], t.prototype, 'dragAndDropService', void 0),
        tt([v('rowModel')], t.prototype, 'rowModel', void 0),
        tt([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        tt([v('columnModel')], t.prototype, 'columnModel', void 0),
        tt([v('focusService')], t.prototype, 'focusService', void 0),
        tt([v('sortController')], t.prototype, 'sortController', void 0),
        tt([v('filterManager')], t.prototype, 'filterManager', void 0),
        tt([v('selectionService')], t.prototype, 'selectionService', void 0),
        tt([v('mouseEventService')], t.prototype, 'mouseEventService', void 0),
        tt([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        tt([Y('rangeService')], t.prototype, 'rangeService', void 0),
        tt([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    Ef = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Pe = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Mr;
  (function (n) {
    (n.ANIMATION_ON = 'ag-row-animation'), (n.ANIMATION_OFF = 'ag-row-no-animation');
  })(Mr || (Mr = {}));
  var eu = 'ag-force-vertical-scroll',
    _f = 'ag-selectable',
    Rf = 'ag-column-moving',
    Of = (function (n) {
      Ef(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.stickyTopHeight = 0), e;
      }
      return (
        (t.prototype.getScrollFeature = function () {
          return this.bodyScrollFeature;
        }),
        (t.prototype.getBodyViewportElement = function () {
          return this.eBodyViewport;
        }),
        (t.prototype.setComp = function (e, r, o, i, s, a) {
          var l = this;
          (this.comp = e),
            (this.eGridBody = r),
            (this.eBodyViewport = o),
            (this.eTop = i),
            (this.eBottom = s),
            (this.eStickyTop = a),
            this.setCellTextSelection(this.gridOptionsService.get('enableCellTextSelection')),
            this.addManagedPropertyListener('enableCellTextSelection', function (u) {
              return l.setCellTextSelection(u.currentValue);
            }),
            this.createManagedBean(new ys(this.comp)),
            (this.bodyScrollFeature = this.createManagedBean(new yf(this.eBodyViewport))),
            this.addRowDragListener(),
            this.setupRowAnimationCssClass(),
            this.addEventListeners(),
            this.addFocusListeners([i, o, s, a]),
            this.onGridColumnsChanged(),
            this.addBodyViewportListener(),
            this.setFloatingHeights(),
            this.disableBrowserDragging(),
            this.addStopEditingWhenGridLosesFocus(),
            this.filterManager.setupAdvancedFilterHeaderComp(i),
            this.ctrlsService.registerGridBodyCtrl(this);
        }),
        (t.prototype.getComp = function () {
          return this.comp;
        }),
        (t.prototype.addEventListeners = function () {
          this.addManagedListener(
            this.eventService,
            g.EVENT_GRID_COLUMNS_CHANGED,
            this.onGridColumnsChanged.bind(this)
          ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_SCROLL_VISIBILITY_CHANGED,
              this.onScrollVisibilityChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_PINNED_ROW_DATA_CHANGED,
              this.onPinnedRowDataChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_HEADER_HEIGHT_CHANGED,
              this.onHeaderHeightChanged.bind(this)
            );
        }),
        (t.prototype.addFocusListeners = function (e) {
          var r = this;
          e.forEach(function (o) {
            r.addManagedListener(o, 'focusin', function (i) {
              var s = i.target,
                a = or(s, 'ag-root', o);
              o.classList.toggle('ag-has-focus', !a);
            }),
              r.addManagedListener(o, 'focusout', function (i) {
                var s = i.target,
                  a = i.relatedTarget,
                  l = o.contains(a),
                  u = or(a, 'ag-root', o),
                  c = or(s, 'ag-root', o);
                c || ((!l || u) && o.classList.remove('ag-has-focus'));
              });
          });
        }),
        (t.prototype.setColumnMovingCss = function (e) {
          this.comp.setColumnMovingCss(Rf, e);
        }),
        (t.prototype.setCellTextSelection = function (e) {
          e === void 0 && (e = !1), this.comp.setCellSelectableCss(_f, e);
        }),
        (t.prototype.onScrollVisibilityChanged = function () {
          var e = this,
            r = this.scrollVisibleService.isVerticalScrollShowing();
          this.setVerticalScrollPaddingVisible(r), this.setStickyTopWidth(r);
          var o = (r && this.gridOptionsService.getScrollbarWidth()) || 0,
            i = Ln() ? 16 : 0,
            s = 'calc(100% + '.concat(o + i, 'px)');
          this.animationFrameService.requestAnimationFrame(function () {
            return e.comp.setBodyViewportWidth(s);
          });
        }),
        (t.prototype.onGridColumnsChanged = function () {
          var e = this.columnModel.getAllGridColumns();
          this.comp.setColumnCount(e.length);
        }),
        (t.prototype.disableBrowserDragging = function () {
          this.addManagedListener(this.eGridBody, 'dragstart', function (e) {
            if (e.target instanceof HTMLImageElement) return e.preventDefault(), !1;
          });
        }),
        (t.prototype.addStopEditingWhenGridLosesFocus = function () {
          var e = this;
          if (this.gridOptionsService.get('stopEditingWhenCellsLoseFocus')) {
            var r = function (i) {
                var s = i.relatedTarget;
                if (Yo(s) === null) {
                  e.rowRenderer.stopEditing();
                  return;
                }
                var a =
                  o.some(function (u) {
                    return u.contains(s);
                  }) && e.mouseEventService.isElementInThisGrid(s);
                if (!a) {
                  var l = e.popupService;
                  a =
                    l.getActivePopups().some(function (u) {
                      return u.contains(s);
                    }) || l.isElementWithinCustomPopup(s);
                }
                a || e.rowRenderer.stopEditing();
              },
              o = [this.eBodyViewport, this.eBottom, this.eTop, this.eStickyTop];
            o.forEach(function (i) {
              return e.addManagedListener(i, 'focusout', r);
            });
          }
        }),
        (t.prototype.updateRowCount = function () {
          var e =
              this.headerNavigationService.getHeaderRowCount() +
              this.filterManager.getHeaderRowCount(),
            r = this.rowModel.isLastRowIndexKnown() ? this.rowModel.getRowCount() : -1,
            o = r === -1 ? -1 : e + r;
          this.comp.setRowCount(o);
        }),
        (t.prototype.registerBodyViewportResizeListener = function (e) {
          this.comp.registerBodyViewportResizeListener(e);
        }),
        (t.prototype.setVerticalScrollPaddingVisible = function (e) {
          var r = e ? 'scroll' : 'hidden';
          this.comp.setPinnedTopBottomOverflowY(r);
        }),
        (t.prototype.isVerticalScrollShowing = function () {
          var e = this.gridOptionsService.get('alwaysShowVerticalScroll'),
            r = e ? eu : null,
            o = this.gridOptionsService.isDomLayout('normal');
          return this.comp.setAlwaysVerticalScrollClass(r, e), e || (o && ol(this.eBodyViewport));
        }),
        (t.prototype.setupRowAnimationCssClass = function () {
          var e = this,
            r = function () {
              var o =
                  e.gridOptionsService.isAnimateRows() &&
                  !e.rowContainerHeightService.isStretching(),
                i = o ? Mr.ANIMATION_ON : Mr.ANIMATION_OFF;
              e.comp.setRowAnimationCssOnBodyViewport(i, o);
            };
          r(),
            this.addManagedListener(this.eventService, g.EVENT_HEIGHT_SCALE_CHANGED, r),
            this.addManagedPropertyListener('animateRows', r);
        }),
        (t.prototype.getGridBodyElement = function () {
          return this.eGridBody;
        }),
        (t.prototype.addBodyViewportListener = function () {
          var e = this.onBodyViewportContextMenu.bind(this);
          this.addManagedListener(this.eBodyViewport, 'contextmenu', e),
            this.mockContextMenuForIPad(e),
            this.addManagedListener(
              this.eBodyViewport,
              'wheel',
              this.onBodyViewportWheel.bind(this)
            ),
            this.addManagedListener(this.eStickyTop, 'wheel', this.onStickyTopWheel.bind(this)),
            this.addFullWidthContainerWheelListener();
        }),
        (t.prototype.addFullWidthContainerWheelListener = function () {
          var e = this,
            r = this.eBodyViewport.querySelector('.ag-full-width-container'),
            o = this.eBodyViewport.querySelector('.ag-center-cols-viewport');
          r &&
            o &&
            this.addManagedListener(r, 'wheel', function (i) {
              return e.onFullWidthContainerWheel(i, o);
            });
        }),
        (t.prototype.onFullWidthContainerWheel = function (e, r) {
          !e.deltaX ||
            Math.abs(e.deltaY) > Math.abs(e.deltaX) ||
            !this.mouseEventService.isEventFromThisGrid(e) ||
            (e.preventDefault(), r.scrollBy({ left: e.deltaX }));
        }),
        (t.prototype.onBodyViewportContextMenu = function (e, r, o) {
          if (!(!e && !o)) {
            if (this.gridOptionsService.get('preventDefaultOnContextMenu')) {
              var i = e || o;
              i.preventDefault();
            }
            var s = (e || r).target;
            (s === this.eBodyViewport ||
              s === this.ctrlsService.getCenterRowContainerCtrl().getViewportElement()) &&
              this.menuService.showContextMenu({
                mouseEvent: e,
                touchEvent: o,
                value: null,
                anchorToElement: this.eGridBody,
              });
          }
        }),
        (t.prototype.mockContextMenuForIPad = function (e) {
          if (Dt()) {
            var r = new me(this.eBodyViewport),
              o = function (i) {
                e(void 0, i.touchStart, i.touchEvent);
              };
            this.addManagedListener(r, me.EVENT_LONG_TAP, o),
              this.addDestroyFunc(function () {
                return r.destroy();
              });
          }
        }),
        (t.prototype.onBodyViewportWheel = function (e) {
          this.gridOptionsService.get('suppressScrollWhenPopupsAreOpen') &&
            this.popupService.hasAnchoredPopup() &&
            e.preventDefault();
        }),
        (t.prototype.onStickyTopWheel = function (e) {
          e.preventDefault(), e.offsetY && this.scrollVertically(e.deltaY);
        }),
        (t.prototype.getGui = function () {
          return this.eGridBody;
        }),
        (t.prototype.scrollVertically = function (e) {
          var r = this.eBodyViewport.scrollTop;
          return (
            this.bodyScrollFeature.setVerticalScrollPosition(r + e),
            this.eBodyViewport.scrollTop - r
          );
        }),
        (t.prototype.addRowDragListener = function () {
          (this.rowDragFeature = this.createManagedBean(new wf(this.eBodyViewport))),
            this.dragAndDropService.addDropTarget(this.rowDragFeature);
        }),
        (t.prototype.getRowDragFeature = function () {
          return this.rowDragFeature;
        }),
        (t.prototype.onPinnedRowDataChanged = function () {
          this.setFloatingHeights();
        }),
        (t.prototype.setFloatingHeights = function () {
          var e = this.pinnedRowModel,
            r = e.getPinnedTopTotalHeight(),
            o = e.getPinnedBottomTotalHeight();
          this.comp.setTopHeight(r),
            this.comp.setBottomHeight(o),
            this.comp.setTopDisplay(r ? 'inherit' : 'none'),
            this.comp.setBottomDisplay(o ? 'inherit' : 'none'),
            this.setStickyTopOffsetTop();
        }),
        (t.prototype.setStickyTopHeight = function (e) {
          e === void 0 && (e = 0),
            this.comp.setStickyTopHeight(''.concat(e, 'px')),
            (this.stickyTopHeight = e);
        }),
        (t.prototype.getStickyTopHeight = function () {
          return this.stickyTopHeight;
        }),
        (t.prototype.setStickyTopWidth = function (e) {
          if (!e) this.comp.setStickyTopWidth('100%');
          else {
            var r = this.gridOptionsService.getScrollbarWidth();
            this.comp.setStickyTopWidth('calc(100% - '.concat(r, 'px)'));
          }
        }),
        (t.prototype.onHeaderHeightChanged = function () {
          this.setStickyTopOffsetTop();
        }),
        (t.prototype.setStickyTopOffsetTop = function () {
          var e = this.ctrlsService.getGridHeaderCtrl(),
            r = e.getHeaderHeight() + this.filterManager.getHeaderHeight(),
            o = this.pinnedRowModel.getPinnedTopTotalHeight(),
            i = 0;
          r > 0 && (i += r + 1),
            o > 0 && (i += o + 1),
            this.comp.setStickyTopTop(''.concat(i, 'px'));
        }),
        (t.prototype.sizeColumnsToFit = function (e, r) {
          var o = this,
            i = this.isVerticalScrollShowing(),
            s = i ? this.gridOptionsService.getScrollbarWidth() : 0,
            a = ir(this.eGridBody),
            l = a - s;
          if (l > 0) {
            this.columnModel.sizeColumnsToFit(l, 'sizeColumnsToFit', !1, e);
            return;
          }
          r === void 0
            ? window.setTimeout(function () {
                o.sizeColumnsToFit(e, 100);
              }, 0)
            : r === 100
            ? window.setTimeout(function () {
                o.sizeColumnsToFit(e, 500);
              }, 100)
            : r === 500
            ? window.setTimeout(function () {
                o.sizeColumnsToFit(e, -1);
              }, 500)
            : console.warn(
                'AG Grid: tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?'
              );
        }),
        (t.prototype.addScrollEventListener = function (e) {
          this.eBodyViewport.addEventListener('scroll', e, { passive: !0 });
        }),
        (t.prototype.removeScrollEventListener = function (e) {
          this.eBodyViewport.removeEventListener('scroll', e);
        }),
        Pe([v('animationFrameService')], t.prototype, 'animationFrameService', void 0),
        Pe([v('rowContainerHeightService')], t.prototype, 'rowContainerHeightService', void 0),
        Pe([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Pe([v('columnModel')], t.prototype, 'columnModel', void 0),
        Pe([v('scrollVisibleService')], t.prototype, 'scrollVisibleService', void 0),
        Pe([v('menuService')], t.prototype, 'menuService', void 0),
        Pe([v('headerNavigationService')], t.prototype, 'headerNavigationService', void 0),
        Pe([v('dragAndDropService')], t.prototype, 'dragAndDropService', void 0),
        Pe([v('pinnedRowModel')], t.prototype, 'pinnedRowModel', void 0),
        Pe([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        Pe([v('popupService')], t.prototype, 'popupService', void 0),
        Pe([v('mouseEventService')], t.prototype, 'mouseEventService', void 0),
        Pe([v('rowModel')], t.prototype, 'rowModel', void 0),
        Pe([v('filterManager')], t.prototype, 'filterManager', void 0),
        t
      );
    })(D),
    pi;
  (function (n) {
    (n[(n.FILL = 0)] = 'FILL'), (n[(n.RANGE = 1)] = 'RANGE');
  })(pi || (pi = {}));
  var Ir;
  (function (n) {
    (n[(n.VALUE = 0)] = 'VALUE'), (n[(n.DIMENSION = 1)] = 'DIMENSION');
  })(Ir || (Ir = {}));
  var uo = 'ag-cell-range-selected',
    Tf = 'ag-cell-range-chart',
    Pf = 'ag-cell-range-single-cell',
    Df = 'ag-cell-range-chart-category',
    Af = 'ag-cell-range-handle',
    bf = 'ag-cell-range-top',
    Ff = 'ag-cell-range-right',
    Lf = 'ag-cell-range-bottom',
    Mf = 'ag-cell-range-left',
    If = (function () {
      function n(t, e) {
        (this.beans = t), (this.cellCtrl = e);
      }
      return (
        (n.prototype.setComp = function (t, e) {
          (this.cellComp = t), (this.eGui = e), this.onRangeSelectionChanged();
        }),
        (n.prototype.onRangeSelectionChanged = function () {
          this.cellComp &&
            ((this.rangeCount = this.beans.rangeService.getCellRangeCount(
              this.cellCtrl.getCellPosition()
            )),
            (this.hasChartRange = this.getHasChartRange()),
            this.cellComp.addOrRemoveCssClass(uo, this.rangeCount !== 0),
            this.cellComp.addOrRemoveCssClass(''.concat(uo, '-1'), this.rangeCount === 1),
            this.cellComp.addOrRemoveCssClass(''.concat(uo, '-2'), this.rangeCount === 2),
            this.cellComp.addOrRemoveCssClass(''.concat(uo, '-3'), this.rangeCount === 3),
            this.cellComp.addOrRemoveCssClass(''.concat(uo, '-4'), this.rangeCount >= 4),
            this.cellComp.addOrRemoveCssClass(Tf, this.hasChartRange),
            Rr(this.eGui, this.rangeCount > 0 ? !0 : void 0),
            this.cellComp.addOrRemoveCssClass(Pf, this.isSingleCell()),
            this.updateRangeBorders(),
            this.refreshHandle());
        }),
        (n.prototype.updateRangeBorders = function () {
          var t = this.getRangeBorders(),
            e = this.isSingleCell(),
            r = !e && t.top,
            o = !e && t.right,
            i = !e && t.bottom,
            s = !e && t.left;
          this.cellComp.addOrRemoveCssClass(bf, r),
            this.cellComp.addOrRemoveCssClass(Ff, o),
            this.cellComp.addOrRemoveCssClass(Lf, i),
            this.cellComp.addOrRemoveCssClass(Mf, s);
        }),
        (n.prototype.isSingleCell = function () {
          var t = this.beans.rangeService;
          return this.rangeCount === 1 && t && !t.isMoreThanOneCell();
        }),
        (n.prototype.getHasChartRange = function () {
          var t = this.beans.rangeService;
          if (!this.rangeCount || !t) return !1;
          var e = t.getCellRanges();
          return (
            e.length > 0 &&
            e.every(function (r) {
              return ot([Ir.DIMENSION, Ir.VALUE], r.type);
            })
          );
        }),
        (n.prototype.updateRangeBordersIfRangeCount = function () {
          this.rangeCount > 0 && (this.updateRangeBorders(), this.refreshHandle());
        }),
        (n.prototype.getRangeBorders = function () {
          var t = this,
            e = this.beans.gridOptionsService.get('enableRtl'),
            r = !1,
            o = !1,
            i = !1,
            s = !1,
            a = this.cellCtrl.getCellPosition().column,
            l = this.beans,
            u = l.rangeService,
            c = l.columnModel,
            p,
            d;
          e
            ? ((p = c.getDisplayedColAfter(a)), (d = c.getDisplayedColBefore(a)))
            : ((p = c.getDisplayedColBefore(a)), (d = c.getDisplayedColAfter(a)));
          var h = u.getCellRanges().filter(function (w) {
            return u.isCellInSpecificRange(t.cellCtrl.getCellPosition(), w);
          });
          p || (s = !0), d || (o = !0);
          for (var f = 0; f < h.length && !(r && o && i && s); f++) {
            var y = h[f],
              m = u.getRangeStartRow(y),
              C = u.getRangeEndRow(y);
            !r &&
              this.beans.rowPositionUtils.sameRow(m, this.cellCtrl.getCellPosition()) &&
              (r = !0),
              !i &&
                this.beans.rowPositionUtils.sameRow(C, this.cellCtrl.getCellPosition()) &&
                (i = !0),
              !s && p && y.columns.indexOf(p) < 0 && (s = !0),
              !o && d && y.columns.indexOf(d) < 0 && (o = !0);
          }
          return { top: r, right: o, bottom: i, left: s };
        }),
        (n.prototype.refreshHandle = function () {
          if (!(!this.beans.rangeService || this.beans.context.isDestroyed())) {
            var t = this.shouldHaveSelectionHandle();
            this.selectionHandle &&
              !t &&
              (this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle)),
              t && this.addSelectionHandle(),
              this.cellComp.addOrRemoveCssClass(Af, !!this.selectionHandle);
          }
        }),
        (n.prototype.shouldHaveSelectionHandle = function () {
          var t = this.beans,
            e = t.gridOptionsService,
            r = t.rangeService,
            o = r.getCellRanges(),
            i = o.length;
          if (this.rangeCount < 1 || i < 1) return !1;
          var s = q(o),
            a = this.cellCtrl.getCellPosition(),
            l = e.get('enableFillHandle') && !this.cellCtrl.isSuppressFillHandle(),
            u = e.get('enableRangeHandle'),
            c = i === 1 && !this.cellCtrl.isEditing() && (l || u);
          if (this.hasChartRange) {
            var p = o[0].type === Ir.DIMENSION,
              d = p && r.isCellInSpecificRange(a, o[0]);
            this.cellComp.addOrRemoveCssClass(Df, d), (c = s.type === Ir.VALUE);
          }
          return c && s.endRow != null && r.isContiguousRange(s) && r.isBottomRightCell(s, a);
        }),
        (n.prototype.addSelectionHandle = function () {
          var t = this.beans,
            e = t.gridOptionsService,
            r = t.rangeService,
            o = q(r.getCellRanges()).type,
            i = e.get('enableFillHandle') && H(o),
            s = i ? pi.FILL : pi.RANGE;
          this.selectionHandle &&
            this.selectionHandle.getType() !== s &&
            (this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle)),
            this.selectionHandle ||
              (this.selectionHandle = this.beans.selectionHandleFactory.createSelectionHandle(s)),
            this.selectionHandle.refresh(this.cellCtrl);
        }),
        (n.prototype.destroy = function () {
          this.beans.context.destroyBean(this.selectionHandle);
        }),
        n
      );
    })(),
    xf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Nf = (function (n) {
      xf(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return (
          (o.cellCtrl = e),
          (o.beans = r),
          (o.column = e.getColumn()),
          (o.rowNode = e.getRowNode()),
          o.setupColSpan(),
          o.setupRowSpan(),
          o
        );
      }
      return (
        (t.prototype.setupRowSpan = function () {
          var e = this;
          (this.rowSpan = this.column.getRowSpan(this.rowNode)),
            this.addManagedListener(
              this.beans.eventService,
              g.EVENT_NEW_COLUMNS_LOADED,
              function () {
                return e.onNewColumnsLoaded();
              }
            );
        }),
        (t.prototype.setComp = function (e) {
          (this.eGui = e), this.onLeftChanged(), this.onWidthChanged(), this.applyRowSpan();
        }),
        (t.prototype.onNewColumnsLoaded = function () {
          var e = this.column.getRowSpan(this.rowNode);
          this.rowSpan !== e && ((this.rowSpan = e), this.applyRowSpan(!0));
        }),
        (t.prototype.onDisplayColumnsChanged = function () {
          var e = this.getColSpanningList();
          Tt(this.colsSpanning, e) ||
            ((this.colsSpanning = e), this.onWidthChanged(), this.onLeftChanged());
        }),
        (t.prototype.setupColSpan = function () {
          this.column.getColDef().colSpan != null &&
            ((this.colsSpanning = this.getColSpanningList()),
            this.addManagedListener(
              this.beans.eventService,
              g.EVENT_DISPLAYED_COLUMNS_CHANGED,
              this.onDisplayColumnsChanged.bind(this)
            ),
            this.addManagedListener(
              this.beans.eventService,
              g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
              this.onWidthChanged.bind(this)
            ));
        }),
        (t.prototype.onWidthChanged = function () {
          if (this.eGui) {
            var e = this.getCellWidth();
            this.eGui.style.width = ''.concat(e, 'px');
          }
        }),
        (t.prototype.getCellWidth = function () {
          return this.colsSpanning
            ? this.colsSpanning.reduce(function (e, r) {
                return e + r.getActualWidth();
              }, 0)
            : this.column.getActualWidth();
        }),
        (t.prototype.getColSpanningList = function () {
          var e = this.column.getColSpan(this.rowNode),
            r = [];
          if (e === 1) r.push(this.column);
          else
            for (
              var o = this.column, i = this.column.getPinned(), s = 0;
              o &&
              s < e &&
              (r.push(o),
              (o = this.beans.columnModel.getDisplayedColAfter(o)),
              !(!o || H(o) || i !== o.getPinned()));
              s++
            );
          return r;
        }),
        (t.prototype.onLeftChanged = function () {
          if (this.eGui) {
            var e = this.modifyLeftForPrintLayout(this.getCellLeft());
            this.eGui.style.left = e + 'px';
          }
        }),
        (t.prototype.getCellLeft = function () {
          var e;
          return (
            this.beans.gridOptionsService.get('enableRtl') && this.colsSpanning
              ? (e = q(this.colsSpanning))
              : (e = this.column),
            e.getLeft()
          );
        }),
        (t.prototype.modifyLeftForPrintLayout = function (e) {
          if (!this.cellCtrl.isPrintLayout() || this.column.getPinned() === 'left') return e;
          var r = this.beans.columnModel.getDisplayedColumnsLeftWidth();
          if (this.column.getPinned() === 'right') {
            var o = this.beans.columnModel.getBodyContainerWidth();
            return r + o + (e || 0);
          }
          return r + (e || 0);
        }),
        (t.prototype.applyRowSpan = function (e) {
          if (!(this.rowSpan === 1 && !e)) {
            var r = this.beans.gridOptionsService.getRowHeightAsNumber(),
              o = r * this.rowSpan;
            (this.eGui.style.height = ''.concat(o, 'px')), (this.eGui.style.zIndex = '1');
          }
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        t
      );
    })(D),
    Gf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Vf = (function (n) {
      Gf(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return (
          (o.staticClasses = []),
          (o.cellCtrl = e),
          (o.beans = r),
          (o.column = e.getColumn()),
          (o.rowNode = e.getRowNode()),
          o
        );
      }
      return (
        (t.prototype.setComp = function (e) {
          (this.cellComp = e),
            this.applyUserStyles(),
            this.applyCellClassRules(),
            this.applyClassesFromColDef();
        }),
        (t.prototype.applyCellClassRules = function () {
          var e = this,
            r = this.column.getColDef(),
            o = r.cellClassRules,
            i = this.beans.gridOptionsService.addGridCommonParams({
              value: this.cellCtrl.getValue(),
              data: this.rowNode.data,
              node: this.rowNode,
              colDef: r,
              column: this.column,
              rowIndex: this.rowNode.rowIndex,
            });
          this.beans.stylingService.processClassRules(
            o === this.cellClassRules ? void 0 : this.cellClassRules,
            o,
            i,
            function (s) {
              return e.cellComp.addOrRemoveCssClass(s, !0);
            },
            function (s) {
              return e.cellComp.addOrRemoveCssClass(s, !1);
            }
          ),
            (this.cellClassRules = o);
        }),
        (t.prototype.applyUserStyles = function () {
          var e = this.column.getColDef();
          if (e.cellStyle) {
            var r;
            if (typeof e.cellStyle == 'function') {
              var o = this.beans.gridOptionsService.addGridCommonParams({
                  column: this.column,
                  value: this.cellCtrl.getValue(),
                  colDef: e,
                  data: this.rowNode.data,
                  node: this.rowNode,
                  rowIndex: this.rowNode.rowIndex,
                }),
                i = e.cellStyle;
              r = i(o);
            } else r = e.cellStyle;
            r && this.cellComp.setUserStyles(r);
          }
        }),
        (t.prototype.applyClassesFromColDef = function () {
          var e = this,
            r = this.column.getColDef(),
            o = this.beans.gridOptionsService.addGridCommonParams({
              value: this.cellCtrl.getValue(),
              data: this.rowNode.data,
              node: this.rowNode,
              column: this.column,
              colDef: r,
              rowIndex: this.rowNode.rowIndex,
            });
          this.staticClasses.length &&
            this.staticClasses.forEach(function (i) {
              return e.cellComp.addOrRemoveCssClass(i, !1);
            }),
            (this.staticClasses = this.beans.stylingService.getStaticCellClasses(r, o)),
            this.staticClasses.length &&
              this.staticClasses.forEach(function (i) {
                return e.cellComp.addOrRemoveCssClass(i, !0);
              });
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        t
      );
    })(D),
    Hf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    di = (function (n) {
      Hf(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return (o.ctrl = e), (o.beans = r), o;
      }
      return (
        (t.prototype.setComp = function (e) {
          (this.eGui = e), this.setupTooltip();
        }),
        (t.prototype.setBrowserTooltip = function (e) {
          var r = 'title';
          e != null && e != '' ? this.eGui.setAttribute(r, e) : this.eGui.removeAttribute(r);
        }),
        (t.prototype.setupTooltip = function () {
          (this.browserTooltips = this.beans.gridOptionsService.get('enableBrowserTooltips')),
            this.updateTooltipText(),
            this.browserTooltips
              ? this.setBrowserTooltip(this.tooltip)
              : this.createTooltipFeatureIfNeeded();
        }),
        (t.prototype.updateTooltipText = function () {
          this.tooltip = this.ctrl.getTooltipValue();
        }),
        (t.prototype.createTooltipFeatureIfNeeded = function () {
          var e = this,
            r,
            o,
            i,
            s;
          if (this.genericTooltipFeature == null) {
            var a = {
              getTooltipParams: function () {
                return e.getTooltipParams();
              },
              getGui: function () {
                return e.ctrl.getGui();
              },
            };
            this.genericTooltipFeature = this.createManagedBean(
              new pl(
                a,
                (o = (r = this.ctrl).getTooltipShowDelayOverride) === null || o === void 0
                  ? void 0
                  : o.call(r),
                (s = (i = this.ctrl).getTooltipHideDelayOverride) === null || s === void 0
                  ? void 0
                  : s.call(i)
              ),
              this.beans.context
            );
          }
        }),
        (t.prototype.refreshToolTip = function () {
          this.updateTooltipText(), this.browserTooltips && this.setBrowserTooltip(this.tooltip);
        }),
        (t.prototype.getTooltipParams = function () {
          var e = this,
            r = this.ctrl,
            o = r.getColumn ? r.getColumn() : void 0,
            i = r.getColDef ? r.getColDef() : void 0,
            s = r.getRowNode ? r.getRowNode() : void 0;
          return {
            location: r.getLocation(),
            colDef: i,
            column: o,
            rowIndex: r.getRowIndex ? r.getRowIndex() : void 0,
            node: s,
            data: s ? s.data : void 0,
            value: this.getTooltipText(),
            valueFormatted: r.getValueFormatted ? r.getValueFormatted() : void 0,
            hideTooltipCallback: function () {
              return e.genericTooltipFeature.hideTooltip(!0);
            },
          };
        }),
        (t.prototype.getTooltipText = function () {
          return this.tooltip;
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        t
      );
    })(D),
    B = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    tu = (function () {
      function n() {}
      return (
        (n.prototype.postConstruct = function () {
          this.gridOptionsService.isRowModelType('clientSide') &&
            (this.clientSideRowModel = this.rowModel),
            this.gridOptionsService.isRowModelType('serverSide') &&
              (this.serverSideRowModel = this.rowModel);
        }),
        B([v('resizeObserverService')], n.prototype, 'resizeObserverService', void 0),
        B([v('paginationProxy')], n.prototype, 'paginationProxy', void 0),
        B([v('context')], n.prototype, 'context', void 0),
        B([v('columnApi')], n.prototype, 'columnApi', void 0),
        B([v('gridApi')], n.prototype, 'gridApi', void 0),
        B([v('gridOptionsService')], n.prototype, 'gridOptionsService', void 0),
        B([v('expressionService')], n.prototype, 'expressionService', void 0),
        B([v('environment')], n.prototype, 'environment', void 0),
        B([v('rowRenderer')], n.prototype, 'rowRenderer', void 0),
        B([v('templateService')], n.prototype, 'templateService', void 0),
        B([v('valueService')], n.prototype, 'valueService', void 0),
        B([v('eventService')], n.prototype, 'eventService', void 0),
        B([v('columnModel')], n.prototype, 'columnModel', void 0),
        B([v('headerNavigationService')], n.prototype, 'headerNavigationService', void 0),
        B([v('navigationService')], n.prototype, 'navigationService', void 0),
        B([v('columnAnimationService')], n.prototype, 'columnAnimationService', void 0),
        B([Y('rangeService')], n.prototype, 'rangeService', void 0),
        B([v('focusService')], n.prototype, 'focusService', void 0),
        B([v('popupService')], n.prototype, 'popupService', void 0),
        B([v('valueFormatterService')], n.prototype, 'valueFormatterService', void 0),
        B([v('stylingService')], n.prototype, 'stylingService', void 0),
        B([v('columnHoverService')], n.prototype, 'columnHoverService', void 0),
        B([v('userComponentFactory')], n.prototype, 'userComponentFactory', void 0),
        B([v('userComponentRegistry')], n.prototype, 'userComponentRegistry', void 0),
        B([v('animationFrameService')], n.prototype, 'animationFrameService', void 0),
        B([v('dragService')], n.prototype, 'dragService', void 0),
        B([v('dragAndDropService')], n.prototype, 'dragAndDropService', void 0),
        B([v('sortController')], n.prototype, 'sortController', void 0),
        B([v('filterManager')], n.prototype, 'filterManager', void 0),
        B([v('rowContainerHeightService')], n.prototype, 'rowContainerHeightService', void 0),
        B([v('frameworkOverrides')], n.prototype, 'frameworkOverrides', void 0),
        B([v('cellPositionUtils')], n.prototype, 'cellPositionUtils', void 0),
        B([v('rowPositionUtils')], n.prototype, 'rowPositionUtils', void 0),
        B([v('selectionService')], n.prototype, 'selectionService', void 0),
        B([Y('selectionHandleFactory')], n.prototype, 'selectionHandleFactory', void 0),
        B([v('rowCssClassCalculator')], n.prototype, 'rowCssClassCalculator', void 0),
        B([v('rowModel')], n.prototype, 'rowModel', void 0),
        B([v('ctrlsService')], n.prototype, 'ctrlsService', void 0),
        B([v('ctrlsFactory')], n.prototype, 'ctrlsFactory', void 0),
        B([v('agStackComponentsRegistry')], n.prototype, 'agStackComponentsRegistry', void 0),
        B([v('valueCache')], n.prototype, 'valueCache', void 0),
        B([v('rowNodeEventThrottle')], n.prototype, 'rowNodeEventThrottle', void 0),
        B([v('localeService')], n.prototype, 'localeService', void 0),
        B([v('valueParserService')], n.prototype, 'valueParserService', void 0),
        B([v('syncService')], n.prototype, 'syncService', void 0),
        B([v('ariaAnnouncementService')], n.prototype, 'ariaAnnouncementService', void 0),
        B([F], n.prototype, 'postConstruct', null),
        (n = B([x('beans')], n)),
        n
      );
    })(),
    Bf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    kf = (function (n) {
      Bf(t, n);
      function t(e, r, o) {
        var i = n.call(this) || this;
        return (i.cellCtrl = e), (i.beans = r), (i.column = o), i;
      }
      return (
        (t.prototype.onMouseEvent = function (e, r) {
          if (!nt(r))
            switch (e) {
              case 'click':
                this.onCellClicked(r);
                break;
              case 'mousedown':
              case 'touchstart':
                this.onMouseDown(r);
                break;
              case 'dblclick':
                this.onCellDoubleClicked(r);
                break;
              case 'mouseout':
                this.onMouseOut(r);
                break;
              case 'mouseover':
                this.onMouseOver(r);
                break;
            }
        }),
        (t.prototype.onCellClicked = function (e) {
          var r = this;
          if (this.isDoubleClickOnIPad()) {
            this.onCellDoubleClicked(e), e.preventDefault();
            return;
          }
          var o = this.beans,
            i = o.eventService,
            s = o.rangeService,
            a = o.gridOptionsService,
            l = e.ctrlKey || e.metaKey;
          s &&
            l &&
            s.getCellRangeCount(this.cellCtrl.getCellPosition()) > 1 &&
            s.intersectLastRange(!0);
          var u = this.cellCtrl.createEvent(e, g.EVENT_CELL_CLICKED);
          i.dispatchEvent(u);
          var c = this.column.getColDef();
          c.onCellClicked &&
            window.setTimeout(function () {
              r.beans.frameworkOverrides.wrapOutgoing(function () {
                c.onCellClicked(u);
              });
            }, 0);
          var p = (a.get('singleClickEdit') || c.singleClickEdit) && !a.get('suppressClickEdit');
          p &&
            !(e.shiftKey && (s == null ? void 0 : s.getCellRanges().length) != 0) &&
            this.cellCtrl.startRowOrCellEdit();
        }),
        (t.prototype.isDoubleClickOnIPad = function () {
          if (!Dt() || an('dblclick')) return !1;
          var e = new Date().getTime(),
            r = e - this.lastIPadMouseClickEvent < 200;
          return (this.lastIPadMouseClickEvent = e), r;
        }),
        (t.prototype.onCellDoubleClicked = function (e) {
          var r = this,
            o = this.column.getColDef(),
            i = this.cellCtrl.createEvent(e, g.EVENT_CELL_DOUBLE_CLICKED);
          this.beans.eventService.dispatchEvent(i),
            typeof o.onCellDoubleClicked == 'function' &&
              window.setTimeout(function () {
                r.beans.frameworkOverrides.wrapOutgoing(function () {
                  o.onCellDoubleClicked(i);
                });
              }, 0);
          var s =
            !this.beans.gridOptionsService.get('singleClickEdit') &&
            !this.beans.gridOptionsService.get('suppressClickEdit');
          s && this.cellCtrl.startRowOrCellEdit(null, e);
        }),
        (t.prototype.onMouseDown = function (e) {
          var r = e.ctrlKey,
            o = e.metaKey,
            i = e.shiftKey,
            s = e.target,
            a = this,
            l = a.cellCtrl,
            u = a.beans,
            c = u.eventService,
            p = u.rangeService,
            d = u.focusService;
          if (!this.isRightClickInExistingRange(e)) {
            var h = p && p.getCellRanges().length != 0;
            if (!i || !h) {
              var f = ht() && !l.isEditing() && !Vn(s);
              l.focusCell(f);
            }
            if (i && h && !d.isCellFocused(l.getCellPosition())) {
              e.preventDefault();
              var y = d.getFocusedCell();
              if (y) {
                var m = y.column,
                  C = y.rowIndex,
                  w = y.rowPinned,
                  E = u.rowRenderer.getRowByPosition({ rowIndex: C, rowPinned: w }),
                  S = E == null ? void 0 : E.getCellCtrl(m);
                S != null && S.isEditing() && S.stopEditing(),
                  d.setFocusedCell({
                    column: m,
                    rowIndex: C,
                    rowPinned: w,
                    forceBrowserFocus: !0,
                    preventScrollOnBrowserFocus: !0,
                  });
              }
            }
            if (!this.containsWidget(s)) {
              if (p) {
                var R = this.cellCtrl.getCellPosition();
                if (i) p.extendLatestRangeToCell(R);
                else {
                  var O = r || o;
                  p.setRangeToCell(R, O);
                }
              }
              c.dispatchEvent(this.cellCtrl.createEvent(e, g.EVENT_CELL_MOUSE_DOWN));
            }
          }
        }),
        (t.prototype.isRightClickInExistingRange = function (e) {
          var r = this.beans.rangeService;
          if (r) {
            var o = r.isCellInAnyRange(this.cellCtrl.getCellPosition()),
              i =
                e.button === 2 ||
                (e.ctrlKey && this.beans.gridOptionsService.get('allowContextMenuWithControlKey'));
            if (o && i) return !0;
          }
          return !1;
        }),
        (t.prototype.containsWidget = function (e) {
          return or(e, 'ag-selection-checkbox', 3);
        }),
        (t.prototype.onMouseOut = function (e) {
          if (!this.mouseStayingInsideCell(e)) {
            var r = this.cellCtrl.createEvent(e, g.EVENT_CELL_MOUSE_OUT);
            this.beans.eventService.dispatchEvent(r),
              this.beans.columnHoverService.clearMouseOver();
          }
        }),
        (t.prototype.onMouseOver = function (e) {
          if (!this.mouseStayingInsideCell(e)) {
            var r = this.cellCtrl.createEvent(e, g.EVENT_CELL_MOUSE_OVER);
            this.beans.eventService.dispatchEvent(r),
              this.beans.columnHoverService.setMouseOver([this.column]);
          }
        }),
        (t.prototype.mouseStayingInsideCell = function (e) {
          if (!e.target || !e.relatedTarget) return !1;
          var r = this.cellCtrl.getGui(),
            o = r.contains(e.target),
            i = r.contains(e.relatedTarget);
          return o && i;
        }),
        (t.prototype.destroy = function () {}),
        t
      );
    })(tu),
    Wf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    jf = (function (n) {
      Wf(t, n);
      function t(e, r, o, i, s) {
        var a = n.call(this) || this;
        return (a.cellCtrl = e), (a.beans = r), (a.rowNode = i), (a.rowCtrl = s), a;
      }
      return (
        (t.prototype.setComp = function (e) {
          this.eGui = e;
        }),
        (t.prototype.onKeyDown = function (e) {
          var r = e.key;
          switch (r) {
            case _.ENTER:
              this.onEnterKeyDown(e);
              break;
            case _.F2:
              this.onF2KeyDown(e);
              break;
            case _.ESCAPE:
              this.onEscapeKeyDown(e);
              break;
            case _.TAB:
              this.onTabKeyDown(e);
              break;
            case _.BACKSPACE:
            case _.DELETE:
              this.onBackspaceOrDeleteKeyDown(r, e);
              break;
            case _.DOWN:
            case _.UP:
            case _.RIGHT:
            case _.LEFT:
              this.onNavigationKeyDown(e, r);
              break;
          }
        }),
        (t.prototype.onNavigationKeyDown = function (e, r) {
          this.cellCtrl.isEditing() ||
            (e.shiftKey && this.cellCtrl.isRangeSelectionEnabled()
              ? this.onShiftRangeSelect(e)
              : this.beans.navigationService.navigateToNextCell(
                  e,
                  r,
                  this.cellCtrl.getCellPosition(),
                  !0
                ),
            e.preventDefault());
        }),
        (t.prototype.onShiftRangeSelect = function (e) {
          if (this.beans.rangeService) {
            var r = this.beans.rangeService.extendLatestRangeInDirection(e);
            r && this.beans.navigationService.ensureCellVisible(r);
          }
        }),
        (t.prototype.onTabKeyDown = function (e) {
          this.beans.navigationService.onTabKeyDown(this.cellCtrl, e);
        }),
        (t.prototype.onBackspaceOrDeleteKeyDown = function (e, r) {
          var o = this,
            i = o.cellCtrl,
            s = o.beans,
            a = o.rowNode,
            l = s.gridOptionsService,
            u = s.rangeService,
            c = s.eventService;
          i.isEditing() ||
            (c.dispatchEvent({ type: g.EVENT_KEY_SHORTCUT_CHANGED_CELL_START }),
            cl(e, l.get('enableCellEditingOnBackspace'))
              ? u && l.get('enableRangeSelection')
                ? u.clearCellRangeCellValues({
                    dispatchWrapperEvents: !0,
                    wrapperEventSource: 'deleteKey',
                  })
                : i.isCellEditable() && a.setDataValue(i.getColumn(), null, 'cellClear')
              : i.startRowOrCellEdit(e, r),
            c.dispatchEvent({ type: g.EVENT_KEY_SHORTCUT_CHANGED_CELL_END }));
        }),
        (t.prototype.onEnterKeyDown = function (e) {
          if (this.cellCtrl.isEditing() || this.rowCtrl.isEditing())
            this.cellCtrl.stopEditingAndFocus(!1, e.shiftKey);
          else if (this.beans.gridOptionsService.get('enterNavigatesVertically')) {
            var r = e.shiftKey ? _.UP : _.DOWN;
            this.beans.navigationService.navigateToNextCell(
              null,
              r,
              this.cellCtrl.getCellPosition(),
              !1
            );
          } else
            this.cellCtrl.startRowOrCellEdit(_.ENTER, e),
              this.cellCtrl.isEditing() && e.preventDefault();
        }),
        (t.prototype.onF2KeyDown = function (e) {
          this.cellCtrl.isEditing() || this.cellCtrl.startRowOrCellEdit(_.F2, e);
        }),
        (t.prototype.onEscapeKeyDown = function (e) {
          this.cellCtrl.isEditing() &&
            (this.cellCtrl.stopRowOrCellEdit(!0), this.cellCtrl.focusCell(!0));
        }),
        (t.prototype.processCharacter = function (e) {
          var r = e.target,
            o = r !== this.eGui;
          if (!(o || this.cellCtrl.isEditing())) {
            var i = e.key;
            i === ' '
              ? this.onSpaceKeyDown(e)
              : (this.cellCtrl.startRowOrCellEdit(i, e), e.preventDefault());
          }
        }),
        (t.prototype.onSpaceKeyDown = function (e) {
          var r = this.beans.gridOptionsService;
          if (!this.cellCtrl.isEditing() && r.isRowSelection()) {
            var o = this.rowNode.isSelected(),
              i = !o;
            if (i || !r.get('suppressRowDeselection')) {
              var s = this.beans.gridOptionsService.get('groupSelectsFiltered'),
                a = this.rowNode.setSelectedParams({
                  newValue: i,
                  rangeSelect: e.shiftKey,
                  groupSelectsFiltered: s,
                  event: e,
                  source: 'spaceKey',
                });
              o === void 0 &&
                a === 0 &&
                this.rowNode.setSelectedParams({
                  newValue: !1,
                  rangeSelect: e.shiftKey,
                  groupSelectsFiltered: s,
                  event: e,
                  source: 'spaceKey',
                });
            }
          }
          e.preventDefault();
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        t
      );
    })(D),
    Uf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    zf = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Kf = (function (n) {
      Uf(t, n);
      function t(e, r, o) {
        var i =
          n.call(this, '<div class="ag-drag-handle ag-row-drag" draggable="true"></div>') || this;
        return (i.rowNode = e), (i.column = r), (i.eCell = o), i;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this.getGui();
          e.appendChild(ne('rowDrag', this.gridOptionsService, null)),
            this.addGuiEventListener('mousedown', function (r) {
              r.stopPropagation();
            }),
            this.addDragSource(),
            this.checkVisibility();
        }),
        (t.prototype.addDragSource = function () {
          this.addGuiEventListener('dragstart', this.onDragStart.bind(this));
        }),
        (t.prototype.onDragStart = function (e) {
          var r = this,
            o = this.column.getColDef().dndSourceOnRowDrag;
          e.dataTransfer.setDragImage(this.eCell, 0, 0);
          var i = function () {
            try {
              var a = JSON.stringify(r.rowNode.data);
              e.dataTransfer.setData('application/json', a),
                e.dataTransfer.setData('text/plain', a);
            } catch {}
          };
          if (o) {
            var s = this.gridOptionsService.addGridCommonParams({
              rowNode: this.rowNode,
              dragEvent: e,
            });
            o(s);
          } else i();
        }),
        (t.prototype.checkVisibility = function () {
          var e = this.column.isDndSource(this.rowNode);
          this.setDisplayed(e);
        }),
        zf([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    $f = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Yf = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    qf = 'ag-column-first',
    Qf = 'ag-column-last',
    hi = (function () {
      function n() {}
      return (
        (n.getHeaderClassesFromColDef = function (t, e, r, o) {
          return H(t) ? [] : this.getColumnClassesFromCollDef(t.headerClass, t, e, r, o);
        }),
        (n.getToolPanelClassesFromColDef = function (t, e, r, o) {
          return H(t) ? [] : this.getColumnClassesFromCollDef(t.toolPanelClass, t, e, r, o);
        }),
        (n.refreshFirstAndLastStyles = function (t, e, r) {
          t.addOrRemoveCssClass(qf, r.isColumnAtEdge(e, 'first')),
            t.addOrRemoveCssClass(Qf, r.isColumnAtEdge(e, 'last'));
        }),
        (n.getClassParams = function (t, e, r, o) {
          return e.addGridCommonParams({ colDef: t, column: r, columnGroup: o });
        }),
        (n.getColumnClassesFromCollDef = function (t, e, r, o, i) {
          if (H(t)) return [];
          var s;
          if (typeof t == 'function') {
            var a = this.getClassParams(e, r, o, i);
            s = t(a);
          } else s = t;
          return typeof s == 'string' ? [s] : Array.isArray(s) ? Yf([], $f(s), !1) : [];
        }),
        n
      );
    })(),
    Xf = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    fi = function () {
      return (
        (fi =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        fi.apply(this, arguments)
      );
    },
    Jf = 'ag-cell',
    Zf = 'ag-cell-auto-height',
    ev = 'ag-cell-normal-height',
    tv = 'ag-cell-focus',
    rv = 'ag-cell-first-right-pinned',
    ov = 'ag-cell-last-left-pinned',
    iv = 'ag-cell-not-inline-editing',
    nv = 'ag-column-hover',
    sv = 'ag-cell-wrap-text',
    av = 0,
    hr = (function (n) {
      Xf(t, n);
      function t(e, r, o, i) {
        var s = n.call(this) || this;
        return (
          (s.cellRangeFeature = null),
          (s.cellPositionFeature = null),
          (s.cellCustomStyleFeature = null),
          (s.tooltipFeature = null),
          (s.cellMouseListenerFeature = null),
          (s.cellKeyboardListenerFeature = null),
          (s.suppressRefreshCell = !1),
          (s.onCellCompAttachedFuncs = []),
          (s.column = e),
          (s.rowNode = r),
          (s.beans = o),
          (s.rowCtrl = i),
          (s.instanceId = e.getId() + '-' + av++),
          (s.colIdSanitised = ae(s.column.getId())),
          o.gridOptionsService.get('suppressCellFocus') || (s.tabIndex = -1),
          s.createCellPosition(),
          s.addFeatures(),
          s.updateAndFormatValue(!1),
          s
        );
      }
      return (
        (t.prototype.shouldRestoreFocus = function () {
          return this.beans.focusService.shouldRestoreFocus(this.cellPosition);
        }),
        (t.prototype.addFeatures = function () {
          var e = this;
          (this.cellPositionFeature = new Nf(this, this.beans)),
            this.addDestroyFunc(function () {
              var o;
              (o = e.cellPositionFeature) === null || o === void 0 || o.destroy(),
                (e.cellPositionFeature = null);
            }),
            (this.cellCustomStyleFeature = new Vf(this, this.beans)),
            this.addDestroyFunc(function () {
              var o;
              (o = e.cellCustomStyleFeature) === null || o === void 0 || o.destroy(),
                (e.cellCustomStyleFeature = null);
            }),
            (this.cellMouseListenerFeature = new kf(this, this.beans, this.column)),
            this.addDestroyFunc(function () {
              var o;
              (o = e.cellMouseListenerFeature) === null || o === void 0 || o.destroy(),
                (e.cellMouseListenerFeature = null);
            }),
            (this.cellKeyboardListenerFeature = new jf(
              this,
              this.beans,
              this.column,
              this.rowNode,
              this.rowCtrl
            )),
            this.addDestroyFunc(function () {
              var o;
              (o = e.cellKeyboardListenerFeature) === null || o === void 0 || o.destroy(),
                (e.cellKeyboardListenerFeature = null);
            }),
            this.column.isTooltipEnabled() &&
              (this.enableTooltipFeature(),
              this.addDestroyFunc(function () {
                e.disableTooltipFeature();
              }));
          var r =
            this.beans.rangeService && this.beans.gridOptionsService.get('enableRangeSelection');
          r &&
            ((this.cellRangeFeature = new If(this.beans, this)),
            this.addDestroyFunc(function () {
              var o;
              (o = e.cellRangeFeature) === null || o === void 0 || o.destroy(),
                (e.cellRangeFeature = null);
            }));
        }),
        (t.prototype.enableTooltipFeature = function () {
          var e = this,
            r = function () {
              var i = e.column.getColDef(),
                s = e.rowNode.data;
              if (i.tooltipField && P(s))
                return wr(s, i.tooltipField, e.column.isTooltipFieldContainsDots());
              var a = i.tooltipValueGetter;
              return a
                ? a(
                    e.beans.gridOptionsService.addGridCommonParams({
                      location: 'cell',
                      colDef: e.column.getColDef(),
                      column: e.column,
                      rowIndex: e.cellPosition.rowIndex,
                      node: e.rowNode,
                      data: e.rowNode.data,
                      value: e.value,
                      valueFormatted: e.valueFormatted,
                    })
                  )
                : null;
            },
            o = {
              getColumn: function () {
                return e.column;
              },
              getColDef: function () {
                return e.column.getColDef();
              },
              getRowIndex: function () {
                return e.cellPosition.rowIndex;
              },
              getRowNode: function () {
                return e.rowNode;
              },
              getGui: function () {
                return e.getGui();
              },
              getLocation: function () {
                return 'cell';
              },
              getTooltipValue: r,
              getValueFormatted: function () {
                return e.valueFormatted;
              },
            };
          this.tooltipFeature = new di(o, this.beans);
        }),
        (t.prototype.disableTooltipFeature = function () {
          this.tooltipFeature && (this.tooltipFeature.destroy(), (this.tooltipFeature = null));
        }),
        (t.prototype.setComp = function (e, r, o, i, s) {
          var a, l, u, c;
          (this.cellComp = e),
            (this.eGui = r),
            (this.printLayout = i),
            this.addDomData(),
            this.onCellFocused(this.focusEventToRestore),
            this.applyStaticCssClasses(),
            this.setWrapText(),
            this.onFirstRightPinnedChanged(),
            this.onLastLeftPinnedChanged(),
            this.onColumnHover(),
            this.setupControlComps(),
            this.setupAutoHeight(o),
            this.refreshFirstAndLastStyles(),
            this.refreshAriaColIndex(),
            (a = this.cellPositionFeature) === null || a === void 0 || a.setComp(r),
            (l = this.cellCustomStyleFeature) === null || l === void 0 || l.setComp(e),
            (u = this.tooltipFeature) === null || u === void 0 || u.setComp(r),
            (c = this.cellKeyboardListenerFeature) === null || c === void 0 || c.setComp(this.eGui),
            this.cellRangeFeature && this.cellRangeFeature.setComp(e, r),
            s && this.isCellEditable() ? this.startEditing() : this.showValue(),
            this.onCellCompAttachedFuncs.length &&
              (this.onCellCompAttachedFuncs.forEach(function (p) {
                return p();
              }),
              (this.onCellCompAttachedFuncs = []));
        }),
        (t.prototype.setupAutoHeight = function (e) {
          var r = this;
          if (((this.isAutoHeight = this.column.isAutoHeight()), !(!this.isAutoHeight || !e))) {
            var o = e.parentElement,
              i = this.beans.gridOptionsService.getRowHeightForNode(this.rowNode).height,
              s = function (u) {
                if (!r.editing && r.isAlive()) {
                  var c = Bt(o),
                    p = c.paddingTop,
                    d = c.paddingBottom,
                    h = c.borderBottomWidth,
                    f = c.borderTopWidth,
                    y = p + d + h + f,
                    m = e.offsetHeight,
                    C = m + y;
                  if (u < 5) {
                    var w = r.beans.gridOptionsService.getDocument(),
                      E = !w || !w.contains(e),
                      S = C == 0;
                    if (E || S) {
                      window.setTimeout(function () {
                        return s(u + 1);
                      }, 0);
                      return;
                    }
                  }
                  var R = Math.max(C, i);
                  r.rowNode.setRowAutoHeight(R, r.column);
                }
              },
              a = function () {
                return s(0);
              };
            a();
            var l = this.beans.resizeObserverService.observeResize(e, a);
            this.addDestroyFunc(function () {
              l(), r.rowNode.setRowAutoHeight(void 0, r.column);
            });
          }
        }),
        (t.prototype.getCellAriaRole = function () {
          var e;
          return (e = this.column.getColDef().cellAriaRole) !== null && e !== void 0
            ? e
            : 'gridcell';
        }),
        (t.prototype.getInstanceId = function () {
          return this.instanceId;
        }),
        (t.prototype.getIncludeSelection = function () {
          return this.includeSelection;
        }),
        (t.prototype.getIncludeRowDrag = function () {
          return this.includeRowDrag;
        }),
        (t.prototype.getIncludeDndSource = function () {
          return this.includeDndSource;
        }),
        (t.prototype.getColumnIdSanitised = function () {
          return this.colIdSanitised;
        }),
        (t.prototype.getTabIndex = function () {
          return this.tabIndex;
        }),
        (t.prototype.isCellRenderer = function () {
          var e = this.column.getColDef();
          return e.cellRenderer != null || e.cellRendererSelector != null;
        }),
        (t.prototype.getValueToDisplay = function () {
          return this.valueFormatted != null ? this.valueFormatted : this.value;
        }),
        (t.prototype.showValue = function (e) {
          e === void 0 && (e = !1);
          var r = this.getValueToDisplay(),
            o;
          if (this.isCellRenderer()) {
            var i = this.createCellRendererParams();
            o = this.beans.userComponentFactory.getCellRendererDetails(this.column.getColDef(), i);
          }
          this.cellComp.setRenderDetails(o, r, e), this.refreshHandle();
        }),
        (t.prototype.setupControlComps = function () {
          var e = this.column.getColDef();
          (this.includeSelection = this.isIncludeControl(e.checkboxSelection)),
            (this.includeRowDrag = this.isIncludeControl(e.rowDrag)),
            (this.includeDndSource = this.isIncludeControl(e.dndSource)),
            this.cellComp.setIncludeSelection(this.includeSelection),
            this.cellComp.setIncludeDndSource(this.includeDndSource),
            this.cellComp.setIncludeRowDrag(this.includeRowDrag);
        }),
        (t.prototype.isForceWrapper = function () {
          var e =
            this.beans.gridOptionsService.get('enableCellTextSelection') ||
            this.column.isAutoHeight();
          return e;
        }),
        (t.prototype.isIncludeControl = function (e) {
          var r = this.rowNode.rowPinned != null,
            o = typeof e == 'function',
            i = r ? !1 : o || e === !0;
          return i;
        }),
        (t.prototype.refreshShouldDestroy = function () {
          var e = this.column.getColDef(),
            r = this.includeSelection != this.isIncludeControl(e.checkboxSelection),
            o = this.includeRowDrag != this.isIncludeControl(e.rowDrag),
            i = this.includeDndSource != this.isIncludeControl(e.dndSource);
          return r || o || i;
        }),
        (t.prototype.startEditing = function (e, r, o) {
          var i = this;
          if (
            (e === void 0 && (e = null),
            r === void 0 && (r = !1),
            o === void 0 && (o = null),
            !(!this.isCellEditable() || this.editing))
          ) {
            if (!this.cellComp) {
              this.onCellCompAttachedFuncs.push(function () {
                i.startEditing(e, r, o);
              });
              return;
            }
            var s = this.createCellEditorParams(e, r),
              a = this.column.getColDef(),
              l = this.beans.userComponentFactory.getCellEditorDetails(a, s);
            this.editCompDetails = l;
            var u =
                (l == null ? void 0 : l.popupFromSelector) != null
                  ? l.popupFromSelector
                  : !!a.cellEditorPopup,
              c =
                (l == null ? void 0 : l.popupPositionFromSelector) != null
                  ? l.popupPositionFromSelector
                  : a.cellEditorPopupPosition;
            this.setEditing(!0),
              this.cellComp.setEditDetails(
                l,
                u,
                c,
                this.beans.gridOptionsService.get('reactiveCustomComponents')
              );
            var p = this.createEvent(o, g.EVENT_CELL_EDITING_STARTED);
            this.beans.eventService.dispatchEvent(p);
          }
        }),
        (t.prototype.setEditing = function (e) {
          this.editing !== e && ((this.editing = e), this.refreshHandle());
        }),
        (t.prototype.stopRowOrCellEdit = function (e) {
          e === void 0 && (e = !1),
            this.beans.gridOptionsService.get('editType') === 'fullRow'
              ? this.rowCtrl.stopEditing(e)
              : this.stopEditing(e);
        }),
        (t.prototype.onPopupEditorClosed = function () {
          this.isEditing() && this.stopEditingAndFocus();
        }),
        (t.prototype.takeValueFromCellEditor = function (e) {
          var r = { newValueExists: !1 };
          if (e) return r;
          var o = this.cellComp.getCellEditor();
          if (!o) return r;
          var i = o.isCancelAfterEnd && o.isCancelAfterEnd();
          if (i) return r;
          var s = o.getValue();
          return { newValue: s, newValueExists: !0 };
        }),
        (t.prototype.saveNewValue = function (e, r) {
          if (r === e) return !1;
          this.suppressRefreshCell = !0;
          var o = this.rowNode.setDataValue(this.column, r, 'edit');
          return (this.suppressRefreshCell = !1), o;
        }),
        (t.prototype.stopEditing = function (e) {
          if ((e === void 0 && (e = !1), !this.editing)) return !1;
          var r = this.takeValueFromCellEditor(e),
            o = r.newValue,
            i = r.newValueExists,
            s = this.rowNode.getValueFromValueService(this.column),
            a = !1;
          return (
            i && (a = this.saveNewValue(s, o)),
            this.setEditing(!1),
            this.cellComp.setEditDetails(),
            (this.editCompDetails = void 0),
            this.updateAndFormatValue(!1),
            this.refreshCell({ forceRefresh: !0, suppressFlash: !0 }),
            this.dispatchEditingStoppedEvent(s, o, !e && !!a),
            a
          );
        }),
        (t.prototype.dispatchEditingStoppedEvent = function (e, r, o) {
          var i = fi(fi({}, this.createEvent(null, g.EVENT_CELL_EDITING_STOPPED)), {
            oldValue: e,
            newValue: r,
            valueChanged: o,
          });
          this.beans.eventService.dispatchEvent(i);
        }),
        (t.prototype.createCellEditorParams = function (e, r) {
          return this.beans.gridOptionsService.addGridCommonParams({
            value: this.rowNode.getValueFromValueService(this.column),
            eventKey: e,
            column: this.column,
            colDef: this.column.getColDef(),
            rowIndex: this.getCellPosition().rowIndex,
            node: this.rowNode,
            data: this.rowNode.data,
            cellStartedEdit: r,
            onKeyDown: this.onKeyDown.bind(this),
            stopEditing: this.stopEditingAndFocus.bind(this),
            eGridCell: this.getGui(),
            parseValue: this.parseValue.bind(this),
            formatValue: this.formatValue.bind(this),
          });
        }),
        (t.prototype.createCellRendererParams = function () {
          var e = this,
            r = this.beans.gridOptionsService.addGridCommonParams({
              value: this.value,
              valueFormatted: this.valueFormatted,
              getValue: function () {
                return e.rowNode.getValueFromValueService(e.column);
              },
              setValue: function (o) {
                return e.beans.valueService.setValue(e.rowNode, e.column, o);
              },
              formatValue: this.formatValue.bind(this),
              data: this.rowNode.data,
              node: this.rowNode,
              pinned: this.column.getPinned(),
              colDef: this.column.getColDef(),
              column: this.column,
              rowIndex: this.getCellPosition().rowIndex,
              refreshCell: this.refreshCell.bind(this),
              eGridCell: this.getGui(),
              eParentOfValue: this.cellComp.getParentOfValue(),
              registerRowDragger: function (o, i, s, a) {
                return e.registerRowDragger(o, i, a);
              },
            });
          return r;
        }),
        (t.prototype.parseValue = function (e) {
          return this.beans.valueParserService.parseValue(
            this.column,
            this.rowNode,
            e,
            this.getValue()
          );
        }),
        (t.prototype.setFocusOutOnEditor = function () {
          if (this.editing) {
            var e = this.cellComp.getCellEditor();
            e && e.focusOut && e.focusOut();
          }
        }),
        (t.prototype.setFocusInOnEditor = function () {
          if (this.editing) {
            var e = this.cellComp.getCellEditor();
            e && e.focusIn ? e.focusIn() : this.focusCell(!0);
          }
        }),
        (t.prototype.onCellChanged = function (e) {
          var r = e.column === this.column;
          r && this.refreshCell({});
        }),
        (t.prototype.refreshOrDestroyCell = function (e) {
          var r;
          this.refreshShouldDestroy()
            ? (r = this.rowCtrl) === null || r === void 0 || r.refreshCell(this)
            : this.refreshCell(e);
        }),
        (t.prototype.refreshCell = function (e) {
          var r, o, i;
          if (!(this.suppressRefreshCell || this.editing)) {
            var s = this.column.getColDef(),
              a = e != null && !!e.newData,
              l = (e != null && !!e.suppressFlash) || !!s.suppressCellFlash,
              u = s.field == null && s.valueGetter == null && s.showRowGroup == null,
              c = (e && e.forceRefresh) || u || a,
              p = !!this.cellComp,
              d = this.updateAndFormatValue(p),
              h = c || d;
            if (p) {
              if (h) {
                this.showValue(a);
                var f = this.beans.filterManager.isSuppressFlashingCellsBecauseFiltering(),
                  y =
                    !l &&
                    !f &&
                    (this.beans.gridOptionsService.get('enableCellChangeFlash') ||
                      s.enableCellChangeFlash);
                y && this.flashCell(),
                  (r = this.cellCustomStyleFeature) === null || r === void 0 || r.applyUserStyles(),
                  (o = this.cellCustomStyleFeature) === null ||
                    o === void 0 ||
                    o.applyClassesFromColDef();
              }
              this.refreshToolTip(),
                (i = this.cellCustomStyleFeature) === null ||
                  i === void 0 ||
                  i.applyCellClassRules();
            }
          }
        }),
        (t.prototype.stopEditingAndFocus = function (e, r) {
          e === void 0 && (e = !1),
            r === void 0 && (r = !1),
            this.stopRowOrCellEdit(),
            this.focusCell(!0),
            e || this.navigateAfterEdit(r);
        }),
        (t.prototype.navigateAfterEdit = function (e) {
          var r = this.beans.gridOptionsService.get('enterNavigatesVerticallyAfterEdit');
          if (r) {
            var o = e ? _.UP : _.DOWN;
            this.beans.navigationService.navigateToNextCell(null, o, this.getCellPosition(), !1);
          }
        }),
        (t.prototype.flashCell = function (e) {
          var r,
            o,
            i =
              (r = e == null ? void 0 : e.flashDuration) !== null && r !== void 0
                ? r
                : e == null
                ? void 0
                : e.flashDelay,
            s =
              (o = e == null ? void 0 : e.fadeDuration) !== null && o !== void 0
                ? o
                : e == null
                ? void 0
                : e.fadeDelay;
          this.animateCell('data-changed', i, s);
        }),
        (t.prototype.animateCell = function (e, r, o) {
          var i = this;
          if (this.cellComp) {
            var s = 'ag-cell-'.concat(e),
              a = 'ag-cell-'.concat(e, '-animation'),
              l = this.beans.gridOptionsService;
            r || (r = l.get('cellFlashDuration')),
              P(o) || (o = l.get('cellFadeDuration')),
              this.cellComp.addOrRemoveCssClass(s, !0),
              this.cellComp.addOrRemoveCssClass(a, !1),
              this.beans.frameworkOverrides.wrapIncoming(function () {
                window.setTimeout(function () {
                  i.isAlive() &&
                    (i.cellComp.addOrRemoveCssClass(s, !1),
                    i.cellComp.addOrRemoveCssClass(a, !0),
                    (i.eGui.style.transition = 'background-color '.concat(o, 'ms')),
                    window.setTimeout(function () {
                      i.isAlive() &&
                        (i.cellComp.addOrRemoveCssClass(a, !1), (i.eGui.style.transition = ''));
                    }, o));
                }, r);
              });
          }
        }),
        (t.prototype.onFlashCells = function (e) {
          if (this.cellComp) {
            var r = this.beans.cellPositionUtils.createId(this.getCellPosition()),
              o = e.cells[r];
            o && this.animateCell('highlight');
          }
        }),
        (t.prototype.isCellEditable = function () {
          return this.column.isCellEditable(this.rowNode);
        }),
        (t.prototype.isSuppressFillHandle = function () {
          return this.column.isSuppressFillHandle();
        }),
        (t.prototype.formatValue = function (e) {
          var r;
          return (r = this.callValueFormatter(e)) !== null && r !== void 0 ? r : e;
        }),
        (t.prototype.callValueFormatter = function (e) {
          return this.beans.valueFormatterService.formatValue(this.column, this.rowNode, e);
        }),
        (t.prototype.updateAndFormatValue = function (e) {
          var r = this.value,
            o = this.valueFormatted;
          return (
            (this.value = this.rowNode.getValueFromValueService(this.column)),
            (this.valueFormatted = this.callValueFormatter(this.value)),
            e ? !this.valuesAreEqual(r, this.value) || this.valueFormatted != o : !0
          );
        }),
        (t.prototype.valuesAreEqual = function (e, r) {
          var o = this.column.getColDef();
          return o.equals ? o.equals(e, r) : e === r;
        }),
        (t.prototype.getComp = function () {
          return this.cellComp;
        }),
        (t.prototype.getValue = function () {
          return this.value;
        }),
        (t.prototype.getValueFormatted = function () {
          return this.valueFormatted;
        }),
        (t.prototype.addDomData = function () {
          var e = this,
            r = this.getGui();
          this.beans.gridOptionsService.setDomData(r, t.DOM_DATA_KEY_CELL_CTRL, this),
            this.addDestroyFunc(function () {
              return e.beans.gridOptionsService.setDomData(r, t.DOM_DATA_KEY_CELL_CTRL, null);
            });
        }),
        (t.prototype.createEvent = function (e, r) {
          var o = this.beans.gridOptionsService.addGridCommonParams({
            type: r,
            node: this.rowNode,
            data: this.rowNode.data,
            value: this.value,
            column: this.column,
            colDef: this.column.getColDef(),
            rowPinned: this.rowNode.rowPinned,
            event: e,
            rowIndex: this.rowNode.rowIndex,
          });
          return o;
        }),
        (t.prototype.processCharacter = function (e) {
          var r;
          (r = this.cellKeyboardListenerFeature) === null || r === void 0 || r.processCharacter(e);
        }),
        (t.prototype.onKeyDown = function (e) {
          var r;
          (r = this.cellKeyboardListenerFeature) === null || r === void 0 || r.onKeyDown(e);
        }),
        (t.prototype.onMouseEvent = function (e, r) {
          var o;
          (o = this.cellMouseListenerFeature) === null || o === void 0 || o.onMouseEvent(e, r);
        }),
        (t.prototype.getGui = function () {
          return this.eGui;
        }),
        (t.prototype.refreshToolTip = function () {
          var e;
          (e = this.tooltipFeature) === null || e === void 0 || e.refreshToolTip();
        }),
        (t.prototype.getColSpanningList = function () {
          return this.cellPositionFeature.getColSpanningList();
        }),
        (t.prototype.onLeftChanged = function () {
          var e;
          this.cellComp &&
            ((e = this.cellPositionFeature) === null || e === void 0 || e.onLeftChanged());
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          this.eGui && (this.refreshAriaColIndex(), this.refreshFirstAndLastStyles());
        }),
        (t.prototype.refreshFirstAndLastStyles = function () {
          var e = this,
            r = e.cellComp,
            o = e.column,
            i = e.beans;
          hi.refreshFirstAndLastStyles(r, o, i.columnModel);
        }),
        (t.prototype.refreshAriaColIndex = function () {
          var e = this.beans.columnModel.getAriaColumnIndex(this.column);
          mn(this.getGui(), e);
        }),
        (t.prototype.isSuppressNavigable = function () {
          return this.column.isSuppressNavigable(this.rowNode);
        }),
        (t.prototype.onWidthChanged = function () {
          var e;
          return (e = this.cellPositionFeature) === null || e === void 0
            ? void 0
            : e.onWidthChanged();
        }),
        (t.prototype.getColumn = function () {
          return this.column;
        }),
        (t.prototype.getRowNode = function () {
          return this.rowNode;
        }),
        (t.prototype.getBeans = function () {
          return this.beans;
        }),
        (t.prototype.isPrintLayout = function () {
          return this.printLayout;
        }),
        (t.prototype.appendChild = function (e) {
          this.eGui.appendChild(e);
        }),
        (t.prototype.refreshHandle = function () {
          this.cellRangeFeature && this.cellRangeFeature.refreshHandle();
        }),
        (t.prototype.getCellPosition = function () {
          return this.cellPosition;
        }),
        (t.prototype.isEditing = function () {
          return this.editing;
        }),
        (t.prototype.startRowOrCellEdit = function (e, r) {
          var o = this;
          if ((r === void 0 && (r = null), !this.cellComp)) {
            this.onCellCompAttachedFuncs.push(function () {
              o.startRowOrCellEdit(e, r);
            });
            return;
          }
          this.beans.gridOptionsService.get('editType') === 'fullRow'
            ? this.rowCtrl.startRowEditing(e, this)
            : this.startEditing(e, !0, r);
        }),
        (t.prototype.getRowCtrl = function () {
          return this.rowCtrl;
        }),
        (t.prototype.getRowPosition = function () {
          return { rowIndex: this.cellPosition.rowIndex, rowPinned: this.cellPosition.rowPinned };
        }),
        (t.prototype.updateRangeBordersIfRangeCount = function () {
          this.cellComp &&
            this.cellRangeFeature &&
            this.cellRangeFeature.updateRangeBordersIfRangeCount();
        }),
        (t.prototype.onRangeSelectionChanged = function () {
          this.cellComp && this.cellRangeFeature && this.cellRangeFeature.onRangeSelectionChanged();
        }),
        (t.prototype.isRangeSelectionEnabled = function () {
          return this.cellRangeFeature != null;
        }),
        (t.prototype.focusCell = function (e) {
          e === void 0 && (e = !1),
            this.beans.focusService.setFocusedCell({
              rowIndex: this.getCellPosition().rowIndex,
              column: this.column,
              rowPinned: this.rowNode.rowPinned,
              forceBrowserFocus: e,
            });
        }),
        (t.prototype.onRowIndexChanged = function () {
          this.createCellPosition(),
            this.onCellFocused(),
            this.cellRangeFeature && this.cellRangeFeature.onRangeSelectionChanged();
        }),
        (t.prototype.onFirstRightPinnedChanged = function () {
          if (this.cellComp) {
            var e = this.column.isFirstRightPinned();
            this.cellComp.addOrRemoveCssClass(rv, e);
          }
        }),
        (t.prototype.onLastLeftPinnedChanged = function () {
          if (this.cellComp) {
            var e = this.column.isLastLeftPinned();
            this.cellComp.addOrRemoveCssClass(ov, e);
          }
        }),
        (t.prototype.onCellFocused = function (e) {
          if (!this.beans.gridOptionsService.get('suppressCellFocus')) {
            var r = this.beans.focusService.isCellFocused(this.cellPosition);
            if (!this.cellComp) {
              r && e != null && e.forceBrowserFocus && (this.focusEventToRestore = e);
              return;
            }
            if (
              ((this.focusEventToRestore = void 0),
              this.cellComp.addOrRemoveCssClass(tv, r),
              r && e && e.forceBrowserFocus)
            ) {
              var o = this.cellComp.getFocusableElement();
              o.focus({ preventScroll: !!e.preventScrollOnBrowserFocus });
            }
            var i = this.beans.gridOptionsService.get('editType') === 'fullRow';
            !r && !i && this.editing && this.stopRowOrCellEdit(),
              r && this.rowCtrl.announceDescription();
          }
        }),
        (t.prototype.createCellPosition = function () {
          this.cellPosition = {
            rowIndex: this.rowNode.rowIndex,
            rowPinned: ct(this.rowNode.rowPinned),
            column: this.column,
          };
        }),
        (t.prototype.applyStaticCssClasses = function () {
          this.cellComp.addOrRemoveCssClass(Jf, !0), this.cellComp.addOrRemoveCssClass(iv, !0);
          var e = this.column.isAutoHeight() == !0;
          this.cellComp.addOrRemoveCssClass(Zf, e), this.cellComp.addOrRemoveCssClass(ev, !e);
        }),
        (t.prototype.onColumnHover = function () {
          if (this.cellComp && this.beans.gridOptionsService.get('columnHoverHighlight')) {
            var e = this.beans.columnHoverService.isHovered(this.column);
            this.cellComp.addOrRemoveCssClass(nv, e);
          }
        }),
        (t.prototype.onColDefChanged = function () {
          var e, r;
          if (this.cellComp) {
            var o = this.column.isAutoHeight();
            o !== this.isAutoHeight &&
              ((e = this.rowCtrl) === null || e === void 0 || e.refreshCell(this));
            var i = this.column.isTooltipEnabled();
            if (
              (i
                ? (this.disableTooltipFeature(),
                  this.enableTooltipFeature(),
                  (r = this.tooltipFeature) === null || r === void 0 || r.setComp(this.eGui))
                : this.disableTooltipFeature(),
              this.setWrapText(),
              !this.editing)
            )
              this.refreshOrDestroyCell({ forceRefresh: !0, suppressFlash: !0 });
            else {
              var s = this.getCellEditor();
              if (s != null && s.refresh) {
                var a = this.editCompDetails.params,
                  l = a.eventKey,
                  u = a.cellStartedEdit,
                  c = this.createCellEditorParams(l, u),
                  p = this.column.getColDef(),
                  d = this.beans.userComponentFactory.getCellEditorDetails(p, c);
                s.refresh(d.params);
              }
            }
          }
        }),
        (t.prototype.setWrapText = function () {
          var e = this.column.getColDef().wrapText == !0;
          this.cellComp.addOrRemoveCssClass(sv, e);
        }),
        (t.prototype.dispatchCellContextMenuEvent = function (e) {
          var r = this,
            o = this.column.getColDef(),
            i = this.createEvent(e, g.EVENT_CELL_CONTEXT_MENU);
          this.beans.eventService.dispatchEvent(i),
            o.onCellContextMenu &&
              window.setTimeout(function () {
                r.beans.frameworkOverrides.wrapOutgoing(function () {
                  o.onCellContextMenu(i);
                });
              }, 0);
        }),
        (t.prototype.getCellRenderer = function () {
          return this.cellComp ? this.cellComp.getCellRenderer() : null;
        }),
        (t.prototype.getCellEditor = function () {
          return this.cellComp ? this.cellComp.getCellEditor() : null;
        }),
        (t.prototype.destroy = function () {
          (this.onCellCompAttachedFuncs = []), n.prototype.destroy.call(this);
        }),
        (t.prototype.createSelectionCheckbox = function () {
          var e = new Wl();
          return (
            this.beans.context.createBean(e),
            e.init({ rowNode: this.rowNode, column: this.column }),
            e
          );
        }),
        (t.prototype.createDndSource = function () {
          var e = new Kf(this.rowNode, this.column, this.eGui);
          return this.beans.context.createBean(e), e;
        }),
        (t.prototype.registerRowDragger = function (e, r, o) {
          var i = this;
          if (this.customRowDragComp) {
            this.customRowDragComp.setDragElement(e, r);
            return;
          }
          var s = this.createRowDragComp(e, r, o);
          s &&
            ((this.customRowDragComp = s),
            this.addDestroyFunc(function () {
              i.beans.context.destroyBean(s), (i.customRowDragComp = null);
            }));
        }),
        (t.prototype.createRowDragComp = function (e, r, o) {
          var i = this,
            s = this.beans.gridOptionsService.get('pagination'),
            a = this.beans.gridOptionsService.get('rowDragManaged'),
            l = this.beans.gridOptionsService.isRowModelType('clientSide');
          if (a) {
            if (!l) {
              V('managed row dragging is only allowed in the Client Side Row Model');
              return;
            }
            if (s) {
              V('managed row dragging is not possible when doing pagination');
              return;
            }
          }
          var u = new ai(
            function () {
              return i.value;
            },
            this.rowNode,
            this.column,
            e,
            r,
            o
          );
          return this.beans.context.createBean(u), u;
        }),
        (t.DOM_DATA_KEY_CELL_CTRL = 'cellCtrl'),
        t
      );
    })(D),
    lv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    uv = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    },
    Cs = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Ss = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    De;
  (function (n) {
    (n.Normal = 'Normal'),
      (n.FullWidth = 'FullWidth'),
      (n.FullWidthLoading = 'FullWidthLoading'),
      (n.FullWidthGroup = 'FullWidthGroup'),
      (n.FullWidthDetail = 'FullWidthDetail');
  })(De || (De = {}));
  var cv = 0,
    fr = (function (n) {
      lv(t, n);
      function t(e, r, o, i, s) {
        var a = n.call(this) || this;
        return (
          (a.allRowGuis = []),
          (a.active = !0),
          (a.centerCellCtrls = { list: [], map: {} }),
          (a.leftCellCtrls = { list: [], map: {} }),
          (a.rightCellCtrls = { list: [], map: {} }),
          (a.slideInAnimation = { left: !1, center: !1, right: !1, fullWidth: !1 }),
          (a.fadeInAnimation = { left: !1, center: !1, right: !1, fullWidth: !1 }),
          (a.rowDragComps = []),
          (a.lastMouseDownOnDragger = !1),
          (a.emptyStyle = {}),
          (a.updateColumnListsPending = !1),
          (a.rowId = null),
          (a.businessKeySanitised = null),
          (a.beans = r),
          (a.gridOptionsService = r.gridOptionsService),
          (a.rowNode = e),
          (a.paginationPage = r.paginationProxy.getCurrentPage()),
          (a.useAnimationFrameForCreate = i),
          (a.printLayout = s),
          (a.suppressRowTransform = a.gridOptionsService.get('suppressRowTransform')),
          (a.instanceId = e.id + '-' + cv++),
          (a.rowId = ae(e.id)),
          a.initRowBusinessKey(),
          (a.rowFocused = r.focusService.isRowFocused(a.rowNode.rowIndex, a.rowNode.rowPinned)),
          (a.rowLevel = r.rowCssClassCalculator.calculateRowLevel(a.rowNode)),
          a.setRowType(),
          a.setAnimateFlags(o),
          (a.rowStyles = a.processStylesFromGridOptions()),
          a.isFullWidth() && !a.gridOptionsService.get('suppressCellFocus') && (a.tabIndex = -1),
          a.addListeners(),
          a
        );
      }
      return (
        (t.prototype.initRowBusinessKey = function () {
          (this.businessKeyForNodeFunc = this.gridOptionsService.get('getBusinessKeyForNode')),
            this.updateRowBusinessKey();
        }),
        (t.prototype.updateRowBusinessKey = function () {
          if (typeof this.businessKeyForNodeFunc == 'function') {
            var e = this.businessKeyForNodeFunc(this.rowNode);
            this.businessKeySanitised = ae(e);
          }
        }),
        (t.prototype.getRowId = function () {
          return this.rowId;
        }),
        (t.prototype.getRowStyles = function () {
          return this.rowStyles;
        }),
        (t.prototype.getTabIndex = function () {
          return this.tabIndex;
        }),
        (t.prototype.isSticky = function () {
          return this.rowNode.sticky;
        }),
        (t.prototype.getBeans = function () {
          return this.beans;
        }),
        (t.prototype.getInstanceId = function () {
          return this.instanceId;
        }),
        (t.prototype.setComp = function (e, r, o) {
          var i = { rowComp: e, element: r, containerType: o };
          this.allRowGuis.push(i),
            o === fe.LEFT
              ? (this.leftGui = i)
              : o === fe.RIGHT
              ? (this.rightGui = i)
              : o === fe.FULL_WIDTH
              ? (this.fullWidthGui = i)
              : (this.centerGui = i),
            this.initialiseRowComp(i),
            this.rowType !== 'FullWidthLoading' &&
              !this.rowNode.rowPinned &&
              this.beans.rowRenderer.dispatchFirstDataRenderedEvent();
        }),
        (t.prototype.unsetComp = function (e) {
          switch (
            ((this.allRowGuis = this.allRowGuis.filter(function (r) {
              return r.containerType !== e;
            })),
            e)
          ) {
            case fe.LEFT:
              this.leftGui = void 0;
              break;
            case fe.RIGHT:
              this.rightGui = void 0;
              break;
            case fe.FULL_WIDTH:
              this.fullWidthGui = void 0;
              break;
            case fe.CENTER:
              this.centerGui = void 0;
              break;
          }
        }),
        (t.prototype.isCacheable = function () {
          return (
            this.rowType === De.FullWidthDetail && this.gridOptionsService.get('keepDetailRows')
          );
        }),
        (t.prototype.setCached = function (e) {
          var r = e ? 'none' : '';
          this.allRowGuis.forEach(function (o) {
            return (o.element.style.display = r);
          });
        }),
        (t.prototype.initialiseRowComp = function (e) {
          var r = this,
            o = this.gridOptionsService;
          this.listenOnDomOrder(e),
            this.beans.columnModel.wasAutoRowHeightEverActive() && this.rowNode.checkAutoHeights(),
            this.onRowHeightChanged(e),
            this.updateRowIndexes(e),
            this.setFocusedClasses(e),
            this.setStylesFromGridOptions(!1, e),
            o.isRowSelection() && this.rowNode.selectable && this.onRowSelected(e),
            this.updateColumnLists(!this.useAnimationFrameForCreate);
          var i = e.rowComp,
            s = this.getInitialRowClasses(e.containerType);
          s.forEach(function (a) {
            return i.addOrRemoveCssClass(a, !0);
          }),
            this.executeSlideAndFadeAnimations(e),
            this.rowNode.group && Pt(e.element, this.rowNode.expanded == !0),
            this.setRowCompRowId(i),
            this.setRowCompRowBusinessKey(i),
            o.setDomData(e.element, t.DOM_DATA_KEY_ROW_CTRL, this),
            this.addDestroyFunc(function () {
              return o.setDomData(e.element, t.DOM_DATA_KEY_ROW_CTRL, null);
            }),
            this.useAnimationFrameForCreate
              ? this.beans.animationFrameService.createTask(
                  this.addHoverFunctionality.bind(this, e.element),
                  this.rowNode.rowIndex,
                  'createTasksP2'
                )
              : this.addHoverFunctionality(e.element),
            this.isFullWidth() && this.setupFullWidth(e),
            o.get('rowDragEntireRow') && this.addRowDraggerToRow(e),
            this.useAnimationFrameForCreate &&
              this.beans.animationFrameService.addDestroyTask(function () {
                r.isAlive() && e.rowComp.addOrRemoveCssClass('ag-after-created', !0);
              }),
            this.executeProcessRowPostCreateFunc();
        }),
        (t.prototype.setRowCompRowBusinessKey = function (e) {
          this.businessKeySanitised != null && e.setRowBusinessKey(this.businessKeySanitised);
        }),
        (t.prototype.getBusinessKey = function () {
          return this.businessKeySanitised;
        }),
        (t.prototype.setRowCompRowId = function (e) {
          (this.rowId = ae(this.rowNode.id)), this.rowId != null && e.setRowId(this.rowId);
        }),
        (t.prototype.executeSlideAndFadeAnimations = function (e) {
          var r = this,
            o = e.containerType,
            i = this.slideInAnimation[o];
          i &&
            (Ji(function () {
              r.onTopChanged();
            }),
            (this.slideInAnimation[o] = !1));
          var s = this.fadeInAnimation[o];
          s &&
            (Ji(function () {
              e.rowComp.addOrRemoveCssClass('ag-opacity-zero', !1);
            }),
            (this.fadeInAnimation[o] = !1));
        }),
        (t.prototype.addRowDraggerToRow = function (e) {
          if (this.gridOptionsService.get('enableRangeSelection')) {
            V(
              "Setting `rowDragEntireRow: true` in the gridOptions doesn't work with `enableRangeSelection: true`"
            );
            return;
          }
          var r = this.beans.localeService.getLocaleTextFunc(),
            o = new ai(
              function () {
                return '1 '.concat(r('rowDragRow', 'row'));
              },
              this.rowNode,
              void 0,
              e.element,
              void 0,
              !0
            ),
            i = this.createBean(o, this.beans.context);
          this.rowDragComps.push(i);
        }),
        (t.prototype.setupFullWidth = function (e) {
          var r = this.getPinnedForContainer(e.containerType),
            o = this.createFullWidthParams(e.element, r);
          if (
            !(
              this.rowType == De.FullWidthDetail &&
              !X.__assertRegistered(
                G.MasterDetailModule,
                "cell renderer 'agDetailCellRenderer' (for master detail)",
                this.beans.context.getGridId()
              )
            )
          ) {
            var i;
            switch (this.rowType) {
              case De.FullWidthDetail:
                i = this.beans.userComponentFactory.getFullWidthDetailCellRendererDetails(o);
                break;
              case De.FullWidthGroup:
                i = this.beans.userComponentFactory.getFullWidthGroupCellRendererDetails(o);
                break;
              case De.FullWidthLoading:
                i = this.beans.userComponentFactory.getFullWidthLoadingCellRendererDetails(o);
                break;
              default:
                i = this.beans.userComponentFactory.getFullWidthCellRendererDetails(o);
                break;
            }
            e.rowComp.showFullWidth(i);
          }
        }),
        (t.prototype.isPrintLayout = function () {
          return this.printLayout;
        }),
        (t.prototype.getFullWidthCellRenderers = function () {
          var e, r;
          return this.gridOptionsService.get('embedFullWidthRows')
            ? this.allRowGuis.map(function (o) {
                var i;
                return (i = o == null ? void 0 : o.rowComp) === null || i === void 0
                  ? void 0
                  : i.getFullWidthCellRenderer();
              })
            : [
                (r = (e = this.fullWidthGui) === null || e === void 0 ? void 0 : e.rowComp) ===
                  null || r === void 0
                  ? void 0
                  : r.getFullWidthCellRenderer(),
              ];
        }),
        (t.prototype.getCellElement = function (e) {
          var r = this.getCellCtrl(e);
          return r ? r.getGui() : null;
        }),
        (t.prototype.executeProcessRowPostCreateFunc = function () {
          var e = this.gridOptionsService.getCallback('processRowPostCreate');
          if (!(!e || !this.areAllContainersReady())) {
            var r = {
              eRow: this.centerGui.element,
              ePinnedLeftRow: this.leftGui ? this.leftGui.element : void 0,
              ePinnedRightRow: this.rightGui ? this.rightGui.element : void 0,
              node: this.rowNode,
              rowIndex: this.rowNode.rowIndex,
              addRenderedRowListener: this.addEventListener.bind(this),
            };
            e(r);
          }
        }),
        (t.prototype.areAllContainersReady = function () {
          var e = !!this.leftGui || !this.beans.columnModel.isPinningLeft(),
            r = !!this.centerGui,
            o = !!this.rightGui || !this.beans.columnModel.isPinningRight();
          return e && r && o;
        }),
        (t.prototype.setRowType = function () {
          var e = this.rowNode.stub,
            r = this.rowNode.isFullWidthCell(),
            o = this.gridOptionsService.get('masterDetail') && this.rowNode.detail,
            i = this.beans.columnModel.isPivotMode(),
            s = !!this.rowNode.group && !this.rowNode.footer,
            a = s && this.gridOptionsService.isGroupUseEntireRow(i);
          e
            ? (this.rowType = De.FullWidthLoading)
            : o
            ? (this.rowType = De.FullWidthDetail)
            : r
            ? (this.rowType = De.FullWidth)
            : a
            ? (this.rowType = De.FullWidthGroup)
            : (this.rowType = De.Normal);
        }),
        (t.prototype.updateColumnLists = function (e, r) {
          var o = this;
          if ((e === void 0 && (e = !1), r === void 0 && (r = !1), !this.isFullWidth())) {
            var i = e || this.gridOptionsService.get('suppressAnimationFrame') || this.printLayout;
            if (i) {
              this.updateColumnListsImpl(r);
              return;
            }
            this.updateColumnListsPending ||
              (this.beans.animationFrameService.createTask(
                function () {
                  o.active && o.updateColumnListsImpl(!0);
                },
                this.rowNode.rowIndex,
                'createTasksP1'
              ),
              (this.updateColumnListsPending = !0));
          }
        }),
        (t.prototype.createCellCtrls = function (e, r, o) {
          var i = this;
          o === void 0 && (o = null);
          var s = { list: [], map: {} },
            a = function (l, u) {
              s.list.push(u), (s.map[l] = u);
            };
          return (
            r.forEach(function (l) {
              var u = l.getInstanceId(),
                c = e.map[u];
              c || (c = new hr(l, i.rowNode, i.beans, i)), a(u, c);
            }),
            e.list.forEach(function (l) {
              var u = s.map[l.getColumn().getInstanceId()] != null;
              if (!u) {
                var c = !i.isCellEligibleToBeRemoved(l, o);
                if (c) {
                  a(l.getColumn().getInstanceId(), l);
                  return;
                }
                l.destroy();
              }
            }),
            s
          );
        }),
        (t.prototype.updateColumnListsImpl = function (e) {
          (this.updateColumnListsPending = !1), this.createAllCellCtrls(), this.setCellCtrls(e);
        }),
        (t.prototype.setCellCtrls = function (e) {
          var r = this;
          this.allRowGuis.forEach(function (o) {
            var i = r.getCellCtrlsForContainer(o.containerType);
            o.rowComp.setCellCtrls(i, e);
          });
        }),
        (t.prototype.getCellCtrlsForContainer = function (e) {
          switch (e) {
            case fe.LEFT:
              return this.leftCellCtrls.list;
            case fe.RIGHT:
              return this.rightCellCtrls.list;
            case fe.FULL_WIDTH:
              return [];
            case fe.CENTER:
              return this.centerCellCtrls.list;
            default:
              var r = e;
              throw new Error('Unhandled case: '.concat(r));
          }
        }),
        (t.prototype.createAllCellCtrls = function () {
          var e = this.beans.columnModel;
          if (this.printLayout)
            (this.centerCellCtrls = this.createCellCtrls(
              this.centerCellCtrls,
              e.getAllDisplayedColumns()
            )),
              (this.leftCellCtrls = { list: [], map: {} }),
              (this.rightCellCtrls = { list: [], map: {} });
          else {
            var r = e.getViewportCenterColumnsForRow(this.rowNode);
            this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, r);
            var o = e.getDisplayedLeftColumnsForRow(this.rowNode);
            this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, o, 'left');
            var i = e.getDisplayedRightColumnsForRow(this.rowNode);
            this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, i, 'right');
          }
        }),
        (t.prototype.isCellEligibleToBeRemoved = function (e, r) {
          var o = !0,
            i = !1,
            s = e.getColumn();
          if (s.getPinned() != r) return o;
          var a = e.isEditing(),
            l = this.beans.focusService.isCellFocused(e.getCellPosition()),
            u = a || l;
          if (u) {
            var c = e.getColumn(),
              p = this.beans.columnModel.getAllDisplayedColumns(),
              d = p.indexOf(c) >= 0;
            return d ? i : o;
          }
          return o;
        }),
        (t.prototype.getDomOrder = function () {
          var e = this.gridOptionsService.get('ensureDomOrder');
          return e || this.gridOptionsService.isDomLayout('print');
        }),
        (t.prototype.listenOnDomOrder = function (e) {
          var r = this,
            o = function () {
              e.rowComp.setDomOrder(r.getDomOrder());
            };
          this.addManagedPropertyListener('domLayout', o),
            this.addManagedPropertyListener('ensureDomOrder', o);
        }),
        (t.prototype.setAnimateFlags = function (e) {
          if (!(this.isSticky() || !e)) {
            var r = P(this.rowNode.oldRowTop),
              o = this.beans.columnModel.isPinningLeft(),
              i = this.beans.columnModel.isPinningRight();
            if (r) {
              if (this.isFullWidth() && !this.gridOptionsService.get('embedFullWidthRows')) {
                this.slideInAnimation.fullWidth = !0;
                return;
              }
              (this.slideInAnimation.center = !0),
                (this.slideInAnimation.left = o),
                (this.slideInAnimation.right = i);
            } else {
              if (this.isFullWidth() && !this.gridOptionsService.get('embedFullWidthRows')) {
                this.fadeInAnimation.fullWidth = !0;
                return;
              }
              (this.fadeInAnimation.center = !0),
                (this.fadeInAnimation.left = o),
                (this.fadeInAnimation.right = i);
            }
          }
        }),
        (t.prototype.isEditing = function () {
          return this.editingRow;
        }),
        (t.prototype.isFullWidth = function () {
          return this.rowType !== De.Normal;
        }),
        (t.prototype.getRowType = function () {
          return this.rowType;
        }),
        (t.prototype.refreshFullWidth = function () {
          var e = this,
            r = function (u, c) {
              return u
                ? u.rowComp.refreshFullWidth(function () {
                    return e.createFullWidthParams(u.element, c);
                  })
                : !0;
            },
            o = r(this.fullWidthGui, null),
            i = r(this.centerGui, null),
            s = r(this.leftGui, 'left'),
            a = r(this.rightGui, 'right'),
            l = o && i && s && a;
          return l;
        }),
        (t.prototype.addListeners = function () {
          var e = this;
          this.addManagedListener(this.rowNode, U.EVENT_HEIGHT_CHANGED, function () {
            return e.onRowHeightChanged();
          }),
            this.addManagedListener(this.rowNode, U.EVENT_ROW_SELECTED, function () {
              return e.onRowSelected();
            }),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_ROW_INDEX_CHANGED,
              this.onRowIndexChanged.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_TOP_CHANGED,
              this.onTopChanged.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_EXPANDED_CHANGED,
              this.updateExpandedCss.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_HAS_CHILDREN_CHANGED,
              this.updateExpandedCss.bind(this)
            ),
            this.rowNode.detail &&
              this.addManagedListener(
                this.rowNode.parent,
                U.EVENT_DATA_CHANGED,
                this.onRowNodeDataChanged.bind(this)
              ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_DATA_CHANGED,
              this.onRowNodeDataChanged.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_CELL_CHANGED,
              this.postProcessCss.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_HIGHLIGHT_CHANGED,
              this.onRowNodeHighlightChanged.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_DRAGGING_CHANGED,
              this.postProcessRowDragging.bind(this)
            ),
            this.addManagedListener(
              this.rowNode,
              U.EVENT_UI_LEVEL_CHANGED,
              this.onUiLevelChanged.bind(this)
            );
          var r = this.beans.eventService;
          this.addManagedListener(
            r,
            g.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED,
            this.onPaginationPixelOffsetChanged.bind(this)
          ),
            this.addManagedListener(r, g.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this)),
            this.addManagedListener(
              r,
              g.EVENT_DISPLAYED_COLUMNS_CHANGED,
              this.onDisplayedColumnsChanged.bind(this)
            ),
            this.addManagedListener(
              r,
              g.EVENT_VIRTUAL_COLUMNS_CHANGED,
              this.onVirtualColumnsChanged.bind(this)
            ),
            this.addManagedListener(r, g.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this)),
            this.addManagedListener(
              r,
              g.EVENT_CELL_FOCUS_CLEARED,
              this.onCellFocusChanged.bind(this)
            ),
            this.addManagedListener(
              r,
              g.EVENT_PAGINATION_CHANGED,
              this.onPaginationChanged.bind(this)
            ),
            this.addManagedListener(
              r,
              g.EVENT_MODEL_UPDATED,
              this.refreshFirstAndLastRowStyles.bind(this)
            ),
            this.addManagedListener(r, g.EVENT_COLUMN_MOVED, this.updateColumnLists.bind(this)),
            this.addDestroyFunc(function () {
              e.destroyBeans(e.rowDragComps, e.beans.context);
            }),
            this.addManagedPropertyListeners(['rowDragEntireRow'], function () {
              var o = e.gridOptionsService.get('rowDragEntireRow');
              if (o) {
                e.allRowGuis.forEach(function (i) {
                  e.addRowDraggerToRow(i);
                });
                return;
              }
              e.destroyBeans(e.rowDragComps, e.beans.context), (e.rowDragComps = []);
            }),
            this.addListenersForCellComps();
        }),
        (t.prototype.addListenersForCellComps = function () {
          var e = this;
          this.addManagedListener(this.rowNode, U.EVENT_ROW_INDEX_CHANGED, function () {
            e.getAllCellCtrls().forEach(function (r) {
              return r.onRowIndexChanged();
            });
          }),
            this.addManagedListener(this.rowNode, U.EVENT_CELL_CHANGED, function (r) {
              e.getAllCellCtrls().forEach(function (o) {
                return o.onCellChanged(r);
              });
            });
        }),
        (t.prototype.onRowNodeDataChanged = function (e) {
          var r = this,
            o = this.isFullWidth() !== !!this.rowNode.isFullWidthCell();
          if (o) {
            this.beans.rowRenderer.redrawRow(this.rowNode);
            return;
          }
          if (this.isFullWidth()) {
            var i = this.refreshFullWidth();
            i || this.beans.rowRenderer.redrawRow(this.rowNode);
            return;
          }
          this.getAllCellCtrls().forEach(function (s) {
            return s.refreshCell({ suppressFlash: !e.update, newData: !e.update });
          }),
            this.allRowGuis.forEach(function (s) {
              r.setRowCompRowId(s.rowComp),
                r.updateRowBusinessKey(),
                r.setRowCompRowBusinessKey(s.rowComp);
            }),
            this.onRowSelected(),
            this.postProcessCss();
        }),
        (t.prototype.postProcessCss = function () {
          this.setStylesFromGridOptions(!0),
            this.postProcessClassesFromGridOptions(),
            this.postProcessRowClassRules(),
            this.postProcessRowDragging();
        }),
        (t.prototype.onRowNodeHighlightChanged = function () {
          var e = this.rowNode.highlighted;
          this.allRowGuis.forEach(function (r) {
            var o = e === et.Above,
              i = e === et.Below;
            r.rowComp.addOrRemoveCssClass('ag-row-highlight-above', o),
              r.rowComp.addOrRemoveCssClass('ag-row-highlight-below', i);
          });
        }),
        (t.prototype.postProcessRowDragging = function () {
          var e = this.rowNode.dragging;
          this.allRowGuis.forEach(function (r) {
            return r.rowComp.addOrRemoveCssClass('ag-row-dragging', e);
          });
        }),
        (t.prototype.updateExpandedCss = function () {
          var e = this.rowNode.isExpandable(),
            r = this.rowNode.expanded == !0;
          this.allRowGuis.forEach(function (o) {
            o.rowComp.addOrRemoveCssClass('ag-row-group', e),
              o.rowComp.addOrRemoveCssClass('ag-row-group-expanded', e && r),
              o.rowComp.addOrRemoveCssClass('ag-row-group-contracted', e && !r),
              Pt(o.element, e && r);
          });
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          this.updateColumnLists(!0),
            this.beans.columnModel.wasAutoRowHeightEverActive() && this.rowNode.checkAutoHeights();
        }),
        (t.prototype.onVirtualColumnsChanged = function () {
          this.updateColumnLists(!1, !0);
        }),
        (t.prototype.getRowPosition = function () {
          return { rowPinned: ct(this.rowNode.rowPinned), rowIndex: this.rowNode.rowIndex };
        }),
        (t.prototype.onKeyboardNavigate = function (e) {
          var r = this.allRowGuis.find(function (u) {
              return u.element.contains(e.target);
            }),
            o = r ? r.element : null,
            i = o === e.target;
          if (i) {
            var s = this.rowNode,
              a = this.beans.focusService.getFocusedCell(),
              l = { rowIndex: s.rowIndex, rowPinned: s.rowPinned, column: a && a.column };
            this.beans.navigationService.navigateToNextCell(e, e.key, l, !0), e.preventDefault();
          }
        }),
        (t.prototype.onTabKeyDown = function (e) {
          if (!(e.defaultPrevented || nt(e))) {
            var r = this.allRowGuis.find(function (a) {
                return a.element.contains(e.target);
              }),
              o = r ? r.element : null,
              i = o === e.target,
              s = null;
            i || (s = this.beans.focusService.findNextFocusableElement(o, !1, e.shiftKey)),
              ((this.isFullWidth() && i) || !s) &&
                this.beans.navigationService.onTabKeyDown(this, e);
          }
        }),
        (t.prototype.onFullWidthRowFocused = function (e) {
          var r,
            o = this.rowNode,
            i = e
              ? this.isFullWidth() && e.rowIndex === o.rowIndex && e.rowPinned == o.rowPinned
              : !1,
            s = this.fullWidthGui
              ? this.fullWidthGui.element
              : (r = this.centerGui) === null || r === void 0
              ? void 0
              : r.element;
          s && (s.classList.toggle('ag-full-width-focus', i), i && s.focus({ preventScroll: !0 }));
        }),
        (t.prototype.refreshCell = function (e) {
          (this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, e)),
            (this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, e)),
            (this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, e)),
            this.updateColumnLists();
        }),
        (t.prototype.removeCellCtrl = function (e, r) {
          var o = { list: [], map: {} };
          return (
            e.list.forEach(function (i) {
              i !== r && (o.list.push(i), (o.map[i.getInstanceId()] = i));
            }),
            o
          );
        }),
        (t.prototype.onMouseEvent = function (e, r) {
          switch (e) {
            case 'dblclick':
              this.onRowDblClick(r);
              break;
            case 'click':
              this.onRowClick(r);
              break;
            case 'touchstart':
            case 'mousedown':
              this.onRowMouseDown(r);
              break;
          }
        }),
        (t.prototype.createRowEvent = function (e, r) {
          return this.gridOptionsService.addGridCommonParams({
            type: e,
            node: this.rowNode,
            data: this.rowNode.data,
            rowIndex: this.rowNode.rowIndex,
            rowPinned: this.rowNode.rowPinned,
            event: r,
          });
        }),
        (t.prototype.createRowEventWithSource = function (e, r) {
          var o = this.createRowEvent(e, r);
          return (o.source = this), o;
        }),
        (t.prototype.onRowDblClick = function (e) {
          if (!nt(e)) {
            var r = this.createRowEventWithSource(g.EVENT_ROW_DOUBLE_CLICKED, e);
            this.beans.eventService.dispatchEvent(r);
          }
        }),
        (t.prototype.onRowMouseDown = function (e) {
          if (
            ((this.lastMouseDownOnDragger = or(e.target, 'ag-row-drag', 3)), !!this.isFullWidth())
          ) {
            var r = this.rowNode,
              o = this.beans.columnModel;
            this.beans.rangeService && this.beans.rangeService.removeAllCellRanges(),
              this.beans.focusService.setFocusedCell({
                rowIndex: r.rowIndex,
                column: o.getAllDisplayedColumns()[0],
                rowPinned: r.rowPinned,
                forceBrowserFocus: !0,
              });
          }
        }),
        (t.prototype.onRowClick = function (e) {
          var r = nt(e) || this.lastMouseDownOnDragger;
          if (!r) {
            var o = this.createRowEventWithSource(g.EVENT_ROW_CLICKED, e);
            this.beans.eventService.dispatchEvent(o);
            var i = e.ctrlKey || e.metaKey,
              s = e.shiftKey,
              a = this.gridOptionsService.get('groupSelectsChildren');
            if (
              !(
                (a && this.rowNode.group) ||
                this.isRowSelectionBlocked() ||
                this.gridOptionsService.get('suppressRowClickSelection')
              )
            ) {
              var l = this.gridOptionsService.get('rowMultiSelectWithClick'),
                u = !this.gridOptionsService.get('suppressRowDeselection'),
                c = 'rowClicked';
              if (this.rowNode.isSelected())
                l
                  ? this.rowNode.setSelectedParams({ newValue: !1, event: e, source: c })
                  : i
                  ? u && this.rowNode.setSelectedParams({ newValue: !1, event: e, source: c })
                  : this.rowNode.setSelectedParams({
                      newValue: !0,
                      clearSelection: !s,
                      rangeSelect: s,
                      event: e,
                      source: c,
                    });
              else {
                var p = l ? !1 : !i;
                this.rowNode.setSelectedParams({
                  newValue: !0,
                  clearSelection: p,
                  rangeSelect: s,
                  event: e,
                  source: c,
                });
              }
            }
          }
        }),
        (t.prototype.isRowSelectionBlocked = function () {
          return (
            !this.rowNode.selectable ||
            !!this.rowNode.rowPinned ||
            !this.gridOptionsService.isRowSelection()
          );
        }),
        (t.prototype.setupDetailRowAutoHeight = function (e) {
          var r = this;
          if (
            this.rowType === De.FullWidthDetail &&
            this.gridOptionsService.get('detailRowAutoHeight')
          ) {
            var o = function () {
                var s = e.clientHeight;
                if (s != null && s > 0) {
                  var a = function () {
                    r.rowNode.setRowHeight(s),
                      r.beans.clientSideRowModel
                        ? r.beans.clientSideRowModel.onRowHeightChanged()
                        : r.beans.serverSideRowModel &&
                          r.beans.serverSideRowModel.onRowHeightChanged();
                  };
                  window.setTimeout(a, 0);
                }
              },
              i = this.beans.resizeObserverService.observeResize(e, o);
            this.addDestroyFunc(i), o();
          }
        }),
        (t.prototype.createFullWidthParams = function (e, r) {
          var o = this,
            i = this.gridOptionsService.addGridCommonParams({
              fullWidth: !0,
              data: this.rowNode.data,
              node: this.rowNode,
              value: this.rowNode.key,
              valueFormatted: this.rowNode.key,
              rowIndex: this.rowNode.rowIndex,
              eGridCell: e,
              eParentOfValue: e,
              pinned: r,
              addRenderedRowListener: this.addEventListener.bind(this),
              registerRowDragger: function (s, a, l, u) {
                return o.addFullWidthRowDragging(s, a, l, u);
              },
            });
          return i;
        }),
        (t.prototype.addFullWidthRowDragging = function (e, r, o, i) {
          if ((o === void 0 && (o = ''), !!this.isFullWidth())) {
            var s = new ai(
              function () {
                return o;
              },
              this.rowNode,
              void 0,
              e,
              r,
              i
            );
            this.createManagedBean(s, this.beans.context);
          }
        }),
        (t.prototype.onUiLevelChanged = function () {
          var e = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);
          if (this.rowLevel != e) {
            var r = 'ag-row-level-' + e,
              o = 'ag-row-level-' + this.rowLevel;
            this.allRowGuis.forEach(function (i) {
              i.rowComp.addOrRemoveCssClass(r, !0), i.rowComp.addOrRemoveCssClass(o, !1);
            });
          }
          this.rowLevel = e;
        }),
        (t.prototype.isFirstRowOnPage = function () {
          return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();
        }),
        (t.prototype.isLastRowOnPage = function () {
          return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();
        }),
        (t.prototype.refreshFirstAndLastRowStyles = function () {
          var e = this.isFirstRowOnPage(),
            r = this.isLastRowOnPage();
          this.firstRowOnPage !== e &&
            ((this.firstRowOnPage = e),
            this.allRowGuis.forEach(function (o) {
              return o.rowComp.addOrRemoveCssClass('ag-row-first', e);
            })),
            this.lastRowOnPage !== r &&
              ((this.lastRowOnPage = r),
              this.allRowGuis.forEach(function (o) {
                return o.rowComp.addOrRemoveCssClass('ag-row-last', r);
              }));
        }),
        (t.prototype.stopEditing = function (e) {
          var r, o;
          if ((e === void 0 && (e = !1), !this.stoppingRowEdit)) {
            var i = this.getAllCellCtrls(),
              s = this.editingRow;
            this.stoppingRowEdit = !0;
            var a = !1;
            try {
              for (var l = uv(i), u = l.next(); !u.done; u = l.next()) {
                var c = u.value,
                  p = c.stopEditing(e);
                s && !e && !a && p && (a = !0);
              }
            } catch (h) {
              r = { error: h };
            } finally {
              try {
                u && !u.done && (o = l.return) && o.call(l);
              } finally {
                if (r) throw r.error;
              }
            }
            if (a) {
              var d = this.createRowEvent(g.EVENT_ROW_VALUE_CHANGED);
              this.beans.eventService.dispatchEvent(d);
            }
            s && this.setEditingRow(!1), (this.stoppingRowEdit = !1);
          }
        }),
        (t.prototype.setInlineEditingCss = function (e) {
          this.allRowGuis.forEach(function (r) {
            r.rowComp.addOrRemoveCssClass('ag-row-inline-editing', e),
              r.rowComp.addOrRemoveCssClass('ag-row-not-inline-editing', !e);
          });
        }),
        (t.prototype.setEditingRow = function (e) {
          (this.editingRow = e),
            this.allRowGuis.forEach(function (o) {
              return o.rowComp.addOrRemoveCssClass('ag-row-editing', e);
            });
          var r = e
            ? this.createRowEvent(g.EVENT_ROW_EDITING_STARTED)
            : this.createRowEvent(g.EVENT_ROW_EDITING_STOPPED);
          this.beans.eventService.dispatchEvent(r);
        }),
        (t.prototype.startRowEditing = function (e, r, o) {
          if (
            (e === void 0 && (e = null),
            r === void 0 && (r = null),
            o === void 0 && (o = null),
            !this.editingRow)
          ) {
            var i = this.getAllCellCtrls().reduce(function (s, a) {
              var l = a === r;
              return (
                l ? a.startEditing(e, l, o) : a.startEditing(null, l, o), s ? !0 : a.isEditing()
              );
            }, !1);
            i && this.setEditingRow(!0);
          }
        }),
        (t.prototype.getAllCellCtrls = function () {
          if (this.leftCellCtrls.list.length === 0 && this.rightCellCtrls.list.length === 0)
            return this.centerCellCtrls.list;
          var e = Ss(
            Ss(Ss([], Cs(this.centerCellCtrls.list), !1), Cs(this.leftCellCtrls.list), !1),
            Cs(this.rightCellCtrls.list),
            !1
          );
          return e;
        }),
        (t.prototype.postProcessClassesFromGridOptions = function () {
          var e = this,
            r = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode);
          !r ||
            !r.length ||
            r.forEach(function (o) {
              e.allRowGuis.forEach(function (i) {
                return i.rowComp.addOrRemoveCssClass(o, !0);
              });
            });
        }),
        (t.prototype.postProcessRowClassRules = function () {
          var e = this;
          this.beans.rowCssClassCalculator.processRowClassRules(
            this.rowNode,
            function (r) {
              e.allRowGuis.forEach(function (o) {
                return o.rowComp.addOrRemoveCssClass(r, !0);
              });
            },
            function (r) {
              e.allRowGuis.forEach(function (o) {
                return o.rowComp.addOrRemoveCssClass(r, !1);
              });
            }
          );
        }),
        (t.prototype.setStylesFromGridOptions = function (e, r) {
          var o = this;
          e && (this.rowStyles = this.processStylesFromGridOptions()),
            this.forEachGui(r, function (i) {
              return i.rowComp.setUserStyles(o.rowStyles);
            });
        }),
        (t.prototype.getPinnedForContainer = function (e) {
          var r = e === fe.LEFT ? 'left' : e === fe.RIGHT ? 'right' : null;
          return r;
        }),
        (t.prototype.getInitialRowClasses = function (e) {
          var r = this.getPinnedForContainer(e),
            o = {
              rowNode: this.rowNode,
              rowFocused: this.rowFocused,
              fadeRowIn: this.fadeInAnimation[e],
              rowIsEven: this.rowNode.rowIndex % 2 === 0,
              rowLevel: this.rowLevel,
              fullWidthRow: this.isFullWidth(),
              firstRowOnPage: this.isFirstRowOnPage(),
              lastRowOnPage: this.isLastRowOnPage(),
              printLayout: this.printLayout,
              expandable: this.rowNode.isExpandable(),
              pinned: r,
            };
          return this.beans.rowCssClassCalculator.getInitialRowClasses(o);
        }),
        (t.prototype.processStylesFromGridOptions = function () {
          var e = this.gridOptionsService.get('rowStyle');
          if (e && typeof e == 'function') {
            console.warn(
              'AG Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead'
            );
            return;
          }
          var r = this.gridOptionsService.getCallback('getRowStyle'),
            o;
          if (r) {
            var i = {
              data: this.rowNode.data,
              node: this.rowNode,
              rowIndex: this.rowNode.rowIndex,
            };
            o = r(i);
          }
          return o || e ? Object.assign({}, e, o) : this.emptyStyle;
        }),
        (t.prototype.onRowSelected = function (e) {
          var r = this,
            o = this.beans.gridOptionsService.getDocument(),
            i = !!this.rowNode.isSelected();
          this.forEachGui(e, function (s) {
            s.rowComp.addOrRemoveCssClass('ag-row-selected', i), Rr(s.element, i);
            var a = s.element.contains(o.activeElement);
            a && (s === r.centerGui || s === r.fullWidthGui) && r.announceDescription();
          });
        }),
        (t.prototype.announceDescription = function () {
          if (!this.isRowSelectionBlocked()) {
            var e = this.rowNode.isSelected();
            if (!(e && this.beans.gridOptionsService.get('suppressRowDeselection'))) {
              var r = this.beans.localeService.getLocaleTextFunc(),
                o = r(
                  e ? 'ariaRowDeselect' : 'ariaRowSelect',
                  'Press SPACE to '.concat(e ? 'deselect' : 'select', ' this row.')
                );
              this.beans.ariaAnnouncementService.announceValue(o);
            }
          }
        }),
        (t.prototype.isUseAnimationFrameForCreate = function () {
          return this.useAnimationFrameForCreate;
        }),
        (t.prototype.addHoverFunctionality = function (e) {
          var r = this;
          this.active &&
            (this.addManagedListener(e, 'mouseenter', function () {
              return r.rowNode.onMouseEnter();
            }),
            this.addManagedListener(e, 'mouseleave', function () {
              return r.rowNode.onMouseLeave();
            }),
            this.addManagedListener(this.rowNode, U.EVENT_MOUSE_ENTER, function () {
              !r.beans.dragService.isDragging() &&
                !r.gridOptionsService.get('suppressRowHoverHighlight') &&
                (e.classList.add('ag-row-hover'), r.rowNode.setHovered(!0));
            }),
            this.addManagedListener(this.rowNode, U.EVENT_MOUSE_LEAVE, function () {
              e.classList.remove('ag-row-hover'), r.rowNode.setHovered(!1);
            }));
        }),
        (t.prototype.roundRowTopToBounds = function (e) {
          var r = this.beans.ctrlsService
              .getGridBodyCtrl()
              .getScrollFeature()
              .getApproximateVScollPosition(),
            o = this.applyPaginationOffset(r.top, !0) - 100,
            i = this.applyPaginationOffset(r.bottom, !0) + 100;
          return Math.min(Math.max(o, e), i);
        }),
        (t.prototype.getFrameworkOverrides = function () {
          return this.beans.frameworkOverrides;
        }),
        (t.prototype.forEachGui = function (e, r) {
          e ? r(e) : this.allRowGuis.forEach(r);
        }),
        (t.prototype.onRowHeightChanged = function (e) {
          if (this.rowNode.rowHeight != null) {
            var r = this.rowNode.rowHeight,
              o = this.beans.environment.getDefaultRowHeight(),
              i = this.gridOptionsService.isGetRowHeightFunction(),
              s = i ? this.gridOptionsService.getRowHeightForNode(this.rowNode).height : void 0,
              a = s ? ''.concat(Math.min(o, s) - 2, 'px') : void 0;
            this.forEachGui(e, function (l) {
              (l.element.style.height = ''.concat(r, 'px')),
                a && l.element.style.setProperty('--ag-line-height', a);
            });
          }
        }),
        (t.prototype.addEventListener = function (e, r) {
          n.prototype.addEventListener.call(this, e, r);
        }),
        (t.prototype.removeEventListener = function (e, r) {
          n.prototype.removeEventListener.call(this, e, r);
        }),
        (t.prototype.destroyFirstPass = function (e) {
          if (
            (e === void 0 && (e = !1),
            (this.active = !1),
            !e && this.gridOptionsService.isAnimateRows() && !this.isSticky())
          ) {
            var r = this.rowNode.rowTop != null;
            if (r) {
              var o = this.roundRowTopToBounds(this.rowNode.rowTop);
              this.setRowTop(o);
            } else
              this.allRowGuis.forEach(function (s) {
                return s.rowComp.addOrRemoveCssClass('ag-opacity-zero', !0);
              });
          }
          this.rowNode.setHovered(!1);
          var i = this.createRowEvent(g.EVENT_VIRTUAL_ROW_REMOVED);
          this.dispatchEvent(i),
            this.beans.eventService.dispatchEvent(i),
            n.prototype.destroy.call(this);
        }),
        (t.prototype.destroySecondPass = function () {
          (this.allRowGuis.length = 0), this.stopEditing();
          var e = function (r) {
            return (
              r.list.forEach(function (o) {
                return o.destroy();
              }),
              { list: [], map: {} }
            );
          };
          (this.centerCellCtrls = e(this.centerCellCtrls)),
            (this.leftCellCtrls = e(this.leftCellCtrls)),
            (this.rightCellCtrls = e(this.rightCellCtrls));
        }),
        (t.prototype.setFocusedClasses = function (e) {
          var r = this;
          this.forEachGui(e, function (o) {
            o.rowComp.addOrRemoveCssClass('ag-row-focus', r.rowFocused),
              o.rowComp.addOrRemoveCssClass('ag-row-no-focus', !r.rowFocused);
          });
        }),
        (t.prototype.onCellFocusChanged = function () {
          var e = this.beans.focusService.isRowFocused(
            this.rowNode.rowIndex,
            this.rowNode.rowPinned
          );
          e !== this.rowFocused && ((this.rowFocused = e), this.setFocusedClasses()),
            !e && this.editingRow && this.stopEditing(!1);
        }),
        (t.prototype.onPaginationChanged = function () {
          var e = this.beans.paginationProxy.getCurrentPage();
          this.paginationPage !== e && ((this.paginationPage = e), this.onTopChanged()),
            this.refreshFirstAndLastRowStyles();
        }),
        (t.prototype.onTopChanged = function () {
          this.setRowTop(this.rowNode.rowTop);
        }),
        (t.prototype.onPaginationPixelOffsetChanged = function () {
          this.onTopChanged();
        }),
        (t.prototype.applyPaginationOffset = function (e, r) {
          if ((r === void 0 && (r = !1), this.rowNode.isRowPinned() || this.rowNode.sticky))
            return e;
          var o = this.beans.paginationProxy.getPixelOffset(),
            i = r ? 1 : -1;
          return e + o * i;
        }),
        (t.prototype.setRowTop = function (e) {
          if (!this.printLayout && P(e)) {
            var r = this.applyPaginationOffset(e),
              o = this.rowNode.isRowPinned() || this.rowNode.sticky,
              i = o ? r : this.beans.rowContainerHeightService.getRealPixelPosition(r),
              s = ''.concat(i, 'px');
            this.setRowTopStyle(s);
          }
        }),
        (t.prototype.getInitialRowTop = function (e) {
          return this.suppressRowTransform ? this.getInitialRowTopShared(e) : void 0;
        }),
        (t.prototype.getInitialTransform = function (e) {
          return this.suppressRowTransform
            ? void 0
            : 'translateY('.concat(this.getInitialRowTopShared(e), ')');
        }),
        (t.prototype.getInitialRowTopShared = function (e) {
          if (this.printLayout) return '';
          var r;
          if (this.isSticky()) r = this.rowNode.stickyRowTop;
          else {
            var o = this.slideInAnimation[e]
                ? this.roundRowTopToBounds(this.rowNode.oldRowTop)
                : this.rowNode.rowTop,
              i = this.applyPaginationOffset(o);
            r = this.rowNode.isRowPinned()
              ? i
              : this.beans.rowContainerHeightService.getRealPixelPosition(i);
          }
          return r + 'px';
        }),
        (t.prototype.setRowTopStyle = function (e) {
          var r = this;
          this.allRowGuis.forEach(function (o) {
            return r.suppressRowTransform
              ? o.rowComp.setTop(e)
              : o.rowComp.setTransform('translateY('.concat(e, ')'));
          });
        }),
        (t.prototype.getRowNode = function () {
          return this.rowNode;
        }),
        (t.prototype.getCellCtrl = function (e) {
          var r = null;
          return (
            this.getAllCellCtrls().forEach(function (o) {
              o.getColumn() == e && (r = o);
            }),
            r != null ||
              this.getAllCellCtrls().forEach(function (o) {
                o.getColSpanningList().indexOf(e) >= 0 && (r = o);
              }),
            r
          );
        }),
        (t.prototype.onRowIndexChanged = function () {
          this.rowNode.rowIndex != null &&
            (this.onCellFocusChanged(), this.updateRowIndexes(), this.postProcessCss());
        }),
        (t.prototype.getRowIndex = function () {
          return this.rowNode.getRowIndexString();
        }),
        (t.prototype.updateRowIndexes = function (e) {
          var r = this.rowNode.getRowIndexString(),
            o =
              this.beans.headerNavigationService.getHeaderRowCount() +
              this.beans.filterManager.getHeaderRowCount(),
            i = this.rowNode.rowIndex % 2 === 0,
            s = o + this.rowNode.rowIndex + 1;
          this.forEachGui(e, function (a) {
            a.rowComp.setRowIndex(r),
              a.rowComp.addOrRemoveCssClass('ag-row-even', i),
              a.rowComp.addOrRemoveCssClass('ag-row-odd', !i),
              yn(a.element, s);
          });
        }),
        (t.DOM_DATA_KEY_ROW_CTRL = 'renderedRow'),
        t
      );
    })(D),
    pv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ze = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    dv = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    hv = (function (n) {
      pv(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.element = e), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addKeyboardListeners(), this.addMouseListeners(), this.mockContextMenuForIPad();
        }),
        (t.prototype.addKeyboardListeners = function () {
          var e = 'keydown',
            r = this.processKeyboardEvent.bind(this, e);
          this.addManagedListener(this.element, e, r);
        }),
        (t.prototype.addMouseListeners = function () {
          var e = this,
            r = an('touchstart') ? 'touchstart' : 'mousedown',
            o = ['dblclick', 'contextmenu', 'mouseover', 'mouseout', 'click', r];
          o.forEach(function (i) {
            var s = e.processMouseEvent.bind(e, i);
            e.addManagedListener(e.element, i, s);
          });
        }),
        (t.prototype.processMouseEvent = function (e, r) {
          if (!(!this.mouseEventService.isEventFromThisGrid(r) || nt(r))) {
            var o = this.getRowForEvent(r),
              i = this.mouseEventService.getRenderedCellForEvent(r);
            e === 'contextmenu'
              ? this.handleContextMenuMouseEvent(r, void 0, o, i)
              : (i && i.onMouseEvent(e, r), o && o.onMouseEvent(e, r));
          }
        }),
        (t.prototype.mockContextMenuForIPad = function () {
          var e = this;
          if (Dt()) {
            var r = new me(this.element),
              o = function (i) {
                var s = e.getRowForEvent(i.touchEvent),
                  a = e.mouseEventService.getRenderedCellForEvent(i.touchEvent);
                e.handleContextMenuMouseEvent(void 0, i.touchEvent, s, a);
              };
            this.addManagedListener(r, me.EVENT_LONG_TAP, o),
              this.addDestroyFunc(function () {
                return r.destroy();
              });
          }
        }),
        (t.prototype.getRowForEvent = function (e) {
          for (var r = e.target; r; ) {
            var o = this.gridOptionsService.getDomData(r, fr.DOM_DATA_KEY_ROW_CTRL);
            if (o) return o;
            r = r.parentElement;
          }
          return null;
        }),
        (t.prototype.handleContextMenuMouseEvent = function (e, r, o, i) {
          var s = o ? o.getRowNode() : null,
            a = i ? i.getColumn() : null,
            l = null;
          if (a) {
            var u = e || r;
            i.dispatchCellContextMenuEvent(u ?? null), (l = this.valueService.getValue(a, s));
          }
          var c = this.ctrlsService.getGridBodyCtrl(),
            p = i ? i.getGui() : c.getGridBodyElement();
          this.menuService.showContextMenu({
            mouseEvent: e,
            touchEvent: r,
            rowNode: s,
            column: a,
            value: l,
            anchorToElement: p,
          });
        }),
        (t.prototype.getControlsForEventTarget = function (e) {
          return {
            cellCtrl: ko(this.gridOptionsService, e, hr.DOM_DATA_KEY_CELL_CTRL),
            rowCtrl: ko(this.gridOptionsService, e, fr.DOM_DATA_KEY_ROW_CTRL),
          };
        }),
        (t.prototype.processKeyboardEvent = function (e, r) {
          var o = this.getControlsForEventTarget(r.target),
            i = o.cellCtrl,
            s = o.rowCtrl;
          r.defaultPrevented ||
            (i
              ? this.processCellKeyboardEvent(i, e, r)
              : s && s.isFullWidth() && this.processFullWidthRowKeyboardEvent(s, e, r));
        }),
        (t.prototype.processCellKeyboardEvent = function (e, r, o) {
          var i = e.getRowNode(),
            s = e.getColumn(),
            a = e.isEditing(),
            l = !Jo(this.gridOptionsService, o, i, s, a);
          if (l && r === 'keydown') {
            var u = !a && this.navigationService.handlePageScrollingKey(o);
            u || e.onKeyDown(o),
              this.doGridOperations(o, e.isEditing()),
              Xo(o) && e.processCharacter(o);
          }
          if (r === 'keydown') {
            var c = e.createEvent(o, g.EVENT_CELL_KEY_DOWN);
            this.eventService.dispatchEvent(c);
          }
        }),
        (t.prototype.processFullWidthRowKeyboardEvent = function (e, r, o) {
          var i = e.getRowNode(),
            s = this.focusService.getFocusedCell(),
            a = s && s.column,
            l = !Jo(this.gridOptionsService, o, i, a, !1);
          if (l) {
            var u = o.key;
            if (r === 'keydown')
              switch (u) {
                case _.PAGE_HOME:
                case _.PAGE_END:
                case _.PAGE_UP:
                case _.PAGE_DOWN:
                  this.navigationService.handlePageScrollingKey(o, !0);
                  break;
                case _.UP:
                case _.DOWN:
                  e.onKeyboardNavigate(o);
                  break;
                case _.TAB:
                  e.onTabKeyDown(o);
                  break;
              }
          }
          if (r === 'keydown') {
            var c = e.createRowEvent(g.EVENT_CELL_KEY_DOWN, o);
            this.eventService.dispatchEvent(c);
          }
        }),
        (t.prototype.doGridOperations = function (e, r) {
          if (!(!e.ctrlKey && !e.metaKey) && !r && this.mouseEventService.isEventFromThisGrid(e)) {
            var o = ul(e);
            if (o === _.A) return this.onCtrlAndA(e);
            if (o === _.C) return this.onCtrlAndC(e);
            if (o === _.D) return this.onCtrlAndD(e);
            if (o === _.V) return this.onCtrlAndV(e);
            if (o === _.X) return this.onCtrlAndX(e);
            if (o === _.Y) return this.onCtrlAndY();
            if (o === _.Z) return this.onCtrlAndZ(e);
          }
        }),
        (t.prototype.onCtrlAndA = function (e) {
          var r = this,
            o = r.pinnedRowModel,
            i = r.paginationProxy,
            s = r.rangeService;
          if (s && i.isRowsToRender()) {
            var a = dv([o.isEmpty('top'), o.isEmpty('bottom')], 2),
              l = a[0],
              u = a[1],
              c = l ? null : 'top',
              p = void 0,
              d = void 0;
            u
              ? ((p = null), (d = this.paginationProxy.getRowCount() - 1))
              : ((p = 'bottom'), (d = o.getPinnedBottomRowData().length - 1));
            var h = this.columnModel.getAllDisplayedColumns();
            if (Ge(h)) return;
            s.setCellRange({
              rowStartIndex: 0,
              rowStartPinned: c,
              rowEndIndex: d,
              rowEndPinned: p,
              columnStart: h[0],
              columnEnd: q(h),
            });
          }
          e.preventDefault();
        }),
        (t.prototype.onCtrlAndC = function (e) {
          if (!(!this.clipboardService || this.gridOptionsService.get('enableCellTextSelection'))) {
            var r = this.getControlsForEventTarget(e.target),
              o = r.cellCtrl,
              i = r.rowCtrl;
            (o != null && o.isEditing()) ||
              (i != null && i.isEditing()) ||
              (e.preventDefault(), this.clipboardService.copyToClipboard());
          }
        }),
        (t.prototype.onCtrlAndX = function (e) {
          if (
            !(
              !this.clipboardService ||
              this.gridOptionsService.get('enableCellTextSelection') ||
              this.gridOptionsService.get('suppressCutToClipboard')
            )
          ) {
            var r = this.getControlsForEventTarget(e.target),
              o = r.cellCtrl,
              i = r.rowCtrl;
            (o != null && o.isEditing()) ||
              (i != null && i.isEditing()) ||
              (e.preventDefault(), this.clipboardService.cutToClipboard(void 0, 'ui'));
          }
        }),
        (t.prototype.onCtrlAndV = function (e) {
          var r = this.getControlsForEventTarget(e.target),
            o = r.cellCtrl,
            i = r.rowCtrl;
          (o != null && o.isEditing()) ||
            (i != null && i.isEditing()) ||
            (this.clipboardService &&
              !this.gridOptionsService.get('suppressClipboardPaste') &&
              this.clipboardService.pasteFromClipboard());
        }),
        (t.prototype.onCtrlAndD = function (e) {
          this.clipboardService &&
            !this.gridOptionsService.get('suppressClipboardPaste') &&
            this.clipboardService.copyRangeDown(),
            e.preventDefault();
        }),
        (t.prototype.onCtrlAndZ = function (e) {
          this.gridOptionsService.get('undoRedoCellEditing') &&
            (e.preventDefault(),
            e.shiftKey ? this.undoRedoService.redo('ui') : this.undoRedoService.undo('ui'));
        }),
        (t.prototype.onCtrlAndY = function () {
          this.undoRedoService.redo('ui');
        }),
        ze([v('mouseEventService')], t.prototype, 'mouseEventService', void 0),
        ze([v('valueService')], t.prototype, 'valueService', void 0),
        ze([v('menuService')], t.prototype, 'menuService', void 0),
        ze([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        ze([v('navigationService')], t.prototype, 'navigationService', void 0),
        ze([v('focusService')], t.prototype, 'focusService', void 0),
        ze([v('undoRedoService')], t.prototype, 'undoRedoService', void 0),
        ze([v('columnModel')], t.prototype, 'columnModel', void 0),
        ze([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        ze([v('pinnedRowModel')], t.prototype, 'pinnedRowModel', void 0),
        ze([Y('rangeService')], t.prototype, 'rangeService', void 0),
        ze([Y('clipboardService')], t.prototype, 'clipboardService', void 0),
        ze([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    fv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    co = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ru = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    ou = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    vv = (function (n) {
      fv(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.centerContainerCtrl = e), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.ctrlsService.whenReady(function () {
            (e.gridBodyCtrl = e.ctrlsService.getGridBodyCtrl()), e.listenForResize();
          }),
            this.addManagedListener(
              this.eventService,
              g.EVENT_SCROLLBAR_WIDTH_CHANGED,
              this.onScrollbarWidthChanged.bind(this)
            ),
            this.addManagedPropertyListeners(
              ['alwaysShowHorizontalScroll', 'alwaysShowVerticalScroll'],
              function () {
                e.checkViewportAndScrolls();
              }
            );
        }),
        (t.prototype.listenForResize = function () {
          var e = this,
            r = function () {
              return e.onCenterViewportResized();
            };
          this.centerContainerCtrl.registerViewportResizeListener(r),
            this.gridBodyCtrl.registerBodyViewportResizeListener(r);
        }),
        (t.prototype.onScrollbarWidthChanged = function () {
          this.checkViewportAndScrolls();
        }),
        (t.prototype.onCenterViewportResized = function () {
          if (this.centerContainerCtrl.isViewportInTheDOMTree()) {
            this.keepPinnedColumnsNarrowerThanViewport(), this.checkViewportAndScrolls();
            var e = this.centerContainerCtrl.getCenterWidth();
            e !== this.centerWidth &&
              ((this.centerWidth = e),
              this.columnModel.refreshFlexedColumns({
                viewportWidth: this.centerWidth,
                updateBodyWidths: !0,
                fireResizedEvent: !0,
              }));
          } else this.bodyHeight = 0;
        }),
        (t.prototype.keepPinnedColumnsNarrowerThanViewport = function () {
          var e = this.gridBodyCtrl.getBodyViewportElement(),
            r = ir(e);
          if (!(r <= 50)) {
            var o = this.getPinnedColumnsOverflowingViewport(r - 50),
              i = this.gridOptionsService.getCallback('processUnpinnedColumns');
            if (o.length) {
              if (i) {
                var s = { columns: o, viewportWidth: r };
                o = i(s);
              }
              this.columnModel.setColumnsPinned(o, null, 'viewportSizeFeature');
            }
          }
        }),
        (t.prototype.getPinnedColumnsOverflowingViewport = function (e) {
          var r = this.pinnedWidthService.getPinnedRightWidth(),
            o = this.pinnedWidthService.getPinnedLeftWidth(),
            i = r + o;
          if (i < e) return [];
          for (
            var s = ou([], ru(this.columnModel.getDisplayedLeftColumns()), !1),
              a = ou([], ru(this.columnModel.getDisplayedRightColumns()), !1),
              l = 0,
              u = 0,
              c = 0,
              p = [],
              d = i - c - e;
            (u < s.length || l < a.length) && d > 0;

          ) {
            if (l < a.length) {
              var h = a[l++];
              (d -= h.getActualWidth()), p.push(h);
            }
            if (u < s.length && d > 0) {
              var h = s[u++];
              (d -= h.getActualWidth()), p.push(h);
            }
          }
          return p;
        }),
        (t.prototype.checkViewportAndScrolls = function () {
          this.updateScrollVisibleService(),
            this.checkBodyHeight(),
            this.onHorizontalViewportChanged(),
            this.gridBodyCtrl.getScrollFeature().checkScrollLeft();
        }),
        (t.prototype.getBodyHeight = function () {
          return this.bodyHeight;
        }),
        (t.prototype.checkBodyHeight = function () {
          var e = this.gridBodyCtrl.getBodyViewportElement(),
            r = qr(e);
          if (this.bodyHeight !== r) {
            this.bodyHeight = r;
            var o = { type: g.EVENT_BODY_HEIGHT_CHANGED };
            this.eventService.dispatchEvent(o);
          }
        }),
        (t.prototype.updateScrollVisibleService = function () {
          this.updateScrollVisibleServiceImpl(),
            setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);
        }),
        (t.prototype.updateScrollVisibleServiceImpl = function () {
          var e = {
            horizontalScrollShowing: this.isHorizontalScrollShowing(),
            verticalScrollShowing: this.gridBodyCtrl.isVerticalScrollShowing(),
          };
          this.scrollVisibleService.setScrollsVisible(e);
        }),
        (t.prototype.isHorizontalScrollShowing = function () {
          return this.centerContainerCtrl.isHorizontalScrollShowing();
        }),
        (t.prototype.onHorizontalViewportChanged = function () {
          var e = this.centerContainerCtrl.getCenterWidth(),
            r = this.centerContainerCtrl.getViewportScrollLeft();
          this.columnModel.setViewportPosition(e, r);
        }),
        co([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        co([v('pinnedWidthService')], t.prototype, 'pinnedWidthService', void 0),
        co([v('columnModel')], t.prototype, 'columnModel', void 0),
        co([v('scrollVisibleService')], t.prototype, 'scrollVisibleService', void 0),
        co([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    gv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    iu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    yv = (function (n) {
      gv(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.element = e), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addManagedListener(
            this.eventService,
            g.EVENT_LEFT_PINNED_WIDTH_CHANGED,
            this.onPinnedLeftWidthChanged.bind(this)
          );
        }),
        (t.prototype.onPinnedLeftWidthChanged = function () {
          var e = this.pinnedWidthService.getPinnedLeftWidth(),
            r = e > 0;
          $(this.element, r), Je(this.element, e);
        }),
        (t.prototype.getWidth = function () {
          return this.pinnedWidthService.getPinnedLeftWidth();
        }),
        iu([v('pinnedWidthService')], t.prototype, 'pinnedWidthService', void 0),
        iu([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    mv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    nu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Cv = (function (n) {
      mv(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.element = e), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addManagedListener(
            this.eventService,
            g.EVENT_RIGHT_PINNED_WIDTH_CHANGED,
            this.onPinnedRightWidthChanged.bind(this)
          );
        }),
        (t.prototype.onPinnedRightWidthChanged = function () {
          var e = this.pinnedWidthService.getPinnedRightWidth(),
            r = e > 0;
          $(this.element, r), Je(this.element, e);
        }),
        (t.prototype.getWidth = function () {
          return this.pinnedWidthService.getPinnedRightWidth();
        }),
        nu([v('pinnedWidthService')], t.prototype, 'pinnedWidthService', void 0),
        nu([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    Sv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    su = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    au = (function (n) {
      Sv(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return (o.eContainer = e), (o.eViewport = r), o;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addManagedListener(
            this.eventService,
            g.EVENT_ROW_CONTAINER_HEIGHT_CHANGED,
            this.onHeightChanged.bind(this)
          );
        }),
        (t.prototype.onHeightChanged = function () {
          var e = this.maxDivHeightScaler.getUiContainerHeight(),
            r = e != null ? ''.concat(e, 'px') : '';
          (this.eContainer.style.height = r), this.eViewport && (this.eViewport.style.height = r);
        }),
        su([v('rowContainerHeightService')], t.prototype, 'maxDivHeightScaler', void 0),
        su([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    wv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ws = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Ev = (function (n) {
      wv(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.eContainer = e), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          if (!H(this.rangeService)) {
            (this.params = {
              eElement: this.eContainer,
              onDragStart: this.rangeService.onDragStart.bind(this.rangeService),
              onDragStop: this.rangeService.onDragStop.bind(this.rangeService),
              onDragging: this.rangeService.onDragging.bind(this.rangeService),
            }),
              this.addManagedPropertyListener('enableRangeSelection', function (o) {
                var i = o.currentValue;
                if (i) {
                  e.enableFeature();
                  return;
                }
                e.disableFeature();
              }),
              this.addDestroyFunc(function () {
                return e.disableFeature();
              });
            var r = this.gridOptionsService.get('enableRangeSelection');
            r && this.enableFeature();
          }
        }),
        (t.prototype.enableFeature = function () {
          this.dragService.addDragSource(this.params);
        }),
        (t.prototype.disableFeature = function () {
          this.dragService.removeDragSource(this.params);
        }),
        ws([Y('rangeService')], t.prototype, 'rangeService', void 0),
        ws([v('dragService')], t.prototype, 'dragService', void 0),
        ws([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    _v = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Es = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    _s = (function (n) {
      _v(t, n);
      function t(e, r) {
        r === void 0 && (r = !1);
        var o = n.call(this) || this;
        return (o.callback = e), (o.addSpacer = r), o;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this.setWidth.bind(this);
          this.addManagedPropertyListener('domLayout', e),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_CONTAINER_WIDTH_CHANGED, e),
            this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, e),
            this.addManagedListener(this.eventService, g.EVENT_LEFT_PINNED_WIDTH_CHANGED, e),
            this.addSpacer &&
              (this.addManagedListener(this.eventService, g.EVENT_RIGHT_PINNED_WIDTH_CHANGED, e),
              this.addManagedListener(this.eventService, g.EVENT_SCROLL_VISIBILITY_CHANGED, e),
              this.addManagedListener(this.eventService, g.EVENT_SCROLLBAR_WIDTH_CHANGED, e)),
            this.setWidth();
        }),
        (t.prototype.setWidth = function () {
          var e = this.columnModel,
            r = this.gridOptionsService.isDomLayout('print'),
            o = e.getBodyContainerWidth(),
            i = e.getDisplayedColumnsLeftWidth(),
            s = e.getDisplayedColumnsRightWidth(),
            a;
          if (r) a = o + i + s;
          else if (((a = o), this.addSpacer)) {
            var l = this.gridOptionsService.get('enableRtl') ? i : s;
            l === 0 &&
              this.scrollVisibleService.isVerticalScrollShowing() &&
              (a += this.gridOptionsService.getScrollbarWidth());
          }
          this.callback(a);
        }),
        Es([v('columnModel')], t.prototype, 'columnModel', void 0),
        Es([v('scrollVisibleService')], t.prototype, 'scrollVisibleService', void 0),
        Es([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    Rv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    xr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    vi = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    gi = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    T;
  (function (n) {
    (n.LEFT = 'left'),
      (n.RIGHT = 'right'),
      (n.CENTER = 'center'),
      (n.FULL_WIDTH = 'fullWidth'),
      (n.TOP_LEFT = 'topLeft'),
      (n.TOP_RIGHT = 'topRight'),
      (n.TOP_CENTER = 'topCenter'),
      (n.TOP_FULL_WIDTH = 'topFullWidth'),
      (n.STICKY_TOP_LEFT = 'stickyTopLeft'),
      (n.STICKY_TOP_RIGHT = 'stickyTopRight'),
      (n.STICKY_TOP_CENTER = 'stickyTopCenter'),
      (n.STICKY_TOP_FULL_WIDTH = 'stickyTopFullWidth'),
      (n.BOTTOM_LEFT = 'bottomLeft'),
      (n.BOTTOM_RIGHT = 'bottomRight'),
      (n.BOTTOM_CENTER = 'bottomCenter'),
      (n.BOTTOM_FULL_WIDTH = 'bottomFullWidth');
  })(T || (T = {}));
  var fe;
  (function (n) {
    (n.LEFT = 'left'), (n.RIGHT = 'right'), (n.CENTER = 'center'), (n.FULL_WIDTH = 'fullWidth');
  })(fe || (fe = {}));
  function Ov(n) {
    switch (n) {
      case T.CENTER:
      case T.TOP_CENTER:
      case T.STICKY_TOP_CENTER:
      case T.BOTTOM_CENTER:
        return fe.CENTER;
      case T.LEFT:
      case T.TOP_LEFT:
      case T.STICKY_TOP_LEFT:
      case T.BOTTOM_LEFT:
        return fe.LEFT;
      case T.RIGHT:
      case T.TOP_RIGHT:
      case T.STICKY_TOP_RIGHT:
      case T.BOTTOM_RIGHT:
        return fe.RIGHT;
      case T.FULL_WIDTH:
      case T.TOP_FULL_WIDTH:
      case T.STICKY_TOP_FULL_WIDTH:
      case T.BOTTOM_FULL_WIDTH:
        return fe.FULL_WIDTH;
      default:
        throw Error('Invalid Row Container Type');
    }
  }
  var Tv = Nt([
      [T.CENTER, 'ag-center-cols-container'],
      [T.LEFT, 'ag-pinned-left-cols-container'],
      [T.RIGHT, 'ag-pinned-right-cols-container'],
      [T.FULL_WIDTH, 'ag-full-width-container'],
      [T.TOP_CENTER, 'ag-floating-top-container'],
      [T.TOP_LEFT, 'ag-pinned-left-floating-top'],
      [T.TOP_RIGHT, 'ag-pinned-right-floating-top'],
      [T.TOP_FULL_WIDTH, 'ag-floating-top-full-width-container'],
      [T.STICKY_TOP_CENTER, 'ag-sticky-top-container'],
      [T.STICKY_TOP_LEFT, 'ag-pinned-left-sticky-top'],
      [T.STICKY_TOP_RIGHT, 'ag-pinned-right-sticky-top'],
      [T.STICKY_TOP_FULL_WIDTH, 'ag-sticky-top-full-width-container'],
      [T.BOTTOM_CENTER, 'ag-floating-bottom-container'],
      [T.BOTTOM_LEFT, 'ag-pinned-left-floating-bottom'],
      [T.BOTTOM_RIGHT, 'ag-pinned-right-floating-bottom'],
      [T.BOTTOM_FULL_WIDTH, 'ag-floating-bottom-full-width-container'],
    ]),
    Pv = Nt([
      [T.CENTER, 'ag-center-cols-viewport'],
      [T.TOP_CENTER, 'ag-floating-top-viewport'],
      [T.STICKY_TOP_CENTER, 'ag-sticky-top-viewport'],
      [T.BOTTOM_CENTER, 'ag-floating-bottom-viewport'],
    ]),
    lu = (function (n) {
      Rv(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (
          (r.visible = !0),
          (r.EMPTY_CTRLS = []),
          (r.name = e),
          (r.isFullWithContainer =
            r.name === T.TOP_FULL_WIDTH ||
            r.name === T.STICKY_TOP_FULL_WIDTH ||
            r.name === T.BOTTOM_FULL_WIDTH ||
            r.name === T.FULL_WIDTH),
          r
        );
      }
      return (
        (t.getRowContainerCssClasses = function (e) {
          var r = Tv.get(e),
            o = Pv.get(e);
          return { container: r, viewport: o };
        }),
        (t.getPinned = function (e) {
          switch (e) {
            case T.BOTTOM_LEFT:
            case T.TOP_LEFT:
            case T.STICKY_TOP_LEFT:
            case T.LEFT:
              return 'left';
            case T.BOTTOM_RIGHT:
            case T.TOP_RIGHT:
            case T.STICKY_TOP_RIGHT:
            case T.RIGHT:
              return 'right';
            default:
              return null;
          }
        }),
        (t.prototype.postConstruct = function () {
          var e = this;
          (this.enableRtl = this.gridOptionsService.get('enableRtl')),
            this.forContainers([T.CENTER], function () {
              return (e.viewportSizeFeature = e.createManagedBean(new vv(e)));
            });
        }),
        (t.prototype.registerWithCtrlsService = function () {
          switch (this.name) {
            case T.CENTER:
              this.ctrlsService.registerCenterRowContainerCtrl(this);
              break;
            case T.LEFT:
              this.ctrlsService.registerLeftRowContainerCtrl(this);
              break;
            case T.RIGHT:
              this.ctrlsService.registerRightRowContainerCtrl(this);
              break;
            case T.TOP_CENTER:
              this.ctrlsService.registerTopCenterRowContainerCtrl(this);
              break;
            case T.TOP_LEFT:
              this.ctrlsService.registerTopLeftRowContainerCon(this);
              break;
            case T.TOP_RIGHT:
              this.ctrlsService.registerTopRightRowContainerCtrl(this);
              break;
            case T.STICKY_TOP_CENTER:
              this.ctrlsService.registerStickyTopCenterRowContainerCtrl(this);
              break;
            case T.STICKY_TOP_LEFT:
              this.ctrlsService.registerStickyTopLeftRowContainerCon(this);
              break;
            case T.STICKY_TOP_RIGHT:
              this.ctrlsService.registerStickyTopRightRowContainerCtrl(this);
              break;
            case T.BOTTOM_CENTER:
              this.ctrlsService.registerBottomCenterRowContainerCtrl(this);
              break;
            case T.BOTTOM_LEFT:
              this.ctrlsService.registerBottomLeftRowContainerCtrl(this);
              break;
            case T.BOTTOM_RIGHT:
              this.ctrlsService.registerBottomRightRowContainerCtrl(this);
              break;
          }
        }),
        (t.prototype.forContainers = function (e, r) {
          e.indexOf(this.name) >= 0 && r();
        }),
        (t.prototype.getContainerElement = function () {
          return this.eContainer;
        }),
        (t.prototype.getViewportSizeFeature = function () {
          return this.viewportSizeFeature;
        }),
        (t.prototype.setComp = function (e, r, o) {
          var i = this;
          (this.comp = e),
            (this.eContainer = r),
            (this.eViewport = o),
            this.createManagedBean(new hv(this.eContainer)),
            this.addPreventScrollWhileDragging(),
            this.listenOnDomOrder(),
            this.stopHScrollOnPinnedRows();
          var s = [T.TOP_CENTER, T.TOP_LEFT, T.TOP_RIGHT],
            a = [T.STICKY_TOP_CENTER, T.STICKY_TOP_LEFT, T.STICKY_TOP_RIGHT],
            l = [T.BOTTOM_CENTER, T.BOTTOM_LEFT, T.BOTTOM_RIGHT],
            u = [T.CENTER, T.LEFT, T.RIGHT],
            c = gi(gi(gi(gi([], vi(s), !1), vi(l), !1), vi(u), !1), vi(a), !1),
            p = [T.CENTER, T.LEFT, T.RIGHT, T.FULL_WIDTH],
            d = [T.CENTER, T.TOP_CENTER, T.STICKY_TOP_CENTER, T.BOTTOM_CENTER],
            h = [T.LEFT, T.BOTTOM_LEFT, T.TOP_LEFT, T.STICKY_TOP_LEFT],
            f = [T.RIGHT, T.BOTTOM_RIGHT, T.TOP_RIGHT, T.STICKY_TOP_RIGHT];
          this.forContainers(h, function () {
            (i.pinnedWidthFeature = i.createManagedBean(new yv(i.eContainer))),
              i.addManagedListener(i.eventService, g.EVENT_LEFT_PINNED_WIDTH_CHANGED, function () {
                return i.onPinnedWidthChanged();
              });
          }),
            this.forContainers(f, function () {
              (i.pinnedWidthFeature = i.createManagedBean(new Cv(i.eContainer))),
                i.addManagedListener(
                  i.eventService,
                  g.EVENT_RIGHT_PINNED_WIDTH_CHANGED,
                  function () {
                    return i.onPinnedWidthChanged();
                  }
                );
            }),
            this.forContainers(p, function () {
              return i.createManagedBean(new au(i.eContainer, i.name === T.CENTER ? o : void 0));
            }),
            this.forContainers(c, function () {
              return i.createManagedBean(new Ev(i.eContainer));
            }),
            this.forContainers(d, function () {
              return i.createManagedBean(
                new _s(function (y) {
                  return i.comp.setContainerWidth(''.concat(y, 'px'));
                })
              );
            }),
            this.addListeners(),
            this.registerWithCtrlsService();
        }),
        (t.prototype.addListeners = function () {
          var e = this;
          this.addManagedListener(
            this.eventService,
            g.EVENT_DISPLAYED_COLUMNS_CHANGED,
            function () {
              return e.onDisplayedColumnsChanged();
            }
          ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
              function () {
                return e.onDisplayedColumnsWidthChanged();
              }
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_ROWS_CHANGED,
              function (r) {
                return e.onDisplayedRowsChanged(r.afterScroll);
              }
            ),
            this.onDisplayedColumnsChanged(),
            this.onDisplayedColumnsWidthChanged(),
            this.onDisplayedRowsChanged();
        }),
        (t.prototype.listenOnDomOrder = function () {
          var e = this,
            r = [
              T.STICKY_TOP_CENTER,
              T.STICKY_TOP_LEFT,
              T.STICKY_TOP_RIGHT,
              T.STICKY_TOP_FULL_WIDTH,
            ],
            o = r.indexOf(this.name) >= 0;
          if (o) {
            this.comp.setDomOrder(!0);
            return;
          }
          var i = function () {
            var s = e.gridOptionsService.get('ensureDomOrder'),
              a = e.gridOptionsService.isDomLayout('print');
            e.comp.setDomOrder(s || a);
          };
          this.addManagedPropertyListener('domLayout', i), i();
        }),
        (t.prototype.stopHScrollOnPinnedRows = function () {
          var e = this;
          this.forContainers([T.TOP_CENTER, T.STICKY_TOP_CENTER, T.BOTTOM_CENTER], function () {
            var r = function () {
              return (e.eViewport.scrollLeft = 0);
            };
            e.addManagedListener(e.eViewport, 'scroll', r);
          });
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          var e = this;
          this.forContainers([T.CENTER], function () {
            return e.onHorizontalViewportChanged();
          });
        }),
        (t.prototype.onDisplayedColumnsWidthChanged = function () {
          var e = this;
          this.forContainers([T.CENTER], function () {
            return e.onHorizontalViewportChanged();
          });
        }),
        (t.prototype.addPreventScrollWhileDragging = function () {
          var e = this,
            r = function (o) {
              e.dragService.isDragging() && o.cancelable && o.preventDefault();
            };
          this.eContainer.addEventListener('touchmove', r, { passive: !1 }),
            this.addDestroyFunc(function () {
              return e.eContainer.removeEventListener('touchmove', r);
            });
        }),
        (t.prototype.onHorizontalViewportChanged = function (e) {
          e === void 0 && (e = !1);
          var r = this.getCenterWidth(),
            o = this.getCenterViewportScrollLeft();
          this.columnModel.setViewportPosition(r, o, e);
        }),
        (t.prototype.getCenterWidth = function () {
          return ir(this.eViewport);
        }),
        (t.prototype.getCenterViewportScrollLeft = function () {
          return Jr(this.eViewport, this.enableRtl);
        }),
        (t.prototype.registerViewportResizeListener = function (e) {
          var r = this.resizeObserverService.observeResize(this.eViewport, e);
          this.addDestroyFunc(function () {
            return r();
          });
        }),
        (t.prototype.isViewportInTheDOMTree = function () {
          return kn(this.eViewport);
        }),
        (t.prototype.getViewportScrollLeft = function () {
          return Jr(this.eViewport, this.enableRtl);
        }),
        (t.prototype.isHorizontalScrollShowing = function () {
          var e = this.gridOptionsService.get('alwaysShowHorizontalScroll');
          return e || rl(this.eViewport);
        }),
        (t.prototype.getViewportElement = function () {
          return this.eViewport;
        }),
        (t.prototype.setContainerTranslateX = function (e) {
          this.eContainer.style.transform = 'translateX('.concat(e, 'px)');
        }),
        (t.prototype.getHScrollPosition = function () {
          var e = {
            left: this.eViewport.scrollLeft,
            right: this.eViewport.scrollLeft + this.eViewport.offsetWidth,
          };
          return e;
        }),
        (t.prototype.setCenterViewportScrollLeft = function (e) {
          Zr(this.eViewport, e, this.enableRtl);
        }),
        (t.prototype.isContainerVisible = function () {
          var e = t.getPinned(this.name);
          return !e || (!!this.pinnedWidthFeature && this.pinnedWidthFeature.getWidth() > 0);
        }),
        (t.prototype.onPinnedWidthChanged = function () {
          var e = this.isContainerVisible();
          this.visible != e && ((this.visible = e), this.onDisplayedRowsChanged());
        }),
        (t.prototype.onDisplayedRowsChanged = function (e) {
          var r = this;
          if ((e === void 0 && (e = !1), !this.visible)) {
            this.comp.setRowCtrls({ rowCtrls: this.EMPTY_CTRLS });
            return;
          }
          var o = this.gridOptionsService.isDomLayout('print'),
            i = this.gridOptionsService.get('embedFullWidthRows'),
            s = i || o,
            a = this.getRowCtrls().filter(function (l) {
              var u = l.isFullWidth(),
                c = r.isFullWithContainer ? !s && u : s || !u;
              return c;
            });
          this.comp.setRowCtrls({ rowCtrls: a, useFlushSync: e });
        }),
        (t.prototype.getRowCtrls = function () {
          switch (this.name) {
            case T.TOP_CENTER:
            case T.TOP_LEFT:
            case T.TOP_RIGHT:
            case T.TOP_FULL_WIDTH:
              return this.rowRenderer.getTopRowCtrls();
            case T.STICKY_TOP_CENTER:
            case T.STICKY_TOP_LEFT:
            case T.STICKY_TOP_RIGHT:
            case T.STICKY_TOP_FULL_WIDTH:
              return this.rowRenderer.getStickyTopRowCtrls();
            case T.BOTTOM_CENTER:
            case T.BOTTOM_LEFT:
            case T.BOTTOM_RIGHT:
            case T.BOTTOM_FULL_WIDTH:
              return this.rowRenderer.getBottomRowCtrls();
            default:
              return this.rowRenderer.getCentreRowCtrls();
          }
        }),
        xr([v('dragService')], t.prototype, 'dragService', void 0),
        xr([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        xr([v('columnModel')], t.prototype, 'columnModel', void 0),
        xr([v('resizeObserverService')], t.prototype, 'resizeObserverService', void 0),
        xr([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        xr([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    Dv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    At = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Av = `<div class="ag-root ag-unselectable" role="treegrid">
        <ag-header-root ref="gridHeader"></ag-header-root>
        <div class="ag-floating-top" ref="eTop" role="presentation">
            <ag-row-container ref="topLeftContainer" name="`
      .concat(
        T.TOP_LEFT,
        `"></ag-row-container>
            <ag-row-container ref="topCenterContainer" name="`
      )
      .concat(
        T.TOP_CENTER,
        `"></ag-row-container>
            <ag-row-container ref="topRightContainer" name="`
      )
      .concat(
        T.TOP_RIGHT,
        `"></ag-row-container>
            <ag-row-container ref="topFullWidthContainer" name="`
      )
      .concat(
        T.TOP_FULL_WIDTH,
        `"></ag-row-container>
        </div>
        <div class="ag-body" ref="eBody" role="presentation">
            <div class="ag-body-viewport" ref="eBodyViewport" role="presentation">
                <ag-row-container ref="leftContainer" name="`
      )
      .concat(
        T.LEFT,
        `"></ag-row-container>
                <ag-row-container ref="centerContainer" name="`
      )
      .concat(
        T.CENTER,
        `"></ag-row-container>
                <ag-row-container ref="rightContainer" name="`
      )
      .concat(
        T.RIGHT,
        `"></ag-row-container>
                <ag-row-container ref="fullWidthContainer" name="`
      )
      .concat(
        T.FULL_WIDTH,
        `"></ag-row-container>
            </div>
            <ag-fake-vertical-scroll></ag-fake-vertical-scroll>
        </div>
        <div class="ag-sticky-top" ref="eStickyTop" role="presentation">
            <ag-row-container ref="stickyTopLeftContainer" name="`
      )
      .concat(
        T.STICKY_TOP_LEFT,
        `"></ag-row-container>
            <ag-row-container ref="stickyTopCenterContainer" name="`
      )
      .concat(
        T.STICKY_TOP_CENTER,
        `"></ag-row-container>
            <ag-row-container ref="stickyTopRightContainer" name="`
      )
      .concat(
        T.STICKY_TOP_RIGHT,
        `"></ag-row-container>
            <ag-row-container ref="stickyTopFullWidthContainer" name="`
      )
      .concat(
        T.STICKY_TOP_FULL_WIDTH,
        `"></ag-row-container>
        </div>
        <div class="ag-floating-bottom" ref="eBottom" role="presentation">
            <ag-row-container ref="bottomLeftContainer" name="`
      )
      .concat(
        T.BOTTOM_LEFT,
        `"></ag-row-container>
            <ag-row-container ref="bottomCenterContainer" name="`
      )
      .concat(
        T.BOTTOM_CENTER,
        `"></ag-row-container>
            <ag-row-container ref="bottomRightContainer" name="`
      )
      .concat(
        T.BOTTOM_RIGHT,
        `"></ag-row-container>
            <ag-row-container ref="bottomFullWidthContainer" name="`
      )
      .concat(
        T.BOTTOM_FULL_WIDTH,
        `"></ag-row-container>
        </div>
        <ag-fake-horizontal-scroll></ag-fake-horizontal-scroll>
        <ag-overlay-wrapper></ag-overlay-wrapper>
    </div>`
      ),
    bv = (function (n) {
      Dv(t, n);
      function t() {
        return n.call(this, Av) || this;
      }
      return (
        (t.prototype.init = function () {
          var e = this,
            r = function (i, s) {
              var a = ''.concat(i, 'px');
              (s.style.minHeight = a), (s.style.height = a);
            },
            o = {
              setRowAnimationCssOnBodyViewport: function (i, s) {
                return e.setRowAnimationCssOnBodyViewport(i, s);
              },
              setColumnCount: function (i) {
                return ja(e.getGui(), i);
              },
              setRowCount: function (i) {
                return Wa(e.getGui(), i);
              },
              setTopHeight: function (i) {
                return r(i, e.eTop);
              },
              setBottomHeight: function (i) {
                return r(i, e.eBottom);
              },
              setTopDisplay: function (i) {
                return (e.eTop.style.display = i);
              },
              setBottomDisplay: function (i) {
                return (e.eBottom.style.display = i);
              },
              setStickyTopHeight: function (i) {
                return (e.eStickyTop.style.height = i);
              },
              setStickyTopTop: function (i) {
                return (e.eStickyTop.style.top = i);
              },
              setStickyTopWidth: function (i) {
                return (e.eStickyTop.style.width = i);
              },
              setColumnMovingCss: function (i, s) {
                return e.addOrRemoveCssClass(i, s);
              },
              updateLayoutClasses: function (i, s) {
                var a = [e.eBodyViewport.classList, e.eBody.classList];
                a.forEach(function (l) {
                  l.toggle(pe.AUTO_HEIGHT, s.autoHeight),
                    l.toggle(pe.NORMAL, s.normal),
                    l.toggle(pe.PRINT, s.print);
                }),
                  e.addOrRemoveCssClass(pe.AUTO_HEIGHT, s.autoHeight),
                  e.addOrRemoveCssClass(pe.NORMAL, s.normal),
                  e.addOrRemoveCssClass(pe.PRINT, s.print);
              },
              setAlwaysVerticalScrollClass: function (i, s) {
                return e.eBodyViewport.classList.toggle(eu, s);
              },
              registerBodyViewportResizeListener: function (i) {
                var s = e.resizeObserverService.observeResize(e.eBodyViewport, i);
                e.addDestroyFunc(function () {
                  return s();
                });
              },
              setPinnedTopBottomOverflowY: function (i) {
                return (e.eTop.style.overflowY = e.eBottom.style.overflowY = i);
              },
              setCellSelectableCss: function (i, s) {
                [e.eTop, e.eBodyViewport, e.eBottom].forEach(function (a) {
                  return a.classList.toggle(i, s);
                });
              },
              setBodyViewportWidth: function (i) {
                return (e.eBodyViewport.style.width = i);
              },
            };
          (this.ctrl = this.createManagedBean(new Of())),
            this.ctrl.setComp(
              o,
              this.getGui(),
              this.eBodyViewport,
              this.eTop,
              this.eBottom,
              this.eStickyTop
            ),
            ((this.rangeService && this.gridOptionsService.get('enableRangeSelection')) ||
              this.gridOptionsService.get('rowSelection') === 'multiple') &&
              ka(this.getGui(), !0);
        }),
        (t.prototype.setRowAnimationCssOnBodyViewport = function (e, r) {
          var o = this.eBodyViewport.classList;
          o.toggle(Mr.ANIMATION_ON, r), o.toggle(Mr.ANIMATION_OFF, !r);
        }),
        (t.prototype.getFloatingTopBottom = function () {
          return [this.eTop, this.eBottom];
        }),
        At([v('resizeObserverService')], t.prototype, 'resizeObserverService', void 0),
        At([Y('rangeService')], t.prototype, 'rangeService', void 0),
        At([L('eBodyViewport')], t.prototype, 'eBodyViewport', void 0),
        At([L('eStickyTop')], t.prototype, 'eStickyTop', void 0),
        At([L('eTop')], t.prototype, 'eTop', void 0),
        At([L('eBottom')], t.prototype, 'eBottom', void 0),
        At([L('gridHeader')], t.prototype, 'headerRootComp', void 0),
        At([L('eBody')], t.prototype, 'eBody', void 0),
        At([F], t.prototype, 'init', null),
        t
      );
    })(k),
    Fv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    yi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Lv = (function (n) {
      Fv(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addManagedListener(
            this.eventService,
            g.EVENT_DISPLAYED_COLUMNS_CHANGED,
            this.onDisplayedColumnsChanged.bind(this)
          ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
              this.onDisplayedColumnsWidthChanged.bind(this)
            );
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          this.update();
        }),
        (t.prototype.onDisplayedColumnsWidthChanged = function () {
          this.update();
        }),
        (t.prototype.update = function () {
          var e = this;
          this.columnAnimationService.isActive()
            ? this.columnAnimationService.executeLaterVMTurn(function () {
                e.columnAnimationService.executeLaterVMTurn(function () {
                  return e.updateImpl();
                });
              })
            : this.updateImpl();
        }),
        (t.prototype.updateImpl = function () {
          var e = this.ctrlsService.getCenterRowContainerCtrl();
          if (!(!e || this.columnAnimationService.isActive())) {
            var r = {
              horizontalScrollShowing: e.isHorizontalScrollShowing(),
              verticalScrollShowing: this.isVerticalScrollShowing(),
            };
            this.setScrollsVisible(r);
          }
        }),
        (t.prototype.setScrollsVisible = function (e) {
          var r =
            this.horizontalScrollShowing !== e.horizontalScrollShowing ||
            this.verticalScrollShowing !== e.verticalScrollShowing;
          if (r) {
            (this.horizontalScrollShowing = e.horizontalScrollShowing),
              (this.verticalScrollShowing = e.verticalScrollShowing);
            var o = { type: g.EVENT_SCROLL_VISIBILITY_CHANGED };
            this.eventService.dispatchEvent(o);
          }
        }),
        (t.prototype.isHorizontalScrollShowing = function () {
          return this.horizontalScrollShowing;
        }),
        (t.prototype.isVerticalScrollShowing = function () {
          return this.verticalScrollShowing;
        }),
        yi([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        yi([v('columnAnimationService')], t.prototype, 'columnAnimationService', void 0),
        yi([F], t.prototype, 'postConstruct', null),
        (t = yi([x('scrollVisibleService')], t)),
        t
      );
    })(D),
    Mv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    uu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Iv = (function (n) {
      Mv(t, n);
      function t() {
        var r = (n !== null && n.apply(this, arguments)) || this;
        return (r.gridInstanceId = e.gridInstanceSequence.next()), r;
      }
      (e = t),
        (t.prototype.stampTopLevelGridCompWithGridInstance = function (r) {
          r[e.GRID_DOM_KEY] = this.gridInstanceId;
        }),
        (t.prototype.getRenderedCellForEvent = function (r) {
          return ko(this.gridOptionsService, r.target, hr.DOM_DATA_KEY_CELL_CTRL);
        }),
        (t.prototype.isEventFromThisGrid = function (r) {
          var o = this.isElementInThisGrid(r.target);
          return o;
        }),
        (t.prototype.isElementInThisGrid = function (r) {
          for (var o = r; o; ) {
            var i = o[e.GRID_DOM_KEY];
            if (P(i)) {
              var s = i === this.gridInstanceId;
              return s;
            }
            o = o.parentElement;
          }
          return !1;
        }),
        (t.prototype.getCellPositionForEvent = function (r) {
          var o = this.getRenderedCellForEvent(r);
          return o ? o.getCellPosition() : null;
        }),
        (t.prototype.getNormalisedPosition = function (r) {
          var o = this.gridOptionsService.isDomLayout('normal'),
            i = r,
            s,
            a;
          if (
            (i.clientX != null || i.clientY != null
              ? ((s = i.clientX), (a = i.clientY))
              : ((s = i.x), (a = i.y)),
            o)
          ) {
            var l = this.ctrlsService.getGridBodyCtrl(),
              u = l.getScrollFeature().getVScrollPosition(),
              c = l.getScrollFeature().getHScrollPosition();
            (s += c.left), (a += u.top);
          }
          return { x: s, y: a };
        });
      var e;
      return (
        (t.gridInstanceSequence = new Dr()),
        (t.GRID_DOM_KEY = '__ag_grid_instance'),
        uu([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        (t = e = uu([x('mouseEventService')], t)),
        t
      );
    })(D),
    xv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    mi = function () {
      return (
        (mi =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        mi.apply(this, arguments)
      );
    },
    Ae = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Nv = (function (n) {
      xv(t, n);
      function t() {
        var e = n.call(this) || this;
        return (e.onPageDown = Zi(e.onPageDown, 100)), (e.onPageUp = Zi(e.onPageUp, 100)), e;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.ctrlsService.whenReady(function (r) {
            e.gridBodyCon = r.gridBodyCtrl;
          });
        }),
        (t.prototype.handlePageScrollingKey = function (e, r) {
          r === void 0 && (r = !1);
          var o = e.key,
            i = e.altKey,
            s = e.ctrlKey || e.metaKey,
            a = !!this.rangeService && e.shiftKey,
            l = this.mouseEventService.getCellPositionForEvent(e),
            u = !1;
          switch (o) {
            case _.PAGE_HOME:
            case _.PAGE_END:
              !s && !i && (this.onHomeOrEndKey(o), (u = !0));
              break;
            case _.LEFT:
            case _.RIGHT:
            case _.UP:
            case _.DOWN:
              if (!l) return !1;
              s && !i && !a && (this.onCtrlUpDownLeftRight(o, l), (u = !0));
              break;
            case _.PAGE_DOWN:
            case _.PAGE_UP:
              !s && !i && (u = this.handlePageUpDown(o, l, r));
              break;
          }
          return u && e.preventDefault(), u;
        }),
        (t.prototype.handlePageUpDown = function (e, r, o) {
          return (
            o && (r = this.focusService.getFocusedCell()),
            r ? (e === _.PAGE_UP ? this.onPageUp(r) : this.onPageDown(r), !0) : !1
          );
        }),
        (t.prototype.navigateTo = function (e) {
          var r = e.scrollIndex,
            o = e.scrollType,
            i = e.scrollColumn,
            s = e.focusIndex,
            a = e.focusColumn;
          if (
            (P(i) && !i.isPinned() && this.gridBodyCon.getScrollFeature().ensureColumnVisible(i),
            P(r) && this.gridBodyCon.getScrollFeature().ensureIndexVisible(r, o),
            e.isAsync || this.gridBodyCon.getScrollFeature().ensureIndexVisible(s),
            this.focusService.setFocusedCell({
              rowIndex: s,
              column: a,
              rowPinned: null,
              forceBrowserFocus: !0,
            }),
            this.rangeService)
          ) {
            var l = { rowIndex: s, rowPinned: null, column: a };
            this.rangeService.setRangeToCell(l);
          }
        }),
        (t.prototype.onPageDown = function (e) {
          var r = this.ctrlsService.getGridBodyCtrl(),
            o = r.getScrollFeature().getVScrollPosition(),
            i = this.getViewportHeight(),
            s = this.paginationProxy.getPixelOffset(),
            a = o.top + i,
            l = this.paginationProxy.getRowIndexAtPixel(a + s);
          this.columnModel.isAutoRowHeightActive()
            ? this.navigateToNextPageWithAutoHeight(e, l)
            : this.navigateToNextPage(e, l);
        }),
        (t.prototype.onPageUp = function (e) {
          var r = this.ctrlsService.getGridBodyCtrl(),
            o = r.getScrollFeature().getVScrollPosition(),
            i = this.paginationProxy.getPixelOffset(),
            s = o.top,
            a = this.paginationProxy.getRowIndexAtPixel(s + i);
          this.columnModel.isAutoRowHeightActive()
            ? this.navigateToNextPageWithAutoHeight(e, a, !0)
            : this.navigateToNextPage(e, a, !0);
        }),
        (t.prototype.navigateToNextPage = function (e, r, o) {
          o === void 0 && (o = !1);
          var i = this.getViewportHeight(),
            s = this.paginationProxy.getPageFirstRow(),
            a = this.paginationProxy.getPageLastRow(),
            l = this.paginationProxy.getPixelOffset(),
            u = this.paginationProxy.getRow(e.rowIndex),
            c = o ? (u == null ? void 0 : u.rowHeight) - i - l : i - l,
            p = (u == null ? void 0 : u.rowTop) + c,
            d = this.paginationProxy.getRowIndexAtPixel(p + l);
          if (d === e.rowIndex) {
            var h = o ? -1 : 1;
            r = d = e.rowIndex + h;
          }
          var f;
          o
            ? ((f = 'bottom'), d < s && (d = s), r < s && (r = s))
            : ((f = 'top'), d > a && (d = a), r > a && (r = a)),
            this.isRowTallerThanView(d) && ((r = d), (f = 'top')),
            this.navigateTo({
              scrollIndex: r,
              scrollType: f,
              scrollColumn: null,
              focusIndex: d,
              focusColumn: e.column,
            });
        }),
        (t.prototype.navigateToNextPageWithAutoHeight = function (e, r, o) {
          var i = this;
          o === void 0 && (o = !1),
            this.navigateTo({
              scrollIndex: r,
              scrollType: o ? 'bottom' : 'top',
              scrollColumn: null,
              focusIndex: r,
              focusColumn: e.column,
            }),
            setTimeout(function () {
              var s = i.getNextFocusIndexForAutoHeight(e, o);
              i.navigateTo({
                scrollIndex: r,
                scrollType: o ? 'bottom' : 'top',
                scrollColumn: null,
                focusIndex: s,
                focusColumn: e.column,
                isAsync: !0,
              });
            }, 50);
        }),
        (t.prototype.getNextFocusIndexForAutoHeight = function (e, r) {
          var o;
          r === void 0 && (r = !1);
          for (
            var i = r ? -1 : 1,
              s = this.getViewportHeight(),
              a = this.paginationProxy.getPageLastRow(),
              l = 0,
              u = e.rowIndex;
            u >= 0 && u <= a;

          ) {
            var c = this.paginationProxy.getRow(u);
            if (c) {
              var p = (o = c.rowHeight) !== null && o !== void 0 ? o : 0;
              if (l + p > s) break;
              l += p;
            }
            u += i;
          }
          return Math.max(0, Math.min(u, a));
        }),
        (t.prototype.getViewportHeight = function () {
          var e = this.ctrlsService.getGridBodyCtrl(),
            r = e.getScrollFeature().getVScrollPosition(),
            o = this.gridOptionsService.getScrollbarWidth(),
            i = r.bottom - r.top;
          return (
            this.ctrlsService.getCenterRowContainerCtrl().isHorizontalScrollShowing() && (i -= o), i
          );
        }),
        (t.prototype.isRowTallerThanView = function (e) {
          var r = this.paginationProxy.getRow(e);
          if (!r) return !1;
          var o = r.rowHeight;
          return typeof o != 'number' ? !1 : o > this.getViewportHeight();
        }),
        (t.prototype.onCtrlUpDownLeftRight = function (e, r) {
          var o = this.cellNavigationService.getNextCellToFocus(e, r, !0),
            i = o.rowIndex,
            s = o.column;
          this.navigateTo({
            scrollIndex: i,
            scrollType: null,
            scrollColumn: s,
            focusIndex: i,
            focusColumn: s,
          });
        }),
        (t.prototype.onHomeOrEndKey = function (e) {
          var r = e === _.PAGE_HOME,
            o = this.columnModel.getAllDisplayedColumns(),
            i = r ? o[0] : q(o),
            s = r ? this.paginationProxy.getPageFirstRow() : this.paginationProxy.getPageLastRow();
          this.navigateTo({
            scrollIndex: s,
            scrollType: null,
            scrollColumn: i,
            focusIndex: s,
            focusColumn: i,
          });
        }),
        (t.prototype.onTabKeyDown = function (e, r) {
          var o = r.shiftKey,
            i = this.tabToNextCellCommon(e, o, r);
          if (i) {
            r.preventDefault();
            return;
          }
          if (o) {
            var s = e.getRowPosition(),
              a = s.rowIndex,
              l = s.rowPinned,
              u = l ? a === 0 : a === this.paginationProxy.getPageFirstRow();
            u &&
              (this.gridOptionsService.get('headerHeight') === 0 ||
              this.gridOptionsService.get('suppressHeaderFocus')
                ? this.focusService.focusNextGridCoreContainer(!0, !0)
                : (r.preventDefault(), this.focusService.focusPreviousFromFirstCell(r)));
          } else
            e instanceof hr && e.focusCell(!0),
              this.focusService.focusNextGridCoreContainer(o) && r.preventDefault();
        }),
        (t.prototype.tabToNextCell = function (e, r) {
          var o = this.focusService.getFocusedCell();
          if (!o) return !1;
          var i = this.getCellByPosition(o);
          return !i && ((i = this.rowRenderer.getRowByPosition(o)), !i || !i.isFullWidth())
            ? !1
            : this.tabToNextCellCommon(i, e, r);
        }),
        (t.prototype.tabToNextCellCommon = function (e, r, o) {
          var i = e.isEditing();
          if (!i && e instanceof hr) {
            var s = e,
              a = s.getRowCtrl();
            a && (i = a.isEditing());
          }
          var l;
          return (
            i
              ? this.gridOptionsService.get('editType') === 'fullRow'
                ? (l = this.moveToNextEditingRow(e, r, o))
                : (l = this.moveToNextEditingCell(e, r, o))
              : (l = this.moveToNextCellNotEditing(e, r)),
            l || !!this.focusService.getFocusedHeader()
          );
        }),
        (t.prototype.moveToNextEditingCell = function (e, r, o) {
          o === void 0 && (o = null);
          var i = e.getCellPosition();
          e.getGui().focus(), e.stopEditing();
          var s = this.findNextCellToFocusOn(i, r, !0);
          return s == null ? !1 : (s.startEditing(null, !0, o), s.focusCell(!1), !0);
        }),
        (t.prototype.moveToNextEditingRow = function (e, r, o) {
          o === void 0 && (o = null);
          var i = e.getCellPosition(),
            s = this.findNextCellToFocusOn(i, r, !0);
          if (s == null) return !1;
          var a = s.getCellPosition(),
            l = this.isCellEditable(i),
            u = this.isCellEditable(a),
            c = a && i.rowIndex === a.rowIndex && i.rowPinned === a.rowPinned;
          if ((l && e.setFocusOutOnEditor(), !c)) {
            var p = e.getRowCtrl();
            p.stopEditing();
            var d = s.getRowCtrl();
            d.startRowEditing(void 0, void 0, o);
          }
          return u ? (s.setFocusInOnEditor(), s.focusCell()) : s.focusCell(!0), !0;
        }),
        (t.prototype.moveToNextCellNotEditing = function (e, r) {
          var o = this.columnModel.getAllDisplayedColumns(),
            i;
          e instanceof fr
            ? (i = mi(mi({}, e.getRowPosition()), { column: r ? o[0] : q(o) }))
            : (i = e.getCellPosition());
          var s = this.findNextCellToFocusOn(i, r, !1);
          if (s instanceof hr) s.focusCell(!0);
          else if (s) return this.tryToFocusFullWidthRow(s.getRowPosition(), r);
          return P(s);
        }),
        (t.prototype.findNextCellToFocusOn = function (e, r, o) {
          for (var i = e; ; ) {
            e !== i && (e = i),
              r || (i = this.getLastCellOfColSpan(i)),
              (i = this.cellNavigationService.getNextTabbedCell(i, r));
            var s = this.gridOptionsService.getCallback('tabToNextCell');
            if (P(s)) {
              var a = {
                  backwards: r,
                  editing: o,
                  previousCellPosition: e,
                  nextCellPosition: i || null,
                },
                l = s(a);
              P(l)
                ? (l.floating &&
                    (V(
                      "tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?"
                    ),
                    (l.rowPinned = l.floating)),
                  (i = { rowIndex: l.rowIndex, column: l.column, rowPinned: l.rowPinned }))
                : (i = null);
            }
            if (!i) return null;
            if (i.rowIndex < 0) {
              var u = this.headerNavigationService.getHeaderRowCount();
              return (
                this.focusService.focusHeaderPosition({
                  headerPosition: { headerRowIndex: u + i.rowIndex, column: i.column },
                  fromCell: !0,
                }),
                null
              );
            }
            var c = this.gridOptionsService.get('editType') === 'fullRow';
            if (o && !c) {
              var p = this.isCellEditable(i);
              if (!p) continue;
            }
            this.ensureCellVisible(i);
            var d = this.getCellByPosition(i);
            if (!d) {
              var h = this.rowRenderer.getRowByPosition(i);
              if (!h || !h.isFullWidth() || o) continue;
              return h;
            }
            if (!d.isSuppressNavigable())
              return this.rangeService && this.rangeService.setRangeToCell(i), d;
          }
        }),
        (t.prototype.isCellEditable = function (e) {
          var r = this.lookupRowNodeForCell(e);
          return r ? e.column.isCellEditable(r) : !1;
        }),
        (t.prototype.getCellByPosition = function (e) {
          var r = this.rowRenderer.getRowByPosition(e);
          return r ? r.getCellCtrl(e.column) : null;
        }),
        (t.prototype.lookupRowNodeForCell = function (e) {
          return e.rowPinned === 'top'
            ? this.pinnedRowModel.getPinnedTopRow(e.rowIndex)
            : e.rowPinned === 'bottom'
            ? this.pinnedRowModel.getPinnedBottomRow(e.rowIndex)
            : this.paginationProxy.getRow(e.rowIndex);
        }),
        (t.prototype.navigateToNextCell = function (e, r, o, i) {
          for (var s = o, a = !1; s && (s === o || !this.isValidNavigateCell(s)); )
            this.gridOptionsService.get('enableRtl')
              ? r === _.LEFT && (s = this.getLastCellOfColSpan(s))
              : r === _.RIGHT && (s = this.getLastCellOfColSpan(s)),
              (s = this.cellNavigationService.getNextCellToFocus(r, s)),
              (a = H(s));
          if (
            (a && e && e.key === _.UP && (s = { rowIndex: -1, rowPinned: null, column: o.column }),
            i)
          ) {
            var l = this.gridOptionsService.getCallback('navigateToNextCell');
            if (P(l)) {
              var u = { key: r, previousCellPosition: o, nextCellPosition: s || null, event: e },
                c = l(u);
              P(c)
                ? (c.floating &&
                    (V(
                      "tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?"
                    ),
                    (c.rowPinned = c.floating)),
                  (s = { rowPinned: c.rowPinned, rowIndex: c.rowIndex, column: c.column }))
                : (s = null);
            }
          }
          if (s) {
            if (s.rowIndex < 0) {
              var p = this.headerNavigationService.getHeaderRowCount();
              this.focusService.focusHeaderPosition({
                headerPosition: { headerRowIndex: p + s.rowIndex, column: o.column },
                event: e || void 0,
                fromCell: !0,
              });
              return;
            }
            var d = this.getNormalisedPosition(s);
            d ? this.focusPosition(d) : this.tryToFocusFullWidthRow(s);
          }
        }),
        (t.prototype.getNormalisedPosition = function (e) {
          this.ensureCellVisible(e);
          var r = this.getCellByPosition(e);
          return r ? ((e = r.getCellPosition()), this.ensureCellVisible(e), e) : null;
        }),
        (t.prototype.tryToFocusFullWidthRow = function (e, r) {
          r === void 0 && (r = !1);
          var o = this.columnModel.getAllDisplayedColumns(),
            i = this.rowRenderer.getRowByPosition(e);
          if (!i || !i.isFullWidth()) return !1;
          var s = this.focusService.getFocusedCell(),
            a = {
              rowIndex: e.rowIndex,
              rowPinned: e.rowPinned,
              column: e.column || (r ? q(o) : o[0]),
            };
          this.focusPosition(a);
          var l = s != null ? this.rowPositionUtils.before(a, s) : !1,
            u = {
              type: g.EVENT_FULL_WIDTH_ROW_FOCUSED,
              rowIndex: a.rowIndex,
              rowPinned: a.rowPinned,
              column: a.column,
              isFullWidthCell: !0,
              floating: a.rowPinned,
              fromBelow: l,
            };
          return this.eventService.dispatchEvent(u), !0;
        }),
        (t.prototype.focusPosition = function (e) {
          this.focusService.setFocusedCell({
            rowIndex: e.rowIndex,
            column: e.column,
            rowPinned: e.rowPinned,
            forceBrowserFocus: !0,
          }),
            this.rangeService && this.rangeService.setRangeToCell(e);
        }),
        (t.prototype.isValidNavigateCell = function (e) {
          var r = this.rowPositionUtils.getRowNode(e);
          return !!r;
        }),
        (t.prototype.getLastCellOfColSpan = function (e) {
          var r = this.getCellByPosition(e);
          if (!r) return e;
          var o = r.getColSpanningList();
          return o.length === 1
            ? e
            : { rowIndex: e.rowIndex, column: q(o), rowPinned: e.rowPinned };
        }),
        (t.prototype.ensureCellVisible = function (e) {
          var r = this.gridOptionsService.isGroupRowsSticky(),
            o = this.rowModel.getRow(e.rowIndex),
            i = r && (o == null ? void 0 : o.sticky);
          !i &&
            H(e.rowPinned) &&
            this.gridBodyCon.getScrollFeature().ensureIndexVisible(e.rowIndex),
            e.column.isPinned() ||
              this.gridBodyCon.getScrollFeature().ensureColumnVisible(e.column);
        }),
        Ae([v('mouseEventService')], t.prototype, 'mouseEventService', void 0),
        Ae([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        Ae([v('focusService')], t.prototype, 'focusService', void 0),
        Ae([Y('rangeService')], t.prototype, 'rangeService', void 0),
        Ae([v('columnModel')], t.prototype, 'columnModel', void 0),
        Ae([v('rowModel')], t.prototype, 'rowModel', void 0),
        Ae([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Ae([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        Ae([v('headerNavigationService')], t.prototype, 'headerNavigationService', void 0),
        Ae([v('rowPositionUtils')], t.prototype, 'rowPositionUtils', void 0),
        Ae([v('cellNavigationService')], t.prototype, 'cellNavigationService', void 0),
        Ae([v('pinnedRowModel')], t.prototype, 'pinnedRowModel', void 0),
        Ae([F], t.prototype, 'postConstruct', null),
        (t = Ae([x('navigationService')], t)),
        t
      );
    })(D),
    Gv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Vv = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Hv = (function (n) {
      Gv(t, n);
      function t(e) {
        var r = n.call(this, '<div class="ag-popup-editor" tabindex="-1"/>') || this;
        return (r.params = e), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.gridOptionsService.setDomData(this.getGui(), t.DOM_KEY_POPUP_EDITOR_WRAPPER, !0),
            this.addKeyDownListener();
        }),
        (t.prototype.addKeyDownListener = function () {
          var e = this,
            r = this.getGui(),
            o = this.params,
            i = function (s) {
              Jo(e.gridOptionsService, s, o.node, o.column, !0) || o.onKeyDown(s);
            };
          this.addManagedListener(r, 'keydown', i);
        }),
        (t.DOM_KEY_POPUP_EDITOR_WRAPPER = 'popupEditorWrapper'),
        Vv([F], t.prototype, 'postConstruct', null),
        t
      );
    })(cr),
    Bv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    kv = (function (n) {
      Bv(t, n);
      function t(e, r, o, i, s) {
        var a = n.call(this) || this;
        (a.rendererVersion = 0),
          (a.editorVersion = 0),
          (a.beans = e),
          (a.column = r.getColumn()),
          (a.rowNode = r.getRowNode()),
          (a.rowCtrl = r.getRowCtrl()),
          (a.eRow = i),
          (a.cellCtrl = r);
        var l = document.createElement('div');
        l.setAttribute('comp-id', ''.concat(a.getCompId())), a.setTemplateFromElement(l);
        var u = a.getGui();
        (a.forceWrapper = r.isForceWrapper()), a.refreshWrapper(!1);
        var c = function (h, f) {
          f != null && f != '' ? u.setAttribute(h, f) : u.removeAttribute(h);
        };
        le(u, r.getCellAriaRole()), c('col-id', r.getColumnIdSanitised());
        var p = r.getTabIndex();
        p !== void 0 && c('tabindex', p.toString());
        var d = {
          addOrRemoveCssClass: function (h, f) {
            return a.addOrRemoveCssClass(h, f);
          },
          setUserStyles: function (h) {
            return Un(u, h);
          },
          getFocusableElement: function () {
            return a.getFocusableElement();
          },
          setIncludeSelection: function (h) {
            return (a.includeSelection = h);
          },
          setIncludeRowDrag: function (h) {
            return (a.includeRowDrag = h);
          },
          setIncludeDndSource: function (h) {
            return (a.includeDndSource = h);
          },
          setRenderDetails: function (h, f, y) {
            return a.setRenderDetails(h, f, y);
          },
          setEditDetails: function (h, f, y) {
            return a.setEditDetails(h, f, y);
          },
          getCellEditor: function () {
            return a.cellEditor || null;
          },
          getCellRenderer: function () {
            return a.cellRenderer || null;
          },
          getParentOfValue: function () {
            return a.getParentOfValue();
          },
        };
        return r.setComp(d, a.getGui(), a.eCellWrapper, o, s), a;
      }
      return (
        (t.prototype.getParentOfValue = function () {
          return this.eCellValue
            ? this.eCellValue
            : this.eCellWrapper
            ? this.eCellWrapper
            : this.getGui();
        }),
        (t.prototype.setRenderDetails = function (e, r, o) {
          var i = this.cellEditor && !this.cellEditorPopupWrapper;
          if (!i) {
            this.firstRender = this.firstRender == null;
            var s = this.refreshWrapper(!1);
            if ((this.refreshEditStyles(!1), e)) {
              var a = o || s,
                l = a ? !1 : this.refreshCellRenderer(e);
              l || (this.destroyRenderer(), this.createCellRendererInstance(e));
            } else this.destroyRenderer(), this.insertValueWithoutCellRenderer(r);
          }
        }),
        (t.prototype.setEditDetails = function (e, r, o) {
          e ? this.createCellEditorInstance(e, r, o) : this.destroyEditor();
        }),
        (t.prototype.removeControls = function () {
          (this.checkboxSelectionComp = this.beans.context.destroyBean(this.checkboxSelectionComp)),
            (this.dndSourceComp = this.beans.context.destroyBean(this.dndSourceComp)),
            (this.rowDraggingComp = this.beans.context.destroyBean(this.rowDraggingComp));
        }),
        (t.prototype.refreshWrapper = function (e) {
          var r = this.includeRowDrag || this.includeDndSource || this.includeSelection,
            o = r || this.forceWrapper,
            i = o && this.eCellWrapper == null;
          if (i) {
            var s = document.createElement('div');
            s.setAttribute('role', 'presentation'),
              s.setAttribute('class', 'ag-cell-wrapper'),
              (this.eCellWrapper = s),
              this.getGui().appendChild(this.eCellWrapper);
          }
          var a = !o && this.eCellWrapper != null;
          a && (ft(this.eCellWrapper), (this.eCellWrapper = void 0)),
            this.addOrRemoveCssClass('ag-cell-value', !o);
          var l = !e && o,
            u = l && this.eCellValue == null;
          if (u) {
            var c = document.createElement('span');
            c.setAttribute('role', 'presentation'),
              c.setAttribute('class', 'ag-cell-value'),
              (this.eCellValue = c),
              this.eCellWrapper.appendChild(this.eCellValue);
          }
          var p = !l && this.eCellValue != null;
          p && (ft(this.eCellValue), (this.eCellValue = void 0));
          var d = i || a || u || p;
          return d && this.removeControls(), e || (r && this.addControls()), d;
        }),
        (t.prototype.addControls = function () {
          this.includeRowDrag &&
            this.rowDraggingComp == null &&
            ((this.rowDraggingComp = this.cellCtrl.createRowDragComp()),
            this.rowDraggingComp &&
              this.eCellWrapper.insertBefore(this.rowDraggingComp.getGui(), this.eCellValue)),
            this.includeDndSource &&
              this.dndSourceComp == null &&
              ((this.dndSourceComp = this.cellCtrl.createDndSource()),
              this.eCellWrapper.insertBefore(this.dndSourceComp.getGui(), this.eCellValue)),
            this.includeSelection &&
              this.checkboxSelectionComp == null &&
              ((this.checkboxSelectionComp = this.cellCtrl.createSelectionCheckbox()),
              this.eCellWrapper.insertBefore(this.checkboxSelectionComp.getGui(), this.eCellValue));
        }),
        (t.prototype.createCellEditorInstance = function (e, r, o) {
          var i = this,
            s = this.editorVersion,
            a = e.newAgStackInstance();
          if (a) {
            var l = e.params;
            a.then(function (c) {
              return i.afterCellEditorCreated(s, c, l, r, o);
            });
            var u = H(this.cellEditor);
            u && l.cellStartedEdit && this.cellCtrl.focusCell(!0);
          }
        }),
        (t.prototype.insertValueWithoutCellRenderer = function (e) {
          var r = this.getParentOfValue();
          de(r);
          var o = e != null ? ae(e, !0) : null;
          o != null && (r.textContent = o);
        }),
        (t.prototype.destroyEditorAndRenderer = function () {
          this.destroyRenderer(), this.destroyEditor();
        }),
        (t.prototype.destroyRenderer = function () {
          var e = this.beans.context;
          (this.cellRenderer = e.destroyBean(this.cellRenderer)),
            ft(this.cellRendererGui),
            (this.cellRendererGui = null),
            this.rendererVersion++;
        }),
        (t.prototype.destroyEditor = function () {
          var e = this.beans.context;
          this.hideEditorPopup && this.hideEditorPopup(),
            (this.hideEditorPopup = void 0),
            (this.cellEditor = e.destroyBean(this.cellEditor)),
            (this.cellEditorPopupWrapper = e.destroyBean(this.cellEditorPopupWrapper)),
            ft(this.cellEditorGui),
            (this.cellEditorGui = null),
            this.editorVersion++;
        }),
        (t.prototype.refreshCellRenderer = function (e) {
          if (
            this.cellRenderer == null ||
            this.cellRenderer.refresh == null ||
            this.cellRendererClass !== e.componentClass
          )
            return !1;
          var r = this.cellRenderer.refresh(e.params);
          return r === !0 || r === void 0;
        }),
        (t.prototype.createCellRendererInstance = function (e) {
          var r = this,
            o = this.beans.gridOptionsService.get('suppressAnimationFrame'),
            i = !o,
            s = this.rendererVersion,
            a = e.componentClass,
            l = function () {
              var u = r.rendererVersion !== s || !r.isAlive();
              if (!u) {
                var c = e.newAgStackInstance(),
                  p = r.afterCellRendererCreated.bind(r, s, a);
                c && c.then(p);
              }
            };
          i && this.firstRender
            ? this.beans.animationFrameService.createTask(l, this.rowNode.rowIndex, 'createTasksP2')
            : l();
        }),
        (t.prototype.getCtrl = function () {
          return this.cellCtrl;
        }),
        (t.prototype.getRowCtrl = function () {
          return this.rowCtrl;
        }),
        (t.prototype.getCellRenderer = function () {
          return this.cellRenderer;
        }),
        (t.prototype.getCellEditor = function () {
          return this.cellEditor;
        }),
        (t.prototype.afterCellRendererCreated = function (e, r, o) {
          var i = !this.isAlive() || e !== this.rendererVersion;
          if (i) {
            this.beans.context.destroyBean(o);
            return;
          }
          if (
            ((this.cellRenderer = o),
            (this.cellRendererClass = r),
            (this.cellRendererGui = this.cellRenderer.getGui()),
            this.cellRendererGui != null)
          ) {
            var s = this.getParentOfValue();
            de(s), s.appendChild(this.cellRendererGui);
          }
        }),
        (t.prototype.afterCellEditorCreated = function (e, r, o, i, s) {
          var a = e !== this.editorVersion;
          if (a) {
            this.beans.context.destroyBean(r);
            return;
          }
          var l = r.isCancelBeforeStart && r.isCancelBeforeStart();
          if (l) {
            this.beans.context.destroyBean(r), this.cellCtrl.stopEditing(!0);
            return;
          }
          if (!r.getGui) {
            console.warn(
              'AG Grid: cellEditor for column '.concat(
                this.column.getId(),
                ' is missing getGui() method'
              )
            ),
              this.beans.context.destroyBean(r);
            return;
          }
          (this.cellEditor = r), (this.cellEditorGui = r.getGui());
          var u = i || (r.isPopup !== void 0 && r.isPopup());
          u ? this.addPopupCellEditor(o, s) : this.addInCellEditor(),
            this.refreshEditStyles(!0, u),
            r.afterGuiAttached && r.afterGuiAttached();
        }),
        (t.prototype.refreshEditStyles = function (e, r) {
          var o;
          this.addOrRemoveCssClass('ag-cell-inline-editing', e && !r),
            this.addOrRemoveCssClass('ag-cell-popup-editing', e && !!r),
            this.addOrRemoveCssClass('ag-cell-not-inline-editing', !e || !!r),
            (o = this.rowCtrl) === null || o === void 0 || o.setInlineEditingCss(e);
        }),
        (t.prototype.addInCellEditor = function () {
          var e = this.getGui(),
            r = this.beans.gridOptionsService.getDocument();
          if (
            (e.contains(r.activeElement) && e.focus(),
            this.destroyRenderer(),
            this.refreshWrapper(!0),
            this.clearParentOfValue(),
            this.cellEditorGui)
          ) {
            var o = this.getParentOfValue();
            o.appendChild(this.cellEditorGui);
          }
        }),
        (t.prototype.addPopupCellEditor = function (e, r) {
          var o = this;
          this.beans.gridOptionsService.get('editType') === 'fullRow' &&
            console.warn(
              'AG Grid: popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors.'
            );
          var i = this.cellEditor;
          this.cellEditorPopupWrapper = this.beans.context.createBean(new Hv(e));
          var s = this.cellEditorPopupWrapper.getGui();
          this.cellEditorGui && s.appendChild(this.cellEditorGui);
          var a = this.beans.popupService,
            l = this.beans.gridOptionsService.get('stopEditingWhenCellsLoseFocus'),
            u = r ?? (i.getPopupPosition ? i.getPopupPosition() : 'over'),
            c = this.beans.gridOptionsService.get('enableRtl'),
            p = {
              ePopup: s,
              column: this.column,
              rowNode: this.rowNode,
              type: 'popupCellEditor',
              eventSource: this.getGui(),
              position: u,
              alignSide: c ? 'right' : 'left',
              keepWithinBounds: !0,
            },
            d = a.positionPopupByComponent.bind(a, p),
            h = this.beans.localeService.getLocaleTextFunc(),
            f = a.addPopup({
              modal: l,
              eChild: s,
              closeOnEsc: !0,
              closedCallback: function () {
                o.cellCtrl.onPopupEditorClosed();
              },
              anchorToElement: this.getGui(),
              positionCallback: d,
              ariaLabel: h('ariaLabelCellEditor', 'Cell Editor'),
            });
          f && (this.hideEditorPopup = f.hideFunc);
        }),
        (t.prototype.detach = function () {
          this.eRow.removeChild(this.getGui());
        }),
        (t.prototype.destroy = function () {
          this.cellCtrl.stopEditing(),
            this.destroyEditorAndRenderer(),
            this.removeControls(),
            n.prototype.destroy.call(this);
        }),
        (t.prototype.clearParentOfValue = function () {
          var e = this.getGui(),
            r = this.beans.gridOptionsService.getDocument();
          e.contains(r.activeElement) && Fn() && e.focus({ preventScroll: !0 }),
            de(this.getParentOfValue());
        }),
        t
      );
    })(k),
    Wv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    jv = (function (n) {
      Wv(t, n);
      function t(e, r, o) {
        var i = n.call(this) || this;
        (i.cellComps = {}), (i.beans = r), (i.rowCtrl = e);
        var s = document.createElement('div');
        s.setAttribute('comp-id', ''.concat(i.getCompId())),
          s.setAttribute('style', i.getInitialStyle(o)),
          i.setTemplateFromElement(s);
        var a = i.getGui(),
          l = a.style;
        (i.domOrder = i.rowCtrl.getDomOrder()), le(a, 'row');
        var u = i.rowCtrl.getTabIndex();
        u != null && a.setAttribute('tabindex', u.toString());
        var c = {
          setDomOrder: function (p) {
            return (i.domOrder = p);
          },
          setCellCtrls: function (p) {
            return i.setCellCtrls(p);
          },
          showFullWidth: function (p) {
            return i.showFullWidth(p);
          },
          getFullWidthCellRenderer: function () {
            return i.getFullWidthCellRenderer();
          },
          addOrRemoveCssClass: function (p, d) {
            return i.addOrRemoveCssClass(p, d);
          },
          setUserStyles: function (p) {
            return Un(a, p);
          },
          setTop: function (p) {
            return (l.top = p);
          },
          setTransform: function (p) {
            return (l.transform = p);
          },
          setRowIndex: function (p) {
            return a.setAttribute('row-index', p);
          },
          setRowId: function (p) {
            return a.setAttribute('row-id', p);
          },
          setRowBusinessKey: function (p) {
            return a.setAttribute('row-business-key', p);
          },
          refreshFullWidth: function (p) {
            return i.refreshFullWidth(p);
          },
        };
        return (
          e.setComp(c, i.getGui(), o),
          i.addDestroyFunc(function () {
            e.unsetComp(o);
          }),
          i
        );
      }
      return (
        (t.prototype.getInitialStyle = function (e) {
          var r = this.rowCtrl.getInitialTransform(e);
          return r ? 'transform: '.concat(r) : 'top: '.concat(this.rowCtrl.getInitialRowTop(e));
        }),
        (t.prototype.showFullWidth = function (e) {
          var r = this,
            o = function (s) {
              if (r.isAlive()) {
                var a = s.getGui();
                r.getGui().appendChild(a),
                  r.rowCtrl.setupDetailRowAutoHeight(a),
                  r.setFullWidthRowComp(s);
              } else r.beans.context.destroyBean(s);
            },
            i = e.newAgStackInstance();
          i && i.then(o);
        }),
        (t.prototype.setCellCtrls = function (e) {
          var r = this,
            o = Object.assign({}, this.cellComps);
          e.forEach(function (s) {
            var a = s.getInstanceId(),
              l = r.cellComps[a];
            l == null ? r.newCellComp(s) : (o[a] = null);
          });
          var i = It(o).filter(function (s) {
            return s != null;
          });
          this.destroyCells(i), this.ensureDomOrder(e);
        }),
        (t.prototype.ensureDomOrder = function (e) {
          var r = this;
          if (this.domOrder) {
            var o = [];
            e.forEach(function (i) {
              var s = r.cellComps[i.getInstanceId()];
              s && o.push(s.getGui());
            }),
              jn(this.getGui(), o);
          }
        }),
        (t.prototype.newCellComp = function (e) {
          var r = new kv(
            this.beans,
            e,
            this.rowCtrl.isPrintLayout(),
            this.getGui(),
            this.rowCtrl.isEditing()
          );
          (this.cellComps[e.getInstanceId()] = r), this.getGui().appendChild(r.getGui());
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this), this.destroyAllCells();
        }),
        (t.prototype.destroyAllCells = function () {
          var e = It(this.cellComps).filter(function (r) {
            return r != null;
          });
          this.destroyCells(e);
        }),
        (t.prototype.setFullWidthRowComp = function (e) {
          var r = this;
          this.fullWidthCellRenderer &&
            console.error('AG Grid - should not be setting fullWidthRowComponent twice'),
            (this.fullWidthCellRenderer = e),
            this.addDestroyFunc(function () {
              r.fullWidthCellRenderer = r.beans.context.destroyBean(r.fullWidthCellRenderer);
            });
        }),
        (t.prototype.getFullWidthCellRenderer = function () {
          return this.fullWidthCellRenderer;
        }),
        (t.prototype.destroyCells = function (e) {
          var r = this;
          e.forEach(function (o) {
            if (o) {
              var i = o.getCtrl().getInstanceId();
              r.cellComps[i] === o && (o.detach(), o.destroy(), (r.cellComps[i] = null));
            }
          });
        }),
        (t.prototype.refreshFullWidth = function (e) {
          var r = this.fullWidthCellRenderer;
          if (!r || !r.refresh) return !1;
          var o = e();
          return r.refresh(o);
        }),
        t
      );
    })(k),
    Uv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Rs = function () {
      return (
        (Rs =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Rs.apply(this, arguments)
      );
    },
    po = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    };
  function zv() {
    var n = k.elementGettingCreated.getAttribute('name'),
      t = lu.getRowContainerCssClasses(n),
      e,
      r =
        n === T.CENTER || n === T.TOP_CENTER || n === T.STICKY_TOP_CENTER || n === T.BOTTOM_CENTER;
    return (
      r
        ? (e = '<div class="'
            .concat(
              t.viewport,
              `" ref="eViewport" role="presentation">
                <div class="`
            )
            .concat(
              t.container,
              `" ref="eContainer"></div>
            </div>`
            ))
        : (e = '<div class="'.concat(t.container, '" ref="eContainer"></div>')),
      e
    );
  }
  var Kv = (function (n) {
      Uv(t, n);
      function t() {
        var e = n.call(this, zv()) || this;
        return (
          (e.rowComps = {}),
          (e.name = k.elementGettingCreated.getAttribute('name')),
          (e.type = Ov(e.name)),
          e
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this,
            r = {
              setViewportHeight: function (i) {
                return (e.eViewport.style.height = i);
              },
              setRowCtrls: function (i) {
                var s = i.rowCtrls;
                return e.setRowCtrls(s);
              },
              setDomOrder: function (i) {
                e.domOrder = i;
              },
              setContainerWidth: function (i) {
                return (e.eContainer.style.width = i);
              },
            },
            o = this.createManagedBean(new lu(this.name));
          o.setComp(r, this.eContainer, this.eViewport);
        }),
        (t.prototype.preDestroy = function () {
          this.setRowCtrls([]);
        }),
        (t.prototype.setRowCtrls = function (e) {
          var r = this,
            o = Rs({}, this.rowComps);
          (this.rowComps = {}), (this.lastPlacedElement = null);
          var i = function (s) {
            var a = s.getInstanceId(),
              l = o[a];
            if (l) (r.rowComps[a] = l), delete o[a], r.ensureDomOrder(l.getGui());
            else {
              if (!s.getRowNode().displayed) return;
              var u = new jv(s, r.beans, r.type);
              (r.rowComps[a] = u), r.appendRow(u.getGui());
            }
          };
          e.forEach(i),
            It(o).forEach(function (s) {
              r.eContainer.removeChild(s.getGui()), s.destroy();
            }),
            le(this.eContainer, 'rowgroup');
        }),
        (t.prototype.appendRow = function (e) {
          this.domOrder
            ? tl(this.eContainer, e, this.lastPlacedElement)
            : this.eContainer.appendChild(e),
            (this.lastPlacedElement = e);
        }),
        (t.prototype.ensureDomOrder = function (e) {
          this.domOrder &&
            (Wn(this.eContainer, e, this.lastPlacedElement), (this.lastPlacedElement = e));
        }),
        po([v('beans')], t.prototype, 'beans', void 0),
        po([L('eViewport')], t.prototype, 'eViewport', void 0),
        po([L('eContainer')], t.prototype, 'eContainer', void 0),
        po([F], t.prototype, 'postConstruct', null),
        po([Se], t.prototype, 'preDestroy', null),
        t
      );
    })(k),
    cu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    $v = (function () {
      function n(t) {
        (this.columnsToAggregate = []),
          (this.columnsToGroup = []),
          (this.columnsToPivot = []),
          (this.pinned = t);
      }
      return (
        (n.prototype.onDragEnter = function (t) {
          var e = this;
          if ((this.clearColumnsList(), !this.gridOptionsService.get('functionsReadOnly'))) {
            var r = t.dragItem.columns;
            r &&
              r.forEach(function (o) {
                o.isPrimary() &&
                  (o.isAnyFunctionActive() ||
                    (o.isAllowValue()
                      ? e.columnsToAggregate.push(o)
                      : o.isAllowRowGroup()
                      ? e.columnsToGroup.push(o)
                      : o.isAllowPivot() && e.columnsToPivot.push(o)));
              });
          }
        }),
        (n.prototype.getIconName = function () {
          var t =
            this.columnsToAggregate.length +
            this.columnsToGroup.length +
            this.columnsToPivot.length;
          return t > 0 ? (this.pinned ? he.ICON_PINNED : he.ICON_MOVE) : null;
        }),
        (n.prototype.onDragLeave = function (t) {
          this.clearColumnsList();
        }),
        (n.prototype.clearColumnsList = function () {
          (this.columnsToAggregate.length = 0),
            (this.columnsToGroup.length = 0),
            (this.columnsToPivot.length = 0);
        }),
        (n.prototype.onDragging = function (t) {}),
        (n.prototype.onDragStop = function (t) {
          this.columnsToAggregate.length > 0 &&
            this.columnModel.addValueColumns(this.columnsToAggregate, 'toolPanelDragAndDrop'),
            this.columnsToGroup.length > 0 &&
              this.columnModel.addRowGroupColumns(this.columnsToGroup, 'toolPanelDragAndDrop'),
            this.columnsToPivot.length > 0 &&
              this.columnModel.addPivotColumns(this.columnsToPivot, 'toolPanelDragAndDrop');
        }),
        cu([v('columnModel')], n.prototype, 'columnModel', void 0),
        cu([v('gridOptionsService')], n.prototype, 'gridOptionsService', void 0),
        n
      );
    })(),
    Yv = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    vr = (function () {
      function n() {}
      return (
        (n.attemptMoveColumns = function (t) {
          var e = t.isFromHeader,
            r = t.hDirection,
            o = t.xPosition,
            i = t.fromEnter,
            s = t.fakeEvent,
            a = t.pinned,
            l = t.gridOptionsService,
            u = t.columnModel,
            c = r === Ue.Left,
            p = r === Ue.Right,
            d = t.allMovingColumns;
          if (e) {
            var h = [];
            d.forEach(function (I) {
              for (
                var W, ee = null, oe = I.getParent();
                oe != null && oe.getDisplayedLeafColumns().length === 1;

              )
                (ee = oe), (oe = oe.getParent());
              if (ee != null) {
                var Z = !!(
                    !((W = ee.getColGroupDef()) === null || W === void 0) && W.marryChildren
                  ),
                  te = Z ? ee.getProvidedColumnGroup().getLeafColumns() : ee.getLeafColumns();
                te.forEach(function (Q) {
                  h.includes(Q) || h.push(Q);
                });
              } else h.includes(I) || h.push(I);
            }),
              (d = h);
          }
          var f = d.slice();
          u.sortColumnsLikeGridColumns(f);
          var y = this.calculateValidMoves({
              movingCols: f,
              draggingRight: p,
              xPosition: o,
              pinned: a,
              gridOptionsService: l,
              columnModel: u,
            }),
            m = this.calculateOldIndex(f, u);
          if (y.length !== 0) {
            var C = y[0],
              w = m !== null && !i;
            if ((e && (w = m !== null), !(w && !s && ((c && C >= m) || (p && C <= m))))) {
              for (var E = u.getAllDisplayedColumns(), S = [], R = null, O = 0; O < y.length; O++) {
                var b = y[O],
                  A = u.getProposedColumnOrder(f, b);
                if (u.doesOrderPassRules(A)) {
                  var M = A.filter(function (I) {
                    return E.includes(I);
                  });
                  if (R === null) R = M;
                  else if (!Tt(M, R)) break;
                  var N = this.groupFragCount(A);
                  S.push({ move: b, fragCount: N });
                }
              }
              if (S.length !== 0)
                return (
                  S.sort(function (I, W) {
                    return I.fragCount - W.fragCount;
                  }),
                  this.moveColumns(d, S[0].move, 'uiColumnMoved', !1, u)
                );
            }
          }
        }),
        (n.moveColumns = function (t, e, r, o, i) {
          return i.moveColumns(t, e, r, o), o ? null : { columns: t, toIndex: e };
        }),
        (n.calculateOldIndex = function (t, e) {
          var r = e.getAllGridColumns(),
            o = Ca(
              t.map(function (u) {
                return r.indexOf(u);
              })
            ),
            i = o[0],
            s = q(o),
            a = s - i,
            l = a !== o.length - 1;
          return l ? null : i;
        }),
        (n.groupFragCount = function (t) {
          function e(s) {
            for (var a = [], l = s.getOriginalParent(); l != null; )
              a.push(l), (l = l.getOriginalParent());
            return a;
          }
          for (
            var r = 0,
              o = function (s) {
                var a,
                  l = e(t[s]),
                  u = e(t[s + 1]);
                (a = Yv(l.length > u.length ? [l, u] : [u, l], 2)),
                  (l = a[0]),
                  (u = a[1]),
                  l.forEach(function (c) {
                    u.indexOf(c) === -1 && r++;
                  });
              },
              i = 0;
            i < t.length - 1;
            i++
          )
            o(i);
          return r;
        }),
        (n.calculateValidMoves = function (t) {
          var e = t.movingCols,
            r = t.draggingRight,
            o = t.xPosition,
            i = t.pinned,
            s = t.gridOptionsService,
            a = t.columnModel,
            l =
              s.get('suppressMovableColumns') ||
              e.some(function (I) {
                return I.getColDef().suppressMovable;
              });
          if (l) return [];
          var u = a.getDisplayedColumns(i),
            c = a.getAllGridColumns(),
            p = u.filter(function (I) {
              return ot(e, I);
            }),
            d = u.filter(function (I) {
              return !ot(e, I);
            }),
            h = c.filter(function (I) {
              return !ot(e, I);
            }),
            f = 0,
            y = o;
          if (r) {
            var m = 0;
            p.forEach(function (I) {
              return (m += I.getActualWidth());
            }),
              (y -= m);
          }
          if (y > 0) {
            for (var C = 0; C < d.length; C++) {
              var w = d[C];
              if (((y -= w.getActualWidth()), y < 0)) break;
              f++;
            }
            r && f++;
          }
          var E;
          if (f > 0) {
            var S = d[f - 1];
            E = h.indexOf(S) + 1;
          } else (E = h.indexOf(d[0])), E === -1 && (E = 0);
          var R = [E],
            O = function (I, W) {
              return I - W;
            };
          if (r) {
            for (var b = E + 1, A = c.length - 1; b <= A; ) R.push(b), b++;
            R.sort(O);
          } else {
            for (var b = E, A = c.length - 1, M = c[b]; b <= A && u.indexOf(M) < 0; )
              b++, R.push(b), (M = c[b]);
            b = E - 1;
            for (var N = 0; b >= N; ) R.push(b), b--;
            R.sort(O).reverse();
          }
          return R;
        }),
        (n.normaliseX = function (t, e, r, o, i) {
          var s = i.getHeaderRowContainerCtrl(e).getViewport();
          if ((r && (t -= s.getBoundingClientRect().left), o.get('enableRtl'))) {
            var a = s.clientWidth;
            t = a - t;
          }
          return e == null && (t += i.getCenterRowContainerCtrl().getCenterViewportScrollLeft()), t;
        }),
        n
      );
    })(),
    ho = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    qv = (function () {
      function n(t, e) {
        (this.needToMoveLeft = !1),
          (this.needToMoveRight = !1),
          (this.lastMovedInfo = null),
          (this.pinned = t),
          (this.eContainer = e),
          (this.centerContainer = !P(t));
      }
      return (
        (n.prototype.init = function () {
          var t = this;
          this.ctrlsService.whenReady(function () {
            t.gridBodyCon = t.ctrlsService.getGridBodyCtrl();
          });
        }),
        (n.prototype.getIconName = function () {
          return this.pinned ? he.ICON_PINNED : he.ICON_MOVE;
        }),
        (n.prototype.onDragEnter = function (t) {
          var e = t.dragItem.columns,
            r = t.dragSource.type === Te.ToolPanel;
          if (r) this.setColumnsVisible(e, !0, 'uiColumnDragged');
          else {
            var o = t.dragItem.visibleState,
              i = (e || []).filter(function (s) {
                return o[s.getId()];
              });
            this.setColumnsVisible(i, !0, 'uiColumnDragged');
          }
          this.setColumnsPinned(e, this.pinned, 'uiColumnDragged'), this.onDragging(t, !0, !0);
        }),
        (n.prototype.onDragLeave = function () {
          this.ensureIntervalCleared(), (this.lastMovedInfo = null);
        }),
        (n.prototype.setColumnsVisible = function (t, e, r) {
          if (t) {
            var o = t.filter(function (i) {
              return !i.getColDef().lockVisible;
            });
            this.columnModel.setColumnsVisible(o, e, r);
          }
        }),
        (n.prototype.setColumnsPinned = function (t, e, r) {
          if (t) {
            var o = t.filter(function (i) {
              return !i.getColDef().lockPinned;
            });
            this.columnModel.setColumnsPinned(o, e, r);
          }
        }),
        (n.prototype.onDragStop = function () {
          this.onDragging(this.lastDraggingEvent, !1, !0, !0),
            this.ensureIntervalCleared(),
            (this.lastMovedInfo = null);
        }),
        (n.prototype.checkCenterForScrolling = function (t) {
          if (this.centerContainer) {
            var e = this.ctrlsService.getCenterRowContainerCtrl().getCenterViewportScrollLeft(),
              r = e + this.ctrlsService.getCenterRowContainerCtrl().getCenterWidth();
            this.gridOptionsService.get('enableRtl')
              ? ((this.needToMoveRight = t < e + 50), (this.needToMoveLeft = t > r - 50))
              : ((this.needToMoveLeft = t < e + 50), (this.needToMoveRight = t > r - 50)),
              this.needToMoveLeft || this.needToMoveRight
                ? this.ensureIntervalStarted()
                : this.ensureIntervalCleared();
          }
        }),
        (n.prototype.onDragging = function (t, e, r, o) {
          var i = this,
            s;
          if (
            (t === void 0 && (t = this.lastDraggingEvent),
            e === void 0 && (e = !1),
            r === void 0 && (r = !1),
            o === void 0 && (o = !1),
            o)
          ) {
            if (this.lastMovedInfo) {
              var a = this.lastMovedInfo,
                l = a.columns,
                u = a.toIndex;
              vr.moveColumns(l, u, 'uiColumnMoved', !0, this.columnModel);
            }
            return;
          }
          if (((this.lastDraggingEvent = t), !H(t.hDirection))) {
            var c = vr.normaliseX(t.x, this.pinned, !1, this.gridOptionsService, this.ctrlsService);
            e || this.checkCenterForScrolling(c);
            var p = this.normaliseDirection(t.hDirection),
              d = t.dragSource.type,
              h =
                ((s = t.dragSource.getDragItem().columns) === null || s === void 0
                  ? void 0
                  : s.filter(function (y) {
                      return y.getColDef().lockPinned ? y.getPinned() == i.pinned : !0;
                    })) || [],
              f = vr.attemptMoveColumns({
                allMovingColumns: h,
                isFromHeader: d === Te.HeaderCell,
                hDirection: p,
                xPosition: c,
                pinned: this.pinned,
                fromEnter: e,
                fakeEvent: r,
                gridOptionsService: this.gridOptionsService,
                columnModel: this.columnModel,
              });
            f && (this.lastMovedInfo = f);
          }
        }),
        (n.prototype.normaliseDirection = function (t) {
          if (this.gridOptionsService.get('enableRtl'))
            switch (t) {
              case Ue.Left:
                return Ue.Right;
              case Ue.Right:
                return Ue.Left;
              default:
                console.error('AG Grid: Unknown direction '.concat(t));
            }
          else return t;
        }),
        (n.prototype.ensureIntervalStarted = function () {
          this.movingIntervalId ||
            ((this.intervalCount = 0),
            (this.failedMoveAttempts = 0),
            (this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), 100)),
            this.needToMoveLeft
              ? this.dragAndDropService.setGhostIcon(he.ICON_LEFT, !0)
              : this.dragAndDropService.setGhostIcon(he.ICON_RIGHT, !0));
        }),
        (n.prototype.ensureIntervalCleared = function () {
          this.movingIntervalId &&
            (window.clearInterval(this.movingIntervalId),
            (this.movingIntervalId = null),
            this.dragAndDropService.setGhostIcon(he.ICON_MOVE));
        }),
        (n.prototype.moveInterval = function () {
          var t;
          this.intervalCount++, (t = 10 + this.intervalCount * 5), t > 100 && (t = 100);
          var e = null,
            r = this.gridBodyCon.getScrollFeature();
          if (
            (this.needToMoveLeft
              ? (e = r.scrollHorizontally(-t))
              : this.needToMoveRight && (e = r.scrollHorizontally(t)),
            e !== 0)
          )
            this.onDragging(this.lastDraggingEvent), (this.failedMoveAttempts = 0);
          else {
            this.failedMoveAttempts++;
            var o = this.lastDraggingEvent.dragItem.columns,
              i = o.filter(function (a) {
                return !a.getColDef().lockPinned;
              });
            if (
              i.length > 0 &&
              (this.dragAndDropService.setGhostIcon(he.ICON_PINNED), this.failedMoveAttempts > 7)
            ) {
              var s = this.needToMoveLeft ? 'left' : 'right';
              this.setColumnsPinned(i, s, 'uiColumnDragged'), this.dragAndDropService.nudge();
            }
          }
        }),
        ho([v('columnModel')], n.prototype, 'columnModel', void 0),
        ho([v('dragAndDropService')], n.prototype, 'dragAndDropService', void 0),
        ho([v('gridOptionsService')], n.prototype, 'gridOptionsService', void 0),
        ho([v('ctrlsService')], n.prototype, 'ctrlsService', void 0),
        ho([F], n.prototype, 'init', null),
        n
      );
    })(),
    Qv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    fo = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Xv = (function (n) {
      Qv(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return (o.pinned = e), (o.eContainer = r), o;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.ctrlsService.whenReady(function (r) {
            switch (e.pinned) {
              case 'left':
                e.eSecondaryContainers = [
                  [
                    r.gridBodyCtrl.getBodyViewportElement(),
                    r.leftRowContainerCtrl.getContainerElement(),
                  ],
                  [r.bottomLeftRowContainerCtrl.getContainerElement()],
                  [r.topLeftRowContainerCtrl.getContainerElement()],
                ];
                break;
              case 'right':
                e.eSecondaryContainers = [
                  [
                    r.gridBodyCtrl.getBodyViewportElement(),
                    r.rightRowContainerCtrl.getContainerElement(),
                  ],
                  [r.bottomRightRowContainerCtrl.getContainerElement()],
                  [r.topRightRowContainerCtrl.getContainerElement()],
                ];
                break;
              default:
                e.eSecondaryContainers = [
                  [
                    r.gridBodyCtrl.getBodyViewportElement(),
                    r.centerRowContainerCtrl.getViewportElement(),
                  ],
                  [r.bottomCenterRowContainerCtrl.getViewportElement()],
                  [r.topCenterRowContainerCtrl.getViewportElement()],
                ];
                break;
            }
          });
        }),
        (t.prototype.isInterestedIn = function (e) {
          return (
            e === Te.HeaderCell ||
            (e === Te.ToolPanel && this.gridOptionsService.get('allowDragFromColumnsToolPanel'))
          );
        }),
        (t.prototype.getSecondaryContainers = function () {
          return this.eSecondaryContainers;
        }),
        (t.prototype.getContainer = function () {
          return this.eContainer;
        }),
        (t.prototype.init = function () {
          (this.moveColumnFeature = this.createManagedBean(new qv(this.pinned, this.eContainer))),
            (this.bodyDropPivotTarget = this.createManagedBean(new $v(this.pinned))),
            this.dragAndDropService.addDropTarget(this);
        }),
        (t.prototype.getIconName = function () {
          return this.currentDropListener.getIconName();
        }),
        (t.prototype.isDropColumnInPivotMode = function (e) {
          return this.columnModel.isPivotMode() && e.dragSource.type === Te.ToolPanel;
        }),
        (t.prototype.onDragEnter = function (e) {
          (this.currentDropListener = this.isDropColumnInPivotMode(e)
            ? this.bodyDropPivotTarget
            : this.moveColumnFeature),
            this.currentDropListener.onDragEnter(e);
        }),
        (t.prototype.onDragLeave = function (e) {
          this.currentDropListener.onDragLeave(e);
        }),
        (t.prototype.onDragging = function (e) {
          this.currentDropListener.onDragging(e);
        }),
        (t.prototype.onDragStop = function (e) {
          this.currentDropListener.onDragStop(e);
        }),
        fo([v('dragAndDropService')], t.prototype, 'dragAndDropService', void 0),
        fo([v('columnModel')], t.prototype, 'columnModel', void 0),
        fo([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        fo([F], t.prototype, 'postConstruct', null),
        fo([F], t.prototype, 'init', null),
        t
      );
    })(D),
    Jv = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ci = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Zv = (function (n) {
      Jv(t, n);
      function t(e) {
        var r = n.call(this, t.TEMPLATE, e) || this;
        return (
          (r.headerCompVersion = 0),
          (r.column = e.getColumnGroupChild()),
          (r.pinned = e.getPinned()),
          r
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this,
            r = this.getGui(),
            o = function (a, l) {
              l != null && l != '' ? r.setAttribute(a, l) : r.removeAttribute(a);
            };
          o('col-id', this.column.getColId());
          var i = {
            setWidth: function (a) {
              return (r.style.width = a);
            },
            addOrRemoveCssClass: function (a, l) {
              return e.addOrRemoveCssClass(a, l);
            },
            setAriaSort: function (a) {
              return a ? za(r, a) : Ka(r);
            },
            setUserCompDetails: function (a) {
              return e.setUserCompDetails(a);
            },
            getUserCompInstance: function () {
              return e.headerComp;
            },
          };
          this.ctrl.setComp(i, this.getGui(), this.eResize, this.eHeaderCompWrapper);
          var s = this.ctrl.getSelectAllGui();
          this.eResize.insertAdjacentElement('afterend', s);
        }),
        (t.prototype.destroyHeaderComp = function () {
          this.headerComp &&
            (this.eHeaderCompWrapper.removeChild(this.headerCompGui),
            (this.headerComp = this.destroyBean(this.headerComp)),
            (this.headerCompGui = void 0));
        }),
        (t.prototype.setUserCompDetails = function (e) {
          var r = this;
          this.headerCompVersion++;
          var o = this.headerCompVersion;
          e.newAgStackInstance().then(function (i) {
            return r.afterCompCreated(o, i);
          });
        }),
        (t.prototype.afterCompCreated = function (e, r) {
          if (e != this.headerCompVersion || !this.isAlive()) {
            this.destroyBean(r);
            return;
          }
          this.destroyHeaderComp(),
            (this.headerComp = r),
            (this.headerCompGui = r.getGui()),
            this.eHeaderCompWrapper.appendChild(this.headerCompGui),
            this.ctrl.setDragSource(this.getGui());
        }),
        (t.TEMPLATE = `<div class="ag-header-cell" role="columnheader">
            <div ref="eResize" class="ag-header-cell-resize" role="presentation"></div>
            <div ref="eHeaderCompWrapper" class="ag-header-cell-comp-wrapper" role="presentation"></div>
        </div>`),
        Ci([L('eResize')], t.prototype, 'eResize', void 0),
        Ci([L('eHeaderCompWrapper')], t.prototype, 'eHeaderCompWrapper', void 0),
        Ci([F], t.prototype, 'postConstruct', null),
        Ci([Se], t.prototype, 'destroyHeaderComp', null),
        t
      );
    })(gs),
    eg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    pu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    tg = (function (n) {
      eg(t, n);
      function t(e) {
        return n.call(this, t.TEMPLATE, e) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this,
            r = this.getGui(),
            o = function (s, a) {
              return a != null ? r.setAttribute(s, a) : r.removeAttribute(s);
            };
          r.setAttribute('col-id', this.ctrl.getColId());
          var i = {
            addOrRemoveCssClass: function (s, a) {
              return e.addOrRemoveCssClass(s, a);
            },
            setResizableDisplayed: function (s) {
              return $(e.eResize, s);
            },
            setWidth: function (s) {
              return (r.style.width = s);
            },
            setAriaExpanded: function (s) {
              return o('aria-expanded', s);
            },
            setUserCompDetails: function (s) {
              return e.setUserCompDetails(s);
            },
            getUserCompInstance: function () {
              return e.headerGroupComp;
            },
          };
          this.ctrl.setComp(i, r, this.eResize);
        }),
        (t.prototype.setUserCompDetails = function (e) {
          var r = this;
          e.newAgStackInstance().then(function (o) {
            return r.afterHeaderCompCreated(o);
          });
        }),
        (t.prototype.afterHeaderCompCreated = function (e) {
          var r = this,
            o = function () {
              return r.destroyBean(e);
            };
          if (!this.isAlive()) {
            o();
            return;
          }
          var i = this.getGui(),
            s = e.getGui();
          i.appendChild(s),
            this.addDestroyFunc(o),
            (this.headerGroupComp = e),
            this.ctrl.setDragSource(i);
        }),
        (t.TEMPLATE = `<div class="ag-header-group-cell" role="columnheader">
            <div ref="eResize" class="ag-header-cell-resize" role="presentation"></div>
        </div>`),
        pu([L('eResize')], t.prototype, 'eResize', void 0),
        pu([F], t.prototype, 'postConstruct', null),
        t
      );
    })(gs),
    rg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    du = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ge;
  (function (n) {
    (n.COLUMN_GROUP = 'group'), (n.COLUMN = 'column'), (n.FLOATING_FILTER = 'filter');
  })(ge || (ge = {}));
  var og = (function (n) {
      rg(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (
          (r.headerComps = {}),
          (r.ctrl = e),
          r.setTemplate('<div class="'.concat(r.ctrl.getHeaderRowClass(), '" role="row"></div>')),
          r
        );
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          yn(this.getGui(), this.ctrl.getAriaRowIndex());
          var r = {
            setHeight: function (o) {
              return (e.getGui().style.height = o);
            },
            setTop: function (o) {
              return (e.getGui().style.top = o);
            },
            setHeaderCtrls: function (o, i) {
              return e.setHeaderCtrls(o, i);
            },
            setWidth: function (o) {
              return (e.getGui().style.width = o);
            },
          };
          this.ctrl.setComp(r);
        }),
        (t.prototype.destroyHeaderCtrls = function () {
          this.setHeaderCtrls([], !1);
        }),
        (t.prototype.setHeaderCtrls = function (e, r) {
          var o = this;
          if (this.isAlive()) {
            var i = this.headerComps;
            if (
              ((this.headerComps = {}),
              e.forEach(function (l) {
                var u = l.getInstanceId(),
                  c = i[u];
                delete i[u],
                  c == null && ((c = o.createHeaderComp(l)), o.getGui().appendChild(c.getGui())),
                  (o.headerComps[u] = c);
              }),
              ye(i, function (l, u) {
                o.getGui().removeChild(u.getGui()), o.destroyBean(u);
              }),
              r)
            ) {
              var s = It(this.headerComps);
              s.sort(function (l, u) {
                var c = l.getCtrl().getColumnGroupChild().getLeft(),
                  p = u.getCtrl().getColumnGroupChild().getLeft();
                return c - p;
              });
              var a = s.map(function (l) {
                return l.getGui();
              });
              jn(this.getGui(), a);
            }
          }
        }),
        (t.prototype.createHeaderComp = function (e) {
          var r;
          switch (this.ctrl.getType()) {
            case ge.COLUMN_GROUP:
              r = new tg(e);
              break;
            case ge.FLOATING_FILTER:
              r = new hf(e);
              break;
            default:
              r = new Zv(e);
              break;
          }
          return this.createBean(r), r.setParentComponent(this), r;
        }),
        du([F], t.prototype, 'init', null),
        du([Se], t.prototype, 'destroyHeaderCtrls', null),
        t
      );
    })(k),
    ig = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    gr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ng = 0,
    Si = (function (n) {
      ig(t, n);
      function t(e, r, o) {
        var i = n.call(this) || this;
        return (
          (i.resizeToggleTimeout = 0),
          (i.resizeMultiplier = 1),
          (i.resizeFeature = null),
          (i.lastFocusEvent = null),
          (i.dragSource = null),
          (i.columnGroupChild = e),
          (i.parentRowCtrl = o),
          (i.beans = r),
          (i.instanceId = e.getUniqueId() + '-' + ng++),
          i
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.addManagedPropertyListeners(['suppressHeaderFocus'], function () {
            return e.refreshTabIndex();
          });
        }),
        (t.prototype.shouldStopEventPropagation = function (e) {
          var r = this.focusService.getFocusedHeader(),
            o = r.headerRowIndex,
            i = r.column;
          return ll(this.gridOptionsService, e, o, i);
        }),
        (t.prototype.getWrapperHasFocus = function () {
          var e = this.gridOptionsService.getDocument(),
            r = e.activeElement;
          return r === this.eGui;
        }),
        (t.prototype.setGui = function (e) {
          (this.eGui = e),
            this.addDomData(),
            this.addManagedListener(
              this.beans.eventService,
              g.EVENT_DISPLAYED_COLUMNS_CHANGED,
              this.onDisplayedColumnsChanged.bind(this)
            ),
            this.onDisplayedColumnsChanged(),
            this.refreshTabIndex();
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          !this.comp ||
            !this.column ||
            (this.refreshFirstAndLastStyles(), this.refreshAriaColIndex());
        }),
        (t.prototype.refreshFirstAndLastStyles = function () {
          var e = this,
            r = e.comp,
            o = e.column,
            i = e.beans;
          hi.refreshFirstAndLastStyles(r, o, i.columnModel);
        }),
        (t.prototype.refreshAriaColIndex = function () {
          var e = this,
            r = e.beans,
            o = e.column,
            i = r.columnModel.getAriaColumnIndex(o);
          mn(this.eGui, i);
        }),
        (t.prototype.addResizeAndMoveKeyboardListeners = function () {
          this.resizeFeature &&
            (this.addManagedListener(this.eGui, 'keydown', this.onGuiKeyDown.bind(this)),
            this.addManagedListener(this.eGui, 'keyup', this.onGuiKeyUp.bind(this)));
        }),
        (t.prototype.refreshTabIndex = function () {
          var e = this.gridOptionsService.get('suppressHeaderFocus');
          e ? this.eGui.removeAttribute('tabindex') : this.eGui.setAttribute('tabindex', '-1');
        }),
        (t.prototype.onGuiKeyDown = function (e) {
          var r,
            o = this.gridOptionsService.getDocument(),
            i = o.activeElement,
            s = e.key === _.LEFT || e.key === _.RIGHT;
          if (
            (this.isResizing && (e.preventDefault(), e.stopImmediatePropagation()),
            !(i !== this.eGui || (!e.shiftKey && !e.altKey)) &&
              ((this.isResizing || s) && (e.preventDefault(), e.stopImmediatePropagation()), !!s))
          ) {
            var a = (e.key === _.LEFT) !== this.gridOptionsService.get('enableRtl'),
              l = Ue[a ? 'Left' : 'Right'];
            if (e.altKey) {
              (this.isResizing = !0), (this.resizeMultiplier += 1);
              var u = this.getViewportAdjustedResizeDiff(e);
              this.resizeHeader(u, e.shiftKey),
                (r = this.resizeFeature) === null || r === void 0 || r.toggleColumnResizing(!0);
            } else this.moveHeader(l);
          }
        }),
        (t.prototype.getViewportAdjustedResizeDiff = function (e) {
          var r = this.getResizeDiff(e),
            o = this.column.getPinned();
          if (o) {
            var i = this.pinnedWidthService.getPinnedLeftWidth(),
              s = this.pinnedWidthService.getPinnedRightWidth(),
              a = ir(this.ctrlsService.getGridBodyCtrl().getBodyViewportElement()) - 50;
            if (i + s + r > a)
              if (a > i + s) r = a - i - s;
              else return 0;
          }
          return r;
        }),
        (t.prototype.getResizeDiff = function (e) {
          var r = (e.key === _.LEFT) !== this.gridOptionsService.get('enableRtl'),
            o = this.column.getPinned(),
            i = this.gridOptionsService.get('enableRtl');
          return o && i !== (o === 'right') && (r = !r), (r ? -1 : 1) * this.resizeMultiplier;
        }),
        (t.prototype.onGuiKeyUp = function () {
          var e = this;
          this.isResizing &&
            (this.resizeToggleTimeout &&
              (window.clearTimeout(this.resizeToggleTimeout), (this.resizeToggleTimeout = 0)),
            (this.isResizing = !1),
            (this.resizeMultiplier = 1),
            (this.resizeToggleTimeout = setTimeout(function () {
              var r;
              (r = e.resizeFeature) === null || r === void 0 || r.toggleColumnResizing(!1);
            }, 150)));
        }),
        (t.prototype.handleKeyDown = function (e) {
          var r = this.getWrapperHasFocus();
          switch (e.key) {
            case _.PAGE_DOWN:
            case _.PAGE_UP:
            case _.PAGE_HOME:
            case _.PAGE_END:
              r && e.preventDefault();
          }
        }),
        (t.prototype.addDomData = function () {
          var e = this,
            r = t.DOM_DATA_KEY_HEADER_CTRL;
          this.gridOptionsService.setDomData(this.eGui, r, this),
            this.addDestroyFunc(function () {
              return e.gridOptionsService.setDomData(e.eGui, r, null);
            });
        }),
        (t.prototype.getGui = function () {
          return this.eGui;
        }),
        (t.prototype.focus = function (e) {
          return this.eGui ? ((this.lastFocusEvent = e || null), this.eGui.focus(), !0) : !1;
        }),
        (t.prototype.getRowIndex = function () {
          return this.parentRowCtrl.getRowIndex();
        }),
        (t.prototype.getParentRowCtrl = function () {
          return this.parentRowCtrl;
        }),
        (t.prototype.getPinned = function () {
          return this.parentRowCtrl.getPinned();
        }),
        (t.prototype.getInstanceId = function () {
          return this.instanceId;
        }),
        (t.prototype.getColumnGroupChild = function () {
          return this.columnGroupChild;
        }),
        (t.prototype.removeDragSource = function () {
          this.dragSource &&
            (this.dragAndDropService.removeDragSource(this.dragSource), (this.dragSource = null));
        }),
        (t.prototype.handleContextMenuMouseEvent = function (e, r, o) {
          var i = e ?? r;
          this.gridOptionsService.get('preventDefaultOnContextMenu') && i.preventDefault();
          var s = o instanceof J ? o : void 0;
          this.menuService.isHeaderContextMenuEnabled(s) &&
            this.menuService.showHeaderContextMenu(s, e, r),
            this.dispatchColumnMouseEvent(g.EVENT_COLUMN_HEADER_CONTEXT_MENU, o);
        }),
        (t.prototype.dispatchColumnMouseEvent = function (e, r) {
          var o = { type: e, column: r };
          this.eventService.dispatchEvent(o);
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this),
            this.removeDragSource(),
            (this.comp = null),
            (this.column = null),
            (this.resizeFeature = null),
            (this.lastFocusEvent = null),
            (this.columnGroupChild = null),
            (this.parentRowCtrl = null),
            (this.eGui = null);
        }),
        (t.DOM_DATA_KEY_HEADER_CTRL = 'headerCtrl'),
        gr([v('pinnedWidthService')], t.prototype, 'pinnedWidthService', void 0),
        gr([v('focusService')], t.prototype, 'focusService', void 0),
        gr([v('userComponentFactory')], t.prototype, 'userComponentFactory', void 0),
        gr([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        gr([v('dragAndDropService')], t.prototype, 'dragAndDropService', void 0),
        gr([v('menuService')], t.prototype, 'menuService', void 0),
        gr([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    sg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ag = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Os = (function (n) {
      sg(t, n);
      function t(e, r, o, i) {
        var s = n.call(this) || this;
        return (
          (s.columnOrGroup = e),
          (s.eCell = r),
          (s.ariaEl = s.eCell.querySelector('[role=columnheader]') || s.eCell),
          (s.colsSpanning = i),
          (s.beans = o),
          s
        );
      }
      return (
        (t.prototype.setColsSpanning = function (e) {
          (this.colsSpanning = e), this.onLeftChanged();
        }),
        (t.prototype.getColumnOrGroup = function () {
          return this.beans.gridOptionsService.get('enableRtl') && this.colsSpanning
            ? q(this.colsSpanning)
            : this.columnOrGroup;
        }),
        (t.prototype.postConstruct = function () {
          this.addManagedListener(
            this.columnOrGroup,
            J.EVENT_LEFT_CHANGED,
            this.onLeftChanged.bind(this)
          ),
            this.setLeftFirstTime(),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
              this.onLeftChanged.bind(this)
            ),
            this.addManagedPropertyListener('domLayout', this.onLeftChanged.bind(this));
        }),
        (t.prototype.setLeftFirstTime = function () {
          var e = this.beans.gridOptionsService.get('suppressColumnMoveAnimation'),
            r = P(this.columnOrGroup.getOldLeft()),
            o = this.beans.columnAnimationService.isActive() && r && !e;
          o ? this.animateInLeft() : this.onLeftChanged();
        }),
        (t.prototype.animateInLeft = function () {
          var e = this,
            r = this.getColumnOrGroup(),
            o = r.getLeft(),
            i = r.getOldLeft(),
            s = this.modifyLeftForPrintLayout(r, i),
            a = this.modifyLeftForPrintLayout(r, o);
          this.setLeft(s),
            (this.actualLeft = a),
            this.beans.columnAnimationService.executeNextVMTurn(function () {
              e.actualLeft === a && e.setLeft(a);
            });
        }),
        (t.prototype.onLeftChanged = function () {
          var e = this.getColumnOrGroup(),
            r = e.getLeft();
          (this.actualLeft = this.modifyLeftForPrintLayout(e, r)), this.setLeft(this.actualLeft);
        }),
        (t.prototype.modifyLeftForPrintLayout = function (e, r) {
          var o = this.beans.gridOptionsService.isDomLayout('print');
          if (!o || e.getPinned() === 'left') return r;
          var i = this.beans.columnModel.getDisplayedColumnsLeftWidth();
          if (e.getPinned() === 'right') {
            var s = this.beans.columnModel.getBodyContainerWidth();
            return i + s + r;
          }
          return i + r;
        }),
        (t.prototype.setLeft = function (e) {
          if (
            (P(e) && (this.eCell.style.left = ''.concat(e, 'px')), this.columnOrGroup instanceof J)
          )
            this.columnOrGroup;
          else {
            var r = this.columnOrGroup,
              o = r.getLeafColumns();
            if (!o.length) return;
            o.length > 1 && Ua(this.ariaEl, o.length), o[0];
          }
        }),
        ag([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    lg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    hu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Ts = (function (n) {
      lg(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return (o.columns = e), (o.element = r), o;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.gridOptionsService.get('columnHoverHighlight') && this.addMouseHoverListeners();
        }),
        (t.prototype.addMouseHoverListeners = function () {
          this.addManagedListener(this.element, 'mouseout', this.onMouseOut.bind(this)),
            this.addManagedListener(this.element, 'mouseover', this.onMouseOver.bind(this));
        }),
        (t.prototype.onMouseOut = function () {
          this.columnHoverService.clearMouseOver();
        }),
        (t.prototype.onMouseOver = function () {
          this.columnHoverService.setMouseOver(this.columns);
        }),
        hu([v('columnHoverService')], t.prototype, 'columnHoverService', void 0),
        hu([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    ug = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    cg = (function (n) {
      ug(t, n);
      function t(e, r, o) {
        var i = n.call(this, e, r, o) || this;
        return (i.iconCreated = !1), (i.column = e), i;
      }
      return (
        (t.prototype.setComp = function (e, r, o, i) {
          (this.comp = e),
            (this.eButtonShowMainFilter = o),
            (this.eFloatingFilterBody = i),
            this.setGui(r),
            this.setupActive(),
            this.setupWidth(),
            this.setupLeft(),
            this.setupHover(),
            this.setupFocus(),
            this.setupAria(),
            this.setupFilterButton(),
            this.setupUserComp(),
            this.setupSyncWithFilter(),
            this.setupUi(),
            this.addManagedListener(
              this.eButtonShowMainFilter,
              'click',
              this.showParentFilter.bind(this)
            ),
            this.setupFilterChangedListener(),
            this.addManagedListener(
              this.column,
              J.EVENT_COL_DEF_CHANGED,
              this.onColDefChanged.bind(this)
            );
        }),
        (t.prototype.resizeHeader = function () {}),
        (t.prototype.moveHeader = function () {}),
        (t.prototype.setupActive = function () {
          var e = this.column.getColDef(),
            r = !!e.filter,
            o = !!e.floatingFilter;
          this.active = r && o;
        }),
        (t.prototype.setupUi = function () {
          if (
            (this.comp.setButtonWrapperDisplayed(!this.suppressFilterButton && this.active),
            this.comp.addOrRemoveBodyCssClass(
              'ag-floating-filter-full-body',
              this.suppressFilterButton
            ),
            this.comp.addOrRemoveBodyCssClass(
              'ag-floating-filter-body',
              !this.suppressFilterButton
            ),
            !(!this.active || this.iconCreated))
          ) {
            var e = ne('filter', this.gridOptionsService, this.column);
            e && ((this.iconCreated = !0), this.eButtonShowMainFilter.appendChild(e));
          }
        }),
        (t.prototype.setupFocus = function () {
          this.createManagedBean(
            new ar(this.eGui, {
              shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),
              onTabKeyDown: this.onTabKeyDown.bind(this),
              handleKeyDown: this.handleKeyDown.bind(this),
              onFocusIn: this.onFocusIn.bind(this),
            })
          );
        }),
        (t.prototype.setupAria = function () {
          var e = this.localeService.getLocaleTextFunc();
          Ht(this.eButtonShowMainFilter, e('ariaFilterMenuOpen', 'Open Filter Menu'));
        }),
        (t.prototype.onTabKeyDown = function (e) {
          var r = this.gridOptionsService.getDocument(),
            o = r.activeElement,
            i = o === this.eGui;
          if (!i) {
            var s = this.focusService.findNextFocusableElement(this.eGui, null, e.shiftKey);
            if (s) {
              this.beans.headerNavigationService.scrollToColumn(this.column),
                e.preventDefault(),
                s.focus();
              return;
            }
            var a = this.findNextColumnWithFloatingFilter(e.shiftKey);
            a &&
              this.focusService.focusHeaderPosition({
                headerPosition: {
                  headerRowIndex: this.getParentRowCtrl().getRowIndex(),
                  column: a,
                },
                event: e,
              }) &&
              e.preventDefault();
          }
        }),
        (t.prototype.findNextColumnWithFloatingFilter = function (e) {
          var r = this.beans.columnModel,
            o = this.column;
          do if (((o = e ? r.getDisplayedColBefore(o) : r.getDisplayedColAfter(o)), !o)) break;
          while (!o.getColDef().filter || !o.getColDef().floatingFilter);
          return o;
        }),
        (t.prototype.handleKeyDown = function (e) {
          n.prototype.handleKeyDown.call(this, e);
          var r = this.getWrapperHasFocus();
          switch (e.key) {
            case _.UP:
            case _.DOWN:
              r || e.preventDefault();
            case _.LEFT:
            case _.RIGHT:
              if (r) return;
              e.stopPropagation();
            case _.ENTER:
              r && this.focusService.focusInto(this.eGui) && e.preventDefault();
              break;
            case _.ESCAPE:
              r || this.eGui.focus();
          }
        }),
        (t.prototype.onFocusIn = function (e) {
          var r = this.eGui.contains(e.relatedTarget);
          if (!r) {
            var o = !!e.relatedTarget && !e.relatedTarget.classList.contains('ag-floating-filter'),
              i = !!e.relatedTarget && or(e.relatedTarget, 'ag-floating-filter');
            if (o && i && e.target === this.eGui) {
              var s = this.lastFocusEvent,
                a = !!(s && s.key === _.TAB);
              if (s && a) {
                var l = s.shiftKey;
                this.focusService.focusInto(this.eGui, l);
              }
            }
            var u = this.getRowIndex();
            this.beans.focusService.setFocusedHeader(u, this.column);
          }
        }),
        (t.prototype.setupHover = function () {
          var e = this;
          this.createManagedBean(new Ts([this.column], this.eGui));
          var r = function () {
            if (e.gridOptionsService.get('columnHoverHighlight')) {
              var o = e.beans.columnHoverService.isHovered(e.column);
              e.comp.addOrRemoveCssClass('ag-column-hover', o);
            }
          };
          this.addManagedListener(this.eventService, g.EVENT_COLUMN_HOVER_CHANGED, r), r();
        }),
        (t.prototype.setupLeft = function () {
          var e = new Os(this.column, this.eGui, this.beans);
          this.createManagedBean(e);
        }),
        (t.prototype.setupFilterButton = function () {
          (this.suppressFilterButton = !this.menuService.isFloatingFilterButtonEnabled(
            this.column
          )),
            (this.highlightFilterButtonWhenActive = !this.menuService.isLegacyMenuEnabled());
        }),
        (t.prototype.setupUserComp = function () {
          var e = this;
          if (this.active) {
            var r = this.beans.filterManager.getFloatingFilterCompDetails(this.column, function () {
              return e.showParentFilter();
            });
            r && this.setCompDetails(r);
          }
        }),
        (t.prototype.setCompDetails = function (e) {
          (this.userCompDetails = e), this.comp.setCompDetails(e);
        }),
        (t.prototype.showParentFilter = function () {
          var e = this.suppressFilterButton ? this.eFloatingFilterBody : this.eButtonShowMainFilter;
          this.menuService.showFilterMenu({
            column: this.column,
            buttonElement: e,
            containerType: 'floatingFilter',
            positionBy: 'button',
          });
        }),
        (t.prototype.setupSyncWithFilter = function () {
          var e = this;
          if (this.active) {
            var r = this.beans.filterManager,
              o = function (i) {
                var s = e.comp.getFloatingFilterComp();
                s &&
                  s.then(function (a) {
                    if (a) {
                      var l = r.getCurrentFloatingFilterParentModel(e.column);
                      a.onParentModelChanged(l, i);
                    }
                  });
              };
            (this.destroySyncListener = this.addManagedListener(
              this.column,
              J.EVENT_FILTER_CHANGED,
              o
            )),
              r.isFilterActive(this.column) && o(null);
          }
        }),
        (t.prototype.setupWidth = function () {
          var e = this,
            r = function () {
              var o = ''.concat(e.column.getActualWidth(), 'px');
              e.comp.setWidth(o);
            };
          this.addManagedListener(this.column, J.EVENT_WIDTH_CHANGED, r), r();
        }),
        (t.prototype.setupFilterChangedListener = function () {
          this.active &&
            ((this.destroyFilterChangedListener = this.addManagedListener(
              this.column,
              J.EVENT_FILTER_CHANGED,
              this.updateFilterButton.bind(this)
            )),
            this.updateFilterButton());
        }),
        (t.prototype.updateFilterButton = function () {
          if (!this.suppressFilterButton && this.comp) {
            var e = this.beans.filterManager.isFilterAllowed(this.column);
            this.comp.setButtonWrapperDisplayed(e),
              this.highlightFilterButtonWhenActive &&
                e &&
                this.eButtonShowMainFilter.classList.toggle(
                  'ag-filter-active',
                  this.column.isFilterActive()
                );
          }
        }),
        (t.prototype.onColDefChanged = function () {
          var e = this,
            r,
            o,
            i = this.active;
          this.setupActive();
          var s = !i && this.active;
          i &&
            !this.active &&
            ((r = this.destroySyncListener) === null || r === void 0 || r.call(this),
            (o = this.destroyFilterChangedListener) === null || o === void 0 || o.call(this));
          var a = this.active
              ? this.beans.filterManager.getFloatingFilterCompDetails(this.column, function () {
                  return e.showParentFilter();
                })
              : null,
            l = this.comp.getFloatingFilterComp();
          !l || !a
            ? this.updateCompDetails(a, s)
            : l.then(function (u) {
                var c;
                !u ||
                e.beans.filterManager.areFilterCompsDifferent(
                  (c = e.userCompDetails) !== null && c !== void 0 ? c : null,
                  a
                )
                  ? e.updateCompDetails(a, s)
                  : e.updateFloatingFilterParams(a);
              });
        }),
        (t.prototype.updateCompDetails = function (e, r) {
          this.isAlive() &&
            (this.setCompDetails(e),
            this.setupFilterButton(),
            this.setupUi(),
            r && (this.setupSyncWithFilter(), this.setupFilterChangedListener()));
        }),
        (t.prototype.updateFloatingFilterParams = function (e) {
          var r;
          if (e) {
            var o = e.params;
            (r = this.comp.getFloatingFilterComp()) === null ||
              r === void 0 ||
              r.then(function (i) {
                var s = !1;
                if (i != null && i.refresh && typeof i.refresh == 'function') {
                  var a = i.refresh(o);
                  a !== null && (s = !0);
                }
                if (
                  !s &&
                  i != null &&
                  i.onParamsUpdated &&
                  typeof i.onParamsUpdated == 'function'
                ) {
                  var a = i.onParamsUpdated(o);
                  a !== null &&
                    V(
                      "Custom floating filter method 'onParamsUpdated' is deprecated. Use 'refresh' instead."
                    );
                }
              });
          }
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this),
            (this.eButtonShowMainFilter = null),
            (this.eFloatingFilterBody = null),
            (this.userCompDetails = null),
            (this.destroySyncListener = null),
            (this.destroyFilterChangedListener = null);
        }),
        t
      );
    })(Si),
    pg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    vo = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    dg = (function (n) {
      pg(t, n);
      function t(e, r, o, i, s) {
        var a = n.call(this) || this;
        return (a.pinned = e), (a.column = r), (a.eResize = o), (a.comp = i), (a.ctrl = s), a;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this,
            r = [],
            o,
            i,
            s = function () {
              if (($(e.eResize, o), !!o)) {
                var u = e.horizontalResizeService.addResizeBar({
                  eResizeBar: e.eResize,
                  onResizeStart: e.onResizeStart.bind(e),
                  onResizing: e.onResizing.bind(e, !1),
                  onResizeEnd: e.onResizing.bind(e, !0),
                });
                if ((r.push(u), i)) {
                  var c = e.gridOptionsService.get('skipHeaderOnAutoSize'),
                    p = function () {
                      e.columnModel.autoSizeColumn(e.column, 'uiColumnResized', c);
                    };
                  e.eResize.addEventListener('dblclick', p);
                  var d = new me(e.eResize);
                  d.addEventListener(me.EVENT_DOUBLE_TAP, p),
                    r.push(function () {
                      e.eResize.removeEventListener('dblclick', p),
                        d.removeEventListener(me.EVENT_DOUBLE_TAP, p),
                        d.destroy();
                    });
                }
              }
            },
            a = function () {
              r.forEach(function (u) {
                return u();
              }),
                (r.length = 0);
            },
            l = function () {
              var u = e.column.isResizable(),
                c =
                  !e.gridOptionsService.get('suppressAutoSize') &&
                  !e.column.getColDef().suppressAutoSize,
                p = u !== o || c !== i;
              p && ((o = u), (i = c), a(), s());
            };
          l(), this.addDestroyFunc(a), this.ctrl.addRefreshFunction(l);
        }),
        (t.prototype.onResizing = function (e, r) {
          var o = this,
            i = o.column,
            s = o.lastResizeAmount,
            a = o.resizeStartWidth,
            l = this.normaliseResizeAmount(r),
            u = a + l,
            c = [{ key: i, newWidth: u }];
          if (this.column.getPinned()) {
            var p = this.pinnedWidthService.getPinnedLeftWidth(),
              d = this.pinnedWidthService.getPinnedRightWidth(),
              h = ir(this.ctrlsService.getGridBodyCtrl().getBodyViewportElement()) - 50;
            if (p + d + (l - s) > h) return;
          }
          (this.lastResizeAmount = l),
            this.columnModel.setColumnWidths(c, this.resizeWithShiftKey, e, 'uiColumnResized'),
            e && this.toggleColumnResizing(!1);
        }),
        (t.prototype.onResizeStart = function (e) {
          (this.resizeStartWidth = this.column.getActualWidth()),
            (this.lastResizeAmount = 0),
            (this.resizeWithShiftKey = e),
            this.toggleColumnResizing(!0);
        }),
        (t.prototype.toggleColumnResizing = function (e) {
          this.comp.addOrRemoveCssClass('ag-column-resizing', e);
        }),
        (t.prototype.normaliseResizeAmount = function (e) {
          var r = e,
            o = this.pinned !== 'left',
            i = this.pinned === 'right';
          return this.gridOptionsService.get('enableRtl') ? o && (r *= -1) : i && (r *= -1), r;
        }),
        vo([v('horizontalResizeService')], t.prototype, 'horizontalResizeService', void 0),
        vo([v('pinnedWidthService')], t.prototype, 'pinnedWidthService', void 0),
        vo([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        vo([v('columnModel')], t.prototype, 'columnModel', void 0),
        vo([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    hg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    fu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    fg = (function (n) {
      hg(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.cbSelectAllVisible = !1), (r.processingEventFromCheckbox = !1), (r.column = e), r;
      }
      return (
        (t.prototype.onSpaceKeyDown = function (e) {
          var r = this.cbSelectAll,
            o = this.gridOptionsService.getDocument();
          r.isDisplayed() &&
            !r.getGui().contains(o.activeElement) &&
            (e.preventDefault(), r.setValue(!r.getValue()));
        }),
        (t.prototype.getCheckboxGui = function () {
          return this.cbSelectAll.getGui();
        }),
        (t.prototype.setComp = function (e) {
          (this.headerCellCtrl = e),
            (this.cbSelectAll = this.createManagedBean(new ti())),
            this.cbSelectAll.addCssClass('ag-header-select-all'),
            le(this.cbSelectAll.getGui(), 'presentation'),
            this.showOrHideSelectAll(),
            this.addManagedListener(
              this.eventService,
              g.EVENT_NEW_COLUMNS_LOADED,
              this.onNewColumnsLoaded.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_CHANGED,
              this.onDisplayedColumnsChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_SELECTION_CHANGED,
              this.onSelectionChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_PAGINATION_CHANGED,
              this.onSelectionChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_MODEL_UPDATED,
              this.onModelChanged.bind(this)
            ),
            this.addManagedListener(
              this.cbSelectAll,
              g.EVENT_FIELD_VALUE_CHANGED,
              this.onCbSelectAll.bind(this)
            ),
            zo(this.cbSelectAll.getGui(), !0),
            this.cbSelectAll.getInputElement().setAttribute('tabindex', '-1'),
            this.refreshSelectAllLabel();
        }),
        (t.prototype.onNewColumnsLoaded = function () {
          this.showOrHideSelectAll();
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          this.isAlive() && this.showOrHideSelectAll();
        }),
        (t.prototype.showOrHideSelectAll = function () {
          (this.cbSelectAllVisible = this.isCheckboxSelection()),
            this.cbSelectAll.setDisplayed(this.cbSelectAllVisible, { skipAriaHidden: !0 }),
            this.cbSelectAllVisible &&
              (this.checkRightRowModelType('selectAllCheckbox'),
              this.checkSelectionType('selectAllCheckbox'),
              this.updateStateOfCheckbox()),
            this.refreshSelectAllLabel();
        }),
        (t.prototype.onModelChanged = function () {
          this.cbSelectAllVisible && this.updateStateOfCheckbox();
        }),
        (t.prototype.onSelectionChanged = function () {
          this.cbSelectAllVisible && this.updateStateOfCheckbox();
        }),
        (t.prototype.updateStateOfCheckbox = function () {
          if (!this.processingEventFromCheckbox) {
            this.processingEventFromCheckbox = !0;
            var e = this.selectionService.getSelectAllState(
              this.isFilteredOnly(),
              this.isCurrentPageOnly()
            );
            this.cbSelectAll.setValue(e);
            var r = this.selectionService.hasNodesToSelect(
              this.isFilteredOnly(),
              this.isCurrentPageOnly()
            );
            this.cbSelectAll.setDisabled(!r),
              this.refreshSelectAllLabel(),
              (this.processingEventFromCheckbox = !1);
          }
        }),
        (t.prototype.refreshSelectAllLabel = function () {
          var e = this.localeService.getLocaleTextFunc(),
            r = this.cbSelectAll.getValue(),
            o = r ? e('ariaChecked', 'checked') : e('ariaUnchecked', 'unchecked'),
            i = e('ariaRowSelectAll', 'Press Space to toggle all rows selection');
          this.cbSelectAllVisible
            ? this.headerCellCtrl.setAriaDescriptionProperty(
                'selectAll',
                ''.concat(i, ' (').concat(o, ')')
              )
            : this.headerCellCtrl.setAriaDescriptionProperty('selectAll', null),
            this.cbSelectAll.setInputAriaLabel(''.concat(i, ' (').concat(o, ')')),
            this.headerCellCtrl.announceAriaDescription();
        }),
        (t.prototype.checkSelectionType = function (e) {
          var r = this.gridOptionsService.get('rowSelection') === 'multiple';
          return r
            ? !0
            : (console.warn(
                'AG Grid: '.concat(e, " is only available if using 'multiple' rowSelection.")
              ),
              !1);
        }),
        (t.prototype.checkRightRowModelType = function (e) {
          var r = this.rowModel.getType(),
            o = r === 'clientSide' || r === 'serverSide';
          return o
            ? !0
            : (console.warn(
                'AG Grid: '
                  .concat(
                    e,
                    " is only available if using 'clientSide' or 'serverSide' rowModelType, you are using "
                  )
                  .concat(r, '.')
              ),
              !1);
        }),
        (t.prototype.onCbSelectAll = function () {
          if (!this.processingEventFromCheckbox && this.cbSelectAllVisible) {
            var e = this.cbSelectAll.getValue(),
              r = this.isFilteredOnly(),
              o = this.isCurrentPageOnly(),
              i = 'uiSelectAll';
            o ? (i = 'uiSelectAllCurrentPage') : r && (i = 'uiSelectAllFiltered');
            var s = { source: i, justFiltered: r, justCurrentPage: o };
            e
              ? this.selectionService.selectAllRowNodes(s)
              : this.selectionService.deselectAllRowNodes(s);
          }
        }),
        (t.prototype.isCheckboxSelection = function () {
          var e = this.column.getColDef().headerCheckboxSelection;
          if (typeof e == 'function') {
            var r = e,
              o = this.gridOptionsService.addGridCommonParams({
                column: this.column,
                colDef: this.column.getColDef(),
              });
            e = r(o);
          }
          return e
            ? this.checkRightRowModelType('headerCheckboxSelection') &&
                this.checkSelectionType('headerCheckboxSelection')
            : !1;
        }),
        (t.prototype.isFilteredOnly = function () {
          return !!this.column.getColDef().headerCheckboxSelectionFilteredOnly;
        }),
        (t.prototype.isCurrentPageOnly = function () {
          return !!this.column.getColDef().headerCheckboxSelectionCurrentPageOnly;
        }),
        fu([v('rowModel')], t.prototype, 'rowModel', void 0),
        fu([v('selectionService')], t.prototype, 'selectionService', void 0),
        t
      );
    })(D),
    vg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    gg = (function (n) {
      vg(t, n);
      function t(e, r, o) {
        var i = n.call(this, e, r, o) || this;
        return (
          (i.refreshFunctions = []),
          (i.userHeaderClasses = new Set()),
          (i.ariaDescriptionProperties = new Map()),
          (i.column = e),
          i
        );
      }
      return (
        (t.prototype.setComp = function (e, r, o, i) {
          var s = this;
          (this.comp = e),
            this.setGui(r),
            this.updateState(),
            this.setupWidth(),
            this.setupMovingCss(),
            this.setupMenuClass(),
            this.setupSortableClass(),
            this.setupWrapTextClass(),
            this.refreshSpanHeaderHeight(),
            this.setupAutoHeight(i),
            this.addColumnHoverListener(),
            this.setupFilterClass(),
            this.setupClassesFromColDef(),
            this.setupTooltip(),
            this.addActiveHeaderMouseListeners(),
            this.setupSelectAll(),
            this.setupUserComp(),
            this.refreshAria(),
            (this.resizeFeature = this.createManagedBean(
              new dg(this.getPinned(), this.column, o, e, this)
            )),
            this.createManagedBean(new Ts([this.column], r)),
            this.createManagedBean(new Os(this.column, r, this.beans)),
            this.createManagedBean(
              new ar(r, {
                shouldStopEventPropagation: function (a) {
                  return s.shouldStopEventPropagation(a);
                },
                onTabKeyDown: function () {
                  return null;
                },
                handleKeyDown: this.handleKeyDown.bind(this),
                onFocusIn: this.onFocusIn.bind(this),
                onFocusOut: this.onFocusOut.bind(this),
              })
            ),
            this.addResizeAndMoveKeyboardListeners(),
            this.addManagedPropertyListeners(
              ['suppressMovableColumns', 'suppressMenuHide', 'suppressAggFuncInHeader'],
              this.refresh.bind(this)
            ),
            this.addManagedListener(this.column, J.EVENT_COL_DEF_CHANGED, this.refresh.bind(this)),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_VALUE_CHANGED,
              this.onColumnValueChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_ROW_GROUP_CHANGED,
              this.onColumnRowGroupChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_PIVOT_CHANGED,
              this.onColumnPivotChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_HEADER_HEIGHT_CHANGED,
              this.onHeaderHeightChanged.bind(this)
            );
        }),
        (t.prototype.resizeHeader = function (e, r) {
          var o, i;
          if (this.column.isResizable()) {
            var s = this.column.getActualWidth(),
              a = (o = this.column.getMinWidth()) !== null && o !== void 0 ? o : 0,
              l =
                (i = this.column.getMaxWidth()) !== null && i !== void 0
                  ? i
                  : Number.MAX_SAFE_INTEGER,
              u = Math.min(Math.max(s + e, a), l);
            this.beans.columnModel.setColumnWidths(
              [{ key: this.column, newWidth: u }],
              r,
              !0,
              'uiColumnResized'
            );
          }
        }),
        (t.prototype.moveHeader = function (e) {
          var r = this,
            o = r.eGui,
            i = r.column,
            s = r.gridOptionsService,
            a = r.ctrlsService,
            l = this.getPinned(),
            u = o.getBoundingClientRect().left,
            c = i.getActualWidth(),
            p = s.get('enableRtl'),
            d = (e === Ue.Left) !== p,
            h = vr.normaliseX(d ? u - 20 : u + c + 20, l, !0, s, a);
          vr.attemptMoveColumns({
            allMovingColumns: [i],
            isFromHeader: !0,
            hDirection: e,
            xPosition: h,
            pinned: l,
            fromEnter: !1,
            fakeEvent: !1,
            gridOptionsService: s,
            columnModel: this.beans.columnModel,
          }),
            a.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(i, 'auto');
        }),
        (t.prototype.setupUserComp = function () {
          var e = this.lookupUserCompDetails();
          this.setCompDetails(e);
        }),
        (t.prototype.setCompDetails = function (e) {
          (this.userCompDetails = e), this.comp.setUserCompDetails(e);
        }),
        (t.prototype.lookupUserCompDetails = function () {
          var e = this.createParams(),
            r = this.column.getColDef();
          return this.userComponentFactory.getHeaderCompDetails(r, e);
        }),
        (t.prototype.createParams = function () {
          var e = this,
            r = this.gridOptionsService.addGridCommonParams({
              column: this.column,
              displayName: this.displayName,
              enableSorting: this.column.isSortable(),
              enableMenu: this.menuEnabled,
              enableFilterButton:
                this.openFilterEnabled && this.menuService.isHeaderFilterButtonEnabled(this.column),
              enableFilterIcon: !this.openFilterEnabled || this.menuService.isLegacyMenuEnabled(),
              showColumnMenu: function (o) {
                e.menuService.showColumnMenu({
                  column: e.column,
                  buttonElement: o,
                  positionBy: 'button',
                });
              },
              showColumnMenuAfterMouseClick: function (o) {
                e.menuService.showColumnMenu({
                  column: e.column,
                  mouseEvent: o,
                  positionBy: 'mouse',
                });
              },
              showFilter: function (o) {
                e.menuService.showFilterMenu({
                  column: e.column,
                  buttonElement: o,
                  containerType: 'columnFilter',
                  positionBy: 'button',
                });
              },
              progressSort: function (o) {
                e.beans.sortController.progressSort(e.column, !!o, 'uiColumnSorted');
              },
              setSort: function (o, i) {
                e.beans.sortController.setSortForColumn(e.column, o, !!i, 'uiColumnSorted');
              },
              eGridHeader: this.getGui(),
            });
          return r;
        }),
        (t.prototype.setupSelectAll = function () {
          (this.selectAllFeature = this.createManagedBean(new fg(this.column))),
            this.selectAllFeature.setComp(this);
        }),
        (t.prototype.getSelectAllGui = function () {
          return this.selectAllFeature.getCheckboxGui();
        }),
        (t.prototype.handleKeyDown = function (e) {
          n.prototype.handleKeyDown.call(this, e),
            e.key === _.SPACE && this.selectAllFeature.onSpaceKeyDown(e),
            e.key === _.ENTER && this.onEnterKeyDown(e),
            e.key === _.DOWN && e.altKey && this.showMenuOnKeyPress(e, !1);
        }),
        (t.prototype.onEnterKeyDown = function (e) {
          if (e.ctrlKey || e.metaKey) this.showMenuOnKeyPress(e, !0);
          else if (this.sortable) {
            var r = e.shiftKey;
            this.beans.sortController.progressSort(this.column, r, 'uiColumnSorted');
          }
        }),
        (t.prototype.showMenuOnKeyPress = function (e, r) {
          var o = this.comp.getUserCompInstance();
          !o || !(o instanceof cs) || (o.onMenuKeyboardShortcut(r) && e.preventDefault());
        }),
        (t.prototype.onFocusIn = function (e) {
          if (!this.getGui().contains(e.relatedTarget)) {
            var r = this.getRowIndex();
            this.focusService.setFocusedHeader(r, this.column), this.announceAriaDescription();
          }
          this.focusService.isKeyboardMode() && this.setActiveHeader(!0);
        }),
        (t.prototype.onFocusOut = function (e) {
          this.getGui().contains(e.relatedTarget) || this.setActiveHeader(!1);
        }),
        (t.prototype.setupTooltip = function () {
          var e = this,
            r = {
              getColumn: function () {
                return e.column;
              },
              getColDef: function () {
                return e.column.getColDef();
              },
              getGui: function () {
                return e.eGui;
              },
              getLocation: function () {
                return 'header';
              },
              getTooltipValue: function () {
                var i = e.column.getColDef().headerTooltip;
                return i;
              },
            },
            o = this.createManagedBean(new di(r, this.beans));
          o.setComp(this.eGui),
            this.refreshFunctions.push(function () {
              return o.refreshToolTip();
            });
        }),
        (t.prototype.setupClassesFromColDef = function () {
          var e = this,
            r = function () {
              var o = e.column.getColDef(),
                i = hi.getHeaderClassesFromColDef(o, e.gridOptionsService, e.column, null),
                s = e.userHeaderClasses;
              (e.userHeaderClasses = new Set(i)),
                i.forEach(function (a) {
                  s.has(a) ? s.delete(a) : e.comp.addOrRemoveCssClass(a, !0);
                }),
                s.forEach(function (a) {
                  return e.comp.addOrRemoveCssClass(a, !1);
                });
            };
          this.refreshFunctions.push(r), r();
        }),
        (t.prototype.setDragSource = function (e) {
          var r = this;
          if (((this.dragSourceElement = e), this.removeDragSource(), !(!e || !this.draggable))) {
            var o = this,
              i = o.column,
              s = o.beans,
              a = o.displayName,
              l = o.dragAndDropService,
              u = o.gridOptionsService,
              c = s.columnModel,
              p = !this.gridOptionsService.get('suppressDragLeaveHidesColumns'),
              d = (this.dragSource = {
                type: Te.HeaderCell,
                eElement: e,
                getDefaultIconName: function () {
                  return p ? he.ICON_HIDE : he.ICON_NOT_ALLOWED;
                },
                getDragItem: function () {
                  return r.createDragItem(i);
                },
                dragItemName: a,
                onDragStarted: function () {
                  (p = !u.get('suppressDragLeaveHidesColumns')), i.setMoving(!0, 'uiColumnMoved');
                },
                onDragStopped: function () {
                  return i.setMoving(!1, 'uiColumnMoved');
                },
                onGridEnter: function (h) {
                  var f;
                  if (p) {
                    var y =
                      ((f = h == null ? void 0 : h.columns) === null || f === void 0
                        ? void 0
                        : f.filter(function (m) {
                            return !m.getColDef().lockVisible;
                          })) || [];
                    c.setColumnsVisible(y, !0, 'uiColumnMoved');
                  }
                },
                onGridExit: function (h) {
                  var f;
                  if (p) {
                    var y =
                      ((f = h == null ? void 0 : h.columns) === null || f === void 0
                        ? void 0
                        : f.filter(function (m) {
                            return !m.getColDef().lockVisible;
                          })) || [];
                    c.setColumnsVisible(y, !1, 'uiColumnMoved');
                  }
                },
              });
            l.addDragSource(d, !0);
          }
        }),
        (t.prototype.createDragItem = function (e) {
          var r = {};
          return (r[e.getId()] = e.isVisible()), { columns: [e], visibleState: r };
        }),
        (t.prototype.updateState = function () {
          (this.menuEnabled = this.menuService.isColumnMenuInHeaderEnabled(this.column)),
            (this.openFilterEnabled = this.menuService.isFilterMenuInHeaderEnabled(this.column)),
            (this.sortable = this.column.isSortable()),
            (this.displayName = this.calculateDisplayName()),
            (this.draggable = this.workOutDraggable());
        }),
        (t.prototype.addRefreshFunction = function (e) {
          this.refreshFunctions.push(e);
        }),
        (t.prototype.refresh = function () {
          this.updateState(),
            this.refreshHeaderComp(),
            this.refreshAria(),
            this.refreshFunctions.forEach(function (e) {
              return e();
            });
        }),
        (t.prototype.refreshHeaderComp = function () {
          var e = this.lookupUserCompDetails(),
            r = this.comp.getUserCompInstance(),
            o = r != null && this.userCompDetails.componentClass == e.componentClass,
            i = o ? this.attemptHeaderCompRefresh(e.params) : !1;
          i ? this.setDragSource(this.dragSourceElement) : this.setCompDetails(e);
        }),
        (t.prototype.attemptHeaderCompRefresh = function (e) {
          var r = this.comp.getUserCompInstance();
          if (!r || !r.refresh) return !1;
          var o = r.refresh(e);
          return o;
        }),
        (t.prototype.calculateDisplayName = function () {
          return this.beans.columnModel.getDisplayNameForColumn(this.column, 'header', !0);
        }),
        (t.prototype.checkDisplayName = function () {
          this.displayName !== this.calculateDisplayName() && this.refresh();
        }),
        (t.prototype.workOutDraggable = function () {
          var e = this.column.getColDef(),
            r = this.gridOptionsService.get('suppressMovableColumns'),
            o = !r && !e.suppressMovable && !e.lockPosition;
          return !!o || !!e.enableRowGroup || !!e.enablePivot;
        }),
        (t.prototype.onColumnRowGroupChanged = function () {
          this.checkDisplayName();
        }),
        (t.prototype.onColumnPivotChanged = function () {
          this.checkDisplayName();
        }),
        (t.prototype.onColumnValueChanged = function () {
          this.checkDisplayName();
        }),
        (t.prototype.setupWidth = function () {
          var e = this,
            r = function () {
              var o = e.column.getActualWidth();
              e.comp.setWidth(''.concat(o, 'px'));
            };
          this.addManagedListener(this.column, J.EVENT_WIDTH_CHANGED, r), r();
        }),
        (t.prototype.setupMovingCss = function () {
          var e = this,
            r = function () {
              e.comp.addOrRemoveCssClass('ag-header-cell-moving', e.column.isMoving());
            };
          this.addManagedListener(this.column, J.EVENT_MOVING_CHANGED, r), r();
        }),
        (t.prototype.setupMenuClass = function () {
          var e = this,
            r = function () {
              e.comp.addOrRemoveCssClass('ag-column-menu-visible', e.column.isMenuVisible());
            };
          this.addManagedListener(this.column, J.EVENT_MENU_VISIBLE_CHANGED, r), r();
        }),
        (t.prototype.setupSortableClass = function () {
          var e = this,
            r = function () {
              e.comp.addOrRemoveCssClass('ag-header-cell-sortable', !!e.sortable);
            };
          r(),
            this.addRefreshFunction(r),
            this.addManagedListener(
              this.eventService,
              J.EVENT_SORT_CHANGED,
              this.refreshAriaSort.bind(this)
            );
        }),
        (t.prototype.setupFilterClass = function () {
          var e = this,
            r = function () {
              var o = e.column.isFilterActive();
              e.comp.addOrRemoveCssClass('ag-header-cell-filtered', o), e.refreshAria();
            };
          this.addManagedListener(this.column, J.EVENT_FILTER_ACTIVE_CHANGED, r), r();
        }),
        (t.prototype.setupWrapTextClass = function () {
          var e = this,
            r = function () {
              var o = !!e.column.getColDef().wrapHeaderText;
              e.comp.addOrRemoveCssClass('ag-header-cell-wrap-text', o);
            };
          r(), this.addRefreshFunction(r);
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          n.prototype.onDisplayedColumnsChanged.call(this),
            this.isAlive() && this.onHeaderHeightChanged();
        }),
        (t.prototype.onHeaderHeightChanged = function () {
          this.refreshSpanHeaderHeight();
        }),
        (t.prototype.refreshSpanHeaderHeight = function () {
          var e = this,
            r = e.eGui,
            o = e.column,
            i = e.comp,
            s = e.beans;
          if (!o.isSpanHeaderHeight()) {
            r.style.removeProperty('top'),
              r.style.removeProperty('height'),
              i.addOrRemoveCssClass('ag-header-span-height', !1),
              i.addOrRemoveCssClass('ag-header-span-total', !1);
            return;
          }
          var a = this.column.getColumnGroupPaddingInfo(),
            l = a.numberOfParents,
            u = a.isSpanningTotal;
          i.addOrRemoveCssClass('ag-header-span-height', l > 0);
          var c = s.columnModel,
            p = c.getColumnHeaderRowHeight();
          if (l === 0) {
            i.addOrRemoveCssClass('ag-header-span-total', !1),
              r.style.setProperty('top', '0px'),
              r.style.setProperty('height', ''.concat(p, 'px'));
            return;
          }
          i.addOrRemoveCssClass('ag-header-span-total', u);
          var d = c.isPivotMode(),
            h = d ? c.getPivotGroupHeaderHeight() : c.getGroupHeaderHeight(),
            f = l * h;
          r.style.setProperty('top', ''.concat(-f, 'px')),
            r.style.setProperty('height', ''.concat(p + f, 'px'));
        }),
        (t.prototype.setupAutoHeight = function (e) {
          var r = this,
            o = this.beans,
            i = o.columnModel,
            s = o.resizeObserverService,
            a = function (h) {
              if (r.isAlive()) {
                var f = Bt(r.getGui()),
                  y = f.paddingTop,
                  m = f.paddingBottom,
                  C = f.borderBottomWidth,
                  w = f.borderTopWidth,
                  E = y + m + C + w,
                  S = e.offsetHeight,
                  R = S + E;
                if (h < 5) {
                  var O = r.beans.gridOptionsService.getDocument(),
                    b = !O || !O.contains(e),
                    A = R == 0;
                  if (b || A) {
                    window.setTimeout(function () {
                      return a(h + 1);
                    }, 0);
                    return;
                  }
                }
                i.setColumnHeaderHeight(r.column, R);
              }
            },
            l = !1,
            u,
            c = function () {
              var h = r.column.isAutoHeaderHeight();
              h && !l && p(), !h && l && d();
            },
            p = function () {
              (l = !0),
                a(0),
                r.comp.addOrRemoveCssClass('ag-header-cell-auto-height', !0),
                (u = s.observeResize(e, function () {
                  return a(0);
                }));
            },
            d = function () {
              (l = !1),
                u && u(),
                r.comp.addOrRemoveCssClass('ag-header-cell-auto-height', !1),
                (u = void 0);
            };
          c(),
            this.addDestroyFunc(function () {
              return d();
            }),
            this.addManagedListener(this.column, J.EVENT_WIDTH_CHANGED, function () {
              return l && a(0);
            }),
            this.addManagedListener(this.eventService, J.EVENT_SORT_CHANGED, function () {
              l &&
                window.setTimeout(function () {
                  return a(0);
                });
            }),
            this.addRefreshFunction(c);
        }),
        (t.prototype.refreshAriaSort = function () {
          if (this.sortable) {
            var e = this.localeService.getLocaleTextFunc(),
              r = this.beans.sortController.getDisplaySortForColumn(this.column) || null;
            this.comp.setAriaSort(Ia(r)),
              this.setAriaDescriptionProperty(
                'sort',
                e('ariaSortableColumn', 'Press ENTER to sort')
              );
          } else this.comp.setAriaSort(), this.setAriaDescriptionProperty('sort', null);
        }),
        (t.prototype.refreshAriaMenu = function () {
          if (this.menuEnabled) {
            var e = this.localeService.getLocaleTextFunc();
            this.setAriaDescriptionProperty(
              'menu',
              e('ariaMenuColumn', 'Press ALT DOWN to open column menu')
            );
          } else this.setAriaDescriptionProperty('menu', null);
        }),
        (t.prototype.refreshAriaFilterButton = function () {
          if (this.openFilterEnabled && !this.menuService.isLegacyMenuEnabled()) {
            var e = this.localeService.getLocaleTextFunc();
            this.setAriaDescriptionProperty(
              'filterButton',
              e('ariaFilterColumn', 'Press CTRL ENTER to open filter')
            );
          } else this.setAriaDescriptionProperty('filterButton', null);
        }),
        (t.prototype.refreshAriaFiltered = function () {
          var e = this.localeService.getLocaleTextFunc(),
            r = this.column.isFilterActive();
          r
            ? this.setAriaDescriptionProperty('filter', e('ariaColumnFiltered', 'Column Filtered'))
            : this.setAriaDescriptionProperty('filter', null);
        }),
        (t.prototype.setAriaDescriptionProperty = function (e, r) {
          r != null
            ? this.ariaDescriptionProperties.set(e, r)
            : this.ariaDescriptionProperties.delete(e);
        }),
        (t.prototype.announceAriaDescription = function () {
          var e = this,
            r = this.beans.gridOptionsService.getDocument();
          if (this.eGui.contains(r.activeElement)) {
            var o = Array.from(this.ariaDescriptionProperties.keys())
              .sort(function (i, s) {
                return i === 'filter' ? -1 : s.charCodeAt(0) - i.charCodeAt(0);
              })
              .map(function (i) {
                return e.ariaDescriptionProperties.get(i);
              })
              .join('. ');
            this.beans.ariaAnnouncementService.announceValue(o);
          }
        }),
        (t.prototype.refreshAria = function () {
          this.refreshAriaSort(),
            this.refreshAriaMenu(),
            this.refreshAriaFilterButton(),
            this.refreshAriaFiltered();
        }),
        (t.prototype.addColumnHoverListener = function () {
          var e = this,
            r = function () {
              if (e.gridOptionsService.get('columnHoverHighlight')) {
                var o = e.beans.columnHoverService.isHovered(e.column);
                e.comp.addOrRemoveCssClass('ag-column-hover', o);
              }
            };
          this.addManagedListener(this.eventService, g.EVENT_COLUMN_HOVER_CHANGED, r), r();
        }),
        (t.prototype.getColId = function () {
          return this.column.getColId();
        }),
        (t.prototype.addActiveHeaderMouseListeners = function () {
          var e = this,
            r = function (s) {
              return e.handleMouseOverChange(s.type === 'mouseenter');
            },
            o = function () {
              return e.dispatchColumnMouseEvent(g.EVENT_COLUMN_HEADER_CLICKED, e.column);
            },
            i = function (s) {
              return e.handleContextMenuMouseEvent(s, void 0, e.column);
            };
          this.addManagedListener(this.getGui(), 'mouseenter', r),
            this.addManagedListener(this.getGui(), 'mouseleave', r),
            this.addManagedListener(this.getGui(), 'click', o),
            this.addManagedListener(this.getGui(), 'contextmenu', i);
        }),
        (t.prototype.handleMouseOverChange = function (e) {
          this.setActiveHeader(e);
          var r = e ? g.EVENT_COLUMN_HEADER_MOUSE_OVER : g.EVENT_COLUMN_HEADER_MOUSE_LEAVE,
            o = { type: r, column: this.column };
          this.eventService.dispatchEvent(o);
        }),
        (t.prototype.setActiveHeader = function (e) {
          this.comp.addOrRemoveCssClass('ag-header-active', e);
        }),
        (t.prototype.getAnchorElementForMenu = function (e) {
          var r = this.comp.getUserCompInstance();
          return r instanceof cs ? r.getAnchorElementForMenu(e) : this.getGui();
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this),
            (this.refreshFunctions = null),
            (this.selectAllFeature = null),
            (this.dragSourceElement = null),
            (this.userCompDetails = null),
            (this.userHeaderClasses = null),
            (this.ariaDescriptionProperties = null);
        }),
        t
      );
    })(Si),
    yg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    wi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    mg = (function (n) {
      yg(t, n);
      function t(e, r, o, i) {
        var s = n.call(this) || this;
        return (s.eResize = r), (s.comp = e), (s.pinned = o), (s.columnGroup = i), s;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          if (!this.columnGroup.isResizable()) {
            this.comp.setResizableDisplayed(!1);
            return;
          }
          var r = this.horizontalResizeService.addResizeBar({
            eResizeBar: this.eResize,
            onResizeStart: this.onResizeStart.bind(this),
            onResizing: this.onResizing.bind(this, !1),
            onResizeEnd: this.onResizing.bind(this, !0),
          });
          if ((this.addDestroyFunc(r), !this.gridOptionsService.get('suppressAutoSize'))) {
            var o = this.gridOptionsService.get('skipHeaderOnAutoSize');
            this.eResize.addEventListener('dblclick', function () {
              var i = [],
                s = e.columnGroup.getDisplayedLeafColumns();
              s.forEach(function (a) {
                a.getColDef().suppressAutoSize || i.push(a.getColId());
              }),
                i.length > 0 &&
                  e.columnModel.autoSizeColumns({
                    columns: i,
                    skipHeader: o,
                    stopAtGroup: e.columnGroup,
                    source: 'uiColumnResized',
                  }),
                e.resizeLeafColumnsToFit('uiColumnResized');
            });
          }
        }),
        (t.prototype.onResizeStart = function (e) {
          var r = this.getInitialValues(e);
          this.storeLocalValues(r), this.toggleColumnResizing(!0);
        }),
        (t.prototype.onResizing = function (e, r, o) {
          o === void 0 && (o = 'uiColumnResized');
          var i = this.normaliseDragChange(r),
            s = this.resizeStartWidth + i;
          this.resizeColumnsFromLocalValues(s, o, e);
        }),
        (t.prototype.getInitialValues = function (e) {
          var r = this.getColumnsToResize(),
            o = this.getInitialSizeOfColumns(r),
            i = this.getSizeRatiosOfColumns(r, o),
            s = { columnsToResize: r, resizeStartWidth: o, resizeRatios: i },
            a = null;
          if ((e && (a = this.columnModel.getDisplayedGroupAfter(this.columnGroup)), a)) {
            var l = a.getDisplayedLeafColumns(),
              u = (s.groupAfterColumns = l.filter(function (p) {
                return p.isResizable();
              })),
              c = (s.groupAfterStartWidth = this.getInitialSizeOfColumns(u));
            s.groupAfterRatios = this.getSizeRatiosOfColumns(u, c);
          } else
            (s.groupAfterColumns = void 0),
              (s.groupAfterStartWidth = void 0),
              (s.groupAfterRatios = void 0);
          return s;
        }),
        (t.prototype.storeLocalValues = function (e) {
          var r = e.columnsToResize,
            o = e.resizeStartWidth,
            i = e.resizeRatios,
            s = e.groupAfterColumns,
            a = e.groupAfterStartWidth,
            l = e.groupAfterRatios;
          (this.resizeCols = r),
            (this.resizeStartWidth = o),
            (this.resizeRatios = i),
            (this.resizeTakeFromCols = s),
            (this.resizeTakeFromStartWidth = a),
            (this.resizeTakeFromRatios = l);
        }),
        (t.prototype.clearLocalValues = function () {
          (this.resizeCols = void 0),
            (this.resizeRatios = void 0),
            (this.resizeTakeFromCols = void 0),
            (this.resizeTakeFromRatios = void 0);
        }),
        (t.prototype.resizeLeafColumnsToFit = function (e) {
          var r = this.autoWidthCalculator.getPreferredWidthForColumnGroup(this.columnGroup),
            o = this.getInitialValues();
          r > o.resizeStartWidth && this.resizeColumns(o, r, e, !0);
        }),
        (t.prototype.resizeColumnsFromLocalValues = function (e, r, o) {
          var i, s, a;
          if ((o === void 0 && (o = !0), !(!this.resizeCols || !this.resizeRatios))) {
            var l = {
              columnsToResize: this.resizeCols,
              resizeStartWidth: this.resizeStartWidth,
              resizeRatios: this.resizeRatios,
              groupAfterColumns:
                (i = this.resizeTakeFromCols) !== null && i !== void 0 ? i : void 0,
              groupAfterStartWidth:
                (s = this.resizeTakeFromStartWidth) !== null && s !== void 0 ? s : void 0,
              groupAfterRatios:
                (a = this.resizeTakeFromRatios) !== null && a !== void 0 ? a : void 0,
            };
            this.resizeColumns(l, e, r, o);
          }
        }),
        (t.prototype.resizeColumns = function (e, r, o, i) {
          i === void 0 && (i = !0);
          var s = e.columnsToResize,
            a = e.resizeStartWidth,
            l = e.resizeRatios,
            u = e.groupAfterColumns,
            c = e.groupAfterStartWidth,
            p = e.groupAfterRatios,
            d = [];
          if ((d.push({ columns: s, ratios: l, width: r }), u)) {
            var h = r - a;
            d.push({ columns: u, ratios: p, width: c - h });
          }
          this.columnModel.resizeColumnSets({ resizeSets: d, finished: i, source: o }),
            i && this.toggleColumnResizing(!1);
        }),
        (t.prototype.toggleColumnResizing = function (e) {
          this.comp.addOrRemoveCssClass('ag-column-resizing', e);
        }),
        (t.prototype.getColumnsToResize = function () {
          var e = this.columnGroup.getDisplayedLeafColumns();
          return e.filter(function (r) {
            return r.isResizable();
          });
        }),
        (t.prototype.getInitialSizeOfColumns = function (e) {
          return e.reduce(function (r, o) {
            return r + o.getActualWidth();
          }, 0);
        }),
        (t.prototype.getSizeRatiosOfColumns = function (e, r) {
          return e.map(function (o) {
            return o.getActualWidth() / r;
          });
        }),
        (t.prototype.normaliseDragChange = function (e) {
          var r = e;
          return (
            this.gridOptionsService.get('enableRtl')
              ? this.pinned !== 'left' && (r *= -1)
              : this.pinned === 'right' && (r *= -1),
            r
          );
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this), this.clearLocalValues();
        }),
        wi([v('horizontalResizeService')], t.prototype, 'horizontalResizeService', void 0),
        wi([v('autoWidthCalculator')], t.prototype, 'autoWidthCalculator', void 0),
        wi([v('columnModel')], t.prototype, 'columnModel', void 0),
        wi([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    Cg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Sg = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    wg = (function (n) {
      Cg(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return (o.removeChildListenersFuncs = []), (o.columnGroup = r), (o.comp = e), o;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addListenersToChildrenColumns(),
            this.addManagedListener(
              this.columnGroup,
              se.EVENT_DISPLAYED_CHILDREN_CHANGED,
              this.onDisplayedChildrenChanged.bind(this)
            ),
            this.onWidthChanged(),
            this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));
        }),
        (t.prototype.addListenersToChildrenColumns = function () {
          var e = this;
          this.removeListenersOnChildrenColumns();
          var r = this.onWidthChanged.bind(this);
          this.columnGroup.getLeafColumns().forEach(function (o) {
            o.addEventListener('widthChanged', r),
              o.addEventListener('visibleChanged', r),
              e.removeChildListenersFuncs.push(function () {
                o.removeEventListener('widthChanged', r),
                  o.removeEventListener('visibleChanged', r);
              });
          });
        }),
        (t.prototype.removeListenersOnChildrenColumns = function () {
          this.removeChildListenersFuncs.forEach(function (e) {
            return e();
          }),
            (this.removeChildListenersFuncs = []);
        }),
        (t.prototype.onDisplayedChildrenChanged = function () {
          this.addListenersToChildrenColumns(), this.onWidthChanged();
        }),
        (t.prototype.onWidthChanged = function () {
          var e = this.columnGroup.getActualWidth();
          this.comp.setWidth(''.concat(e, 'px')),
            this.comp.addOrRemoveCssClass('ag-hidden', e === 0);
        }),
        Sg([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    Eg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ei = function () {
      return (
        (Ei =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Ei.apply(this, arguments)
      );
    },
    _g = (function (n) {
      Eg(t, n);
      function t(e, r, o) {
        var i = n.call(this, e, r, o) || this;
        return (
          (i.onSuppressColMoveChange = function () {
            if (!i.isAlive() || i.isSuppressMoving()) i.removeDragSource();
            else if (!i.dragSource) {
              var s = i.getGui();
              i.setDragSource(s);
            }
          }),
          (i.column = e),
          i
        );
      }
      return (
        (t.prototype.setComp = function (e, r, o) {
          (this.comp = e),
            this.setGui(r),
            (this.displayName = this.beans.columnModel.getDisplayNameForColumnGroup(
              this.column,
              'header'
            )),
            this.addClasses(),
            this.setupMovingCss(),
            this.setupExpandable(),
            this.setupTooltip(),
            this.setupUserComp(),
            this.addHeaderMouseListeners();
          var i = this.getParentRowCtrl().getPinned(),
            s = this.column.getProvidedColumnGroup().getLeafColumns();
          this.createManagedBean(new Ts(s, r)),
            this.createManagedBean(new Os(this.column, r, this.beans)),
            this.createManagedBean(new wg(e, this.column)),
            (this.resizeFeature = this.createManagedBean(new mg(e, o, i, this.column))),
            this.createManagedBean(
              new ar(r, {
                shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),
                onTabKeyDown: function () {},
                handleKeyDown: this.handleKeyDown.bind(this),
                onFocusIn: this.onFocusIn.bind(this),
              })
            ),
            this.addManagedPropertyListener(
              g.EVENT_SUPPRESS_COLUMN_MOVE_CHANGED,
              this.onSuppressColMoveChange
            ),
            this.addResizeAndMoveKeyboardListeners();
        }),
        (t.prototype.resizeHeader = function (e, r) {
          if (this.resizeFeature) {
            var o = this.resizeFeature.getInitialValues(r);
            this.resizeFeature.resizeColumns(o, o.resizeStartWidth + e, 'uiColumnResized', !0);
          }
        }),
        (t.prototype.moveHeader = function (e) {
          var r = this,
            o = r.beans,
            i = r.eGui,
            s = r.column,
            a = r.gridOptionsService,
            l = r.ctrlsService,
            u = a.get('enableRtl'),
            c = e === Ue.Left,
            p = this.getPinned(),
            d = i.getBoundingClientRect(),
            h = d.left,
            f = d.width,
            y = vr.normaliseX(c !== u ? h - 20 : h + f + 20, p, !0, a, l),
            m = s.getGroupId(),
            C = this.focusService.getFocusedHeader();
          vr.attemptMoveColumns({
            allMovingColumns: this.column.getLeafColumns(),
            isFromHeader: !0,
            hDirection: e,
            xPosition: y,
            pinned: p,
            fromEnter: !1,
            fakeEvent: !1,
            gridOptionsService: a,
            columnModel: o.columnModel,
          });
          var w = s.getDisplayedLeafColumns(),
            E = c ? w[0] : q(w);
          this.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(E, 'auto'),
            !this.isAlive() && C && this.restoreFocus(m, s, C);
        }),
        (t.prototype.restoreFocus = function (e, r, o) {
          var i = r.getLeafColumns();
          if (i.length) {
            var s = i[0].getParent();
            if (s) {
              var a = this.findGroupWidthId(s, e);
              a &&
                this.focusService.focusHeaderPosition({
                  headerPosition: Ei(Ei({}, o), { column: a }),
                });
            }
          }
        }),
        (t.prototype.findGroupWidthId = function (e, r) {
          for (; e; ) {
            if (e.getGroupId() === r) return e;
            e = e.getParent();
          }
          return null;
        }),
        (t.prototype.resizeLeafColumnsToFit = function (e) {
          this.resizeFeature && this.resizeFeature.resizeLeafColumnsToFit(e);
        }),
        (t.prototype.setupUserComp = function () {
          var e = this,
            r = this.gridOptionsService.addGridCommonParams({
              displayName: this.displayName,
              columnGroup: this.column,
              setExpanded: function (i) {
                e.beans.columnModel.setColumnGroupOpened(
                  e.column.getProvidedColumnGroup(),
                  i,
                  'gridInitializing'
                );
              },
            }),
            o = this.userComponentFactory.getHeaderGroupCompDetails(r);
          this.comp.setUserCompDetails(o);
        }),
        (t.prototype.addHeaderMouseListeners = function () {
          var e = this,
            r = function (s) {
              return e.handleMouseOverChange(s.type === 'mouseenter');
            },
            o = function () {
              return e.dispatchColumnMouseEvent(
                g.EVENT_COLUMN_HEADER_CLICKED,
                e.column.getProvidedColumnGroup()
              );
            },
            i = function (s) {
              return e.handleContextMenuMouseEvent(s, void 0, e.column.getProvidedColumnGroup());
            };
          this.addManagedListener(this.getGui(), 'mouseenter', r),
            this.addManagedListener(this.getGui(), 'mouseleave', r),
            this.addManagedListener(this.getGui(), 'click', o),
            this.addManagedListener(this.getGui(), 'contextmenu', i);
        }),
        (t.prototype.handleMouseOverChange = function (e) {
          var r = e ? g.EVENT_COLUMN_HEADER_MOUSE_OVER : g.EVENT_COLUMN_HEADER_MOUSE_LEAVE,
            o = { type: r, column: this.column.getProvidedColumnGroup() };
          this.eventService.dispatchEvent(o);
        }),
        (t.prototype.setupTooltip = function () {
          var e = this,
            r = this.column.getColGroupDef(),
            o = {
              getColumn: function () {
                return e.column;
              },
              getGui: function () {
                return e.eGui;
              },
              getLocation: function () {
                return 'headerGroup';
              },
              getTooltipValue: function () {
                return r && r.headerTooltip;
              },
            };
          r &&
            (o.getColDef = function () {
              return r;
            });
          var i = this.createManagedBean(new di(o, this.beans));
          i.setComp(this.eGui);
        }),
        (t.prototype.setupExpandable = function () {
          var e = this.column.getProvidedColumnGroup();
          this.refreshExpanded(),
            this.addManagedListener(
              e,
              ie.EVENT_EXPANDABLE_CHANGED,
              this.refreshExpanded.bind(this)
            ),
            this.addManagedListener(e, ie.EVENT_EXPANDED_CHANGED, this.refreshExpanded.bind(this));
        }),
        (t.prototype.refreshExpanded = function () {
          var e = this.column;
          this.expandable = e.isExpandable();
          var r = e.isExpanded();
          this.expandable
            ? this.comp.setAriaExpanded(r ? 'true' : 'false')
            : this.comp.setAriaExpanded(void 0);
        }),
        (t.prototype.getColId = function () {
          return this.column.getUniqueId();
        }),
        (t.prototype.addClasses = function () {
          var e = this,
            r = this.column.getColGroupDef(),
            o = hi.getHeaderClassesFromColDef(r, this.gridOptionsService, null, this.column);
          if (this.column.isPadding()) {
            o.push('ag-header-group-cell-no-group');
            var i = this.column.getLeafColumns();
            i.every(function (s) {
              return s.isSpanHeaderHeight();
            }) && o.push('ag-header-span-height');
          } else o.push('ag-header-group-cell-with-group');
          o.forEach(function (s) {
            return e.comp.addOrRemoveCssClass(s, !0);
          });
        }),
        (t.prototype.setupMovingCss = function () {
          var e = this,
            r = this.column.getProvidedColumnGroup(),
            o = r.getLeafColumns(),
            i = function () {
              return e.comp.addOrRemoveCssClass('ag-header-cell-moving', e.column.isMoving());
            };
          o.forEach(function (s) {
            e.addManagedListener(s, J.EVENT_MOVING_CHANGED, i);
          }),
            i();
        }),
        (t.prototype.onFocusIn = function (e) {
          if (!this.eGui.contains(e.relatedTarget)) {
            var r = this.getRowIndex();
            this.beans.focusService.setFocusedHeader(r, this.column);
          }
        }),
        (t.prototype.handleKeyDown = function (e) {
          n.prototype.handleKeyDown.call(this, e);
          var r = this.getWrapperHasFocus();
          if (!(!this.expandable || !r) && e.key === _.ENTER) {
            var o = this.column,
              i = !o.isExpanded();
            this.beans.columnModel.setColumnGroupOpened(
              o.getProvidedColumnGroup(),
              i,
              'uiColumnExpanded'
            );
          }
        }),
        (t.prototype.setDragSource = function (e) {
          var r = this;
          if (!(!this.isAlive() || this.isSuppressMoving()) && (this.removeDragSource(), !!e)) {
            var o = this,
              i = o.beans,
              s = o.column,
              a = o.displayName,
              l = o.gridOptionsService,
              u = o.dragAndDropService,
              c = i.columnModel,
              p = s.getProvidedColumnGroup().getLeafColumns(),
              d = !l.get('suppressDragLeaveHidesColumns'),
              h = (this.dragSource = {
                type: Te.HeaderCell,
                eElement: e,
                getDefaultIconName: function () {
                  return d ? he.ICON_HIDE : he.ICON_NOT_ALLOWED;
                },
                dragItemName: a,
                getDragItem: function () {
                  return r.getDragItemForGroup(s);
                },
                onDragStarted: function () {
                  (d = !l.get('suppressDragLeaveHidesColumns')),
                    p.forEach(function (f) {
                      return f.setMoving(!0, 'uiColumnDragged');
                    });
                },
                onDragStopped: function () {
                  return p.forEach(function (f) {
                    return f.setMoving(!1, 'uiColumnDragged');
                  });
                },
                onGridEnter: function (f) {
                  var y;
                  if (d) {
                    var m =
                      ((y = f == null ? void 0 : f.columns) === null || y === void 0
                        ? void 0
                        : y.filter(function (C) {
                            return !C.getColDef().lockVisible;
                          })) || [];
                    c.setColumnsVisible(m, !0, 'uiColumnMoved');
                  }
                },
                onGridExit: function (f) {
                  var y;
                  if (d) {
                    var m =
                      ((y = f == null ? void 0 : f.columns) === null || y === void 0
                        ? void 0
                        : y.filter(function (C) {
                            return !C.getColDef().lockVisible;
                          })) || [];
                    c.setColumnsVisible(m, !1, 'uiColumnMoved');
                  }
                },
              });
            u.addDragSource(h, !0);
          }
        }),
        (t.prototype.getDragItemForGroup = function (e) {
          var r = e.getProvidedColumnGroup().getLeafColumns(),
            o = {};
          r.forEach(function (s) {
            return (o[s.getId()] = s.isVisible());
          });
          var i = [];
          return (
            this.beans.columnModel.getAllDisplayedColumns().forEach(function (s) {
              r.indexOf(s) >= 0 && (i.push(s), Ee(r, s));
            }),
            r.forEach(function (s) {
              return i.push(s);
            }),
            { columns: i, visibleState: o }
          );
        }),
        (t.prototype.isSuppressMoving = function () {
          var e = !1;
          this.column.getLeafColumns().forEach(function (o) {
            (o.getColDef().suppressMovable || o.getColDef().lockPosition) && (e = !0);
          });
          var r = e || this.gridOptionsService.get('suppressMovableColumns');
          return r;
        }),
        t
      );
    })(Si),
    Rg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    vu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    gu = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    },
    Og = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Tg = 0,
    Ps = (function (n) {
      Rg(t, n);
      function t(e, r, o) {
        var i = n.call(this) || this;
        (i.instanceId = Tg++), (i.rowIndex = e), (i.pinned = r), (i.type = o);
        var s =
          o == ge.COLUMN_GROUP
            ? 'ag-header-row-column-group'
            : o == ge.FLOATING_FILTER
            ? 'ag-header-row-column-filter'
            : 'ag-header-row-column';
        return (i.headerRowClass = 'ag-header-row '.concat(s)), i;
      }
      return (
        (t.prototype.postConstruct = function () {
          (this.isPrintLayout = this.gridOptionsService.isDomLayout('print')),
            (this.isEnsureDomOrder = this.gridOptionsService.get('ensureDomOrder'));
        }),
        (t.prototype.getInstanceId = function () {
          return this.instanceId;
        }),
        (t.prototype.setComp = function (e, r) {
          r === void 0 && (r = !0),
            (this.comp = e),
            r && (this.onRowHeightChanged(), this.onVirtualColumnsChanged()),
            this.setWidth(),
            this.addEventListeners();
        }),
        (t.prototype.getHeaderRowClass = function () {
          return this.headerRowClass;
        }),
        (t.prototype.getAriaRowIndex = function () {
          return this.rowIndex + 1;
        }),
        (t.prototype.addEventListeners = function () {
          var e = this;
          this.addManagedListener(
            this.eventService,
            g.EVENT_COLUMN_RESIZED,
            this.onColumnResized.bind(this)
          ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_CHANGED,
              this.onDisplayedColumnsChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_VIRTUAL_COLUMNS_CHANGED,
              function (r) {
                return e.onVirtualColumnsChanged(r.afterScroll);
              }
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_HEADER_HEIGHT_CHANGED,
              this.onRowHeightChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_GRID_STYLES_CHANGED,
              this.onRowHeightChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_ADVANCED_FILTER_ENABLED_CHANGED,
              this.onRowHeightChanged.bind(this)
            ),
            this.addManagedPropertyListener('domLayout', this.onDisplayedColumnsChanged.bind(this)),
            this.addManagedPropertyListener('ensureDomOrder', function (r) {
              return (e.isEnsureDomOrder = r.currentValue);
            }),
            this.addManagedPropertyListener('headerHeight', this.onRowHeightChanged.bind(this)),
            this.addManagedPropertyListener(
              'pivotHeaderHeight',
              this.onRowHeightChanged.bind(this)
            ),
            this.addManagedPropertyListener(
              'groupHeaderHeight',
              this.onRowHeightChanged.bind(this)
            ),
            this.addManagedPropertyListener(
              'pivotGroupHeaderHeight',
              this.onRowHeightChanged.bind(this)
            ),
            this.addManagedPropertyListener(
              'floatingFiltersHeight',
              this.onRowHeightChanged.bind(this)
            );
        }),
        (t.prototype.getHeaderCellCtrl = function (e) {
          if (this.headerCellCtrls)
            return Zt(this.headerCellCtrls).find(function (r) {
              return r.getColumnGroupChild() === e;
            });
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          (this.isPrintLayout = this.gridOptionsService.isDomLayout('print')),
            this.onVirtualColumnsChanged(),
            this.setWidth(),
            this.onRowHeightChanged();
        }),
        (t.prototype.getType = function () {
          return this.type;
        }),
        (t.prototype.onColumnResized = function () {
          this.setWidth();
        }),
        (t.prototype.setWidth = function () {
          var e = this.getWidthForRow();
          this.comp.setWidth(''.concat(e, 'px'));
        }),
        (t.prototype.getWidthForRow = function () {
          var e = this.beans.columnModel;
          if (this.isPrintLayout) {
            var r = this.pinned != null;
            return r
              ? 0
              : e.getContainerWidth('right') +
                  e.getContainerWidth('left') +
                  e.getContainerWidth(null);
          }
          return e.getContainerWidth(this.pinned);
        }),
        (t.prototype.onRowHeightChanged = function () {
          var e = this.getTopAndHeight(),
            r = e.topOffset,
            o = e.rowHeight;
          this.comp.setTop(r + 'px'), this.comp.setHeight(o + 'px');
        }),
        (t.prototype.getTopAndHeight = function () {
          var e = this.beans,
            r = e.columnModel,
            o = e.filterManager,
            i = r.getHeaderRowCount(),
            s = [],
            a = 0;
          o.hasFloatingFilters() && (i++, (a = 1));
          for (
            var l = r.getColumnGroupHeaderRowHeight(),
              u = r.getColumnHeaderRowHeight(),
              c = 1 + a,
              p = i - c,
              d = 0;
            d < p;
            d++
          )
            s.push(l);
          s.push(u);
          for (var d = 0; d < a; d++) s.push(r.getFloatingFiltersHeight());
          for (var h = 0, d = 0; d < this.rowIndex; d++) h += s[d];
          var f = s[this.rowIndex];
          return { topOffset: h, rowHeight: f };
        }),
        (t.prototype.getPinned = function () {
          return this.pinned;
        }),
        (t.prototype.getRowIndex = function () {
          return this.rowIndex;
        }),
        (t.prototype.onVirtualColumnsChanged = function (e) {
          e === void 0 && (e = !1);
          var r = this.getHeaderCtrls(),
            o = this.isEnsureDomOrder || this.isPrintLayout;
          this.comp.setHeaderCtrls(r, o, e);
        }),
        (t.prototype.getHeaderCtrls = function () {
          var e,
            r,
            o,
            i,
            s = this,
            a = this.headerCellCtrls;
          this.headerCellCtrls = new Map();
          var l = this.getColumnsInViewport();
          try {
            for (var u = gu(l), c = u.next(); !c.done; c = u.next()) {
              var p = c.value;
              this.recycleAndCreateHeaderCtrls(p, a);
            }
          } catch (S) {
            e = { error: S };
          } finally {
            try {
              c && !c.done && (r = u.return) && r.call(u);
            } finally {
              if (e) throw e.error;
            }
          }
          var d = function (S) {
            var R = s.beans,
              O = R.focusService,
              b = R.columnModel,
              A = O.isHeaderWrapperFocused(S);
            if (!A) return !1;
            var M = b.isDisplayed(S.getColumnGroupChild());
            return M;
          };
          if (a)
            try {
              for (var h = gu(a), f = h.next(); !f.done; f = h.next()) {
                var y = Og(f.value, 2),
                  m = y[0],
                  C = y[1],
                  w = d(C);
                w ? this.headerCellCtrls.set(m, C) : this.destroyBean(C);
              }
            } catch (S) {
              o = { error: S };
            } finally {
              try {
                f && !f.done && (i = h.return) && i.call(h);
              } finally {
                if (o) throw o.error;
              }
            }
          var E = Array.from(this.headerCellCtrls.values());
          return E;
        }),
        (t.prototype.recycleAndCreateHeaderCtrls = function (e, r) {
          if (this.headerCellCtrls && !e.isEmptyGroup()) {
            var o = e.getUniqueId(),
              i;
            r && ((i = r.get(o)), r.delete(o));
            var s = i && i.getColumnGroupChild() != e;
            if ((s && (this.destroyBean(i), (i = void 0)), i == null))
              switch (this.type) {
                case ge.FLOATING_FILTER:
                  i = this.createBean(new cg(e, this.beans, this));
                  break;
                case ge.COLUMN_GROUP:
                  i = this.createBean(new _g(e, this.beans, this));
                  break;
                default:
                  i = this.createBean(new gg(e, this.beans, this));
                  break;
              }
            this.headerCellCtrls.set(o, i);
          }
        }),
        (t.prototype.getColumnsInViewport = function () {
          return this.isPrintLayout
            ? this.getColumnsInViewportPrintLayout()
            : this.getColumnsInViewportNormalLayout();
        }),
        (t.prototype.getColumnsInViewportPrintLayout = function () {
          if (this.pinned != null) return [];
          var e = [],
            r = this.getActualDepth(),
            o = this.beans.columnModel;
          return (
            ['left', null, 'right'].forEach(function (i) {
              var s = o.getVirtualHeaderGroupRow(i, r);
              e = e.concat(s);
            }),
            e
          );
        }),
        (t.prototype.getActualDepth = function () {
          return this.type == ge.FLOATING_FILTER ? this.rowIndex - 1 : this.rowIndex;
        }),
        (t.prototype.getColumnsInViewportNormalLayout = function () {
          return this.beans.columnModel.getVirtualHeaderGroupRow(
            this.pinned,
            this.getActualDepth()
          );
        }),
        (t.prototype.focusHeader = function (e, r) {
          if (!this.headerCellCtrls) return !1;
          var o = Array.from(this.headerCellCtrls.values()),
            i = o.find(function (s) {
              return s.getColumnGroupChild() == e;
            });
          return i ? i.focus(r) : !1;
        }),
        (t.prototype.destroy = function () {
          var e = this;
          this.headerCellCtrls &&
            this.headerCellCtrls.forEach(function (r) {
              e.destroyBean(r);
            }),
            (this.headerCellCtrls = void 0),
            n.prototype.destroy.call(this);
        }),
        vu([v('beans')], t.prototype, 'beans', void 0),
        vu([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    Pg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Nr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Dg = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Ag = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    bg = (function (n) {
      Pg(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (
          (r.hidden = !1),
          (r.includeFloatingFilter = !1),
          (r.groupsRowCtrls = []),
          (r.pinned = e),
          r
        );
      }
      return (
        (t.prototype.setComp = function (e, r) {
          (this.comp = e),
            (this.eViewport = r),
            this.setupCenterWidth(),
            this.setupPinnedWidth(),
            this.setupDragAndDrop(this.eViewport),
            this.addManagedListener(
              this.eventService,
              g.EVENT_GRID_COLUMNS_CHANGED,
              this.onGridColumnsChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_CHANGED,
              this.onDisplayedColumnsChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_ADVANCED_FILTER_ENABLED_CHANGED,
              this.onDisplayedColumnsChanged.bind(this)
            ),
            this.ctrlsService.registerHeaderContainer(this, this.pinned),
            this.columnModel.isReady() && this.refresh();
        }),
        (t.prototype.setupDragAndDrop = function (e) {
          var r = new Xv(this.pinned, e);
          this.createManagedBean(r);
        }),
        (t.prototype.refresh = function (e) {
          var r = this;
          e === void 0 && (e = !1);
          var o = new Dr(),
            i = this.focusService.getFocusHeaderToUseAfterRefresh(),
            s = function () {
              var c = r.columnModel.getHeaderRowCount() - 1;
              r.groupsRowCtrls = r.destroyBeans(r.groupsRowCtrls);
              for (var p = 0; p < c; p++) {
                var d = r.createBean(new Ps(o.next(), r.pinned, ge.COLUMN_GROUP));
                r.groupsRowCtrls.push(d);
              }
            },
            a = function () {
              var c = o.next(),
                p =
                  !r.hidden &&
                  (r.columnsRowCtrl == null || !e || r.columnsRowCtrl.getRowIndex() !== c),
                d = p || r.hidden;
              d && (r.columnsRowCtrl = r.destroyBean(r.columnsRowCtrl)),
                p && (r.columnsRowCtrl = r.createBean(new Ps(c, r.pinned, ge.COLUMN)));
            },
            l = function () {
              r.includeFloatingFilter = r.filterManager.hasFloatingFilters() && !r.hidden;
              var c = function () {
                r.filtersRowCtrl = r.destroyBean(r.filtersRowCtrl);
              };
              if (!r.includeFloatingFilter) {
                c();
                return;
              }
              var p = o.next();
              if (r.filtersRowCtrl) {
                var d = r.filtersRowCtrl.getRowIndex() !== p;
                (!e || d) && c();
              }
              r.filtersRowCtrl ||
                (r.filtersRowCtrl = r.createBean(new Ps(p, r.pinned, ge.FLOATING_FILTER)));
            };
          s(), a(), l();
          var u = this.getAllCtrls();
          this.comp.setCtrls(u), this.restoreFocusOnHeader(i);
        }),
        (t.prototype.restoreFocusOnHeader = function (e) {
          e == null ||
            e.column.getPinned() != this.pinned ||
            this.focusService.focusHeaderPosition({ headerPosition: e });
        }),
        (t.prototype.getAllCtrls = function () {
          var e = Ag([], Dg(this.groupsRowCtrls), !1);
          return (
            this.columnsRowCtrl && e.push(this.columnsRowCtrl),
            this.filtersRowCtrl && e.push(this.filtersRowCtrl),
            e
          );
        }),
        (t.prototype.onGridColumnsChanged = function () {
          this.refresh(!0);
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          var e = this.filterManager.hasFloatingFilters() && !this.hidden;
          this.includeFloatingFilter !== e && this.refresh(!0);
        }),
        (t.prototype.setupCenterWidth = function () {
          var e = this;
          this.pinned == null &&
            this.createManagedBean(
              new _s(function (r) {
                return e.comp.setCenterWidth(''.concat(r, 'px'));
              }, !0)
            );
        }),
        (t.prototype.setHorizontalScroll = function (e) {
          this.comp.setViewportScrollLeft(e);
        }),
        (t.prototype.setupPinnedWidth = function () {
          var e = this;
          if (this.pinned != null) {
            var r = this.pinned === 'left',
              o = this.pinned === 'right';
            this.hidden = !0;
            var i = function () {
              var s = r
                ? e.pinnedWidthService.getPinnedLeftWidth()
                : e.pinnedWidthService.getPinnedRightWidth();
              if (s != null) {
                var a = s == 0,
                  l = e.hidden !== a,
                  u = e.gridOptionsService.get('enableRtl'),
                  c = e.gridOptionsService.getScrollbarWidth(),
                  p = e.scrollVisibleService.isVerticalScrollShowing() && ((u && r) || (!u && o)),
                  d = p ? s + c : s;
                e.comp.setPinnedContainerWidth(''.concat(d, 'px')),
                  e.comp.setDisplayed(!a),
                  l && ((e.hidden = a), e.refresh());
              }
            };
            this.addManagedListener(this.eventService, g.EVENT_LEFT_PINNED_WIDTH_CHANGED, i),
              this.addManagedListener(this.eventService, g.EVENT_RIGHT_PINNED_WIDTH_CHANGED, i),
              this.addManagedListener(this.eventService, g.EVENT_SCROLL_VISIBILITY_CHANGED, i),
              this.addManagedListener(this.eventService, g.EVENT_SCROLLBAR_WIDTH_CHANGED, i);
          }
        }),
        (t.prototype.getHeaderCtrlForColumn = function (e) {
          if (e instanceof J)
            return this.columnsRowCtrl ? this.columnsRowCtrl.getHeaderCellCtrl(e) : void 0;
          if (this.groupsRowCtrls.length !== 0)
            for (var r = 0; r < this.groupsRowCtrls.length; r++) {
              var o = this.groupsRowCtrls[r].getHeaderCellCtrl(e);
              if (o) return o;
            }
        }),
        (t.prototype.getHtmlElementForColumnHeader = function (e) {
          var r = this.getHeaderCtrlForColumn(e);
          return r ? r.getGui() : null;
        }),
        (t.prototype.getRowType = function (e) {
          var r = this.getAllCtrls(),
            o = r[e];
          return o ? o.getType() : void 0;
        }),
        (t.prototype.focusHeader = function (e, r, o) {
          var i = this.getAllCtrls(),
            s = i[e];
          return s ? s.focusHeader(r, o) : !1;
        }),
        (t.prototype.getViewport = function () {
          return this.eViewport;
        }),
        (t.prototype.getRowCount = function () {
          return (
            this.groupsRowCtrls.length +
            (this.columnsRowCtrl ? 1 : 0) +
            (this.filtersRowCtrl ? 1 : 0)
          );
        }),
        (t.prototype.destroy = function () {
          this.filtersRowCtrl && (this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl)),
            this.columnsRowCtrl && (this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl)),
            this.groupsRowCtrls &&
              this.groupsRowCtrls.length &&
              (this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls)),
            n.prototype.destroy.call(this);
        }),
        Nr([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Nr([v('scrollVisibleService')], t.prototype, 'scrollVisibleService', void 0),
        Nr([v('pinnedWidthService')], t.prototype, 'pinnedWidthService', void 0),
        Nr([v('columnModel')], t.prototype, 'columnModel', void 0),
        Nr([v('focusService')], t.prototype, 'focusService', void 0),
        Nr([v('filterManager')], t.prototype, 'filterManager', void 0),
        t
      );
    })(D),
    Fg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ds = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    As = (function (n) {
      Fg(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.headerRowComps = {}), (r.rowCompsList = []), (r.pinned = e), r;
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          this.selectAndSetTemplate();
          var r = {
              setDisplayed: function (i) {
                return e.setDisplayed(i);
              },
              setCtrls: function (i) {
                return e.setCtrls(i);
              },
              setCenterWidth: function (i) {
                return (e.eCenterContainer.style.width = i);
              },
              setViewportScrollLeft: function (i) {
                return (e.getGui().scrollLeft = i);
              },
              setPinnedContainerWidth: function (i) {
                var s = e.getGui();
                (s.style.width = i), (s.style.maxWidth = i), (s.style.minWidth = i);
              },
            },
            o = this.createManagedBean(new bg(this.pinned));
          o.setComp(r, this.getGui());
        }),
        (t.prototype.selectAndSetTemplate = function () {
          var e = this.pinned == 'left',
            r = this.pinned == 'right',
            o = e ? t.PINNED_LEFT_TEMPLATE : r ? t.PINNED_RIGHT_TEMPLATE : t.CENTER_TEMPLATE;
          this.setTemplate(o),
            (this.eRowContainer = this.eCenterContainer ? this.eCenterContainer : this.getGui());
        }),
        (t.prototype.destroyRowComps = function () {
          this.setCtrls([]);
        }),
        (t.prototype.destroyRowComp = function (e) {
          this.destroyBean(e), this.eRowContainer.removeChild(e.getGui());
        }),
        (t.prototype.setCtrls = function (e) {
          var r = this,
            o = this.headerRowComps;
          (this.headerRowComps = {}), (this.rowCompsList = []);
          var i,
            s = function (a) {
              var l = a.getGui(),
                u = l.parentElement != r.eRowContainer;
              u && r.eRowContainer.appendChild(l), i && Wn(r.eRowContainer, l, i), (i = l);
            };
          e.forEach(function (a) {
            var l = a.getInstanceId(),
              u = o[l];
            delete o[l];
            var c = u || r.createBean(new og(a));
            (r.headerRowComps[l] = c), r.rowCompsList.push(c), s(c);
          }),
            It(o).forEach(function (a) {
              return r.destroyRowComp(a);
            });
        }),
        (t.PINNED_LEFT_TEMPLATE = '<div class="ag-pinned-left-header" role="rowgroup"></div>'),
        (t.PINNED_RIGHT_TEMPLATE = '<div class="ag-pinned-right-header" role="rowgroup"></div>'),
        (t.CENTER_TEMPLATE = `<div class="ag-header-viewport" role="presentation">
            <div class="ag-header-container" ref="eCenterContainer" role="rowgroup"></div>
        </div>`),
        Ds([L('eCenterContainer')], t.prototype, 'eCenterContainer', void 0),
        Ds([F], t.prototype, 'init', null),
        Ds([Se], t.prototype, 'destroyRowComps', null),
        t
      );
    })(k),
    Lg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    go = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Ct;
  (function (n) {
    (n[(n.UP = 0)] = 'UP'),
      (n[(n.DOWN = 1)] = 'DOWN'),
      (n[(n.LEFT = 2)] = 'LEFT'),
      (n[(n.RIGHT = 3)] = 'RIGHT');
  })(Ct || (Ct = {}));
  var Mg = (function (n) {
      Lg(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.currentHeaderRowWithoutSpan = -1), e;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.ctrlsService.whenReady(function (o) {
            e.gridBodyCon = o.gridBodyCtrl;
          });
          var r = this.gridOptionsService.getDocument();
          this.addManagedListener(r, 'mousedown', function () {
            return e.setCurrentHeaderRowWithoutSpan(-1);
          });
        }),
        (t.prototype.getHeaderRowCount = function () {
          var e = this.ctrlsService.getHeaderRowContainerCtrl();
          return e ? e.getRowCount() : 0;
        }),
        (t.prototype.navigateVertically = function (e, r, o) {
          if ((r || (r = this.focusService.getFocusedHeader()), !r)) return !1;
          var i = r.headerRowIndex,
            s = r.column,
            a = this.getHeaderRowCount(),
            l = e === Ct.UP,
            u = l
              ? this.headerPositionUtils.getColumnVisibleParent(s, i)
              : this.headerPositionUtils.getColumnVisibleChild(s, i),
            c = u.headerRowIndex,
            p = u.column,
            d = u.headerRowIndexWithoutSpan,
            h = !1;
          return (
            c < 0 && ((c = 0), (p = s), (h = !0)),
            c >= a
              ? ((c = -1), this.setCurrentHeaderRowWithoutSpan(-1))
              : d !== void 0 && (this.currentHeaderRowWithoutSpan = d),
            !h && !p
              ? !1
              : this.focusService.focusHeaderPosition({
                  headerPosition: { headerRowIndex: c, column: p },
                  allowUserOverride: !0,
                  event: o,
                })
          );
        }),
        (t.prototype.setCurrentHeaderRowWithoutSpan = function (e) {
          this.currentHeaderRowWithoutSpan = e;
        }),
        (t.prototype.navigateHorizontally = function (e, r, o) {
          r === void 0 && (r = !1);
          var i = this.focusService.getFocusedHeader(),
            s = e === Ct.LEFT,
            a = this.gridOptionsService.get('enableRtl'),
            l,
            u;
          return (
            this.currentHeaderRowWithoutSpan !== -1
              ? (i.headerRowIndex = this.currentHeaderRowWithoutSpan)
              : (this.currentHeaderRowWithoutSpan = i.headerRowIndex),
            s !== a
              ? ((u = 'Before'), (l = this.headerPositionUtils.findHeader(i, u)))
              : ((u = 'After'), (l = this.headerPositionUtils.findHeader(i, u))),
            l || !r
              ? this.focusService.focusHeaderPosition({
                  headerPosition: l,
                  direction: u,
                  fromTab: r,
                  allowUserOverride: !0,
                  event: o,
                })
              : this.focusNextHeaderRow(i, u, o)
          );
        }),
        (t.prototype.focusNextHeaderRow = function (e, r, o) {
          var i = e.headerRowIndex,
            s = null,
            a;
          if (
            (r === 'Before'
              ? i > 0 &&
                ((a = i - 1),
                (this.currentHeaderRowWithoutSpan -= 1),
                (s = this.headerPositionUtils.findColAtEdgeForHeaderRow(a, 'end')))
              : ((a = i + 1),
                this.currentHeaderRowWithoutSpan < this.getHeaderRowCount()
                  ? (this.currentHeaderRowWithoutSpan += 1)
                  : this.setCurrentHeaderRowWithoutSpan(-1),
                (s = this.headerPositionUtils.findColAtEdgeForHeaderRow(a, 'start'))),
            !s)
          )
            return !1;
          var l = this.headerPositionUtils.getHeaderIndexToFocus(
              s.column,
              s == null ? void 0 : s.headerRowIndex
            ),
            u = l.column,
            c = l.headerRowIndex;
          return this.focusService.focusHeaderPosition({
            headerPosition: { column: u, headerRowIndex: c },
            direction: r,
            fromTab: !0,
            allowUserOverride: !0,
            event: o,
          });
        }),
        (t.prototype.scrollToColumn = function (e, r) {
          if ((r === void 0 && (r = 'After'), !e.getPinned())) {
            var o;
            if (e instanceof se) {
              var i = e.getDisplayedLeafColumns();
              o = r === 'Before' ? q(i) : i[0];
            } else o = e;
            this.gridBodyCon.getScrollFeature().ensureColumnVisible(o);
          }
        }),
        go([v('focusService')], t.prototype, 'focusService', void 0),
        go([v('headerPositionUtils')], t.prototype, 'headerPositionUtils', void 0),
        go([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        go([F], t.prototype, 'postConstruct', null),
        (t = go([x('headerNavigationService')], t)),
        t
      );
    })(D),
    Ig = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Gr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    xg = (function (n) {
      Ig(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.setComp = function (e, r, o) {
          (this.comp = e),
            (this.eGui = r),
            this.createManagedBean(
              new ar(o, {
                onTabKeyDown: this.onTabKeyDown.bind(this),
                handleKeyDown: this.handleKeyDown.bind(this),
                onFocusOut: this.onFocusOut.bind(this),
              })
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_PIVOT_MODE_CHANGED,
              this.onPivotModeChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_CHANGED,
              this.onDisplayedColumnsChanged.bind(this)
            ),
            this.onPivotModeChanged(),
            this.setupHeaderHeight();
          var i = this.onHeaderContextMenu.bind(this);
          this.addManagedListener(this.eGui, 'contextmenu', i),
            this.mockContextMenuForIPad(i),
            this.ctrlsService.registerGridHeaderCtrl(this);
        }),
        (t.prototype.setupHeaderHeight = function () {
          var e = this.setHeaderHeight.bind(this);
          e(),
            this.addManagedPropertyListener('headerHeight', e),
            this.addManagedPropertyListener('pivotHeaderHeight', e),
            this.addManagedPropertyListener('groupHeaderHeight', e),
            this.addManagedPropertyListener('pivotGroupHeaderHeight', e),
            this.addManagedPropertyListener('floatingFiltersHeight', e),
            this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, e),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_HEADER_HEIGHT_CHANGED, e),
            this.addManagedListener(this.eventService, g.EVENT_GRID_STYLES_CHANGED, e),
            this.addManagedListener(this.eventService, g.EVENT_ADVANCED_FILTER_ENABLED_CHANGED, e);
        }),
        (t.prototype.getHeaderHeight = function () {
          return this.headerHeight;
        }),
        (t.prototype.setHeaderHeight = function () {
          var e = this.columnModel,
            r = 0,
            o = e.getHeaderRowCount(),
            i,
            s = this.filterManager.hasFloatingFilters();
          s && (o++, (r = 1));
          var a = this.columnModel.getColumnGroupHeaderRowHeight(),
            l = this.columnModel.getColumnHeaderRowHeight(),
            u = 1 + r,
            c = o - u;
          if (
            ((i = r * e.getFloatingFiltersHeight()),
            (i += c * a),
            (i += l),
            this.headerHeight !== i)
          ) {
            this.headerHeight = i;
            var p = ''.concat(i + 1, 'px');
            this.comp.setHeightAndMinHeight(p),
              this.eventService.dispatchEvent({ type: g.EVENT_HEADER_HEIGHT_CHANGED });
          }
        }),
        (t.prototype.onPivotModeChanged = function () {
          var e = this.columnModel.isPivotMode();
          this.comp.addOrRemoveCssClass('ag-pivot-on', e),
            this.comp.addOrRemoveCssClass('ag-pivot-off', !e);
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          var e = this.columnModel.getAllDisplayedColumns(),
            r = e.some(function (o) {
              return o.isSpanHeaderHeight();
            });
          this.comp.addOrRemoveCssClass('ag-header-allow-overflow', r);
        }),
        (t.prototype.onTabKeyDown = function (e) {
          var r = this.gridOptionsService.get('enableRtl'),
            o = e.shiftKey !== r ? Ct.LEFT : Ct.RIGHT;
          (this.headerNavigationService.navigateHorizontally(o, !0, e) ||
            this.focusService.focusNextGridCoreContainer(e.shiftKey)) &&
            e.preventDefault();
        }),
        (t.prototype.handleKeyDown = function (e) {
          var r = null;
          switch (e.key) {
            case _.LEFT:
              r = Ct.LEFT;
            case _.RIGHT:
              P(r) || (r = Ct.RIGHT), this.headerNavigationService.navigateHorizontally(r, !1, e);
              break;
            case _.UP:
              r = Ct.UP;
            case _.DOWN:
              P(r) || (r = Ct.DOWN),
                this.headerNavigationService.navigateVertically(r, null, e) && e.preventDefault();
              break;
            default:
              return;
          }
        }),
        (t.prototype.onFocusOut = function (e) {
          var r = this.gridOptionsService.getDocument(),
            o = e.relatedTarget;
          (!o && this.eGui.contains(r.activeElement)) ||
            this.eGui.contains(o) ||
            this.focusService.clearFocusedHeader();
        }),
        (t.prototype.onHeaderContextMenu = function (e, r, o) {
          if (!((!e && !o) || !this.menuService.isHeaderContextMenuEnabled())) {
            var i = (e ?? r).target;
            (i === this.eGui ||
              i === this.ctrlsService.getHeaderRowContainerCtrl().getViewport()) &&
              this.menuService.showHeaderContextMenu(void 0, e, o);
          }
        }),
        (t.prototype.mockContextMenuForIPad = function (e) {
          if (Dt()) {
            var r = new me(this.eGui),
              o = function (i) {
                e(void 0, i.touchStart, i.touchEvent);
              };
            this.addManagedListener(r, me.EVENT_LONG_TAP, o),
              this.addDestroyFunc(function () {
                return r.destroy();
              });
          }
        }),
        Gr([v('headerNavigationService')], t.prototype, 'headerNavigationService', void 0),
        Gr([v('focusService')], t.prototype, 'focusService', void 0),
        Gr([v('columnModel')], t.prototype, 'columnModel', void 0),
        Gr([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Gr([v('filterManager')], t.prototype, 'filterManager', void 0),
        Gr([v('menuService')], t.prototype, 'menuService', void 0),
        t
      );
    })(D),
    Ng = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Gg = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Vg = (function (n) {
      Ng(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this,
            r = {
              addOrRemoveCssClass: function (s, a) {
                return e.addOrRemoveCssClass(s, a);
              },
              setHeightAndMinHeight: function (s) {
                (e.getGui().style.height = s), (e.getGui().style.minHeight = s);
              },
            },
            o = this.createManagedBean(new xg());
          o.setComp(r, this.getGui(), this.getFocusableElement());
          var i = function (s) {
            e.createManagedBean(s), e.appendChild(s);
          };
          i(new As('left')), i(new As(null)), i(new As('right'));
        }),
        (t.TEMPLATE = '<div class="ag-header" role="presentation"/>'),
        Gg([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    Hg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    bs = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Bg = (function (n) {
      Hg(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.addResizeBar = function (e) {
          var r = this,
            o = {
              dragStartPixels: e.dragStartPixels || 0,
              eElement: e.eResizeBar,
              onDragStart: this.onDragStart.bind(this, e),
              onDragStop: this.onDragStop.bind(this, e),
              onDragging: this.onDragging.bind(this, e),
              includeTouch: !0,
              stopPropagationForTouch: !0,
            };
          this.dragService.addDragSource(o);
          var i = function () {
            return r.dragService.removeDragSource(o);
          };
          return i;
        }),
        (t.prototype.onDragStart = function (e, r) {
          (this.dragStartX = r.clientX), this.setResizeIcons();
          var o = r instanceof MouseEvent && r.shiftKey === !0;
          e.onResizeStart(o);
        }),
        (t.prototype.setResizeIcons = function () {
          var e = this.ctrlsService.getGridCtrl();
          e.setResizeCursor(!0), e.disableUserSelect(!0);
        }),
        (t.prototype.onDragStop = function (e, r) {
          e.onResizeEnd(this.resizeAmount), this.resetIcons();
        }),
        (t.prototype.resetIcons = function () {
          var e = this.ctrlsService.getGridCtrl();
          e.setResizeCursor(!1), e.disableUserSelect(!1);
        }),
        (t.prototype.onDragging = function (e, r) {
          (this.resizeAmount = r.clientX - this.dragStartX), e.onResizing(this.resizeAmount);
        }),
        bs([v('dragService')], t.prototype, 'dragService', void 0),
        bs([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        (t = bs([x('horizontalResizeService')], t)),
        t
      );
    })(D),
    kg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Vr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Wg = (function (n) {
      kg(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.hideActiveMenu = function () {
          this.hidePopup && this.hidePopup();
        }),
        (t.prototype.showMenuAfterMouseEvent = function (e, r, o) {
          var i = this;
          this.showPopup(
            e,
            function (s) {
              i.popupService.positionPopupUnderMouseEvent({
                column: e,
                type: o,
                mouseEvent: r,
                ePopup: s,
              });
            },
            o,
            r.target,
            this.menuService.isLegacyMenuEnabled()
          );
        }),
        (t.prototype.showMenuAfterButtonClick = function (e, r, o) {
          var i = this,
            s = -1,
            a = 'left',
            l = this.menuService.isLegacyMenuEnabled();
          !l && this.gridOptionsService.get('enableRtl') && ((s = 1), (a = 'right'));
          var u = l ? void 0 : 4 * s,
            c = l ? void 0 : 4;
          this.showPopup(
            e,
            function (p) {
              i.popupService.positionPopupByComponent({
                type: o,
                eventSource: r,
                ePopup: p,
                nudgeX: u,
                nudgeY: c,
                alignSide: a,
                keepWithinBounds: !0,
                position: 'under',
                column: e,
              });
            },
            o,
            r,
            l
          );
        }),
        (t.prototype.showPopup = function (e, r, o, i, s) {
          var a = this,
            l = e ? this.filterManager.getOrCreateFilterWrapper(e, 'COLUMN_MENU') : void 0;
          if (!l || !e)
            throw new Error('AG Grid - unable to show popup filter, filter instantiation failed');
          var u = document.createElement('div');
          le(u, 'presentation'),
            u.classList.add('ag-menu'),
            s || u.classList.add('ag-filter-menu'),
            (this.tabListener = this.addManagedListener(u, 'keydown', function (C) {
              return a.trapFocusWithin(C, u);
            })),
            l.guiPromise.then(function (C) {
              return u.appendChild(C);
            });
          var c,
            p = function () {
              var C;
              return (C = l.filterPromise) === null || C === void 0
                ? void 0
                : C.then(function (w) {
                    var E;
                    return (E = w == null ? void 0 : w.afterGuiDetached) === null || E === void 0
                      ? void 0
                      : E.call(w);
                  });
            },
            d = this.menuService.isColumnMenuAnchoringEnabled()
              ? i ?? this.ctrlsService.getGridBodyCtrl().getGui()
              : void 0,
            h = function (C) {
              e.setMenuVisible(!1, 'contextMenu');
              var w = C instanceof KeyboardEvent;
              if ((a.tabListener && (a.tabListener = a.tabListener()), w && i && We(i))) {
                var E = a.focusService.findTabbableParent(i);
                E && E.focus();
              }
              p(), a.dispatchVisibleChangedEvent(!1, o, e);
            },
            f = this.localeService.getLocaleTextFunc(),
            y =
              s && o !== 'columnFilter'
                ? f('ariaLabelColumnMenu', 'Column Menu')
                : f('ariaLabelColumnFilter', 'Column Filter'),
            m = this.popupService.addPopup({
              modal: !0,
              eChild: u,
              closeOnEsc: !0,
              closedCallback: h,
              positionCallback: function () {
                return r(u);
              },
              anchorToElement: d,
              ariaLabel: y,
            });
          m && (this.hidePopup = c = m.hideFunc),
            l.filterPromise.then(function (C) {
              r(u), C.afterGuiAttached && C.afterGuiAttached({ container: o, hidePopup: c });
            }),
            e.setMenuVisible(!0, 'contextMenu'),
            this.dispatchVisibleChangedEvent(!0, o, e);
        }),
        (t.prototype.trapFocusWithin = function (e, r) {
          e.key !== _.TAB ||
            e.defaultPrevented ||
            this.focusService.findNextFocusableElement(r, !1, e.shiftKey) ||
            (e.preventDefault(), this.focusService.focusInto(r, e.shiftKey));
        }),
        (t.prototype.dispatchVisibleChangedEvent = function (e, r, o) {
          var i = {
            type: g.EVENT_COLUMN_MENU_VISIBLE_CHANGED,
            visible: e,
            switchingTab: !1,
            key: r,
            column: o ?? null,
          };
          this.eventService.dispatchEvent(i);
        }),
        (t.prototype.isMenuEnabled = function (e) {
          var r;
          return (
            e.isFilterAllowed() &&
            ((r = e.getColDef().menuTabs) !== null && r !== void 0
              ? r
              : ['filterMenuTab']
            ).includes('filterMenuTab')
          );
        }),
        (t.prototype.showMenuAfterContextMenuEvent = function () {}),
        Vr([v('filterManager')], t.prototype, 'filterManager', void 0),
        Vr([v('popupService')], t.prototype, 'popupService', void 0),
        Vr([v('focusService')], t.prototype, 'focusService', void 0),
        Vr([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Vr([v('menuService')], t.prototype, 'menuService', void 0),
        (t = Vr([x('filterMenuFactory')], t)),
        t
      );
    })(D),
    jg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    yu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Hr;
  (function (n) {
    (n.TAB_GUARD = 'ag-tab-guard'),
      (n.TAB_GUARD_TOP = 'ag-tab-guard-top'),
      (n.TAB_GUARD_BOTTOM = 'ag-tab-guard-bottom');
  })(Hr || (Hr = {}));
  var Ug = (function (n) {
      jg(t, n);
      function t(e) {
        var r = n.call(this) || this;
        (r.skipTabGuardFocus = !1), (r.forcingFocusOut = !1);
        var o = e.comp,
          i = e.eTopGuard,
          s = e.eBottomGuard,
          a = e.focusTrapActive,
          l = e.forceFocusOutWhenTabGuardsAreEmpty,
          u = e.focusInnerElement,
          c = e.onFocusIn,
          p = e.onFocusOut,
          d = e.shouldStopEventPropagation,
          h = e.onTabKeyDown,
          f = e.handleKeyDown,
          y = e.eFocusableElement;
        return (
          (r.comp = o),
          (r.eTopGuard = i),
          (r.eBottomGuard = s),
          (r.providedFocusInnerElement = u),
          (r.eFocusableElement = y),
          (r.focusTrapActive = !!a),
          (r.forceFocusOutWhenTabGuardsAreEmpty = !!l),
          (r.providedFocusIn = c),
          (r.providedFocusOut = p),
          (r.providedShouldStopEventPropagation = d),
          (r.providedOnTabKeyDown = h),
          (r.providedHandleKeyDown = f),
          r
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.createManagedBean(
            new ar(this.eFocusableElement, {
              shouldStopEventPropagation: function () {
                return e.shouldStopEventPropagation();
              },
              onTabKeyDown: function (r) {
                return e.onTabKeyDown(r);
              },
              handleKeyDown: function (r) {
                return e.handleKeyDown(r);
              },
              onFocusIn: function (r) {
                return e.onFocusIn(r);
              },
              onFocusOut: function (r) {
                return e.onFocusOut(r);
              },
            })
          ),
            this.activateTabGuards(),
            [this.eTopGuard, this.eBottomGuard].forEach(function (r) {
              return e.addManagedListener(r, 'focus', e.onFocus.bind(e));
            });
        }),
        (t.prototype.handleKeyDown = function (e) {
          this.providedHandleKeyDown && this.providedHandleKeyDown(e);
        }),
        (t.prototype.tabGuardsAreActive = function () {
          return !!this.eTopGuard && this.eTopGuard.hasAttribute('tabIndex');
        }),
        (t.prototype.shouldStopEventPropagation = function () {
          return this.providedShouldStopEventPropagation
            ? this.providedShouldStopEventPropagation()
            : !1;
        }),
        (t.prototype.activateTabGuards = function () {
          if (!this.forcingFocusOut) {
            var e = this.gridOptionsService.get('tabIndex');
            this.comp.setTabIndex(e.toString());
          }
        }),
        (t.prototype.deactivateTabGuards = function () {
          this.comp.setTabIndex();
        }),
        (t.prototype.onFocus = function (e) {
          if (this.skipTabGuardFocus) {
            this.skipTabGuardFocus = !1;
            return;
          }
          if (this.forceFocusOutWhenTabGuardsAreEmpty) {
            var r =
              this.focusService.findFocusableElements(this.eFocusableElement, '.ag-tab-guard')
                .length === 0;
            if (r) {
              this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);
              return;
            }
          }
          var o = e.target === this.eBottomGuard;
          this.providedFocusInnerElement
            ? this.providedFocusInnerElement(o)
            : this.focusInnerElement(o);
        }),
        (t.prototype.findNextElementOutsideAndFocus = function (e) {
          var r = this.gridOptionsService.getDocument(),
            o = this.focusService.findFocusableElements(r.body, null, !0),
            i = o.indexOf(e ? this.eTopGuard : this.eBottomGuard);
          if (i !== -1) {
            var s, a;
            e ? ((s = 0), (a = i)) : ((s = i + 1), (a = o.length));
            var l = o.slice(s, a),
              u = this.gridOptionsService.get('tabIndex');
            l.sort(function (c, p) {
              var d = parseInt(c.getAttribute('tabindex') || '0'),
                h = parseInt(p.getAttribute('tabindex') || '0');
              return h === u ? 1 : d === u ? -1 : d === 0 ? 1 : h === 0 ? -1 : d - h;
            }),
              l[e ? l.length - 1 : 0].focus();
          }
        }),
        (t.prototype.onFocusIn = function (e) {
          this.focusTrapActive ||
            (this.providedFocusIn && this.providedFocusIn(e), this.deactivateTabGuards());
        }),
        (t.prototype.onFocusOut = function (e) {
          this.focusTrapActive ||
            (this.providedFocusOut && this.providedFocusOut(e),
            this.eFocusableElement.contains(e.relatedTarget) || this.activateTabGuards());
        }),
        (t.prototype.onTabKeyDown = function (e) {
          var r = this;
          if (this.providedOnTabKeyDown) {
            this.providedOnTabKeyDown(e);
            return;
          }
          if (!this.focusTrapActive && !e.defaultPrevented) {
            var o = this.tabGuardsAreActive();
            o && this.deactivateTabGuards();
            var i = this.getNextFocusableElement(e.shiftKey);
            o &&
              setTimeout(function () {
                return r.activateTabGuards();
              }, 0),
              i && (i.focus(), e.preventDefault());
          }
        }),
        (t.prototype.focusInnerElement = function (e) {
          e === void 0 && (e = !1);
          var r = this.focusService.findFocusableElements(this.eFocusableElement);
          this.tabGuardsAreActive() && (r.splice(0, 1), r.splice(r.length - 1, 1)),
            r.length && r[e ? r.length - 1 : 0].focus({ preventScroll: !0 });
        }),
        (t.prototype.getNextFocusableElement = function (e) {
          return this.focusService.findNextFocusableElement(this.eFocusableElement, !1, e);
        }),
        (t.prototype.forceFocusOutOfContainer = function (e) {
          var r = this;
          if ((e === void 0 && (e = !1), !this.forcingFocusOut)) {
            var o = e ? this.eTopGuard : this.eBottomGuard;
            this.activateTabGuards(),
              (this.skipTabGuardFocus = !0),
              (this.forcingFocusOut = !0),
              o.focus(),
              window.setTimeout(function () {
                (r.forcingFocusOut = !1), r.activateTabGuards();
              });
          }
        }),
        (t.prototype.isTabGuard = function (e) {
          return e === this.eTopGuard || e === this.eBottomGuard;
        }),
        yu([v('focusService')], t.prototype, 'focusService', void 0),
        yu([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    zg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Kg = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    $g = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    yo = (function (n) {
      zg(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.initialiseTabGuard = function (e) {
          (this.eTopGuard = this.createTabGuard('top')),
            (this.eBottomGuard = this.createTabGuard('bottom')),
            (this.eFocusableElement = this.getFocusableElement());
          var r = [this.eTopGuard, this.eBottomGuard],
            o = {
              setTabIndex: function (i) {
                r.forEach(function (s) {
                  return i != null ? s.setAttribute('tabindex', i) : s.removeAttribute('tabindex');
                });
              },
            };
          this.addTabGuards(this.eTopGuard, this.eBottomGuard),
            (this.tabGuardCtrl = this.createManagedBean(
              new Ug({
                comp: o,
                focusTrapActive: !!e.focusTrapActive,
                eTopGuard: this.eTopGuard,
                eBottomGuard: this.eBottomGuard,
                eFocusableElement: this.eFocusableElement,
                onFocusIn: e.onFocusIn,
                onFocusOut: e.onFocusOut,
                focusInnerElement: e.focusInnerElement,
                handleKeyDown: e.handleKeyDown,
                onTabKeyDown: e.onTabKeyDown,
                shouldStopEventPropagation: e.shouldStopEventPropagation,
                forceFocusOutWhenTabGuardsAreEmpty: e.forceFocusOutWhenTabGuardsAreEmpty,
              })
            ));
        }),
        (t.prototype.createTabGuard = function (e) {
          var r = document.createElement('div'),
            o = e === 'top' ? Hr.TAB_GUARD_TOP : Hr.TAB_GUARD_BOTTOM;
          return r.classList.add(Hr.TAB_GUARD, o), le(r, 'presentation'), r;
        }),
        (t.prototype.addTabGuards = function (e, r) {
          this.eFocusableElement.insertAdjacentElement('afterbegin', e),
            this.eFocusableElement.insertAdjacentElement('beforeend', r);
        }),
        (t.prototype.removeAllChildrenExceptTabGuards = function () {
          var e = [this.eTopGuard, this.eBottomGuard];
          de(this.getFocusableElement()), this.addTabGuards.apply(this, $g([], Kg(e), !1));
        }),
        (t.prototype.forceFocusOutOfContainer = function (e) {
          e === void 0 && (e = !1), this.tabGuardCtrl.forceFocusOutOfContainer(e);
        }),
        (t.prototype.appendChild = function (e, r) {
          to(e) || (e = e.getGui());
          var o = this.eBottomGuard;
          o ? o.insertAdjacentElement('beforebegin', e) : n.prototype.appendChild.call(this, e, r);
        }),
        t
      );
    })(k),
    Yg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    _i = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    };
  (function (n) {
    Yg(t, n);
    function t(e) {
      var r = n.call(this, t.getTemplate(e.cssClass)) || this;
      return (
        (r.items = []),
        (r.tabbedItemScrollMap = new Map()),
        (r.params = e),
        e.items &&
          e.items.forEach(function (o) {
            return r.addItem(o);
          }),
        r
      );
    }
    return (
      (t.prototype.postConstruct = function () {
        var e = this;
        this.initialiseTabGuard({
          onTabKeyDown: this.onTabKeyDown.bind(this),
          handleKeyDown: this.handleKeyDown.bind(this),
          focusInnerElement: this.focusInnerElement.bind(this),
          focusTrapActive: !0,
        }),
          this.addDestroyFunc(function () {
            var r, o, i;
            return (i =
              (o = (r = e.activeItem) === null || r === void 0 ? void 0 : r.tabbedItem) === null ||
              o === void 0
                ? void 0
                : o.afterDetachedCallback) === null || i === void 0
              ? void 0
              : i.call(o);
          });
      }),
      (t.getTemplate = function (e) {
        return '<div class="ag-tabs '
          .concat(
            e,
            `">
            <div ref="eHeader" role="tablist" class="ag-tabs-header `
          )
          .concat(
            e ? ''.concat(e, '-header') : '',
            `"></div>
            <div ref="eBody" role="presentation" class="ag-tabs-body `
          )
          .concat(
            e ? ''.concat(e, '-body') : '',
            `"></div>
        </div>`
          );
      }),
      (t.prototype.handleKeyDown = function (e) {
        var r = this.gridOptionsService.getDocument();
        switch (e.key) {
          case _.RIGHT:
          case _.LEFT:
            if (!this.eHeader.contains(r.activeElement)) return;
            var o = e.key === _.RIGHT,
              i = this.gridOptionsService.get('enableRtl'),
              s = this.items.indexOf(this.activeItem),
              a = o !== i ? Math.min(s + 1, this.items.length - 1) : Math.max(s - 1, 0);
            if (s === a) return;
            e.preventDefault();
            var l = this.items[a];
            this.showItemWrapper(l), l.eHeaderButton.focus();
            break;
          case _.UP:
          case _.DOWN:
            e.stopPropagation();
            break;
        }
      }),
      (t.prototype.onTabKeyDown = function (e) {
        if (!e.defaultPrevented) {
          var r = this,
            o = r.focusService,
            i = r.eHeader,
            s = r.eBody,
            a = r.activeItem,
            l = this.gridOptionsService.getDocument(),
            u = l.activeElement,
            c = e.target;
          if ((e.preventDefault(), i.contains(u))) {
            this.focusBody(e.shiftKey);
            return;
          }
          var p = null;
          o.isTargetUnderManagedComponent(s, c) &&
            (e.shiftKey && (p = this.focusService.findFocusableElementBeforeTabGuard(s, c)),
            p || (p = a.eHeaderButton)),
            !p &&
              s.contains(u) &&
              ((p = o.findNextFocusableElement(s, !1, e.shiftKey)), p || this.focusHeader()),
            p && p.focus();
        }
      }),
      (t.prototype.focusInnerElement = function (e) {
        e ? this.focusHeader() : this.focusBody(!0);
      }),
      (t.prototype.focusHeader = function () {
        this.activeItem.eHeaderButton.focus();
      }),
      (t.prototype.focusBody = function (e) {
        this.focusService.focusInto(this.eBody, e);
      }),
      (t.prototype.setAfterAttachedParams = function (e) {
        this.afterAttachedParams = e;
      }),
      (t.prototype.showFirstItem = function () {
        this.items.length > 0 && this.showItemWrapper(this.items[0]);
      }),
      (t.prototype.addItem = function (e) {
        var r = document.createElement('span');
        le(r, 'tab'),
          r.setAttribute('tabindex', '-1'),
          r.appendChild(e.title),
          r.classList.add('ag-tab'),
          this.eHeader.appendChild(r),
          Ht(r, e.titleLabel);
        var o = { tabbedItem: e, eHeaderButton: r };
        this.items.push(o), r.addEventListener('click', this.showItemWrapper.bind(this, o));
      }),
      (t.prototype.showItem = function (e) {
        var r = this.items.find(function (o) {
          return o.tabbedItem === e;
        });
        r && this.showItemWrapper(r);
      }),
      (t.prototype.showItemWrapper = function (e) {
        var r = this,
          o,
          i,
          s,
          a,
          l,
          u,
          c = e.tabbedItem,
          p = e.eHeaderButton;
        if (
          ((i = (o = this.params).onItemClicked) === null || i === void 0 || i.call(o, { item: c }),
          this.activeItem === e)
        ) {
          (a = (s = this.params).onActiveItemClicked) === null || a === void 0 || a.call(s);
          return;
        }
        this.lastScrollListener && (this.lastScrollListener = this.lastScrollListener()),
          de(this.eBody),
          c.bodyPromise.then(function (d) {
            r.eBody.appendChild(d);
            var h = !r.focusService.isKeyboardMode();
            if (
              (r.focusService.focusInto(r.eBody, !1, h),
              c.afterAttachedCallback && c.afterAttachedCallback(r.afterAttachedParams),
              r.params.keepScrollPosition)
            ) {
              var f = (c.getScrollableContainer && c.getScrollableContainer()) || d;
              r.lastScrollListener = r.addManagedListener(f, 'scroll', function () {
                r.tabbedItemScrollMap.set(c.name, f.scrollTop);
              });
              var y = r.tabbedItemScrollMap.get(c.name);
              y !== void 0 &&
                setTimeout(function () {
                  f.scrollTop = y;
                }, 0);
            }
          }),
          this.activeItem &&
            (this.activeItem.eHeaderButton.classList.remove('ag-tab-selected'),
            (u = (l = this.activeItem.tabbedItem).afterDetachedCallback) === null ||
              u === void 0 ||
              u.call(l)),
          p.classList.add('ag-tab-selected'),
          (this.activeItem = e);
      }),
      _i([v('focusService')], t.prototype, 'focusService', void 0),
      _i([L('eHeader')], t.prototype, 'eHeader', void 0),
      _i([L('eBody')], t.prototype, 'eBody', void 0),
      _i([F], t.prototype, 'postConstruct', null),
      t
    );
  })(yo);
  var qg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Qg = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Xg = 50,
    Jg = (function (n) {
      qg(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.polyfillFunctions = []), e;
      }
      return (
        (t.prototype.observeResize = function (e, r) {
          var o = this,
            i = this.gridOptionsService.getWindow(),
            s = function () {
              var c = new i.ResizeObserver(r);
              return (
                c.observe(e),
                function () {
                  return c.disconnect();
                }
              );
            },
            a = function () {
              var c,
                p,
                d = (c = e == null ? void 0 : e.clientWidth) !== null && c !== void 0 ? c : 0,
                h = (p = e == null ? void 0 : e.clientHeight) !== null && p !== void 0 ? p : 0,
                f = !0,
                y = function () {
                  var m, C;
                  if (f) {
                    var w =
                        (m = e == null ? void 0 : e.clientWidth) !== null && m !== void 0 ? m : 0,
                      E =
                        (C = e == null ? void 0 : e.clientHeight) !== null && C !== void 0 ? C : 0,
                      S = w !== d || E !== h;
                    S && ((d = w), (h = E), r()), o.doNextPolyfillTurn(y);
                  }
                };
              return (
                y(),
                function () {
                  return (f = !1);
                }
              );
            },
            l = this.gridOptionsService.get('suppressBrowserResizeObserver'),
            u = !!i.ResizeObserver;
          return u && !l
            ? s()
            : this.getFrameworkOverrides().wrapIncoming(function () {
                return a();
              }, 'resize-observer');
        }),
        (t.prototype.doNextPolyfillTurn = function (e) {
          this.polyfillFunctions.push(e), this.schedulePolyfill();
        }),
        (t.prototype.schedulePolyfill = function () {
          var e = this;
          if (!this.polyfillScheduled) {
            var r = function () {
              var o = e.polyfillFunctions;
              (e.polyfillScheduled = !1),
                (e.polyfillFunctions = []),
                o.forEach(function (i) {
                  return i();
                });
            };
            (this.polyfillScheduled = !0), window.setTimeout(r, Xg);
          }
        }),
        (t = Qg([x('resizeObserverService')], t)),
        t
      );
    })(D),
    Zg = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ri = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ey = (function (n) {
      Zg(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.createTasksP1 = { list: [], sorted: !1 }),
          (e.createTasksP2 = { list: [], sorted: !1 }),
          (e.destroyTasks = []),
          (e.ticking = !1),
          (e.scrollGoingDown = !0),
          (e.lastPage = 0),
          (e.lastScrollTop = 0),
          (e.taskCount = 0),
          (e.cancelledTasks = new Set()),
          e
        );
      }
      return (
        (t.prototype.setScrollTop = function (e) {
          var r = this.gridOptionsService.get('pagination');
          if (((this.scrollGoingDown = e >= this.lastScrollTop), r && e === 0)) {
            var o = this.paginationProxy.getCurrentPage();
            o !== this.lastPage && ((this.lastPage = o), (this.scrollGoingDown = !0));
          }
          this.lastScrollTop = e;
        }),
        (t.prototype.init = function () {
          this.useAnimationFrame = !this.gridOptionsService.get('suppressAnimationFrame');
        }),
        (t.prototype.isOn = function () {
          return this.useAnimationFrame;
        }),
        (t.prototype.verifyAnimationFrameOn = function (e) {
          this.useAnimationFrame === !1 &&
            console.warn(
              'AG Grid: AnimationFrameService.'.concat(e, ' called but animation frames are off')
            );
        }),
        (t.prototype.createTask = function (e, r, o) {
          this.verifyAnimationFrameOn(o);
          var i = { task: e, index: r, createOrder: ++this.taskCount };
          this.addTaskToList(this[o], i), this.schedule();
        }),
        (t.prototype.cancelTask = function (e) {
          this.cancelledTasks.add(e);
        }),
        (t.prototype.addTaskToList = function (e, r) {
          e.list.push(r), (e.sorted = !1);
        }),
        (t.prototype.sortTaskList = function (e) {
          if (!e.sorted) {
            var r = this.scrollGoingDown ? 1 : -1;
            e.list.sort(function (o, i) {
              return o.index !== i.index ? r * (i.index - o.index) : i.createOrder - o.createOrder;
            }),
              (e.sorted = !0);
          }
        }),
        (t.prototype.addDestroyTask = function (e) {
          this.verifyAnimationFrameOn('createTasksP3'), this.destroyTasks.push(e), this.schedule();
        }),
        (t.prototype.executeFrame = function (e) {
          this.verifyAnimationFrameOn('executeFrame');
          for (
            var r = this.createTasksP1,
              o = r.list,
              i = this.createTasksP2,
              s = i.list,
              a = this.destroyTasks,
              l = new Date().getTime(),
              u = new Date().getTime() - l,
              c = e <= 0,
              p = this.ctrlsService.getGridBodyCtrl();
            c || u < e;

          ) {
            var d = p.getScrollFeature().scrollGridIfNeeded();
            if (!d) {
              var h = void 0;
              if (o.length) this.sortTaskList(r), (h = o.pop().task);
              else if (s.length) this.sortTaskList(i), (h = s.pop().task);
              else if (a.length) h = a.pop();
              else {
                this.cancelledTasks.clear();
                break;
              }
              this.cancelledTasks.has(h) || h();
            }
            u = new Date().getTime() - l;
          }
          o.length || s.length || a.length ? this.requestFrame() : this.stopTicking();
        }),
        (t.prototype.stopTicking = function () {
          this.ticking = !1;
        }),
        (t.prototype.flushAllFrames = function () {
          this.useAnimationFrame && this.executeFrame(-1);
        }),
        (t.prototype.schedule = function () {
          this.useAnimationFrame && (this.ticking || ((this.ticking = !0), this.requestFrame()));
        }),
        (t.prototype.requestFrame = function () {
          var e = this.executeFrame.bind(this, 60);
          this.requestAnimationFrame(e);
        }),
        (t.prototype.requestAnimationFrame = function (e) {
          var r = this.gridOptionsService.getWindow();
          r.requestAnimationFrame
            ? r.requestAnimationFrame(e)
            : r.webkitRequestAnimationFrame
            ? r.webkitRequestAnimationFrame(e)
            : r.setTimeout(e, 0);
        }),
        (t.prototype.isQueueEmpty = function () {
          return !this.ticking;
        }),
        (t.prototype.debounce = function (e) {
          var r = this,
            o = !1;
          return function () {
            if (!r.isOn()) {
              window.setTimeout(e, 0);
              return;
            }
            o ||
              ((o = !0),
              r.addDestroyTask(function () {
                (o = !1), e();
              }));
          };
        }),
        Ri([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Ri([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        Ri([F], t.prototype, 'init', null),
        (t = Ri([x('animationFrameService')], t)),
        t
      );
    })(D),
    z;
  (function (n) {
    (n.EVERYTHING = 'group'),
      (n.FILTER = 'filter'),
      (n.SORT = 'sort'),
      (n.MAP = 'map'),
      (n.AGGREGATE = 'aggregate'),
      (n.FILTER_AGGREGATES = 'filter_aggregates'),
      (n.PIVOT = 'pivot'),
      (n.NOTHING = 'nothing');
  })(z || (z = {}));
  var ty = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Fs = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ry = (function (n) {
      ty(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.isClientSideRowModel = this.rowModel.getType() === 'clientSide';
        }),
        (t.prototype.expandRows = function (e) {
          if (this.isClientSideRowModel) {
            var r = new Set(e);
            this.rowModel.forEachNode(function (o) {
              o.id && r.has(o.id) && (o.expanded = !0);
            }),
              this.onGroupExpandedOrCollapsed();
          }
        }),
        (t.prototype.getExpandedRows = function () {
          var e = [];
          return (
            this.rowModel.forEachNode(function (r) {
              var o = r.expanded,
                i = r.id;
              o && i && e.push(i);
            }),
            e
          );
        }),
        (t.prototype.expandAll = function (e) {
          this.isClientSideRowModel && this.rowModel.expandOrCollapseAll(e);
        }),
        (t.prototype.setRowNodeExpanded = function (e, r, o) {
          e &&
            (o && e.parent && e.parent.level !== -1 && this.setRowNodeExpanded(e.parent, r, o),
            e.setExpanded(r));
        }),
        (t.prototype.onGroupExpandedOrCollapsed = function () {
          this.isClientSideRowModel && this.rowModel.refreshModel({ step: z.MAP });
        }),
        Fs([v('rowModel')], t.prototype, 'rowModel', void 0),
        Fs([F], t.prototype, 'postConstruct', null),
        (t = Fs([x('expansionService')], t)),
        t
      );
    })(D),
    oy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    bt = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    iy = (function (n) {
      oy(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e;
          this.activeMenuFactory =
            (e = this.enterpriseMenuFactory) !== null && e !== void 0 ? e : this.filterMenuFactory;
        }),
        (t.prototype.showColumnMenu = function (e) {
          this.showColumnMenuCommon(this.activeMenuFactory, e, 'columnMenu');
        }),
        (t.prototype.showFilterMenu = function (e) {
          var r =
            this.enterpriseMenuFactory && this.isLegacyMenuEnabled()
              ? this.enterpriseMenuFactory
              : this.filterMenuFactory;
          this.showColumnMenuCommon(r, e, e.containerType, !0);
        }),
        (t.prototype.showHeaderContextMenu = function (e, r, o) {
          this.activeMenuFactory.showMenuAfterContextMenuEvent(e, r, o);
        }),
        (t.prototype.showContextMenu = function (e) {
          var r,
            o,
            i,
            s = e.column,
            a = e.anchorToElement,
            l = e.rowNode,
            u = e.value;
          (r = this.contextMenuFactory) === null ||
            r === void 0 ||
            r.onContextMenu(
              (o = e.mouseEvent) !== null && o !== void 0 ? o : null,
              (i = e.touchEvent) !== null && i !== void 0 ? i : null,
              l ?? null,
              s ?? null,
              u,
              a
            );
        }),
        (t.prototype.showColumnChooser = function (e) {
          var r;
          (r = this.columnChooserFactory) === null || r === void 0 || r.showColumnChooser(e);
        }),
        (t.prototype.hidePopupMenu = function () {
          var e;
          (e = this.contextMenuFactory) === null || e === void 0 || e.hideActiveMenu(),
            this.activeMenuFactory.hideActiveMenu();
        }),
        (t.prototype.hideColumnChooser = function () {
          var e;
          (e = this.columnChooserFactory) === null || e === void 0 || e.hideActiveColumnChooser();
        }),
        (t.prototype.isColumnMenuInHeaderEnabled = function (e) {
          var r = e.getColDef(),
            o = r.suppressMenu,
            i = r.suppressHeaderMenuButton,
            s = i ?? o;
          return (
            !s &&
            this.activeMenuFactory.isMenuEnabled(e) &&
            (this.isLegacyMenuEnabled() || !!this.enterpriseMenuFactory)
          );
        }),
        (t.prototype.isFilterMenuInHeaderEnabled = function (e) {
          return !e.getColDef().suppressHeaderFilterButton && this.filterManager.isFilterAllowed(e);
        }),
        (t.prototype.isHeaderContextMenuEnabled = function (e) {
          return (
            !(e != null && e.getColDef().suppressHeaderContextMenu) &&
            this.getColumnMenuType() === 'new'
          );
        }),
        (t.prototype.isHeaderMenuButtonAlwaysShowEnabled = function () {
          return this.isSuppressMenuHide();
        }),
        (t.prototype.isHeaderMenuButtonEnabled = function () {
          var e = !this.isSuppressMenuHide(),
            r = Dt() && e;
          return !r;
        }),
        (t.prototype.isHeaderFilterButtonEnabled = function (e) {
          return (
            this.isFilterMenuInHeaderEnabled(e) &&
            !this.isLegacyMenuEnabled() &&
            !this.isFloatingFilterButtonDisplayed(e)
          );
        }),
        (t.prototype.isFilterMenuItemEnabled = function (e) {
          return (
            this.filterManager.isFilterAllowed(e) &&
            !this.isLegacyMenuEnabled() &&
            !this.isFilterMenuInHeaderEnabled(e) &&
            !this.isFloatingFilterButtonDisplayed(e)
          );
        }),
        (t.prototype.isColumnMenuAnchoringEnabled = function () {
          return !this.isLegacyMenuEnabled();
        }),
        (t.prototype.areAdditionalColumnMenuItemsEnabled = function () {
          return this.getColumnMenuType() === 'new';
        }),
        (t.prototype.isLegacyMenuEnabled = function () {
          return this.getColumnMenuType() === 'legacy';
        }),
        (t.prototype.isFloatingFilterButtonEnabled = function (e) {
          var r,
            o = e.getColDef(),
            i =
              (r = o.floatingFilterComponentParams) === null || r === void 0
                ? void 0
                : r.suppressFilterButton;
          return (
            i != null &&
              V(
                "As of v31.1, 'colDef.floatingFilterComponentParams.suppressFilterButton' is deprecated. Use 'colDef.suppressFloatingFilterButton' instead."
              ),
            o.suppressFloatingFilterButton == null ? !i : !o.suppressFloatingFilterButton
          );
        }),
        (t.prototype.getColumnMenuType = function () {
          var e;
          return (e = this.gridOptionsService.get('columnMenu')) !== null && e !== void 0
            ? e
            : 'legacy';
        }),
        (t.prototype.isFloatingFilterButtonDisplayed = function (e) {
          return !!e.getColDef().floatingFilter && this.isFloatingFilterButtonEnabled(e);
        }),
        (t.prototype.isSuppressMenuHide = function () {
          var e = this.gridOptionsService.get('suppressMenuHide');
          return this.isLegacyMenuEnabled() || this.gridOptionsService.exists('suppressMenuHide')
            ? e
            : !0;
        }),
        (t.prototype.showColumnMenuCommon = function (e, r, o, i) {
          var s = this,
            a = r.column,
            l = r.positionBy;
          if (l === 'button') {
            var u = r.buttonElement;
            e.showMenuAfterButtonClick(a, u, o, i);
          } else if (l === 'mouse') {
            var c = r.mouseEvent;
            e.showMenuAfterMouseEvent(a, c, o, i);
          } else
            a &&
              (this.ctrlsService
                .getGridBodyCtrl()
                .getScrollFeature()
                .ensureColumnVisible(a, 'auto'),
              this.animationFrameService.requestAnimationFrame(function () {
                var p = s.ctrlsService
                  .getHeaderRowContainerCtrl(a.getPinned())
                  .getHeaderCtrlForColumn(a);
                e.showMenuAfterButtonClick(a, p.getAnchorElementForMenu(i), o, !0);
              }));
        }),
        bt([Y('enterpriseMenuFactory')], t.prototype, 'enterpriseMenuFactory', void 0),
        bt([v('filterMenuFactory')], t.prototype, 'filterMenuFactory', void 0),
        bt([Y('contextMenuFactory')], t.prototype, 'contextMenuFactory', void 0),
        bt([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        bt([v('animationFrameService')], t.prototype, 'animationFrameService', void 0),
        bt([Y('columnChooserFactory')], t.prototype, 'columnChooserFactory', void 0),
        bt([v('filterManager')], t.prototype, 'filterManager', void 0),
        bt([F], t.prototype, 'postConstruct', null),
        (t = bt([x('menuService')], t)),
        t
      );
    })(D),
    ny = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    mo = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    sy = (function (n) {
      ny(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.ctrlsService.whenReady(function (r) {
            e.centerRowContainerCtrl = r.centerRowContainerCtrl;
          });
        }),
        (t.prototype.getPreferredWidthForColumn = function (e, r) {
          var o = this.getHeaderCellForColumn(e);
          if (!o) return -1;
          var i = this.rowRenderer.getAllCellsForColumn(e);
          return r || i.push(o), this.addElementsToContainerAndGetWidth(i);
        }),
        (t.prototype.getPreferredWidthForColumnGroup = function (e) {
          var r = this.getHeaderCellForColumn(e);
          return r ? this.addElementsToContainerAndGetWidth([r]) : -1;
        }),
        (t.prototype.addElementsToContainerAndGetWidth = function (e) {
          var r = this,
            o = document.createElement('form');
          o.style.position = 'fixed';
          var i = this.centerRowContainerCtrl.getContainerElement();
          e.forEach(function (l) {
            return r.cloneItemIntoDummy(l, o);
          }),
            i.appendChild(o);
          var s = o.offsetWidth;
          i.removeChild(o);
          var a = this.getAutoSizePadding();
          return s + a;
        }),
        (t.prototype.getAutoSizePadding = function () {
          return this.gridOptionsService.get('autoSizePadding');
        }),
        (t.prototype.getHeaderCellForColumn = function (e) {
          var r = null;
          return (
            this.ctrlsService.getHeaderRowContainerCtrls().forEach(function (o) {
              var i = o.getHtmlElementForColumnHeader(e);
              i != null && (r = i);
            }),
            r
          );
        }),
        (t.prototype.cloneItemIntoDummy = function (e, r) {
          var o = e.cloneNode(!0);
          (o.style.width = ''), (o.style.position = 'static'), (o.style.left = '');
          var i = document.createElement('div'),
            s = i.classList,
            a = ['ag-header-cell', 'ag-header-group-cell'].some(function (d) {
              return o.classList.contains(d);
            });
          a
            ? (s.add('ag-header', 'ag-header-row'), (i.style.position = 'static'))
            : s.add('ag-row');
          for (var l = e.parentElement; l; ) {
            var u = ['ag-header-row', 'ag-row'].some(function (d) {
              return l.classList.contains(d);
            });
            if (u) {
              for (var c = 0; c < l.classList.length; c++) {
                var p = l.classList[c];
                p != 'ag-row-position-absolute' && s.add(p);
              }
              break;
            }
            l = l.parentElement;
          }
          i.appendChild(o), r.appendChild(i);
        }),
        mo([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        mo([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        mo([v('rowCssClassCalculator')], t.prototype, 'rowCssClassCalculator', void 0),
        mo([F], t.prototype, 'postConstruct', null),
        (t = mo([x('autoWidthCalculator')], t)),
        t
      );
    })(D),
    ay = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Oi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ly = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    },
    uy = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    cy = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    py = (function (n) {
      ay(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return (
          (o.createRowCon = e),
          (o.destroyRowCtrls = r),
          (o.stickyRowCtrls = []),
          (o.containerHeight = 0),
          o
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          (this.isClientSide = this.rowModel.getType() === 'clientSide'),
            this.ctrlsService.whenReady(function (r) {
              e.gridBodyCtrl = r.gridBodyCtrl;
            });
        }),
        (t.prototype.getStickyRowCtrls = function () {
          return this.stickyRowCtrls;
        }),
        (t.prototype.checkStickyRows = function () {
          var e = this,
            r = 0;
          if (!this.gridOptionsService.isGroupRowsSticky())
            return this.refreshNodesAndContainerHeight([], r);
          for (
            var o = [],
              i = this.rowRenderer.getFirstVisibleVerticalPixel(),
              s = function (f) {
                var y, m, C;
                o.push(f);
                var w;
                if (e.isClientSide) {
                  for (var E = f; E.isExpandable() && E.expanded; )
                    if (E.master) E = E.detailNode;
                    else if (E.childrenAfterSort) {
                      if (E.childrenAfterSort.length === 0) break;
                      E = q(E.childrenAfterSort);
                    }
                  w = E.rowTop + E.rowHeight;
                } else if (f.master) w = f.detailNode.rowTop + f.detailNode.rowHeight;
                else {
                  var S = (y = f.childStore) === null || y === void 0 ? void 0 : y.getStoreBounds();
                  w =
                    ((m = S == null ? void 0 : S.heightPx) !== null && m !== void 0 ? m : 0) +
                    ((C = S == null ? void 0 : S.topPx) !== null && C !== void 0 ? C : 0);
                }
                var R = i + r + f.rowHeight;
                w < R ? (f.stickyRowTop = r + (w - R)) : (f.stickyRowTop = r),
                  (r = 0),
                  o.forEach(function (O) {
                    var b = O.stickyRowTop + O.rowHeight;
                    r < b && (r = b);
                  });
              },
              a = 0;
            ;

          ) {
            var l = i + r,
              u = this.rowModel.getRowIndexAtPixel(l),
              c = this.rowModel.getRow(u);
            if (c == null || c.level < 0 || a++ === 100) break;
            for (var p = [], d = c.parent; d.level >= 0; ) p.push(d), (d = d.parent);
            var h = p.reverse().find(function (f) {
              return o.indexOf(f) < 0 && f.displayed;
            });
            if (h) {
              s(h);
              continue;
            }
            if (c.isExpandable() && c.expanded && c.rowTop < l) {
              s(c);
              continue;
            }
            break;
          }
          return this.refreshNodesAndContainerHeight(o, r);
        }),
        (t.prototype.refreshStickyNode = function (e) {
          for (var r = [], o = 0; o < this.stickyRowCtrls.length; o++) {
            var i = this.stickyRowCtrls[o].getRowNode();
            i !== e && r.push(i);
          }
          this.refreshNodesAndContainerHeight(r, this.containerHeight) && this.checkStickyRows();
        }),
        (t.prototype.refreshNodesAndContainerHeight = function (e, r) {
          var o,
            i,
            s,
            a = this,
            l = !1,
            u = this.stickyRowCtrls.filter(function (m) {
              return e.indexOf(m.getRowNode()) === -1;
            }),
            c = e.filter(function (m) {
              return (
                a.stickyRowCtrls.findIndex(function (C) {
                  return C.getRowNode() === m;
                }) === -1
              );
            });
          (u.length || c.length) && (l = !0);
          var p = {};
          u.forEach(function (m) {
            (p[m.getRowNode().id] = m),
              (a.stickyRowCtrls = a.stickyRowCtrls.filter(function (C) {
                return C !== m;
              }));
          });
          try {
            for (var d = ly(Object.values(p)), h = d.next(); !h.done; h = d.next()) {
              var f = h.value;
              f.getRowNode().sticky = !1;
            }
          } catch (m) {
            o = { error: m };
          } finally {
            try {
              h && !h.done && (i = d.return) && i.call(d);
            } finally {
              if (o) throw o.error;
            }
          }
          this.destroyRowCtrls(p, !1);
          var y = c.map(function (m) {
            return (m.sticky = !0), a.createRowCon(m, !1, !1);
          });
          return (
            (s = this.stickyRowCtrls).push.apply(s, cy([], uy(y), !1)),
            this.stickyRowCtrls.forEach(function (m) {
              return m.setRowTop(m.getRowNode().stickyRowTop);
            }),
            this.stickyRowCtrls.sort(function (m, C) {
              return C.getRowNode().rowIndex - m.getRowNode().rowIndex;
            }),
            this.containerHeight !== r &&
              ((this.containerHeight = r), this.gridBodyCtrl.setStickyTopHeight(r), (l = !0)),
            l
          );
        }),
        Oi([v('rowModel')], t.prototype, 'rowModel', void 0),
        Oi([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        Oi([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Oi([F], t.prototype, 'postConstruct', null),
        t
      );
    })(D),
    dy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    at = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    jt = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Ut = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    hy = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    },
    fy = (function (n) {
      dy(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.destroyFuncsForColumnListeners = []),
          (e.rowCtrlsByRowIndex = {}),
          (e.zombieRowCtrls = {}),
          (e.allRowCtrls = []),
          (e.topRowCtrls = []),
          (e.bottomRowCtrls = []),
          (e.refreshInProgress = !1),
          (e.dataFirstRenderedFired = !1),
          (e.setupRangeSelectionListeners = function () {
            var r = function () {
                e.getAllCellCtrls().forEach(function (l) {
                  return l.onRangeSelectionChanged();
                });
              },
              o = function () {
                e.getAllCellCtrls().forEach(function (l) {
                  return l.updateRangeBordersIfRangeCount();
                });
              },
              i = function () {
                e.eventService.addEventListener(g.EVENT_RANGE_SELECTION_CHANGED, r),
                  e.eventService.addEventListener(g.EVENT_COLUMN_MOVED, o),
                  e.eventService.addEventListener(g.EVENT_COLUMN_PINNED, o),
                  e.eventService.addEventListener(g.EVENT_COLUMN_VISIBLE, o);
              },
              s = function () {
                e.eventService.removeEventListener(g.EVENT_RANGE_SELECTION_CHANGED, r),
                  e.eventService.removeEventListener(g.EVENT_COLUMN_MOVED, o),
                  e.eventService.removeEventListener(g.EVENT_COLUMN_PINNED, o),
                  e.eventService.removeEventListener(g.EVENT_COLUMN_VISIBLE, o);
              };
            e.addDestroyFunc(function () {
              return s();
            }),
              e.addManagedPropertyListener('enableRangeSelection', function (l) {
                var u = l.currentValue;
                u ? i() : s();
              });
            var a = e.gridOptionsService.get('enableRangeSelection');
            a && i();
          }),
          e
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.ctrlsService.whenReady(function () {
            (e.gridBodyCtrl = e.ctrlsService.getGridBodyCtrl()), e.initialise();
          });
        }),
        (t.prototype.initialise = function () {
          var e = this;
          if (
            (this.addManagedListener(
              this.eventService,
              g.EVENT_PAGINATION_CHANGED,
              this.onPageLoaded.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_PINNED_ROW_DATA_CHANGED,
              this.onPinnedRowDataChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_CHANGED,
              this.onDisplayedColumnsChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_BODY_SCROLL,
              this.onBodyScroll.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_BODY_HEIGHT_CHANGED,
              this.redraw.bind(this)
            ),
            this.addManagedPropertyListeners(['domLayout', 'embedFullWidthRows'], function () {
              return e.onDomLayoutChanged();
            }),
            this.addManagedPropertyListeners(
              ['suppressMaxRenderedRowRestriction', 'rowBuffer'],
              function () {
                return e.redraw();
              }
            ),
            this.addManagedPropertyListeners(
              [
                'suppressCellFocus',
                'getBusinessKeyForNode',
                'fullWidthCellRenderer',
                'fullWidthCellRendererParams',
                'rowStyle',
                'getRowStyle',
                'rowClass',
                'getRowClass',
                'rowClassRules',
                'groupRowRenderer',
                'groupRowRendererParams',
                'loadingCellRenderer',
                'loadingCellRendererParams',
                'detailCellRenderer',
                'detailCellRendererParams',
                'enableRangeSelection',
                'enableCellTextSelection',
              ],
              function () {
                return e.redrawRows();
              }
            ),
            this.gridOptionsService.isGroupRowsSticky())
          ) {
            var r = this.rowModel.getType();
            (r === 'clientSide' || r === 'serverSide') &&
              (this.stickyRowFeature = this.createManagedBean(
                new py(this.createRowCon.bind(this), this.destroyRowCtrls.bind(this))
              ));
          }
          this.registerCellEventListeners(),
            this.initialiseCache(),
            (this.printLayout = this.gridOptionsService.isDomLayout('print')),
            (this.embedFullWidthRows =
              this.printLayout || this.gridOptionsService.get('embedFullWidthRows')),
            this.redrawAfterModelUpdate();
        }),
        (t.prototype.initialiseCache = function () {
          if (this.gridOptionsService.get('keepDetailRows')) {
            var e = this.getKeepDetailRowsCount(),
              r = e ?? 3;
            this.cachedRowCtrls = new vy(r);
          }
        }),
        (t.prototype.getKeepDetailRowsCount = function () {
          return this.gridOptionsService.get('keepDetailRowsCount');
        }),
        (t.prototype.getStickyTopRowCtrls = function () {
          return this.stickyRowFeature ? this.stickyRowFeature.getStickyRowCtrls() : [];
        }),
        (t.prototype.updateAllRowCtrls = function () {
          var e = It(this.rowCtrlsByRowIndex),
            r = It(this.zombieRowCtrls),
            o = this.cachedRowCtrls ? this.cachedRowCtrls.getEntries() : [];
          r.length > 0 || o.length > 0
            ? (this.allRowCtrls = Ut(Ut(Ut([], jt(e), !1), jt(r), !1), jt(o), !1))
            : (this.allRowCtrls = e);
        }),
        (t.prototype.onCellFocusChanged = function (e) {
          this.getAllCellCtrls().forEach(function (r) {
            return r.onCellFocused(e);
          }),
            this.getFullWidthRowCtrls().forEach(function (r) {
              return r.onFullWidthRowFocused(e);
            });
        }),
        (t.prototype.registerCellEventListeners = function () {
          var e = this;
          this.addManagedListener(this.eventService, g.EVENT_CELL_FOCUSED, function (r) {
            e.onCellFocusChanged(r);
          }),
            this.addManagedListener(this.eventService, g.EVENT_CELL_FOCUS_CLEARED, function () {
              e.onCellFocusChanged();
            }),
            this.addManagedListener(this.eventService, g.EVENT_FLASH_CELLS, function (r) {
              e.getAllCellCtrls().forEach(function (o) {
                return o.onFlashCells(r);
              });
            }),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_HOVER_CHANGED, function () {
              e.getAllCellCtrls().forEach(function (r) {
                return r.onColumnHover();
              });
            }),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_CHANGED,
              function () {
                e.getAllCellCtrls().forEach(function (r) {
                  return r.onDisplayedColumnsChanged();
                });
              }
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
              function () {
                e.printLayout &&
                  e.getAllCellCtrls().forEach(function (r) {
                    return r.onLeftChanged();
                  });
              }
            ),
            this.setupRangeSelectionListeners(),
            this.refreshListenersToColumnsForCellComps(),
            this.addManagedListener(
              this.eventService,
              g.EVENT_GRID_COLUMNS_CHANGED,
              this.refreshListenersToColumnsForCellComps.bind(this)
            ),
            this.addDestroyFunc(this.removeGridColumnListeners.bind(this));
        }),
        (t.prototype.removeGridColumnListeners = function () {
          this.destroyFuncsForColumnListeners.forEach(function (e) {
            return e();
          }),
            (this.destroyFuncsForColumnListeners.length = 0);
        }),
        (t.prototype.refreshListenersToColumnsForCellComps = function () {
          var e = this;
          this.removeGridColumnListeners();
          var r = this.columnModel.getAllGridColumns();
          r.forEach(function (o) {
            var i = function (p) {
                e.getAllCellCtrls().forEach(function (d) {
                  d.getColumn() === o && p(d);
                });
              },
              s = function () {
                i(function (p) {
                  return p.onLeftChanged();
                });
              },
              a = function () {
                i(function (p) {
                  return p.onWidthChanged();
                });
              },
              l = function () {
                i(function (p) {
                  return p.onFirstRightPinnedChanged();
                });
              },
              u = function () {
                i(function (p) {
                  return p.onLastLeftPinnedChanged();
                });
              },
              c = function () {
                i(function (p) {
                  return p.onColDefChanged();
                });
              };
            o.addEventListener('leftChanged', s),
              o.addEventListener('widthChanged', a),
              o.addEventListener('firstRightPinnedChanged', l),
              o.addEventListener('lastLeftPinnedChanged', u),
              o.addEventListener('colDefChanged', c),
              e.destroyFuncsForColumnListeners.push(function () {
                o.removeEventListener('leftChanged', s),
                  o.removeEventListener('widthChanged', a),
                  o.removeEventListener('firstRightPinnedChanged', l),
                  o.removeEventListener('lastLeftPinnedChanged', u),
                  o.removeEventListener('colDefChanged', c);
              });
          });
        }),
        (t.prototype.onDomLayoutChanged = function () {
          var e = this.gridOptionsService.isDomLayout('print'),
            r = e || this.gridOptionsService.get('embedFullWidthRows'),
            o = r !== this.embedFullWidthRows || this.printLayout !== e;
          (this.printLayout = e),
            (this.embedFullWidthRows = r),
            o && this.redrawAfterModelUpdate({ domLayoutChanged: !0 });
        }),
        (t.prototype.datasourceChanged = function () {
          (this.firstRenderedRow = 0), (this.lastRenderedRow = -1);
          var e = Object.keys(this.rowCtrlsByRowIndex);
          this.removeRowCtrls(e);
        }),
        (t.prototype.onPageLoaded = function (e) {
          var r = {
            recycleRows: e.keepRenderedRows,
            animate: e.animate,
            newData: e.newData,
            newPage: e.newPage,
            onlyBody: !0,
          };
          this.redrawAfterModelUpdate(r);
        }),
        (t.prototype.getAllCellsForColumn = function (e) {
          var r = [];
          return (
            this.getAllRowCtrls().forEach(function (o) {
              var i = o.getCellElement(e);
              i && r.push(i);
            }),
            r
          );
        }),
        (t.prototype.refreshFloatingRowComps = function () {
          this.refreshFloatingRows(this.topRowCtrls, this.pinnedRowModel.getPinnedTopRowData()),
            this.refreshFloatingRows(
              this.bottomRowCtrls,
              this.pinnedRowModel.getPinnedBottomRowData()
            );
        }),
        (t.prototype.getTopRowCtrls = function () {
          return this.topRowCtrls;
        }),
        (t.prototype.getCentreRowCtrls = function () {
          return this.allRowCtrls;
        }),
        (t.prototype.getBottomRowCtrls = function () {
          return this.bottomRowCtrls;
        }),
        (t.prototype.refreshFloatingRows = function (e, r) {
          var o = this;
          e.forEach(function (i) {
            i.destroyFirstPass(), i.destroySecondPass();
          }),
            (e.length = 0),
            r &&
              r.forEach(function (i) {
                var s = new fr(i, o.beans, !1, !1, o.printLayout);
                e.push(s);
              });
        }),
        (t.prototype.onPinnedRowDataChanged = function () {
          var e = { recycleRows: !0 };
          this.redrawAfterModelUpdate(e);
        }),
        (t.prototype.redrawRow = function (e, r) {
          var o = this,
            i;
          if ((r === void 0 && (r = !1), e.sticky)) this.stickyRowFeature.refreshStickyNode(e);
          else if (!((i = this.cachedRowCtrls) === null || i === void 0) && i.has(e)) {
            this.cachedRowCtrls.removeRow(e);
            return;
          } else {
            var s = function (a) {
              var l = a[e.rowIndex];
              l &&
                l.getRowNode() === e &&
                (l.destroyFirstPass(),
                l.destroySecondPass(),
                (a[e.rowIndex] = o.createRowCon(e, !1, !1)));
            };
            switch (e.rowPinned) {
              case 'top':
                s(this.topRowCtrls);
                break;
              case 'bottom':
                s(this.bottomRowCtrls);
                break;
              default:
                s(this.rowCtrlsByRowIndex), this.updateAllRowCtrls();
            }
          }
          r || this.dispatchDisplayedRowsChanged(!1);
        }),
        (t.prototype.redrawRows = function (e) {
          var r = this,
            o = e != null;
          if (o) {
            e == null ||
              e.forEach(function (i) {
                return r.redrawRow(i, !0);
              }),
              this.dispatchDisplayedRowsChanged(!1);
            return;
          }
          this.redrawAfterModelUpdate();
        }),
        (t.prototype.getCellToRestoreFocusToAfterRefresh = function (e) {
          var r =
            e != null && e.suppressKeepFocus
              ? null
              : this.focusService.getFocusCellToUseAfterRefresh();
          if (r == null) return null;
          var o = this.gridOptionsService.getDocument(),
            i = o.activeElement,
            s = this.gridOptionsService.getDomData(i, hr.DOM_DATA_KEY_CELL_CTRL),
            a = this.gridOptionsService.getDomData(i, fr.DOM_DATA_KEY_ROW_CTRL),
            l = s || a;
          return l ? r : null;
        }),
        (t.prototype.redrawAfterModelUpdate = function (e) {
          e === void 0 && (e = {}), this.getLockOnRefresh();
          var r = this.getCellToRestoreFocusToAfterRefresh(e);
          this.updateContainerHeights(), this.scrollToTopIfNewData(e);
          var o = !e.domLayoutChanged && !!e.recycleRows,
            i = e.animate && this.gridOptionsService.isAnimateRows(),
            s = o ? this.getRowsToRecycle() : null;
          o || this.removeAllRowComps(),
            this.workOutFirstAndLastRowsToRender(),
            this.stickyRowFeature && this.stickyRowFeature.checkStickyRows(),
            this.recycleRows(s, i),
            this.gridBodyCtrl.updateRowCount(),
            e.onlyBody || this.refreshFloatingRowComps(),
            this.dispatchDisplayedRowsChanged(),
            r != null && this.restoreFocusedCell(r),
            this.releaseLockOnRefresh();
        }),
        (t.prototype.scrollToTopIfNewData = function (e) {
          var r = e.newData || e.newPage,
            o = this.gridOptionsService.get('suppressScrollOnNewData');
          r && !o && this.gridBodyCtrl.getScrollFeature().scrollToTop();
        }),
        (t.prototype.updateContainerHeights = function () {
          if (this.printLayout) {
            this.rowContainerHeightService.setModelHeight(null);
            return;
          }
          var e = this.paginationProxy.getCurrentPageHeight();
          e === 0 && (e = 1), this.rowContainerHeightService.setModelHeight(e);
        }),
        (t.prototype.getLockOnRefresh = function () {
          if (this.refreshInProgress)
            throw new Error(
              'AG Grid: cannot get grid to draw rows when it is in the middle of drawing rows. Your code probably called a grid API method while the grid was in the render stage. To overcome this, put the API call into a timeout, e.g. instead of api.redrawRows(), call setTimeout(function() { api.redrawRows(); }, 0). To see what part of your code that caused the refresh check this stacktrace.'
            );
          this.refreshInProgress = !0;
        }),
        (t.prototype.releaseLockOnRefresh = function () {
          this.refreshInProgress = !1;
        }),
        (t.prototype.isRefreshInProgress = function () {
          return this.refreshInProgress;
        }),
        (t.prototype.restoreFocusedCell = function (e) {
          e &&
            (this.focusService.setRestoreFocusedCell(e),
            this.onCellFocusChanged(
              this.beans.gridOptionsService.addGridCommonParams({
                rowIndex: e.rowIndex,
                column: e.column,
                rowPinned: e.rowPinned,
                forceBrowserFocus: !0,
                preventScrollOnBrowserFocus: !0,
                type: 'mock',
              })
            ));
        }),
        (t.prototype.stopEditing = function (e) {
          e === void 0 && (e = !1),
            this.getAllRowCtrls().forEach(function (r) {
              r.stopEditing(e);
            });
        }),
        (t.prototype.getAllCellCtrls = function () {
          for (var e = [], r = this.getAllRowCtrls(), o = r.length, i = 0; i < o; i++)
            for (var s = r[i].getAllCellCtrls(), a = s.length, l = 0; l < a; l++) e.push(s[l]);
          return e;
        }),
        (t.prototype.getAllRowCtrls = function () {
          var e,
            r,
            o = (this.stickyRowFeature && this.stickyRowFeature.getStickyRowCtrls()) || [],
            i = Ut(Ut(Ut([], jt(this.topRowCtrls), !1), jt(this.bottomRowCtrls), !1), jt(o), !1);
          try {
            for (
              var s = hy(Object.keys(this.rowCtrlsByRowIndex)), a = s.next();
              !a.done;
              a = s.next()
            ) {
              var l = a.value;
              i.push(this.rowCtrlsByRowIndex[l]);
            }
          } catch (u) {
            e = { error: u };
          } finally {
            try {
              a && !a.done && (r = s.return) && r.call(s);
            } finally {
              if (e) throw e.error;
            }
          }
          return i;
        }),
        (t.prototype.addRenderedRowListener = function (e, r, o) {
          var i = this.rowCtrlsByRowIndex[r];
          i && i.addEventListener(e, o);
        }),
        (t.prototype.flashCells = function (e) {
          e === void 0 && (e = {}),
            this.getCellCtrls(e.rowNodes, e.columns).forEach(function (r) {
              return r.flashCell(e);
            });
        }),
        (t.prototype.refreshCells = function (e) {
          var r = this;
          e === void 0 && (e = {});
          var o = { forceRefresh: e.force, newData: !1, suppressFlash: e.suppressFlash };
          this.getCellCtrls(e.rowNodes, e.columns).forEach(function (i) {
            return i.refreshOrDestroyCell(o);
          }),
            e.rowNodes &&
              (this.getRowCtrls(e.rowNodes).forEach(function (i) {
                if (i.isFullWidth()) {
                  var s = i.refreshFullWidth();
                  s || r.redrawRow(i.getRowNode(), !0);
                }
              }),
              this.dispatchDisplayedRowsChanged(!1));
        }),
        (t.prototype.getCellRendererInstances = function (e) {
          var r = this,
            o,
            i = this.getCellCtrls(e.rowNodes, e.columns)
              .map(function (l) {
                return l.getCellRenderer();
              })
              .filter(function (l) {
                return l != null;
              });
          if (!((o = e.columns) === null || o === void 0) && o.length) return i;
          var s = [],
            a = this.mapRowNodes(e.rowNodes);
          return (
            this.getAllRowCtrls().forEach(function (l) {
              if (!(a && !r.isRowInMap(l.getRowNode(), a)) && l.isFullWidth())
                for (var u = l.getFullWidthCellRenderers(), c = 0; c < u.length; c++) {
                  var p = u[c];
                  p != null && s.push(p);
                }
            }),
            Ut(Ut([], jt(s), !1), jt(i), !1)
          );
        }),
        (t.prototype.getCellEditorInstances = function (e) {
          var r = [];
          return (
            this.getCellCtrls(e.rowNodes, e.columns).forEach(function (o) {
              var i = o.getCellEditor();
              i && r.push(i);
            }),
            r
          );
        }),
        (t.prototype.getEditingCells = function () {
          var e = [];
          return (
            this.getAllCellCtrls().forEach(function (r) {
              if (r.isEditing()) {
                var o = r.getCellPosition();
                e.push(o);
              }
            }),
            e
          );
        }),
        (t.prototype.mapRowNodes = function (e) {
          if (e) {
            var r = { top: {}, bottom: {}, normal: {} };
            return (
              e.forEach(function (o) {
                var i = o.id;
                o.rowPinned === 'top'
                  ? (r.top[i] = o)
                  : o.rowPinned === 'bottom'
                  ? (r.bottom[i] = o)
                  : (r.normal[i] = o);
              }),
              r
            );
          }
        }),
        (t.prototype.isRowInMap = function (e, r) {
          var o = e.id,
            i = e.rowPinned;
          return i === 'bottom'
            ? r.bottom[o] != null
            : i === 'top'
            ? r.top[o] != null
            : r.normal[o] != null;
        }),
        (t.prototype.getRowCtrls = function (e) {
          var r = this,
            o = this.mapRowNodes(e),
            i = this.getAllRowCtrls();
          return !e || !o
            ? i
            : i.filter(function (s) {
                var a = s.getRowNode();
                return r.isRowInMap(a, o);
              });
        }),
        (t.prototype.getCellCtrls = function (e, r) {
          var o = this,
            i;
          P(r) &&
            ((i = {}),
            r.forEach(function (a) {
              var l = o.columnModel.getGridColumn(a);
              P(l) && (i[l.getId()] = !0);
            }));
          var s = [];
          return (
            this.getRowCtrls(e).forEach(function (a) {
              a.getAllCellCtrls().forEach(function (l) {
                var u = l.getColumn().getId(),
                  c = i && !i[u];
                c || s.push(l);
              });
            }),
            s
          );
        }),
        (t.prototype.destroy = function () {
          this.removeAllRowComps(), n.prototype.destroy.call(this);
        }),
        (t.prototype.removeAllRowComps = function () {
          var e = Object.keys(this.rowCtrlsByRowIndex);
          this.removeRowCtrls(e);
        }),
        (t.prototype.getRowsToRecycle = function () {
          var e = [];
          ye(this.rowCtrlsByRowIndex, function (o, i) {
            var s = i.getRowNode().id == null;
            s && e.push(o);
          }),
            this.removeRowCtrls(e);
          var r = {};
          return (
            ye(this.rowCtrlsByRowIndex, function (o, i) {
              var s = i.getRowNode();
              r[s.id] = i;
            }),
            (this.rowCtrlsByRowIndex = {}),
            r
          );
        }),
        (t.prototype.removeRowCtrls = function (e, r) {
          var o = this;
          r === void 0 && (r = !1),
            e.forEach(function (i) {
              var s = o.rowCtrlsByRowIndex[i];
              s && (s.destroyFirstPass(r), s.destroySecondPass()), delete o.rowCtrlsByRowIndex[i];
            });
        }),
        (t.prototype.onBodyScroll = function (e) {
          e.direction === 'vertical' && this.redraw({ afterScroll: !0 });
        }),
        (t.prototype.redraw = function (e) {
          e === void 0 && (e = {});
          var r = e.afterScroll,
            o;
          this.stickyRowFeature &&
            Fn() &&
            (o = this.getCellToRestoreFocusToAfterRefresh() || void 0);
          var i = this.firstRenderedRow,
            s = this.lastRenderedRow;
          this.workOutFirstAndLastRowsToRender();
          var a = !1;
          this.stickyRowFeature && (a = this.stickyRowFeature.checkStickyRows());
          var l = this.firstRenderedRow !== i || this.lastRenderedRow !== s;
          if (
            !(r && !a && !l) &&
            (this.getLockOnRefresh(),
            this.recycleRows(null, !1, r),
            this.releaseLockOnRefresh(),
            this.dispatchDisplayedRowsChanged(r && !a),
            o != null)
          ) {
            var u = this.getCellToRestoreFocusToAfterRefresh();
            o != null &&
              u == null &&
              (this.animationFrameService.flushAllFrames(), this.restoreFocusedCell(o));
          }
        }),
        (t.prototype.removeRowCompsNotToDraw = function (e, r) {
          var o = {};
          e.forEach(function (a) {
            return (o[a] = !0);
          });
          var i = Object.keys(this.rowCtrlsByRowIndex),
            s = i.filter(function (a) {
              return !o[a];
            });
          this.removeRowCtrls(s, r);
        }),
        (t.prototype.calculateIndexesToDraw = function (e) {
          var r = this,
            o = Ja(this.firstRenderedRow, this.lastRenderedRow),
            i = function (c, p) {
              var d = p.getRowNode().rowIndex;
              d != null &&
                (d < r.firstRenderedRow || d > r.lastRenderedRow) &&
                r.doNotUnVirtualiseRow(p) &&
                o.push(d);
            };
          ye(this.rowCtrlsByRowIndex, i),
            ye(e, i),
            o.sort(function (c, p) {
              return c - p;
            });
          for (var s = [], a = 0; a < o.length; a++) {
            var l = o[a],
              u = this.paginationProxy.getRow(l);
            u && !u.sticky && s.push(l);
          }
          return s;
        }),
        (t.prototype.recycleRows = function (e, r, o) {
          var i = this;
          r === void 0 && (r = !1), o === void 0 && (o = !1);
          var s = this.calculateIndexesToDraw(e);
          if (
            ((this.printLayout || o) && (r = !1),
            this.removeRowCompsNotToDraw(s, !r),
            s.forEach(function (l) {
              var u = i.createOrUpdateRowCtrl(l, e, r, o);
              P(u);
            }),
            e)
          ) {
            var a =
              o && !this.gridOptionsService.get('suppressAnimationFrame') && !this.printLayout;
            a
              ? this.beans.animationFrameService.addDestroyTask(function () {
                  i.destroyRowCtrls(e, r), i.updateAllRowCtrls(), i.dispatchDisplayedRowsChanged();
                })
              : this.destroyRowCtrls(e, r);
          }
          this.updateAllRowCtrls();
        }),
        (t.prototype.dispatchDisplayedRowsChanged = function (e) {
          e === void 0 && (e = !1);
          var r = { type: g.EVENT_DISPLAYED_ROWS_CHANGED, afterScroll: e };
          this.eventService.dispatchEvent(r);
        }),
        (t.prototype.onDisplayedColumnsChanged = function () {
          var e = this.columnModel.isPinningLeft(),
            r = this.columnModel.isPinningRight(),
            o = this.pinningLeft !== e || r !== this.pinningRight;
          o &&
            ((this.pinningLeft = e),
            (this.pinningRight = r),
            this.embedFullWidthRows && this.redrawFullWidthEmbeddedRows());
        }),
        (t.prototype.redrawFullWidthEmbeddedRows = function () {
          var e = [];
          this.getFullWidthRowCtrls().forEach(function (r) {
            var o = r.getRowNode().rowIndex;
            e.push(o.toString());
          }),
            this.refreshFloatingRowComps(),
            this.removeRowCtrls(e),
            this.redraw({ afterScroll: !0 });
        }),
        (t.prototype.getFullWidthRowCtrls = function (e) {
          var r = this,
            o = this.mapRowNodes(e);
          return this.getAllRowCtrls().filter(function (i) {
            if (!i.isFullWidth()) return !1;
            var s = i.getRowNode();
            return !(o != null && !r.isRowInMap(s, o));
          });
        }),
        (t.prototype.createOrUpdateRowCtrl = function (e, r, o, i) {
          var s,
            a = this.rowCtrlsByRowIndex[e];
          a ||
            ((s = this.paginationProxy.getRow(e)),
            P(s) && P(r) && r[s.id] && s.alreadyRendered && ((a = r[s.id]), (r[s.id] = null)));
          var l = !a;
          if (l)
            if ((s || (s = this.paginationProxy.getRow(e)), P(s))) a = this.createRowCon(s, o, i);
            else return;
          return s && (s.alreadyRendered = !0), (this.rowCtrlsByRowIndex[e] = a), a;
        }),
        (t.prototype.destroyRowCtrls = function (e, r) {
          var o = this,
            i = [];
          ye(e, function (s, a) {
            if (a) {
              if (o.cachedRowCtrls && a.isCacheable()) {
                o.cachedRowCtrls.addRow(a);
                return;
              }
              a.destroyFirstPass(!r),
                r
                  ? ((o.zombieRowCtrls[a.getInstanceId()] = a),
                    i.push(function () {
                      a.destroySecondPass(), delete o.zombieRowCtrls[a.getInstanceId()];
                    }))
                  : a.destroySecondPass();
            }
          }),
            r &&
              (i.push(function () {
                o.updateAllRowCtrls(), o.dispatchDisplayedRowsChanged();
              }),
              da(i));
        }),
        (t.prototype.getRowBuffer = function () {
          return this.gridOptionsService.get('rowBuffer');
        }),
        (t.prototype.getRowBufferInPixels = function () {
          var e = this.getRowBuffer(),
            r = this.gridOptionsService.getRowHeightAsNumber();
          return e * r;
        }),
        (t.prototype.workOutFirstAndLastRowsToRender = function () {
          this.rowContainerHeightService.updateOffset();
          var e, r;
          if (!this.paginationProxy.isRowsToRender()) (e = 0), (r = -1);
          else if (this.printLayout)
            this.environment.refreshRowHeightVariable(),
              (e = this.paginationProxy.getPageFirstRow()),
              (r = this.paginationProxy.getPageLastRow());
          else {
            var o = this.getRowBufferInPixels(),
              i = this.ctrlsService.getGridBodyCtrl(),
              s = this.gridOptionsService.get('suppressRowVirtualisation'),
              a = !1,
              l = void 0,
              u = void 0;
            do {
              var c = this.paginationProxy.getPixelOffset(),
                p = this.paginationProxy.getCurrentPagePixelRange(),
                d = p.pageFirstPixel,
                h = p.pageLastPixel,
                f = this.rowContainerHeightService.getDivStretchOffset(),
                y = i.getScrollFeature().getVScrollPosition(),
                m = y.top,
                C = y.bottom;
              s
                ? ((l = d + f), (u = h + f))
                : ((l = Math.max(m + c - o, d) + f), (u = Math.min(C + c + o, h) + f)),
                (this.firstVisibleVPixel = Math.max(m + c, d) + f),
                (a = this.ensureAllRowsInRangeHaveHeightsCalculated(l, u));
            } while (a);
            var w = this.paginationProxy.getRowIndexAtPixel(l),
              E = this.paginationProxy.getRowIndexAtPixel(u),
              S = this.paginationProxy.getPageFirstRow(),
              R = this.paginationProxy.getPageLastRow();
            w < S && (w = S), E > R && (E = R), (e = w), (r = E);
          }
          var O = this.gridOptionsService.isDomLayout('normal'),
            b = this.gridOptionsService.get('suppressMaxRenderedRowRestriction'),
            A = Math.max(this.getRowBuffer(), 500);
          O && !b && r - e > A && (r = e + A);
          var M = e !== this.firstRenderedRow,
            N = r !== this.lastRenderedRow;
          if (M || N) {
            (this.firstRenderedRow = e), (this.lastRenderedRow = r);
            var I = { type: g.EVENT_VIEWPORT_CHANGED, firstRow: e, lastRow: r };
            this.eventService.dispatchEvent(I);
          }
        }),
        (t.prototype.dispatchFirstDataRenderedEvent = function () {
          var e = this;
          if (!this.dataFirstRenderedFired) {
            this.dataFirstRenderedFired = !0;
            var r = {
              type: g.EVENT_FIRST_DATA_RENDERED,
              firstRow: this.firstRenderedRow,
              lastRow: this.lastRenderedRow,
            };
            window.requestAnimationFrame(function () {
              e.beans.eventService.dispatchEvent(r);
            });
          }
        }),
        (t.prototype.ensureAllRowsInRangeHaveHeightsCalculated = function (e, r) {
          var o = this.paginationProxy.ensureRowHeightsValid(e, r, -1, -1);
          return o && this.updateContainerHeights(), o;
        }),
        (t.prototype.getFirstVisibleVerticalPixel = function () {
          return this.firstVisibleVPixel;
        }),
        (t.prototype.getFirstVirtualRenderedRow = function () {
          return this.firstRenderedRow;
        }),
        (t.prototype.getLastVirtualRenderedRow = function () {
          return this.lastRenderedRow;
        }),
        (t.prototype.doNotUnVirtualiseRow = function (e) {
          var r = !1,
            o = !0,
            i = e.getRowNode(),
            s = this.focusService.isRowNodeFocused(i),
            a = e.isEditing(),
            l = i.detail,
            u = s || a || l;
          if (!u) return r;
          var c = this.paginationProxy.isRowPresent(i);
          return c ? o : r;
        }),
        (t.prototype.createRowCon = function (e, r, o) {
          var i = this.cachedRowCtrls ? this.cachedRowCtrls.getRow(e) : null;
          if (i) return i;
          var s = this.gridOptionsService.get('suppressAnimationFrame'),
            a = o && !s && !this.printLayout,
            l = new fr(e, this.beans, r, a, this.printLayout);
          return l;
        }),
        (t.prototype.getRenderedNodes = function () {
          var e = this.rowCtrlsByRowIndex;
          return Object.keys(e).map(function (r) {
            return e[r].getRowNode();
          });
        }),
        (t.prototype.getRowByPosition = function (e) {
          var r,
            o = e.rowIndex;
          switch (e.rowPinned) {
            case 'top':
              r = this.topRowCtrls[o];
              break;
            case 'bottom':
              r = this.bottomRowCtrls[o];
              break;
            default:
              (r = this.rowCtrlsByRowIndex[o]),
                r ||
                  (r =
                    this.getStickyTopRowCtrls().find(function (i) {
                      return i.getRowNode().rowIndex === o;
                    }) || null);
              break;
          }
          return r;
        }),
        (t.prototype.getRowNode = function (e) {
          switch (e.rowPinned) {
            case 'top':
              return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
            case 'bottom':
              return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
            default:
              return this.rowModel.getRow(e.rowIndex);
          }
        }),
        (t.prototype.isRangeInRenderedViewport = function (e, r) {
          var o = e == null || r == null;
          if (o) return !1;
          var i = e > this.lastRenderedRow,
            s = r < this.firstRenderedRow,
            a = !s && !i;
          return a;
        }),
        at([v('animationFrameService')], t.prototype, 'animationFrameService', void 0),
        at([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        at([v('columnModel')], t.prototype, 'columnModel', void 0),
        at([v('pinnedRowModel')], t.prototype, 'pinnedRowModel', void 0),
        at([v('rowModel')], t.prototype, 'rowModel', void 0),
        at([v('focusService')], t.prototype, 'focusService', void 0),
        at([v('beans')], t.prototype, 'beans', void 0),
        at([v('rowContainerHeightService')], t.prototype, 'rowContainerHeightService', void 0),
        at([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        at([F], t.prototype, 'postConstruct', null),
        (t = at([x('rowRenderer')], t)),
        t
      );
    })(D),
    vy = (function () {
      function n(t) {
        (this.entriesMap = {}), (this.entriesList = []), (this.maxCount = t);
      }
      return (
        (n.prototype.addRow = function (t) {
          if (
            ((this.entriesMap[t.getRowNode().id] = t),
            this.entriesList.push(t),
            t.setCached(!0),
            this.entriesList.length > this.maxCount)
          ) {
            var e = this.entriesList[0];
            e.destroyFirstPass(), e.destroySecondPass(), this.removeFromCache(e);
          }
        }),
        (n.prototype.getRow = function (t) {
          if (t == null || t.id == null) return null;
          var e = this.entriesMap[t.id];
          if (!e) return null;
          this.removeFromCache(e), e.setCached(!1);
          var r = e.getRowNode() != t;
          return r ? null : e;
        }),
        (n.prototype.has = function (t) {
          return this.entriesMap[t.id] != null;
        }),
        (n.prototype.removeRow = function (t) {
          var e = t.id,
            r = this.entriesMap[e];
          delete this.entriesMap[e], Ee(this.entriesList, r);
        }),
        (n.prototype.removeFromCache = function (t) {
          var e = t.getRowNode().id;
          delete this.entriesMap[e], Ee(this.entriesList, t);
        }),
        (n.prototype.getEntries = function () {
          return this.entriesList;
        }),
        n
      );
    })(),
    gy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    mu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    yy = (function (n) {
      gy(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.formatValue = function (e, r, o, i, s) {
          s === void 0 && (s = !0);
          var a = null,
            l,
            u = e.getColDef();
          if ((i ? (l = i) : s && (l = u.valueFormatter), l)) {
            var c = this.gridOptionsService.addGridCommonParams({
              value: o,
              node: r,
              data: r ? r.data : null,
              colDef: u,
              column: e,
            });
            typeof l == 'function' ? (a = l(c)) : (a = this.expressionService.evaluate(l, c));
          } else if (u.refData) return u.refData[o] || '';
          return a == null && Array.isArray(o) && (a = o.join(', ')), a;
        }),
        mu([v('expressionService')], t.prototype, 'expressionService', void 0),
        (t = mu([x('valueFormatterService')], t)),
        t
      );
    })(D),
    my = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ls = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Cy = (function (n) {
      my(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          this.setPinnedTopRowData(),
            this.setPinnedBottomRowData(),
            this.addManagedPropertyListener('pinnedTopRowData', function () {
              return e.setPinnedTopRowData();
            }),
            this.addManagedPropertyListener('pinnedBottomRowData', function () {
              return e.setPinnedBottomRowData();
            });
        }),
        (t.prototype.isEmpty = function (e) {
          var r = e === 'top' ? this.pinnedTopRows : this.pinnedBottomRows;
          return Ge(r);
        }),
        (t.prototype.isRowsToRender = function (e) {
          return !this.isEmpty(e);
        }),
        (t.prototype.getRowAtPixel = function (e, r) {
          var o = r === 'top' ? this.pinnedTopRows : this.pinnedBottomRows;
          if (Ge(o)) return 0;
          for (var i = 0; i < o.length; i++) {
            var s = o[i],
              a = s.rowTop + s.rowHeight - 1;
            if (a >= e) return i;
          }
          return o.length - 1;
        }),
        (t.prototype.setPinnedTopRowData = function () {
          var e = this.gridOptionsService.get('pinnedTopRowData');
          this.pinnedTopRows = this.createNodesFromData(e, !0);
          var r = { type: g.EVENT_PINNED_ROW_DATA_CHANGED };
          this.eventService.dispatchEvent(r);
        }),
        (t.prototype.setPinnedBottomRowData = function () {
          var e = this.gridOptionsService.get('pinnedBottomRowData');
          this.pinnedBottomRows = this.createNodesFromData(e, !1);
          var r = { type: g.EVENT_PINNED_ROW_DATA_CHANGED };
          this.eventService.dispatchEvent(r);
        }),
        (t.prototype.createNodesFromData = function (e, r) {
          var o = this,
            i = [];
          if (e) {
            var s = 0;
            e.forEach(function (a, l) {
              var u = new U(o.beans);
              u.data = a;
              var c = r ? U.ID_PREFIX_TOP_PINNED : U.ID_PREFIX_BOTTOM_PINNED;
              (u.id = c + l),
                (u.rowPinned = r ? 'top' : 'bottom'),
                u.setRowTop(s),
                u.setRowHeight(o.gridOptionsService.getRowHeightForNode(u).height),
                u.setRowIndex(l),
                (s += u.rowHeight),
                i.push(u);
            });
          }
          return i;
        }),
        (t.prototype.getPinnedTopRowData = function () {
          return this.pinnedTopRows;
        }),
        (t.prototype.getPinnedBottomRowData = function () {
          return this.pinnedBottomRows;
        }),
        (t.prototype.getPinnedTopTotalHeight = function () {
          return this.getTotalHeight(this.pinnedTopRows);
        }),
        (t.prototype.getPinnedTopRowCount = function () {
          return this.pinnedTopRows ? this.pinnedTopRows.length : 0;
        }),
        (t.prototype.getPinnedBottomRowCount = function () {
          return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;
        }),
        (t.prototype.getPinnedTopRow = function (e) {
          return this.pinnedTopRows[e];
        }),
        (t.prototype.getPinnedBottomRow = function (e) {
          return this.pinnedBottomRows[e];
        }),
        (t.prototype.forEachPinnedTopRow = function (e) {
          Ge(this.pinnedTopRows) || this.pinnedTopRows.forEach(e);
        }),
        (t.prototype.forEachPinnedBottomRow = function (e) {
          Ge(this.pinnedBottomRows) || this.pinnedBottomRows.forEach(e);
        }),
        (t.prototype.getPinnedBottomTotalHeight = function () {
          return this.getTotalHeight(this.pinnedBottomRows);
        }),
        (t.prototype.getTotalHeight = function (e) {
          if (!e || e.length === 0) return 0;
          var r = q(e);
          return r.rowTop + r.rowHeight;
        }),
        Ls([v('beans')], t.prototype, 'beans', void 0),
        Ls([F], t.prototype, 'init', null),
        (t = Ls([x('pinnedRowModel')], t)),
        t
      );
    })(D),
    Cu;
  (function (n) {
    (n.Applied = 'Applied'),
      (n.StoreNotFound = 'StoreNotFound'),
      (n.StoreLoading = 'StoreLoading'),
      (n.StoreWaitingToLoad = 'StoreWaitingToLoad'),
      (n.StoreLoadingFailed = 'StoreLoadingFailed'),
      (n.StoreWrongType = 'StoreWrongType'),
      (n.Cancelled = 'Cancelled'),
      (n.StoreNotStarted = 'StoreNotStarted');
  })(Cu || (Cu = {}));
  var Ti = (function () {
      function n(t, e) {
        (this.active = !0),
          (this.nodeIdsToColumns = {}),
          (this.mapToItems = {}),
          (this.keepingColumns = t),
          (this.pathRoot = { rowNode: e, children: null }),
          (this.mapToItems[e.id] = this.pathRoot);
      }
      return (
        (n.prototype.setInactive = function () {
          this.active = !1;
        }),
        (n.prototype.isActive = function () {
          return this.active;
        }),
        (n.prototype.depthFirstSearchChangedPath = function (t, e) {
          if (t.children)
            for (var r = 0; r < t.children.length; r++)
              this.depthFirstSearchChangedPath(t.children[r], e);
          e(t.rowNode);
        }),
        (n.prototype.depthFirstSearchEverything = function (t, e, r) {
          if (t.childrenAfterGroup)
            for (var o = 0; o < t.childrenAfterGroup.length; o++) {
              var i = t.childrenAfterGroup[o];
              i.childrenAfterGroup
                ? this.depthFirstSearchEverything(t.childrenAfterGroup[o], e, r)
                : r && e(i);
            }
          e(t);
        }),
        (n.prototype.forEachChangedNodeDepthFirst = function (t, e, r) {
          e === void 0 && (e = !1),
            r === void 0 && (r = !1),
            this.active && !r
              ? this.depthFirstSearchChangedPath(this.pathRoot, t)
              : this.depthFirstSearchEverything(this.pathRoot.rowNode, t, e);
        }),
        (n.prototype.executeFromRootNode = function (t) {
          t(this.pathRoot.rowNode);
        }),
        (n.prototype.createPathItems = function (t) {
          for (var e = t, r = 0; !this.mapToItems[e.id]; ) {
            var o = { rowNode: e, children: null };
            (this.mapToItems[e.id] = o), r++, (e = e.parent);
          }
          return r;
        }),
        (n.prototype.populateColumnsMap = function (t, e) {
          var r = this;
          if (!(!this.keepingColumns || !e))
            for (var o = t; o; )
              this.nodeIdsToColumns[o.id] || (this.nodeIdsToColumns[o.id] = {}),
                e.forEach(function (i) {
                  return (r.nodeIdsToColumns[o.id][i.getId()] = !0);
                }),
                (o = o.parent);
        }),
        (n.prototype.linkPathItems = function (t, e) {
          for (var r = t, o = 0; o < e; o++) {
            var i = this.mapToItems[r.id],
              s = this.mapToItems[r.parent.id];
            s.children || (s.children = []), s.children.push(i), (r = r.parent);
          }
        }),
        (n.prototype.addParentNode = function (t, e) {
          if (!(!t || t.isRowPinned())) {
            var r = this.createPathItems(t);
            this.linkPathItems(t, r), this.populateColumnsMap(t, e);
          }
        }),
        (n.prototype.canSkip = function (t) {
          return this.active && !this.mapToItems[t.id];
        }),
        (n.prototype.getValueColumnsForNode = function (t, e) {
          if (!this.keepingColumns) return e;
          var r = this.nodeIdsToColumns[t.id],
            o = e.filter(function (i) {
              return r[i.getId()];
            });
          return o;
        }),
        (n.prototype.getNotValueColumnsForNode = function (t, e) {
          if (!this.keepingColumns) return null;
          var r = this.nodeIdsToColumns[t.id],
            o = e.filter(function (i) {
              return !r[i.getId()];
            });
          return o;
        }),
        n
      );
    })(),
    Sy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ms = (function (n) {
      Sy(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.state = t.STATE_WAITING_TO_LOAD), (r.version = 0), (r.id = e), r;
      }
      return (
        (t.prototype.getId = function () {
          return this.id;
        }),
        (t.prototype.load = function () {
          (this.state = t.STATE_LOADING), this.loadFromDatasource();
        }),
        (t.prototype.getVersion = function () {
          return this.version;
        }),
        (t.prototype.setStateWaitingToLoad = function () {
          this.version++, (this.state = t.STATE_WAITING_TO_LOAD);
        }),
        (t.prototype.getState = function () {
          return this.state;
        }),
        (t.prototype.pageLoadFailed = function (e) {
          var r = this.isRequestMostRecentAndLive(e);
          r && ((this.state = t.STATE_FAILED), this.processServerFail()),
            this.dispatchLoadCompleted(!1);
        }),
        (t.prototype.success = function (e, r) {
          this.successCommon(e, r);
        }),
        (t.prototype.pageLoaded = function (e, r, o) {
          this.successCommon(e, { rowData: r, rowCount: o });
        }),
        (t.prototype.isRequestMostRecentAndLive = function (e) {
          var r = e === this.version,
            o = this.isAlive();
          return r && o;
        }),
        (t.prototype.successCommon = function (e, r) {
          this.dispatchLoadCompleted();
          var o = this.isRequestMostRecentAndLive(e);
          o && ((this.state = t.STATE_LOADED), this.processServerResult(r));
        }),
        (t.prototype.dispatchLoadCompleted = function (e) {
          e === void 0 && (e = !0);
          var r = { type: t.EVENT_LOAD_COMPLETE, success: e, block: this };
          this.dispatchEvent(r);
        }),
        (t.EVENT_LOAD_COMPLETE = 'loadComplete'),
        (t.STATE_WAITING_TO_LOAD = 'needsLoading'),
        (t.STATE_LOADING = 'loading'),
        (t.STATE_LOADED = 'loaded'),
        (t.STATE_FAILED = 'failed'),
        t
      );
    })(D),
    wy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Pi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Ey = function (n, t) {
      return function (e, r) {
        t(e, r, n);
      };
    },
    _y = (function (n) {
      wy(t, n);
      function t() {
        var r = (n !== null && n.apply(this, arguments)) || this;
        return (r.activeBlockLoadsCount = 0), (r.blocks = []), (r.active = !0), r;
      }
      (e = t),
        (t.prototype.postConstruct = function () {
          this.maxConcurrentRequests = this.getMaxConcurrentDatasourceRequests();
          var r = this.gridOptionsService.get('blockLoadDebounceMillis');
          r &&
            r > 0 &&
            (this.checkBlockToLoadDebounce = j.debounce(
              this.performCheckBlocksToLoad.bind(this),
              r
            ));
        }),
        (t.prototype.setBeans = function (r) {
          this.logger = r.create('RowNodeBlockLoader');
        }),
        (t.prototype.getMaxConcurrentDatasourceRequests = function () {
          var r = this.gridOptionsService.get('maxConcurrentDatasourceRequests');
          if (r == null) return 2;
          if (!(r <= 0)) return r;
        }),
        (t.prototype.addBlock = function (r) {
          this.blocks.push(r),
            r.addEventListener(Ms.EVENT_LOAD_COMPLETE, this.loadComplete.bind(this)),
            this.checkBlockToLoad();
        }),
        (t.prototype.removeBlock = function (r) {
          j.removeFromArray(this.blocks, r);
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this), (this.active = !1);
        }),
        (t.prototype.loadComplete = function () {
          this.activeBlockLoadsCount--,
            this.checkBlockToLoad(),
            this.dispatchEvent({ type: e.BLOCK_LOADED_EVENT }),
            this.activeBlockLoadsCount == 0 &&
              this.dispatchEvent({ type: e.BLOCK_LOADER_FINISHED_EVENT });
        }),
        (t.prototype.checkBlockToLoad = function () {
          this.checkBlockToLoadDebounce
            ? this.checkBlockToLoadDebounce()
            : this.performCheckBlocksToLoad();
        }),
        (t.prototype.performCheckBlocksToLoad = function () {
          if (this.active) {
            if (
              (this.printCacheStatus(),
              this.maxConcurrentRequests != null &&
                this.activeBlockLoadsCount >= this.maxConcurrentRequests)
            ) {
              this.logger.log('checkBlockToLoad: max loads exceeded');
              return;
            }
            var r = this.getAvailableLoadingCount(),
              o = this.blocks
                .filter(function (i) {
                  return i.getState() === Ms.STATE_WAITING_TO_LOAD;
                })
                .slice(0, r);
            this.registerLoads(o.length),
              o.forEach(function (i) {
                return i.load();
              }),
              this.printCacheStatus();
          }
        }),
        (t.prototype.getBlockState = function () {
          if (this.gridOptionsService.isRowModelType('serverSide')) {
            var r = this.rowModel;
            return r.getBlockStates();
          }
          var o = {};
          return (
            this.blocks.forEach(function (i) {
              var s = i.getBlockStateJson(),
                a = s.id,
                l = s.state;
              o[a] = l;
            }),
            o
          );
        }),
        (t.prototype.printCacheStatus = function () {
          this.logger.isLogging() &&
            this.logger.log(
              'printCacheStatus: activePageLoadsCount = '.concat(this.activeBlockLoadsCount, ',') +
                ' blocks = '.concat(JSON.stringify(this.getBlockState()))
            );
        }),
        (t.prototype.isLoading = function () {
          return this.activeBlockLoadsCount > 0;
        }),
        (t.prototype.registerLoads = function (r) {
          this.activeBlockLoadsCount += r;
        }),
        (t.prototype.getAvailableLoadingCount = function () {
          return this.maxConcurrentRequests !== void 0
            ? this.maxConcurrentRequests - this.activeBlockLoadsCount
            : void 0;
        });
      var e;
      return (
        (t.BLOCK_LOADED_EVENT = 'blockLoaded'),
        (t.BLOCK_LOADER_FINISHED_EVENT = 'blockLoaderFinished'),
        Pi([v('rowModel')], t.prototype, 'rowModel', void 0),
        Pi([F], t.prototype, 'postConstruct', null),
        Pi([Ey(0, Ye('loggerFactory'))], t.prototype, 'setBeans', null),
        (t = e = Pi([x('rowNodeBlockLoader')], t)),
        t
      );
    })(D),
    Ry = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Is = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Oy = (function (n) {
      Ry(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.currentPage = 0),
          (e.topDisplayedRowIndex = 0),
          (e.bottomDisplayedRowIndex = 0),
          (e.pixelOffset = 0),
          (e.masterRowCount = 0),
          e
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          (this.active = this.gridOptionsService.get('pagination')),
            (this.pageSizeFromGridOptions = this.gridOptionsService.get('paginationPageSize')),
            (this.paginateChildRows = this.isPaginateChildRows()),
            this.addManagedListener(
              this.eventService,
              g.EVENT_MODEL_UPDATED,
              this.onModelUpdated.bind(this)
            ),
            this.addManagedPropertyListener(
              'pagination',
              this.onPaginationGridOptionChanged.bind(this)
            ),
            this.addManagedPropertyListener(
              'paginationPageSize',
              this.onPageSizeGridOptionChanged.bind(this)
            ),
            this.onModelUpdated();
        }),
        (t.prototype.ensureRowHeightsValid = function (e, r, o, i) {
          var s = this.rowModel.ensureRowHeightsValid(
            e,
            r,
            this.getPageFirstRow(),
            this.getPageLastRow()
          );
          return s && this.calculatePages(), s;
        }),
        (t.prototype.isPaginateChildRows = function () {
          var e =
            this.gridOptionsService.get('groupRemoveSingleChildren') ||
            this.gridOptionsService.get('groupRemoveLowestSingleChildren');
          return e ? !0 : this.gridOptionsService.get('paginateChildRows');
        }),
        (t.prototype.onModelUpdated = function (e) {
          this.calculatePages();
          var r = {
            type: g.EVENT_PAGINATION_CHANGED,
            animate: e ? e.animate : !1,
            newData: e ? e.newData : !1,
            newPage: e ? e.newPage : !1,
            newPageSize: e ? e.newPageSize : !1,
            keepRenderedRows: e ? e.keepRenderedRows : !1,
          };
          this.eventService.dispatchEvent(r);
        }),
        (t.prototype.onPaginationGridOptionChanged = function () {
          (this.active = this.gridOptionsService.get('pagination')), this.calculatePages();
          var e = {
            type: g.EVENT_PAGINATION_CHANGED,
            animate: !1,
            newData: !1,
            newPage: !1,
            newPageSize: !1,
            keepRenderedRows: !0,
          };
          this.eventService.dispatchEvent(e);
        }),
        (t.prototype.onPageSizeGridOptionChanged = function () {
          this.setPageSize(this.gridOptionsService.get('paginationPageSize'), 'gridOptions');
        }),
        (t.prototype.goToPage = function (e) {
          if (!(!this.active || this.currentPage === e || typeof this.currentPage != 'number')) {
            this.currentPage = e;
            var r = {
              type: g.EVENT_MODEL_UPDATED,
              animate: !1,
              keepRenderedRows: !1,
              newData: !1,
              newPage: !0,
              newPageSize: !1,
            };
            this.onModelUpdated(r);
          }
        }),
        (t.prototype.getPixelOffset = function () {
          return this.pixelOffset;
        }),
        (t.prototype.getRow = function (e) {
          return this.rowModel.getRow(e);
        }),
        (t.prototype.getRowNode = function (e) {
          return this.rowModel.getRowNode(e);
        }),
        (t.prototype.getRowIndexAtPixel = function (e) {
          return this.rowModel.getRowIndexAtPixel(e);
        }),
        (t.prototype.getCurrentPageHeight = function () {
          return H(this.topRowBounds) || H(this.bottomRowBounds)
            ? 0
            : Math.max(
                this.bottomRowBounds.rowTop +
                  this.bottomRowBounds.rowHeight -
                  this.topRowBounds.rowTop,
                0
              );
        }),
        (t.prototype.getCurrentPagePixelRange = function () {
          var e = this.topRowBounds ? this.topRowBounds.rowTop : 0,
            r = this.bottomRowBounds
              ? this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight
              : 0;
          return { pageFirstPixel: e, pageLastPixel: r };
        }),
        (t.prototype.isRowPresent = function (e) {
          if (!this.rowModel.isRowPresent(e)) return !1;
          var r =
            e.rowIndex >= this.topDisplayedRowIndex && e.rowIndex <= this.bottomDisplayedRowIndex;
          return r;
        }),
        (t.prototype.isEmpty = function () {
          return this.rowModel.isEmpty();
        }),
        (t.prototype.isRowsToRender = function () {
          return this.rowModel.isRowsToRender();
        }),
        (t.prototype.forEachNode = function (e) {
          return this.rowModel.forEachNode(e);
        }),
        (t.prototype.forEachNodeOnPage = function (e) {
          for (var r = this.getPageFirstRow(), o = this.getPageLastRow(), i = r; i <= o; i++) {
            var s = this.getRow(i);
            s && e(s);
          }
        }),
        (t.prototype.getType = function () {
          return this.rowModel.getType();
        }),
        (t.prototype.getRowBounds = function (e) {
          var r = this.rowModel.getRowBounds(e);
          return (r.rowIndex = e), r;
        }),
        (t.prototype.getPageFirstRow = function () {
          return this.topRowBounds ? this.topRowBounds.rowIndex : -1;
        }),
        (t.prototype.getPageLastRow = function () {
          return this.bottomRowBounds ? this.bottomRowBounds.rowIndex : -1;
        }),
        (t.prototype.getRowCount = function () {
          return this.rowModel.getRowCount();
        }),
        (t.prototype.getPageForIndex = function (e) {
          return Math.floor(e / this.pageSize);
        }),
        (t.prototype.goToPageWithIndex = function (e) {
          if (this.active) {
            var r = this.getPageForIndex(e);
            this.goToPage(r);
          }
        }),
        (t.prototype.isRowInPage = function (e) {
          if (!this.active) return !0;
          var r = this.getPageForIndex(e.rowIndex);
          return r === this.currentPage;
        }),
        (t.prototype.isLastPageFound = function () {
          return this.rowModel.isLastRowIndexKnown();
        }),
        (t.prototype.getCurrentPage = function () {
          return this.currentPage;
        }),
        (t.prototype.goToNextPage = function () {
          this.goToPage(this.currentPage + 1);
        }),
        (t.prototype.goToPreviousPage = function () {
          this.goToPage(this.currentPage - 1);
        }),
        (t.prototype.goToFirstPage = function () {
          this.goToPage(0);
        }),
        (t.prototype.goToLastPage = function () {
          var e = this.rowModel.getRowCount(),
            r = Math.floor(e / this.pageSize);
          this.goToPage(r);
        }),
        (t.prototype.getPageSize = function () {
          return this.pageSize;
        }),
        (t.prototype.getTotalPages = function () {
          return this.totalPages;
        }),
        (t.prototype.setPage = function (e) {
          this.currentPage = e;
        }),
        Object.defineProperty(t.prototype, 'pageSize', {
          get: function () {
            return P(this.pageSizeAutoCalculated)
              ? this.pageSizeAutoCalculated
              : P(this.pageSizeFromPageSizeSelector)
              ? this.pageSizeFromPageSizeSelector
              : P(this.pageSizeFromInitialState)
              ? this.pageSizeFromInitialState
              : P(this.pageSizeFromGridOptions)
              ? this.pageSizeFromGridOptions
              : this.defaultPageSize;
          },
          enumerable: !1,
          configurable: !0,
        }),
        (t.prototype.unsetAutoCalculatedPageSize = function () {
          if (this.pageSizeAutoCalculated !== void 0) {
            var e = this.pageSizeAutoCalculated;
            (this.pageSizeAutoCalculated = void 0),
              this.pageSize !== e &&
                this.onModelUpdated({
                  type: g.EVENT_MODEL_UPDATED,
                  animate: !1,
                  keepRenderedRows: !1,
                  newData: !1,
                  newPage: !1,
                  newPageSize: !0,
                });
          }
        }),
        (t.prototype.setPageSize = function (e, r) {
          var o = this.pageSize;
          switch (r) {
            case 'autoCalculated':
              this.pageSizeAutoCalculated = e;
              break;
            case 'pageSizeSelector':
              (this.pageSizeFromPageSizeSelector = e),
                this.currentPage !== 0 && this.goToFirstPage();
              break;
            case 'initialState':
              this.pageSizeFromInitialState = e;
              break;
            case 'gridOptions':
              (this.pageSizeFromGridOptions = e),
                (this.pageSizeFromInitialState = void 0),
                (this.pageSizeFromPageSizeSelector = void 0),
                this.currentPage !== 0 && this.goToFirstPage();
              break;
          }
          if (o !== this.pageSize) {
            var i = {
              type: g.EVENT_MODEL_UPDATED,
              animate: !1,
              keepRenderedRows: !1,
              newData: !1,
              newPage: !1,
              newPageSize: !0,
            };
            this.onModelUpdated(i);
          }
        }),
        (t.prototype.calculatePages = function () {
          this.active
            ? this.paginateChildRows
              ? this.calculatePagesAllRows()
              : this.calculatePagesMasterRowsOnly()
            : this.calculatedPagesNotActive(),
            (this.topRowBounds = this.rowModel.getRowBounds(this.topDisplayedRowIndex)),
            this.topRowBounds && (this.topRowBounds.rowIndex = this.topDisplayedRowIndex),
            (this.bottomRowBounds = this.rowModel.getRowBounds(this.bottomDisplayedRowIndex)),
            this.bottomRowBounds && (this.bottomRowBounds.rowIndex = this.bottomDisplayedRowIndex),
            this.setPixelOffset(P(this.topRowBounds) ? this.topRowBounds.rowTop : 0);
        }),
        (t.prototype.setPixelOffset = function (e) {
          this.pixelOffset !== e &&
            ((this.pixelOffset = e),
            this.eventService.dispatchEvent({ type: g.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED }));
        }),
        (t.prototype.setZeroRows = function () {
          (this.masterRowCount = 0),
            (this.topDisplayedRowIndex = 0),
            (this.bottomDisplayedRowIndex = -1),
            (this.currentPage = 0),
            (this.totalPages = 0);
        }),
        (t.prototype.adjustCurrentPageIfInvalid = function () {
          this.currentPage >= this.totalPages && (this.currentPage = this.totalPages - 1),
            (!isFinite(this.currentPage) || isNaN(this.currentPage) || this.currentPage < 0) &&
              (this.currentPage = 0);
        }),
        (t.prototype.calculatePagesMasterRowsOnly = function () {
          if (
            ((this.masterRowCount = this.rowModel.getTopLevelRowCount()), this.masterRowCount <= 0)
          ) {
            this.setZeroRows();
            return;
          }
          var e = this.masterRowCount - 1;
          (this.totalPages = Math.floor(e / this.pageSize) + 1), this.adjustCurrentPageIfInvalid();
          var r = this.pageSize * this.currentPage,
            o = this.pageSize * (this.currentPage + 1) - 1;
          if (
            (o > e && (o = e),
            (this.topDisplayedRowIndex = this.rowModel.getTopLevelRowDisplayedIndex(r)),
            o === e)
          )
            this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;
          else {
            var i = this.rowModel.getTopLevelRowDisplayedIndex(o + 1);
            this.bottomDisplayedRowIndex = i - 1;
          }
        }),
        (t.prototype.getMasterRowCount = function () {
          return this.masterRowCount;
        }),
        (t.prototype.calculatePagesAllRows = function () {
          if (((this.masterRowCount = this.rowModel.getRowCount()), this.masterRowCount === 0)) {
            this.setZeroRows();
            return;
          }
          var e = this.masterRowCount - 1;
          (this.totalPages = Math.floor(e / this.pageSize) + 1),
            this.adjustCurrentPageIfInvalid(),
            (this.topDisplayedRowIndex = this.pageSize * this.currentPage),
            (this.bottomDisplayedRowIndex = this.pageSize * (this.currentPage + 1) - 1),
            this.bottomDisplayedRowIndex > e && (this.bottomDisplayedRowIndex = e);
        }),
        (t.prototype.calculatedPagesNotActive = function () {
          this.setPageSize(this.masterRowCount, 'autoCalculated'),
            (this.totalPages = 1),
            (this.currentPage = 0),
            (this.topDisplayedRowIndex = 0),
            (this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1);
        }),
        Is([v('rowModel')], t.prototype, 'rowModel', void 0),
        Is([F], t.prototype, 'postConstruct', null),
        (t = Is([x('paginationProxy')], t)),
        t
      );
    })(D),
    Ty = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Su = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Py = (function (n) {
      Ty(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.processAllCellClasses = function (e, r, o, i) {
          this.processClassRules(void 0, e.cellClassRules, r, o, i),
            this.processStaticCellClasses(e, r, o);
        }),
        (t.prototype.processClassRules = function (e, r, o, i, s) {
          if (!(r == null && e == null)) {
            var a = {},
              l = {},
              u = function (f, y) {
                f.split(' ').forEach(function (m) {
                  m.trim() != '' && y(m);
                });
              };
            if (r)
              for (
                var c = Object.keys(r),
                  p = function (f) {
                    var y = c[f],
                      m = r[y],
                      C;
                    typeof m == 'string'
                      ? (C = d.expressionService.evaluate(m, o))
                      : typeof m == 'function' && (C = m(o)),
                      u(y, function (w) {
                        C ? (a[w] = !0) : (l[w] = !0);
                      });
                  },
                  d = this,
                  h = 0;
                h < c.length;
                h++
              )
                p(h);
            e &&
              s &&
              Object.keys(e).forEach(function (f) {
                return u(f, function (y) {
                  a[y] || (l[y] = !0);
                });
              }),
              s && Object.keys(l).forEach(s),
              Object.keys(a).forEach(i);
          }
        }),
        (t.prototype.getStaticCellClasses = function (e, r) {
          var o = e.cellClass;
          if (!o) return [];
          var i;
          if (typeof o == 'function') {
            var s = o;
            i = s(r);
          } else i = o;
          return typeof i == 'string' && (i = [i]), i || [];
        }),
        (t.prototype.processStaticCellClasses = function (e, r, o) {
          var i = this.getStaticCellClasses(e, r);
          i.forEach(function (s) {
            o(s);
          });
        }),
        Su([v('expressionService')], t.prototype, 'expressionService', void 0),
        (t = Su([x('stylingService')], t)),
        t
      );
    })(D),
    Dy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ay = (function (n) {
      Dy(t, n);
      function t(e) {
        return n.call(this, e, 'ag-toggle-button') || this;
      }
      return (
        (t.prototype.setValue = function (e, r) {
          return (
            n.prototype.setValue.call(this, e, r),
            this.addOrRemoveCssClass('ag-selected', this.getValue()),
            this
          );
        }),
        t
      );
    })(ti),
    by = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Fy = (function (n) {
      by(t, n);
      function t(e) {
        return n.call(this, e, 'ag-text-area', null, 'textarea') || this;
      }
      return (
        (t.prototype.setValue = function (e, r) {
          var o = n.prototype.setValue.call(this, e, r);
          return (this.eInput.value = e), o;
        }),
        (t.prototype.setCols = function (e) {
          return (this.eInput.cols = e), this;
        }),
        (t.prototype.setRows = function (e) {
          return (this.eInput.rows = e), this;
        }),
        t
      );
    })(kt),
    Ly = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    My = (function (n) {
      Ly(t, n);
      function t(e) {
        return n.call(this, e, 'ag-date-field', 'date') || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          n.prototype.postConstruct.call(this),
            this.addManagedListener(this.eInput, 'wheel', this.onWheel.bind(this));
          var r = ht();
          this.addManagedListener(this.eInput, 'mousedown', function () {
            e.isDisabled() || r || e.eInput.focus();
          }),
            (this.eInput.step = 'any');
        }),
        (t.prototype.onWheel = function (e) {
          document.activeElement === this.eInput && e.preventDefault();
        }),
        (t.prototype.setMin = function (e) {
          var r,
            o =
              e instanceof Date
                ? (r = Xe(e ?? null, !1)) !== null && r !== void 0
                  ? r
                  : void 0
                : e;
          return this.min === o ? this : ((this.min = o), vt(this.eInput, 'min', o), this);
        }),
        (t.prototype.setMax = function (e) {
          var r,
            o =
              e instanceof Date
                ? (r = Xe(e ?? null, !1)) !== null && r !== void 0
                  ? r
                  : void 0
                : e;
          return this.max === o ? this : ((this.max = o), vt(this.eInput, 'max', o), this);
        }),
        (t.prototype.setStep = function (e) {
          return this.step === e ? this : ((this.step = e), vt(this.eInput, 'step', e), this);
        }),
        (t.prototype.getDate = function () {
          var e;
          if (this.eInput.validity.valid)
            return (e = _e(this.getValue())) !== null && e !== void 0 ? e : void 0;
        }),
        (t.prototype.setDate = function (e, r) {
          this.setValue(Xe(e ?? null, !1), r);
        }),
        t
      );
    })(lr),
    Iy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    xy = (function (n) {
      Iy(t, n);
      function t(e) {
        return n.call(this, e, 'ag-range-field', 'range') || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          n.prototype.postConstruct.call(this);
          var e = this.config,
            r = e.min,
            o = e.max,
            i = e.step;
          r != null && this.setMinValue(r), o != null && this.setMaxValue(o), this.setStep(i || 1);
        }),
        (t.prototype.addInputListeners = function () {
          var e = this;
          this.addManagedListener(this.eInput, 'input', function (r) {
            var o = r.target.value;
            e.setValue(o);
          });
        }),
        (t.prototype.setMinValue = function (e) {
          return (this.min = e), this.eInput.setAttribute('min', e.toString()), this;
        }),
        (t.prototype.setMaxValue = function (e) {
          return (this.max = e), this.eInput.setAttribute('max', e.toString()), this;
        }),
        (t.prototype.setStep = function (e) {
          return this.eInput.setAttribute('step', e.toString()), this;
        }),
        (t.prototype.setValue = function (e, r) {
          this.min != null && (e = Math.max(parseFloat(e), this.min).toString()),
            this.max != null && (e = Math.min(parseFloat(e), this.max).toString());
          var o = n.prototype.setValue.call(this, e, r);
          return (this.eInput.value = e), o;
        }),
        t
      );
    })(kt),
    Ny = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    wu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Gy = (function (n) {
      Ny(t, n);
      function t(e, r) {
        var o = n.call(this, '<div class="ag-rich-select-row" role="presentation"></div>') || this;
        return (o.params = e), (o.wrapperEl = r), o;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addManagedListener(this.getGui(), 'click', this.onClick.bind(this));
        }),
        (t.prototype.setState = function (e) {
          var r = '';
          this.params.valueFormatter && (r = this.params.valueFormatter(e));
          var o = this.populateWithRenderer(e, r);
          o || this.populateWithoutRenderer(e, r), (this.value = e);
        }),
        (t.prototype.highlightString = function (e) {
          var r = this.parsedValue;
          if (!(this.params.cellRenderer || !P(r))) {
            var o = P(e);
            if (o) {
              var i = r == null ? void 0 : r.toLocaleLowerCase().indexOf(e.toLocaleLowerCase());
              if (i >= 0) {
                var s = i + e.length,
                  a = ae(r.slice(0, i), !0),
                  l = ae(r.slice(i, s), !0),
                  u = ae(r.slice(s));
                this.renderValueWithoutRenderer(
                  ''
                    .concat(a, '<span class="ag-rich-select-row-text-highlight">')
                    .concat(l, '</span>')
                    .concat(u)
                );
              } else o = !1;
            }
            o || this.renderValueWithoutRenderer(r);
          }
        }),
        (t.prototype.updateHighlighted = function (e) {
          var r,
            o = this.getGui(),
            i = 'ag-rich-select-row-'.concat(this.getCompId());
          if (((r = o.parentElement) === null || r === void 0 || r.setAttribute('id', i), e)) {
            var s = this.getParentComponent().getAriaElement();
            fn(s, i), this.wrapperEl.setAttribute('data-active-option', i);
          }
          Rr(o.parentElement, e), this.addOrRemoveCssClass('ag-rich-select-row-selected', e);
        }),
        (t.prototype.populateWithoutRenderer = function (e, r) {
          var o = this.gridOptionsService.getDocument(),
            i = this.getGui(),
            s = o.createElement('span');
          (s.style.overflow = 'hidden'), (s.style.textOverflow = 'ellipsis');
          var a = ae(P(r) ? r : e, !0);
          (this.parsedValue = P(a) ? a : null),
            i.appendChild(s),
            this.renderValueWithoutRenderer(a);
        }),
        (t.prototype.renderValueWithoutRenderer = function (e) {
          var r = this.getGui().querySelector('span');
          r && (r.innerHTML = P(e) ? e : '&nbsp;');
        }),
        (t.prototype.populateWithRenderer = function (e, r) {
          var o = this,
            i,
            s;
          return (
            this.params.cellRenderer &&
              (s = this.userComponentFactory.getCellRendererDetails(this.params, {
                value: e,
                valueFormatted: r,
              })),
            s && (i = s.newAgStackInstance()),
            i && Kn(i, this.getGui()),
            i
              ? (i.then(function (a) {
                  o.addDestroyFunc(function () {
                    o.getContext().destroyBean(a);
                  });
                }),
                !0)
              : !1
          );
        }),
        (t.prototype.onClick = function () {
          var e = this.getParentComponent(),
            r = { type: g.EVENT_FIELD_PICKER_VALUE_SELECTED, fromEnterKey: !1, value: this.value };
          e == null || e.dispatchEvent(r);
        }),
        wu([v('userComponentFactory')], t.prototype, 'userComponentFactory', void 0),
        wu([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    Vy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Di = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Eu = (function (n) {
      Vy(t, n);
      function t(e) {
        var r =
          n.call(this, t.getTemplate((e == null ? void 0 : e.cssIdentifier) || 'default')) || this;
        (r.renderedRows = new Map()), (r.rowHeight = 20);
        var o = e || {},
          i = o.cssIdentifier,
          s = i === void 0 ? 'default' : i,
          a = o.ariaRole,
          l = a === void 0 ? 'listbox' : a,
          u = o.listName;
        return (r.cssIdentifier = s), (r.ariaRole = l), (r.listName = u), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.addScrollListener(),
            (this.rowHeight = this.getItemHeight()),
            this.addResizeObserver(),
            this.initialiseTabGuard({
              onFocusIn: function (r) {
                return e.onFocusIn(r);
              },
              onFocusOut: function (r) {
                return e.onFocusOut(r);
              },
              focusInnerElement: function (r) {
                return e.focusInnerElement(r);
              },
              onTabKeyDown: function (r) {
                return e.onTabKeyDown(r);
              },
              handleKeyDown: function (r) {
                return e.handleKeyDown(r);
              },
            }),
            this.setAriaProperties(),
            this.addManagedListener(
              this.eventService,
              g.EVENT_GRID_STYLES_CHANGED,
              this.onGridStylesChanged.bind(this)
            );
        }),
        (t.prototype.onGridStylesChanged = function () {
          (this.rowHeight = this.getItemHeight()), this.refresh();
        }),
        (t.prototype.setAriaProperties = function () {
          var e = this.localeService.getLocaleTextFunc(),
            r = e('ariaDefaultListName', this.listName || 'List'),
            o = this.eContainer;
          le(o, this.ariaRole), Ht(o, r);
        }),
        (t.prototype.addResizeObserver = function () {
          var e = this,
            r = function () {
              return e.animationFrameService.requestAnimationFrame(function () {
                return e.drawVirtualRows();
              });
            },
            o = this.resizeObserverService.observeResize(this.getGui(), r);
          this.addDestroyFunc(o);
        }),
        (t.prototype.focusInnerElement = function (e) {
          this.focusRow(e ? this.model.getRowCount() - 1 : 0);
        }),
        (t.prototype.onFocusIn = function (e) {
          var r = e.target;
          r.classList.contains('ag-virtual-list-item') && (this.lastFocusedRowIndex = xa(r) - 1);
        }),
        (t.prototype.onFocusOut = function (e) {
          this.getFocusableElement().contains(e.relatedTarget) || (this.lastFocusedRowIndex = null);
        }),
        (t.prototype.handleKeyDown = function (e) {
          switch (e.key) {
            case _.UP:
            case _.DOWN:
              this.navigate(e.key === _.UP) && e.preventDefault();
              break;
          }
        }),
        (t.prototype.onTabKeyDown = function (e) {
          this.navigate(e.shiftKey)
            ? e.preventDefault()
            : (it(e), this.forceFocusOutOfContainer(e.shiftKey));
        }),
        (t.prototype.navigate = function (e) {
          if (this.lastFocusedRowIndex == null) return !1;
          var r = this.lastFocusedRowIndex + (e ? -1 : 1);
          return r < 0 || r >= this.model.getRowCount() ? !1 : (this.focusRow(r), !0);
        }),
        (t.prototype.getLastFocusedRow = function () {
          return this.lastFocusedRowIndex;
        }),
        (t.prototype.focusRow = function (e) {
          var r = this;
          this.ensureIndexVisible(e),
            window.setTimeout(function () {
              if (r.isAlive()) {
                var o = r.renderedRows.get(e);
                o && o.eDiv.focus();
              }
            }, 10);
        }),
        (t.prototype.getComponentAt = function (e) {
          var r = this.renderedRows.get(e);
          return r && r.rowComponent;
        }),
        (t.prototype.forEachRenderedRow = function (e) {
          this.renderedRows.forEach(function (r, o) {
            return e(r.rowComponent, o);
          });
        }),
        (t.getTemplate = function (e) {
          return '<div class="ag-virtual-list-viewport ag-'
            .concat(
              e,
              `-virtual-list-viewport" role="presentation">
                <div class="ag-virtual-list-container ag-`
            )
            .concat(
              e,
              `-virtual-list-container" ref="eContainer"></div>
            </div>`
            );
        }),
        (t.prototype.getItemHeight = function () {
          return this.environment.getListItemHeight();
        }),
        (t.prototype.ensureIndexVisible = function (e, r) {
          r === void 0 && (r = !0);
          var o = this.model.getRowCount();
          if (typeof e != 'number' || e < 0 || e >= o)
            return console.warn('AG Grid: invalid row index for ensureIndexVisible: ' + e), !1;
          var i = e * this.rowHeight,
            s = i + this.rowHeight,
            a = this.getGui(),
            l = a.scrollTop,
            u = a.offsetHeight,
            c = l + u,
            p = r ? 0 : this.rowHeight,
            d = l > i + p,
            h = c < s - p;
          if (d) return (a.scrollTop = i), !0;
          if (h) {
            var f = s - u;
            return (a.scrollTop = f), !0;
          }
          return !1;
        }),
        (t.prototype.setComponentCreator = function (e) {
          this.componentCreator = e;
        }),
        (t.prototype.setComponentUpdater = function (e) {
          this.componentUpdater = e;
        }),
        (t.prototype.getRowHeight = function () {
          return this.rowHeight;
        }),
        (t.prototype.getScrollTop = function () {
          return this.getGui().scrollTop;
        }),
        (t.prototype.setRowHeight = function (e) {
          (this.rowHeight = e), this.refresh();
        }),
        (t.prototype.refresh = function (e) {
          var r = this;
          if (!(this.model == null || !this.isAlive())) {
            var o = this.model.getRowCount();
            (this.eContainer.style.height = ''.concat(o * this.rowHeight, 'px')),
              en(
                function () {
                  return r.eContainer.clientHeight >= o * r.rowHeight;
                },
                function () {
                  r.isAlive() &&
                    (r.canSoftRefresh(e)
                      ? r.drawVirtualRows(!0)
                      : (r.clearVirtualRows(), r.drawVirtualRows()));
                }
              );
          }
        }),
        (t.prototype.canSoftRefresh = function (e) {
          return !!(
            e &&
            this.renderedRows.size &&
            typeof this.model.areRowsEqual == 'function' &&
            this.componentUpdater
          );
        }),
        (t.prototype.clearVirtualRows = function () {
          var e = this;
          this.renderedRows.forEach(function (r, o) {
            return e.removeRow(o);
          });
        }),
        (t.prototype.drawVirtualRows = function (e) {
          if (!(!this.isAlive() || !this.model)) {
            var r = this.getGui(),
              o = r.scrollTop,
              i = o + r.offsetHeight,
              s = Math.floor(o / this.rowHeight),
              a = Math.floor(i / this.rowHeight);
            this.ensureRowsRendered(s, a, e);
          }
        }),
        (t.prototype.ensureRowsRendered = function (e, r, o) {
          var i = this;
          this.renderedRows.forEach(function (a, l) {
            (l < e || l > r) && l !== i.lastFocusedRowIndex && i.removeRow(l);
          }),
            o && this.refreshRows();
          for (var s = e; s <= r; s++)
            this.renderedRows.has(s) || (s < this.model.getRowCount() && this.insertRow(s));
        }),
        (t.prototype.insertRow = function (e) {
          var r = this,
            o = this.model.getRow(e),
            i = document.createElement('div');
          i.classList.add(
            'ag-virtual-list-item',
            'ag-'.concat(this.cssIdentifier, '-virtual-list-item')
          ),
            le(i, this.ariaRole === 'tree' ? 'treeitem' : 'option'),
            vn(i, this.model.getRowCount()),
            gn(i, e + 1),
            i.setAttribute('tabindex', '-1'),
            (i.style.height = ''.concat(this.rowHeight, 'px')),
            (i.style.top = ''.concat(this.rowHeight * e, 'px'));
          var s = this.componentCreator(o, i);
          s.addGuiEventListener('focusin', function () {
            return (r.lastFocusedRowIndex = e);
          }),
            i.appendChild(s.getGui()),
            this.renderedRows.has(e - 1)
              ? this.renderedRows.get(e - 1).eDiv.insertAdjacentElement('afterend', i)
              : this.renderedRows.has(e + 1)
              ? this.renderedRows.get(e + 1).eDiv.insertAdjacentElement('beforebegin', i)
              : this.eContainer.appendChild(i),
            this.renderedRows.set(e, { rowComponent: s, eDiv: i, value: o });
        }),
        (t.prototype.removeRow = function (e) {
          var r = this.renderedRows.get(e);
          this.eContainer.removeChild(r.eDiv),
            this.destroyBean(r.rowComponent),
            this.renderedRows.delete(e);
        }),
        (t.prototype.refreshRows = function () {
          var e = this,
            r = this.model.getRowCount();
          this.renderedRows.forEach(function (o, i) {
            var s, a;
            if (i >= r) e.removeRow(i);
            else {
              var l = e.model.getRow(i);
              !((a = (s = e.model).areRowsEqual) === null || a === void 0) && a.call(s, o.value, l)
                ? e.componentUpdater(l, o.rowComponent)
                : e.removeRow(i);
            }
          });
        }),
        (t.prototype.addScrollListener = function () {
          var e = this;
          this.addGuiEventListener(
            'scroll',
            function () {
              return e.drawVirtualRows();
            },
            { passive: !0 }
          );
        }),
        (t.prototype.setModel = function (e) {
          this.model = e;
        }),
        (t.prototype.getAriaElement = function () {
          return this.eContainer;
        }),
        (t.prototype.destroy = function () {
          this.isAlive() && (this.clearVirtualRows(), n.prototype.destroy.call(this));
        }),
        Di([v('resizeObserverService')], t.prototype, 'resizeObserverService', void 0),
        Di([v('animationFrameService')], t.prototype, 'animationFrameService', void 0),
        Di([L('eContainer')], t.prototype, 'eContainer', void 0),
        Di([F], t.prototype, 'postConstruct', null),
        t
      );
    })(yo),
    Hy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ai = function () {
      return (
        (Ai =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Ai.apply(this, arguments)
      );
    },
    _u = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    By = `
    <div class="ag-picker-field" role="presentation">
        <div ref="eLabel"></div>
            <div ref="eWrapper" class="ag-wrapper ag-picker-field-wrapper ag-rich-select-value ag-picker-collapsed">
            <div ref="eDisplayField" class="ag-picker-field-display"></div>
            <ag-input-text-field ref="eInput" class="ag-rich-select-field-input"></ag-input-text-field>
            <div ref="eIcon" class="ag-picker-field-icon" aria-hidden="true"></div>
        </div>
    </div>`,
    ky = (function (n) {
      Hy(t, n);
      function t(e) {
        var r = this,
          o,
          i;
        (r =
          n.call(
            this,
            Ai(
              Ai(
                {
                  pickerAriaLabelKey: 'ariaLabelRichSelectField',
                  pickerAriaLabelValue: 'Rich Select Field',
                  pickerType: 'ag-list',
                  className: 'ag-rich-select',
                  pickerIcon: 'smallDown',
                  ariaRole: 'combobox',
                  template: (o = e == null ? void 0 : e.template) !== null && o !== void 0 ? o : By,
                  modalPicker: !1,
                },
                e
              ),
              {
                maxPickerHeight:
                  (i = e == null ? void 0 : e.maxPickerHeight) !== null && i !== void 0
                    ? i
                    : 'calc(var(--ag-row-height) * 6.5)',
              }
            )
          ) || this),
          (r.searchString = ''),
          (r.highlightedItem = -1),
          (r.lastRowHovered = -1),
          (r.searchStringCreator = null);
        var s = e || {},
          a = s.cellRowHeight,
          l = s.value,
          u = s.valueList,
          c = s.searchStringCreator;
        return (
          a != null && (r.cellRowHeight = a),
          l !== void 0 && (r.value = l),
          u != null && (r.values = u),
          c && (r.searchStringCreator = c),
          r
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          n.prototype.postConstruct.call(this),
            this.createLoadingElement(),
            this.createListComponent();
          var r = this.config,
            o = r.allowTyping,
            i = r.placeholder;
          o
            ? (this.eInput.setAutoComplete(!1).setInputPlaceholder(i),
              this.eDisplayField.classList.add('ag-hidden'))
            : this.eInput.setDisplayed(!1),
            (this.eWrapper.tabIndex = this.gridOptionsService.get('tabIndex'));
          var s = this.config.searchDebounceDelay,
            a = s === void 0 ? 300 : s;
          (this.clearSearchString = He(this.clearSearchString, a)),
            this.renderSelectedValue(),
            o &&
              (this.eInput.onValueChange(function (l) {
                return e.searchTextFromString(l);
              }),
              this.addManagedListener(this.eWrapper, 'focus', this.onWrapperFocus.bind(this))),
            this.addManagedListener(this.eWrapper, 'focusout', this.onWrapperFocusOut.bind(this));
        }),
        (t.prototype.createLoadingElement = function () {
          var e = this.gridOptionsService.getDocument(),
            r = this.localeService.getLocaleTextFunc(),
            o = e.createElement('div');
          o.classList.add('ag-loading-text'),
            (o.innerText = r('loadingOoo', 'Loading...')),
            (this.eLoading = o);
        }),
        (t.prototype.createListComponent = function () {
          var e = this;
          (this.listComponent = this.createBean(new Eu({ cssIdentifier: 'rich-select' }))),
            this.listComponent.setComponentCreator(this.createRowComponent.bind(this));
          var r = function (c, p) {};
          this.listComponent.setComponentUpdater(r),
            this.listComponent.setParentComponent(this),
            this.addManagedListener(
              this.listComponent,
              g.EVENT_FIELD_PICKER_VALUE_SELECTED,
              function (c) {
                e.onListValueSelected(c.value, c.fromEnterKey);
              }
            );
          var o = this.cellRowHeight;
          o && this.listComponent.setRowHeight(o);
          var i = this.listComponent.getGui(),
            s = this.listComponent.getAriaElement();
          this.addManagedListener(i, 'mousemove', this.onPickerMouseMove.bind(this)),
            this.addManagedListener(i, 'mousedown', function (c) {
              return c.preventDefault();
            }),
            i.classList.add('ag-rich-select-list');
          var a = 'ag-rich-select-list-'.concat(this.listComponent.getCompId());
          s.setAttribute('id', a);
          var l = this.localeService.getLocaleTextFunc(),
            u = l(this.config.pickerAriaLabelKey, this.config.pickerAriaLabelValue);
          Ht(s, u), Cn(this.eWrapper, s);
        }),
        (t.prototype.renderSelectedValue = function () {
          var e = this,
            r = this,
            o = r.value,
            i = r.eDisplayField,
            s = r.config,
            a = this.config,
            l = a.allowTyping,
            u = a.initialInputValue,
            c = this.config.valueFormatter ? this.config.valueFormatter(o) : o;
          if (l) {
            this.eInput.setValue(u ?? c);
            return;
          }
          var p;
          s.cellRenderer &&
            (p = this.userComponentFactory.getCellRendererDetails(this.config, {
              value: o,
              valueFormatted: c,
            }));
          var d;
          if ((p && (d = p.newAgStackInstance()), d))
            de(i),
              Kn(d, i),
              d.then(function (f) {
                e.addDestroyFunc(function () {
                  return e.getContext().destroyBean(f);
                });
              });
          else if (P(this.value))
            (i.innerText = c), i.classList.remove('ag-display-as-placeholder');
          else {
            var h = s.placeholder;
            P(h)
              ? ((i.innerHTML = ''.concat(ae(h))), i.classList.add('ag-display-as-placeholder'))
              : de(i);
          }
        }),
        (t.prototype.getCurrentValueIndex = function () {
          var e = this,
            r = e.currentList,
            o = e.value;
          if (o == null || !r) return -1;
          for (var i = 0; i < r.length; i++) if (r[i] === o) return i;
          return -1;
        }),
        (t.prototype.highlightFilterMatch = function () {
          var e = this,
            r;
          (r = this.listComponent) === null ||
            r === void 0 ||
            r.forEachRenderedRow(function (o, i) {
              o.highlightString(e.searchString);
            });
        }),
        (t.prototype.highlightSelectedValue = function (e) {
          var r = this,
            o;
          e == null && (e = this.getCurrentValueIndex()),
            (this.highlightedItem = e),
            (o = this.listComponent) === null ||
              o === void 0 ||
              o.forEachRenderedRow(function (i, s) {
                var a = e === -1 ? !1 : r.highlightedItem === s;
                i.updateHighlighted(a);
              });
        }),
        (t.prototype.setRowHeight = function (e) {
          e !== this.cellRowHeight && (this.cellRowHeight = e),
            this.listComponent && this.listComponent.setRowHeight(e);
        }),
        (t.prototype.createPickerComponent = function () {
          var e = this.values;
          return e && this.setValueList({ valueList: e }), this.listComponent;
        }),
        (t.prototype.setSearchStringCreator = function (e) {
          this.searchStringCreator = e;
        }),
        (t.prototype.setValueList = function (e) {
          var r = e.valueList,
            o = e.refresh;
          this.listComponent &&
            this.currentList !== r &&
            ((this.currentList = r),
            this.listComponent.setModel({
              getRowCount: function () {
                return r.length;
              },
              getRow: function (i) {
                return r[i];
              },
              areRowsEqual: function (i, s) {
                return i === s;
              },
            }),
            o &&
              (this.values
                ? this.listComponent.refresh(!0)
                : ((this.values = r), this.isPickerDisplayed && this.showCurrentValueInPicker())));
        }),
        (t.prototype.showPicker = function () {
          n.prototype.showPicker.call(this),
            this.showCurrentValueInPicker(),
            this.displayOrHidePicker();
        }),
        (t.prototype.showCurrentValueInPicker = function () {
          var e, r;
          if (this.listComponent) {
            if (!this.currentList) {
              this.isPickerDisplayed &&
                this.eLoading &&
                this.listComponent.appendChild(this.eLoading);
              return;
            }
            !((e = this.eLoading) === null || e === void 0) &&
              e.offsetParent &&
              ((r = this.eLoading.parentElement) === null ||
                r === void 0 ||
                r.removeChild(this.eLoading));
            var o = this.getCurrentValueIndex();
            o !== -1
              ? (this.listComponent.refresh(),
                this.listComponent.ensureIndexVisible(o),
                this.listComponent.refresh(!0),
                this.highlightSelectedValue(o))
              : this.listComponent.refresh();
          }
        }),
        (t.prototype.beforeHidePicker = function () {
          (this.highlightedItem = -1), n.prototype.beforeHidePicker.call(this);
        }),
        (t.prototype.onWrapperFocus = function () {
          if (this.eInput) {
            var e = this.eInput.getFocusableElement();
            e.focus(), e.select();
          }
        }),
        (t.prototype.onWrapperFocusOut = function (e) {
          this.eWrapper.contains(e.relatedTarget) || this.hidePicker();
        }),
        (t.prototype.buildSearchStringFromKeyboardEvent = function (e) {
          var r = e.key;
          if (r === _.BACKSPACE) (this.searchString = this.searchString.slice(0, -1)), (r = '');
          else if (!Xo(e)) return;
          e.preventDefault(), this.searchTextFromCharacter(r);
        }),
        (t.prototype.searchTextFromCharacter = function (e) {
          (this.searchString += e), this.runSearch(), this.clearSearchString();
        }),
        (t.prototype.searchTextFromString = function (e) {
          e == null && (e = ''), (this.searchString = e), this.runSearch();
        }),
        (t.prototype.buildSearchStrings = function (e) {
          var r = this.config.valueFormatter,
            o =
              r === void 0
                ? function (s) {
                    return s;
                  }
                : r,
            i;
          return (
            typeof e[0] == 'number' || typeof e[0] == 'string'
              ? (i = e.map(function (s) {
                  return o(s);
                }))
              : typeof e[0] == 'object' &&
                this.searchStringCreator &&
                (i = this.searchStringCreator(e)),
            i
          );
        }),
        (t.prototype.getSuggestionsAndFilteredValues = function (e, r) {
          var o = this,
            i = [],
            s = [];
          if (!e.length) return { suggestions: i, filteredValues: s };
          var a = this.config,
            l = a.searchType,
            u = l === void 0 ? 'fuzzy' : l,
            c = a.filterList;
          if (u === 'fuzzy') {
            var p = ro(this.searchString, r, !0);
            i = p.values;
            var d = p.indices;
            if (c && d.length) for (var h = 0; h < d.length; h++) s.push(this.values[d[h]]);
          } else
            i = r.filter(function (f, y) {
              var m = f.toLocaleLowerCase(),
                C = o.searchString.toLocaleLowerCase(),
                w = u === 'match' ? m.startsWith(C) : m.indexOf(C) !== -1;
              return c && w && s.push(o.values[y]), w;
            });
          return { suggestions: i, filteredValues: s };
        }),
        (t.prototype.filterListModel = function (e) {
          var r = this.config.filterList;
          r && (this.setValueList({ valueList: e, refresh: !0 }), this.alignPickerToComponent());
        }),
        (t.prototype.runSearch = function () {
          var e,
            r,
            o = this.values,
            i = this.buildSearchStrings(o);
          if (!i) {
            this.highlightSelectedValue(-1);
            return;
          }
          var s = this.getSuggestionsAndFilteredValues(this.searchString, i),
            a = s.suggestions,
            l = s.filteredValues,
            u = this.config,
            c = u.filterList,
            p = u.highlightMatch,
            d = u.searchType,
            h = d === void 0 ? 'fuzzy' : d,
            f = l.length,
            y = !!(c && this.searchString !== '');
          if ((this.filterListModel(y ? l : o), a.length)) {
            var m = y ? 0 : i.indexOf(a[0]);
            this.selectListItem(m);
          } else if ((this.highlightSelectedValue(-1), !y || f))
            (e = this.listComponent) === null || e === void 0 || e.ensureIndexVisible(0);
          else if (y) {
            this.getAriaElement().removeAttribute('data-active-option');
            var C = (r = this.listComponent) === null || r === void 0 ? void 0 : r.getAriaElement();
            C && fn(C, null);
          }
          p && h !== 'fuzzy' && this.highlightFilterMatch(), this.displayOrHidePicker();
        }),
        (t.prototype.displayOrHidePicker = function () {
          var e,
            r = (e = this.listComponent) === null || e === void 0 ? void 0 : e.getGui(),
            o = this.currentList ? this.currentList.length === 0 : !1;
          r == null || r.classList.toggle('ag-hidden', o);
        }),
        (t.prototype.clearSearchString = function () {
          this.searchString = '';
        }),
        (t.prototype.selectListItem = function (e, r) {
          if (
            !(
              !this.isPickerDisplayed ||
              !this.currentList ||
              !this.listComponent ||
              e < 0 ||
              e >= this.currentList.length
            )
          ) {
            var o = this.listComponent.ensureIndexVisible(e, !r);
            o && !r && this.listComponent.refresh(!0), this.highlightSelectedValue(e);
          }
        }),
        (t.prototype.setValue = function (e, r, o) {
          var i = this.currentList ? this.currentList.indexOf(e) : -1;
          return i === -1
            ? this
            : ((this.value = e),
              o || this.selectListItem(i),
              this.renderSelectedValue(),
              n.prototype.setValue.call(this, e, r));
        }),
        (t.prototype.createRowComponent = function (e) {
          var r = new Gy(this.config, this.eWrapper);
          r.setParentComponent(this.listComponent), this.getContext().createBean(r), r.setState(e);
          var o = this.config,
            i = o.highlightMatch,
            s = o.searchType,
            a = s === void 0 ? 'fuzzy' : s;
          return i && a !== 'fuzzy' && r.highlightString(this.searchString), r;
        }),
        (t.prototype.getRowForMouseEvent = function (e) {
          var r = this.listComponent;
          if (!r) return -1;
          var o = r == null ? void 0 : r.getGui(),
            i = o.getBoundingClientRect(),
            s = r.getScrollTop(),
            a = e.clientY - i.top + s;
          return Math.floor(a / r.getRowHeight());
        }),
        (t.prototype.onPickerMouseMove = function (e) {
          if (this.listComponent) {
            var r = this.getRowForMouseEvent(e);
            r !== -1 &&
              r != this.lastRowHovered &&
              ((this.lastRowHovered = r), this.selectListItem(r, !0));
          }
        }),
        (t.prototype.onNavigationKeyDown = function (e, r) {
          e.preventDefault();
          var o = r === _.DOWN;
          if (!this.isPickerDisplayed && o) {
            this.showPicker();
            return;
          }
          var i = this.highlightedItem,
            s = o ? 1 : -1,
            a = i === -1 ? 0 : i + s;
          this.selectListItem(a);
        }),
        (t.prototype.onEnterKeyDown = function (e) {
          this.isPickerDisplayed &&
            (e.preventDefault(),
            this.currentList &&
              this.onListValueSelected(this.currentList[this.highlightedItem], !0));
        }),
        (t.prototype.onTabKeyDown = function () {
          !this.isPickerDisplayed ||
            !this.currentList ||
            this.setValue(this.currentList[this.highlightedItem], !1, !0);
        }),
        (t.prototype.onListValueSelected = function (e, r) {
          this.setValue(e, !1, !0), this.dispatchPickerEvent(e, r), this.hidePicker();
        }),
        (t.prototype.dispatchPickerEvent = function (e, r) {
          var o = { type: g.EVENT_FIELD_PICKER_VALUE_SELECTED, fromEnterKey: r, value: e };
          this.dispatchEvent(o);
        }),
        (t.prototype.getFocusableElement = function () {
          var e = this.config.allowTyping;
          return e ? this.eInput.getFocusableElement() : n.prototype.getFocusableElement.call(this);
        }),
        (t.prototype.onKeyDown = function (e) {
          var r = e.key,
            o = this.config.allowTyping;
          switch (r) {
            case _.LEFT:
            case _.RIGHT:
            case _.PAGE_HOME:
            case _.PAGE_END:
              o || e.preventDefault();
              break;
            case _.PAGE_UP:
            case _.PAGE_DOWN:
              e.preventDefault();
              break;
            case _.DOWN:
            case _.UP:
              this.onNavigationKeyDown(e, r);
              break;
            case _.ESCAPE:
              this.isPickerDisplayed &&
                (We(this.listComponent.getGui()) && (e.preventDefault(), it(e)), this.hidePicker());
              break;
            case _.ENTER:
              this.onEnterKeyDown(e);
              break;
            case _.TAB:
              this.onTabKeyDown();
              break;
            default:
              o || this.buildSearchStringFromKeyboardEvent(e);
          }
        }),
        (t.prototype.destroy = function () {
          this.listComponent &&
            (this.destroyBean(this.listComponent), (this.listComponent = void 0)),
            (this.eLoading = void 0),
            n.prototype.destroy.call(this);
        }),
        _u([v('userComponentFactory')], t.prototype, 'userComponentFactory', void 0),
        _u([L('eInput')], t.prototype, 'eInput', void 0),
        t
      );
    })(wl),
    Wy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    bi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    jy = (function (n) {
      Wy(t, n);
      function t(e) {
        var r = n.call(this, e, t.TEMPLATE) || this;
        return (r.labelAlignment = 'top'), r;
      }
      return (
        (t.prototype.init = function () {
          this.eSlider.addCssClass('ag-slider-field');
        }),
        (t.prototype.onValueChange = function (e) {
          var r = this,
            o = g.EVENT_FIELD_VALUE_CHANGED;
          return (
            this.addManagedListener(this.eText, o, function () {
              var i = parseFloat(r.eText.getValue());
              r.eSlider.setValue(i.toString(), !0), e(i || 0);
            }),
            this.addManagedListener(this.eSlider, o, function () {
              var i = r.eSlider.getValue();
              r.eText.setValue(i, !0), e(parseFloat(i));
            }),
            this
          );
        }),
        (t.prototype.setSliderWidth = function (e) {
          return this.eSlider.setWidth(e), this;
        }),
        (t.prototype.setTextFieldWidth = function (e) {
          return this.eText.setWidth(e), this;
        }),
        (t.prototype.setMinValue = function (e) {
          return this.eSlider.setMinValue(e), this.eText.setMin(e), this;
        }),
        (t.prototype.setMaxValue = function (e) {
          return this.eSlider.setMaxValue(e), this.eText.setMax(e), this;
        }),
        (t.prototype.getValue = function () {
          return this.eText.getValue();
        }),
        (t.prototype.setValue = function (e) {
          return this.getValue() === e
            ? this
            : (this.eText.setValue(e, !0),
              this.eSlider.setValue(e, !0),
              this.dispatchEvent({ type: g.EVENT_FIELD_VALUE_CHANGED }),
              this);
        }),
        (t.prototype.setStep = function (e) {
          return this.eSlider.setStep(e), this.eText.setStep(e), this;
        }),
        (t.TEMPLATE = `<div class="ag-slider">
            <label ref="eLabel"></label>
            <div class="ag-wrapper ag-slider-wrapper">
                <ag-input-range ref="eSlider"></ag-input-range>
                <ag-input-number-field ref="eText"></ag-input-number-field>
            </div>
        </div>`),
        bi([L('eLabel')], t.prototype, 'eLabel', void 0),
        bi([L('eSlider')], t.prototype, 'eSlider', void 0),
        bi([L('eText')], t.prototype, 'eText', void 0),
        bi([F], t.prototype, 'init', null),
        t
      );
    })(Cl),
    Uy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    zt = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    zy = (function (n) {
      Uy(t, n);
      function t(e) {
        e === void 0 && (e = {});
        var r = n.call(this, t.getTemplate(e)) || this;
        (r.suppressEnabledCheckbox = !0), (r.suppressOpenCloseIcons = !1);
        var o = e.title,
          i = e.enabled,
          s = e.items,
          a = e.suppressEnabledCheckbox,
          l = e.suppressOpenCloseIcons;
        return (
          (r.title = o),
          (r.cssIdentifier = e.cssIdentifier || 'default'),
          (r.enabled = i ?? !0),
          (r.items = s || []),
          (r.alignItems = e.alignItems || 'center'),
          a != null && (r.suppressEnabledCheckbox = a),
          l != null && (r.suppressOpenCloseIcons = l),
          r
        );
      }
      return (
        (t.getTemplate = function (e) {
          var r = e.cssIdentifier || 'default',
            o = e.direction || 'vertical';
          return '<div class="ag-group ag-'
            .concat(
              r,
              `-group" role="presentation">
            <div class="ag-group-title-bar ag-`
            )
            .concat(
              r,
              `-group-title-bar ag-unselectable" ref="eTitleBar" role="button">
                <span class="ag-group-title-bar-icon ag-`
            )
            .concat(
              r,
              `-group-title-bar-icon" ref="eGroupOpenedIcon" role="presentation"></span>
                <span class="ag-group-title-bar-icon ag-`
            )
            .concat(
              r,
              `-group-title-bar-icon" ref="eGroupClosedIcon" role="presentation"></span>
                <span ref="eTitle" class="ag-group-title ag-`
            )
            .concat(
              r,
              `-group-title"></span>
            </div>
            <div ref="eToolbar" class="ag-group-toolbar ag-`
            )
            .concat(
              r,
              `-group-toolbar">
                <ag-checkbox ref="cbGroupEnabled"></ag-checkbox>
            </div>
            <div ref="eContainer" class="ag-group-container ag-group-container-`
            )
            .concat(o, ' ag-')
            .concat(
              r,
              `-group-container"></div>
        </div>`
            );
        }),
        (t.prototype.postConstruct = function () {
          if (this.items.length) {
            var e = this.items;
            (this.items = []), this.addItems(e);
          }
          var r = this.localeService.getLocaleTextFunc();
          this.cbGroupEnabled.setLabel(r('enabled', 'Enabled')),
            this.title && this.setTitle(this.title),
            this.enabled && this.setEnabled(this.enabled),
            this.setAlignItems(this.alignItems),
            this.hideEnabledCheckbox(this.suppressEnabledCheckbox),
            this.hideOpenCloseIcons(this.suppressOpenCloseIcons),
            this.setupExpandContract(),
            this.refreshAriaStatus(),
            this.refreshChildDisplay();
        }),
        (t.prototype.setupExpandContract = function () {
          var e = this;
          this.eGroupClosedIcon.appendChild(
            Ze('columnSelectClosed', this.gridOptionsService, null)
          ),
            this.eGroupOpenedIcon.appendChild(
              Ze('columnSelectOpen', this.gridOptionsService, null)
            ),
            this.addManagedListener(this.eTitleBar, 'click', function () {
              return e.toggleGroupExpand();
            }),
            this.addManagedListener(this.eTitleBar, 'keydown', function (r) {
              switch (r.key) {
                case _.ENTER:
                case _.SPACE:
                  r.preventDefault(), e.toggleGroupExpand();
                  break;
                case _.RIGHT:
                case _.LEFT:
                  r.preventDefault(), e.toggleGroupExpand(r.key === _.RIGHT);
                  break;
              }
            });
        }),
        (t.prototype.refreshAriaStatus = function () {
          this.suppressOpenCloseIcons || Pt(this.eTitleBar, this.expanded);
        }),
        (t.prototype.refreshChildDisplay = function () {
          var e = !this.suppressOpenCloseIcons;
          $(this.eToolbar, this.expanded && !this.suppressEnabledCheckbox),
            $(this.eGroupOpenedIcon, e && this.expanded),
            $(this.eGroupClosedIcon, e && !this.expanded);
        }),
        (t.prototype.isExpanded = function () {
          return this.expanded;
        }),
        (t.prototype.setAlignItems = function (e) {
          this.alignItems !== e &&
            this.removeCssClass('ag-group-item-alignment-'.concat(this.alignItems)),
            (this.alignItems = e);
          var r = 'ag-group-item-alignment-'.concat(this.alignItems);
          return this.addCssClass(r), this;
        }),
        (t.prototype.toggleGroupExpand = function (e) {
          return this.suppressOpenCloseIcons
            ? ((this.expanded = !0), this.refreshChildDisplay(), $(this.eContainer, !0), this)
            : ((e = e ?? !this.expanded),
              this.expanded === e
                ? this
                : ((this.expanded = e),
                  this.refreshAriaStatus(),
                  this.refreshChildDisplay(),
                  $(this.eContainer, e),
                  this.dispatchEvent({
                    type: this.expanded ? t.EVENT_EXPANDED : t.EVENT_COLLAPSED,
                  }),
                  this));
        }),
        (t.prototype.addItems = function (e) {
          var r = this;
          e.forEach(function (o) {
            return r.addItem(o);
          });
        }),
        (t.prototype.prependItem = function (e) {
          this.insertItem(e, this.eContainer.firstChild);
        }),
        (t.prototype.addItem = function (e) {
          this.insertItem(e, null);
        }),
        (t.prototype.insertItem = function (e, r) {
          var o = this.eContainer,
            i = e instanceof k ? e.getGui() : e;
          i.classList.add('ag-group-item', 'ag-'.concat(this.cssIdentifier, '-group-item')),
            o.insertBefore(i, r),
            this.items.push(i);
        }),
        (t.prototype.hideItem = function (e, r) {
          var o = this.items[r];
          $(o, !e);
        }),
        (t.prototype.setTitle = function (e) {
          return (this.eTitle.innerText = e), this;
        }),
        (t.prototype.addCssClassToTitleBar = function (e) {
          this.eTitleBar.classList.add(e);
        }),
        (t.prototype.setEnabled = function (e, r) {
          return (
            (this.enabled = e),
            this.refreshDisabledStyles(),
            this.toggleGroupExpand(e),
            r || this.cbGroupEnabled.setValue(e),
            this
          );
        }),
        (t.prototype.isEnabled = function () {
          return this.enabled;
        }),
        (t.prototype.onEnableChange = function (e) {
          var r = this;
          return (
            this.cbGroupEnabled.onValueChange(function (o) {
              r.setEnabled(o, !0), e(o);
            }),
            this
          );
        }),
        (t.prototype.hideEnabledCheckbox = function (e) {
          return (
            (this.suppressEnabledCheckbox = e),
            this.refreshChildDisplay(),
            this.refreshDisabledStyles(),
            this
          );
        }),
        (t.prototype.hideOpenCloseIcons = function (e) {
          return (this.suppressOpenCloseIcons = e), e && this.toggleGroupExpand(!0), this;
        }),
        (t.prototype.refreshDisabledStyles = function () {
          this.addOrRemoveCssClass('ag-disabled', !this.enabled),
            this.suppressEnabledCheckbox && !this.enabled
              ? (this.eTitleBar.classList.add('ag-disabled-group-title-bar'),
                this.eTitleBar.removeAttribute('tabindex'))
              : (this.eTitleBar.classList.remove('ag-disabled-group-title-bar'),
                this.eTitleBar.setAttribute('tabindex', '0')),
            this.eContainer.classList.toggle('ag-disabled-group-container', !this.enabled);
        }),
        (t.EVENT_EXPANDED = 'expanded'),
        (t.EVENT_COLLAPSED = 'collapsed'),
        zt([L('eTitleBar')], t.prototype, 'eTitleBar', void 0),
        zt([L('eGroupOpenedIcon')], t.prototype, 'eGroupOpenedIcon', void 0),
        zt([L('eGroupClosedIcon')], t.prototype, 'eGroupClosedIcon', void 0),
        zt([L('eToolbar')], t.prototype, 'eToolbar', void 0),
        zt([L('cbGroupEnabled')], t.prototype, 'cbGroupEnabled', void 0),
        zt([L('eTitle')], t.prototype, 'eTitle', void 0),
        zt([L('eContainer')], t.prototype, 'eContainer', void 0),
        zt([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    Ky = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ru = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    $y = (function (n) {
      Ky(t, n);
      function t(e, r) {
        e === void 0 && (e = 0);
        var o = n.call(this, '<div class="ag-menu-list" role="tree"></div>') || this;
        return (
          (o.level = e),
          (o.menuItems = []),
          (o.params = r ?? { column: null, node: null, value: null }),
          o
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.initialiseTabGuard({
            onTabKeyDown: function (r) {
              return e.onTabKeyDown(r);
            },
            handleKeyDown: function (r) {
              return e.handleKeyDown(r);
            },
            onFocusIn: function (r) {
              return e.handleFocusIn(r);
            },
            onFocusOut: function (r) {
              return e.handleFocusOut(r);
            },
          });
        }),
        (t.prototype.onTabKeyDown = function (e) {
          var r = this.getParentComponent(),
            o = r && r.getGui(),
            i = o && o.classList.contains('ag-focus-managed');
          i || e.preventDefault(), e.shiftKey && this.closeIfIsChild(e);
        }),
        (t.prototype.handleKeyDown = function (e) {
          switch (e.key) {
            case _.UP:
            case _.RIGHT:
            case _.DOWN:
            case _.LEFT:
              e.preventDefault(), this.handleNavKey(e.key);
              break;
            case _.ESCAPE:
              this.closeIfIsChild() && it(e);
              break;
          }
        }),
        (t.prototype.handleFocusIn = function (e) {
          var r,
            o,
            i = e.relatedTarget;
          (!this.tabGuardCtrl.isTabGuard(i) &&
            (this.getGui().contains(i) ||
              (!(
                (o =
                  (r = this.activeMenuItem) === null || r === void 0
                    ? void 0
                    : r.getSubMenuGui()) === null || o === void 0
              ) &&
                o.contains(i)))) ||
            (this.activeMenuItem ? this.activeMenuItem.activate() : this.activateFirstItem());
        }),
        (t.prototype.handleFocusOut = function (e) {
          var r,
            o = e.relatedTarget;
          !this.activeMenuItem ||
            this.getGui().contains(o) ||
            (!((r = this.activeMenuItem.getSubMenuGui()) === null || r === void 0) &&
              r.contains(o)) ||
            this.activeMenuItem.isSubMenuOpening() ||
            this.activeMenuItem.deactivate();
        }),
        (t.prototype.clearActiveItem = function () {
          this.activeMenuItem && (this.activeMenuItem.deactivate(), (this.activeMenuItem = null));
        }),
        (t.prototype.addMenuItems = function (e) {
          var r = this;
          e != null &&
            je
              .all(
                e.map(function (o) {
                  return o === 'separator'
                    ? je.resolve({ eGui: r.createSeparator() })
                    : typeof o == 'string'
                    ? (console.warn('AG Grid: unrecognised menu item '.concat(o)),
                      je.resolve({ eGui: null }))
                    : r.addItem(o);
                })
              )
              .then(function (o) {
                o.forEach(function (i) {
                  i != null &&
                    i.eGui &&
                    (r.appendChild(i.eGui), i.comp && r.menuItems.push(i.comp));
                });
              });
        }),
        (t.prototype.addItem = function (e) {
          var r = this,
            o = this.createManagedBean(new Fi());
          return o
            .init({
              menuItemDef: e,
              isAnotherSubMenuOpen: function () {
                return r.menuItems.some(function (i) {
                  return i.isSubMenuOpen();
                });
              },
              level: this.level,
              contextParams: this.params,
            })
            .then(function () {
              return (
                o.setParentComponent(r),
                r.addManagedListener(o, Fi.EVENT_CLOSE_MENU, function (i) {
                  r.dispatchEvent(i);
                }),
                r.addManagedListener(o, Fi.EVENT_MENU_ITEM_ACTIVATED, function (i) {
                  r.activeMenuItem &&
                    r.activeMenuItem !== i.menuItem &&
                    r.activeMenuItem.deactivate(),
                    (r.activeMenuItem = i.menuItem);
                }),
                { comp: o, eGui: o.getGui() }
              );
            });
        }),
        (t.prototype.activateFirstItem = function () {
          var e = this.menuItems.filter(function (r) {
            return !r.isDisabled();
          })[0];
          e && e.activate();
        }),
        (t.prototype.createSeparator = function () {
          var e = `
            <div class="ag-menu-separator" aria-hidden="true">
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
            </div>`;
          return Re(e);
        }),
        (t.prototype.handleNavKey = function (e) {
          switch (e) {
            case _.UP:
            case _.DOWN:
              var r = this.findNextItem(e === _.UP);
              r && r !== this.activeMenuItem && r.activate();
              return;
          }
          var o = this.gridOptionsService.get('enableRtl') ? _.RIGHT : _.LEFT;
          e === o ? this.closeIfIsChild() : this.openChild();
        }),
        (t.prototype.closeIfIsChild = function (e) {
          var r = this.getParentComponent();
          return r && r instanceof Fi
            ? (e && e.preventDefault(), r.closeSubMenu(), r.getGui().focus(), !0)
            : !1;
        }),
        (t.prototype.openChild = function () {
          this.activeMenuItem && this.activeMenuItem.openSubMenu(!0);
        }),
        (t.prototype.findNextItem = function (e) {
          var r = this.menuItems.filter(function (l) {
            return !l.isDisabled();
          });
          if (r.length) {
            if (!this.activeMenuItem) return e ? q(r) : r[0];
            e && r.reverse();
            for (var o, i = !1, s = 0; s < r.length; s++) {
              var a = r[s];
              if (!i) {
                a === this.activeMenuItem && (i = !0);
                continue;
              }
              o = a;
              break;
            }
            return i && !o ? r[0] : o || this.activeMenuItem;
          }
        }),
        (t.prototype.destroy = function () {
          this.clearActiveItem(), n.prototype.destroy.call(this);
        }),
        Ru([v('focusService')], t.prototype, 'focusService', void 0),
        Ru([F], t.prototype, 'postConstruct', null),
        t
      );
    })(yo),
    Yy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    qy = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Qy = (function (n) {
      Yy(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.wrappedComponent = e), r.setTemplateFromElement(e.getGui()), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.initialiseTabGuard({
            onTabKeyDown: function (r) {
              return e.onTabKeyDown(r);
            },
            handleKeyDown: function (r) {
              return e.handleKeyDown(r);
            },
          });
        }),
        (t.prototype.handleKeyDown = function (e) {
          e.key === _.ESCAPE && this.closePanel();
        }),
        (t.prototype.onTabKeyDown = function (e) {
          e.defaultPrevented || (this.closePanel(), e.preventDefault());
        }),
        (t.prototype.closePanel = function () {
          var e = this.parentComponent;
          e.closeSubMenu(),
            setTimeout(function () {
              return e.getGui().focus();
            }, 0);
        }),
        qy([F], t.prototype, 'postConstruct', null),
        t
      );
    })(yo),
    Xy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Co = function () {
      return (
        (Co =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Co.apply(this, arguments)
      );
    },
    xs = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Fi = (function (n) {
      Xy(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.isActive = !1),
          (e.subMenuIsOpen = !1),
          (e.subMenuIsOpening = !1),
          (e.suppressRootStyles = !0),
          (e.suppressAria = !0),
          (e.suppressFocus = !0),
          e
        );
      }
      return (
        (t.prototype.init = function (e) {
          var r = this,
            o,
            i,
            s = e.menuItemDef,
            a = e.isAnotherSubMenuOpen,
            l = e.level,
            u = e.childComponent,
            c = e.contextParams;
          (this.params = e.menuItemDef),
            (this.level = l),
            (this.isAnotherSubMenuOpen = a),
            (this.childComponent = u),
            (this.contextParams = c),
            (this.cssClassPrefix =
              (i =
                (o = this.params.menuItemParams) === null || o === void 0
                  ? void 0
                  : o.cssClassPrefix) !== null && i !== void 0
                ? i
                : 'ag-menu-option');
          var p = this.userComponentFactory.getMenuItemCompDetails(
            this.params,
            Co(Co({}, s), {
              level: l,
              isAnotherSubMenuOpen: a,
              openSubMenu: function (d) {
                return r.openSubMenu(d);
              },
              closeSubMenu: function () {
                return r.closeSubMenu();
              },
              closeMenu: function (d) {
                return r.closeMenu(d);
              },
              updateTooltip: function (d) {
                return r.updateTooltip(d);
              },
              onItemActivated: function () {
                return r.onItemActivated();
              },
            })
          );
          return p.newAgStackInstance().then(function (d) {
            var h;
            r.menuItemComp = d;
            var f = (h = d.configureDefaults) === null || h === void 0 ? void 0 : h.call(d);
            f && r.configureDefaults(f === !0 ? void 0 : f);
          });
        }),
        (t.prototype.addListeners = function (e, r) {
          var o = this;
          (r != null && r.suppressClick) ||
            this.addManagedListener(e, 'click', function (i) {
              return o.onItemSelected(i);
            }),
            (r != null && r.suppressKeyboardSelect) ||
              this.addManagedListener(e, 'keydown', function (i) {
                (i.key === _.ENTER || i.key === _.SPACE) &&
                  (i.preventDefault(), o.onItemSelected(i));
              }),
            (r != null && r.suppressMouseDown) ||
              this.addManagedListener(e, 'mousedown', function (i) {
                i.stopPropagation(), i.preventDefault();
              }),
            (r != null && r.suppressMouseOver) ||
              (this.addManagedListener(e, 'mouseenter', function () {
                return o.onMouseEnter();
              }),
              this.addManagedListener(e, 'mouseleave', function () {
                return o.onMouseLeave();
              }));
        }),
        (t.prototype.isDisabled = function () {
          return !!this.params.disabled;
        }),
        (t.prototype.openSubMenu = function (e) {
          var r = this,
            o,
            i;
          if ((e === void 0 && (e = !1), this.closeSubMenu(), !!this.params.subMenu)) {
            this.subMenuIsOpening = !0;
            var s = Re('<div class="ag-menu" role="presentation"></div>');
            this.eSubMenuGui = s;
            var a,
              l = function () {
                r.subMenuIsOpening = !1;
              };
            if (this.childComponent) {
              var u = this.createBean(new Qy(this.childComponent));
              u.setParentComponent(this);
              var c = u.getGui(),
                p = 'mouseenter',
                d = function () {
                  return r.cancelDeactivate();
                };
              c.addEventListener(p, d),
                (a = function () {
                  return c.removeEventListener(p, d);
                }),
                s.appendChild(c),
                this.childComponent.afterGuiAttached &&
                  (l = function () {
                    r.childComponent.afterGuiAttached(), (r.subMenuIsOpening = !1);
                  });
            } else if (this.params.subMenu) {
              var h = this.createBean(new $y(this.level + 1, this.contextParams));
              h.setParentComponent(this),
                h.addMenuItems(this.params.subMenu),
                s.appendChild(h.getGui()),
                this.addManagedListener(h, t.EVENT_CLOSE_MENU, function (C) {
                  return r.dispatchEvent(C);
                }),
                h.addGuiEventListener('mouseenter', function () {
                  return r.cancelDeactivate();
                }),
                (a = function () {
                  return r.destroyBean(h);
                }),
                e &&
                  (l = function () {
                    h.activateFirstItem(), (r.subMenuIsOpening = !1);
                  });
            }
            var f = this.popupService.positionPopupForMenu.bind(this.popupService, {
                eventSource: this.eGui,
                ePopup: s,
              }),
              y = this.localeService.getLocaleTextFunc(),
              m = this.popupService.addPopup({
                modal: !0,
                eChild: s,
                positionCallback: f,
                anchorToElement: this.eGui,
                ariaLabel: y('ariaLabelSubMenu', 'SubMenu'),
                afterGuiAttached: l,
              });
            (this.subMenuIsOpen = !0),
              this.setAriaExpanded(!0),
              (this.hideSubMenu = function () {
                var C, w;
                m && m.hideFunc(),
                  (r.subMenuIsOpen = !1),
                  r.setAriaExpanded(!1),
                  a(),
                  (w = (C = r.menuItemComp).setExpanded) === null || w === void 0 || w.call(C, !1),
                  (r.eSubMenuGui = void 0);
              }),
              (i = (o = this.menuItemComp).setExpanded) === null || i === void 0 || i.call(o, !0);
          }
        }),
        (t.prototype.setAriaExpanded = function (e) {
          this.suppressAria || Pt(this.eGui, e);
        }),
        (t.prototype.closeSubMenu = function () {
          this.hideSubMenu &&
            (this.hideSubMenu(), (this.hideSubMenu = null), this.setAriaExpanded(!1));
        }),
        (t.prototype.isSubMenuOpen = function () {
          return this.subMenuIsOpen;
        }),
        (t.prototype.isSubMenuOpening = function () {
          return this.subMenuIsOpening;
        }),
        (t.prototype.activate = function (e) {
          var r = this,
            o,
            i;
          this.cancelActivate(),
            !this.params.disabled &&
              ((this.isActive = !0),
              this.suppressRootStyles ||
                this.eGui.classList.add(''.concat(this.cssClassPrefix, '-active')),
              (i = (o = this.menuItemComp).setActive) === null || i === void 0 || i.call(o, !0),
              this.suppressFocus || this.eGui.focus({ preventScroll: !0 }),
              e &&
                this.params.subMenu &&
                window.setTimeout(function () {
                  r.isAlive() && r.isActive && r.openSubMenu();
                }, 300),
              this.onItemActivated());
        }),
        (t.prototype.deactivate = function () {
          var e, r;
          this.cancelDeactivate(),
            this.suppressRootStyles ||
              this.eGui.classList.remove(''.concat(this.cssClassPrefix, '-active')),
            (r = (e = this.menuItemComp).setActive) === null || r === void 0 || r.call(e, !1),
            (this.isActive = !1),
            this.subMenuIsOpen && this.hideSubMenu();
        }),
        (t.prototype.getGui = function () {
          return this.menuItemComp.getGui();
        }),
        (t.prototype.getParentComponent = function () {
          return this.parentComponent;
        }),
        (t.prototype.setParentComponent = function (e) {
          this.parentComponent = e;
        }),
        (t.prototype.getSubMenuGui = function () {
          return this.eSubMenuGui;
        }),
        (t.prototype.onItemSelected = function (e) {
          var r = this,
            o,
            i;
          (i = (o = this.menuItemComp).select) === null || i === void 0 || i.call(o),
            this.params.action
              ? this.getFrameworkOverrides().wrapOutgoing(function () {
                  return r.params.action(
                    r.gridOptionsService.addGridCommonParams(Co({}, r.contextParams))
                  );
                })
              : this.openSubMenu(e && e.type === 'keydown'),
            !((this.params.subMenu && !this.params.action) || this.params.suppressCloseOnSelect) &&
              this.closeMenu(e);
        }),
        (t.prototype.closeMenu = function (e) {
          var r = { type: t.EVENT_CLOSE_MENU, event: e };
          this.dispatchEvent(r);
        }),
        (t.prototype.onItemActivated = function () {
          var e = { type: t.EVENT_MENU_ITEM_ACTIVATED, menuItem: this };
          this.dispatchEvent(e);
        }),
        (t.prototype.cancelActivate = function () {
          this.activateTimeoutId &&
            (window.clearTimeout(this.activateTimeoutId), (this.activateTimeoutId = 0));
        }),
        (t.prototype.cancelDeactivate = function () {
          this.deactivateTimeoutId &&
            (window.clearTimeout(this.deactivateTimeoutId), (this.deactivateTimeoutId = 0));
        }),
        (t.prototype.onMouseEnter = function () {
          var e = this;
          this.cancelDeactivate(),
            this.isAnotherSubMenuOpen()
              ? (this.activateTimeoutId = window.setTimeout(function () {
                  return e.activate(!0);
                }, t.ACTIVATION_DELAY))
              : this.activate(!0);
        }),
        (t.prototype.onMouseLeave = function () {
          var e = this;
          this.cancelActivate(),
            this.isSubMenuOpen()
              ? (this.deactivateTimeoutId = window.setTimeout(function () {
                  return e.deactivate();
                }, t.ACTIVATION_DELAY))
              : this.deactivate();
        }),
        (t.prototype.configureDefaults = function (e) {
          var r = this,
            o,
            i,
            s;
          if (((this.tooltip = this.params.tooltip), !this.menuItemComp)) {
            setTimeout(function () {
              return r.configureDefaults(e);
            });
            return;
          }
          var a = this.menuItemComp.getGui(),
            l =
              (i = (o = this.menuItemComp).getRootElement) === null || i === void 0
                ? void 0
                : i.call(o);
          l &&
            ((e != null && e.suppressRootStyles) || a.classList.add('ag-menu-option-custom'),
            (a = l)),
            (this.eGui = a),
            (this.suppressRootStyles = !!(e != null && e.suppressRootStyles)),
            this.suppressRootStyles ||
              (a.classList.add(this.cssClassPrefix),
              (s = this.params.cssClasses) === null ||
                s === void 0 ||
                s.forEach(function (u) {
                  return a.classList.add(u);
                }),
              this.params.disabled && a.classList.add(''.concat(this.cssClassPrefix, '-disabled'))),
            (e != null && e.suppressTooltip) || this.setTooltip(),
            (this.suppressAria = !!(e != null && e.suppressAria)),
            this.suppressAria ||
              (le(a, 'treeitem'), Ha(a, this.level + 1), this.params.disabled && hn(a, !0)),
            (e != null && e.suppressTabIndex) || a.setAttribute('tabindex', '-1'),
            this.params.disabled || this.addListeners(a, e),
            (this.suppressFocus = !!(e != null && e.suppressFocus));
        }),
        (t.prototype.updateTooltip = function (e) {
          (this.tooltip = e), !this.tooltipFeature && this.menuItemComp && this.setTooltip();
        }),
        (t.prototype.setTooltip = function () {
          var e = this;
          this.tooltip &&
            ((this.tooltipFeature = this.createManagedBean(
              new di(
                {
                  getGui: function () {
                    return e.getGui();
                  },
                  getTooltipValue: function () {
                    return e.tooltip;
                  },
                  getLocation: function () {
                    return 'menu';
                  },
                },
                this.beans
              )
            )),
            this.tooltipFeature.setComp(this.getGui()));
        }),
        (t.EVENT_CLOSE_MENU = 'closeMenu'),
        (t.EVENT_MENU_ITEM_ACTIVATED = 'menuItemActivated'),
        (t.ACTIVATION_DELAY = 80),
        xs([v('popupService')], t.prototype, 'popupService', void 0),
        xs([v('userComponentFactory')], t.prototype, 'userComponentFactory', void 0),
        xs([v('beans')], t.prototype, 'beans', void 0),
        t
      );
    })(D),
    Jy = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    So = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Zy = (function (n) {
      Jy(t, n);
      function t(e) {
        var r = n.call(this, t.getTemplate(e)) || this;
        return (r.config = e), (r.closable = !0), r;
      }
      return (
        (t.getTemplate = function (e) {
          var r = e.cssIdentifier || 'default';
          return '<div class="ag-panel ag-'
            .concat(
              r,
              `-panel" tabindex="-1">
            <div ref="eTitleBar" class="ag-panel-title-bar ag-`
            )
            .concat(
              r,
              `-panel-title-bar ag-unselectable">
                <span ref="eTitle" class="ag-panel-title-bar-title ag-`
            )
            .concat(
              r,
              `-panel-title-bar-title"></span>
                <div ref="eTitleBarButtons" class="ag-panel-title-bar-buttons ag-`
            )
            .concat(
              r,
              `-panel-title-bar-buttons"></div>
            </div>
            <div ref="eContentWrapper" class="ag-panel-content-wrapper ag-`
            )
            .concat(
              r,
              `-panel-content-wrapper"></div>
        </div>`
            );
        }),
        (t.prototype.postConstruct = function () {
          var e = this,
            r = this.config,
            o = r.component,
            i = r.closable,
            s = r.hideTitleBar,
            a = r.title,
            l = r.minWidth,
            u = l === void 0 ? 250 : l,
            c = r.width,
            p = r.minHeight,
            d = p === void 0 ? 250 : p,
            h = r.height,
            f = r.centered,
            y = r.popup,
            m = r.x,
            C = r.y;
          (this.positionableFeature = new ml(this.getGui(), {
            minWidth: u,
            width: c,
            minHeight: d,
            height: h,
            centered: f,
            x: m,
            y: C,
            popup: y,
            calculateTopBuffer: function () {
              return e.positionableFeature.getHeight() - e.getBodyHeight();
            },
          })),
            this.createManagedBean(this.positionableFeature);
          var w = this.getGui();
          o && this.setBodyComponent(o),
            s
              ? $(this.eTitleBar, !1)
              : (a && this.setTitle(a), this.setClosable(i ?? this.closable)),
            this.addManagedListener(this.eTitleBar, 'mousedown', function (E) {
              var S = e.gridOptionsService.getDocument();
              if (
                w.contains(E.relatedTarget) ||
                w.contains(S.activeElement) ||
                e.eTitleBarButtons.contains(E.target)
              ) {
                E.preventDefault();
                return;
              }
              var R = e.eContentWrapper.querySelector(
                'button, [href], input, select, textarea, [tabindex]'
              );
              R && R.focus();
            }),
            !(y && this.positionableFeature.isPositioned()) &&
              (this.renderComponent && this.renderComponent(),
              this.positionableFeature.initialisePosition(),
              (this.eContentWrapper.style.height = '0'));
        }),
        (t.prototype.renderComponent = function () {
          var e = this,
            r = this.getGui();
          r.focus(),
            (this.close = function () {
              r.parentElement.removeChild(r), e.destroy();
            });
        }),
        (t.prototype.getHeight = function () {
          return this.positionableFeature.getHeight();
        }),
        (t.prototype.setHeight = function (e) {
          this.positionableFeature.setHeight(e);
        }),
        (t.prototype.getWidth = function () {
          return this.positionableFeature.getWidth();
        }),
        (t.prototype.setWidth = function (e) {
          this.positionableFeature.setWidth(e);
        }),
        (t.prototype.setClosable = function (e) {
          if ((e !== this.closable && (this.closable = e), e)) {
            var r = (this.closeButtonComp = new k(t.CLOSE_BTN_TEMPLATE));
            this.getContext().createBean(r);
            var o = r.getGui(),
              i = ne('close', this.gridOptionsService);
            i.classList.add('ag-panel-title-bar-button-icon'),
              o.appendChild(i),
              this.addTitleBarButton(r),
              r.addManagedListener(o, 'click', this.onBtClose.bind(this));
          } else if (this.closeButtonComp) {
            var o = this.closeButtonComp.getGui();
            o.parentElement.removeChild(o),
              (this.closeButtonComp = this.destroyBean(this.closeButtonComp));
          }
        }),
        (t.prototype.setBodyComponent = function (e) {
          e.setParentComponent(this), this.eContentWrapper.appendChild(e.getGui());
        }),
        (t.prototype.addTitleBarButton = function (e, r) {
          var o = this.eTitleBarButtons,
            i = o.children,
            s = i.length;
          r == null && (r = s),
            (r = Math.max(0, Math.min(r, s))),
            e.addCssClass('ag-panel-title-bar-button');
          var a = e.getGui();
          r === 0
            ? o.insertAdjacentElement('afterbegin', a)
            : r === s
            ? o.insertAdjacentElement('beforeend', a)
            : i[r - 1].insertAdjacentElement('afterend', a),
            e.setParentComponent(this);
        }),
        (t.prototype.getBodyHeight = function () {
          return qr(this.eContentWrapper);
        }),
        (t.prototype.getBodyWidth = function () {
          return ir(this.eContentWrapper);
        }),
        (t.prototype.setTitle = function (e) {
          this.eTitle.innerText = e;
        }),
        (t.prototype.onBtClose = function () {
          this.close();
        }),
        (t.prototype.destroy = function () {
          this.closeButtonComp && (this.closeButtonComp = this.destroyBean(this.closeButtonComp));
          var e = this.getGui();
          e && We(e) && this.close(), n.prototype.destroy.call(this);
        }),
        (t.CLOSE_BTN_TEMPLATE = '<div class="ag-button"></div>'),
        So([L('eContentWrapper')], t.prototype, 'eContentWrapper', void 0),
        So([L('eTitleBar')], t.prototype, 'eTitleBar', void 0),
        So([L('eTitleBarButtons')], t.prototype, 'eTitleBarButtons', void 0),
        So([L('eTitle')], t.prototype, 'eTitle', void 0),
        So([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    em = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Li = function () {
      return (
        (Li =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Li.apply(this, arguments)
      );
    },
    tm = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    };
  (function (n) {
    em(t, n);
    function t(e) {
      var r = n.call(this, Li(Li({}, e), { popup: !0 })) || this;
      return (
        (r.isMaximizable = !1),
        (r.isMaximized = !1),
        (r.maximizeListeners = []),
        (r.resizeListenerDestroy = null),
        (r.lastPosition = { x: 0, y: 0, width: 0, height: 0 }),
        r
      );
    }
    return (
      (t.prototype.postConstruct = function () {
        var e = this,
          r = this.getGui(),
          o = this.config,
          i = o.movable,
          s = o.resizable,
          a = o.maximizable;
        this.addCssClass('ag-dialog'),
          n.prototype.postConstruct.call(this),
          this.addManagedListener(r, 'focusin', function (l) {
            r.contains(l.relatedTarget) || e.popupService.bringPopupToFront(r);
          }),
          i && this.setMovable(i),
          a && this.setMaximizable(a),
          s && this.setResizable(s);
      }),
      (t.prototype.renderComponent = function () {
        var e = this.getGui(),
          r = this.config,
          o = r.alwaysOnTop,
          i = r.modal,
          s = r.title,
          a = r.afterGuiAttached,
          l = this.localeService.getLocaleTextFunc(),
          u = this.popupService.addPopup({
            modal: i,
            eChild: e,
            closeOnEsc: !0,
            closedCallback: this.onClosed.bind(this),
            alwaysOnTop: o,
            ariaLabel: s || l('ariaLabelDialog', 'Dialog'),
            afterGuiAttached: a,
          });
        u && (this.close = u.hideFunc);
      }),
      (t.prototype.onClosed = function (e) {
        var r, o;
        this.destroy(),
          (o = (r = this.config).closedCallback) === null || o === void 0 || o.call(r, e);
      }),
      (t.prototype.toggleMaximize = function () {
        var e = this.positionableFeature.getPosition();
        if (this.isMaximized) {
          var r = this.lastPosition,
            o = r.x,
            i = r.y,
            s = r.width,
            a = r.height;
          this.setWidth(s), this.setHeight(a), this.positionableFeature.offsetElement(o, i);
        } else
          (this.lastPosition.width = this.getWidth()),
            (this.lastPosition.height = this.getHeight()),
            (this.lastPosition.x = e.x),
            (this.lastPosition.y = e.y),
            this.positionableFeature.offsetElement(0, 0),
            this.setHeight('100%'),
            this.setWidth('100%');
        (this.isMaximized = !this.isMaximized), this.refreshMaximizeIcon();
      }),
      (t.prototype.refreshMaximizeIcon = function () {
        $(this.maximizeIcon, !this.isMaximized), $(this.minimizeIcon, this.isMaximized);
      }),
      (t.prototype.clearMaximizebleListeners = function () {
        this.maximizeListeners.length &&
          (this.maximizeListeners.forEach(function (e) {
            return e();
          }),
          (this.maximizeListeners.length = 0)),
          this.resizeListenerDestroy &&
            (this.resizeListenerDestroy(), (this.resizeListenerDestroy = null));
      }),
      (t.prototype.destroy = function () {
        (this.maximizeButtonComp = this.destroyBean(this.maximizeButtonComp)),
          this.clearMaximizebleListeners(),
          n.prototype.destroy.call(this);
      }),
      (t.prototype.setResizable = function (e) {
        this.positionableFeature.setResizable(e);
      }),
      (t.prototype.setMovable = function (e) {
        this.positionableFeature.setMovable(e, this.eTitleBar);
      }),
      (t.prototype.setMaximizable = function (e) {
        var r = this;
        if (!e) {
          this.clearMaximizebleListeners(),
            this.maximizeButtonComp &&
              (this.destroyBean(this.maximizeButtonComp),
              (this.maximizeButtonComp = this.maximizeIcon = this.minimizeIcon = void 0));
          return;
        }
        var o = this.eTitleBar;
        if (!(!o || e === this.isMaximizable)) {
          var i = this.buildMaximizeAndMinimizeElements();
          this.refreshMaximizeIcon(),
            i.addManagedListener(i.getGui(), 'click', this.toggleMaximize.bind(this)),
            this.addTitleBarButton(i, 0),
            this.maximizeListeners.push(
              this.addManagedListener(o, 'dblclick', this.toggleMaximize.bind(this))
            ),
            (this.resizeListenerDestroy = this.addManagedListener(this, 'resize', function () {
              (r.isMaximized = !1), r.refreshMaximizeIcon();
            }));
        }
      }),
      (t.prototype.buildMaximizeAndMinimizeElements = function () {
        var e = (this.maximizeButtonComp = this.createBean(
            new k('<div class="ag-dialog-button"></span>')
          )),
          r = e.getGui();
        return (
          (this.maximizeIcon = ne('maximize', this.gridOptionsService)),
          r.appendChild(this.maximizeIcon),
          this.maximizeIcon.classList.add('ag-panel-title-bar-button-icon'),
          (this.minimizeIcon = ne('minimize', this.gridOptionsService)),
          r.appendChild(this.minimizeIcon),
          this.minimizeIcon.classList.add('ag-panel-title-bar-button-icon'),
          e
        );
      }),
      tm([v('popupService')], t.prototype, 'popupService', void 0),
      t
    );
  })(Zy);
  var rm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Mi = function () {
      return (
        (Mi =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Mi.apply(this, arguments)
      );
    },
    wo = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Ou = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Tu = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    Pu = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    },
    Kt;
  (function (n) {
    (n[(n.vertical = 0)] = 'vertical'), (n[(n.horizontal = 1)] = 'horizontal');
  })(Kt || (Kt = {}));
  var om = 0,
    im = (function (n) {
      rm(t, n);
      function t() {
        var r = (n !== null && n.apply(this, arguments)) || this;
        return (r.popupList = []), r;
      }
      (e = t),
        (t.prototype.postConstruct = function () {
          var r = this;
          this.ctrlsService.whenReady(function (o) {
            r.gridCtrl = o.gridCtrl;
          }),
            this.addManagedListener(
              this.eventService,
              g.EVENT_GRID_STYLES_CHANGED,
              this.handleThemeChange.bind(this)
            );
        }),
        (t.prototype.getPopupParent = function () {
          var r = this.gridOptionsService.get('popupParent');
          return r || this.gridCtrl.getGui();
        }),
        (t.prototype.positionPopupForMenu = function (r) {
          var o = r.eventSource,
            i = r.ePopup,
            s = this.getPopupIndex(i);
          if (s !== -1) {
            var a = this.popupList[s];
            a.alignedToElement = o;
          }
          var l = o.getBoundingClientRect(),
            u = this.getParentRect(),
            c = this.keepXYWithinBounds(i, l.top - u.top, Kt.vertical),
            p = i.clientWidth > 0 ? i.clientWidth : 200;
          i.style.minWidth = ''.concat(p, 'px');
          var d = u.right - u.left,
            h = d - p,
            f;
          this.gridOptionsService.get('enableRtl')
            ? ((f = m()),
              f < 0 && ((f = y()), this.setAlignedStyles(i, 'left')),
              f > h && ((f = 0), this.setAlignedStyles(i, 'right')))
            : ((f = y()),
              f > h && ((f = m()), this.setAlignedStyles(i, 'right')),
              f < 0 && ((f = 0), this.setAlignedStyles(i, 'left'))),
            (i.style.left = ''.concat(f, 'px')),
            (i.style.top = ''.concat(c, 'px'));
          function y() {
            return l.right - u.left - 2;
          }
          function m() {
            return l.left - u.left - p;
          }
        }),
        (t.prototype.positionPopupUnderMouseEvent = function (r) {
          var o = this,
            i = r.ePopup,
            s = r.nudgeX,
            a = r.nudgeY,
            l = r.skipObserver;
          this.positionPopup({
            ePopup: i,
            nudgeX: s,
            nudgeY: a,
            keepWithinBounds: !0,
            skipObserver: l,
            updatePosition: function () {
              return o.calculatePointerAlign(r.mouseEvent);
            },
            postProcessCallback: function () {
              return o.callPostProcessPopup(
                r.type,
                r.ePopup,
                null,
                r.mouseEvent,
                r.column,
                r.rowNode
              );
            },
          });
        }),
        (t.prototype.calculatePointerAlign = function (r) {
          var o = this.getParentRect();
          return { x: r.clientX - o.left, y: r.clientY - o.top };
        }),
        (t.prototype.positionPopupByComponent = function (r) {
          var o = this,
            i = r.ePopup,
            s = r.nudgeX,
            a = r.nudgeY,
            l = r.keepWithinBounds,
            u = r.eventSource,
            c = r.alignSide,
            p = c === void 0 ? 'left' : c,
            d = r.position,
            h = d === void 0 ? 'over' : d,
            f = r.column,
            y = r.rowNode,
            m = r.type,
            C = u.getBoundingClientRect(),
            w = this.getParentRect(),
            E = this.getPopupIndex(i);
          if (E !== -1) {
            var S = this.popupList[E];
            S.alignedToElement = u;
          }
          var R = function () {
            var O = C.left - w.left;
            p === 'right' && (O -= i.offsetWidth - C.width);
            var b;
            if (h === 'over') (b = C.top - w.top), o.setAlignedStyles(i, 'over');
            else {
              o.setAlignedStyles(i, 'under');
              var A = o.shouldRenderUnderOrAbove(i, C, w, r.nudgeY || 0);
              A === 'under'
                ? (b = C.top - w.top + C.height)
                : (b = C.top - i.offsetHeight - (a || 0) * 2 - w.top);
            }
            return { x: O, y: b };
          };
          this.positionPopup({
            ePopup: i,
            nudgeX: s,
            nudgeY: a,
            keepWithinBounds: l,
            updatePosition: R,
            postProcessCallback: function () {
              return o.callPostProcessPopup(m, i, u, null, f, y);
            },
          });
        }),
        (t.prototype.shouldRenderUnderOrAbove = function (r, o, i, s) {
          var a = i.bottom - o.bottom,
            l = o.top - i.top,
            u = r.offsetHeight + s;
          return a > u ? 'under' : l > u || l > a ? 'above' : 'under';
        }),
        (t.prototype.setAlignedStyles = function (r, o) {
          var i = this.getPopupIndex(r);
          if (i !== -1) {
            var s = this.popupList[i],
              a = s.alignedToElement;
            if (a) {
              var l = ['right', 'left', 'over', 'above', 'under'];
              l.forEach(function (u) {
                a.classList.remove('ag-has-popup-positioned-'.concat(u)),
                  r.classList.remove('ag-popup-positioned-'.concat(u));
              }),
                o &&
                  (a.classList.add('ag-has-popup-positioned-'.concat(o)),
                  r.classList.add('ag-popup-positioned-'.concat(o)));
            }
          }
        }),
        (t.prototype.callPostProcessPopup = function (r, o, i, s, a, l) {
          var u = this.gridOptionsService.getCallback('postProcessPopup');
          if (u) {
            var c = { column: a, rowNode: l, ePopup: o, type: r, eventSource: i, mouseEvent: s };
            u(c);
          }
        }),
        (t.prototype.positionPopup = function (r) {
          var o = this,
            i = r.ePopup,
            s = r.keepWithinBounds,
            a = r.nudgeX,
            l = r.nudgeY,
            u = r.skipObserver,
            c = r.updatePosition,
            p = { width: 0, height: 0 },
            d = function (f) {
              f === void 0 && (f = !1);
              var y = c(),
                m = y.x,
                C = y.y;
              (f && i.clientWidth === p.width && i.clientHeight === p.height) ||
                ((p.width = i.clientWidth),
                (p.height = i.clientHeight),
                a && (m += a),
                l && (C += l),
                s &&
                  ((m = o.keepXYWithinBounds(i, m, Kt.horizontal)),
                  (C = o.keepXYWithinBounds(i, C, Kt.vertical))),
                (i.style.left = ''.concat(m, 'px')),
                (i.style.top = ''.concat(C, 'px')),
                r.postProcessCallback && r.postProcessCallback());
            };
          if ((d(), !u)) {
            var h = this.resizeObserverService.observeResize(i, function () {
              return d(!0);
            });
            setTimeout(function () {
              return h();
            }, e.WAIT_FOR_POPUP_CONTENT_RESIZE);
          }
        }),
        (t.prototype.getActivePopups = function () {
          return this.popupList.map(function (r) {
            return r.element;
          });
        }),
        (t.prototype.getPopupList = function () {
          return this.popupList;
        }),
        (t.prototype.getParentRect = function () {
          var r = this.gridOptionsService.getDocument(),
            o = this.getPopupParent();
          return (
            o === r.body
              ? (o = r.documentElement)
              : getComputedStyle(o).position === 'static' && (o = o.offsetParent),
            Bn(o)
          );
        }),
        (t.prototype.keepXYWithinBounds = function (r, o, i) {
          var s = i === Kt.vertical,
            a = s ? 'clientHeight' : 'clientWidth',
            l = s ? 'top' : 'left',
            u = s ? 'offsetHeight' : 'offsetWidth',
            c = s ? 'scrollTop' : 'scrollLeft',
            p = this.gridOptionsService.getDocument(),
            d = p.documentElement,
            h = this.getPopupParent(),
            f = h.getBoundingClientRect(),
            y = p.documentElement.getBoundingClientRect(),
            m = h === p.body,
            C = r[u],
            w = s ? Hn : Qr,
            E = m ? w(d) + d[c] : h[a];
          m && (E -= Math.abs(y[l] - f[l]));
          var S = E - C;
          return Math.min(Math.max(o, 0), Math.abs(S));
        }),
        (t.prototype.addPopup = function (r) {
          var o = this.gridOptionsService.getDocument(),
            i = r.eChild,
            s = r.ariaLabel,
            a = r.alwaysOnTop,
            l = r.positionCallback,
            u = r.anchorToElement;
          if (!o)
            return (
              console.warn('AG Grid: could not find the document, document is empty'),
              { hideFunc: function () {} }
            );
          var c = this.getPopupIndex(i);
          if (c !== -1) {
            var p = this.popupList[c];
            return { hideFunc: p.hideFunc };
          }
          this.initialisePopupPosition(i);
          var d = this.createPopupWrapper(i, s, !!a),
            h = this.addEventListenersToPopup(Mi(Mi({}, r), { wrapperEl: d }));
          return l && l(), this.addPopupToPopupList(i, d, h, u), { hideFunc: h };
        }),
        (t.prototype.initialisePopupPosition = function (r) {
          var o = this.getPopupParent(),
            i = o.getBoundingClientRect();
          P(r.style.top) || (r.style.top = ''.concat(i.top * -1, 'px')),
            P(r.style.left) || (r.style.left = ''.concat(i.left * -1, 'px'));
        }),
        (t.prototype.createPopupWrapper = function (r, o, i) {
          var s,
            a = this.getPopupParent(),
            l = document.createElement('div'),
            u = this.environment.getTheme().allThemes;
          return (
            u.length && (s = l.classList).add.apply(s, Tu([], Ou(u), !1)),
            l.classList.add('ag-popup'),
            r.classList.add(
              this.gridOptionsService.get('enableRtl') ? 'ag-rtl' : 'ag-ltr',
              'ag-popup-child'
            ),
            r.hasAttribute('role') || le(r, 'dialog'),
            Ht(r, o),
            l.appendChild(r),
            a.appendChild(l),
            i ? this.setAlwaysOnTop(r, !0) : this.bringPopupToFront(r),
            l
          );
        }),
        (t.prototype.handleThemeChange = function () {
          var r,
            o,
            i,
            s,
            a,
            l = this.environment.getTheme().allThemes;
          try {
            for (var u = Pu(this.popupList), c = u.next(); !c.done; c = u.next()) {
              var p = c.value;
              try {
                for (
                  var d = ((i = void 0), Pu(Array.from(p.wrapper.classList))), h = d.next();
                  !h.done;
                  h = d.next()
                ) {
                  var f = h.value;
                  f.startsWith('ag-theme-') && p.wrapper.classList.remove(f);
                }
              } catch (y) {
                i = { error: y };
              } finally {
                try {
                  h && !h.done && (s = d.return) && s.call(d);
                } finally {
                  if (i) throw i.error;
                }
              }
              l.length && (a = p.wrapper.classList).add.apply(a, Tu([], Ou(l), !1));
            }
          } catch (y) {
            r = { error: y };
          } finally {
            try {
              c && !c.done && (o = u.return) && o.call(u);
            } finally {
              if (r) throw r.error;
            }
          }
        }),
        (t.prototype.addEventListenersToPopup = function (r) {
          var o = this,
            i = this.gridOptionsService.getDocument(),
            s = this.getPopupParent(),
            a = r.wrapperEl,
            l = r.eChild;
          r.click;
          var u = r.closedCallback,
            c = r.afterGuiAttached,
            p = r.closeOnEsc,
            d = r.modal,
            h = !1,
            f = function (w) {
              if (a.contains(i.activeElement)) {
                var E = w.key;
                E === _.ESCAPE && !nt(w) && C({ keyboardEvent: w });
              }
            },
            y = function (w) {
              return C({ mouseEvent: w });
            },
            m = function (w) {
              return C({ touchEvent: w });
            },
            C = function (w) {
              w === void 0 && (w = {});
              var E = w.mouseEvent,
                S = w.touchEvent,
                R = w.keyboardEvent;
              o.isEventFromCurrentPopup({ mouseEvent: E, touchEvent: S }, l) ||
                h ||
                ((h = !0),
                s.removeChild(a),
                i.removeEventListener('keydown', f),
                i.removeEventListener('mousedown', y),
                i.removeEventListener('touchstart', m),
                i.removeEventListener('contextmenu', y),
                o.eventService.removeEventListener(g.EVENT_DRAG_STARTED, y),
                u && u(E || S || R),
                o.removePopupFromPopupList(l));
            };
          return (
            c && c({ hidePopup: C }),
            window.setTimeout(function () {
              p && i.addEventListener('keydown', f),
                d &&
                  (i.addEventListener('mousedown', y),
                  o.eventService.addEventListener(g.EVENT_DRAG_STARTED, y),
                  i.addEventListener('touchstart', m),
                  i.addEventListener('contextmenu', y));
            }, 0),
            C
          );
        }),
        (t.prototype.addPopupToPopupList = function (r, o, i, s) {
          this.popupList.push({
            element: r,
            wrapper: o,
            hideFunc: i,
            instanceId: om++,
            isAnchored: !!s,
          }),
            s && this.setPopupPositionRelatedToElement(r, s);
        }),
        (t.prototype.getPopupIndex = function (r) {
          return this.popupList.findIndex(function (o) {
            return o.element === r;
          });
        }),
        (t.prototype.setPopupPositionRelatedToElement = function (r, o) {
          var i = this.getPopupIndex(r);
          if (i !== -1) {
            var s = this.popupList[i];
            if (
              (s.stopAnchoringPromise &&
                s.stopAnchoringPromise.then(function (l) {
                  return l && l();
                }),
              (s.stopAnchoringPromise = void 0),
              (s.isAnchored = !1),
              !!o)
            ) {
              var a = this.keepPopupPositionedRelativeTo({
                element: o,
                ePopup: r,
                hidePopup: s.hideFunc,
              });
              return (s.stopAnchoringPromise = a), (s.isAnchored = !0), a;
            }
          }
        }),
        (t.prototype.removePopupFromPopupList = function (r) {
          this.setAlignedStyles(r, null),
            this.setPopupPositionRelatedToElement(r, null),
            (this.popupList = this.popupList.filter(function (o) {
              return o.element !== r;
            }));
        }),
        (t.prototype.keepPopupPositionedRelativeTo = function (r) {
          var o = this,
            i = this.getPopupParent(),
            s = i.getBoundingClientRect(),
            a = r.element,
            l = r.ePopup,
            u = a.getBoundingClientRect(),
            c = s.top - u.top,
            p = s.left - u.left,
            d = c,
            h = p,
            f = l.style.top,
            y = parseInt(f.substring(0, f.length - 1), 10),
            m = l.style.left,
            C = parseInt(m.substring(0, m.length - 1), 10);
          return new je(function (w) {
            o.getFrameworkOverrides()
              .setInterval(function () {
                var E = i.getBoundingClientRect(),
                  S = a.getBoundingClientRect(),
                  R = S.top == 0 && S.left == 0 && S.height == 0 && S.width == 0;
                if (R) {
                  r.hidePopup();
                  return;
                }
                var O = E.top - S.top;
                if (O != d) {
                  var b = o.keepXYWithinBounds(l, y + c - O, Kt.vertical);
                  l.style.top = ''.concat(b, 'px');
                }
                d = O;
                var A = E.left - S.left;
                if (A != h) {
                  var M = o.keepXYWithinBounds(l, C + p - A, Kt.horizontal);
                  l.style.left = ''.concat(M, 'px');
                }
                h = A;
              }, 200)
              .then(function (E) {
                var S = function () {
                  E != null && window.clearInterval(E);
                };
                w(S);
              });
          });
        }),
        (t.prototype.hasAnchoredPopup = function () {
          return this.popupList.some(function (r) {
            return r.isAnchored;
          });
        }),
        (t.prototype.isEventFromCurrentPopup = function (r, o) {
          var i = r.mouseEvent,
            s = r.touchEvent,
            a = i || s;
          if (!a) return !1;
          var l = this.getPopupIndex(o);
          if (l === -1) return !1;
          for (var u = l; u < this.popupList.length; u++) {
            var c = this.popupList[u];
            if (Wo(c.element, a)) return !0;
          }
          return this.isElementWithinCustomPopup(a.target);
        }),
        (t.prototype.isElementWithinCustomPopup = function (r) {
          for (var o = this.gridOptionsService.getDocument(); r && r !== o.body; ) {
            if (r.classList.contains('ag-custom-component-popup') || r.parentElement === null)
              return !0;
            r = r.parentElement;
          }
          return !1;
        }),
        (t.prototype.getWrapper = function (r) {
          for (; !r.classList.contains('ag-popup') && r.parentElement; ) r = r.parentElement;
          return r.classList.contains('ag-popup') ? r : null;
        }),
        (t.prototype.setAlwaysOnTop = function (r, o) {
          var i = this.getWrapper(r);
          i && (i.classList.toggle('ag-always-on-top', !!o), o && this.bringPopupToFront(i));
        }),
        (t.prototype.bringPopupToFront = function (r) {
          var o = this.getPopupParent(),
            i = Array.prototype.slice.call(o.querySelectorAll('.ag-popup')),
            s = i.length,
            a = Array.prototype.slice.call(o.querySelectorAll('.ag-popup.ag-always-on-top')),
            l = a.length,
            u = this.getWrapper(r);
          if (!(!u || s <= 1 || !o.contains(r))) {
            var c = i.indexOf(u),
              p = u.querySelectorAll('div'),
              d = [];
            if (
              (p.forEach(function (m) {
                m.scrollTop !== 0 && d.push([m, m.scrollTop]);
              }),
              l)
            ) {
              var h = u.classList.contains('ag-always-on-top');
              h
                ? c !== s - 1 && q(a).insertAdjacentElement('afterend', u)
                : c !== s - l - 1 && a[0].insertAdjacentElement('beforebegin', u);
            } else c !== s - 1 && q(i).insertAdjacentElement('afterend', u);
            for (; d.length; ) {
              var f = d.pop();
              f[0].scrollTop = f[1];
            }
            var y = { type: 'popupToFront', eWrapper: u };
            this.eventService.dispatchEvent(y);
          }
        });
      var e;
      return (
        (t.WAIT_FOR_POPUP_CONTENT_RESIZE = 200),
        wo([v('focusService')], t.prototype, 'focusService', void 0),
        wo([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        wo([v('resizeObserverService')], t.prototype, 'resizeObserverService', void 0),
        wo([F], t.prototype, 'postConstruct', null),
        (t = e = wo([x('popupService')], t)),
        t
      );
    })(D),
    nm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    sm = (function (n) {
      nm(t, n);
      function t() {
        var e =
          n.call(
            this,
            `
        <div class="ag-autocomplete-row" role="presentation">
            <div class="ag-autocomplete-row-label"></div>
        </div>`
          ) || this;
        return (e.hasHighlighting = !1), e;
      }
      return (
        (t.prototype.setState = function (e, r) {
          (this.value = e), this.render(), this.updateSelected(r);
        }),
        (t.prototype.updateSelected = function (e) {
          this.addOrRemoveCssClass('ag-autocomplete-row-selected', e);
        }),
        (t.prototype.setSearchString = function (e) {
          var r,
            o = !1;
          if (P(e)) {
            var i =
              (r = this.value) === null || r === void 0
                ? void 0
                : r.toLocaleLowerCase().indexOf(e.toLocaleLowerCase());
            if (i >= 0) {
              (o = !0), (this.hasHighlighting = !0);
              var s = i + e.length,
                a = ae(this.value.slice(0, i)),
                l = ae(this.value.slice(i, s)),
                u = ae(this.value.slice(s));
              this.getGui().lastElementChild.innerHTML = ''
                .concat(a, '<b>')
                .concat(l, '</b>')
                .concat(u);
            }
          }
          !o && this.hasHighlighting && ((this.hasHighlighting = !1), this.render());
        }),
        (t.prototype.render = function () {
          var e;
          this.getGui().lastElementChild.innerHTML =
            (e = ae(this.value)) !== null && e !== void 0 ? e : '&nbsp;';
        }),
        t
      );
    })(k),
    am = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Du = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    lm = (function (n) {
      am(t, n);
      function t(e) {
        var r = n.call(this, t.TEMPLATE) || this;
        return (r.params = e), (r.searchString = ''), r;
      }
      return (
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
        }),
        (t.prototype.init = function () {
          var e = this;
          (this.autocompleteEntries = this.params.autocompleteEntries),
            (this.virtualList = this.createManagedBean(new Eu({ cssIdentifier: 'autocomplete' }))),
            this.virtualList.setComponentCreator(this.createRowComponent.bind(this)),
            this.eList.appendChild(this.virtualList.getGui()),
            this.virtualList.setModel({
              getRowCount: function () {
                return e.autocompleteEntries.length;
              },
              getRow: function (o) {
                return e.autocompleteEntries[o];
              },
            });
          var r = this.virtualList.getGui();
          this.addManagedListener(r, 'click', function () {
            return e.params.onConfirmed();
          }),
            this.addManagedListener(r, 'mousemove', this.onMouseMove.bind(this)),
            this.addManagedListener(r, 'mousedown', function (o) {
              return o.preventDefault();
            }),
            this.setSelectedValue(0);
        }),
        (t.prototype.onNavigationKeyDown = function (e, r) {
          e.preventDefault();
          var o = this.autocompleteEntries.indexOf(this.selectedValue),
            i = r === _.UP ? o - 1 : o + 1;
          this.checkSetSelectedValue(i);
        }),
        (t.prototype.setSearch = function (e) {
          (this.searchString = e),
            P(e)
              ? this.runSearch()
              : ((this.autocompleteEntries = this.params.autocompleteEntries),
                this.virtualList.refresh(),
                this.checkSetSelectedValue(0)),
            this.updateSearchInList();
        }),
        (t.prototype.runContainsSearch = function (e, r) {
          var o,
            i = !1,
            s = e.toLocaleLowerCase(),
            a = r.filter(function (l) {
              var u = l.toLocaleLowerCase(),
                c = u.indexOf(s),
                p = c === 0,
                d = c >= 0;
              return (
                d && (!o || (!i && p) || (i === p && l.length < o.length)) && ((o = l), (i = p)), d
              );
            });
          return !o && a.length && (o = a[0]), { topMatch: o, allMatches: a };
        }),
        (t.prototype.runSearch = function () {
          var e,
            r,
            o = this.params.autocompleteEntries,
            i = o.map(function (p) {
              var d;
              return (d = p.displayValue) !== null && d !== void 0 ? d : p.key;
            }),
            s,
            a;
          if (this.params.useFuzzySearch)
            (s = ro(this.searchString, i, !0).values), (a = s.length ? s[0] : void 0);
          else {
            var l = this.runContainsSearch(this.searchString, i);
            (s = l.allMatches), (a = l.topMatch);
          }
          var u = o.filter(function (p) {
            var d = p.key,
              h = p.displayValue;
            return s.includes(h ?? d);
          });
          if (
            (!u.length &&
              this.selectedValue &&
              !(
                (r = (e = this.params) === null || e === void 0 ? void 0 : e.forceLastSelection) ===
                  null || r === void 0
              ) &&
              r.call(e, this.selectedValue, this.searchString) &&
              (u = [this.selectedValue]),
            (this.autocompleteEntries = u),
            this.virtualList.refresh(),
            !!a)
          ) {
            var c = s.indexOf(a);
            this.checkSetSelectedValue(c);
          }
        }),
        (t.prototype.updateSearchInList = function () {
          var e = this;
          this.virtualList.forEachRenderedRow(function (r) {
            return r.setSearchString(e.searchString);
          });
        }),
        (t.prototype.checkSetSelectedValue = function (e) {
          e >= 0 && e < this.autocompleteEntries.length && this.setSelectedValue(e);
        }),
        (t.prototype.setSelectedValue = function (e) {
          var r = this.autocompleteEntries[e];
          this.selectedValue !== r &&
            ((this.selectedValue = r),
            this.virtualList.ensureIndexVisible(e),
            this.virtualList.forEachRenderedRow(function (o, i) {
              o.updateSelected(e === i);
            }));
        }),
        (t.prototype.createRowComponent = function (e) {
          var r,
            o = new sm();
          return (
            this.getContext().createBean(o),
            o.setState(
              (r = e.displayValue) !== null && r !== void 0 ? r : e.key,
              e === this.selectedValue
            ),
            o
          );
        }),
        (t.prototype.onMouseMove = function (e) {
          var r = this.virtualList.getGui().getBoundingClientRect(),
            o = this.virtualList.getScrollTop(),
            i = e.clientY - r.top + o,
            s = Math.floor(i / this.virtualList.getRowHeight());
          this.checkSetSelectedValue(s);
        }),
        (t.prototype.afterGuiAttached = function () {
          this.virtualList.refresh();
        }),
        (t.prototype.getSelectedValue = function () {
          var e;
          return this.autocompleteEntries.length &&
            (e = this.selectedValue) !== null &&
            e !== void 0
            ? e
            : null;
        }),
        (t.TEMPLATE = `<div class="ag-autocomplete-list-popup">
            <div ref="eList" class="ag-autocomplete-list"></div>
        <div>`),
        Du([L('eList')], t.prototype, 'eList', void 0),
        Du([F], t.prototype, 'init', null),
        t
      );
    })(cr),
    um = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ns = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    cm = (function (n) {
      um(t, n);
      function t() {
        var e =
          n.call(
            this,
            `
            <div class="ag-autocomplete" role="presentation">
                <ag-input-text-field ref="eAutocompleteInput"></ag-input-text-field>
            </div>`
          ) || this;
        return (e.isListOpen = !1), (e.lastPosition = 0), (e.valid = !0), e;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.eAutocompleteInput.onValueChange(function (r) {
            return e.onValueChanged(r);
          }),
            this.eAutocompleteInput.getInputElement().setAttribute('autocomplete', 'off'),
            this.addGuiEventListener('keydown', this.onKeyDown.bind(this)),
            this.addGuiEventListener('click', this.updatePositionAndList.bind(this)),
            this.addDestroyFunc(function () {
              e.destroyBean(e.autocompleteList);
            }),
            this.addGuiEventListener('focusout', function () {
              return e.onFocusOut();
            });
        }),
        (t.prototype.onValueChanged = function (e) {
          var r = ct(e);
          this.updateValue(r), this.updateAutocompleteList(r);
        }),
        (t.prototype.updateValue = function (e) {
          this.updateLastPosition(),
            this.dispatchEvent({ type: t.EVENT_VALUE_CHANGED, value: e }),
            this.validate(e);
        }),
        (t.prototype.updateAutocompleteList = function (e) {
          var r,
            o,
            i,
            s,
            a =
              (o =
                (r = this.listGenerator) === null || r === void 0
                  ? void 0
                  : r.call(this, e, this.lastPosition)) !== null && o !== void 0
                ? o
                : { enabled: !1 };
          if (
            ((!a.type ||
              a.type !==
                ((i = this.autocompleteListParams) === null || i === void 0 ? void 0 : i.type)) &&
              this.isListOpen &&
              this.closeList(),
            (this.autocompleteListParams = a),
            !((s = this.autocompleteListParams) === null || s === void 0) && s.enabled)
          ) {
            this.isListOpen || this.openList();
            var l = this.autocompleteListParams.searchString;
            this.autocompleteList.setSearch(l ?? '');
          } else this.isListOpen && this.closeList();
        }),
        (t.prototype.onKeyDown = function (e) {
          var r = this,
            o = e.key;
          switch ((this.updateLastPosition(), o)) {
            case _.ENTER:
              this.onEnterKeyDown(e);
              break;
            case _.TAB:
              this.onTabKeyDown(e);
              break;
            case _.DOWN:
            case _.UP:
              this.onUpDownKeyDown(e, o);
              break;
            case _.LEFT:
            case _.RIGHT:
            case _.PAGE_HOME:
            case _.PAGE_END:
              setTimeout(function () {
                r.updatePositionAndList();
              });
              break;
            case _.ESCAPE:
              this.onEscapeKeyDown(e);
              break;
            case _.SPACE:
              e.ctrlKey && !this.isListOpen && (e.preventDefault(), this.forceOpenList());
              break;
          }
        }),
        (t.prototype.confirmSelection = function () {
          var e,
            r =
              (e = this.autocompleteList) === null || e === void 0 ? void 0 : e.getSelectedValue();
          r &&
            (this.closeList(),
            this.dispatchEvent({
              type: t.EVENT_OPTION_SELECTED,
              value: this.getValue(),
              position: this.lastPosition,
              updateEntry: r,
              autocompleteType: this.autocompleteListParams.type,
            }));
        }),
        (t.prototype.onTabKeyDown = function (e) {
          this.isListOpen && (e.preventDefault(), e.stopPropagation(), this.confirmSelection());
        }),
        (t.prototype.onEnterKeyDown = function (e) {
          e.preventDefault(), this.isListOpen ? this.confirmSelection() : this.onCompleted();
        }),
        (t.prototype.onUpDownKeyDown = function (e, r) {
          var o;
          e.preventDefault(),
            this.isListOpen
              ? (o = this.autocompleteList) === null || o === void 0 || o.onNavigationKeyDown(e, r)
              : this.forceOpenList();
        }),
        (t.prototype.onEscapeKeyDown = function (e) {
          this.isListOpen &&
            (e.preventDefault(),
            e.stopPropagation(),
            this.closeList(),
            this.setCaret(this.lastPosition, !0));
        }),
        (t.prototype.onFocusOut = function () {
          this.isListOpen && this.closeList();
        }),
        (t.prototype.updatePositionAndList = function () {
          var e;
          this.updateLastPosition(),
            this.updateAutocompleteList(
              (e = this.eAutocompleteInput.getValue()) !== null && e !== void 0 ? e : null
            );
        }),
        (t.prototype.setCaret = function (e, r) {
          var o = this.gridOptionsService.getDocument();
          r && o.activeElement === o.body && this.eAutocompleteInput.getFocusableElement().focus();
          var i = this.eAutocompleteInput.getInputElement();
          i.setSelectionRange(e, e), e === i.value.length && (i.scrollLeft = i.scrollWidth);
        }),
        (t.prototype.forceOpenList = function () {
          this.onValueChanged(this.eAutocompleteInput.getValue());
        }),
        (t.prototype.updateLastPosition = function () {
          var e;
          this.lastPosition =
            (e = this.eAutocompleteInput.getInputElement().selectionStart) !== null && e !== void 0
              ? e
              : 0;
        }),
        (t.prototype.validate = function (e) {
          var r;
          this.validator &&
            ((this.validationMessage = this.validator(e)),
            this.eAutocompleteInput
              .getInputElement()
              .setCustomValidity((r = this.validationMessage) !== null && r !== void 0 ? r : ''),
            (this.valid = !this.validationMessage),
            this.dispatchEvent({
              type: t.EVENT_VALID_CHANGED,
              isValid: this.valid,
              validationMessage: this.validationMessage,
            }));
        }),
        (t.prototype.openList = function () {
          var e = this;
          (this.isListOpen = !0),
            (this.autocompleteList = this.createBean(
              new lm({
                autocompleteEntries: this.autocompleteListParams.entries,
                onConfirmed: function () {
                  return e.confirmSelection();
                },
                forceLastSelection: this.forceLastSelection,
              })
            ));
          var r = this.autocompleteList.getGui(),
            o = {
              ePopup: r,
              type: 'autocomplete',
              eventSource: this.getGui(),
              position: 'under',
              alignSide: this.gridOptionsService.get('enableRtl') ? 'right' : 'left',
              keepWithinBounds: !0,
            },
            i = this.popupService.addPopup({
              eChild: r,
              anchorToElement: this.getGui(),
              positionCallback: function () {
                return e.popupService.positionPopupByComponent(o);
              },
              ariaLabel: this.listAriaLabel,
            });
          (this.hidePopup = i.hideFunc), this.autocompleteList.afterGuiAttached();
        }),
        (t.prototype.closeList = function () {
          (this.isListOpen = !1),
            this.hidePopup(),
            this.destroyBean(this.autocompleteList),
            (this.autocompleteList = null);
        }),
        (t.prototype.onCompleted = function () {
          this.isListOpen && this.closeList(),
            this.dispatchEvent({
              type: t.EVENT_VALUE_CONFIRMED,
              value: this.getValue(),
              isValid: this.isValid(),
            });
        }),
        (t.prototype.getValue = function () {
          return ct(this.eAutocompleteInput.getValue());
        }),
        (t.prototype.setInputPlaceholder = function (e) {
          return this.eAutocompleteInput.setInputPlaceholder(e), this;
        }),
        (t.prototype.setInputAriaLabel = function (e) {
          return this.eAutocompleteInput.setInputAriaLabel(e), this;
        }),
        (t.prototype.setListAriaLabel = function (e) {
          return (this.listAriaLabel = e), this;
        }),
        (t.prototype.setListGenerator = function (e) {
          return (this.listGenerator = e), this;
        }),
        (t.prototype.setValidator = function (e) {
          return (this.validator = e), this;
        }),
        (t.prototype.isValid = function () {
          return this.valid;
        }),
        (t.prototype.setValue = function (e) {
          var r = e.value,
            o = e.position,
            i = e.silent,
            s = e.updateListOnlyIfOpen,
            a = e.restoreFocus;
          this.eAutocompleteInput.setValue(r, !0),
            this.setCaret(o ?? this.lastPosition, a),
            i || this.updateValue(r),
            (!s || this.isListOpen) && this.updateAutocompleteList(r);
        }),
        (t.prototype.setForceLastSelection = function (e) {
          return (this.forceLastSelection = e), this;
        }),
        (t.prototype.setInputDisabled = function (e) {
          return this.eAutocompleteInput.setDisabled(e), this;
        }),
        (t.EVENT_VALUE_CHANGED = 'eventValueChanged'),
        (t.EVENT_VALUE_CONFIRMED = 'eventValueConfirmed'),
        (t.EVENT_OPTION_SELECTED = 'eventOptionSelected'),
        (t.EVENT_VALID_CHANGED = 'eventValidChanged'),
        Ns([v('popupService')], t.prototype, 'popupService', void 0),
        Ns([L('eAutocompleteInput')], t.prototype, 'eAutocompleteInput', void 0),
        Ns([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    pm = ['touchstart', 'touchend', 'touchmove', 'touchcancel'],
    dm = (function () {
      function n(t) {
        t === void 0 && (t = 'javascript'),
          (this.frameworkName = t),
          (this.renderingEngine = 'vanilla'),
          (this.wrapIncoming = function (e) {
            return e();
          }),
          (this.wrapOutgoing = function (e) {
            return e();
          });
      }
      return (
        (n.prototype.setInterval = function (t, e) {
          return new je(function (r) {
            r(window.setInterval(t, e));
          });
        }),
        (n.prototype.addEventListener = function (t, e, r, o) {
          var i = ot(pm, e);
          t.addEventListener(e, r, { capture: !!o, passive: i });
        }),
        Object.defineProperty(n.prototype, 'shouldWrapOutgoing', {
          get: function () {
            return !1;
          },
          enumerable: !1,
          configurable: !0,
        }),
        (n.prototype.frameworkComponent = function (t) {
          return null;
        }),
        (n.prototype.isFrameworkComponent = function (t) {
          return !1;
        }),
        (n.prototype.getDocLink = function (t) {
          var e = this.frameworkName === 'solid' ? 'react' : this.frameworkName;
          return 'https://www.ag-grid.com/'.concat(e, '-data-grid').concat(t ? '/'.concat(t) : '');
        }),
        n
      );
    })(),
    hm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Br = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    fm = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    vm = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    gm = (function (n) {
      hm(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.getNextCellToFocus = function (e, r, o) {
          return (
            o === void 0 && (o = !1),
            o
              ? this.getNextCellToFocusWithCtrlPressed(e, r)
              : this.getNextCellToFocusWithoutCtrlPressed(e, r)
          );
        }),
        (t.prototype.getNextCellToFocusWithCtrlPressed = function (e, r) {
          var o = e === _.UP,
            i = e === _.DOWN,
            s = e === _.LEFT,
            a,
            l;
          if (o || i)
            (l = o
              ? this.paginationProxy.getPageFirstRow()
              : this.paginationProxy.getPageLastRow()),
              (a = r.column);
          else {
            var u = this.columnModel.getAllDisplayedColumns(),
              c = this.gridOptionsService.get('enableRtl');
            (l = r.rowIndex), (a = s !== c ? u[0] : q(u));
          }
          return { rowIndex: l, rowPinned: null, column: a };
        }),
        (t.prototype.getNextCellToFocusWithoutCtrlPressed = function (e, r) {
          for (var o = r, i = !1; !i; ) {
            switch (e) {
              case _.UP:
                o = this.getCellAbove(o);
                break;
              case _.DOWN:
                o = this.getCellBelow(o);
                break;
              case _.RIGHT:
                this.gridOptionsService.get('enableRtl')
                  ? (o = this.getCellToLeft(o))
                  : (o = this.getCellToRight(o));
                break;
              case _.LEFT:
                this.gridOptionsService.get('enableRtl')
                  ? (o = this.getCellToRight(o))
                  : (o = this.getCellToLeft(o));
                break;
              default:
                (o = null), console.warn('AG Grid: unknown key for navigation ' + e);
                break;
            }
            o ? (i = this.isCellGoodToFocusOn(o)) : (i = !0);
          }
          return o;
        }),
        (t.prototype.isCellGoodToFocusOn = function (e) {
          var r = e.column,
            o;
          switch (e.rowPinned) {
            case 'top':
              o = this.pinnedRowModel.getPinnedTopRow(e.rowIndex);
              break;
            case 'bottom':
              o = this.pinnedRowModel.getPinnedBottomRow(e.rowIndex);
              break;
            default:
              o = this.rowModel.getRow(e.rowIndex);
              break;
          }
          if (!o) return !1;
          var i = r.isSuppressNavigable(o);
          return !i;
        }),
        (t.prototype.getCellToLeft = function (e) {
          if (!e) return null;
          var r = this.columnModel.getDisplayedColBefore(e.column);
          return r ? { rowIndex: e.rowIndex, column: r, rowPinned: e.rowPinned } : null;
        }),
        (t.prototype.getCellToRight = function (e) {
          if (!e) return null;
          var r = this.columnModel.getDisplayedColAfter(e.column);
          return r ? { rowIndex: e.rowIndex, column: r, rowPinned: e.rowPinned } : null;
        }),
        (t.prototype.getRowBelow = function (e) {
          var r = e.rowIndex,
            o = e.rowPinned;
          if (this.isLastRowInContainer(e))
            switch (o) {
              case 'bottom':
                return null;
              case 'top':
                return this.rowModel.isRowsToRender()
                  ? { rowIndex: this.paginationProxy.getPageFirstRow(), rowPinned: null }
                  : this.pinnedRowModel.isRowsToRender('bottom')
                  ? { rowIndex: 0, rowPinned: 'bottom' }
                  : null;
              default:
                return this.pinnedRowModel.isRowsToRender('bottom')
                  ? { rowIndex: 0, rowPinned: 'bottom' }
                  : null;
            }
          var i = this.rowModel.getRow(e.rowIndex),
            s = this.getNextStickyPosition(i);
          return s || { rowIndex: r + 1, rowPinned: o };
        }),
        (t.prototype.getNextStickyPosition = function (e, r) {
          if (!(!this.gridOptionsService.isGroupRowsSticky() || !e || !e.sticky)) {
            var o = vm([], fm(this.rowRenderer.getStickyTopRowCtrls()), !1).sort(function (l, u) {
                return l.getRowNode().rowIndex - u.getRowNode().rowIndex;
              }),
              i = r ? -1 : 1,
              s = o.findIndex(function (l) {
                return l.getRowNode().rowIndex === e.rowIndex;
              }),
              a = o[s + i];
            if (a) return { rowIndex: a.getRowNode().rowIndex, rowPinned: null };
          }
        }),
        (t.prototype.getCellBelow = function (e) {
          if (!e) return null;
          var r = this.getRowBelow(e);
          return r ? { rowIndex: r.rowIndex, column: e.column, rowPinned: r.rowPinned } : null;
        }),
        (t.prototype.isLastRowInContainer = function (e) {
          var r = e.rowPinned,
            o = e.rowIndex;
          if (r === 'top') {
            var i = this.pinnedRowModel.getPinnedTopRowData().length - 1;
            return i <= o;
          }
          if (r === 'bottom') {
            var s = this.pinnedRowModel.getPinnedBottomRowData().length - 1;
            return s <= o;
          }
          var a = this.paginationProxy.getPageLastRow();
          return a <= o;
        }),
        (t.prototype.getRowAbove = function (e) {
          var r = e.rowIndex,
            o = e.rowPinned,
            i = o ? r === 0 : r === this.paginationProxy.getPageFirstRow();
          if (i)
            return o === 'top'
              ? null
              : o
              ? this.rowModel.isRowsToRender()
                ? this.getLastBodyCell()
                : this.pinnedRowModel.isRowsToRender('top')
                ? this.getLastFloatingTopRow()
                : null
              : this.pinnedRowModel.isRowsToRender('top')
              ? this.getLastFloatingTopRow()
              : null;
          var s = this.rowModel.getRow(e.rowIndex),
            a = this.getNextStickyPosition(s, !0);
          return a || { rowIndex: r - 1, rowPinned: o };
        }),
        (t.prototype.getCellAbove = function (e) {
          if (!e) return null;
          var r = this.getRowAbove({ rowIndex: e.rowIndex, rowPinned: e.rowPinned });
          return r ? { rowIndex: r.rowIndex, column: e.column, rowPinned: r.rowPinned } : null;
        }),
        (t.prototype.getLastBodyCell = function () {
          var e = this.paginationProxy.getPageLastRow();
          return { rowIndex: e, rowPinned: null };
        }),
        (t.prototype.getLastFloatingTopRow = function () {
          var e = this.pinnedRowModel.getPinnedTopRowData().length - 1;
          return { rowIndex: e, rowPinned: 'top' };
        }),
        (t.prototype.getNextTabbedCell = function (e, r) {
          return r ? this.getNextTabbedCellBackwards(e) : this.getNextTabbedCellForwards(e);
        }),
        (t.prototype.getNextTabbedCellForwards = function (e) {
          var r = this.columnModel.getAllDisplayedColumns(),
            o = e.rowIndex,
            i = e.rowPinned,
            s = this.columnModel.getDisplayedColAfter(e.column);
          if (!s) {
            s = r[0];
            var a = this.getRowBelow(e);
            if (H(a) || (!a.rowPinned && !this.paginationProxy.isRowInPage(a))) return null;
            (o = a ? a.rowIndex : null), (i = a ? a.rowPinned : null);
          }
          return { rowIndex: o, column: s, rowPinned: i };
        }),
        (t.prototype.getNextTabbedCellBackwards = function (e) {
          var r = this.columnModel.getAllDisplayedColumns(),
            o = e.rowIndex,
            i = e.rowPinned,
            s = this.columnModel.getDisplayedColBefore(e.column);
          if (!s) {
            s = q(r);
            var a = this.getRowAbove({ rowIndex: e.rowIndex, rowPinned: e.rowPinned });
            if (H(a) || (!a.rowPinned && !this.paginationProxy.isRowInPage(a))) return null;
            (o = a ? a.rowIndex : null), (i = a ? a.rowPinned : null);
          }
          return { rowIndex: o, column: s, rowPinned: i };
        }),
        Br([v('columnModel')], t.prototype, 'columnModel', void 0),
        Br([v('rowModel')], t.prototype, 'rowModel', void 0),
        Br([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        Br([v('pinnedRowModel')], t.prototype, 'pinnedRowModel', void 0),
        Br([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        (t = Br([x('cellNavigationService')], t)),
        t
      );
    })(D),
    ym = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Eo = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    mm = function (n, t) {
      return function (e, r) {
        t(e, r, n);
      };
    },
    Cm = (function (n) {
      ym(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.consuming = !1), e;
      }
      return (
        (t.prototype.setBeans = function (e) {
          this.logger = e.create('AlignedGridsService');
        }),
        (t.prototype.getAlignedGridApis = function () {
          var e = this,
            r,
            o = (r = this.gridOptionsService.get('alignedGrids')) !== null && r !== void 0 ? r : [],
            i = typeof o == 'function';
          typeof o == 'function' && (o = o());
          var s = function () {
              return 'See '.concat(e.getFrameworkOverrides().getDocLink('aligned-grids'));
            },
            a = o
              .map(function (l) {
                var u;
                if (!l) {
                  pt('alignedGrids contains an undefined option.'),
                    i ||
                      pt(`You may want to configure via a callback to avoid setup race conditions:
                     "alignedGrids: () => [linkedGrid]"`),
                    pt(s());
                  return;
                }
                if (l instanceof Jl) return l;
                var c = l;
                return 'current' in c
                  ? (u = c.current) === null || u === void 0
                    ? void 0
                    : u.api
                  : (c.api ||
                      pt(
                        'alignedGrids - No api found on the linked grid. If you are passing gridOptions to alignedGrids since v31 this is no longer valid. '.concat(
                          s()
                        )
                      ),
                    c.api);
              })
              .filter(function (l) {
                return !!l && !l.isDestroyed();
              });
          return a;
        }),
        (t.prototype.init = function () {
          this.addManagedListener(
            this.eventService,
            g.EVENT_COLUMN_MOVED,
            this.fireColumnEvent.bind(this)
          ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_VISIBLE,
              this.fireColumnEvent.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_PINNED,
              this.fireColumnEvent.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_GROUP_OPENED,
              this.fireColumnEvent.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_RESIZED,
              this.fireColumnEvent.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_BODY_SCROLL,
              this.fireScrollEvent.bind(this)
            );
        }),
        (t.prototype.fireEvent = function (e) {
          this.consuming ||
            this.getAlignedGridApis().forEach(function (r) {
              var o = r.__getAlignedGridService();
              e(o);
            });
        }),
        (t.prototype.onEvent = function (e) {
          (this.consuming = !0), e(), (this.consuming = !1);
        }),
        (t.prototype.fireColumnEvent = function (e) {
          this.fireEvent(function (r) {
            r.onColumnEvent(e);
          });
        }),
        (t.prototype.fireScrollEvent = function (e) {
          e.direction === 'horizontal' &&
            this.fireEvent(function (r) {
              r.onScrollEvent(e);
            });
        }),
        (t.prototype.onScrollEvent = function (e) {
          var r = this;
          this.onEvent(function () {
            var o = r.ctrlsService.getGridBodyCtrl();
            o.getScrollFeature().setHorizontalScrollPosition(e.left, !0);
          });
        }),
        (t.prototype.getMasterColumns = function (e) {
          var r = [];
          return (
            e.columns
              ? e.columns.forEach(function (o) {
                  r.push(o);
                })
              : e.column && r.push(e.column),
            r
          );
        }),
        (t.prototype.getColumnIds = function (e) {
          var r = [];
          return (
            e.columns
              ? e.columns.forEach(function (o) {
                  r.push(o.getColId());
                })
              : e.column && r.push(e.column.getColId()),
            r
          );
        }),
        (t.prototype.onColumnEvent = function (e) {
          var r = this;
          this.onEvent(function () {
            switch (e.type) {
              case g.EVENT_COLUMN_MOVED:
              case g.EVENT_COLUMN_VISIBLE:
              case g.EVENT_COLUMN_PINNED:
              case g.EVENT_COLUMN_RESIZED:
                var o = e;
                r.processColumnEvent(o);
                break;
              case g.EVENT_COLUMN_GROUP_OPENED:
                var i = e;
                r.processGroupOpenedEvent(i);
                break;
              case g.EVENT_COLUMN_PIVOT_CHANGED:
                console.warn(
                  'AG Grid: pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid.'
                );
                break;
            }
          });
        }),
        (t.prototype.processGroupOpenedEvent = function (e) {
          var r = this;
          e.columnGroups.forEach(function (o) {
            var i = null;
            if (o) {
              var s = o.getGroupId();
              i = r.columnModel.getProvidedColumnGroup(s);
            }
            (o && !i) ||
              (r.logger.log('onColumnEvent-> processing ' + e + ' expanded = ' + o.isExpanded()),
              r.columnModel.setColumnGroupOpened(i, o.isExpanded(), 'alignedGridChanged'));
          });
        }),
        (t.prototype.processColumnEvent = function (e) {
          var r = this,
            o,
            i = e.column,
            s = null;
          if ((i && (s = this.columnModel.getPrimaryColumn(i.getColId())), !(i && !s))) {
            var a = this.getMasterColumns(e);
            switch (e.type) {
              case g.EVENT_COLUMN_MOVED:
                {
                  var l = e,
                    u = e.api.getColumnState(),
                    c = u.map(function (C) {
                      return { colId: C.colId };
                    });
                  this.columnModel.applyColumnState(
                    { state: c, applyOrder: !0 },
                    'alignedGridChanged'
                  ),
                    this.logger.log(
                      'onColumnEvent-> processing '.concat(e.type, ' toIndex = ').concat(l.toIndex)
                    );
                }
                break;
              case g.EVENT_COLUMN_VISIBLE:
                {
                  var p = e,
                    u = e.api.getColumnState(),
                    c = u.map(function (E) {
                      return { colId: E.colId, hide: E.hide };
                    });
                  this.columnModel.applyColumnState({ state: c }, 'alignedGridChanged'),
                    this.logger.log(
                      'onColumnEvent-> processing '.concat(e.type, ' visible = ').concat(p.visible)
                    );
                }
                break;
              case g.EVENT_COLUMN_PINNED:
                {
                  var d = e,
                    u = e.api.getColumnState(),
                    c = u.map(function (E) {
                      return { colId: E.colId, pinned: E.pinned };
                    });
                  this.columnModel.applyColumnState({ state: c }, 'alignedGridChanged'),
                    this.logger.log(
                      'onColumnEvent-> processing '.concat(e.type, ' pinned = ').concat(d.pinned)
                    );
                }
                break;
              case g.EVENT_COLUMN_RESIZED:
                var h = e,
                  f = {};
                a.forEach(function (C) {
                  r.logger.log(
                    'onColumnEvent-> processing '
                      .concat(e.type, ' actualWidth = ')
                      .concat(C.getActualWidth())
                  ),
                    (f[C.getId()] = { key: C.getColId(), newWidth: C.getActualWidth() });
                }),
                  (o = h.flexColumns) === null ||
                    o === void 0 ||
                    o.forEach(function (C) {
                      f[C.getId()] && delete f[C.getId()];
                    }),
                  this.columnModel.setColumnWidths(
                    Object.values(f),
                    !1,
                    h.finished,
                    'alignedGridChanged'
                  );
                break;
            }
            var y = this.ctrlsService.getGridBodyCtrl(),
              m = y.isVerticalScrollShowing();
            this.getAlignedGridApis().forEach(function (C) {
              C.setGridOption('alwaysShowVerticalScroll', m);
            });
          }
        }),
        Eo([v('columnModel')], t.prototype, 'columnModel', void 0),
        Eo([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Eo([mm(0, Ye('loggerFactory'))], t.prototype, 'setBeans', null),
        Eo([F], t.prototype, 'init', null),
        (t = Eo([x('alignedGridsService')], t)),
        t
      );
    })(D),
    Sm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ii = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Au = (function (n) {
      Sm(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.selectedNodes = new Map()), (e.lastRowNode = null), e;
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          (this.rowSelection = this.gridOptionsService.get('rowSelection')),
            (this.groupSelectsChildren = this.gridOptionsService.get('groupSelectsChildren')),
            this.addManagedPropertyListeners(['groupSelectsChildren', 'rowSelection'], function () {
              (e.groupSelectsChildren = e.gridOptionsService.get('groupSelectsChildren')),
                (e.rowSelection = e.gridOptionsService.get('rowSelection')),
                e.deselectAllRowNodes({ source: 'api' });
            }),
            this.addManagedListener(
              this.eventService,
              g.EVENT_ROW_SELECTED,
              this.onRowSelected.bind(this)
            );
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this), this.resetNodes(), (this.lastRowNode = null);
        }),
        (t.prototype.isMultiselect = function () {
          return this.rowSelection === 'multiple';
        }),
        (t.prototype.setNodesSelected = function (e) {
          var r,
            o = e.newValue,
            i = e.clearSelection,
            s = e.suppressFinishActions,
            a = e.rangeSelect,
            l = e.nodes,
            u = e.event,
            c = e.source,
            p = c === void 0 ? 'api' : c;
          if (l.length === 0) return 0;
          if (l.length > 1 && !this.isMultiselect())
            return console.warn("AG Grid: cannot multi select while rowSelection='single'"), 0;
          var d = this.groupSelectsChildren && e.groupSelectsFiltered === !0,
            h = l.map(function (A) {
              return A.footer ? A.sibling : A;
            });
          if (a) {
            if (l.length > 1)
              return console.warn('AG Grid: cannot range select while selecting multiple rows'), 0;
            var f = null;
            if (
              (p === 'checkboxSelected' &&
                o === !1 &&
                this.lastRowNode &&
                (this.lastRowNode.id ? (f = this.lastRowNode) : (this.lastRowNode = null)),
              f == null && (f = this.getLastSelectedNode()),
              f)
            ) {
              var y = h[0],
                m = y !== f;
              if (m && this.isMultiselect()) return this.selectRange(y, f, o, p);
            }
          }
          this.lastRowNode = o ? null : h[0];
          for (var C = 0, w = 0; w < h.length; w++) {
            var E = h[w],
              S = d && E.group;
            if (!S) {
              var R = E.selectThisNode(o, u, p);
              R && C++;
            }
            this.groupSelectsChildren &&
              !((r = E.childrenAfterGroup) === null || r === void 0) &&
              r.length &&
              (C += this.selectChildren(E, o, d, p));
          }
          if (!s) {
            var O = o && (i || !this.isMultiselect());
            if ((O && (C += this.clearOtherNodes(h[0], p)), C > 0)) {
              this.updateGroupsFromChildrenSelections(p);
              var b = { type: g.EVENT_SELECTION_CHANGED, source: p };
              this.eventService.dispatchEvent(b);
            }
          }
          return C;
        }),
        (t.prototype.selectRange = function (e, r, o, i) {
          var s = this;
          o === void 0 && (o = !0);
          var a = this.rowModel.getNodesInRangeForSelection(e, r),
            l = 0;
          a.forEach(function (c) {
            if (!(c.group && s.groupSelectsChildren)) {
              var p = c.selectThisNode(o, void 0, i);
              p && l++;
            }
          }),
            this.updateGroupsFromChildrenSelections(i);
          var u = { type: g.EVENT_SELECTION_CHANGED, source: i };
          return this.eventService.dispatchEvent(u), l;
        }),
        (t.prototype.selectChildren = function (e, r, o, i) {
          var s = o ? e.childrenAfterAggFilter : e.childrenAfterGroup;
          return H(s)
            ? 0
            : this.setNodesSelected({
                newValue: r,
                clearSelection: !1,
                suppressFinishActions: !0,
                groupSelectsFiltered: o,
                source: i,
                nodes: s,
              });
        }),
        (t.prototype.getLastSelectedNode = function () {
          var e = Array.from(this.selectedNodes.keys());
          if (e.length == 0) return null;
          var r = this.selectedNodes.get(q(e));
          return r || null;
        }),
        (t.prototype.getSelectedNodes = function () {
          var e = [];
          return (
            this.selectedNodes.forEach(function (r) {
              r && e.push(r);
            }),
            e
          );
        }),
        (t.prototype.getSelectedRows = function () {
          var e = [];
          return (
            this.selectedNodes.forEach(function (r) {
              r && r.data && e.push(r.data);
            }),
            e
          );
        }),
        (t.prototype.getSelectionCount = function () {
          return this.selectedNodes.size;
        }),
        (t.prototype.filterFromSelection = function (e) {
          var r = new Map();
          this.selectedNodes.forEach(function (o, i) {
            var s = o && e(o);
            s && r.set(i, o);
          }),
            (this.selectedNodes = r);
        }),
        (t.prototype.updateGroupsFromChildrenSelections = function (e, r) {
          if (!this.groupSelectsChildren || this.rowModel.getType() !== 'clientSide') return !1;
          var o = this.rowModel,
            i = o.getRootNode();
          r || ((r = new Ti(!0, i)), r.setInactive());
          var s = !1;
          return (
            r.forEachChangedNodeDepthFirst(function (a) {
              if (a !== i) {
                var l = a.calculateSelectedFromChildren();
                s = a.selectThisNode(l === null ? !1 : l, void 0, e) || s;
              }
            }),
            s
          );
        }),
        (t.prototype.clearOtherNodes = function (e, r) {
          var o = this,
            i = new Map(),
            s = 0;
          return (
            this.selectedNodes.forEach(function (a) {
              if (a && a.id !== e.id) {
                var l = o.selectedNodes.get(a.id);
                (s += l.setSelectedParams({
                  newValue: !1,
                  clearSelection: !1,
                  suppressFinishActions: !0,
                  source: r,
                })),
                  o.groupSelectsChildren && a.parent && i.set(a.parent.id, a.parent);
              }
            }),
            i.forEach(function (a) {
              var l = a.calculateSelectedFromChildren();
              a.selectThisNode(l === null ? !1 : l, void 0, r);
            }),
            s
          );
        }),
        (t.prototype.onRowSelected = function (e) {
          var r = e.node;
          (this.groupSelectsChildren && r.group) ||
            (r.isSelected() ? this.selectedNodes.set(r.id, r) : this.selectedNodes.delete(r.id));
        }),
        (t.prototype.syncInRowNode = function (e, r) {
          this.syncInOldRowNode(e, r), this.syncInNewRowNode(e);
        }),
        (t.prototype.syncInOldRowNode = function (e, r) {
          var o = P(r) && e.id !== r.id;
          if (o && r) {
            var i = r.id,
              s = this.selectedNodes.get(i) == e;
            s && this.selectedNodes.set(r.id, r);
          }
        }),
        (t.prototype.syncInNewRowNode = function (e) {
          this.selectedNodes.has(e.id)
            ? (e.setSelectedInitialValue(!0), this.selectedNodes.set(e.id, e))
            : e.setSelectedInitialValue(!1);
        }),
        (t.prototype.reset = function (e) {
          var r = this.getSelectionCount();
          if ((this.resetNodes(), r)) {
            var o = { type: g.EVENT_SELECTION_CHANGED, source: e };
            this.eventService.dispatchEvent(o);
          }
        }),
        (t.prototype.resetNodes = function () {
          var e;
          (e = this.selectedNodes) === null || e === void 0 || e.clear();
        }),
        (t.prototype.getBestCostNodeSelection = function () {
          if (this.rowModel.getType() !== 'clientSide') return;
          var e = this.rowModel,
            r = e.getTopLevelNodes();
          if (r === null) return;
          var o = [];
          function i(s) {
            for (var a = 0, l = s.length; a < l; a++) {
              var u = s[a];
              if (u.isSelected()) o.push(u);
              else {
                var c = u;
                c.group && c.children && i(c.children);
              }
            }
          }
          return i(r), o;
        }),
        (t.prototype.isEmpty = function () {
          var e = 0;
          return (
            this.selectedNodes.forEach(function (r) {
              r && e++;
            }),
            e === 0
          );
        }),
        (t.prototype.deselectAllRowNodes = function (e) {
          var r = function (u) {
              return u.selectThisNode(!1, void 0, i);
            },
            o = this.rowModel.getType() === 'clientSide',
            i = e.source,
            s = e.justFiltered,
            a = e.justCurrentPage;
          if (a || s) {
            if (!o) {
              console.error(
                "AG Grid: selecting just filtered only works when gridOptions.rowModelType='clientSide'"
              );
              return;
            }
            this.getNodesToSelect(s, a).forEach(r);
          } else
            this.selectedNodes.forEach(function (u) {
              u && r(u);
            }),
              this.reset(i);
          o && this.groupSelectsChildren && this.updateGroupsFromChildrenSelections(i);
          var l = { type: g.EVENT_SELECTION_CHANGED, source: i };
          this.eventService.dispatchEvent(l);
        }),
        (t.prototype.getSelectedCounts = function (e, r) {
          var o = this,
            i = 0,
            s = 0,
            a = function (l) {
              (o.groupSelectsChildren && l.group) || (l.isSelected() ? i++ : l.selectable && s++);
            };
          return this.getNodesToSelect(e, r).forEach(a), { selectedCount: i, notSelectedCount: s };
        }),
        (t.prototype.getSelectAllState = function (e, r) {
          var o = this.getSelectedCounts(e, r),
            i = o.selectedCount,
            s = o.notSelectedCount;
          return i === 0 && s === 0 ? !1 : i > 0 && s > 0 ? null : i > 0;
        }),
        (t.prototype.hasNodesToSelect = function (e, r) {
          return (
            e === void 0 && (e = !1),
            r === void 0 && (r = !1),
            this.getNodesToSelect(e, r).filter(function (o) {
              return o.selectable;
            }).length > 0
          );
        }),
        (t.prototype.getNodesToSelect = function (e, r) {
          var o = this;
          if (
            (e === void 0 && (e = !1),
            r === void 0 && (r = !1),
            this.rowModel.getType() !== 'clientSide')
          )
            throw new Error(
              "selectAll only available when rowModelType='clientSide', ie not ".concat(
                this.rowModel.getType()
              )
            );
          var i = [];
          if (r)
            return (
              this.paginationProxy.forEachNodeOnPage(function (a) {
                if (!a.group) {
                  i.push(a);
                  return;
                }
                if (!a.expanded) {
                  var l = function (u) {
                    var c;
                    i.push(u),
                      !((c = u.childrenAfterFilter) === null || c === void 0) &&
                        c.length &&
                        u.childrenAfterFilter.forEach(l);
                  };
                  l(a);
                  return;
                }
                o.groupSelectsChildren || i.push(a);
              }),
              i
            );
          var s = this.rowModel;
          return e
            ? (s.forEachNodeAfterFilter(function (a) {
                i.push(a);
              }),
              i)
            : (s.forEachNode(function (a) {
                i.push(a);
              }),
              i);
        }),
        (t.prototype.selectAllRowNodes = function (e) {
          if (this.rowModel.getType() !== 'clientSide')
            throw new Error(
              "selectAll only available when rowModelType='clientSide', ie not ".concat(
                this.rowModel.getType()
              )
            );
          var r = e.source,
            o = e.justFiltered,
            i = e.justCurrentPage,
            s = function (l) {
              return l.selectThisNode(!0, void 0, r);
            };
          this.getNodesToSelect(o, i).forEach(s),
            this.rowModel.getType() === 'clientSide' &&
              this.groupSelectsChildren &&
              this.updateGroupsFromChildrenSelections(r);
          var a = { type: g.EVENT_SELECTION_CHANGED, source: r };
          this.eventService.dispatchEvent(a);
        }),
        (t.prototype.getSelectionState = function () {
          var e = [];
          return (
            this.selectedNodes.forEach(function (r) {
              r != null && r.id && e.push(r.id);
            }),
            e.length ? e : null
          );
        }),
        (t.prototype.setSelectionState = function (e, r) {
          if (Array.isArray(e)) {
            var o = new Set(e),
              i = [];
            this.rowModel.forEachNode(function (s) {
              o.has(s.id) && i.push(s);
            }),
              this.setNodesSelected({ newValue: !0, nodes: i, source: r });
          }
        }),
        Ii([v('rowModel')], t.prototype, 'rowModel', void 0),
        Ii([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        Ii([F], t.prototype, 'init', null),
        (t = Ii([x('selectionService')], t)),
        t
      );
    })(D),
    bu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    wm = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Em = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    Fu = (function () {
      function n(t) {
        var e = this;
        (this.viaApi = function (r) {
          for (var o, i = [], s = 1; s < arguments.length; s++) i[s - 1] = arguments[s];
          return (
            V(
              "Since v31, 'columnApi."
                .concat(r, "' is deprecated and moved to 'api.")
                .concat(r, "'.")
            ),
            (o = e.api)[r].apply(o, Em([], wm(i), !1))
          );
        }),
          (this.api = t);
      }
      return (
        (n.prototype.sizeColumnsToFit = function (t) {
          this.viaApi('sizeColumnsToFit', t);
        }),
        (n.prototype.setColumnGroupOpened = function (t, e) {
          this.viaApi('setColumnGroupOpened', t, e);
        }),
        (n.prototype.getColumnGroup = function (t, e) {
          return this.viaApi('getColumnGroup', t, e);
        }),
        (n.prototype.getProvidedColumnGroup = function (t) {
          return this.viaApi('getProvidedColumnGroup', t);
        }),
        (n.prototype.getDisplayNameForColumn = function (t, e) {
          return this.viaApi('getDisplayNameForColumn', t, e);
        }),
        (n.prototype.getDisplayNameForColumnGroup = function (t, e) {
          return this.viaApi('getDisplayNameForColumnGroup', t, e);
        }),
        (n.prototype.getColumn = function (t) {
          return this.viaApi('getColumn', t);
        }),
        (n.prototype.getColumns = function () {
          return this.viaApi('getColumns');
        }),
        (n.prototype.applyColumnState = function (t) {
          return this.viaApi('applyColumnState', t);
        }),
        (n.prototype.getColumnState = function () {
          return this.viaApi('getColumnState');
        }),
        (n.prototype.resetColumnState = function () {
          this.viaApi('resetColumnState');
        }),
        (n.prototype.getColumnGroupState = function () {
          return this.viaApi('getColumnGroupState');
        }),
        (n.prototype.setColumnGroupState = function (t) {
          this.viaApi('setColumnGroupState', t);
        }),
        (n.prototype.resetColumnGroupState = function () {
          this.viaApi('resetColumnGroupState');
        }),
        (n.prototype.isPinning = function () {
          return this.viaApi('isPinning');
        }),
        (n.prototype.isPinningLeft = function () {
          return this.viaApi('isPinningLeft');
        }),
        (n.prototype.isPinningRight = function () {
          return this.viaApi('isPinningRight');
        }),
        (n.prototype.getDisplayedColAfter = function (t) {
          return this.viaApi('getDisplayedColAfter', t);
        }),
        (n.prototype.getDisplayedColBefore = function (t) {
          return this.viaApi('getDisplayedColBefore', t);
        }),
        (n.prototype.setColumnVisible = function (t, e) {
          this.viaApi('setColumnVisible', t, e);
        }),
        (n.prototype.setColumnsVisible = function (t, e) {
          this.viaApi('setColumnsVisible', t, e);
        }),
        (n.prototype.setColumnPinned = function (t, e) {
          this.viaApi('setColumnPinned', t, e);
        }),
        (n.prototype.setColumnsPinned = function (t, e) {
          this.viaApi('setColumnsPinned', t, e);
        }),
        (n.prototype.getAllGridColumns = function () {
          return this.viaApi('getAllGridColumns');
        }),
        (n.prototype.getDisplayedLeftColumns = function () {
          return this.viaApi('getDisplayedLeftColumns');
        }),
        (n.prototype.getDisplayedCenterColumns = function () {
          return this.viaApi('getDisplayedCenterColumns');
        }),
        (n.prototype.getDisplayedRightColumns = function () {
          return this.viaApi('getDisplayedRightColumns');
        }),
        (n.prototype.getAllDisplayedColumns = function () {
          return this.viaApi('getAllDisplayedColumns');
        }),
        (n.prototype.getAllDisplayedVirtualColumns = function () {
          return this.viaApi('getAllDisplayedVirtualColumns');
        }),
        (n.prototype.moveColumn = function (t, e) {
          this.viaApi('moveColumn', t, e);
        }),
        (n.prototype.moveColumnByIndex = function (t, e) {
          this.viaApi('moveColumnByIndex', t, e);
        }),
        (n.prototype.moveColumns = function (t, e) {
          this.viaApi('moveColumns', t, e);
        }),
        (n.prototype.moveRowGroupColumn = function (t, e) {
          this.viaApi('moveRowGroupColumn', t, e);
        }),
        (n.prototype.setColumnAggFunc = function (t, e) {
          this.viaApi('setColumnAggFunc', t, e);
        }),
        (n.prototype.setColumnWidth = function (t, e, r, o) {
          r === void 0 && (r = !0), this.viaApi('setColumnWidth', t, e, r, o);
        }),
        (n.prototype.setColumnWidths = function (t, e, r) {
          e === void 0 && (e = !0), this.viaApi('setColumnWidths', t, e, r);
        }),
        (n.prototype.setPivotMode = function (t) {
          this.viaApi('setPivotMode', t);
        }),
        (n.prototype.isPivotMode = function () {
          return this.viaApi('isPivotMode');
        }),
        (n.prototype.getPivotResultColumn = function (t, e) {
          return this.viaApi('getPivotResultColumn', t, e);
        }),
        (n.prototype.setValueColumns = function (t) {
          this.viaApi('setValueColumns', t);
        }),
        (n.prototype.getValueColumns = function () {
          return this.viaApi('getValueColumns');
        }),
        (n.prototype.removeValueColumn = function (t) {
          this.viaApi('removeValueColumn', t);
        }),
        (n.prototype.removeValueColumns = function (t) {
          this.viaApi('removeValueColumns', t);
        }),
        (n.prototype.addValueColumn = function (t) {
          this.viaApi('addValueColumn', t);
        }),
        (n.prototype.addValueColumns = function (t) {
          this.viaApi('addValueColumns', t);
        }),
        (n.prototype.setRowGroupColumns = function (t) {
          this.viaApi('setRowGroupColumns', t);
        }),
        (n.prototype.removeRowGroupColumn = function (t) {
          this.viaApi('removeRowGroupColumn', t);
        }),
        (n.prototype.removeRowGroupColumns = function (t) {
          this.viaApi('removeRowGroupColumns', t);
        }),
        (n.prototype.addRowGroupColumn = function (t) {
          this.viaApi('addRowGroupColumn', t);
        }),
        (n.prototype.addRowGroupColumns = function (t) {
          this.viaApi('addRowGroupColumns', t);
        }),
        (n.prototype.getRowGroupColumns = function () {
          return this.viaApi('getRowGroupColumns');
        }),
        (n.prototype.setPivotColumns = function (t) {
          this.viaApi('setPivotColumns', t);
        }),
        (n.prototype.removePivotColumn = function (t) {
          this.viaApi('removePivotColumn', t);
        }),
        (n.prototype.removePivotColumns = function (t) {
          this.viaApi('removePivotColumns', t);
        }),
        (n.prototype.addPivotColumn = function (t) {
          this.viaApi('addPivotColumn', t);
        }),
        (n.prototype.addPivotColumns = function (t) {
          this.viaApi('addPivotColumns', t);
        }),
        (n.prototype.getPivotColumns = function () {
          return this.viaApi('getPivotColumns');
        }),
        (n.prototype.getLeftDisplayedColumnGroups = function () {
          return this.viaApi('getLeftDisplayedColumnGroups');
        }),
        (n.prototype.getCenterDisplayedColumnGroups = function () {
          return this.viaApi('getCenterDisplayedColumnGroups');
        }),
        (n.prototype.getRightDisplayedColumnGroups = function () {
          return this.viaApi('getRightDisplayedColumnGroups');
        }),
        (n.prototype.getAllDisplayedColumnGroups = function () {
          return this.viaApi('getAllDisplayedColumnGroups');
        }),
        (n.prototype.autoSizeColumn = function (t, e) {
          return this.viaApi('autoSizeColumn', t, e);
        }),
        (n.prototype.autoSizeColumns = function (t, e) {
          this.viaApi('autoSizeColumns', t, e);
        }),
        (n.prototype.autoSizeAllColumns = function (t) {
          this.viaApi('autoSizeAllColumns', t);
        }),
        (n.prototype.setPivotResultColumns = function (t) {
          this.viaApi('setPivotResultColumns', t);
        }),
        (n.prototype.getPivotResultColumns = function () {
          return this.viaApi('getPivotResultColumns');
        }),
        bu([v('gridApi')], n.prototype, 'api', void 0),
        (n = bu([x('columnApi')], n)),
        n
      );
    })(),
    _m = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    kr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Rm = (function (n) {
      _m(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.initialised = !1), (e.isSsrm = !1), e;
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          (this.isSsrm = this.gridOptionsService.isRowModelType('serverSide')),
            (this.cellExpressions = this.gridOptionsService.get('enableCellExpressions')),
            (this.isTreeData = this.gridOptionsService.get('treeData')),
            (this.initialised = !0);
          var r = function (i) {
              return e.callColumnCellValueChangedHandler(i);
            },
            o = this.gridOptionsService.useAsyncEvents();
          this.eventService.addEventListener(g.EVENT_CELL_VALUE_CHANGED, r, o),
            this.addDestroyFunc(function () {
              return e.eventService.removeEventListener(g.EVENT_CELL_VALUE_CHANGED, r, o);
            }),
            this.addManagedPropertyListener('treeData', function (i) {
              return (e.isTreeData = i.currentValue);
            });
        }),
        (t.prototype.getValue = function (e, r, o, i) {
          if (
            (o === void 0 && (o = !1),
            i === void 0 && (i = !1),
            this.initialised || this.init(),
            !!r)
          ) {
            var s = e.getColDef(),
              a = s.field,
              l = e.getColId(),
              u = r.data,
              c,
              p = r.groupData && r.groupData[l] !== void 0,
              d = !i && r.aggData && r.aggData[l] !== void 0,
              h = this.isSsrm && i && !!e.getColDef().aggFunc,
              f =
                this.isSsrm &&
                r.footer &&
                r.field &&
                (e.getColDef().showRowGroup === !0 || e.getColDef().showRowGroup === r.field);
            if (
              (o && s.filterValueGetter
                ? (c = this.executeFilterValueGetter(s.filterValueGetter, u, e, r))
                : this.isTreeData && d
                ? (c = r.aggData[l])
                : this.isTreeData && s.valueGetter
                ? (c = this.executeValueGetter(s.valueGetter, u, e, r))
                : this.isTreeData && a && u
                ? (c = wr(u, a, e.isFieldContainsDots()))
                : p
                ? (c = r.groupData[l])
                : d
                ? (c = r.aggData[l])
                : s.valueGetter
                ? (c = this.executeValueGetter(s.valueGetter, u, e, r))
                : f
                ? (c = wr(u, r.field, e.isFieldContainsDots()))
                : a && u && !h && (c = wr(u, a, e.isFieldContainsDots())),
              this.cellExpressions && typeof c == 'string' && c.indexOf('=') === 0)
            ) {
              var y = c.substring(1);
              c = this.executeValueGetter(y, u, e, r);
            }
            if (c == null) {
              var m = this.getOpenedGroup(r, e);
              if (m != null) return m;
            }
            return c;
          }
        }),
        (t.prototype.getOpenedGroup = function (e, r) {
          if (this.gridOptionsService.get('showOpenedGroup')) {
            var o = r.getColDef();
            if (o.showRowGroup)
              for (var i = r.getColDef().showRowGroup, s = e.parent; s != null; ) {
                if (s.rowGroupColumn && (i === !0 || i === s.rowGroupColumn.getColId()))
                  return s.key;
                s = s.parent;
              }
          }
        }),
        (t.prototype.setValue = function (e, r, o, i) {
          var s = this.columnModel.getPrimaryColumn(r);
          if (!e || !s) return !1;
          H(e.data) && (e.data = {});
          var a = s.getColDef(),
            l = a.field,
            u = a.valueSetter;
          if (H(l) && H(u))
            return (
              console.warn(
                'AG Grid: you need either field or valueSetter set on colDef for editing to work'
              ),
              !1
            );
          if (!this.dataTypeService.checkType(s, o))
            return (
              console.warn(
                'AG Grid: Data type of the new value does not match the cell data type of the column'
              ),
              !1
            );
          var c = this.gridOptionsService.addGridCommonParams({
            node: e,
            data: e.data,
            oldValue: this.getValue(s, e),
            newValue: o,
            colDef: s.getColDef(),
            column: s,
          });
          c.newValue = o;
          var p;
          if (
            (P(u)
              ? typeof u == 'function'
                ? (p = u(c))
                : (p = this.expressionService.evaluate(u, c))
              : (p = this.setValueUsingField(e.data, l, o, s.isFieldContainsDots())),
            p === void 0 && (p = !0),
            !p)
          )
            return !1;
          e.resetQuickFilterAggregateText(),
            this.valueCache.onDataChanged(),
            (c.newValue = this.getValue(s, e));
          var d = {
            type: g.EVENT_CELL_VALUE_CHANGED,
            event: null,
            rowIndex: e.rowIndex,
            rowPinned: e.rowPinned,
            column: c.column,
            api: c.api,
            columnApi: c.columnApi,
            colDef: c.colDef,
            context: c.context,
            data: e.data,
            node: e,
            oldValue: c.oldValue,
            newValue: c.newValue,
            value: c.newValue,
            source: i,
          };
          return this.eventService.dispatchEvent(d), !0;
        }),
        (t.prototype.callColumnCellValueChangedHandler = function (e) {
          var r = e.colDef.onCellValueChanged;
          typeof r == 'function' &&
            this.getFrameworkOverrides().wrapOutgoing(function () {
              r({
                node: e.node,
                data: e.data,
                oldValue: e.oldValue,
                newValue: e.newValue,
                colDef: e.colDef,
                column: e.column,
                api: e.api,
                columnApi: e.columnApi,
                context: e.context,
              });
            });
        }),
        (t.prototype.setValueUsingField = function (e, r, o, i) {
          if (!r) return !1;
          var s = !1;
          if (!i) (s = e[r] === o), s || (e[r] = o);
          else
            for (var a = r.split('.'), l = e; a.length > 0 && l; ) {
              var u = a.shift();
              a.length === 0 ? ((s = l[u] === o), s || (l[u] = o)) : (l = l[u]);
            }
          return !s;
        }),
        (t.prototype.executeFilterValueGetter = function (e, r, o, i) {
          var s = this.gridOptionsService.addGridCommonParams({
            data: r,
            node: i,
            column: o,
            colDef: o.getColDef(),
            getValue: this.getValueCallback.bind(this, i),
          });
          return typeof e == 'function' ? e(s) : this.expressionService.evaluate(e, s);
        }),
        (t.prototype.executeValueGetter = function (e, r, o, i) {
          var s = o.getColId(),
            a = this.valueCache.getValue(i, s);
          if (a !== void 0) return a;
          var l = this.gridOptionsService.addGridCommonParams({
              data: r,
              node: i,
              column: o,
              colDef: o.getColDef(),
              getValue: this.getValueCallback.bind(this, i),
            }),
            u;
          return (
            typeof e == 'function' ? (u = e(l)) : (u = this.expressionService.evaluate(e, l)),
            this.valueCache.setValue(i, s, u),
            u
          );
        }),
        (t.prototype.getValueCallback = function (e, r) {
          var o = this.columnModel.getPrimaryColumn(r);
          return o ? this.getValue(o, e) : null;
        }),
        (t.prototype.getKeyForNode = function (e, r) {
          var o = this.getValue(e, r),
            i = e.getColDef().keyCreator,
            s = o;
          if (i) {
            var a = this.gridOptionsService.addGridCommonParams({
              value: o,
              colDef: e.getColDef(),
              column: e,
              node: r,
              data: r.data,
            });
            s = i(a);
          }
          return (
            typeof s == 'string' ||
              s == null ||
              ((s = String(s)),
              s === '[object Object]' &&
                V(
                  'a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (se AG Grid docs) or b) to toString() on the object to return a key'
                )),
            s
          );
        }),
        kr([v('expressionService')], t.prototype, 'expressionService', void 0),
        kr([v('columnModel')], t.prototype, 'columnModel', void 0),
        kr([v('valueCache')], t.prototype, 'valueCache', void 0),
        kr([v('dataTypeService')], t.prototype, 'dataTypeService', void 0),
        kr([F], t.prototype, 'init', null),
        (t = kr([x('valueService')], t)),
        t
      );
    })(D),
    Om = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Lu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Tm = function (n, t) {
      return function (e, r) {
        t(e, r, n);
      };
    },
    Pm = (function (n) {
      Om(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.expressionToFunctionCache = {}), e;
      }
      return (
        (t.prototype.setBeans = function (e) {
          this.logger = e.create('ExpressionService');
        }),
        (t.prototype.evaluate = function (e, r) {
          if (typeof e == 'string') return this.evaluateExpression(e, r);
          console.error('AG Grid: value should be either a string or a function', e);
        }),
        (t.prototype.evaluateExpression = function (e, r) {
          try {
            var o = this.createExpressionFunction(e),
              i = o(
                r.value,
                r.context,
                r.oldValue,
                r.newValue,
                r.value,
                r.node,
                r.data,
                r.colDef,
                r.rowIndex,
                r.api,
                r.columnApi,
                r.getValue,
                r.column,
                r.columnGroup
              );
            return i;
          } catch (s) {
            return (
              console.log('Processing of the expression failed'),
              console.log('Expression = ' + e),
              console.log('Params =', r),
              console.log('Exception = ' + s),
              null
            );
          }
        }),
        (t.prototype.createExpressionFunction = function (e) {
          if (this.expressionToFunctionCache[e]) return this.expressionToFunctionCache[e];
          var r = this.createFunctionBody(e),
            o = new Function(
              'x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, columnApi, getValue, column, columnGroup',
              r
            );
          return (this.expressionToFunctionCache[e] = o), o;
        }),
        (t.prototype.createFunctionBody = function (e) {
          return e.indexOf('return') >= 0 ? e : 'return ' + e + ';';
        }),
        Lu([Tm(0, Ye('loggerFactory'))], t.prototype, 'setBeans', null),
        (t = Lu([x('expressionService')], t)),
        t
      );
    })(D),
    Dm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Am = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    bm = (function (n) {
      Dm(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.templateCache = {}), (e.waitingCallbacks = {}), e;
      }
      return (
        (t.prototype.getTemplate = function (e, r) {
          var o = this.templateCache[e];
          if (o) return o;
          var i = this.waitingCallbacks[e],
            s = this;
          if (!i) {
            (i = []), (this.waitingCallbacks[e] = i);
            var a = new XMLHttpRequest();
            (a.onload = function () {
              s.handleHttpResult(this, e);
            }),
              a.open('GET', e),
              a.send();
          }
          return r && i.push(r), null;
        }),
        (t.prototype.handleHttpResult = function (e, r) {
          if (e.status !== 200 || e.response === null) {
            console.warn(
              'AG Grid: Unable to get template error '.concat(e.status, ' - ').concat(r)
            );
            return;
          }
          this.templateCache[r] = e.response || e.responseText;
          for (var o = this.waitingCallbacks[r], i = 0; i < o.length; i++) {
            var s = o[i];
            s();
          }
        }),
        (t = Am([x('templateService')], t)),
        t
      );
    })(D),
    Fm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Mu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Lm = function (n, t) {
      return function (e, r) {
        t(e, r, n);
      };
    },
    Mm = (function (n) {
      Fm(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.setBeans = function (e) {
          this.logging = e.get('debug');
        }),
        (t.prototype.create = function (e) {
          return new Gs(e, this.isLogging.bind(this));
        }),
        (t.prototype.isLogging = function () {
          return this.logging;
        }),
        Mu([Lm(0, Ye('gridOptionsService'))], t.prototype, 'setBeans', null),
        (t = Mu([x('loggerFactory')], t)),
        t
      );
    })(D),
    Gs = (function () {
      function n(t, e) {
        (this.name = t), (this.isLoggingFunc = e);
      }
      return (
        (n.prototype.isLogging = function () {
          return this.isLoggingFunc();
        }),
        (n.prototype.log = function (t) {
          this.isLoggingFunc() && console.log('AG Grid.' + this.name + ': ' + t);
        }),
        n
      );
    })(),
    Im = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Wr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    xm = (function (n) {
      Im(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.setComp = function (e, r, o) {
          var i = this;
          (this.view = e),
            (this.eGridHostDiv = r),
            (this.eGui = o),
            this.eGui.setAttribute('grid-id', this.context.getGridId()),
            this.dragAndDropService.addDropTarget({
              getContainer: function () {
                return i.eGui;
              },
              isInterestedIn: function (a) {
                return a === Te.HeaderCell || a === Te.ToolPanel;
              },
              getIconName: function () {
                return he.ICON_NOT_ALLOWED;
              },
            }),
            this.mouseEventService.stampTopLevelGridCompWithGridInstance(r),
            this.createManagedBean(new ys(this.view)),
            this.addRtlSupport();
          var s = this.resizeObserverService.observeResize(
            this.eGridHostDiv,
            this.onGridSizeChanged.bind(this)
          );
          this.addDestroyFunc(function () {
            return s();
          }),
            this.ctrlsService.registerGridCtrl(this);
        }),
        (t.prototype.isDetailGrid = function () {
          var e,
            r = this.focusService.findTabbableParent(this.getGui());
          return (
            ((e = r == null ? void 0 : r.getAttribute('row-id')) === null || e === void 0
              ? void 0
              : e.startsWith('detail')) || !1
          );
        }),
        (t.prototype.showDropZones = function () {
          return X.__isRegistered(G.RowGroupingModule, this.context.getGridId());
        }),
        (t.prototype.showSideBar = function () {
          return X.__isRegistered(G.SideBarModule, this.context.getGridId());
        }),
        (t.prototype.showStatusBar = function () {
          return X.__isRegistered(G.StatusBarModule, this.context.getGridId());
        }),
        (t.prototype.showWatermark = function () {
          return X.__isRegistered(G.EnterpriseCoreModule, this.context.getGridId());
        }),
        (t.prototype.onGridSizeChanged = function () {
          var e = {
            type: g.EVENT_GRID_SIZE_CHANGED,
            clientWidth: this.eGridHostDiv.clientWidth,
            clientHeight: this.eGridHostDiv.clientHeight,
          };
          this.eventService.dispatchEvent(e);
        }),
        (t.prototype.addRtlSupport = function () {
          var e = this.gridOptionsService.get('enableRtl') ? 'ag-rtl' : 'ag-ltr';
          this.view.setRtlClass(e);
        }),
        (t.prototype.destroyGridUi = function () {
          this.view.destroyGridUi();
        }),
        (t.prototype.getGui = function () {
          return this.eGui;
        }),
        (t.prototype.setResizeCursor = function (e) {
          this.view.setCursor(e ? 'ew-resize' : null);
        }),
        (t.prototype.disableUserSelect = function (e) {
          this.view.setUserSelect(e ? 'none' : null);
        }),
        (t.prototype.focusNextInnerContainer = function (e) {
          var r = this.gridOptionsService.getDocument(),
            o = this.view.getFocusableContainers(),
            i = o.findIndex(function (a) {
              return a.contains(r.activeElement);
            }),
            s = i + (e ? -1 : 1);
          return s <= 0 || s >= o.length ? !1 : this.focusService.focusInto(o[s]);
        }),
        (t.prototype.focusInnerElement = function (e) {
          var r = this.view.getFocusableContainers(),
            o = this.columnModel.getAllDisplayedColumns();
          if (e) {
            if (r.length > 1) return this.focusService.focusInto(q(r), !0);
            var i = q(o);
            if (this.focusService.focusGridView(i, !0)) return !0;
          }
          if (
            this.gridOptionsService.get('headerHeight') === 0 ||
            this.gridOptionsService.get('suppressHeaderFocus')
          ) {
            if (this.focusService.focusGridView(o[0])) return !0;
            for (var s = 1; s < r.length; s++) if (this.focusService.focusInto(r[s])) return !0;
            return !1;
          }
          return this.focusService.focusFirstHeader();
        }),
        (t.prototype.forceFocusOutOfContainer = function (e) {
          e === void 0 && (e = !1), this.view.forceFocusOutOfContainer(e);
        }),
        Wr([v('focusService')], t.prototype, 'focusService', void 0),
        Wr([v('resizeObserverService')], t.prototype, 'resizeObserverService', void 0),
        Wr([v('columnModel')], t.prototype, 'columnModel', void 0),
        Wr([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Wr([v('mouseEventService')], t.prototype, 'mouseEventService', void 0),
        Wr([v('dragAndDropService')], t.prototype, 'dragAndDropService', void 0),
        t
      );
    })(D),
    Nm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    _o = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Gm = (function (n) {
      Nm(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (r.eGridDiv = e), r;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.logger = this.loggerFactory.create('GridComp');
          var r = {
            destroyGridUi: function () {
              return e.destroyBean(e);
            },
            setRtlClass: function (i) {
              return e.addCssClass(i);
            },
            forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),
            updateLayoutClasses: this.updateLayoutClasses.bind(this),
            getFocusableContainers: this.getFocusableContainers.bind(this),
            setUserSelect: function (i) {
              (e.getGui().style.userSelect = i ?? ''),
                (e.getGui().style.webkitUserSelect = i ?? '');
            },
            setCursor: function (i) {
              e.getGui().style.cursor = i ?? '';
            },
          };
          this.ctrl = this.createManagedBean(new xm());
          var o = this.createTemplate();
          this.setTemplate(o),
            this.ctrl.setComp(r, this.eGridDiv, this.getGui()),
            this.insertGridIntoDom(),
            this.initialiseTabGuard({
              onTabKeyDown: function () {},
              focusInnerElement: function (i) {
                return e.ctrl.focusInnerElement(i);
              },
              forceFocusOutWhenTabGuardsAreEmpty: !0,
            });
        }),
        (t.prototype.insertGridIntoDom = function () {
          var e = this,
            r = this.getGui();
          this.eGridDiv.appendChild(r),
            this.addDestroyFunc(function () {
              e.eGridDiv.removeChild(r), e.logger.log('Grid removed from DOM');
            });
        }),
        (t.prototype.updateLayoutClasses = function (e, r) {
          var o = this.eRootWrapperBody.classList;
          o.toggle(pe.AUTO_HEIGHT, r.autoHeight),
            o.toggle(pe.NORMAL, r.normal),
            o.toggle(pe.PRINT, r.print),
            this.addOrRemoveCssClass(pe.AUTO_HEIGHT, r.autoHeight),
            this.addOrRemoveCssClass(pe.NORMAL, r.normal),
            this.addOrRemoveCssClass(pe.PRINT, r.print);
        }),
        (t.prototype.createTemplate = function () {
          var e = this.ctrl.showDropZones()
              ? '<ag-grid-header-drop-zones></ag-grid-header-drop-zones>'
              : '',
            r = this.ctrl.showSideBar() ? '<ag-side-bar ref="sideBar"></ag-side-bar>' : '',
            o = this.ctrl.showStatusBar() ? '<ag-status-bar ref="statusBar"></ag-status-bar>' : '',
            i = this.ctrl.showWatermark() ? '<ag-watermark></ag-watermark>' : '',
            s = `<div class="ag-root-wrapper" role="presentation">
                `
              .concat(
                e,
                `
                <div class="ag-root-wrapper-body" ref="rootWrapperBody" role="presentation">
                    <ag-grid-body ref="gridBody"></ag-grid-body>
                    `
              )
              .concat(
                r,
                `
                </div>
                `
              )
              .concat(
                o,
                `
                <ag-pagination></ag-pagination>
                `
              )
              .concat(
                i,
                `
            </div>`
              );
          return s;
        }),
        (t.prototype.getFocusableElement = function () {
          return this.eRootWrapperBody;
        }),
        (t.prototype.getFocusableContainers = function () {
          var e = [this.gridBodyComp.getGui()];
          return (
            this.sideBarComp && e.push(this.sideBarComp.getGui()),
            e.filter(function (r) {
              return We(r);
            })
          );
        }),
        _o([v('loggerFactory')], t.prototype, 'loggerFactory', void 0),
        _o([L('gridBody')], t.prototype, 'gridBodyComp', void 0),
        _o([L('sideBar')], t.prototype, 'sideBarComp', void 0),
        _o([L('rootWrapperBody')], t.prototype, 'eRootWrapperBody', void 0),
        _o([F], t.prototype, 'postConstruct', null),
        t
      );
    })(yo),
    Vm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Iu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    St = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    $t = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    Hm = (function (n) {
      Vm(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      (e = t),
        (t.prototype.progressSort = function (r, o, i) {
          var s = this.getNextSortDirection(r);
          this.setSortForColumn(r, s, o, i);
        }),
        (t.prototype.setSortForColumn = function (r, o, i, s) {
          o !== 'asc' && o !== 'desc' && (o = null);
          var a = this.gridOptionsService.isColumnsSortingCoupledToGroup(),
            l = [r];
          if (a && r.getColDef().showRowGroup) {
            var u = this.columnModel.getSourceColumnsForGroupColumn(r),
              c =
                u == null
                  ? void 0
                  : u.filter(function (f) {
                      return f.isSortable();
                    });
            c && (l = $t([r], St(c), !1));
          }
          l.forEach(function (f) {
            return f.setSort(o, s);
          });
          var p =
              (i || this.gridOptionsService.get('alwaysMultiSort')) &&
              !this.gridOptionsService.get('suppressMultiSort'),
            d = [];
          if (!p) {
            var h = this.clearSortBarTheseColumns(l, s);
            d.push.apply(d, $t([], St(h), !1));
          }
          this.updateSortIndex(r),
            d.push.apply(d, $t([], St(l), !1)),
            this.dispatchSortChangedEvents(s, d);
        }),
        (t.prototype.updateSortIndex = function (r) {
          var o = this.gridOptionsService.isColumnsSortingCoupledToGroup(),
            i = this.columnModel.getGroupDisplayColumnForGroup(r.getId()),
            s = (o && i) || r,
            a = this.getColumnsWithSortingOrdered();
          this.columnModel.getPrimaryAndSecondaryAndAutoColumns().forEach(function (c) {
            return c.setSortIndex(null);
          });
          var l = a.filter(function (c) {
              return o && c.getColDef().showRowGroup ? !1 : c !== s;
            }),
            u = s.getSort() ? $t($t([], St(l), !1), [s], !1) : l;
          u.forEach(function (c, p) {
            c.setSortIndex(p);
          });
        }),
        (t.prototype.onSortChanged = function (r, o) {
          this.dispatchSortChangedEvents(r, o);
        }),
        (t.prototype.isSortActive = function () {
          var r = this.columnModel.getPrimaryAndSecondaryAndAutoColumns(),
            o = r.filter(function (i) {
              return !!i.getSort();
            });
          return o && o.length > 0;
        }),
        (t.prototype.dispatchSortChangedEvents = function (r, o) {
          var i = { type: g.EVENT_SORT_CHANGED, source: r };
          o && (i.columns = o), this.eventService.dispatchEvent(i);
        }),
        (t.prototype.clearSortBarTheseColumns = function (r, o) {
          var i = [];
          return (
            this.columnModel.getPrimaryAndSecondaryAndAutoColumns().forEach(function (s) {
              r.includes(s) || (s.getSort() && i.push(s), s.setSort(void 0, o));
            }),
            i
          );
        }),
        (t.prototype.getNextSortDirection = function (r) {
          var o;
          if (
            (r.getColDef().sortingOrder
              ? (o = r.getColDef().sortingOrder)
              : this.gridOptionsService.get('sortingOrder')
              ? (o = this.gridOptionsService.get('sortingOrder'))
              : (o = e.DEFAULT_SORTING_ORDER),
            !Array.isArray(o) || o.length <= 0)
          )
            return (
              console.warn(
                "AG Grid: sortingOrder must be an array with at least one element, currently it's ".concat(
                  o
                )
              ),
              null
            );
          var i = o.indexOf(r.getSort()),
            s = i < 0,
            a = i == o.length - 1,
            l;
          return (
            s || a ? (l = o[0]) : (l = o[i + 1]),
            e.DEFAULT_SORTING_ORDER.indexOf(l) < 0
              ? (console.warn('AG Grid: invalid sort type ' + l), null)
              : l
          );
        }),
        (t.prototype.getIndexedSortMap = function () {
          var r = this,
            o = this.columnModel.getPrimaryAndSecondaryAndAutoColumns().filter(function (c) {
              return !!c.getSort();
            });
          if (this.columnModel.isPivotMode()) {
            var i = this.gridOptionsService.isColumnsSortingCoupledToGroup();
            o = o.filter(function (c) {
              var p = !!c.getAggFunc(),
                d = !c.isPrimary(),
                h = i
                  ? r.columnModel.getGroupDisplayColumnForGroup(c.getId())
                  : c.getColDef().showRowGroup;
              return p || d || h;
            });
          }
          var s = this.columnModel.getRowGroupColumns().filter(function (c) {
              return !!c.getSort();
            }),
            a = this.gridOptionsService.isColumnsSortingCoupledToGroup() && !!s.length;
          a &&
            (o = $t(
              [],
              St(
                new Set(
                  o.map(function (c) {
                    var p;
                    return (p = r.columnModel.getGroupDisplayColumnForGroup(c.getId())) !== null &&
                      p !== void 0
                      ? p
                      : c;
                  })
                )
              ),
              !1
            ));
          var l = {};
          o.forEach(function (c, p) {
            return (l[c.getId()] = p);
          }),
            o.sort(function (c, p) {
              var d = c.getSortIndex(),
                h = p.getSortIndex();
              if (d != null && h != null) return d - h;
              if (d == null && h == null) {
                var f = l[c.getId()],
                  y = l[p.getId()];
                return f > y ? 1 : -1;
              } else return h == null ? -1 : 1;
            });
          var u = new Map();
          return (
            o.forEach(function (c, p) {
              return u.set(c, p);
            }),
            a &&
              s.forEach(function (c) {
                var p = r.columnModel.getGroupDisplayColumnForGroup(c.getId());
                u.set(c, u.get(p));
              }),
            u
          );
        }),
        (t.prototype.getColumnsWithSortingOrdered = function () {
          return $t([], St(this.getIndexedSortMap().entries()), !1)
            .sort(function (r, o) {
              var i = St(r, 2);
              i[0];
              var s = i[1],
                a = St(o, 2);
              a[0];
              var l = a[1];
              return s - l;
            })
            .map(function (r) {
              var o = St(r, 1),
                i = o[0];
              return i;
            });
        }),
        (t.prototype.getSortModel = function () {
          return this.getColumnsWithSortingOrdered()
            .filter(function (r) {
              return r.getSort();
            })
            .map(function (r) {
              return { sort: r.getSort(), colId: r.getId() };
            });
        }),
        (t.prototype.getSortOptions = function () {
          return this.getColumnsWithSortingOrdered()
            .filter(function (r) {
              return r.getSort();
            })
            .map(function (r) {
              return { sort: r.getSort(), column: r };
            });
        }),
        (t.prototype.canColumnDisplayMixedSort = function (r) {
          var o = this.gridOptionsService.isColumnsSortingCoupledToGroup(),
            i = !!r.getColDef().showRowGroup;
          return o && i;
        }),
        (t.prototype.getDisplaySortForColumn = function (r) {
          var o = this.columnModel.getSourceColumnsForGroupColumn(r);
          if (!this.canColumnDisplayMixedSort(r) || !(o != null && o.length)) return r.getSort();
          var i = r.getColDef().field != null || !!r.getColDef().valueGetter,
            s = i ? $t([r], St(o), !1) : o,
            a = s[0].getSort(),
            l = s.every(function (u) {
              return u.getSort() == a;
            });
          return l ? a : 'mixed';
        }),
        (t.prototype.getDisplaySortIndexForColumn = function (r) {
          return this.getIndexedSortMap().get(r);
        });
      var e;
      return (
        (t.DEFAULT_SORTING_ORDER = ['asc', 'desc', null]),
        Iu([v('columnModel')], t.prototype, 'columnModel', void 0),
        (t = e = Iu([x('sortController')], t)),
        t
      );
    })(D),
    Bm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ro = function () {
      return (
        (Ro =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Ro.apply(this, arguments)
      );
    },
    be = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Vs = (function (n) {
      Bm(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      (e = t),
        (t.addKeyboardModeEvents = function (r) {
          this.instanceCount > 0 ||
            (r.addEventListener('keydown', e.toggleKeyboardMode),
            r.addEventListener('mousedown', e.toggleKeyboardMode));
        }),
        (t.removeKeyboardModeEvents = function (r) {
          this.instanceCount > 0 ||
            (r.addEventListener('keydown', e.toggleKeyboardMode),
            r.addEventListener('mousedown', e.toggleKeyboardMode));
        }),
        (t.toggleKeyboardMode = function (r) {
          var o = e.keyboardModeActive,
            i = r.type === 'keydown';
          (i && (r.ctrlKey || r.metaKey || r.altKey)) || (o !== i && (e.keyboardModeActive = i));
        }),
        (t.unregisterGridCompController = function (r) {
          e.removeKeyboardModeEvents(r);
        }),
        (t.prototype.init = function () {
          var r = this,
            o = this.clearFocusedCell.bind(this);
          this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_MODE_CHANGED, o),
            this.addManagedListener(
              this.eventService,
              g.EVENT_NEW_COLUMNS_LOADED,
              this.onColumnEverythingChanged.bind(this)
            ),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_GROUP_OPENED, o),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, o),
            this.registerKeyboardFocusEvents(),
            this.ctrlsService.whenReady(function (i) {
              r.gridCtrl = i.gridCtrl;
            });
        }),
        (t.prototype.registerKeyboardFocusEvents = function () {
          var r = this.gridOptionsService.getDocument();
          e.addKeyboardModeEvents(r),
            e.instanceCount++,
            this.addDestroyFunc(function () {
              e.instanceCount--, e.unregisterGridCompController(r);
            });
        }),
        (t.prototype.onColumnEverythingChanged = function () {
          if (this.focusedCellPosition) {
            var r = this.focusedCellPosition.column,
              o = this.columnModel.getGridColumn(r.getId());
            r !== o && this.clearFocusedCell();
          }
        }),
        (t.prototype.isKeyboardMode = function () {
          return e.keyboardModeActive;
        }),
        (t.prototype.getFocusCellToUseAfterRefresh = function () {
          var r = this.gridOptionsService.getDocument();
          return this.gridOptionsService.get('suppressFocusAfterRefresh') ||
            !this.focusedCellPosition ||
            this.isDomDataMissingInHierarchy(r.activeElement, fr.DOM_DATA_KEY_ROW_CTRL)
            ? null
            : this.focusedCellPosition;
        }),
        (t.prototype.getFocusHeaderToUseAfterRefresh = function () {
          var r = this.gridOptionsService.getDocument();
          return this.gridOptionsService.get('suppressFocusAfterRefresh') ||
            !this.focusedHeaderPosition ||
            this.isDomDataMissingInHierarchy(r.activeElement, Si.DOM_DATA_KEY_HEADER_CTRL)
            ? null
            : this.focusedHeaderPosition;
        }),
        (t.prototype.isDomDataMissingInHierarchy = function (r, o) {
          for (var i = r; i; ) {
            var s = this.gridOptionsService.getDomData(i, o);
            if (s) return !1;
            i = i.parentNode;
          }
          return !0;
        }),
        (t.prototype.getFocusedCell = function () {
          return this.focusedCellPosition;
        }),
        (t.prototype.shouldRestoreFocus = function (r) {
          var o = this;
          return this.isCellRestoreFocused(r)
            ? (setTimeout(function () {
                o.restoredFocusedCellPosition = null;
              }, 0),
              !0)
            : !1;
        }),
        (t.prototype.isCellRestoreFocused = function (r) {
          return this.restoredFocusedCellPosition == null
            ? !1
            : this.cellPositionUtils.equals(r, this.restoredFocusedCellPosition);
        }),
        (t.prototype.setRestoreFocusedCell = function (r) {
          this.getFrameworkOverrides().renderingEngine === 'react' &&
            (this.restoredFocusedCellPosition = r);
        }),
        (t.prototype.getFocusEventParams = function () {
          var r = this.focusedCellPosition,
            o = r.rowIndex,
            i = r.rowPinned,
            s = r.column,
            a = { rowIndex: o, rowPinned: i, column: s, isFullWidthCell: !1 },
            l = this.rowRenderer.getRowByPosition({ rowIndex: o, rowPinned: i });
          return l && (a.isFullWidthCell = l.isFullWidth()), a;
        }),
        (t.prototype.clearFocusedCell = function () {
          if (((this.restoredFocusedCellPosition = null), this.focusedCellPosition != null)) {
            var r = Ro({ type: g.EVENT_CELL_FOCUS_CLEARED }, this.getFocusEventParams());
            (this.focusedCellPosition = null), this.eventService.dispatchEvent(r);
          }
        }),
        (t.prototype.setFocusedCell = function (r) {
          var o = r.column,
            i = r.rowIndex,
            s = r.rowPinned,
            a = r.forceBrowserFocus,
            l = a === void 0 ? !1 : a,
            u = r.preventScrollOnBrowserFocus,
            c = u === void 0 ? !1 : u,
            p = this.columnModel.getGridColumn(o);
          if (!p) {
            this.focusedCellPosition = null;
            return;
          }
          this.focusedCellPosition = p ? { rowIndex: i, rowPinned: ct(s), column: p } : null;
          var d = Ro(Ro({ type: g.EVENT_CELL_FOCUSED }, this.getFocusEventParams()), {
            forceBrowserFocus: l,
            preventScrollOnBrowserFocus: c,
            floating: null,
          });
          this.eventService.dispatchEvent(d);
        }),
        (t.prototype.isCellFocused = function (r) {
          return this.focusedCellPosition == null
            ? !1
            : this.cellPositionUtils.equals(r, this.focusedCellPosition);
        }),
        (t.prototype.isRowNodeFocused = function (r) {
          return this.isRowFocused(r.rowIndex, r.rowPinned);
        }),
        (t.prototype.isHeaderWrapperFocused = function (r) {
          if (this.focusedHeaderPosition == null) return !1;
          var o = r.getColumnGroupChild(),
            i = r.getRowIndex(),
            s = r.getPinned(),
            a = this.focusedHeaderPosition,
            l = a.column,
            u = a.headerRowIndex;
          return o === l && i === u && s == l.getPinned();
        }),
        (t.prototype.clearFocusedHeader = function () {
          this.focusedHeaderPosition = null;
        }),
        (t.prototype.getFocusedHeader = function () {
          return this.focusedHeaderPosition;
        }),
        (t.prototype.setFocusedHeader = function (r, o) {
          this.focusedHeaderPosition = { headerRowIndex: r, column: o };
        }),
        (t.prototype.focusHeaderPosition = function (r) {
          if (this.gridOptionsService.get('suppressHeaderFocus')) return !1;
          var o = r.direction,
            i = r.fromTab,
            s = r.allowUserOverride,
            a = r.event,
            l = r.fromCell,
            u = r.rowWithoutSpanValue,
            c = r.headerPosition;
          if (l && this.filterManager.isAdvancedFilterHeaderActive())
            return this.focusAdvancedFilter(c);
          if (s) {
            var p = this.getFocusedHeader(),
              d = this.headerNavigationService.getHeaderRowCount();
            if (i) {
              var h = this.gridOptionsService.getCallback('tabToNextHeader');
              if (h) {
                var f = {
                  backwards: o === 'Before',
                  previousHeaderPosition: p,
                  nextHeaderPosition: c,
                  headerRowCount: d,
                };
                c = h(f);
              }
            } else {
              var h = this.gridOptionsService.getCallback('navigateToNextHeader');
              if (h && a) {
                var y = {
                  key: a.key,
                  previousHeaderPosition: p,
                  nextHeaderPosition: c,
                  headerRowCount: d,
                  event: a,
                };
                c = h(y);
              }
            }
          }
          if (!c) return !1;
          if (c.headerRowIndex === -1)
            return this.filterManager.isAdvancedFilterHeaderActive()
              ? this.focusAdvancedFilter(c)
              : this.focusGridView(c.column);
          this.headerNavigationService.scrollToColumn(c.column, o);
          var m = this.ctrlsService.getHeaderRowContainerCtrl(c.column.getPinned()),
            C = m.focusHeader(c.headerRowIndex, c.column, a);
          return (
            C &&
              (u != null || l) &&
              this.headerNavigationService.setCurrentHeaderRowWithoutSpan(u ?? -1),
            C
          );
        }),
        (t.prototype.focusFirstHeader = function () {
          var r = this.columnModel.getAllDisplayedColumns()[0];
          if (!r) return !1;
          r.getParent() && (r = this.columnModel.getColumnGroupAtLevel(r, 0));
          var o = this.headerPositionUtils.getHeaderIndexToFocus(r, 0);
          return this.focusHeaderPosition({ headerPosition: o, rowWithoutSpanValue: 0 });
        }),
        (t.prototype.focusLastHeader = function (r) {
          var o = this.headerNavigationService.getHeaderRowCount() - 1,
            i = q(this.columnModel.getAllDisplayedColumns());
          return this.focusHeaderPosition({
            headerPosition: { headerRowIndex: o, column: i },
            rowWithoutSpanValue: -1,
            event: r,
          });
        }),
        (t.prototype.focusPreviousFromFirstCell = function (r) {
          return this.filterManager.isAdvancedFilterHeaderActive()
            ? this.focusAdvancedFilter(null)
            : this.focusLastHeader(r);
        }),
        (t.prototype.isAnyCellFocused = function () {
          return !!this.focusedCellPosition;
        }),
        (t.prototype.isRowFocused = function (r, o) {
          return this.focusedCellPosition == null
            ? !1
            : this.focusedCellPosition.rowIndex === r &&
                this.focusedCellPosition.rowPinned === ct(o);
        }),
        (t.prototype.findFocusableElements = function (r, o, i) {
          i === void 0 && (i = !1);
          var s = Za,
            a = Gn;
          o && (a += ', ' + o), i && (a += ', [tabindex="-1"]');
          var l = Array.prototype.slice.apply(r.querySelectorAll(s)).filter(function (p) {
              return We(p);
            }),
            u = Array.prototype.slice.apply(r.querySelectorAll(a));
          if (!u.length) return l;
          var c = function (p, d) {
            return p.filter(function (h) {
              return d.indexOf(h) === -1;
            });
          };
          return c(l, u);
        }),
        (t.prototype.focusInto = function (r, o, i) {
          o === void 0 && (o = !1), i === void 0 && (i = !1);
          var s = this.findFocusableElements(r, null, i),
            a = o ? q(s) : s[0];
          return a ? (a.focus({ preventScroll: !0 }), !0) : !1;
        }),
        (t.prototype.findFocusableElementBeforeTabGuard = function (r, o) {
          if (!o) return null;
          var i = this.findFocusableElements(r),
            s = i.indexOf(o);
          if (s === -1) return null;
          for (var a = -1, l = s - 1; l >= 0; l--)
            if (i[l].classList.contains(Hr.TAB_GUARD_TOP)) {
              a = l;
              break;
            }
          return a <= 0 ? null : i[a - 1];
        }),
        (t.prototype.findNextFocusableElement = function (r, o, i) {
          r === void 0 && (r = this.eGridDiv);
          var s = this.findFocusableElements(r, o ? ':not([tabindex="-1"])' : null),
            a = this.gridOptionsService.getDocument(),
            l = a.activeElement,
            u;
          o
            ? (u = s.findIndex(function (p) {
                return p.contains(l);
              }))
            : (u = s.indexOf(l));
          var c = u + (i ? -1 : 1);
          return c < 0 || c >= s.length ? null : s[c];
        }),
        (t.prototype.isTargetUnderManagedComponent = function (r, o) {
          if (!o) return !1;
          var i = r.querySelectorAll('.'.concat(ar.FOCUS_MANAGED_CLASS));
          if (!i.length) return !1;
          for (var s = 0; s < i.length; s++) if (i[s].contains(o)) return !0;
          return !1;
        }),
        (t.prototype.findTabbableParent = function (r, o) {
          o === void 0 && (o = 5);
          for (var i = 0; r && Yo(r) === null && ++i <= o; ) r = r.parentElement;
          return Yo(r) === null ? null : r;
        }),
        (t.prototype.focusGridView = function (r, o) {
          if (this.gridOptionsService.get('suppressCellFocus'))
            return o
              ? this.gridOptionsService.get('suppressHeaderFocus')
                ? this.focusNextGridCoreContainer(!0, !0)
                : this.focusLastHeader()
              : this.focusNextGridCoreContainer(!1);
          var i = o ? this.rowPositionUtils.getLastRow() : this.rowPositionUtils.getFirstRow();
          if (!i) return !1;
          var s = i.rowIndex,
            a = i.rowPinned,
            l = this.getFocusedHeader();
          if ((!r && l && (r = l.column), s == null || !r)) return !1;
          if (
            (this.navigationService.ensureCellVisible({ rowIndex: s, column: r, rowPinned: a }),
            this.setFocusedCell({
              rowIndex: s,
              column: r,
              rowPinned: ct(a),
              forceBrowserFocus: !0,
            }),
            this.rangeService)
          ) {
            var u = { rowIndex: s, rowPinned: a, column: r };
            this.rangeService.setRangeToCell(u);
          }
          return !0;
        }),
        (t.prototype.focusNextGridCoreContainer = function (r, o) {
          return (
            o === void 0 && (o = !1),
            !o && this.gridCtrl.focusNextInnerContainer(r)
              ? !0
              : ((o || (!r && !this.gridCtrl.isDetailGrid())) &&
                  this.gridCtrl.forceFocusOutOfContainer(r),
                !1)
          );
        }),
        (t.prototype.focusAdvancedFilter = function (r) {
          return (
            (this.advancedFilterFocusColumn = r == null ? void 0 : r.column),
            this.advancedFilterService.getCtrl().focusHeaderComp()
          );
        }),
        (t.prototype.focusNextFromAdvancedFilter = function (r, o) {
          var i,
            s,
            a =
              (i = o ? void 0 : this.advancedFilterFocusColumn) !== null && i !== void 0
                ? i
                : (s = this.columnModel.getAllDisplayedColumns()) === null || s === void 0
                ? void 0
                : s[0];
          return r
            ? this.focusHeaderPosition({
                headerPosition: {
                  column: a,
                  headerRowIndex: this.headerNavigationService.getHeaderRowCount() - 1,
                },
              })
            : this.focusGridView(a);
        }),
        (t.prototype.clearAdvancedFilterColumn = function () {
          this.advancedFilterFocusColumn = void 0;
        });
      var e;
      return (
        (t.keyboardModeActive = !1),
        (t.instanceCount = 0),
        be([v('eGridDiv')], t.prototype, 'eGridDiv', void 0),
        be([v('columnModel')], t.prototype, 'columnModel', void 0),
        be([v('headerNavigationService')], t.prototype, 'headerNavigationService', void 0),
        be([v('headerPositionUtils')], t.prototype, 'headerPositionUtils', void 0),
        be([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        be([v('rowPositionUtils')], t.prototype, 'rowPositionUtils', void 0),
        be([v('cellPositionUtils')], t.prototype, 'cellPositionUtils', void 0),
        be([Y('rangeService')], t.prototype, 'rangeService', void 0),
        be([v('navigationService')], t.prototype, 'navigationService', void 0),
        be([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        be([v('filterManager')], t.prototype, 'filterManager', void 0),
        be([Y('advancedFilterService')], t.prototype, 'advancedFilterService', void 0),
        be([F], t.prototype, 'init', null),
        (t = e = be([x('focusService')], t)),
        t
      );
    })(D),
    km = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Wm = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    jm = (function (n) {
      km(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.setMouseOver = function (e) {
          this.selectedColumns = e;
          var r = { type: g.EVENT_COLUMN_HOVER_CHANGED };
          this.eventService.dispatchEvent(r);
        }),
        (t.prototype.clearMouseOver = function () {
          this.selectedColumns = null;
          var e = { type: g.EVENT_COLUMN_HOVER_CHANGED };
          this.eventService.dispatchEvent(e);
        }),
        (t.prototype.isHovered = function (e) {
          return !!this.selectedColumns && this.selectedColumns.indexOf(e) >= 0;
        }),
        (t = Wm([x('columnHoverService')], t)),
        t
      );
    })(D),
    Um = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Hs = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    zm = (function (n) {
      Um(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.executeNextFuncs = []),
          (e.executeLaterFuncs = []),
          (e.active = !1),
          (e.suppressAnimation = !1),
          (e.animationThreadCount = 0),
          e
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.ctrlsService.whenReady(function (r) {
            return (e.gridBodyCtrl = r.gridBodyCtrl);
          });
        }),
        (t.prototype.isActive = function () {
          return this.active && !this.suppressAnimation;
        }),
        (t.prototype.setSuppressAnimation = function (e) {
          this.suppressAnimation = e;
        }),
        (t.prototype.start = function () {
          this.active ||
            this.gridOptionsService.get('suppressColumnMoveAnimation') ||
            this.gridOptionsService.get('enableRtl') ||
            (this.ensureAnimationCssClassPresent(), (this.active = !0));
        }),
        (t.prototype.finish = function () {
          var e = this;
          this.active &&
            this.flush(function () {
              e.active = !1;
            });
        }),
        (t.prototype.executeNextVMTurn = function (e) {
          this.active ? this.executeNextFuncs.push(e) : e();
        }),
        (t.prototype.executeLaterVMTurn = function (e) {
          this.active ? this.executeLaterFuncs.push(e) : e();
        }),
        (t.prototype.ensureAnimationCssClassPresent = function () {
          var e = this;
          this.animationThreadCount++;
          var r = this.animationThreadCount;
          this.gridBodyCtrl.setColumnMovingCss(!0),
            this.executeLaterFuncs.push(function () {
              e.animationThreadCount === r && e.gridBodyCtrl.setColumnMovingCss(!1);
            });
        }),
        (t.prototype.flush = function (e) {
          var r = this;
          if (this.executeNextFuncs.length === 0 && this.executeLaterFuncs.length === 0) {
            e();
            return;
          }
          var o = function (i) {
            for (; i.length; ) {
              var s = i.pop();
              s && s();
            }
          };
          this.getFrameworkOverrides().wrapIncoming(function () {
            window.setTimeout(function () {
              return o(r.executeNextFuncs);
            }, 0),
              window.setTimeout(function () {
                o(r.executeLaterFuncs), e();
              }, 200);
          });
        }),
        Hs([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Hs([F], t.prototype, 'postConstruct', null),
        (t = Hs([x('columnAnimationService')], t)),
        t
      );
    })(D),
    Km = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    xi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    $m = (function (n) {
      Km(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.ctrlsService.whenReady(function (r) {
            (e.centerRowContainerCon = r.centerRowContainerCtrl),
              e.addManagedListener(
                e.eventService,
                g.EVENT_BODY_HEIGHT_CHANGED,
                e.checkPageSize.bind(e)
              ),
              e.addManagedListener(
                e.eventService,
                g.EVENT_SCROLL_VISIBILITY_CHANGED,
                e.checkPageSize.bind(e)
              ),
              e.addManagedPropertyListener(
                'paginationAutoPageSize',
                e.onPaginationAutoSizeChanged.bind(e)
              ),
              e.checkPageSize();
          });
        }),
        (t.prototype.notActive = function () {
          return (
            !this.gridOptionsService.get('paginationAutoPageSize') ||
            this.centerRowContainerCon == null
          );
        }),
        (t.prototype.onPaginationAutoSizeChanged = function () {
          this.notActive()
            ? this.paginationProxy.unsetAutoCalculatedPageSize()
            : this.checkPageSize();
        }),
        (t.prototype.checkPageSize = function () {
          var e = this;
          if (!this.notActive()) {
            var r = this.centerRowContainerCon.getViewportSizeFeature().getBodyHeight();
            if (r > 0) {
              var o = function () {
                var i = e.gridOptionsService.getRowHeightAsNumber(),
                  s = Math.floor(r / i);
                e.paginationProxy.setPageSize(s, 'autoCalculated');
              };
              this.isBodyRendered
                ? He(function () {
                    return o();
                  }, 50)()
                : (o(), (this.isBodyRendered = !0));
            } else this.isBodyRendered = !1;
          }
        }),
        xi([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        xi([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        xi([F], t.prototype, 'postConstruct', null),
        (t = xi([x('paginationAutoPageSizeService')], t)),
        t
      );
    })(D),
    Ym = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    xu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    qm = (function (n) {
      Ym(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.cacheVersion = 0), e;
      }
      return (
        (t.prototype.init = function () {
          (this.active = this.gridOptionsService.get('valueCache')),
            (this.neverExpires = this.gridOptionsService.get('valueCacheNeverExpires'));
        }),
        (t.prototype.onDataChanged = function () {
          this.neverExpires || this.expire();
        }),
        (t.prototype.expire = function () {
          this.cacheVersion++;
        }),
        (t.prototype.setValue = function (e, r, o) {
          this.active &&
            (e.__cacheVersion !== this.cacheVersion &&
              ((e.__cacheVersion = this.cacheVersion), (e.__cacheData = {})),
            (e.__cacheData[r] = o));
        }),
        (t.prototype.getValue = function (e, r) {
          if (!(!this.active || e.__cacheVersion !== this.cacheVersion)) return e.__cacheData[r];
        }),
        xu([F], t.prototype, 'init', null),
        (t = xu([x('valueCache')], t)),
        t
      );
    })(D),
    Qm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ni = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Xm = 'paste',
    Jm = (function (n) {
      Qm(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.init = function () {
          this.rowModel.getType() === 'clientSide' && (this.clientSideRowModel = this.rowModel),
            this.addManagedListener(
              this.eventService,
              g.EVENT_CELL_VALUE_CHANGED,
              this.onCellValueChanged.bind(this)
            );
        }),
        (t.prototype.onCellValueChanged = function (e) {
          e.source !== Xm && this.doChangeDetection(e.node, e.column);
        }),
        (t.prototype.doChangeDetection = function (e, r) {
          if (!this.gridOptionsService.get('suppressChangeDetection')) {
            var o = [e];
            if (this.clientSideRowModel && !e.isRowPinned()) {
              var i = this.gridOptionsService.get('aggregateOnlyChangedColumns'),
                s = new Ti(i, this.clientSideRowModel.getRootNode());
              s.addParentNode(e.parent, [r]),
                this.clientSideRowModel.doAggregate(s),
                s.forEachChangedNodeDepthFirst(function (a) {
                  o.push(a);
                });
            }
            this.rowRenderer.refreshCells({ rowNodes: o });
          }
        }),
        Ni([v('rowModel')], t.prototype, 'rowModel', void 0),
        Ni([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        Ni([F], t.prototype, 'init', null),
        (t = Ni([x('changeDetectionService')], t)),
        t
      );
    })(D),
    Zm = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Nu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    eC = (function (n) {
      Zm(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.adaptFunction = function (e, r) {
          var o = this.componentMetadataProvider.retrieve(e);
          return o && o.functionAdapter ? o.functionAdapter(r) : null;
        }),
        (t.prototype.adaptCellRendererFunction = function (e) {
          var r = (function () {
            function o() {}
            return (
              (o.prototype.refresh = function (i) {
                return !1;
              }),
              (o.prototype.getGui = function () {
                return this.eGui;
              }),
              (o.prototype.init = function (i) {
                var s = e(i),
                  a = typeof s;
                if (a === 'string' || a === 'number' || a === 'boolean') {
                  this.eGui = Re('<span>' + s + '</span>');
                  return;
                }
                if (s == null) {
                  this.eGui = Re('<span></span>');
                  return;
                }
                this.eGui = s;
              }),
              o
            );
          })();
          return r;
        }),
        (t.prototype.doesImplementIComponent = function (e) {
          return e ? e.prototype && 'getGui' in e.prototype : !1;
        }),
        Nu([v('componentMetadataProvider')], t.prototype, 'componentMetadataProvider', void 0),
        (t = Nu([x('agComponentUtils')], t)),
        t
      );
    })(D),
    tC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Bs = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    rC = (function (n) {
      tC(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.componentMetaData = {
            dateComponent: {
              mandatoryMethodList: ['getDate', 'setDate'],
              optionalMethodList: [
                'afterGuiAttached',
                'setInputPlaceholder',
                'setInputAriaLabel',
                'setDisabled',
                'onParamsUpdated',
                'refresh',
              ],
            },
            detailCellRenderer: {
              mandatoryMethodList: [],
              optionalMethodList: ['refresh'],
              functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(
                this.agComponentUtils
              ),
            },
            headerComponent: { mandatoryMethodList: [], optionalMethodList: ['refresh'] },
            headerGroupComponent: { mandatoryMethodList: [], optionalMethodList: [] },
            loadingCellRenderer: { mandatoryMethodList: [], optionalMethodList: [] },
            loadingOverlayComponent: { mandatoryMethodList: [], optionalMethodList: ['refresh'] },
            noRowsOverlayComponent: { mandatoryMethodList: [], optionalMethodList: ['refresh'] },
            floatingFilterComponent: {
              mandatoryMethodList: ['onParentModelChanged'],
              optionalMethodList: ['afterGuiAttached', 'onParamsUpdated', 'refresh'],
            },
            cellRenderer: {
              mandatoryMethodList: [],
              optionalMethodList: ['refresh', 'afterGuiAttached'],
              functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(
                this.agComponentUtils
              ),
            },
            cellEditor: {
              mandatoryMethodList: ['getValue'],
              optionalMethodList: [
                'isPopup',
                'isCancelBeforeStart',
                'isCancelAfterEnd',
                'getPopupPosition',
                'focusIn',
                'focusOut',
                'afterGuiAttached',
                'refresh',
              ],
            },
            innerRenderer: {
              mandatoryMethodList: [],
              optionalMethodList: ['afterGuiAttached'],
              functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(
                this.agComponentUtils
              ),
            },
            fullWidthCellRenderer: {
              mandatoryMethodList: [],
              optionalMethodList: ['refresh', 'afterGuiAttached'],
              functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(
                this.agComponentUtils
              ),
            },
            groupRowRenderer: {
              mandatoryMethodList: [],
              optionalMethodList: ['afterGuiAttached'],
              functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(
                this.agComponentUtils
              ),
            },
            filter: {
              mandatoryMethodList: ['isFilterActive', 'doesFilterPass', 'getModel', 'setModel'],
              optionalMethodList: [
                'afterGuiAttached',
                'afterGuiDetached',
                'onNewRowsLoaded',
                'getModelAsString',
                'onFloatingFilterChanged',
                'onAnyFilterChanged',
                'refresh',
              ],
            },
            statusPanel: { mandatoryMethodList: [], optionalMethodList: ['refresh'] },
            toolPanel: { mandatoryMethodList: [], optionalMethodList: ['refresh', 'getState'] },
            tooltipComponent: { mandatoryMethodList: [], optionalMethodList: [] },
            menuItem: {
              mandatoryMethodList: [],
              optionalMethodList: ['setActive', 'select', 'setExpanded', 'configureDefaults'],
            },
          };
        }),
        (t.prototype.retrieve = function (e) {
          return this.componentMetaData[e];
        }),
        Bs([v('agComponentUtils')], t.prototype, 'agComponentUtils', void 0),
        Bs([F], t.prototype, 'postConstruct', null),
        (t = Bs([x('componentMetadataProvider')], t)),
        t
      );
    })(D),
    oC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ks = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    iC = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    nC = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    sC = 25,
    Gu = 10,
    Ws = 8,
    aC = 4,
    js = 4,
    Us = 6,
    lC = 16,
    Vu = 14,
    zs = 8,
    uC = {
      'ag-theme-custom': {
        headerHeight: 25,
        headerCellMinWidth: 24,
        listItemHeight: aC * 5,
        rowHeight: 25,
        chartMenuPanelWidth: 220,
      },
      'ag-theme-material': {
        headerHeight: Ws * 7,
        headerCellMinWidth: 48,
        listItemHeight: Ws * 4,
        rowHeight: Ws * 6,
        chartMenuPanelWidth: 240,
      },
      'ag-theme-balham': {
        headerHeight: js * 8,
        headerCellMinWidth: 24,
        listItemHeight: js * 6,
        rowHeight: js * 7,
        chartMenuPanelWidth: 220,
      },
      'ag-theme-alpine': {
        headerHeight: Us * 8,
        headerCellMinWidth: 36,
        listItemHeight: Us * 4,
        rowHeight: Us * 7,
        chartMenuPanelWidth: 240,
      },
      'ag-theme-quartz': {
        headerHeight: Vu + zs * 4.25,
        headerCellMinWidth: 36,
        listItemHeight: lC + zs,
        rowHeight: Vu + zs * 3.5,
        chartMenuPanelWidth: 260,
      },
    },
    Hu = {
      headerHeight: ['ag-header-row'],
      headerCellMinWidth: ['ag-header-cell'],
      listItemHeight: ['ag-virtual-list-item'],
      rowHeight: ['ag-row'],
      chartMenuPanelWidth: ['ag-chart-docked-container'],
    },
    cC = (function (n) {
      oC(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.calculatedSizes = {}), e;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this,
            r,
            o = (r = this.getTheme().el) !== null && r !== void 0 ? r : this.eGridDiv;
          this.addManagedPropertyListener('rowHeight', function () {
            return e.refreshRowHeightVariable();
          }),
            (this.mutationObserver = new MutationObserver(function () {
              (e.calculatedSizes = {}), e.fireGridStylesChangedEvent();
            })),
            this.mutationObserver.observe(o || this.eGridDiv, {
              attributes: !0,
              attributeFilter: ['class'],
            });
        }),
        (t.prototype.fireGridStylesChangedEvent = function () {
          var e = { type: g.EVENT_GRID_STYLES_CHANGED };
          this.eventService.dispatchEvent(e);
        }),
        (t.prototype.getSassVariable = function (e) {
          var r = this.getTheme(),
            o = r.themeFamily,
            i = r.el;
          if (!(!o || o.indexOf('ag-theme') !== 0)) {
            this.calculatedSizes || (this.calculatedSizes = {}),
              this.calculatedSizes[o] || (this.calculatedSizes[o] = {});
            var s = this.calculatedSizes[o][e];
            return (
              s ??
              ((this.calculatedSizes[o][e] = this.calculateValueForSassProperty(e, o, i)),
              this.calculatedSizes[o][e])
            );
          }
        }),
        (t.prototype.calculateValueForSassProperty = function (e, r, o) {
          var i,
            s =
              'ag-theme-' +
              (r.match('material')
                ? 'material'
                : r.match('balham')
                ? 'balham'
                : r.match('alpine')
                ? 'alpine'
                : 'custom'),
            a = uC[s][e],
            l = this.gridOptionsService.getDocument();
          if ((o || (o = this.eGridDiv), !Hu[e])) return a;
          var u = Hu[e],
            c = l.createElement('div'),
            p = Array.from(o.classList);
          (i = c.classList).add.apply(i, nC([r], iC(p), !1)), (c.style.position = 'absolute');
          var d = u.reduce(function (y, m) {
              var C = l.createElement('div');
              return (C.style.position = 'static'), C.classList.add(m), y.appendChild(C), C;
            }, c),
            h = 0;
          if (l.body) {
            l.body.appendChild(c);
            var f = e.toLowerCase().indexOf('height') !== -1 ? 'height' : 'width';
            (h = parseInt(window.getComputedStyle(d)[f], 10)), l.body.removeChild(c);
          }
          return h || a;
        }),
        (t.prototype.isThemeDark = function () {
          var e = this.getTheme().theme;
          return !!e && e.indexOf('dark') >= 0;
        }),
        (t.prototype.chartMenuPanelWidth = function () {
          return this.getSassVariable('chartMenuPanelWidth');
        }),
        (t.prototype.getTheme = function () {
          for (
            var e = /\bag-(material|(?:theme-([\w\-]*)))\b/g, r = this.eGridDiv, o = null, i = [];
            r;

          )
            if (((o = e.exec(r.className)), !o)) r = r.parentElement || void 0;
            else {
              var s = r.className.match(e);
              s && (i = s);
              break;
            }
          if (!o) return { allThemes: i };
          var a = o[0];
          return { theme: a, el: r, themeFamily: a.replace(/-dark$/, ''), allThemes: i };
        }),
        (t.prototype.getFromTheme = function (e, r) {
          var o;
          return (o = this.getSassVariable(r)) !== null && o !== void 0 ? o : e;
        }),
        (t.prototype.getDefaultRowHeight = function () {
          return this.getFromTheme(sC, 'rowHeight');
        }),
        (t.prototype.getListItemHeight = function () {
          return this.getFromTheme(20, 'listItemHeight');
        }),
        (t.prototype.refreshRowHeightVariable = function () {
          var e = this.eGridDiv.style.getPropertyValue('--ag-line-height').trim(),
            r = this.gridOptionsService.get('rowHeight');
          if (r == null || isNaN(r) || !isFinite(r))
            return e !== null && this.eGridDiv.style.setProperty('--ag-line-height', null), -1;
          var o = ''.concat(r, 'px');
          return e != o
            ? (this.eGridDiv.style.setProperty('--ag-line-height', o), r)
            : e != ''
            ? parseFloat(e)
            : -1;
        }),
        (t.prototype.getMinColWidth = function () {
          var e = this.getFromTheme(null, 'headerCellMinWidth');
          return P(e) ? Math.max(e, Gu) : Gu;
        }),
        (t.prototype.destroy = function () {
          (this.calculatedSizes = null),
            this.mutationObserver && this.mutationObserver.disconnect(),
            n.prototype.destroy.call(this);
        }),
        ks([v('eGridDiv')], t.prototype, 'eGridDiv', void 0),
        ks([F], t.prototype, 'postConstruct', null),
        (t = ks([x('environment')], t)),
        t
      );
    })(D),
    pC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Gi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    dC = function (n, t) {
      return function (e, r) {
        t(e, r, n);
      };
    },
    hC = (function (n) {
      pC(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.scrollY = 0), (e.uiBodyHeight = 0), e;
      }
      return (
        (t.prototype.agWire = function (e) {
          this.logger = e.create('RowContainerHeightService');
        }),
        (t.prototype.postConstruct = function () {
          this.addManagedListener(
            this.eventService,
            g.EVENT_BODY_HEIGHT_CHANGED,
            this.updateOffset.bind(this)
          ),
            (this.maxDivHeight = $a()),
            this.logger.log('maxDivHeight = ' + this.maxDivHeight);
        }),
        (t.prototype.isStretching = function () {
          return this.stretching;
        }),
        (t.prototype.getDivStretchOffset = function () {
          return this.divStretchOffset;
        }),
        (t.prototype.updateOffset = function () {
          if (this.stretching) {
            var e = this.ctrlsService.getGridBodyCtrl(),
              r = e.getScrollFeature().getVScrollPosition().top,
              o = this.getUiBodyHeight(),
              i = r !== this.scrollY || o !== this.uiBodyHeight;
            i && ((this.scrollY = r), (this.uiBodyHeight = o), this.calculateOffset());
          }
        }),
        (t.prototype.calculateOffset = function () {
          this.setUiContainerHeight(this.maxDivHeight),
            (this.pixelsToShave = this.modelHeight - this.uiContainerHeight),
            (this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight);
          var e = this.scrollY / this.maxScrollY,
            r = e * this.pixelsToShave;
          this.logger.log(
            'Div Stretch Offset = '.concat(r, ' (').concat(this.pixelsToShave, ' * ').concat(e, ')')
          ),
            this.setDivStretchOffset(r);
        }),
        (t.prototype.setUiContainerHeight = function (e) {
          e !== this.uiContainerHeight &&
            ((this.uiContainerHeight = e),
            this.eventService.dispatchEvent({ type: g.EVENT_ROW_CONTAINER_HEIGHT_CHANGED }));
        }),
        (t.prototype.clearOffset = function () {
          this.setUiContainerHeight(this.modelHeight),
            (this.pixelsToShave = 0),
            this.setDivStretchOffset(0);
        }),
        (t.prototype.setDivStretchOffset = function (e) {
          var r = typeof e == 'number' ? Math.floor(e) : null;
          this.divStretchOffset !== r &&
            ((this.divStretchOffset = r),
            this.eventService.dispatchEvent({ type: g.EVENT_HEIGHT_SCALE_CHANGED }));
        }),
        (t.prototype.setModelHeight = function (e) {
          (this.modelHeight = e),
            (this.stretching = e != null && this.maxDivHeight > 0 && e > this.maxDivHeight),
            this.stretching ? this.calculateOffset() : this.clearOffset();
        }),
        (t.prototype.getUiContainerHeight = function () {
          return this.uiContainerHeight;
        }),
        (t.prototype.getRealPixelPosition = function (e) {
          return e - this.divStretchOffset;
        }),
        (t.prototype.getUiBodyHeight = function () {
          var e = this.ctrlsService.getGridBodyCtrl(),
            r = e.getScrollFeature().getVScrollPosition();
          return r.bottom - r.top;
        }),
        (t.prototype.getScrollPositionForPixel = function (e) {
          if (this.pixelsToShave <= 0) return e;
          var r = this.modelHeight - this.getUiBodyHeight(),
            o = e / r,
            i = this.maxScrollY * o;
          return i;
        }),
        Gi([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Gi([dC(0, Ye('loggerFactory'))], t.prototype, 'agWire', null),
        Gi([F], t.prototype, 'postConstruct', null),
        (t = Gi([x('rowContainerHeightService')], t)),
        t
      );
    })(D),
    fC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Vi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    vC = (function (n) {
      fC(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          this.addManagedPropertyListener('isRowSelectable', function () {
            return e.updateSelectable();
          });
        }),
        (t.prototype.updateSelectableAfterGrouping = function () {
          this.updateSelectable(!0);
        }),
        (t.prototype.updateSelectable = function (e) {
          e === void 0 && (e = !1);
          var r = !!this.gridOptionsService.get('rowSelection'),
            o = this.gridOptionsService.get('isRowSelectable');
          if (!(!r || !o)) {
            var i = this.gridOptionsService.get('groupSelectsChildren'),
              s = this.rowModel.getType() === 'clientSide' && i,
              a = [],
              l = function (p) {
                if (!(e && !p.group)) {
                  if (s && p.group) {
                    var d = p.childrenAfterGroup.some(function (f) {
                      return f.selectable === !0;
                    });
                    p.setRowSelectable(d, !0);
                    return;
                  }
                  var h = o ? o(p) : !0;
                  p.setRowSelectable(h, !0), !h && p.isSelected() && a.push(p);
                }
              };
            if (s) {
              var u = this.rowModel,
                c = new Ti(!1, u.getRootNode());
              c.forEachChangedNodeDepthFirst(l, !0, !0);
            } else this.rowModel.forEachNode(l);
            a.length &&
              this.selectionService.setNodesSelected({
                nodes: a,
                newValue: !1,
                source: 'selectableChanged',
              }),
              s &&
                this.selectionService instanceof Au &&
                this.selectionService.updateGroupsFromChildrenSelections('selectableChanged');
          }
        }),
        Vi([v('rowModel')], t.prototype, 'rowModel', void 0),
        Vi([v('selectionService')], t.prototype, 'selectionService', void 0),
        Vi([F], t.prototype, 'init', null),
        (t = Vi([x('selectableService')], t)),
        t
      );
    })(D),
    gC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ke = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    yC = (function (n) {
      gC(t, n);
      function t() {
        var e = n.call(this) || this;
        return (
          (e.previousAndFirstButtonsDisabled = !1),
          (e.nextButtonDisabled = !1),
          (e.lastButtonDisabled = !1),
          (e.areListenersSetup = !1),
          e
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this,
            r = this.gridOptionsService.get('enableRtl');
          this.setTemplate(this.getTemplate());
          var o = this,
            i = o.btFirst,
            s = o.btPrevious,
            a = o.btNext,
            l = o.btLast;
          o.pageSizeComp,
            this.activateTabIndex([i, s, a, l]),
            i.insertAdjacentElement(
              'afterbegin',
              ne(r ? 'last' : 'first', this.gridOptionsService)
            ),
            s.insertAdjacentElement(
              'afterbegin',
              ne(r ? 'next' : 'previous', this.gridOptionsService)
            ),
            a.insertAdjacentElement(
              'afterbegin',
              ne(r ? 'previous' : 'next', this.gridOptionsService)
            ),
            l.insertAdjacentElement(
              'afterbegin',
              ne(r ? 'first' : 'last', this.gridOptionsService)
            ),
            this.addManagedPropertyListener('pagination', this.onPaginationChanged.bind(this)),
            this.addManagedPropertyListener(
              'suppressPaginationPanel',
              this.onPaginationChanged.bind(this)
            ),
            this.addManagedPropertyListeners(
              ['paginationPageSizeSelector', 'paginationAutoPageSize', 'suppressPaginationPanel'],
              function () {
                return e.onPageSizeRelatedOptionsChange();
              }
            ),
            this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector()),
            this.onPaginationChanged();
        }),
        (t.prototype.onPaginationChanged = function () {
          var e = this.gridOptionsService.get('pagination'),
            r = e && !this.gridOptionsService.get('suppressPaginationPanel');
          this.setDisplayed(r),
            r &&
              (this.setupListeners(),
              this.enableOrDisableButtons(),
              this.updateRowLabels(),
              this.setCurrentPageLabel(),
              this.setTotalLabels(),
              this.onPageSizeRelatedOptionsChange());
        }),
        (t.prototype.onPageSizeRelatedOptionsChange = function () {
          this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());
        }),
        (t.prototype.setupListeners = function () {
          var e = this;
          this.areListenersSetup ||
            (this.addManagedListener(
              this.eventService,
              g.EVENT_PAGINATION_CHANGED,
              this.onPaginationChanged.bind(this)
            ),
            [
              { el: this.btFirst, fn: this.onBtFirst.bind(this) },
              { el: this.btPrevious, fn: this.onBtPrevious.bind(this) },
              { el: this.btNext, fn: this.onBtNext.bind(this) },
              { el: this.btLast, fn: this.onBtLast.bind(this) },
            ].forEach(function (r) {
              var o = r.el,
                i = r.fn;
              e.addManagedListener(o, 'click', i),
                e.addManagedListener(o, 'keydown', function (s) {
                  (s.key === _.ENTER || s.key === _.SPACE) && (s.preventDefault(), i());
                });
            }),
            (this.areListenersSetup = !0));
        }),
        (t.prototype.onBtFirst = function () {
          this.previousAndFirstButtonsDisabled || this.paginationProxy.goToFirstPage();
        }),
        (t.prototype.setCurrentPageLabel = function () {
          var e = this.paginationProxy.getTotalPages() > 0,
            r = this.paginationProxy.getCurrentPage(),
            o = e ? r + 1 : 0;
          this.lbCurrent.textContent = this.formatNumber(o);
        }),
        (t.prototype.formatNumber = function (e) {
          var r = this.gridOptionsService.getCallback('paginationNumberFormatter');
          if (r) {
            var o = { value: e };
            return r(o);
          }
          var i = this.localeService.getLocaleTextFunc(),
            s = i('thousandSeparator', ','),
            a = i('decimalSeparator', '.');
          return Mn(e, s, a);
        }),
        (t.prototype.getTemplate = function () {
          var e = this.localeService.getLocaleTextFunc(),
            r = e('page', 'Page'),
            o = e('to', 'to'),
            i = e('of', 'of'),
            s = e('firstPage', 'First Page'),
            a = e('previousPage', 'Previous Page'),
            l = e('nextPage', 'Next Page'),
            u = e('lastPage', 'Last Page'),
            c = this.getCompId();
          return '<div class="ag-paging-panel ag-unselectable" id="ag-'
            .concat(
              c,
              `">
                <ag-page-size-selector ref="pageSizeComp"></ag-page-size-selector>
                <span class="ag-paging-row-summary-panel" role="status">
                    <span id="ag-`
            )
            .concat(
              c,
              `-first-row" ref="lbFirstRowOnPage" class="ag-paging-row-summary-panel-number"></span>
                    <span id="ag-`
            )
            .concat(c, '-to">')
            .concat(
              o,
              `</span>
                    <span id="ag-`
            )
            .concat(
              c,
              `-last-row" ref="lbLastRowOnPage" class="ag-paging-row-summary-panel-number"></span>
                    <span id="ag-`
            )
            .concat(c, '-of">')
            .concat(
              i,
              `</span>
                    <span id="ag-`
            )
            .concat(
              c,
              `-row-count" ref="lbRecordCount" class="ag-paging-row-summary-panel-number"></span>
                </span>
                <span class="ag-paging-page-summary-panel" role="presentation">
                    <div ref="btFirst" class="ag-button ag-paging-button" role="button" aria-label="`
            )
            .concat(
              s,
              `"></div>
                    <div ref="btPrevious" class="ag-button ag-paging-button" role="button" aria-label="`
            )
            .concat(
              a,
              `"></div>
                    <span class="ag-paging-description" role="status">
                        <span id="ag-`
            )
            .concat(c, '-start-page">')
            .concat(
              r,
              `</span>
                        <span id="ag-`
            )
            .concat(
              c,
              `-start-page-number" ref="lbCurrent" class="ag-paging-number"></span>
                        <span id="ag-`
            )
            .concat(c, '-of-page">')
            .concat(
              i,
              `</span>
                        <span id="ag-`
            )
            .concat(
              c,
              `-of-page-number" ref="lbTotal" class="ag-paging-number"></span>
                    </span>
                    <div ref="btNext" class="ag-button ag-paging-button" role="button" aria-label="`
            )
            .concat(
              l,
              `"></div>
                    <div ref="btLast" class="ag-button ag-paging-button" role="button" aria-label="`
            )
            .concat(
              u,
              `"></div>
                </span>
            </div>`
            );
        }),
        (t.prototype.onBtNext = function () {
          this.nextButtonDisabled || this.paginationProxy.goToNextPage();
        }),
        (t.prototype.onBtPrevious = function () {
          this.previousAndFirstButtonsDisabled || this.paginationProxy.goToPreviousPage();
        }),
        (t.prototype.onBtLast = function () {
          this.lastButtonDisabled || this.paginationProxy.goToLastPage();
        }),
        (t.prototype.enableOrDisableButtons = function () {
          var e = this.paginationProxy.getCurrentPage(),
            r = this.paginationProxy.isLastPageFound(),
            o = this.paginationProxy.getTotalPages();
          (this.previousAndFirstButtonsDisabled = e === 0),
            this.toggleButtonDisabled(this.btFirst, this.previousAndFirstButtonsDisabled),
            this.toggleButtonDisabled(this.btPrevious, this.previousAndFirstButtonsDisabled);
          var i = this.isZeroPagesToDisplay(),
            s = e === o - 1;
          (this.nextButtonDisabled = s || i),
            (this.lastButtonDisabled = !r || i || e === o - 1),
            this.toggleButtonDisabled(this.btNext, this.nextButtonDisabled),
            this.toggleButtonDisabled(this.btLast, this.lastButtonDisabled);
        }),
        (t.prototype.toggleButtonDisabled = function (e, r) {
          hn(e, r), e.classList.toggle('ag-disabled', r);
        }),
        (t.prototype.updateRowLabels = function () {
          var e = this.paginationProxy.getCurrentPage(),
            r = this.paginationProxy.getPageSize(),
            o = this.paginationProxy.isLastPageFound(),
            i = this.paginationProxy.isLastPageFound()
              ? this.paginationProxy.getMasterRowCount()
              : null,
            s,
            a;
          if (
            (this.isZeroPagesToDisplay()
              ? (s = a = 0)
              : ((s = r * e + 1), (a = s + r - 1), o && a > i && (a = i)),
            (this.lbFirstRowOnPage.textContent = this.formatNumber(s)),
            this.rowNodeBlockLoader.isLoading())
          ) {
            var l = this.localeService.getLocaleTextFunc();
            this.lbLastRowOnPage.innerHTML = l('pageLastRowUnknown', '?');
          } else this.lbLastRowOnPage.textContent = this.formatNumber(a);
        }),
        (t.prototype.isZeroPagesToDisplay = function () {
          var e = this.paginationProxy.isLastPageFound(),
            r = this.paginationProxy.getTotalPages();
          return e && r === 0;
        }),
        (t.prototype.setTotalLabels = function () {
          var e = this.paginationProxy.isLastPageFound(),
            r = this.paginationProxy.getTotalPages(),
            o = e ? this.paginationProxy.getMasterRowCount() : null;
          if (o === 1) {
            var i = this.paginationProxy.getRow(0),
              s = i && i.group && !(i.groupData || i.aggData);
            if (s) {
              this.setTotalLabelsToZero();
              return;
            }
          }
          if (e)
            (this.lbTotal.textContent = this.formatNumber(r)),
              (this.lbRecordCount.textContent = this.formatNumber(o));
          else {
            var a = this.localeService.getLocaleTextFunc()('more', 'more');
            (this.lbTotal.innerHTML = a), (this.lbRecordCount.innerHTML = a);
          }
        }),
        (t.prototype.setTotalLabelsToZero = function () {
          (this.lbFirstRowOnPage.textContent = this.formatNumber(0)),
            (this.lbCurrent.textContent = this.formatNumber(0)),
            (this.lbLastRowOnPage.textContent = this.formatNumber(0)),
            (this.lbTotal.textContent = this.formatNumber(0)),
            (this.lbRecordCount.textContent = this.formatNumber(0));
        }),
        Ke([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        Ke([v('rowNodeBlockLoader')], t.prototype, 'rowNodeBlockLoader', void 0),
        Ke([L('btFirst')], t.prototype, 'btFirst', void 0),
        Ke([L('btPrevious')], t.prototype, 'btPrevious', void 0),
        Ke([L('btNext')], t.prototype, 'btNext', void 0),
        Ke([L('btLast')], t.prototype, 'btLast', void 0),
        Ke([L('lbRecordCount')], t.prototype, 'lbRecordCount', void 0),
        Ke([L('lbFirstRowOnPage')], t.prototype, 'lbFirstRowOnPage', void 0),
        Ke([L('lbLastRowOnPage')], t.prototype, 'lbLastRowOnPage', void 0),
        Ke([L('lbCurrent')], t.prototype, 'lbCurrent', void 0),
        Ke([L('lbTotal')], t.prototype, 'lbTotal', void 0),
        Ke([L('pageSizeComp')], t.prototype, 'pageSizeComp', void 0),
        Ke([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    mC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ks = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    CC = (function (n) {
      mC(t, n);
      function t() {
        var e = n.call(this, t.TEMPLATE) || this;
        return (e.inProgress = !1), (e.destroyRequested = !1), e;
      }
      return (
        (t.prototype.updateLayoutClasses = function (e, r) {
          var o = this.eOverlayWrapper.classList;
          o.toggle(pe.AUTO_HEIGHT, r.autoHeight),
            o.toggle(pe.NORMAL, r.normal),
            o.toggle(pe.PRINT, r.print);
        }),
        (t.prototype.postConstruct = function () {
          this.createManagedBean(new ys(this)),
            this.setDisplayed(!1, { skipAriaHidden: !0 }),
            this.overlayService.registerOverlayWrapperComp(this);
        }),
        (t.prototype.setWrapperTypeClass = function (e) {
          var r = this.eOverlayWrapper.classList;
          this.activeOverlayWrapperCssClass && r.toggle(this.activeOverlayWrapperCssClass, !1),
            (this.activeOverlayWrapperCssClass = e),
            r.toggle(e, !0);
        }),
        (t.prototype.showOverlay = function (e, r, o) {
          var i = this;
          this.inProgress ||
            (this.setWrapperTypeClass(r),
            this.destroyActiveOverlay(),
            (this.inProgress = !0),
            e &&
              e.then(function (s) {
                (i.inProgress = !1),
                  i.eOverlayWrapper.appendChild(s.getGui()),
                  (i.activeOverlay = s),
                  (i.updateListenerDestroyFunc = o),
                  i.destroyRequested && ((i.destroyRequested = !1), i.destroyActiveOverlay());
              }),
            this.setDisplayed(!0, { skipAriaHidden: !0 }));
        }),
        (t.prototype.destroyActiveOverlay = function () {
          var e;
          if (this.inProgress) {
            this.destroyRequested = !0;
            return;
          }
          this.activeOverlay &&
            ((this.activeOverlay = this.getContext().destroyBean(this.activeOverlay)),
            (e = this.updateListenerDestroyFunc) === null || e === void 0 || e.call(this),
            de(this.eOverlayWrapper));
        }),
        (t.prototype.hideOverlay = function () {
          this.destroyActiveOverlay(), this.setDisplayed(!1, { skipAriaHidden: !0 });
        }),
        (t.prototype.destroy = function () {
          this.destroyActiveOverlay(), n.prototype.destroy.call(this);
        }),
        (t.TEMPLATE = `
        <div class="ag-overlay" role="presentation">
            <div class="ag-overlay-panel" role="presentation">
                <div class="ag-overlay-wrapper" ref="eOverlayWrapper" role="presentation"></div>
            </div>
        </div>`),
        Ks([v('overlayService')], t.prototype, 'overlayService', void 0),
        Ks([L('eOverlayWrapper')], t.prototype, 'eOverlayWrapper', void 0),
        Ks([F], t.prototype, 'postConstruct', null),
        t
      );
    })(k),
    SC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Hi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    wC = (function (n) {
      SC(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.getFirstRow = function () {
          var e = 0,
            r;
          return (
            this.pinnedRowModel.getPinnedTopRowCount()
              ? (r = 'top')
              : this.rowModel.getRowCount()
              ? ((r = null), (e = this.paginationProxy.getPageFirstRow()))
              : this.pinnedRowModel.getPinnedBottomRowCount() && (r = 'bottom'),
            r === void 0 ? null : { rowIndex: e, rowPinned: r }
          );
        }),
        (t.prototype.getLastRow = function () {
          var e,
            r = null,
            o = this.pinnedRowModel.getPinnedBottomRowCount(),
            i = this.pinnedRowModel.getPinnedTopRowCount();
          return (
            o
              ? ((r = 'bottom'), (e = o - 1))
              : this.rowModel.getRowCount()
              ? ((r = null), (e = this.paginationProxy.getPageLastRow()))
              : i && ((r = 'top'), (e = i - 1)),
            e === void 0 ? null : { rowIndex: e, rowPinned: r }
          );
        }),
        (t.prototype.getRowNode = function (e) {
          switch (e.rowPinned) {
            case 'top':
              return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
            case 'bottom':
              return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
            default:
              return this.rowModel.getRow(e.rowIndex);
          }
        }),
        (t.prototype.sameRow = function (e, r) {
          return !e && !r
            ? !0
            : (e && !r) || (!e && r)
            ? !1
            : e.rowIndex === r.rowIndex && e.rowPinned == r.rowPinned;
        }),
        (t.prototype.before = function (e, r) {
          switch (e.rowPinned) {
            case 'top':
              if (r.rowPinned !== 'top') return !0;
              break;
            case 'bottom':
              if (r.rowPinned !== 'bottom') return !1;
              break;
            default:
              if (P(r.rowPinned)) return r.rowPinned !== 'top';
              break;
          }
          return e.rowIndex < r.rowIndex;
        }),
        (t.prototype.rowMax = function (e) {
          var r = this,
            o;
          return (
            e.forEach(function (i) {
              (o === void 0 || r.before(o, i)) && (o = i);
            }),
            o
          );
        }),
        (t.prototype.rowMin = function (e) {
          var r = this,
            o;
          return (
            e.forEach(function (i) {
              (o === void 0 || r.before(i, o)) && (o = i);
            }),
            o
          );
        }),
        Hi([v('rowModel')], t.prototype, 'rowModel', void 0),
        Hi([v('pinnedRowModel')], t.prototype, 'pinnedRowModel', void 0),
        Hi([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        (t = Hi([x('rowPositionUtils')], t)),
        t
      );
    })(D),
    EC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    _C = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    RC = (function (n) {
      EC(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.createId = function (e) {
          var r = e.rowIndex,
            o = e.rowPinned,
            i = e.column;
          return this.createIdFromValues({ rowIndex: r, column: i, rowPinned: o });
        }),
        (t.prototype.createIdFromValues = function (e) {
          var r = e.rowIndex,
            o = e.rowPinned,
            i = e.column;
          return ''
            .concat(r, '.')
            .concat(o ?? 'null', '.')
            .concat(i.getId());
        }),
        (t.prototype.equals = function (e, r) {
          var o = e.column === r.column,
            i = e.rowPinned === r.rowPinned,
            s = e.rowIndex === r.rowIndex;
          return o && i && s;
        }),
        (t = _C([x('cellPositionUtils')], t)),
        t
      );
    })(D),
    OC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Oo = (function () {
      function n(t) {
        this.cellValueChanges = t;
      }
      return n;
    })(),
    $s = (function (n) {
      OC(t, n);
      function t(e, r, o, i) {
        var s = n.call(this, e) || this;
        return (s.initialRange = r), (s.finalRange = o), (s.ranges = i), s;
      }
      return t;
    })(Oo),
    Bu = (function () {
      function n(t) {
        (this.actionStack = []),
          (this.maxStackSize = t || n.DEFAULT_STACK_SIZE),
          (this.actionStack = new Array(this.maxStackSize));
      }
      return (
        (n.prototype.pop = function () {
          return this.actionStack.pop();
        }),
        (n.prototype.push = function (t) {
          var e = t.cellValueChanges && t.cellValueChanges.length > 0;
          e &&
            (this.actionStack.length === this.maxStackSize && this.actionStack.shift(),
            this.actionStack.push(t));
        }),
        (n.prototype.clear = function () {
          this.actionStack = [];
        }),
        (n.prototype.getCurrentStackSize = function () {
          return this.actionStack.length;
        }),
        (n.DEFAULT_STACK_SIZE = 10),
        n
      );
    })(),
    TC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Bi = function () {
      return (
        (Bi =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Bi.apply(this, arguments)
      );
    },
    wt = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    PC = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    DC = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    AC = (function (n) {
      TC(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.cellValueChanges = []),
          (e.activeCellEdit = null),
          (e.activeRowEdit = null),
          (e.isPasting = !1),
          (e.isRangeInAction = !1),
          (e.onCellValueChanged = function (r) {
            var o = { column: r.column, rowIndex: r.rowIndex, rowPinned: r.rowPinned },
              i = e.activeCellEdit !== null && e.cellPositionUtils.equals(e.activeCellEdit, o),
              s = e.activeRowEdit !== null && e.rowPositionUtils.sameRow(e.activeRowEdit, o),
              a = i || s || e.isPasting || e.isRangeInAction;
            if (a) {
              var l = r.rowPinned,
                u = r.rowIndex,
                c = r.column,
                p = r.oldValue,
                d = r.value,
                h = { rowPinned: l, rowIndex: u, columnId: c.getColId(), newValue: d, oldValue: p };
              e.cellValueChanges.push(h);
            }
          }),
          (e.clearStacks = function () {
            e.undoStack.clear(), e.redoStack.clear();
          }),
          e
        );
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          if (this.gridOptionsService.get('undoRedoCellEditing')) {
            var r = this.gridOptionsService.get('undoRedoCellEditingLimit');
            r <= 0 ||
              ((this.undoStack = new Bu(r)),
              (this.redoStack = new Bu(r)),
              this.addRowEditingListeners(),
              this.addCellEditingListeners(),
              this.addPasteListeners(),
              this.addFillListeners(),
              this.addCellKeyListeners(),
              this.addManagedListener(
                this.eventService,
                g.EVENT_CELL_VALUE_CHANGED,
                this.onCellValueChanged
              ),
              this.addManagedListener(this.eventService, g.EVENT_MODEL_UPDATED, function (o) {
                o.keepUndoRedoStack || e.clearStacks();
              }),
              this.addManagedListener(
                this.eventService,
                g.EVENT_COLUMN_PIVOT_MODE_CHANGED,
                this.clearStacks
              ),
              this.addManagedListener(
                this.eventService,
                g.EVENT_NEW_COLUMNS_LOADED,
                this.clearStacks
              ),
              this.addManagedListener(
                this.eventService,
                g.EVENT_COLUMN_GROUP_OPENED,
                this.clearStacks
              ),
              this.addManagedListener(
                this.eventService,
                g.EVENT_COLUMN_ROW_GROUP_CHANGED,
                this.clearStacks
              ),
              this.addManagedListener(this.eventService, g.EVENT_COLUMN_MOVED, this.clearStacks),
              this.addManagedListener(this.eventService, g.EVENT_COLUMN_PINNED, this.clearStacks),
              this.addManagedListener(this.eventService, g.EVENT_COLUMN_VISIBLE, this.clearStacks),
              this.addManagedListener(this.eventService, g.EVENT_ROW_DRAG_END, this.clearStacks),
              this.ctrlsService.whenReady(function () {
                e.gridBodyCtrl = e.ctrlsService.getGridBodyCtrl();
              }));
          }
        }),
        (t.prototype.getCurrentUndoStackSize = function () {
          return this.undoStack ? this.undoStack.getCurrentStackSize() : 0;
        }),
        (t.prototype.getCurrentRedoStackSize = function () {
          return this.redoStack ? this.redoStack.getCurrentStackSize() : 0;
        }),
        (t.prototype.undo = function (e) {
          var r = { type: g.EVENT_UNDO_STARTED, source: e };
          this.eventService.dispatchEvent(r);
          var o = this.undoRedo(this.undoStack, this.redoStack, 'initialRange', 'oldValue', 'undo'),
            i = { type: g.EVENT_UNDO_ENDED, source: e, operationPerformed: o };
          this.eventService.dispatchEvent(i);
        }),
        (t.prototype.redo = function (e) {
          var r = { type: g.EVENT_REDO_STARTED, source: e };
          this.eventService.dispatchEvent(r);
          var o = this.undoRedo(this.redoStack, this.undoStack, 'finalRange', 'newValue', 'redo'),
            i = { type: g.EVENT_REDO_ENDED, source: e, operationPerformed: o };
          this.eventService.dispatchEvent(i);
        }),
        (t.prototype.undoRedo = function (e, r, o, i, s) {
          if (!e) return !1;
          var a = e.pop();
          return !a || !a.cellValueChanges
            ? !1
            : (this.processAction(
                a,
                function (l) {
                  return l[i];
                },
                s
              ),
              a instanceof $s
                ? this.processRange(a.ranges || [a[o]])
                : this.processCell(a.cellValueChanges),
              r.push(a),
              !0);
        }),
        (t.prototype.processAction = function (e, r, o) {
          var i = this;
          e.cellValueChanges.forEach(function (s) {
            var a = s.rowIndex,
              l = s.rowPinned,
              u = s.columnId,
              c = { rowIndex: a, rowPinned: l },
              p = i.getRowNode(c);
            p.displayed && p.setDataValue(u, r(s), o);
          });
        }),
        (t.prototype.processRange = function (e) {
          var r = this,
            o;
          this.rangeService.removeAllCellRanges(!0),
            e.forEach(function (i, s) {
              if (i) {
                var a = i.startRow,
                  l = i.endRow;
                s === e.length - 1 &&
                  ((o = {
                    rowPinned: a.rowPinned,
                    rowIndex: a.rowIndex,
                    columnId: i.startColumn.getColId(),
                  }),
                  r.setLastFocusedCell(o));
                var u = {
                  rowStartIndex: a.rowIndex,
                  rowStartPinned: a.rowPinned,
                  rowEndIndex: l.rowIndex,
                  rowEndPinned: l.rowPinned,
                  columnStart: i.startColumn,
                  columns: i.columns,
                };
                r.rangeService.addCellRange(u);
              }
            });
        }),
        (t.prototype.processCell = function (e) {
          var r = e[0],
            o = r.rowIndex,
            i = r.rowPinned,
            s = { rowIndex: o, rowPinned: i },
            a = this.getRowNode(s),
            l = { rowPinned: r.rowPinned, rowIndex: a.rowIndex, columnId: r.columnId };
          this.setLastFocusedCell(l, !!this.rangeService);
        }),
        (t.prototype.setLastFocusedCell = function (e, r) {
          var o = e.rowIndex,
            i = e.columnId,
            s = e.rowPinned,
            a = this.gridBodyCtrl.getScrollFeature(),
            l = this.columnModel.getGridColumn(i);
          if (l) {
            a.ensureIndexVisible(o), a.ensureColumnVisible(l);
            var u = { rowIndex: o, column: l, rowPinned: s };
            this.focusService.setFocusedCell(Bi(Bi({}, u), { forceBrowserFocus: !0 })),
              r && this.rangeService.setRangeToCell(u);
          }
        }),
        (t.prototype.addRowEditingListeners = function () {
          var e = this;
          this.addManagedListener(this.eventService, g.EVENT_ROW_EDITING_STARTED, function (r) {
            e.activeRowEdit = { rowIndex: r.rowIndex, rowPinned: r.rowPinned };
          }),
            this.addManagedListener(this.eventService, g.EVENT_ROW_EDITING_STOPPED, function () {
              var r = new Oo(e.cellValueChanges);
              e.pushActionsToUndoStack(r), (e.activeRowEdit = null);
            });
        }),
        (t.prototype.addCellEditingListeners = function () {
          var e = this;
          this.addManagedListener(this.eventService, g.EVENT_CELL_EDITING_STARTED, function (r) {
            e.activeCellEdit = { column: r.column, rowIndex: r.rowIndex, rowPinned: r.rowPinned };
          }),
            this.addManagedListener(this.eventService, g.EVENT_CELL_EDITING_STOPPED, function (r) {
              e.activeCellEdit = null;
              var o = r.valueChanged && !e.activeRowEdit && !e.isPasting && !e.isRangeInAction;
              if (o) {
                var i = new Oo(e.cellValueChanges);
                e.pushActionsToUndoStack(i);
              }
            });
        }),
        (t.prototype.addPasteListeners = function () {
          var e = this;
          this.addManagedListener(this.eventService, g.EVENT_PASTE_START, function () {
            e.isPasting = !0;
          }),
            this.addManagedListener(this.eventService, g.EVENT_PASTE_END, function () {
              var r = new Oo(e.cellValueChanges);
              e.pushActionsToUndoStack(r), (e.isPasting = !1);
            });
        }),
        (t.prototype.addFillListeners = function () {
          var e = this;
          this.addManagedListener(this.eventService, g.EVENT_FILL_START, function () {
            e.isRangeInAction = !0;
          }),
            this.addManagedListener(this.eventService, g.EVENT_FILL_END, function (r) {
              var o = new $s(e.cellValueChanges, r.initialRange, r.finalRange);
              e.pushActionsToUndoStack(o), (e.isRangeInAction = !1);
            });
        }),
        (t.prototype.addCellKeyListeners = function () {
          var e = this;
          this.addManagedListener(
            this.eventService,
            g.EVENT_KEY_SHORTCUT_CHANGED_CELL_START,
            function () {
              e.isRangeInAction = !0;
            }
          ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_KEY_SHORTCUT_CHANGED_CELL_END,
              function () {
                var r;
                e.rangeService && e.gridOptionsService.get('enableRangeSelection')
                  ? (r = new $s(
                      e.cellValueChanges,
                      void 0,
                      void 0,
                      DC([], PC(e.rangeService.getCellRanges()), !1)
                    ))
                  : (r = new Oo(e.cellValueChanges)),
                  e.pushActionsToUndoStack(r),
                  (e.isRangeInAction = !1);
              }
            );
        }),
        (t.prototype.pushActionsToUndoStack = function (e) {
          this.undoStack.push(e), (this.cellValueChanges = []), this.redoStack.clear();
        }),
        (t.prototype.getRowNode = function (e) {
          switch (e.rowPinned) {
            case 'top':
              return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
            case 'bottom':
              return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
            default:
              return this.rowModel.getRow(e.rowIndex);
          }
        }),
        wt([v('focusService')], t.prototype, 'focusService', void 0),
        wt([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        wt([v('rowModel')], t.prototype, 'rowModel', void 0),
        wt([v('pinnedRowModel')], t.prototype, 'pinnedRowModel', void 0),
        wt([v('cellPositionUtils')], t.prototype, 'cellPositionUtils', void 0),
        wt([v('rowPositionUtils')], t.prototype, 'rowPositionUtils', void 0),
        wt([v('columnModel')], t.prototype, 'columnModel', void 0),
        wt([Y('rangeService')], t.prototype, 'rangeService', void 0),
        wt([F], t.prototype, 'init', null),
        (t = wt([x('undoRedoService')], t)),
        t
      );
    })(D),
    bC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ys = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    FC = (function (n) {
      bC(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.findHeader = function (e, r) {
          var o, i, s;
          if (
            (e.column instanceof se
              ? ((i = 'getDisplayedGroup'.concat(r)), (o = this.columnModel[i](e.column)))
              : ((s = 'getDisplayedCol'.concat(r)), (o = this.columnModel[s](e.column))),
            !!o)
          ) {
            var a = e.headerRowIndex;
            if (this.getHeaderRowType(a) !== ge.FLOATING_FILTER) {
              for (var l = [o]; o.getParent(); ) (o = o.getParent()), l.push(o);
              o = l[l.length - 1 - a];
            }
            var u = this.getHeaderIndexToFocus(o, a),
              c = u.column,
              p = u.headerRowIndex;
            return { column: c, headerRowIndex: p };
          }
        }),
        (t.prototype.getHeaderIndexToFocus = function (e, r) {
          var o;
          if (e instanceof se && this.isAnyChildSpanningHeaderHeight(e) && e.isPadding()) {
            var i = e;
            o = i.getLeafColumns()[0];
            for (var s = o; s !== i; ) r++, (s = s.getParent());
          }
          return { column: o || e, headerRowIndex: r };
        }),
        (t.prototype.isAnyChildSpanningHeaderHeight = function (e) {
          return e
            ? e.getLeafColumns().some(function (r) {
                return r.isSpanHeaderHeight();
              })
            : !1;
        }),
        (t.prototype.getColumnVisibleParent = function (e, r) {
          var o = this.getHeaderRowType(r),
            i = o === ge.FLOATING_FILTER,
            s = o === ge.COLUMN,
            a = i ? e : e.getParent(),
            l = r - 1,
            u = l;
          if (s && this.isAnyChildSpanningHeaderHeight(e.getParent())) {
            for (; a && a.isPadding(); ) (a = a.getParent()), l--;
            (u = l), l < 0 && ((a = e), (l = r), (u = void 0));
          }
          return { column: a, headerRowIndex: l, headerRowIndexWithoutSpan: u };
        }),
        (t.prototype.getColumnVisibleChild = function (e, r, o) {
          o === void 0 && (o = 'After');
          var i = this.getHeaderRowType(r),
            s = e,
            a = r + 1,
            l = a;
          if (i === ge.COLUMN_GROUP) {
            for (
              var u = e.getDisplayedLeafColumns(), c = o === 'After' ? u[0] : q(u), p = [], d = c;
              d.getParent() !== e;

            )
              (d = d.getParent()), p.push(d);
            if (((s = c), c.isSpanHeaderHeight()))
              for (var h = p.length - 1; h >= 0; h--) {
                var f = p[h];
                if (!f.isPadding()) {
                  s = f;
                  break;
                }
                a++;
              }
            else (s = q(p)), s || (s = c);
          }
          return { column: s, headerRowIndex: a, headerRowIndexWithoutSpan: l };
        }),
        (t.prototype.getHeaderRowType = function (e) {
          var r = this.ctrlsService.getHeaderRowContainerCtrl();
          if (r) return r.getRowType(e);
        }),
        (t.prototype.findColAtEdgeForHeaderRow = function (e, r) {
          var o = this.columnModel.getAllDisplayedColumns(),
            i = o[r === 'start' ? 0 : o.length - 1];
          if (i) {
            var s = this.ctrlsService.getHeaderRowContainerCtrl(i.getPinned()),
              a = s.getRowType(e);
            if (a == ge.COLUMN_GROUP) {
              var l = this.columnModel.getColumnGroupAtLevel(i, e);
              return { headerRowIndex: e, column: l };
            }
            return { headerRowIndex: a == null ? -1 : e, column: i };
          }
        }),
        Ys([v('columnModel')], t.prototype, 'columnModel', void 0),
        Ys([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        (t = Ys([x('headerPositionUtils')], t)),
        t
      );
    })(D),
    LC = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    MC = (function () {
      function n() {}
      return (
        (n.prototype.buildColumnDefs = function (t, e, r) {
          var o = this,
            i = [],
            s = {};
          return (
            t.forEach(function (a) {
              for (
                var l = o.createDefFromColumn(a, e, r),
                  u = !0,
                  c = l,
                  p = a.getOriginalParent(),
                  d = null;
                p;

              ) {
                var h = null;
                if (p.isPadding()) {
                  p = p.getOriginalParent();
                  continue;
                }
                var f = s[p.getGroupId()];
                if (f) {
                  f.children.push(c), (u = !1);
                  break;
                }
                if (
                  ((h = o.createDefFromGroup(p)),
                  h &&
                    ((h.children = [c]), (s[h.groupId] = h), (c = h), (p = p.getOriginalParent())),
                  p != null && d === p)
                ) {
                  u = !1;
                  break;
                }
                d = p;
              }
              u && i.push(c);
            }),
            i
          );
        }),
        (n.prototype.createDefFromGroup = function (t) {
          var e = No(t.getColGroupDef(), ['children']);
          return e && (e.groupId = t.getGroupId()), e;
        }),
        (n.prototype.createDefFromColumn = function (t, e, r) {
          var o = No(t.getColDef());
          return (
            (o.colId = t.getColId()),
            (o.width = t.getActualWidth()),
            (o.rowGroup = t.isRowGroupActive()),
            (o.rowGroupIndex = t.isRowGroupActive() ? e.indexOf(t) : null),
            (o.pivot = t.isPivotActive()),
            (o.pivotIndex = t.isPivotActive() ? r.indexOf(t) : null),
            (o.aggFunc = t.isValueActive() ? t.getAggFunc() : null),
            (o.hide = t.isVisible() ? void 0 : !0),
            (o.pinned = t.isPinned() ? t.getPinned() : null),
            (o.sort = t.getSort() ? t.getSort() : null),
            (o.sortIndex = t.getSortIndex() != null ? t.getSortIndex() : null),
            o
          );
        }),
        (n = LC([x('columnDefFactory')], n)),
        n
      );
    })(),
    qs = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    IC = (function () {
      function n() {}
      return (
        (n.prototype.getInitialRowClasses = function (t) {
          var e = [];
          return (
            P(t.extraCssClass) && e.push(t.extraCssClass),
            e.push('ag-row'),
            e.push(t.rowFocused ? 'ag-row-focus' : 'ag-row-no-focus'),
            t.fadeRowIn && e.push('ag-opacity-zero'),
            e.push(t.rowIsEven ? 'ag-row-even' : 'ag-row-odd'),
            t.rowNode.isRowPinned() && e.push('ag-row-pinned'),
            t.rowNode.isSelected() && e.push('ag-row-selected'),
            t.rowNode.footer && e.push('ag-row-footer'),
            e.push('ag-row-level-' + t.rowLevel),
            t.rowNode.stub && e.push('ag-row-loading'),
            t.fullWidthRow && e.push('ag-full-width-row'),
            t.expandable &&
              (e.push('ag-row-group'),
              e.push(t.rowNode.expanded ? 'ag-row-group-expanded' : 'ag-row-group-contracted')),
            t.rowNode.dragging && e.push('ag-row-dragging'),
            nn(e, this.processClassesFromGridOptions(t.rowNode)),
            nn(e, this.preProcessRowClassRules(t.rowNode)),
            e.push(t.printLayout ? 'ag-row-position-relative' : 'ag-row-position-absolute'),
            t.firstRowOnPage && e.push('ag-row-first'),
            t.lastRowOnPage && e.push('ag-row-last'),
            t.fullWidthRow &&
              (t.pinned === 'left' && e.push('ag-cell-last-left-pinned'),
              t.pinned === 'right' && e.push('ag-cell-first-right-pinned')),
            e
          );
        }),
        (n.prototype.processClassesFromGridOptions = function (t) {
          var e = [],
            r = function (l) {
              typeof l == 'string'
                ? e.push(l)
                : Array.isArray(l) &&
                  l.forEach(function (u) {
                    return e.push(u);
                  });
            },
            o = this.gridOptionsService.get('rowClass');
          if (o) {
            if (typeof o == 'function')
              return (
                console.warn(
                  'AG Grid: rowClass should not be a function, please use getRowClass instead'
                ),
                []
              );
            r(o);
          }
          var i = this.gridOptionsService.getCallback('getRowClass');
          if (i) {
            var s = { data: t.data, node: t, rowIndex: t.rowIndex },
              a = i(s);
            r(a);
          }
          return e;
        }),
        (n.prototype.preProcessRowClassRules = function (t) {
          var e = [];
          return (
            this.processRowClassRules(
              t,
              function (r) {
                e.push(r);
              },
              function (r) {}
            ),
            e
          );
        }),
        (n.prototype.processRowClassRules = function (t, e, r) {
          var o = this.gridOptionsService.addGridCommonParams({
            data: t.data,
            node: t,
            rowIndex: t.rowIndex,
          });
          this.stylingService.processClassRules(
            void 0,
            this.gridOptionsService.get('rowClassRules'),
            o,
            e,
            r
          );
        }),
        (n.prototype.calculateRowLevel = function (t) {
          return t.group ? t.level : t.parent ? t.parent.level + 1 : 0;
        }),
        qs([v('stylingService')], n.prototype, 'stylingService', void 0),
        qs([v('gridOptionsService')], n.prototype, 'gridOptionsService', void 0),
        (n = qs([x('rowCssClassCalculator')], n)),
        n
      );
    })(),
    xC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ki = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    NC = (function (n) {
      xC(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          (this.isAccentedSort = this.gridOptionsService.get('accentedSort')),
            (this.primaryColumnsSortGroups =
              this.gridOptionsService.isColumnsSortingCoupledToGroup()),
            this.addManagedPropertyListener('accentedSort', function (r) {
              return (e.isAccentedSort = r.currentValue);
            }),
            this.addManagedPropertyListener('autoGroupColumnDef', function () {
              return (e.primaryColumnsSortGroups =
                e.gridOptionsService.isColumnsSortingCoupledToGroup());
            });
        }),
        (t.prototype.doFullSort = function (e, r) {
          var o = function (s, a) {
              return { currentPos: a, rowNode: s };
            },
            i = e.map(o);
          return (
            i.sort(this.compareRowNodes.bind(this, r)),
            i.map(function (s) {
              return s.rowNode;
            })
          );
        }),
        (t.prototype.compareRowNodes = function (e, r, o) {
          for (var i = r.rowNode, s = o.rowNode, a = 0, l = e.length; a < l; a++) {
            var u = e[a],
              c = u.sort === 'desc',
              p = this.getValue(i, u.column),
              d = this.getValue(s, u.column),
              h = void 0,
              f = this.getComparator(u, i);
            f ? (h = f(p, d, i, s, c)) : (h = j.defaultComparator(p, d, this.isAccentedSort));
            var y = !isNaN(h);
            if (y && h !== 0) return u.sort === 'asc' ? h : h * -1;
          }
          return r.currentPos - o.currentPos;
        }),
        (t.prototype.getComparator = function (e, r) {
          var o = e.column,
            i = o.getColDef().comparator;
          if (i != null) return i;
          if (o.getColDef().showRowGroup) {
            var s = !r.group && o.getColDef().field;
            if (s) {
              var a = this.columnModel.getPrimaryColumn(s);
              if (a) return a.getColDef().comparator;
            }
          }
        }),
        (t.prototype.getValue = function (e, r) {
          var o, i;
          if (!this.primaryColumnsSortGroups) return this.valueService.getValue(r, e, !1, !1);
          var s = e.rowGroupColumn === r;
          if (s) {
            var a = this.gridOptionsService.isGroupUseEntireRow(this.columnModel.isPivotActive());
            if (a) {
              var l = (o = e.allLeafChildren) === null || o === void 0 ? void 0 : o[0];
              return l ? this.valueService.getValue(r, l, !1, !1) : void 0;
            }
            var u = this.columnModel.getGroupDisplayColumnForGroup(r.getId());
            return u
              ? (i = e.groupData) === null || i === void 0
                ? void 0
                : i[u.getId()]
              : void 0;
          }
          if (!(e.group && r.getColDef().showRowGroup))
            return this.valueService.getValue(r, e, !1, !1);
        }),
        ki([v('valueService')], t.prototype, 'valueService', void 0),
        ki([v('columnModel')], t.prototype, 'columnModel', void 0),
        ki([F], t.prototype, 'init', null),
        (t = ki([x('rowNodeSorter')], t)),
        t
      );
    })(D),
    GC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    VC = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    HC = (function (n) {
      GC(t, n);
      function t() {
        var r = (n !== null && n.apply(this, arguments)) || this;
        return (r.ready = !1), (r.readyCallbacks = []), r;
      }
      (e = t),
        (t.prototype.checkReady = function () {
          if (
            ((this.ready =
              this.gridCtrl != null &&
              this.gridBodyCtrl != null &&
              this.centerRowContainerCtrl != null &&
              this.leftRowContainerCtrl != null &&
              this.rightRowContainerCtrl != null &&
              this.bottomCenterRowContainerCtrl != null &&
              this.bottomLeftRowContainerCtrl != null &&
              this.bottomRightRowContainerCtrl != null &&
              this.topCenterRowContainerCtrl != null &&
              this.topLeftRowContainerCtrl != null &&
              this.topRightRowContainerCtrl != null &&
              this.stickyTopCenterRowContainerCtrl != null &&
              this.stickyTopLeftRowContainerCtrl != null &&
              this.stickyTopRightRowContainerCtrl != null &&
              this.centerHeaderRowContainerCtrl != null &&
              this.leftHeaderRowContainerCtrl != null &&
              this.rightHeaderRowContainerCtrl != null &&
              this.fakeHScrollComp != null &&
              this.fakeVScrollComp != null &&
              this.gridHeaderCtrl != null),
            this.ready)
          ) {
            var r = this.createReadyParams();
            this.readyCallbacks.forEach(function (o) {
              return o(r);
            }),
              (this.readyCallbacks.length = 0);
          }
        }),
        (t.prototype.whenReady = function (r) {
          this.ready ? r(this.createReadyParams()) : this.readyCallbacks.push(r);
        }),
        (t.prototype.createReadyParams = function () {
          return {
            centerRowContainerCtrl: this.centerRowContainerCtrl,
            leftRowContainerCtrl: this.leftRowContainerCtrl,
            rightRowContainerCtrl: this.rightRowContainerCtrl,
            bottomCenterRowContainerCtrl: this.bottomCenterRowContainerCtrl,
            bottomLeftRowContainerCtrl: this.bottomLeftRowContainerCtrl,
            bottomRightRowContainerCtrl: this.bottomRightRowContainerCtrl,
            topCenterRowContainerCtrl: this.topCenterRowContainerCtrl,
            topLeftRowContainerCtrl: this.topLeftRowContainerCtrl,
            topRightRowContainerCtrl: this.topRightRowContainerCtrl,
            stickyTopCenterRowContainerCtrl: this.stickyTopCenterRowContainerCtrl,
            stickyTopLeftRowContainerCtrl: this.stickyTopLeftRowContainerCtrl,
            stickyTopRightRowContainerCtrl: this.stickyTopRightRowContainerCtrl,
            centerHeaderRowContainerCtrl: this.centerHeaderRowContainerCtrl,
            leftHeaderRowContainerCtrl: this.leftHeaderRowContainerCtrl,
            rightHeaderRowContainerCtrl: this.rightHeaderRowContainerCtrl,
            fakeHScrollComp: this.fakeHScrollComp,
            fakeVScrollComp: this.fakeVScrollComp,
            gridBodyCtrl: this.gridBodyCtrl,
            gridCtrl: this.gridCtrl,
            gridHeaderCtrl: this.gridHeaderCtrl,
          };
        }),
        (t.prototype.registerFakeHScrollComp = function (r) {
          (this.fakeHScrollComp = r), this.checkReady();
        }),
        (t.prototype.registerFakeVScrollComp = function (r) {
          (this.fakeVScrollComp = r), this.checkReady();
        }),
        (t.prototype.registerGridHeaderCtrl = function (r) {
          (this.gridHeaderCtrl = r), this.checkReady();
        }),
        (t.prototype.registerCenterRowContainerCtrl = function (r) {
          (this.centerRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerLeftRowContainerCtrl = function (r) {
          (this.leftRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerRightRowContainerCtrl = function (r) {
          (this.rightRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerTopCenterRowContainerCtrl = function (r) {
          (this.topCenterRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerTopLeftRowContainerCon = function (r) {
          (this.topLeftRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerTopRightRowContainerCtrl = function (r) {
          (this.topRightRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerStickyTopCenterRowContainerCtrl = function (r) {
          (this.stickyTopCenterRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerStickyTopLeftRowContainerCon = function (r) {
          (this.stickyTopLeftRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerStickyTopRightRowContainerCtrl = function (r) {
          (this.stickyTopRightRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerBottomCenterRowContainerCtrl = function (r) {
          (this.bottomCenterRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerBottomLeftRowContainerCtrl = function (r) {
          (this.bottomLeftRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerBottomRightRowContainerCtrl = function (r) {
          (this.bottomRightRowContainerCtrl = r), this.checkReady();
        }),
        (t.prototype.registerHeaderContainer = function (r, o) {
          switch (o) {
            case 'left':
              this.leftHeaderRowContainerCtrl = r;
              break;
            case 'right':
              this.rightHeaderRowContainerCtrl = r;
              break;
            default:
              this.centerHeaderRowContainerCtrl = r;
              break;
          }
          this.checkReady();
        }),
        (t.prototype.registerGridBodyCtrl = function (r) {
          (this.gridBodyCtrl = r), this.checkReady();
        }),
        (t.prototype.registerGridCtrl = function (r) {
          (this.gridCtrl = r), this.checkReady();
        }),
        (t.prototype.getFakeHScrollComp = function () {
          return this.fakeHScrollComp;
        }),
        (t.prototype.getFakeVScrollComp = function () {
          return this.fakeVScrollComp;
        }),
        (t.prototype.getGridHeaderCtrl = function () {
          return this.gridHeaderCtrl;
        }),
        (t.prototype.getGridCtrl = function () {
          return this.gridCtrl;
        }),
        (t.prototype.getCenterRowContainerCtrl = function () {
          return this.centerRowContainerCtrl;
        }),
        (t.prototype.getTopCenterRowContainerCtrl = function () {
          return this.topCenterRowContainerCtrl;
        }),
        (t.prototype.getBottomCenterRowContainerCtrl = function () {
          return this.bottomCenterRowContainerCtrl;
        }),
        (t.prototype.getStickyTopCenterRowContainerCtrl = function () {
          return this.stickyTopCenterRowContainerCtrl;
        }),
        (t.prototype.getGridBodyCtrl = function () {
          return this.gridBodyCtrl;
        }),
        (t.prototype.getHeaderRowContainerCtrls = function () {
          return [
            this.leftHeaderRowContainerCtrl,
            this.rightHeaderRowContainerCtrl,
            this.centerHeaderRowContainerCtrl,
          ];
        }),
        (t.prototype.getHeaderRowContainerCtrl = function (r) {
          switch (r) {
            case 'left':
              return this.leftHeaderRowContainerCtrl;
            case 'right':
              return this.rightHeaderRowContainerCtrl;
            default:
              return this.centerHeaderRowContainerCtrl;
          }
        });
      var e;
      return (t.NAME = 'ctrlsService'), (t = e = VC([x(e.NAME)], t)), t;
    })(D),
    BC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    kC = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    WC = (function (n) {
      BC(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.registry = {}), e;
      }
      return (
        (t.prototype.register = function (e) {
          this.registry[e.controllerName] = e.controllerClass;
        }),
        (t.prototype.getInstance = function (e) {
          var r = this.registry[e];
          if (r != null) return new r();
        }),
        (t = kC([x('ctrlsFactory')], t)),
        t
      );
    })(D),
    jC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    To = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ku = (function (n) {
      jC(t, n);
      function t(e, r) {
        var o = n.call(this, e) || this;
        return (o.direction = r), (o.hideTimeout = null), o;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.addManagedListener(
            this.eventService,
            g.EVENT_SCROLL_VISIBILITY_CHANGED,
            this.onScrollVisibilityChanged.bind(this)
          ),
            this.onScrollVisibilityChanged(),
            this.addOrRemoveCssClass('ag-apple-scrollbar', bn() || Dt());
        }),
        (t.prototype.initialiseInvisibleScrollbar = function () {
          this.invisibleScrollbar === void 0 &&
            ((this.invisibleScrollbar = Ln()),
            this.invisibleScrollbar &&
              (this.hideAndShowInvisibleScrollAsNeeded(), this.addActiveListenerToggles()));
        }),
        (t.prototype.addActiveListenerToggles = function () {
          var e = this,
            r = ['mouseenter', 'mousedown', 'touchstart'],
            o = ['mouseleave', 'touchend'],
            i = this.getGui();
          r.forEach(function (s) {
            return e.addManagedListener(i, s, function () {
              return e.addOrRemoveCssClass('ag-scrollbar-active', !0);
            });
          }),
            o.forEach(function (s) {
              return e.addManagedListener(i, s, function () {
                return e.addOrRemoveCssClass('ag-scrollbar-active', !1);
              });
            });
        }),
        (t.prototype.onScrollVisibilityChanged = function () {
          var e = this;
          this.invisibleScrollbar === void 0 && this.initialiseInvisibleScrollbar(),
            this.animationFrameService.requestAnimationFrame(function () {
              return e.setScrollVisible();
            });
        }),
        (t.prototype.hideAndShowInvisibleScrollAsNeeded = function () {
          var e = this;
          this.addManagedListener(this.eventService, g.EVENT_BODY_SCROLL, function (r) {
            r.direction === e.direction &&
              (e.hideTimeout !== null &&
                (window.clearTimeout(e.hideTimeout), (e.hideTimeout = null)),
              e.addOrRemoveCssClass('ag-scrollbar-scrolling', !0));
          }),
            this.addManagedListener(this.eventService, g.EVENT_BODY_SCROLL_END, function () {
              e.hideTimeout = window.setTimeout(function () {
                e.addOrRemoveCssClass('ag-scrollbar-scrolling', !1), (e.hideTimeout = null);
              }, 400);
            });
        }),
        (t.prototype.attemptSettingScrollPosition = function (e) {
          var r = this,
            o = this.getViewport();
          en(
            function () {
              return We(o);
            },
            function () {
              return r.setScrollPosition(e);
            },
            100
          );
        }),
        (t.prototype.getViewport = function () {
          return this.eViewport;
        }),
        (t.prototype.getContainer = function () {
          return this.eContainer;
        }),
        (t.prototype.onScrollCallback = function (e) {
          this.addManagedListener(this.getViewport(), 'scroll', e);
        }),
        To([L('eViewport')], t.prototype, 'eViewport', void 0),
        To([L('eContainer')], t.prototype, 'eContainer', void 0),
        To([v('scrollVisibleService')], t.prototype, 'scrollVisibleService', void 0),
        To([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        To([v('animationFrameService')], t.prototype, 'animationFrameService', void 0),
        t
      );
    })(k),
    UC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Po = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    zC = (function (n) {
      UC(t, n);
      function t() {
        return n.call(this, t.TEMPLATE, 'horizontal') || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          n.prototype.postConstruct.call(this);
          var r = this.setFakeHScrollSpacerWidths.bind(this);
          this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, r),
            this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, r),
            this.addManagedListener(
              this.eventService,
              g.EVENT_PINNED_ROW_DATA_CHANGED,
              this.onPinnedRowDataChanged.bind(this)
            ),
            this.addManagedPropertyListener('domLayout', r),
            this.ctrlsService.registerFakeHScrollComp(this),
            this.createManagedBean(
              new _s(function (o) {
                return (e.eContainer.style.width = ''.concat(o, 'px'));
              })
            ),
            this.addManagedPropertyListeners(
              ['suppressHorizontalScroll'],
              this.onScrollVisibilityChanged.bind(this)
            );
        }),
        (t.prototype.initialiseInvisibleScrollbar = function () {
          this.invisibleScrollbar === void 0 &&
            ((this.enableRtl = this.gridOptionsService.get('enableRtl')),
            n.prototype.initialiseInvisibleScrollbar.call(this),
            this.invisibleScrollbar && this.refreshCompBottom());
        }),
        (t.prototype.onPinnedRowDataChanged = function () {
          this.refreshCompBottom();
        }),
        (t.prototype.refreshCompBottom = function () {
          if (this.invisibleScrollbar) {
            var e = this.pinnedRowModel.getPinnedBottomTotalHeight();
            this.getGui().style.bottom = ''.concat(e, 'px');
          }
        }),
        (t.prototype.onScrollVisibilityChanged = function () {
          n.prototype.onScrollVisibilityChanged.call(this), this.setFakeHScrollSpacerWidths();
        }),
        (t.prototype.setFakeHScrollSpacerWidths = function () {
          var e = this.scrollVisibleService.isVerticalScrollShowing(),
            r = this.columnModel.getDisplayedColumnsRightWidth(),
            o = !this.enableRtl && e,
            i = this.gridOptionsService.getScrollbarWidth();
          o && (r += i),
            Je(this.eRightSpacer, r),
            this.eRightSpacer.classList.toggle('ag-scroller-corner', r <= i);
          var s = this.columnModel.getDisplayedColumnsLeftWidth(),
            a = this.enableRtl && e;
          a && (s += i),
            Je(this.eLeftSpacer, s),
            this.eLeftSpacer.classList.toggle('ag-scroller-corner', s <= i);
        }),
        (t.prototype.setScrollVisible = function () {
          var e = this.scrollVisibleService.isHorizontalScrollShowing(),
            r = this.invisibleScrollbar,
            o = this.gridOptionsService.get('suppressHorizontalScroll'),
            i = (e && this.gridOptionsService.getScrollbarWidth()) || 0,
            s = i === 0 && r ? 16 : i,
            a = o ? 0 : s;
          this.addOrRemoveCssClass('ag-scrollbar-invisible', r),
            nr(this.getGui(), a),
            nr(this.eViewport, a),
            nr(this.eContainer, a),
            this.setDisplayed(e, { skipAriaHidden: !0 });
        }),
        (t.prototype.getScrollPosition = function () {
          return Jr(this.getViewport(), this.enableRtl);
        }),
        (t.prototype.setScrollPosition = function (e) {
          We(this.getViewport()) || this.attemptSettingScrollPosition(e),
            Zr(this.getViewport(), e, this.enableRtl);
        }),
        (t.TEMPLATE = `<div class="ag-body-horizontal-scroll" aria-hidden="true">
            <div class="ag-horizontal-left-spacer" ref="eLeftSpacer"></div>
            <div class="ag-body-horizontal-scroll-viewport" ref="eViewport">
                <div class="ag-body-horizontal-scroll-container" ref="eContainer"></div>
            </div>
            <div class="ag-horizontal-right-spacer" ref="eRightSpacer"></div>
        </div>`),
        Po([L('eLeftSpacer')], t.prototype, 'eLeftSpacer', void 0),
        Po([L('eRightSpacer')], t.prototype, 'eRightSpacer', void 0),
        Po([v('columnModel')], t.prototype, 'columnModel', void 0),
        Po([v('pinnedRowModel')], t.prototype, 'pinnedRowModel', void 0),
        Po([F], t.prototype, 'postConstruct', null),
        t
      );
    })(ku),
    KC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Qs = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    $C = (function (n) {
      KC(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this.checkContainerWidths.bind(this);
          this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, e),
            this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, e),
            this.addManagedPropertyListener('domLayout', e);
        }),
        (t.prototype.checkContainerWidths = function () {
          var e = this.gridOptionsService.isDomLayout('print'),
            r = e ? 0 : this.columnModel.getDisplayedColumnsLeftWidth(),
            o = e ? 0 : this.columnModel.getDisplayedColumnsRightWidth();
          r != this.leftWidth &&
            ((this.leftWidth = r),
            this.eventService.dispatchEvent({ type: g.EVENT_LEFT_PINNED_WIDTH_CHANGED })),
            o != this.rightWidth &&
              ((this.rightWidth = o),
              this.eventService.dispatchEvent({ type: g.EVENT_RIGHT_PINNED_WIDTH_CHANGED }));
        }),
        (t.prototype.getPinnedRightWidth = function () {
          return this.rightWidth;
        }),
        (t.prototype.getPinnedLeftWidth = function () {
          return this.leftWidth;
        }),
        Qs([v('columnModel')], t.prototype, 'columnModel', void 0),
        Qs([F], t.prototype, 'postConstruct', null),
        (t = Qs([x('pinnedWidthService')], t)),
        t
      );
    })(D),
    YC = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Wi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    qC = (function (n) {
      YC(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.events = []), e;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.rowModel.getType() == 'clientSide' && (this.clientSideRowModel = this.rowModel);
        }),
        (t.prototype.dispatchExpanded = function (e) {
          var r = this;
          if (this.clientSideRowModel == null) {
            this.eventService.dispatchEvent(e);
            return;
          }
          this.events.push(e);
          var o = function () {
            r.clientSideRowModel && r.clientSideRowModel.onRowGroupOpened(),
              r.events.forEach(function (i) {
                return r.eventService.dispatchEvent(i);
              }),
              (r.events = []);
          };
          this.dispatchExpandedDebounced == null &&
            (this.dispatchExpandedDebounced = this.animationFrameService.debounce(o)),
            this.dispatchExpandedDebounced();
        }),
        Wi([v('animationFrameService')], t.prototype, 'animationFrameService', void 0),
        Wi([v('rowModel')], t.prototype, 'rowModel', void 0),
        Wi([F], t.prototype, 'postConstruct', null),
        (t = Wi([x('rowNodeEventThrottle')], t)),
        t
      );
    })(D),
    QC = {
      columnsMenuParams: { version: '31.1', message: 'Use `columnChooserParams` instead.' },
      suppressMenu: { version: '31.1', message: 'Use `suppressHeaderMenuButton` instead.' },
    },
    Yt = function (n, t) {
      var e;
      return ((e = t.rowModelType) !== null && e !== void 0 ? e : 'clientSide') === 'clientSide'
        ? { module: G.RowGroupingModule }
        : null;
    },
    XC = {
      enableRowGroup: Yt,
      rowGroup: Yt,
      rowGroupIndex: Yt,
      enablePivot: Yt,
      enableValue: Yt,
      pivot: Yt,
      pivotIndex: Yt,
      aggFunc: Yt,
      cellEditor: function (n) {
        return n.cellEditor === 'agRichSelect' || n.cellEditor === 'agRichSelectCellEditor'
          ? { module: G.RichSelectModule }
          : null;
      },
      menuTabs: function (n) {
        var t,
          e = ['columnsMenuTab', 'generalMenuTab'];
        return !((t = n.menuTabs) === null || t === void 0) &&
          t.some(function (r) {
            return e.includes(r);
          })
          ? { module: G.MenuModule }
          : null;
      },
      columnsMenuParams: { module: [G.MenuModule, G.ColumnsToolPanelModule] },
      columnChooserParams: { module: [G.MenuModule, G.ColumnsToolPanelModule] },
      headerCheckboxSelection: {
        supportedRowModels: ['clientSide', 'serverSide'],
        dependencies: function (n, t) {
          var e = t.rowSelection;
          return e === 'multiple'
            ? null
            : 'headerCheckboxSelection is only supported with rowSelection=multiple';
        },
      },
      headerCheckboxSelectionFilteredOnly: {
        supportedRowModels: ['clientSide'],
        dependencies: function (n, t) {
          var e = t.rowSelection;
          return e === 'multiple'
            ? null
            : 'headerCheckboxSelectionFilteredOnly is only supported with rowSelection=multiple';
        },
      },
      headerCheckboxSelectionCurrentPageOnly: {
        supportedRowModels: ['clientSide'],
        dependencies: function (n, t) {
          var e = t.rowSelection;
          return e === 'multiple'
            ? null
            : 'headerCheckboxSelectionCurrentPageOnly is only supported with rowSelection=multiple';
        },
      },
      children: function () {
        return jr;
      },
    },
    jr = {
      objectName: 'colDef',
      allProperties: of.ALL_PROPERTIES,
      docsUrl: 'column-properties/',
      deprecations: QC,
      validations: XC,
    },
    Wu = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    ju = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    JC = {
      enableChartToolPanelsButton: {
        version: '29',
        message:
          'The Chart Tool Panels button is now enabled by default. To hide the Chart Tool Panels button and display the hamburger button instead, set suppressChartToolPanelsButton=true.',
      },
      functionsPassive: { version: '29.2' },
      onColumnRowGroupChangeRequest: { version: '29.2' },
      onColumnPivotChangeRequest: { version: '29.2' },
      onColumnValueChangeRequest: { version: '29.2' },
      onColumnAggFuncChangeRequest: { version: '29.2' },
      serverSideFilterAllLevels: {
        version: '30',
        message:
          'All server-side group levels are now filtered by default. This can be toggled using `serverSideOnlyRefreshFilteredGroups`.',
      },
      suppressAggAtRootLevel: {
        version: '30',
        message:
          'The root level aggregation is now suppressed by default. This can be toggled using  `alwaysAggregateAtRootLevel`.',
      },
      excludeHiddenColumnsFromQuickFilter: {
        version: '30',
        message:
          'Hidden columns are now excluded from the Quick Filter by default. This can be toggled using `includeHiddenColumnsInQuickFilter`.',
      },
      enterMovesDown: { version: '30', renamed: 'enterNavigatesVertically' },
      enterMovesDownAfterEdit: { version: '30', renamed: 'enterNavigatesVerticallyAfterEdit' },
      suppressParentsInRowNodes: {
        version: '30.2',
        message:
          'Using suppressParentsInRowNodes is no longer recommended. To serialize nodes it is now recommended to instead remove the parent node reference before serialization.',
      },
      advancedFilterModel: {
        version: '31',
        message: 'Use `initialState.filter.advancedFilterModel` instead.',
      },
      suppressAsyncEvents: { version: '31', message: 'Events should be handled asynchronously.' },
      cellFadeDelay: { version: '31.1', renamed: 'cellFadeDuration' },
      cellFlashDelay: { version: '31.1', renamed: 'cellFlashDuration' },
      suppressServerSideInfiniteScroll: { version: '31.1' },
      serverSideSortOnServer: { version: '31.1' },
      serverSideFilterOnServer: { version: '31.1' },
    },
    ZC = {
      suppressContextMenu: !1,
      preventDefaultOnContextMenu: !1,
      allowContextMenuWithControlKey: !1,
      suppressMenuHide: !1,
      enableBrowserTooltips: !1,
      tooltipTrigger: 'hover',
      tooltipShowDelay: 2e3,
      tooltipHideDelay: 1e4,
      tooltipMouseTrack: !1,
      tooltipInteraction: !1,
      copyHeadersToClipboard: !1,
      copyGroupHeadersToClipboard: !1,
      clipboardDelimiter: '	',
      suppressCopyRowsToClipboard: !1,
      suppressCopySingleCellRanges: !1,
      suppressLastEmptyLineOnPaste: !1,
      suppressClipboardPaste: !1,
      suppressClipboardApi: !1,
      suppressCutToClipboard: !1,
      maintainColumnOrder: !1,
      suppressFieldDotNotation: !1,
      allowDragFromColumnsToolPanel: !1,
      suppressMovableColumns: !1,
      suppressColumnMoveAnimation: !1,
      suppressDragLeaveHidesColumns: !1,
      suppressRowGroupHidesColumns: !1,
      suppressAutoSize: !1,
      autoSizePadding: 20,
      skipHeaderOnAutoSize: !1,
      singleClickEdit: !1,
      suppressClickEdit: !1,
      readOnlyEdit: !1,
      stopEditingWhenCellsLoseFocus: !1,
      enterNavigatesVertically: !1,
      enterNavigatesVerticallyAfterEdit: !1,
      enableCellEditingOnBackspace: !1,
      undoRedoCellEditing: !1,
      undoRedoCellEditingLimit: 10,
      suppressCsvExport: !1,
      suppressExcelExport: !1,
      cacheQuickFilter: !1,
      includeHiddenColumnsInQuickFilter: !1,
      excludeChildrenWhenTreeDataFiltering: !1,
      enableAdvancedFilter: !1,
      includeHiddenColumnsInAdvancedFilter: !1,
      enableCharts: !1,
      suppressChartToolPanelsButton: !1,
      masterDetail: !1,
      keepDetailRows: !1,
      keepDetailRowsCount: 10,
      detailRowAutoHeight: !1,
      tabIndex: 0,
      rowBuffer: 10,
      valueCache: !1,
      valueCacheNeverExpires: !1,
      enableCellExpressions: !1,
      suppressTouch: !1,
      suppressFocusAfterRefresh: !1,
      suppressAsyncEvents: !1,
      suppressBrowserResizeObserver: !1,
      suppressPropertyNamesCheck: !1,
      suppressChangeDetection: !1,
      debug: !1,
      suppressLoadingOverlay: !1,
      suppressNoRowsOverlay: !1,
      pagination: !1,
      paginationPageSize: 100,
      paginationPageSizeSelector: !0,
      paginationAutoPageSize: !1,
      paginateChildRows: !1,
      suppressPaginationPanel: !1,
      pivotMode: !1,
      pivotPanelShow: 'never',
      pivotDefaultExpanded: 0,
      pivotSuppressAutoColumn: !1,
      suppressExpandablePivotGroups: !1,
      functionsReadOnly: !1,
      suppressAggFuncInHeader: !1,
      alwaysAggregateAtRootLevel: !1,
      aggregateOnlyChangedColumns: !1,
      suppressAggFilteredOnly: !1,
      removePivotHeaderRowWhenSingleValueColumn: !1,
      animateRows: !0,
      enableCellChangeFlash: !1,
      cellFlashDelay: 500,
      cellFlashDuration: 500,
      cellFadeDelay: 1e3,
      cellFadeDuration: 1e3,
      allowShowChangeAfterFilter: !1,
      domLayout: 'normal',
      ensureDomOrder: !1,
      enableRtl: !1,
      suppressColumnVirtualisation: !1,
      suppressMaxRenderedRowRestriction: !1,
      suppressRowVirtualisation: !1,
      rowDragManaged: !1,
      suppressRowDrag: !1,
      suppressMoveWhenRowDragging: !1,
      rowDragEntireRow: !1,
      rowDragMultiRow: !1,
      embedFullWidthRows: !1,
      groupDisplayType: 'singleColumn',
      groupDefaultExpanded: 0,
      groupMaintainOrder: !1,
      groupSelectsChildren: !1,
      groupIncludeTotalFooter: !1,
      groupSuppressBlankHeader: !1,
      groupSelectsFiltered: !1,
      showOpenedGroup: !1,
      groupRemoveSingleChildren: !1,
      groupRemoveLowestSingleChildren: !1,
      groupHideOpenParents: !1,
      groupAllowUnbalanced: !1,
      rowGroupPanelShow: 'never',
      suppressMakeColumnVisibleAfterUnGroup: !1,
      treeData: !1,
      rowGroupPanelSuppressSort: !1,
      suppressGroupRowsSticky: !1,
      rowModelType: 'clientSide',
      asyncTransactionWaitMillis: 50,
      suppressModelUpdateAfterUpdateTransaction: !1,
      cacheOverflowSize: 1,
      infiniteInitialRowCount: 1,
      serverSideInitialRowCount: 1,
      suppressServerSideInfiniteScroll: !1,
      cacheBlockSize: 100,
      maxBlocksInCache: -1,
      maxConcurrentDatasourceRequests: 2,
      blockLoadDebounceMillis: 0,
      purgeClosedRowNodes: !1,
      serverSideSortAllLevels: !1,
      serverSideOnlyRefreshFilteredGroups: !1,
      serverSideSortOnServer: !1,
      serverSideFilterOnServer: !1,
      serverSidePivotResultFieldSeparator: '_',
      viewportRowModelPageSize: 5,
      viewportRowModelBufferSize: 5,
      alwaysShowHorizontalScroll: !1,
      alwaysShowVerticalScroll: !1,
      debounceVerticalScrollbar: !1,
      suppressHorizontalScroll: !1,
      suppressScrollOnNewData: !1,
      suppressScrollWhenPopupsAreOpen: !1,
      suppressAnimationFrame: !1,
      suppressMiddleClickScrolls: !1,
      suppressPreventDefaultOnMouseWheel: !1,
      rowMultiSelectWithClick: !1,
      suppressRowDeselection: !1,
      suppressRowClickSelection: !1,
      suppressCellFocus: !1,
      suppressHeaderFocus: !1,
      suppressMultiRangeSelection: !1,
      enableCellTextSelection: !1,
      enableRangeSelection: !1,
      enableRangeHandle: !1,
      enableFillHandle: !1,
      fillHandleDirection: 'xy',
      suppressClearOnFillReduction: !1,
      accentedSort: !1,
      unSortIcon: !1,
      suppressMultiSort: !1,
      alwaysMultiSort: !1,
      suppressMaintainUnsortedOrder: !1,
      suppressRowHoverHighlight: !1,
      suppressRowTransform: !1,
      columnHoverHighlight: !1,
      deltaSort: !1,
      enableGroupEdit: !1,
      suppressGroupMaintainValueType: !1,
      functionsPassive: !1,
      groupLockGroupColumns: 0,
      serverSideEnableClientSideSort: !1,
    },
    eS = {
      sideBar: { module: G.SideBarModule },
      statusBar: { module: G.StatusBarModule },
      enableCharts: { module: G.GridChartsModule },
      getMainMenuItems: { module: G.MenuModule },
      getContextMenuItems: { module: G.MenuModule },
      allowContextMenuWithControlKey: { module: G.MenuModule },
      enableAdvancedFilter: { module: G.AdvancedFilterModule },
      treeData: {
        supportedRowModels: ['clientSide', 'serverSide'],
        module: G.RowGroupingModule,
        dependencies: function (n) {
          var t,
            e = (t = n.rowModelType) !== null && t !== void 0 ? t : 'clientSide';
          switch (e) {
            case 'clientSide':
              var r = "treeData requires 'getDataPath' in the ".concat(e, ' row model.');
              return n.getDataPath ? null : r;
            case 'serverSide':
              var o =
                "treeData requires 'isServerSideGroup' and 'getServerSideGroupKey' in the ".concat(
                  e,
                  ' row model.'
                );
              return n.isServerSideGroup && n.getServerSideGroupKey ? null : o;
          }
          return null;
        },
      },
      masterDetail: { module: G.MasterDetailModule },
      enableRangeSelection: { module: G.RangeSelectionModule },
      enableRangeHandle: { dependencies: { enableRangeSelection: [!0] } },
      enableFillHandle: { dependencies: { enableRangeSelection: [!0] } },
      groupDefaultExpanded: { supportedRowModels: ['clientSide'] },
      groupIncludeFooter: {
        supportedRowModels: ['clientSide', 'serverSide'],
        dependencies: function (n) {
          var t,
            e = (t = n.rowModelType) !== null && t !== void 0 ? t : 'clientSide';
          switch (e) {
            case 'clientSide':
              return null;
            case 'serverSide':
              var r =
                'groupIncludeFooter is not supported alongside suppressServerSideInfiniteScroll';
              return n.suppressServerSideInfiniteScroll ? r : null;
          }
          return null;
        },
      },
      groupIncludeTotalFooter: { supportedRowModels: ['clientSide'] },
      groupRemoveSingleChildren: {
        dependencies: {
          groupHideOpenParents: [void 0, !1],
          groupRemoveLowestSingleChildren: [void 0, !1],
        },
      },
      groupRemoveLowestSingleChildren: {
        dependencies: {
          groupHideOpenParents: [void 0, !1],
          groupRemoveSingleChildren: [void 0, !1],
        },
      },
      groupSelectsChildren: { dependencies: { rowSelection: ['multiple'] } },
      suppressParentsInRowNodes: { dependencies: { groupSelectsChildren: [void 0, !1] } },
      viewportDatasource: { supportedRowModels: ['viewport'], module: G.ViewportRowModelModule },
      serverSideDatasource: {
        supportedRowModels: ['serverSide'],
        module: G.ServerSideRowModelModule,
      },
      cacheBlockSize: { supportedRowModels: ['serverSide', 'infinite'] },
      datasource: { supportedRowModels: ['infinite'], module: G.InfiniteRowModelModule },
      rowData: { supportedRowModels: ['clientSide'], module: G.ClientSideRowModelModule },
      columnDefs: function () {
        return jr;
      },
      defaultColDef: function () {
        return jr;
      },
      defaultColGroupDef: function () {
        return jr;
      },
      autoGroupColumnDef: function () {
        return jr;
      },
    },
    tS = {
      objectName: 'gridOptions',
      allProperties: ju(ju([], Wu(dt.ALL_PROPERTIES), !1), Wu(La.EVENT_CALLBACKS), !1),
      propertyExceptions: ['api', 'columnApi'],
      docsUrl: 'grid-options/',
      deprecations: JC,
      validations: eS,
    },
    Et = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    ji = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Xs = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    Uu = (function () {
      function n() {
        var e = this;
        (this.destroyed = !1),
          (this.domDataKey = '__AG_' + Math.random().toString()),
          (this.propertyEventService = new xt()),
          (this.globalEventHandlerFactory = function (r) {
            return function (o, i) {
              if (!e.destroyed) {
                var s = t.alwaysSyncGlobalEvents.has(o);
                if (!((s && !r) || (!s && r))) {
                  var a = La.getCallbackForEvent(o),
                    l = e.gridOptions[a];
                  typeof l == 'function' &&
                    e.frameworkOverrides.wrapOutgoing(function () {
                      l(i);
                    });
                }
              }
            };
          });
      }
      (t = n),
        Object.defineProperty(n.prototype, 'context', {
          get: function () {
            return this.gridOptions.context;
          },
          enumerable: !1,
          configurable: !0,
        }),
        (n.prototype.init = function () {
          this.columnApi = new Fu(this.api);
          var e = !this.get('suppressAsyncEvents');
          this.eventService.addGlobalListener(this.globalEventHandlerFactory().bind(this), e),
            this.eventService.addGlobalListener(this.globalEventHandlerFactory(!0).bind(this), !1),
            this.propertyEventService.setFrameworkOverrides(this.frameworkOverrides),
            this.getScrollbarWidth();
        }),
        (n.prototype.destroy = function () {
          (this.destroyed = !0), (this.columnApi = void 0);
        }),
        (n.prototype.get = function (e) {
          var r;
          return (r = this.gridOptions[e]) !== null && r !== void 0 ? r : ZC[e];
        }),
        (n.prototype.getCallback = function (e) {
          return this.mergeGridCommonParams(this.gridOptions[e]);
        }),
        (n.prototype.exists = function (e) {
          return P(this.gridOptions[e]);
        }),
        (n.prototype.mergeGridCommonParams = function (e) {
          var r = this;
          if (e) {
            var o = function (i) {
              var s = i;
              return (s.api = r.api), (s.columnApi = r.columnApi), (s.context = r.context), e(s);
            };
            return o;
          }
          return e;
        }),
        (n.toBoolean = function (e) {
          return typeof e == 'boolean'
            ? e
            : typeof e == 'string'
            ? e.toUpperCase() === 'TRUE' || e == ''
            : !1;
        }),
        (n.toNumber = function (e) {
          if (typeof e == 'number') return e;
          if (typeof e == 'string') {
            var r = parseInt(e);
            return isNaN(r) ? void 0 : r;
          }
        }),
        (n.toConstrainedNum = function (e, r) {
          return function (o) {
            var i = t.toNumber(o);
            if (!(i == null || i < e || i > r)) return i;
          };
        }),
        (n.getCoercedValue = function (e, r) {
          var o = t.PROPERTY_COERCIONS.get(e);
          return o ? o(r) : r;
        }),
        (n.getCoercedGridOptions = function (e) {
          var r = {};
          return (
            Object.entries(e).forEach(function (o) {
              var i = ji(o, 2),
                s = i[0],
                a = i[1],
                l = t.getCoercedValue(s, a);
              r[s] = l;
            }),
            r
          );
        }),
        (n.prototype.updateGridOptions = function (e) {
          var r = this,
            o = e.options,
            i = e.source,
            s = i === void 0 ? 'api' : i,
            a = { id: t.changeSetId++, properties: [] },
            l = [];
          Object.entries(o).forEach(function (u) {
            var c = ji(u, 2),
              p = c[0],
              d = c[1];
            s === 'api' &&
              hp[p] &&
              V(''.concat(p, ' is an initial property and cannot be updated.'));
            var h = t.getCoercedValue(p, d),
              f = typeof h == 'object' && s === 'api',
              y = r.gridOptions[p];
            if (f || y !== h) {
              r.gridOptions[p] = h;
              var m = { type: p, currentValue: h, previousValue: y, changeSet: a, source: s };
              l.push(m);
            }
          }),
            this.validationService.processGridOptions(this.gridOptions),
            (a.properties = l.map(function (u) {
              return u.type;
            })),
            l.forEach(function (u) {
              r.gridOptions.debug &&
                console.log(
                  'AG Grid: Updated property '.concat(u.type, ' from '),
                  u.previousValue,
                  ' to  ',
                  u.currentValue
                ),
                r.propertyEventService.dispatchEvent(u);
            });
        }),
        (n.prototype.addEventListener = function (e, r) {
          this.propertyEventService.addEventListener(e, r);
        }),
        (n.prototype.removeEventListener = function (e, r) {
          this.propertyEventService.removeEventListener(e, r);
        }),
        (n.prototype.getScrollbarWidth = function () {
          if (this.scrollbarWidth == null) {
            var e =
                typeof this.gridOptions.scrollbarWidth == 'number' &&
                this.gridOptions.scrollbarWidth >= 0,
              r = e ? this.gridOptions.scrollbarWidth : Qa();
            r != null &&
              ((this.scrollbarWidth = r),
              this.eventService.dispatchEvent({ type: g.EVENT_SCROLLBAR_WIDTH_CHANGED }));
          }
          return this.scrollbarWidth;
        }),
        (n.prototype.isRowModelType = function (e) {
          return (
            this.gridOptions.rowModelType === e ||
            (e === 'clientSide' && H(this.gridOptions.rowModelType))
          );
        }),
        (n.prototype.isDomLayout = function (e) {
          var r,
            o = (r = this.gridOptions.domLayout) !== null && r !== void 0 ? r : 'normal';
          return o === e;
        }),
        (n.prototype.isRowSelection = function () {
          return (
            this.gridOptions.rowSelection === 'single' ||
            this.gridOptions.rowSelection === 'multiple'
          );
        }),
        (n.prototype.useAsyncEvents = function () {
          return !this.get('suppressAsyncEvents');
        }),
        (n.prototype.isGetRowHeightFunction = function () {
          return typeof this.gridOptions.getRowHeight == 'function';
        }),
        (n.prototype.getRowHeightForNode = function (e, r, o) {
          if (
            (r === void 0 && (r = !1),
            o == null && (o = this.environment.getDefaultRowHeight()),
            this.isGetRowHeightFunction())
          ) {
            if (r) return { height: o, estimated: !0 };
            var i = { node: e, data: e.data },
              s = this.getCallback('getRowHeight')(i);
            if (this.isNumeric(s))
              return (
                s === 0 &&
                  V(
                    'The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead.'
                  ),
                { height: Math.max(1, s), estimated: !1 }
              );
          }
          if (e.detail && this.get('masterDetail')) return this.getMasterDetailRowHeight();
          var a =
            this.gridOptions.rowHeight && this.isNumeric(this.gridOptions.rowHeight)
              ? this.gridOptions.rowHeight
              : o;
          return { height: a, estimated: !1 };
        }),
        (n.prototype.getMasterDetailRowHeight = function () {
          return this.get('detailRowAutoHeight')
            ? { height: 1, estimated: !1 }
            : this.isNumeric(this.gridOptions.detailRowHeight)
            ? { height: this.gridOptions.detailRowHeight, estimated: !1 }
            : { height: 300, estimated: !1 };
        }),
        (n.prototype.getRowHeightAsNumber = function () {
          if (!this.gridOptions.rowHeight || H(this.gridOptions.rowHeight))
            return this.environment.getDefaultRowHeight();
          var e = this.environment.refreshRowHeightVariable();
          return e !== -1
            ? e
            : (console.warn('AG Grid row height must be a number if not using standard row model'),
              this.environment.getDefaultRowHeight());
        }),
        (n.prototype.isNumeric = function (e) {
          return !isNaN(e) && typeof e == 'number' && isFinite(e);
        }),
        (n.prototype.getDomDataKey = function () {
          return this.domDataKey;
        }),
        (n.prototype.getDomData = function (e, r) {
          var o = e[this.getDomDataKey()];
          return o ? o[r] : void 0;
        }),
        (n.prototype.setDomData = function (e, r, o) {
          var i = this.getDomDataKey(),
            s = e[i];
          H(s) && ((s = {}), (e[i] = s)), (s[r] = o);
        }),
        (n.prototype.getDocument = function () {
          var e = null;
          return (
            this.gridOptions.getDocument && P(this.gridOptions.getDocument)
              ? (e = this.gridOptions.getDocument())
              : this.eGridDiv && (e = this.eGridDiv.ownerDocument),
            e && P(e) ? e : document
          );
        }),
        (n.prototype.getWindow = function () {
          var e = this.getDocument();
          return e.defaultView || window;
        }),
        (n.prototype.getRootNode = function () {
          return this.eGridDiv.getRootNode();
        }),
        (n.prototype.getAsyncTransactionWaitMillis = function () {
          return P(this.gridOptions.asyncTransactionWaitMillis)
            ? this.gridOptions.asyncTransactionWaitMillis
            : 50;
        }),
        (n.prototype.isAnimateRows = function () {
          return this.get('ensureDomOrder') ? !1 : this.get('animateRows');
        }),
        (n.prototype.isGroupRowsSticky = function () {
          return !(
            this.get('suppressGroupRowsSticky') ||
            this.get('paginateChildRows') ||
            this.get('groupHideOpenParents') ||
            this.isDomLayout('print')
          );
        }),
        (n.prototype.isColumnsSortingCoupledToGroup = function () {
          var e = this.gridOptions.autoGroupColumnDef;
          return !(e != null && e.comparator) && !this.get('treeData');
        }),
        (n.prototype.getGroupAggFiltering = function () {
          var e = this.gridOptions.groupAggFiltering;
          if (typeof e == 'function') return this.getCallback('groupAggFiltering');
          if (e === !0)
            return function () {
              return !0;
            };
        }),
        (n.prototype.isGroupIncludeFooterTrueOrCallback = function () {
          var e = this.gridOptions.groupIncludeFooter;
          return e === !0 || typeof e == 'function';
        }),
        (n.prototype.getGroupIncludeFooter = function () {
          var e = this.gridOptions.groupIncludeFooter;
          return typeof e == 'function'
            ? this.getCallback('groupIncludeFooter')
            : e === !0
            ? function () {
                return !0;
              }
            : function () {
                return !1;
              };
        }),
        (n.prototype.isGroupMultiAutoColumn = function () {
          return this.gridOptions.groupDisplayType
            ? this.gridOptions.groupDisplayType === 'multipleColumns'
            : this.get('groupHideOpenParents');
        }),
        (n.prototype.isGroupUseEntireRow = function (e) {
          return e ? !1 : this.gridOptions.groupDisplayType === 'groupRows';
        }),
        (n.prototype.getGridCommonParams = function () {
          return { api: this.api, columnApi: this.columnApi, context: this.context };
        }),
        (n.prototype.addGridCommonParams = function (e) {
          var r = e;
          return (r.api = this.api), (r.columnApi = this.columnApi), (r.context = this.context), r;
        });
      var t;
      return (
        (n.alwaysSyncGlobalEvents = new Set([g.EVENT_GRID_PRE_DESTROYED])),
        (n.PROPERTY_COERCIONS = new Map(
          Xs(
            Xs(
              Xs(
                [],
                ji(
                  dt.BOOLEAN_PROPERTIES.map(function (e) {
                    return [e, t.toBoolean];
                  })
                ),
                !1
              ),
              ji(
                dt.NUMBER_PROPERTIES.map(function (e) {
                  return [e, t.toNumber];
                })
              ),
              !1
            ),
            [
              [
                'groupAggFiltering',
                function (e) {
                  return typeof e == 'function' ? e : t.toBoolean(e);
                },
              ],
              ['pageSize', t.toConstrainedNum(1, Number.MAX_VALUE)],
              ['autoSizePadding', t.toConstrainedNum(0, Number.MAX_VALUE)],
              ['keepDetailRowsCount', t.toConstrainedNum(1, Number.MAX_VALUE)],
              ['rowBuffer', t.toConstrainedNum(0, Number.MAX_VALUE)],
              ['infiniteInitialRowCount', t.toConstrainedNum(1, Number.MAX_VALUE)],
              ['cacheOverflowSize', t.toConstrainedNum(1, Number.MAX_VALUE)],
              ['cacheBlockSize', t.toConstrainedNum(1, Number.MAX_VALUE)],
              ['serverSideInitialRowCount', t.toConstrainedNum(1, Number.MAX_VALUE)],
              ['viewportRowModelPageSize', t.toConstrainedNum(1, Number.MAX_VALUE)],
              ['viewportRowModelBufferSize', t.toConstrainedNum(0, Number.MAX_VALUE)],
            ],
            !1
          )
        )),
        (n.changeSetId = 0),
        Et([v('gridOptions')], n.prototype, 'gridOptions', void 0),
        Et([v('eventService')], n.prototype, 'eventService', void 0),
        Et([v('environment')], n.prototype, 'environment', void 0),
        Et([v('frameworkOverrides')], n.prototype, 'frameworkOverrides', void 0),
        Et([v('eGridDiv')], n.prototype, 'eGridDiv', void 0),
        Et([v('validationService')], n.prototype, 'validationService', void 0),
        Et([v('gridApi')], n.prototype, 'api', void 0),
        Et([F], n.prototype, 'init', null),
        Et([Se], n.prototype, 'destroy', null),
        (n = t = Et([x('gridOptionsService')], n)),
        n
      );
    })(),
    rS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    oS = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    iS = (function (n) {
      rS(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.getLocaleTextFunc = function () {
          var e = this.gridOptionsService.getCallback('getLocaleText');
          if (e)
            return function (o, i, s) {
              var a = { key: o, defaultValue: i, variableValues: s };
              return e(a);
            };
          var r = this.gridOptionsService.get('localeText');
          return function (o, i, s) {
            var a = r && r[o];
            if (a && s && s.length)
              for (var l = 0; !(l >= s.length); ) {
                var u = a.indexOf('${variable}');
                if (u === -1) break;
                a = a.replace('${variable}', s[l++]);
              }
            return a ?? i;
          };
        }),
        (t = oS([x('localeService')], t)),
        t
      );
    })(D),
    nS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    sS = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    aS = (function (n) {
      nS(t, n);
      function t() {
        return n.call(this, t.TEMPLATE, 'vertical') || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          n.prototype.postConstruct.call(this),
            this.createManagedBean(new au(this.eContainer)),
            this.ctrlsService.registerFakeVScrollComp(this),
            this.addManagedListener(
              this.eventService,
              g.EVENT_ROW_CONTAINER_HEIGHT_CHANGED,
              this.onRowContainerHeightChanged.bind(this)
            );
        }),
        (t.prototype.setScrollVisible = function () {
          var e = this.scrollVisibleService.isVerticalScrollShowing(),
            r = this.invisibleScrollbar,
            o = (e && this.gridOptionsService.getScrollbarWidth()) || 0,
            i = o === 0 && r ? 16 : o;
          this.addOrRemoveCssClass('ag-scrollbar-invisible', r),
            Je(this.getGui(), i),
            Je(this.eViewport, i),
            Je(this.eContainer, i),
            this.setDisplayed(e, { skipAriaHidden: !0 });
        }),
        (t.prototype.onRowContainerHeightChanged = function () {
          var e = this.ctrlsService,
            r = e.getGridBodyCtrl(),
            o = r.getBodyViewportElement(),
            i = this.getScrollPosition(),
            s = o.scrollTop;
          i != s && this.setScrollPosition(s, !0);
        }),
        (t.prototype.getScrollPosition = function () {
          return this.getViewport().scrollTop;
        }),
        (t.prototype.setScrollPosition = function (e, r) {
          !r && !We(this.getViewport()) && this.attemptSettingScrollPosition(e),
            (this.getViewport().scrollTop = e);
        }),
        (t.TEMPLATE = `<div class="ag-body-vertical-scroll" aria-hidden="true">
            <div class="ag-body-vertical-scroll-viewport" ref="eViewport">
                <div class="ag-body-vertical-scroll-container" ref="eContainer"></div>
            </div>
        </div>`),
        sS([F], t.prototype, 'postConstruct', null),
        t
      );
    })(ku),
    lS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Fe = function () {
      return (
        (Fe =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Fe.apply(this, arguments)
      );
    },
    yr = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    _t = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Do = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    zu = {
      january: 'January',
      february: 'February',
      march: 'March',
      april: 'April',
      may: 'May',
      june: 'June',
      july: 'July',
      august: 'August',
      september: 'September',
      october: 'October',
      november: 'November',
      december: 'December',
    },
    Ku = [
      'january',
      'february',
      'march',
      'april',
      'may',
      'june',
      'july',
      'august',
      'september',
      'october',
      'november',
      'december',
    ],
    uS = (function (n) {
      lS(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.dataTypeDefinitions = {}),
          (e.isWaitingForRowData = !1),
          (e.isColumnTypeOverrideInDataTypeDefinitions = !1),
          (e.columnStateUpdatesPendingInference = {}),
          (e.columnStateUpdateListenerDestroyFuncs = []),
          e
        );
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          (this.groupHideOpenParents = this.gridOptionsService.get('groupHideOpenParents')),
            this.addManagedPropertyListener('groupHideOpenParents', function () {
              e.groupHideOpenParents = e.gridOptionsService.get('groupHideOpenParents');
            }),
            this.processDataTypeDefinitions(),
            this.addManagedPropertyListener('dataTypeDefinitions', function (r) {
              e.processDataTypeDefinitions(), e.columnModel.recreateColumnDefs(_r(r.source));
            });
        }),
        (t.prototype.processDataTypeDefinitions = function () {
          var e = this,
            r,
            o = this.getDefaultDataTypes();
          (this.dataTypeDefinitions = {}),
            Object.entries(o).forEach(function (s) {
              var a = _t(s, 2),
                l = a[0],
                u = a[1];
              e.dataTypeDefinitions[l] = Fe(Fe({}, u), {
                groupSafeValueFormatter: e.createGroupSafeValueFormatter(u),
              });
            });
          var i =
            (r = this.gridOptionsService.get('dataTypeDefinitions')) !== null && r !== void 0
              ? r
              : {};
          (this.dataTypeMatchers = {}),
            Object.entries(i).forEach(function (s) {
              var a = _t(s, 2),
                l = a[0],
                u = a[1],
                c = e.processDataTypeDefinition(u, i, [l], o);
              c &&
                ((e.dataTypeDefinitions[l] = c),
                u.dataTypeMatcher && (e.dataTypeMatchers[l] = u.dataTypeMatcher));
            }),
            this.checkObjectValueHandlers(o),
            ['dateString', 'text', 'number', 'boolean', 'date'].forEach(function (s) {
              var a = e.dataTypeMatchers[s];
              a && delete e.dataTypeMatchers[s],
                (e.dataTypeMatchers[s] = a ?? o[s].dataTypeMatcher);
            });
        }),
        (t.prototype.mergeDataTypeDefinitions = function (e, r) {
          var o = Fe(Fe({}, e), r);
          return (
            e.columnTypes &&
              r.columnTypes &&
              r.appendColumnTypes &&
              (o.columnTypes = Do(
                Do([], _t(this.convertColumnTypes(e.columnTypes)), !1),
                _t(this.convertColumnTypes(r.columnTypes)),
                !1
              )),
            o
          );
        }),
        (t.prototype.processDataTypeDefinition = function (e, r, o, i) {
          var s,
            a = e.extendsDataType;
          if (
            (e.columnTypes && (this.isColumnTypeOverrideInDataTypeDefinitions = !0),
            e.extendsDataType === e.baseDataType)
          ) {
            var l = i[a],
              u = r[a];
            if ((l && u && (l = u), !this.validateDataTypeDefinition(e, l, a))) return;
            s = this.mergeDataTypeDefinitions(l, e);
          } else {
            if (o.includes(a)) {
              V(
                'Data type definition hierarchies (via the "extendsDataType" property) cannot contain circular references.'
              );
              return;
            }
            var c = r[a];
            if (!this.validateDataTypeDefinition(e, c, a)) return;
            var p = this.processDataTypeDefinition(c, r, Do(Do([], _t(o), !1), [a], !1), i);
            if (!p) return;
            s = this.mergeDataTypeDefinitions(p, e);
          }
          return Fe(Fe({}, s), { groupSafeValueFormatter: this.createGroupSafeValueFormatter(s) });
        }),
        (t.prototype.validateDataTypeDefinition = function (e, r, o) {
          return r
            ? r.baseDataType !== e.baseDataType
              ? (V(
                  'The "baseDataType" property of a data type definition must match that of its parent.'
                ),
                !1)
              : !0
            : (V('The data type definition '.concat(o, ' does not exist.')), !1);
        }),
        (t.prototype.createGroupSafeValueFormatter = function (e) {
          var r = this;
          if (e.valueFormatter)
            return function (o) {
              var i, s;
              if (!((i = o.node) === null || i === void 0) && i.group) {
                var a = o.column.getAggFunc();
                if (a) {
                  if (a === 'first' || a === 'last') return e.valueFormatter(o);
                  if (e.baseDataType === 'number' && a !== 'count') {
                    if (typeof o.value == 'number') return e.valueFormatter(o);
                    if (typeof o.value == 'object') {
                      if (!o.value) return;
                      if ('toNumber' in o.value)
                        return e.valueFormatter(Fe(Fe({}, o), { value: o.value.toNumber() }));
                      if ('value' in o.value)
                        return e.valueFormatter(Fe(Fe({}, o), { value: o.value.value }));
                    }
                  }
                }
                if (!r.gridOptionsService.get('suppressGroupMaintainValueType')) return;
              } else if (r.groupHideOpenParents && o.column.isRowGroupActive()) {
                if (
                  typeof o.value != 'string' ||
                  (!((s = e.dataTypeMatcher) === null || s === void 0) && s.call(e, o.value))
                )
                  return e.valueFormatter(o);
                if (!r.gridOptionsService.get('suppressGroupMaintainValueType')) return;
              }
              return e.valueFormatter(o);
            };
        }),
        (t.prototype.updateColDefAndGetDataTypeDefinitionColumnType = function (e, r, o) {
          var i = r.cellDataType,
            s = r.field;
          if (
            (i === void 0 && (i = e.cellDataType),
            (i == null || i === !0) &&
              (i = this.canInferCellDataType(e, r) ? this.inferCellDataType(s, o) : !1),
            !i)
          ) {
            e.cellDataType = !1;
            return;
          }
          var a = this.dataTypeDefinitions[i];
          if (!a) {
            V('Missing data type definition - "'.concat(i, '"'));
            return;
          }
          return (
            (e.cellDataType = i),
            a.groupSafeValueFormatter && (e.valueFormatter = a.groupSafeValueFormatter),
            a.valueParser && (e.valueParser = a.valueParser),
            a.suppressDefaultProperties || this.setColDefPropertiesForBaseDataType(e, a, o),
            a.columnTypes
          );
        }),
        (t.prototype.updateColDefAndGetColumnType = function (e, r, o) {
          var i,
            s,
            a = this.updateColDefAndGetDataTypeDefinitionColumnType(e, r, o),
            l =
              (s = (i = r.type) !== null && i !== void 0 ? i : a) !== null && s !== void 0
                ? s
                : e.type;
          return (e.type = l), l ? this.convertColumnTypes(l) : void 0;
        }),
        (t.prototype.addColumnListeners = function (e) {
          if (this.isWaitingForRowData) {
            var r = this.columnStateUpdatesPendingInference[e.getColId()];
            if (r) {
              var o = function (i) {
                r.add(i.key);
              };
              e.addEventListener(J.EVENT_STATE_UPDATED, o),
                this.columnStateUpdateListenerDestroyFuncs.push(function () {
                  return e.removeEventListener(J.EVENT_STATE_UPDATED, o);
                });
            }
          }
        }),
        (t.prototype.canInferCellDataType = function (e, r) {
          var o = this,
            i;
          if (this.rowModel.getType() !== 'clientSide') return !1;
          var s = { cellRenderer: !0, valueGetter: !0, valueParser: !0, refData: !0 };
          if (this.doColDefPropsPreventInference(r, s)) return !1;
          var a = r.type === null ? e.type : r.type;
          if (a) {
            var l =
                (i = this.gridOptionsService.get('columnTypes')) !== null && i !== void 0 ? i : {},
              u = this.convertColumnTypes(a).some(function (c) {
                var p = l[c.trim()];
                return p && o.doColDefPropsPreventInference(p, s);
              });
            if (u) return !1;
          }
          return !this.doColDefPropsPreventInference(e, s);
        }),
        (t.prototype.doColDefPropsPreventInference = function (e, r) {
          var o = this;
          return [
            ['cellRenderer', 'agSparklineCellRenderer'],
            ['valueGetter', void 0],
            ['valueParser', void 0],
            ['refData', void 0],
          ].some(function (i) {
            var s = _t(i, 2),
              a = s[0],
              l = s[1];
            return o.doesColDefPropPreventInference(e, r, a, l);
          });
        }),
        (t.prototype.doesColDefPropPreventInference = function (e, r, o, i) {
          if (!r[o]) return !1;
          var s = e[o];
          return s === null ? ((r[o] = !1), !1) : i === void 0 ? !!s : s === i;
        }),
        (t.prototype.inferCellDataType = function (e, r) {
          var o;
          if (e) {
            var i,
              s = this.getInitialData();
            if (s) {
              var a =
                e.indexOf('.') >= 0 && !this.gridOptionsService.get('suppressFieldDotNotation');
              i = wr(s, e, a);
            } else this.initWaitForRowData(r);
            if (i != null) {
              var l = _t(
                  (o = Object.entries(this.dataTypeMatchers).find(function (c) {
                    var p = _t(c, 2);
                    p[0];
                    var d = p[1];
                    return d(i);
                  })) !== null && o !== void 0
                    ? o
                    : ['object'],
                  1
                ),
                u = l[0];
              return u;
            }
          }
        }),
        (t.prototype.getInitialData = function () {
          var e = this.gridOptionsService.get('rowData');
          if (e != null && e.length) return e[0];
          if (this.initialData) return this.initialData;
          var r = this.rowModel.getRootNode().allLeafChildren;
          return r != null && r.length ? r[0].data : null;
        }),
        (t.prototype.initWaitForRowData = function (e) {
          var r = this;
          if (
            ((this.columnStateUpdatesPendingInference[e] = new Set()), !this.isWaitingForRowData)
          ) {
            this.isWaitingForRowData = !0;
            var o = this.isColumnTypeOverrideInDataTypeDefinitions;
            o && this.columnModel.queueResizeOperations();
            var i = this.addManagedListener(
              this.eventService,
              g.EVENT_ROW_DATA_UPDATE_STARTED,
              function (s) {
                var a = s.firstRowData;
                if (a) {
                  i == null || i(),
                    (r.isWaitingForRowData = !1),
                    r.processColumnsPendingInference(a, o),
                    (r.columnStateUpdatesPendingInference = {}),
                    o && r.columnModel.processResizeOperations();
                  var l = { type: g.EVENT_DATA_TYPES_INFERRED };
                  r.eventService.dispatchEvent(l);
                }
              }
            );
          }
        }),
        (t.prototype.isPendingInference = function () {
          return this.isWaitingForRowData;
        }),
        (t.prototype.processColumnsPendingInference = function (e, r) {
          var o = this;
          this.initialData = e;
          var i = [];
          this.columnStateUpdateListenerDestroyFuncs.forEach(function (l) {
            return l();
          }),
            (this.columnStateUpdateListenerDestroyFuncs = []);
          var s = {},
            a = {};
          Object.entries(this.columnStateUpdatesPendingInference).forEach(function (l) {
            var u = _t(l, 2),
              c = u[0],
              p = u[1],
              d = o.columnModel.getGridColumn(c);
            if (d) {
              var h = d.getColDef();
              if (o.columnModel.resetColumnDefIntoColumn(d, 'cellDataTypeInferred')) {
                var f = d.getColDef();
                if (r && f.type && f.type !== h.type) {
                  var y = o.getUpdatedColumnState(d, p);
                  y.rowGroup && y.rowGroupIndex == null && (s[c] = y),
                    y.pivot && y.pivotIndex == null && (a[c] = y),
                    i.push(y);
                }
              }
            }
          }),
            r &&
              i.push.apply(
                i,
                Do([], _t(this.columnModel.generateColumnStateForRowGroupAndPivotIndexes(s, a)), !1)
              ),
            i.length && this.columnModel.applyColumnState({ state: i }, 'cellDataTypeInferred'),
            (this.initialData = null);
        }),
        (t.prototype.getUpdatedColumnState = function (e, r) {
          var o = this.columnModel.getColumnStateFromColDef(e);
          return (
            r.forEach(function (i) {
              delete o[i],
                i === 'rowGroup' ? delete o.rowGroupIndex : i === 'pivot' && delete o.pivotIndex;
            }),
            o
          );
        }),
        (t.prototype.checkObjectValueHandlers = function (e) {
          var r = this.dataTypeDefinitions.object,
            o = e.object;
          (this.hasObjectValueParser = r.valueParser !== o.valueParser),
            (this.hasObjectValueFormatter = r.valueFormatter !== o.valueFormatter);
        }),
        (t.prototype.convertColumnTypes = function (e) {
          var r = [];
          if (e instanceof Array) {
            var o = e.some(function (i) {
              return typeof i != 'string';
            });
            o
              ? console.warn("if colDef.type is supplied an array it should be of type 'string[]'")
              : (r = e);
          } else
            typeof e == 'string'
              ? (r = e.split(','))
              : console.warn("colDef.type should be of type 'string' | 'string[]'");
          return r;
        }),
        (t.prototype.getDateStringTypeDefinition = function (e) {
          var r;
          return e
            ? (r = this.getDataTypeDefinition(e)) !== null && r !== void 0
              ? r
              : this.dataTypeDefinitions.dateString
            : this.dataTypeDefinitions.dateString;
        }),
        (t.prototype.getDateParserFunction = function (e) {
          return this.getDateStringTypeDefinition(e).dateParser;
        }),
        (t.prototype.getDateFormatterFunction = function (e) {
          return this.getDateStringTypeDefinition(e).dateFormatter;
        }),
        (t.prototype.getDataTypeDefinition = function (e) {
          var r = e.getColDef();
          if (r.cellDataType) return this.dataTypeDefinitions[r.cellDataType];
        }),
        (t.prototype.getBaseDataType = function (e) {
          var r;
          return (r = this.getDataTypeDefinition(e)) === null || r === void 0
            ? void 0
            : r.baseDataType;
        }),
        (t.prototype.checkType = function (e, r) {
          var o;
          if (r == null) return !0;
          var i =
            (o = this.getDataTypeDefinition(e)) === null || o === void 0
              ? void 0
              : o.dataTypeMatcher;
          return i ? i(r) : !0;
        }),
        (t.prototype.validateColDef = function (e) {
          e.cellDataType === 'object' &&
            (e.valueFormatter === this.dataTypeDefinitions.object.groupSafeValueFormatter &&
              !this.hasObjectValueFormatter &&
              V(
                'Cell data type is "object" but no value formatter has been provided. Please either provide an object data type definition with a value formatter, or set "colDef.valueFormatter"'
              ),
            e.editable &&
              e.valueParser === this.dataTypeDefinitions.object.valueParser &&
              !this.hasObjectValueParser &&
              V(
                'Cell data type is "object" but no value parser has been provided. Please either provide an object data type definition with a value parser, or set "colDef.valueParser"'
              ));
        }),
        (t.prototype.setColDefPropertiesForBaseDataType = function (e, r, o) {
          var i = this,
            s = function (p, d, h) {
              var f = p.getColDef().valueFormatter;
              return (
                f === r.groupSafeValueFormatter && (f = r.valueFormatter),
                i.valueFormatterService.formatValue(p, d, h, f)
              );
            },
            a = X.__isRegistered(G.SetFilterModule, this.context.getGridId()),
            l = this.localeService.getLocaleTextFunc(),
            u = function (p) {
              var d = e.filterParams;
              e.filterParams = typeof d == 'object' ? Fe(Fe({}, d), p) : p;
            };
          switch (r.baseDataType) {
            case 'number': {
              (e.cellEditor = 'agNumberCellEditor'),
                a &&
                  u({
                    comparator: function (p, d) {
                      var h = p == null ? 0 : parseInt(p),
                        f = d == null ? 0 : parseInt(d);
                      return h === f ? 0 : h > f ? 1 : -1;
                    },
                  });
              break;
            }
            case 'boolean': {
              (e.cellEditor = 'agCheckboxCellEditor'),
                (e.cellRenderer = 'agCheckboxCellRenderer'),
                (e.suppressKeyboardEvent = function (p) {
                  return !!p.colDef.editable && p.event.key === _.SPACE;
                }),
                u(
                  a
                    ? {
                        valueFormatter: function (p) {
                          return P(p.value)
                            ? l(String(p.value), p.value ? 'True' : 'False')
                            : l('blanks', '(Blanks)');
                        },
                      }
                    : {
                        maxNumConditions: 1,
                        debounceMs: 0,
                        filterOptions: [
                          'empty',
                          {
                            displayKey: 'true',
                            displayName: 'True',
                            predicate: function (p, d) {
                              return d;
                            },
                            numberOfInputs: 0,
                          },
                          {
                            displayKey: 'false',
                            displayName: 'False',
                            predicate: function (p, d) {
                              return d === !1;
                            },
                            numberOfInputs: 0,
                          },
                        ],
                      }
                );
              break;
            }
            case 'date': {
              (e.cellEditor = 'agDateCellEditor'),
                (e.keyCreator = function (p) {
                  return s(p.column, p.node, p.value);
                }),
                a &&
                  u({
                    valueFormatter: function (p) {
                      var d = s(p.column, p.node, p.value);
                      return P(d) ? d : l('blanks', '(Blanks)');
                    },
                    treeList: !0,
                    treeListFormatter: function (p, d) {
                      if (d === 1 && p != null) {
                        var h = Ku[Number(p) - 1];
                        return l(h, zu[h]);
                      }
                      return p ?? l('blanks', '(Blanks)');
                    },
                  });
              break;
            }
            case 'dateString': {
              (e.cellEditor = 'agDateStringCellEditor'),
                (e.keyCreator = function (p) {
                  return s(p.column, p.node, p.value);
                });
              var c = r.dateParser;
              u(
                a
                  ? {
                      valueFormatter: function (p) {
                        var d = s(p.column, p.node, p.value);
                        return P(d) ? d : l('blanks', '(Blanks)');
                      },
                      treeList: !0,
                      treeListPathGetter: function (p) {
                        var d = c(p ?? void 0);
                        return d
                          ? [String(d.getFullYear()), String(d.getMonth() + 1), String(d.getDate())]
                          : null;
                      },
                      treeListFormatter: function (p, d) {
                        if (d === 1 && p != null) {
                          var h = Ku[Number(p) - 1];
                          return l(h, zu[h]);
                        }
                        return p ?? l('blanks', '(Blanks)');
                      },
                    }
                  : {
                      comparator: function (p, d) {
                        var h = c(d);
                        return d == null || h < p ? -1 : h > p ? 1 : 0;
                      },
                    }
              );
              break;
            }
            case 'object': {
              (e.cellEditorParams = { useFormatter: !0 }),
                (e.comparator = function (p, d) {
                  var h = i.columnModel.getPrimaryColumn(o),
                    f = h == null ? void 0 : h.getColDef();
                  if (!h || !f) return 0;
                  var y = p == null ? '' : s(h, null, p),
                    m = d == null ? '' : s(h, null, d);
                  return y === m ? 0 : y > m ? 1 : -1;
                }),
                (e.keyCreator = function (p) {
                  return s(p.column, p.node, p.value);
                }),
                a
                  ? u({
                      valueFormatter: function (p) {
                        var d = s(p.column, p.node, p.value);
                        return P(d) ? d : l('blanks', '(Blanks)');
                      },
                    })
                  : (e.filterValueGetter = function (p) {
                      return s(p.column, p.node, i.valueService.getValue(p.column, p.node));
                    });
              break;
            }
          }
        }),
        (t.prototype.getDefaultDataTypes = function () {
          var e = function (o) {
              return !!o.match('^\\d{4}-\\d{2}-\\d{2}$');
            },
            r = this.localeService.getLocaleTextFunc();
          return {
            number: {
              baseDataType: 'number',
              valueParser: function (o) {
                var i, s;
                return ((s = (i = o.newValue) === null || i === void 0 ? void 0 : i.trim) ===
                  null || s === void 0
                  ? void 0
                  : s.call(i)) === ''
                  ? null
                  : Number(o.newValue);
              },
              valueFormatter: function (o) {
                return o.value == null
                  ? ''
                  : typeof o.value != 'number' || isNaN(o.value)
                  ? r('invalidNumber', 'Invalid Number')
                  : String(o.value);
              },
              dataTypeMatcher: function (o) {
                return typeof o == 'number';
              },
            },
            text: {
              baseDataType: 'text',
              valueParser: function (o) {
                return o.newValue === '' ? null : zr(o.newValue);
              },
              dataTypeMatcher: function (o) {
                return typeof o == 'string';
              },
            },
            boolean: {
              baseDataType: 'boolean',
              valueParser: function (o) {
                var i, s;
                return o.newValue == null
                  ? o.newValue
                  : ((s = (i = o.newValue) === null || i === void 0 ? void 0 : i.trim) === null ||
                    s === void 0
                      ? void 0
                      : s.call(i)) === ''
                  ? null
                  : String(o.newValue).toLowerCase() === 'true';
              },
              valueFormatter: function (o) {
                return o.value == null ? '' : String(o.value);
              },
              dataTypeMatcher: function (o) {
                return typeof o == 'boolean';
              },
            },
            date: {
              baseDataType: 'date',
              valueParser: function (o) {
                return _e(o.newValue == null ? null : String(o.newValue));
              },
              valueFormatter: function (o) {
                var i;
                return o.value == null
                  ? ''
                  : !(o.value instanceof Date) || isNaN(o.value.getTime())
                  ? r('invalidDate', 'Invalid Date')
                  : (i = Xe(o.value, !1)) !== null && i !== void 0
                  ? i
                  : '';
              },
              dataTypeMatcher: function (o) {
                return o instanceof Date;
              },
            },
            dateString: {
              baseDataType: 'dateString',
              dateParser: function (o) {
                var i;
                return (i = _e(o)) !== null && i !== void 0 ? i : void 0;
              },
              dateFormatter: function (o) {
                var i;
                return (i = Xe(o ?? null, !1)) !== null && i !== void 0 ? i : void 0;
              },
              valueParser: function (o) {
                return e(String(o.newValue)) ? o.newValue : null;
              },
              valueFormatter: function (o) {
                return e(String(o.value)) ? o.value : '';
              },
              dataTypeMatcher: function (o) {
                return typeof o == 'string' && e(o);
              },
            },
            object: {
              baseDataType: 'object',
              valueParser: function () {
                return null;
              },
              valueFormatter: function (o) {
                var i;
                return (i = zr(o.value)) !== null && i !== void 0 ? i : '';
              },
            },
          };
        }),
        yr([v('rowModel')], t.prototype, 'rowModel', void 0),
        yr([v('columnModel')], t.prototype, 'columnModel', void 0),
        yr([v('columnUtils')], t.prototype, 'columnUtils', void 0),
        yr([v('valueService')], t.prototype, 'valueService', void 0),
        yr([v('valueFormatterService')], t.prototype, 'valueFormatterService', void 0),
        yr([F], t.prototype, 'init', null),
        (t = yr([x('dataTypeService')], t)),
        t
      );
    })(D),
    cS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    $u = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    pS = (function (n) {
      cS(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.parseValue = function (e, r, o, i) {
          var s = e.getColDef(),
            a = this.gridOptionsService.addGridCommonParams({
              node: r,
              data: r == null ? void 0 : r.data,
              oldValue: i,
              newValue: o,
              colDef: s,
              column: e,
            }),
            l = s.valueParser;
          return P(l) ? (typeof l == 'function' ? l(a) : this.expressionService.evaluate(l, a)) : o;
        }),
        $u([v('expressionService')], t.prototype, 'expressionService', void 0),
        (t = $u([x('valueParserService')], t)),
        t
      );
    })(D),
    dS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ao = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    hS = (function (n) {
      dS(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.waitingForColumns = !1), e;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.addManagedPropertyListener('columnDefs', function (r) {
            return e.setColumnDefs(r);
          });
        }),
        (t.prototype.start = function () {
          var e = this;
          this.ctrlsService.whenReady(function () {
            var r = e.gridOptionsService.get('columnDefs');
            r ? e.setColumnsAndData(r) : (e.waitingForColumns = !0), e.gridReady();
          });
        }),
        (t.prototype.setColumnsAndData = function (e) {
          this.columnModel.setColumnDefs(e ?? [], 'gridInitializing'), this.rowModel.start();
        }),
        (t.prototype.gridReady = function () {
          var e = this;
          this.dispatchGridReadyEvent();
          var r = X.__isRegistered(G.EnterpriseCoreModule, this.context.getGridId()),
            o = new Gs('AG Grid', function () {
              return e.gridOptionsService.get('debug');
            });
          o.log('initialised successfully, enterprise = '.concat(r));
        }),
        (t.prototype.dispatchGridReadyEvent = function () {
          var e = { type: g.EVENT_GRID_READY };
          this.eventService.dispatchEvent(e);
        }),
        (t.prototype.setColumnDefs = function (e) {
          var r = this.gridOptionsService.get('columnDefs');
          if (r) {
            if (this.waitingForColumns) {
              (this.waitingForColumns = !1), this.setColumnsAndData(r);
              return;
            }
            this.columnModel.setColumnDefs(r, _r(e.source));
          }
        }),
        Ao([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        Ao([v('columnModel')], t.prototype, 'columnModel', void 0),
        Ao([v('rowModel')], t.prototype, 'rowModel', void 0),
        Ao([F], t.prototype, 'postConstruct', null),
        (t = Ao([x('syncService')], t)),
        t
      );
    })(D),
    fS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Js = function () {
      return (
        (Js =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        Js.apply(this, arguments)
      );
    },
    bo = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    vS = (function (n) {
      fS(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (e.manuallyDisplayed = !1), e;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.addManagedListener(this.eventService, g.EVENT_ROW_DATA_UPDATED, function () {
            return e.onRowDataUpdated();
          }),
            this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, function () {
              return e.onNewColumnsLoaded();
            });
        }),
        (t.prototype.registerOverlayWrapperComp = function (e) {
          (this.overlayWrapperComp = e),
            (!this.gridOptionsService.get('columnDefs') ||
              (this.gridOptionsService.isRowModelType('clientSide') &&
                !this.gridOptionsService.get('rowData'))) &&
              this.showLoadingOverlay();
        }),
        (t.prototype.showLoadingOverlay = function () {
          if (!this.gridOptionsService.get('suppressLoadingOverlay')) {
            var e = {},
              r = this.userComponentFactory.getLoadingOverlayCompDetails(e);
            this.showOverlay(r, 'ag-overlay-loading-wrapper', 'loadingOverlayComponentParams');
          }
        }),
        (t.prototype.showNoRowsOverlay = function () {
          if (!this.gridOptionsService.get('suppressNoRowsOverlay')) {
            var e = {},
              r = this.userComponentFactory.getNoRowsOverlayCompDetails(e);
            this.showOverlay(r, 'ag-overlay-no-rows-wrapper', 'noRowsOverlayComponentParams');
          }
        }),
        (t.prototype.showOverlay = function (e, r, o) {
          var i = this,
            s = e.newAgStackInstance(),
            a = this.addManagedPropertyListener(o, function (l) {
              var u = l.currentValue;
              s.then(function (c) {
                c.refresh && c.refresh(i.gridOptionsService.addGridCommonParams(Js({}, u ?? {})));
              });
            });
          (this.manuallyDisplayed = this.columnModel.isReady() && !this.paginationProxy.isEmpty()),
            this.overlayWrapperComp.showOverlay(s, r, a);
        }),
        (t.prototype.hideOverlay = function () {
          (this.manuallyDisplayed = !1), this.overlayWrapperComp.hideOverlay();
        }),
        (t.prototype.showOrHideOverlay = function () {
          var e = this.paginationProxy.isEmpty(),
            r = this.gridOptionsService.get('suppressNoRowsOverlay');
          e && !r ? this.showNoRowsOverlay() : this.hideOverlay();
        }),
        (t.prototype.onRowDataUpdated = function () {
          this.showOrHideOverlay();
        }),
        (t.prototype.onNewColumnsLoaded = function () {
          this.columnModel.isReady() &&
            !this.paginationProxy.isEmpty() &&
            !this.manuallyDisplayed &&
            this.hideOverlay();
        }),
        bo([v('userComponentFactory')], t.prototype, 'userComponentFactory', void 0),
        bo([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        bo([v('columnModel')], t.prototype, 'columnModel', void 0),
        bo([F], t.prototype, 'postConstruct', null),
        (t = bo([x('overlayService')], t)),
        t
      );
    })(D),
    gS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    qt = function () {
      return (
        (qt =
          Object.assign ||
          function (n) {
            for (var t, e = 1, r = arguments.length; e < r; e++) {
              t = arguments[e];
              for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
            }
            return n;
          }),
        qt.apply(this, arguments)
      );
    },
    $e = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    yS = function (n) {
      var t = typeof Symbol == 'function' && Symbol.iterator,
        e = t && n[t],
        r = 0;
      if (e) return e.call(n);
      if (n && typeof n.length == 'number')
        return {
          next: function () {
            return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
          },
        };
      throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
    },
    mS = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    CS = (function (n) {
      gS(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.suppressEvents = !0),
          (e.queuedUpdateSources = new Set()),
          (e.dispatchStateUpdateEventDebounced = He(function () {
            return e.dispatchQueuedStateUpdateEvents();
          }, 0)),
          e
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this,
            r;
          (this.isClientSideRowModel = this.rowModel.getType() === 'clientSide'),
            (this.cachedState =
              (r = this.gridOptionsService.get('initialState')) !== null && r !== void 0 ? r : {}),
            this.ctrlsService.whenReady(function () {
              return e.suppressEventsAndDispatchInitEvent(function () {
                return e.setupStateOnGridReady();
              });
            });
          var o = this.addManagedListener(
              this.eventService,
              g.EVENT_NEW_COLUMNS_LOADED,
              function (a) {
                var l = a.source;
                l === 'gridInitializing' &&
                  (o == null || o(),
                  e.suppressEventsAndDispatchInitEvent(function () {
                    return e.setupStateOnColumnsInitialised();
                  }));
              }
            ),
            i = this.addManagedListener(this.eventService, g.EVENT_ROW_COUNT_READY, function () {
              i == null || i(),
                e.suppressEventsAndDispatchInitEvent(function () {
                  return e.setupStateOnRowCountReady();
                });
            }),
            s = this.addManagedListener(
              this.eventService,
              g.EVENT_FIRST_DATA_RENDERED,
              function () {
                s == null || s(),
                  e.suppressEventsAndDispatchInitEvent(function () {
                    return e.setupStateOnFirstDataRendered();
                  });
              }
            );
        }),
        (t.prototype.getState = function () {
          return this.cachedState;
        }),
        (t.prototype.setupStateOnGridReady = function () {
          var e = this;
          this.updateCachedState('sideBar', this.getSideBarState()),
            this.addManagedListener(
              this.eventService,
              g.EVENT_TOOL_PANEL_VISIBLE_CHANGED,
              function () {
                return e.updateCachedState('sideBar', e.getSideBarState());
              }
            ),
            this.addManagedListener(this.eventService, g.EVENT_SIDE_BAR_UPDATED, function () {
              return e.updateCachedState('sideBar', e.getSideBarState());
            });
        }),
        (t.prototype.setupStateOnColumnsInitialised = function () {
          var e = this,
            r,
            o = (r = this.gridOptionsService.get('initialState')) !== null && r !== void 0 ? r : {};
          this.setColumnState(o),
            this.setColumnGroupState(o),
            this.updateColumnState([
              'aggregation',
              'columnOrder',
              'columnPinning',
              'columnSizing',
              'columnVisibility',
              'pivot',
              'pivot',
              'rowGroup',
              'sort',
            ]),
            this.updateCachedState('columnGroup', this.getColumnGroupState()),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_VALUE_CHANGED, function () {
              return e.updateColumnState(['aggregation']);
            }),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_MOVED, function () {
              return e.updateColumnState(['columnOrder']);
            }),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_PINNED, function () {
              return e.updateColumnState(['columnPinning']);
            }),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_RESIZED, function () {
              return e.updateColumnState(['columnSizing']);
            }),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_VISIBLE, function () {
              return e.updateColumnState(['columnVisibility']);
            }),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_CHANGED, function () {
              return e.updateColumnState(['pivot']);
            }),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_PIVOT_MODE_CHANGED,
              function () {
                return e.updateColumnState(['pivot']);
              }
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_ROW_GROUP_CHANGED,
              function () {
                return e.updateColumnState(['rowGroup']);
              }
            ),
            this.addManagedListener(this.eventService, g.EVENT_SORT_CHANGED, function () {
              return e.updateColumnState(['sort']);
            }),
            this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, function () {
              return e.updateColumnState([
                'aggregation',
                'columnOrder',
                'columnPinning',
                'columnSizing',
                'columnVisibility',
                'pivot',
                'pivot',
                'rowGroup',
                'sort',
              ]);
            }),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_GROUP_OPENED, function () {
              return e.updateCachedState('columnGroup', e.getColumnGroupState());
            });
        }),
        (t.prototype.setupStateOnRowCountReady = function () {
          var e = this,
            r,
            o = (r = this.gridOptionsService.get('initialState')) !== null && r !== void 0 ? r : {},
            i = o.filter,
            s = o.rowGroupExpansion,
            a = o.rowSelection,
            l = o.pagination,
            u = this.gridOptionsService.get('advancedFilterModel');
          (i || u) && this.setFilterState(i, u),
            s && this.setRowGroupExpansionState(s),
            a && this.setRowSelectionState(a),
            l && this.setPaginationState(l),
            this.updateCachedState('filter', this.getFilterState()),
            this.updateCachedState('rowGroupExpansion', this.getRowGroupExpansionState()),
            this.updateCachedState('rowSelection', this.getRowSelectionState()),
            this.updateCachedState('pagination', this.getPaginationState()),
            this.addManagedListener(this.eventService, g.EVENT_FILTER_CHANGED, function () {
              return e.updateCachedState('filter', e.getFilterState());
            }),
            this.addManagedListener(this.eventService, g.EVENT_ROW_GROUP_OPENED, function () {
              return e.updateCachedState('rowGroupExpansion', e.getRowGroupExpansionState());
            }),
            this.addManagedListener(this.eventService, g.EVENT_EXPAND_COLLAPSE_ALL, function () {
              return e.updateCachedState('rowGroupExpansion', e.getRowGroupExpansionState());
            }),
            this.addManagedListener(this.eventService, g.EVENT_SELECTION_CHANGED, function () {
              return e.updateCachedState('rowSelection', e.getRowSelectionState());
            }),
            this.addManagedListener(this.eventService, g.EVENT_PAGINATION_CHANGED, function (c) {
              (c.newPage || c.newPageSize) &&
                e.updateCachedState('pagination', e.getPaginationState());
            });
        }),
        (t.prototype.setupStateOnFirstDataRendered = function () {
          var e = this,
            r,
            o = (r = this.gridOptionsService.get('initialState')) !== null && r !== void 0 ? r : {},
            i = o.scroll,
            s = o.rangeSelection,
            a = o.focusedCell,
            l = o.columnOrder;
          a && this.setFocusedCellState(a),
            s && this.setRangeSelectionState(s),
            i && this.setScrollState(i),
            this.setColumnPivotState(!!(l != null && l.orderedColIds)),
            this.updateCachedState('sideBar', this.getSideBarState()),
            this.updateCachedState('focusedCell', this.getFocusedCellState()),
            this.updateCachedState('rangeSelection', this.getRangeSelectionState()),
            this.updateCachedState('scroll', this.getScrollState()),
            this.addManagedListener(this.eventService, g.EVENT_CELL_FOCUSED, function () {
              return e.updateCachedState('focusedCell', e.getFocusedCellState());
            }),
            this.addManagedListener(
              this.eventService,
              g.EVENT_RANGE_SELECTION_CHANGED,
              function (u) {
                u.finished && e.updateCachedState('rangeSelection', e.getRangeSelectionState());
              }
            ),
            this.addManagedListener(this.eventService, g.EVENT_BODY_SCROLL_END, function () {
              return e.updateCachedState('scroll', e.getScrollState());
            });
        }),
        (t.prototype.getColumnState = function () {
          for (
            var e = this.columnModel.isPivotMode(),
              r = [],
              o = [],
              i = [],
              s = [],
              a = [],
              l = [],
              u = [],
              c = [],
              p = [],
              d = this.columnModel.getColumnState(),
              h = 0;
            h < d.length;
            h++
          ) {
            var f = d[h],
              y = f.colId,
              m = f.sort,
              C = f.sortIndex,
              w = f.rowGroup,
              E = f.rowGroupIndex,
              S = f.aggFunc,
              R = f.pivot,
              O = f.pivotIndex,
              b = f.pinned,
              A = f.hide,
              M = f.width,
              N = f.flex;
            p.push(y),
              m && (r[C ?? 0] = { colId: y, sort: m }),
              w && (o[E ?? 0] = y),
              typeof S == 'string' && i.push({ colId: y, aggFunc: S }),
              R && (s[O ?? 0] = y),
              b && (b === 'right' ? l : a).push(y),
              A && u.push(y),
              (N || M) && c.push({ colId: y, flex: N ?? void 0, width: M });
          }
          return {
            sort: r.length ? { sortModel: r } : void 0,
            rowGroup: o.length ? { groupColIds: o } : void 0,
            aggregation: i.length ? { aggregationModel: i } : void 0,
            pivot: s.length || e ? { pivotMode: e, pivotColIds: s } : void 0,
            columnPinning: a.length || l.length ? { leftColIds: a, rightColIds: l } : void 0,
            columnVisibility: u.length ? { hiddenColIds: u } : void 0,
            columnSizing: c.length ? { columnSizingModel: c } : void 0,
            columnOrder: p.length ? { orderedColIds: p } : void 0,
          };
        }),
        (t.prototype.setColumnState = function (e) {
          var r = e.sort,
            o = e.rowGroup,
            i = e.aggregation,
            s = e.pivot,
            a = e.columnPinning,
            l = e.columnVisibility,
            u = e.columnSizing,
            c = e.columnOrder,
            p = {},
            d = function (C) {
              var w = p[C];
              return w || ((w = { colId: C }), (p[C] = w), w);
            };
          r &&
            r.sortModel.forEach(function (C, w) {
              var E = C.colId,
                S = C.sort,
                R = d(E);
              (R.sort = S), (R.sortIndex = w);
            }),
            o &&
              o.groupColIds.forEach(function (C, w) {
                var E = d(C);
                (E.rowGroup = !0), (E.rowGroupIndex = w);
              }),
            i &&
              i.aggregationModel.forEach(function (C) {
                var w = C.colId,
                  E = C.aggFunc;
                d(w).aggFunc = E;
              }),
            s &&
              (s.pivotColIds.forEach(function (C, w) {
                var E = d(C);
                (E.pivot = !0), (E.pivotIndex = w);
              }),
              this.gridOptionsService.updateGridOptions({
                options: { pivotMode: s.pivotMode },
                source: 'gridInitializing',
              })),
            a &&
              (a.leftColIds.forEach(function (C) {
                d(C).pinned = 'left';
              }),
              a.rightColIds.forEach(function (C) {
                d(C).pinned = 'right';
              })),
            l &&
              l.hiddenColIds.forEach(function (C) {
                d(C).hide = !0;
              }),
            u &&
              u.columnSizingModel.forEach(function (C) {
                var w = C.colId,
                  E = C.flex,
                  S = C.width,
                  R = d(w);
                (R.flex = E ?? null), (R.width = S);
              });
          var h = c == null ? void 0 : c.orderedColIds,
            f = !!(h != null && h.length),
            y = f
              ? h.map(function (C) {
                  return d(C);
                })
              : Object.values(p);
          if (y.length) {
            this.columnStates = y;
            var m = {
              sort: null,
              sortIndex: null,
              rowGroup: null,
              rowGroupIndex: null,
              aggFunc: null,
              pivot: null,
              pivotIndex: null,
              pinned: null,
              hide: null,
              flex: null,
            };
            this.columnModel.applyColumnState(
              { state: y, applyOrder: f, defaultState: m },
              'gridInitializing'
            );
          }
        }),
        (t.prototype.setColumnPivotState = function (e) {
          var r,
            o,
            i = this.columnStates;
          this.columnStates = void 0;
          var s = this.columnGroupStates;
          if (((this.columnGroupStates = void 0), !!this.columnModel.isSecondaryColumnsPresent())) {
            if (i) {
              var a = [];
              try {
                for (var l = yS(i), u = l.next(); !u.done; u = l.next()) {
                  var c = u.value;
                  this.columnModel.getSecondaryColumn(c.colId) && a.push(c);
                }
              } catch (p) {
                r = { error: p };
              } finally {
                try {
                  u && !u.done && (o = l.return) && o.call(l);
                } finally {
                  if (r) throw r.error;
                }
              }
              this.columnModel.applyColumnState({ state: a, applyOrder: e }, 'gridInitializing');
            }
            s && this.columnModel.setColumnGroupState(s, 'gridInitializing');
          }
        }),
        (t.prototype.getColumnGroupState = function () {
          var e = this.columnModel.getColumnGroupState(),
            r = [];
          return (
            e.forEach(function (o) {
              var i = o.groupId,
                s = o.open;
              s && r.push(i);
            }),
            r.length ? { openColumnGroupIds: r } : void 0
          );
        }),
        (t.prototype.setColumnGroupState = function (e) {
          var r;
          if (e.hasOwnProperty('columnGroup')) {
            var o = new Set(
                (r = e.columnGroup) === null || r === void 0 ? void 0 : r.openColumnGroupIds
              ),
              i = this.columnModel.getColumnGroupState(),
              s = i.map(function (a) {
                var l = a.groupId,
                  u = o.has(l);
                return u && o.delete(l), { groupId: l, open: u };
              });
            o.forEach(function (a) {
              s.push({ groupId: a, open: !0 });
            }),
              s.length && (this.columnGroupStates = s),
              this.columnModel.setColumnGroupState(s, 'gridInitializing');
          }
        }),
        (t.prototype.getFilterState = function () {
          var e,
            r = this.filterManager.getFilterModel();
          r && Object.keys(r).length === 0 && (r = void 0);
          var o =
            (e = this.filterManager.getAdvancedFilterModel()) !== null && e !== void 0 ? e : void 0;
          return r || o ? { filterModel: r, advancedFilterModel: o } : void 0;
        }),
        (t.prototype.setFilterState = function (e, r) {
          var o = e ?? { advancedFilterModel: r },
            i = o.filterModel,
            s = o.advancedFilterModel;
          i && this.filterManager.setFilterModel(i, 'columnFilter'),
            s && this.filterManager.setAdvancedFilterModel(s);
        }),
        (t.prototype.getRangeSelectionState = function () {
          var e,
            r =
              (e = this.rangeService) === null || e === void 0
                ? void 0
                : e.getCellRanges().map(function (o) {
                    var i = o.id,
                      s = o.type,
                      a = o.startRow,
                      l = o.endRow,
                      u = o.columns,
                      c = o.startColumn;
                    return {
                      id: i,
                      type: s,
                      startRow: a,
                      endRow: l,
                      colIds: u.map(function (p) {
                        return p.getColId();
                      }),
                      startColId: c.getColId(),
                    };
                  });
          return r != null && r.length ? { cellRanges: r } : void 0;
        }),
        (t.prototype.setRangeSelectionState = function (e) {
          var r = this,
            o;
          if (this.gridOptionsService.get('enableRangeSelection')) {
            var i = e.cellRanges.map(function (s) {
              return qt(qt({}, s), {
                columns: s.colIds.map(function (a) {
                  return r.columnModel.getGridColumn(a);
                }),
                startColumn: r.columnModel.getGridColumn(s.startColId),
              });
            });
            (o = this.rangeService) === null || o === void 0 || o.setCellRanges(i);
          }
        }),
        (t.prototype.getScrollState = function () {
          var e, r, o;
          if (this.isClientSideRowModel) {
            var i =
                (e = this.ctrlsService.getGridBodyCtrl()) === null || e === void 0
                  ? void 0
                  : e.getScrollFeature(),
              s = (
                (r = i == null ? void 0 : i.getHScrollPosition()) !== null && r !== void 0
                  ? r
                  : { left: 0 }
              ).left,
              a = (
                (o = i == null ? void 0 : i.getVScrollPosition()) !== null && o !== void 0
                  ? o
                  : { top: 0 }
              ).top;
            return a || s ? { top: a, left: s } : void 0;
          }
        }),
        (t.prototype.setScrollState = function (e) {
          var r;
          if (this.isClientSideRowModel) {
            var o = e.top,
              i = e.left;
            (r = this.ctrlsService.getGridBodyCtrl()) === null ||
              r === void 0 ||
              r.getScrollFeature().setScrollPosition(o, i);
          }
        }),
        (t.prototype.getSideBarState = function () {
          var e, r;
          return (r =
            (e = this.sideBarService) === null || e === void 0 ? void 0 : e.getSideBarComp()) ===
            null || r === void 0
            ? void 0
            : r.getState();
        }),
        (t.prototype.getFocusedCellState = function () {
          if (this.isClientSideRowModel) {
            var e = this.focusService.getFocusedCell();
            if (e) {
              var r = e.column,
                o = e.rowIndex,
                i = e.rowPinned;
              return { colId: r.getColId(), rowIndex: o, rowPinned: i };
            }
          }
        }),
        (t.prototype.setFocusedCellState = function (e) {
          if (this.isClientSideRowModel) {
            var r = e.colId,
              o = e.rowIndex,
              i = e.rowPinned;
            this.focusService.setFocusedCell({
              column: this.columnModel.getGridColumn(r),
              rowIndex: o,
              rowPinned: i,
              forceBrowserFocus: !0,
              preventScrollOnBrowserFocus: !0,
            });
          }
        }),
        (t.prototype.getPaginationState = function () {
          var e = this.paginationProxy.getCurrentPage(),
            r = this.gridOptionsService.get('paginationAutoPageSize')
              ? void 0
              : this.paginationProxy.getPageSize();
          if (!(!e && !r)) return { page: e, pageSize: r };
        }),
        (t.prototype.setPaginationState = function (e) {
          e.pageSize &&
            !this.gridOptionsService.get('paginationAutoPageSize') &&
            this.paginationProxy.setPageSize(e.pageSize, 'initialState'),
            typeof e.page == 'number' && this.paginationProxy.setPage(e.page);
        }),
        (t.prototype.getRowSelectionState = function () {
          var e,
            r = this.selectionService.getSelectionState(),
            o =
              !r ||
              (!Array.isArray(r) &&
                (r.selectAll === !1 || r.selectAllChildren === !1) &&
                !(
                  !((e = r == null ? void 0 : r.toggledNodes) === null || e === void 0) && e.length
                ));
          return o ? void 0 : r;
        }),
        (t.prototype.setRowSelectionState = function (e) {
          this.selectionService.setSelectionState(e, 'gridInitializing');
        }),
        (t.prototype.getRowGroupExpansionState = function () {
          var e = this.expansionService.getExpandedRows();
          return e.length ? { expandedRowGroupIds: e } : void 0;
        }),
        (t.prototype.setRowGroupExpansionState = function (e) {
          this.expansionService.expandRows(e.expandedRowGroupIds);
        }),
        (t.prototype.updateColumnState = function (e) {
          var r = this,
            o = this.getColumnState(),
            i = !1;
          Object.entries(o).forEach(function (s) {
            var a = mS(s, 2),
              l = a[0],
              u = a[1];
            Yi(u, r.cachedState[l]) || (i = !0);
          }),
            (this.cachedState = qt(qt({}, this.cachedState), o)),
            i && this.dispatchStateUpdateEvent(e);
        }),
        (t.prototype.updateCachedState = function (e, r) {
          var o,
            i = this.cachedState[e];
          (this.cachedState = qt(qt({}, this.cachedState), ((o = {}), (o[e] = r), o))),
            Yi(r, i) || this.dispatchStateUpdateEvent([e]);
        }),
        (t.prototype.dispatchStateUpdateEvent = function (e) {
          var r = this;
          this.suppressEvents ||
            (e.forEach(function (o) {
              return r.queuedUpdateSources.add(o);
            }),
            this.dispatchStateUpdateEventDebounced());
        }),
        (t.prototype.dispatchQueuedStateUpdateEvents = function () {
          var e = Array.from(this.queuedUpdateSources);
          this.queuedUpdateSources.clear();
          var r = { type: g.EVENT_STATE_UPDATED, sources: e, state: this.cachedState };
          this.eventService.dispatchEvent(r);
        }),
        (t.prototype.suppressEventsAndDispatchInitEvent = function (e) {
          var r = this;
          (this.suppressEvents = !0),
            this.columnAnimationService.setSuppressAnimation(!0),
            e(),
            setTimeout(function () {
              (r.suppressEvents = !1),
                r.queuedUpdateSources.clear(),
                r.isAlive() &&
                  (r.columnAnimationService.setSuppressAnimation(!1),
                  r.dispatchStateUpdateEvent(['gridInitializing']));
            });
        }),
        $e([v('filterManager')], t.prototype, 'filterManager', void 0),
        $e([Y('rangeService')], t.prototype, 'rangeService', void 0),
        $e([v('ctrlsService')], t.prototype, 'ctrlsService', void 0),
        $e([Y('sideBarService')], t.prototype, 'sideBarService', void 0),
        $e([v('focusService')], t.prototype, 'focusService', void 0),
        $e([v('columnModel')], t.prototype, 'columnModel', void 0),
        $e([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        $e([v('rowModel')], t.prototype, 'rowModel', void 0),
        $e([v('selectionService')], t.prototype, 'selectionService', void 0),
        $e([v('expansionService')], t.prototype, 'expansionService', void 0),
        $e([v('columnAnimationService')], t.prototype, 'columnAnimationService', void 0),
        $e([F], t.prototype, 'postConstruct', null),
        (t = $e([x('stateService')], t)),
        t
      );
    })(D),
    SS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Zs = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    mr = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Fo = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    wS = (function (n) {
      SS(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.init = function () {
          this.processGridOptions(this.gridOptions);
        }),
        (t.prototype.processGridOptions = function (e) {
          this.processOptions(e, tS);
        }),
        (t.prototype.processColumnDefs = function (e) {
          this.processOptions(e, jr);
        }),
        (t.prototype.processOptions = function (e, r) {
          var o = this,
            i = r.validations,
            s = r.deprecations,
            a = r.allProperties,
            l = r.propertyExceptions,
            u = r.objectName,
            c = r.docsUrl;
          a &&
            this.gridOptions.suppressPropertyNamesCheck !== !0 &&
            this.checkProperties(e, Fo(Fo([], mr(l ?? []), !1), mr(Object.keys(s)), !1), a, u, c);
          var p = new Set(),
            d = Object.keys(e);
          d.forEach(function (h) {
            var f,
              y = s[h];
            if (y)
              if ('renamed' in y) {
                var m = y.renamed,
                  C = y.version;
                p.add(
                  'As of v'
                    .concat(C, ', ')
                    .concat(String(h), ' is deprecated. Please use ')
                    .concat(String(m), ' instead.')
                ),
                  (e[m] = e[h]);
              } else {
                var w = y.message,
                  C = y.version;
                p.add(
                  'As of v'
                    .concat(C, ', ')
                    .concat(String(h), ' is deprecated. ')
                    .concat(w ?? '')
                );
              }
            var E = e[h];
            if (!(E == null || E === !1)) {
              var S = i[h],
                R;
              if (S)
                if (typeof S == 'function') {
                  var O = S(e, o.gridOptions);
                  if (!O) return;
                  if ('objectName' in O) {
                    var b = e[h];
                    if (Array.isArray(b)) {
                      b.forEach(function (Z) {
                        o.processOptions(Z, O);
                      });
                      return;
                    }
                    o.processOptions(e[h], O);
                    return;
                  }
                  R = O;
                } else R = S;
              else return;
              var A = R.module,
                M = R.dependencies,
                N = R.supportedRowModels;
              if (N) {
                var I =
                  (f = o.gridOptions.rowModelType) !== null && f !== void 0 ? f : 'clientSide';
                if (!N.includes(I)) {
                  p.add(
                    ''.concat(String(h), " is not supported with the '").concat(I, "' row model.")
                  );
                  return;
                }
              }
              if (A) {
                var W = Array.isArray(A) ? A : [A],
                  ee = !0;
                if (
                  (W.forEach(function (Z) {
                    X.__assertRegistered(Z, String(h), o.context.getGridId()) ||
                      ((ee = !1),
                      p.add(
                        ''.concat(String(h), ' is only available when ').concat(Z, ' is loaded.')
                      ));
                  }),
                  !ee)
                )
                  return;
              }
              if (M) {
                var oe = o.checkForWarning(h, M, e);
                if (oe) {
                  p.add(oe);
                  return;
                }
              }
            }
          }),
            p.size > 0 &&
              p.forEach(function (h) {
                V(h);
              });
        }),
        (t.prototype.checkForWarning = function (e, r, o) {
          if (typeof r == 'function') return r(o, this.gridOptions);
          var i = Object.entries(r),
            s = i.find(function (c) {
              var p = mr(c, 2),
                d = p[0],
                h = p[1],
                f = o[d];
              return !h.includes(f);
            });
          if (!s) return null;
          var a = mr(s, 2),
            l = a[0],
            u = a[1];
          return u.length > 1
            ? "'"
                .concat(String(e), "' requires '")
                .concat(l, "' to be one of [")
                .concat(u.join(', '), '].')
            : "'".concat(String(e), "' requires '").concat(l, "' to be ").concat(u[0], '.');
        }),
        (t.prototype.checkProperties = function (e, r, o, i, s) {
          var a = ['__ob__', '__v_skip', '__metadata__'],
            l = sl(
              Object.getOwnPropertyNames(e),
              Fo(Fo(Fo([], mr(a), !1), mr(r), !1), mr(o), !1),
              o
            );
          if (
            (ye(l, function (c, p) {
              V(
                'invalid '
                  .concat(i, " property '")
                  .concat(c, "' did you mean any of these: ")
                  .concat(p.slice(0, 8).join(', '))
              );
            }),
            Object.keys(l).length > 0 && s)
          ) {
            var u = this.getFrameworkOverrides().getDocLink(s);
            V('to see all the valid '.concat(i, ' properties please check: ').concat(u));
          }
        }),
        Zs([v('gridOptions')], t.prototype, 'gridOptions', void 0),
        Zs([F], t.prototype, 'init', null),
        (t = Zs([x('validationService')], t)),
        t
      );
    })(D),
    ES = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Yu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    _S = (function (n) {
      ES(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.syncEventListeners = new Map()),
          (e.asyncEventListeners = new Map()),
          (e.syncGlobalEventListeners = new Set()),
          (e.asyncGlobalEventListeners = new Set()),
          e
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          this.frameworkEventWrappingService = new tn(this.getFrameworkOverrides());
        }),
        (t.prototype.addEventListener = function (e, r) {
          var o = this.frameworkEventWrappingService.wrap(r),
            i = this.gridOptionsService.useAsyncEvents(),
            s = i ? this.asyncEventListeners : this.syncEventListeners;
          s.has(e) || s.set(e, new Set()),
            s.get(e).add(o),
            this.eventService.addEventListener(e, o, i);
        }),
        (t.prototype.addGlobalListener = function (e) {
          var r = this.frameworkEventWrappingService.wrapGlobal(e),
            o = this.gridOptionsService.useAsyncEvents(),
            i = o ? this.asyncGlobalEventListeners : this.syncGlobalEventListeners;
          i.add(r), this.eventService.addGlobalListener(r, o);
        }),
        (t.prototype.removeEventListener = function (e, r) {
          var o,
            i = this.frameworkEventWrappingService.unwrap(r),
            s = this.asyncEventListeners.get(e),
            a = !!(s != null && s.delete(i));
          a || (o = this.asyncEventListeners.get(e)) === null || o === void 0 || o.delete(i),
            this.eventService.removeEventListener(e, i, a);
        }),
        (t.prototype.removeGlobalListener = function (e) {
          var r = this.frameworkEventWrappingService.unwrapGlobal(e),
            o = this.asyncGlobalEventListeners.delete(r);
          o || this.syncGlobalEventListeners.delete(r),
            this.eventService.removeGlobalListener(r, o);
        }),
        (t.prototype.destroyEventListeners = function (e, r) {
          var o = this;
          e.forEach(function (i, s) {
            i.forEach(function (a) {
              return o.eventService.removeEventListener(s, a, r);
            }),
              i.clear();
          }),
            e.clear();
        }),
        (t.prototype.destroyGlobalListeners = function (e, r) {
          var o = this;
          e.forEach(function (i) {
            return o.eventService.removeGlobalListener(i, r);
          }),
            e.clear();
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this),
            this.destroyEventListeners(this.syncEventListeners, !1),
            this.destroyEventListeners(this.asyncEventListeners, !0),
            this.destroyGlobalListeners(this.syncGlobalEventListeners, !1),
            this.destroyGlobalListeners(this.asyncGlobalEventListeners, !0);
        }),
        Yu([F], t.prototype, 'postConstruct', null),
        (t = Yu([x('apiEventService')], t)),
        t
      );
    })(D),
    RS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Ui = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    OS = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    TS = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    PS = (function (n) {
      RS(t, n);
      function t() {
        var e = n.call(this, '<span class="ag-paging-page-size"></span>') || this;
        return (
          (e.hasEmptyOption = !1),
          (e.handlePageSizeItemSelected = function () {
            if (e.selectPageSizeComp) {
              var r = e.selectPageSizeComp.getValue();
              if (r) {
                var o = Number(r);
                isNaN(o) ||
                  o < 1 ||
                  o === e.paginationProxy.getPageSize() ||
                  (e.paginationProxy.setPageSize(o, 'pageSizeSelector'),
                  e.hasEmptyOption && e.toggleSelectDisplay(!0),
                  e.selectPageSizeComp.getFocusableElement().focus());
              }
            }
          }),
          e
        );
      }
      return (
        (t.prototype.init = function () {
          var e = this;
          this.addManagedPropertyListener('paginationPageSizeSelector', function () {
            e.onPageSizeSelectorValuesChange();
          }),
            this.addManagedListener(this.eventService, g.EVENT_PAGINATION_CHANGED, function (r) {
              return e.handlePaginationChanged(r);
            });
        }),
        (t.prototype.handlePaginationChanged = function (e) {
          if (!(!this.selectPageSizeComp || !(e != null && e.newPageSize))) {
            var r = this.paginationProxy.getPageSize();
            this.getPageSizeSelectorValues().includes(r)
              ? this.selectPageSizeComp.setValue(r.toString())
              : this.hasEmptyOption
              ? this.selectPageSizeComp.setValue('')
              : this.toggleSelectDisplay(!0);
          }
        }),
        (t.prototype.toggleSelectDisplay = function (e) {
          this.selectPageSizeComp && this.reset(),
            e &&
              (this.reloadPageSizesSelector(),
              this.selectPageSizeComp && this.appendChild(this.selectPageSizeComp));
        }),
        (t.prototype.reset = function () {
          de(this.getGui()),
            this.selectPageSizeComp &&
              (this.destroyBean(this.selectPageSizeComp), (this.selectPageSizeComp = void 0));
        }),
        (t.prototype.onPageSizeSelectorValuesChange = function () {
          this.selectPageSizeComp &&
            this.shouldShowPageSizeSelector() &&
            this.reloadPageSizesSelector();
        }),
        (t.prototype.shouldShowPageSizeSelector = function () {
          return (
            this.gridOptionsService.get('pagination') &&
            !this.gridOptionsService.get('suppressPaginationPanel') &&
            !this.gridOptionsService.get('paginationAutoPageSize') &&
            this.gridOptionsService.get('paginationPageSizeSelector') !== !1
          );
        }),
        (t.prototype.reloadPageSizesSelector = function () {
          var e = this,
            r = this.getPageSizeSelectorValues(),
            o = this.paginationProxy.getPageSize(),
            i = !o || !r.includes(o);
          i &&
            (r.unshift(''),
            V(`The paginationPageSize grid option is set to a value that is not in the list of page size options.
                Please make sure that the paginationPageSize grid option is set to one of the values in the 
                paginationPageSizeSelector array, or set the paginationPageSizeSelector to false to hide the page size selector.`)),
            this.selectPageSizeComp &&
              (this.destroyBean(this.selectPageSizeComp), (this.selectPageSizeComp = void 0));
          var s = this.localeService.getLocaleTextFunc(),
            a = s('pageSizeSelectorLabel', 'Page Size:'),
            l = r.map(function (c) {
              return { value: String(c), text: String(c) };
            }),
            u = s('ariaPageSizeSelectorLabel', 'Page Size');
          (this.selectPageSizeComp = this.createManagedBean(new ei())
            .addOptions(l)
            .setValue(String(i ? '' : o))
            .setAriaLabel(u)
            .setLabel(a)
            .onValueChange(function () {
              return e.handlePageSizeItemSelected();
            })),
            (this.hasEmptyOption = i);
        }),
        (t.prototype.getPageSizeSelectorValues = function () {
          var e = [20, 50, 100],
            r = this.gridOptionsService.get('paginationPageSizeSelector');
          return !Array.isArray(r) || !this.validateValues(r)
            ? e
            : TS([], OS(r), !1).sort(function (o, i) {
                return o - i;
              });
        }),
        (t.prototype.validateValues = function (e) {
          if (!e.length)
            return (
              V(`The paginationPageSizeSelector grid option is an empty array. This is most likely a mistake.
                If you want to hide the page size selector, please set the paginationPageSizeSelector to false.`),
              !1
            );
          for (var r = 0; r < e.length; r++) {
            var o = e[r],
              i = typeof o == 'number',
              s = o > 0;
            if (!i)
              return (
                V(`The paginationPageSizeSelector grid option contains a non-numeric value.
                    Please make sure that all values in the paginationPageSizeSelector array are numbers.`),
                !1
              );
            if (!s)
              return (
                V(`The paginationPageSizeSelector grid option contains a negative number or zero.
                    Please make sure that all values in the paginationPageSizeSelector array are positive.`),
                !1
              );
          }
          return !0;
        }),
        (t.prototype.destroy = function () {
          this.toggleSelectDisplay(!1), n.prototype.destroy.call(this);
        }),
        Ui([v('localeService')], t.prototype, 'localeService', void 0),
        Ui([v('gridOptionsService')], t.prototype, 'gridOptionsService', void 0),
        Ui([v('paginationProxy')], t.prototype, 'paginationProxy', void 0),
        Ui([F], t.prototype, 'init', null),
        t
      );
    })(k),
    DS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ea = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    AS = (function (n) {
      DS(t, n);
      function t() {
        var e = n.call(this) || this;
        return (
          (e.descriptionContainer = null), (e.announceValue = He(e.announceValue.bind(e), 200)), e
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this.gridOptionsService.getDocument(),
            r = (this.descriptionContainer = e.createElement('div'));
          r.classList.add('ag-aria-description-container'),
            dn(r, 'polite'),
            Va(r, 'additions text'),
            Ga(r, !0),
            this.eGridDiv.appendChild(r);
        }),
        (t.prototype.announceValue = function (e) {
          var r = this;
          this.descriptionContainer &&
            ((this.descriptionContainer.textContent = ''),
            setTimeout(function () {
              r.descriptionContainer.textContent = e;
            }, 50));
        }),
        (t.prototype.destroy = function () {
          n.prototype.destroy.call(this);
          var e = this.descriptionContainer;
          e && (de(e), e.parentElement && e.parentElement.removeChild(e)),
            (this.descriptionContainer = null),
            (this.eGridDiv = null);
        }),
        ea([v('eGridDiv')], t.prototype, 'eGridDiv', void 0),
        ea([F], t.prototype, 'postConstruct', null),
        (t = ea([x('ariaAnnouncementService')], t)),
        t
      );
    })(D),
    qu = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Qu = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    };
  function Xu(n, t, e) {
    if (!t) return pt('No gridOptions provided to createGrid'), {};
    var r = Uu.getCoercedGridOptions(t),
      o = new FS().create(
        n,
        r,
        function (s) {
          var a = new Gm(n);
          s.createBean(a);
        },
        void 0,
        e
      );
    if (!Object.isFrozen(t) && !(e != null && e.frameworkOverrides)) {
      var i = 'https://ag-grid.com/javascript-data-grid/grid-interface/#grid-api';
      Object.defineProperty(t, 'api', {
        get: function () {
          pt('gridOptions.api is no longer supported. See '.concat(i, '.'));
        },
        configurable: !0,
      }),
        Object.defineProperty(t, 'columnApi', {
          get: function () {
            pt(
              'gridOptions.columnApi is no longer supported and all methods moved to the grid api. See '.concat(
                i,
                '.'
              )
            );
          },
          configurable: !0,
        });
    }
    return o;
  }
  var bS = 1,
    FS = (function () {
      function n() {}
      return (
        (n.prototype.create = function (t, e, r, o, i) {
          var s,
            a = !!e.debug,
            l = (s = e.gridId) !== null && s !== void 0 ? s : String(bS++),
            u = this.getRegisteredModules(i, l),
            c = this.createBeansList(e.rowModelType, u, l),
            p = this.createProvidedBeans(t, e, i);
          if (!c) {
            pt('Failed to create grid.');
            return;
          }
          var d = { providedBeanInstances: p, beanClasses: c, debug: a, gridId: l },
            h = new Gs('Context', function () {
              return d.debug;
            }),
            f = new Ac(d, h),
            y = f.getBean('beans');
          return (
            this.registerModuleUserComponents(y, u),
            this.registerStackComponents(y, u),
            this.registerControllers(y, u),
            r(f),
            y.syncService.start(),
            o && o(f),
            y.gridApi
          );
        }),
        (n.prototype.registerControllers = function (t, e) {
          e.forEach(function (r) {
            r.controllers &&
              r.controllers.forEach(function (o) {
                return t.ctrlsFactory.register(o);
              });
          });
        }),
        (n.prototype.registerStackComponents = function (t, e) {
          var r = this.createAgStackComponentsList(e);
          t.agStackComponentsRegistry.setupComponents(r);
        }),
        (n.prototype.getRegisteredModules = function (t, e) {
          var r = t ? t.modules : null,
            o = X.__getRegisteredModules(e),
            i = [],
            s = {},
            a = function (l, u, c) {
              var p = function (d) {
                s[d.moduleName] || ((s[d.moduleName] = !0), i.push(d), X.__register(d, l, c));
              };
              p(u),
                u.dependantModules &&
                  u.dependantModules.forEach(function (d) {
                    return a(l, d, c);
                  });
            };
          return (
            r &&
              r.forEach(function (l) {
                return a(!0, l, e);
              }),
            o &&
              o.forEach(function (l) {
                return a(!X.__isPackageBased(), l, void 0);
              }),
            i
          );
        }),
        (n.prototype.registerModuleUserComponents = function (t, e) {
          var r = this.extractModuleEntity(e, function (o) {
            return o.userComponents ? o.userComponents : [];
          });
          r.forEach(function (o) {
            t.userComponentRegistry.registerDefaultComponent(o.componentName, o.componentClass);
          });
        }),
        (n.prototype.createProvidedBeans = function (t, e, r) {
          var o = r ? r.frameworkOverrides : null;
          H(o) && (o = new dm());
          var i = {
            gridOptions: e,
            eGridDiv: t,
            globalEventListener: r ? r.globalEventListener : null,
            globalSyncEventListener: r ? r.globalSyncEventListener : null,
            frameworkOverrides: o,
          };
          return r && r.providedBeanInstances && Object.assign(i, r.providedBeanInstances), i;
        }),
        (n.prototype.createAgStackComponentsList = function (t) {
          var e = [
              { componentName: 'AgCheckbox', componentClass: ti },
              { componentName: 'AgRadioButton', componentClass: _l },
              { componentName: 'AgToggleButton', componentClass: Ay },
              { componentName: 'AgInputTextField', componentClass: lr },
              { componentName: 'AgInputTextArea', componentClass: Fy },
              { componentName: 'AgInputNumberField', componentClass: ns },
              { componentName: 'AgInputDateField', componentClass: My },
              { componentName: 'AgInputRange', componentClass: xy },
              { componentName: 'AgRichSelect', componentClass: ky },
              { componentName: 'AgSelect', componentClass: ei },
              { componentName: 'AgSlider', componentClass: jy },
              { componentName: 'AgGridBody', componentClass: bv },
              { componentName: 'AgHeaderRoot', componentClass: Vg },
              { componentName: 'AgSortIndicator', componentClass: us },
              { componentName: 'AgPagination', componentClass: yC },
              { componentName: 'AgPageSizeSelector', componentClass: PS },
              { componentName: 'AgOverlayWrapper', componentClass: CC },
              { componentName: 'AgGroupComponent', componentClass: zy },
              { componentName: 'AgRowContainer', componentClass: Kv },
              { componentName: 'AgFakeHorizontalScroll', componentClass: zC },
              { componentName: 'AgFakeVerticalScroll', componentClass: aS },
              { componentName: 'AgAutocomplete', componentClass: cm },
            ],
            r = this.extractModuleEntity(t, function (o) {
              return o.agStackComponents ? o.agStackComponents : [];
            });
          return (e = e.concat(r)), e;
        }),
        (n.prototype.createBeansList = function (t, e, r) {
          t === void 0 && (t = 'clientSide');
          var o = e.filter(function (u) {
              return !u.rowModel || u.rowModel === t;
            }),
            i = {
              clientSide: G.ClientSideRowModelModule,
              infinite: G.InfiniteRowModelModule,
              serverSide: G.ServerSideRowModelModule,
              viewport: G.ViewportRowModelModule,
            };
          if (!i[t]) {
            pt('Could not find row model for rowModelType = ' + t);
            return;
          }
          if (X.__assertRegistered(i[t], "rowModelType = '".concat(t, "'"), r)) {
            var s = [
                tu,
                wC,
                RC,
                FC,
                $m,
                Jl,
                Vh,
                eC,
                rC,
                Jg,
                rf,
                hC,
                Bg,
                iS,
                wS,
                Cy,
                sf,
                dp,
                xt,
                Uu,
                im,
                Au,
                cf,
                sp,
                Mg,
                Oy,
                fy,
                Pm,
                zc,
                bm,
                Cm,
                Nv,
                qm,
                Rm,
                Mm,
                up,
                sy,
                Wg,
                he,
                Fu,
                Vs,
                Iv,
                cC,
                gm,
                yy,
                Py,
                Lv,
                Hm,
                jm,
                zm,
                vC,
                Yc,
                Jm,
                ey,
                AC,
                gp,
                MC,
                IC,
                _y,
                NC,
                HC,
                $C,
                qC,
                WC,
                uS,
                pS,
                Zl,
                hS,
                vS,
                CS,
                ry,
                _S,
                AS,
                iy,
              ],
              a = this.extractModuleEntity(o, function (u) {
                return u.beans ? u.beans : [];
              });
            s.push.apply(s, Qu([], qu(a), !1));
            var l = [];
            return (
              s.forEach(function (u) {
                l.indexOf(u) < 0 && l.push(u);
              }),
              l
            );
          }
        }),
        (n.prototype.extractModuleEntity = function (t, e) {
          return [].concat.apply([], Qu([], qu(t.map(e)), !1));
        }),
        n
      );
    })(),
    Ju;
  (function (n) {
    (n.InsideBase = 'insideBase'),
      (n.InsideEnd = 'insideEnd'),
      (n.Center = 'center'),
      (n.OutsideEnd = 'outsideEnd');
  })(Ju || (Ju = {}));
  /**
   * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
   * @version v31.1.1
   * @link https://www.ag-grid.com/
   * @license MIT
   */ var Ur = typeof global > 'u' ? {} : global;
  (Ur.HTMLElement = typeof HTMLElement > 'u' ? {} : HTMLElement),
    (Ur.HTMLButtonElement = typeof HTMLButtonElement > 'u' ? {} : HTMLButtonElement),
    (Ur.HTMLSelectElement = typeof HTMLSelectElement > 'u' ? {} : HTMLSelectElement),
    (Ur.HTMLInputElement = typeof HTMLInputElement > 'u' ? {} : HTMLInputElement),
    (Ur.Node = typeof Node > 'u' ? {} : Node),
    (Ur.MouseEvent = typeof MouseEvent > 'u' ? {} : MouseEvent);
  var Lo = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Mo = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    LS = (function () {
      function n(t, e, r, o, i, s) {
        (this.nextId = 0),
          (this.rowCountReady = !1),
          (this.allNodesMap = {}),
          (this.rootNode = t),
          (this.gridOptionsService = e),
          (this.eventService = r),
          (this.columnModel = o),
          (this.beans = s),
          (this.selectionService = i),
          (this.rootNode.group = !0),
          (this.rootNode.level = -1),
          (this.rootNode.id = n.ROOT_NODE_ID),
          (this.rootNode.allLeafChildren = []),
          (this.rootNode.childrenAfterGroup = []),
          (this.rootNode.childrenAfterSort = []),
          (this.rootNode.childrenAfterAggFilter = []),
          (this.rootNode.childrenAfterFilter = []);
      }
      return (
        (n.prototype.getCopyOfNodesMap = function () {
          return j.cloneObject(this.allNodesMap);
        }),
        (n.prototype.getRowNode = function (t) {
          return this.allNodesMap[t];
        }),
        (n.prototype.setRowData = function (t) {
          var e = this;
          if (typeof t == 'string') {
            console.warn(
              'AG Grid: rowData must be an array, however you passed in a string. If you are loading JSON, make sure you convert the JSON string to JavaScript objects first'
            );
            return;
          }
          (this.rowCountReady = !0), this.dispatchRowDataUpdateStartedEvent(t);
          var r = this.rootNode,
            o = this.rootNode.sibling;
          (r.childrenAfterFilter = null),
            (r.childrenAfterGroup = null),
            (r.childrenAfterAggFilter = null),
            (r.childrenAfterSort = null),
            (r.childrenMapped = null),
            r.updateHasChildren(),
            (this.nextId = 0),
            (this.allNodesMap = {}),
            t
              ? (r.allLeafChildren = t.map(function (i) {
                  return e.createNode(i, e.rootNode, n.TOP_LEVEL);
                }))
              : ((r.allLeafChildren = []), (r.childrenAfterGroup = [])),
            o &&
              ((o.childrenAfterFilter = r.childrenAfterFilter),
              (o.childrenAfterGroup = r.childrenAfterGroup),
              (o.childrenAfterAggFilter = r.childrenAfterAggFilter),
              (o.childrenAfterSort = r.childrenAfterSort),
              (o.childrenMapped = r.childrenMapped),
              (o.allLeafChildren = r.allLeafChildren));
        }),
        (n.prototype.updateRowData = function (t, e) {
          (this.rowCountReady = !0), this.dispatchRowDataUpdateStartedEvent(t.add);
          var r = { remove: [], update: [], add: [] },
            o = [];
          return (
            this.executeRemove(t, r, o),
            this.executeUpdate(t, r, o),
            this.executeAdd(t, r),
            this.updateSelection(o, 'rowDataChanged'),
            e && j.sortRowNodesByOrder(this.rootNode.allLeafChildren, e),
            r
          );
        }),
        (n.prototype.isRowCountReady = function () {
          return this.rowCountReady;
        }),
        (n.prototype.dispatchRowDataUpdateStartedEvent = function (t) {
          var e = {
            type: g.EVENT_ROW_DATA_UPDATE_STARTED,
            firstRowData: t != null && t.length ? t[0] : null,
          };
          this.eventService.dispatchEvent(e);
        }),
        (n.prototype.updateSelection = function (t, e) {
          var r = t.length > 0;
          if (
            (r &&
              this.selectionService.setNodesSelected({
                newValue: !1,
                nodes: t,
                suppressFinishActions: !0,
                source: e,
              }),
            this.selectionService.updateGroupsFromChildrenSelections(e),
            r)
          ) {
            var o = { type: g.EVENT_SELECTION_CHANGED, source: e };
            this.eventService.dispatchEvent(o);
          }
        }),
        (n.prototype.executeAdd = function (t, e) {
          var r = this,
            o,
            i = t.add,
            s = t.addIndex;
          if (!j.missingOrEmpty(i)) {
            var a = i.map(function (y) {
              return r.createNode(y, r.rootNode, n.TOP_LEVEL);
            });
            if (typeof s == 'number' && s >= 0) {
              var l = this.rootNode.allLeafChildren,
                u = l.length,
                c = s,
                p = this.gridOptionsService.get('treeData');
              if (p && s > 0 && u > 0) {
                for (var d = 0; d < u; d++)
                  if (((o = l[d]) === null || o === void 0 ? void 0 : o.rowIndex) == s - 1) {
                    c = d + 1;
                    break;
                  }
              }
              var h = l.slice(0, c),
                f = l.slice(c, l.length);
              this.rootNode.allLeafChildren = Mo(Mo(Mo([], Lo(h), !1), Lo(a), !1), Lo(f), !1);
            } else
              this.rootNode.allLeafChildren = Mo(
                Mo([], Lo(this.rootNode.allLeafChildren), !1),
                Lo(a),
                !1
              );
            this.rootNode.sibling &&
              (this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren),
              (e.add = a);
          }
        }),
        (n.prototype.executeRemove = function (t, e, r) {
          var o = this,
            i = t.remove;
          if (!j.missingOrEmpty(i)) {
            var s = {};
            i.forEach(function (a) {
              var l = o.lookupRowNode(a);
              l &&
                (l.isSelected() && r.push(l),
                l.clearRowTopAndRowIndex(),
                (s[l.id] = !0),
                delete o.allNodesMap[l.id],
                e.remove.push(l));
            }),
              (this.rootNode.allLeafChildren = this.rootNode.allLeafChildren.filter(function (a) {
                return !s[a.id];
              })),
              this.rootNode.sibling &&
                (this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren);
          }
        }),
        (n.prototype.executeUpdate = function (t, e, r) {
          var o = this,
            i = t.update;
          j.missingOrEmpty(i) ||
            i.forEach(function (s) {
              var a = o.lookupRowNode(s);
              a &&
                (a.updateData(s),
                !a.selectable && a.isSelected() && r.push(a),
                o.setMasterForRow(a, s, n.TOP_LEVEL, !1),
                e.update.push(a));
            });
        }),
        (n.prototype.lookupRowNode = function (t) {
          var e = this.gridOptionsService.getCallback('getRowId'),
            r;
          if (e) {
            var o = e({ data: t, level: 0 });
            if (((r = this.allNodesMap[o]), !r))
              return (
                console.error(
                  'AG Grid: could not find row id='.concat(
                    o,
                    ', data item was not found for this id'
                  )
                ),
                null
              );
          } else if (
            ((r = this.rootNode.allLeafChildren.find(function (i) {
              return i.data === t;
            })),
            !r)
          )
            return (
              console.error('AG Grid: could not find data item as object was not found', t),
              console.error('Consider using getRowId to help the Grid find matching row data'),
              null
            );
          return r || null;
        }),
        (n.prototype.createNode = function (t, e, r) {
          var o = new U(this.beans);
          (o.group = !1), this.setMasterForRow(o, t, r, !0);
          var i = this.gridOptionsService.get('suppressParentsInRowNodes');
          return (
            e && !i && (o.parent = e),
            (o.level = r),
            o.setDataAndId(t, this.nextId.toString()),
            this.allNodesMap[o.id] &&
              console.warn(
                "AG Grid: duplicate node id '".concat(
                  o.id,
                  "' detected from getRowId callback, this could cause issues in your grid."
                )
              ),
            (this.allNodesMap[o.id] = o),
            this.nextId++,
            o
          );
        }),
        (n.prototype.setMasterForRow = function (t, e, r, o) {
          var i = this.gridOptionsService.get('treeData');
          if (i) t.setMaster(!1), o && (t.expanded = !1);
          else {
            var s = this.gridOptionsService.get('masterDetail');
            if (s) {
              var a = this.gridOptionsService.get('isRowMaster');
              a ? t.setMaster(a(e)) : t.setMaster(!0);
            } else t.setMaster(!1);
            if (o) {
              var l = this.columnModel.getRowGroupColumns(),
                u = l ? l.length : 0,
                c = r + u;
              t.expanded = t.master ? this.isExpanded(c) : !1;
            }
          }
        }),
        (n.prototype.isExpanded = function (t) {
          var e = this.gridOptionsService.get('groupDefaultExpanded');
          return e === -1 ? !0 : t < e;
        }),
        (n.TOP_LEVEL = 0),
        (n.ROOT_NODE_ID = 'ROOT_NODE_ID'),
        n
      );
    })(),
    MS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Le = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    Me = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    Ie = function (n, t, e) {
      if (e || arguments.length === 2)
        for (var r = 0, o = t.length, i; r < o; r++)
          (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
      return n.concat(i || Array.prototype.slice.call(t));
    },
    Rt;
  (function (n) {
    (n[(n.Normal = 0)] = 'Normal'),
      (n[(n.AfterFilter = 1)] = 'AfterFilter'),
      (n[(n.AfterFilterAndSort = 2)] = 'AfterFilterAndSort'),
      (n[(n.PivotNodes = 3)] = 'PivotNodes');
  })(Rt || (Rt = {}));
  var IS = (function (n) {
      MS(t, n);
      function t() {
        var e = (n !== null && n.apply(this, arguments)) || this;
        return (
          (e.onRowHeightChanged_debounced = j.debounce(e.onRowHeightChanged.bind(e), 100)),
          (e.rowsToDisplay = []),
          (e.hasStarted = !1),
          (e.shouldSkipSettingDataOnStart = !1),
          (e.isRefreshingModel = !1),
          (e.rowCountReady = !1),
          e
        );
      }
      return (
        (t.prototype.init = function () {
          var e = this,
            r = this.refreshModel.bind(this, { step: z.EVERYTHING }),
            o = !this.gridOptionsService.get('suppressAnimationFrame'),
            i = this.refreshModel.bind(this, {
              step: z.EVERYTHING,
              afterColumnsChanged: !0,
              keepRenderedRows: !0,
              animate: o,
            });
          this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, i),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, r),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_VALUE_CHANGED,
              this.onValueChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_COLUMN_PIVOT_CHANGED,
              this.refreshModel.bind(this, { step: z.PIVOT })
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_FILTER_CHANGED,
              this.onFilterChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_SORT_CHANGED,
              this.onSortChanged.bind(this)
            ),
            this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_MODE_CHANGED, r),
            this.addManagedListener(
              this.eventService,
              g.EVENT_GRID_STYLES_CHANGED,
              this.onGridStylesChanges.bind(this)
            ),
            this.addManagedListener(this.eventService, g.EVENT_GRID_READY, function () {
              return e.onGridReady();
            }),
            this.addPropertyListeners(),
            (this.rootNode = new U(this.beans)),
            (this.nodeManager = new LS(
              this.rootNode,
              this.gridOptionsService,
              this.eventService,
              this.columnModel,
              this.selectionService,
              this.beans
            ));
        }),
        (t.prototype.addPropertyListeners = function () {
          var e = this,
            r = new Set(['treeData', 'masterDetail']),
            o = new Set([
              'suppressParentsInRowNodes',
              'groupDefaultExpanded',
              'groupAllowUnbalanced',
              'initialGroupOrderComparator',
              'groupHideOpenParents',
              'groupDisplayType',
            ]),
            i = new Set(['excludeChildrenWhenTreeDataFiltering']),
            s = new Set([
              'removePivotHeaderRowWhenSingleValueColumn',
              'pivotRowTotals',
              'pivotColumnGroupTotals',
              'suppressExpandablePivotGroups',
            ]),
            a = new Set([
              'getGroupRowAgg',
              'alwaysAggregateAtRootLevel',
              'groupIncludeTotalFooter',
              'suppressAggFilteredOnly',
            ]),
            l = new Set(['postSortRows', 'groupDisplayType', 'accentedSort']),
            u = new Set([]),
            c = new Set([
              'groupRemoveSingleChildren',
              'groupRemoveLowestSingleChildren',
              'groupIncludeFooter',
            ]),
            p = Ie(
              Ie(
                Ie(
                  Ie(
                    Ie(Ie(Ie(Ie(Ie([], Me(r), !1), Me(o), !1), Me(i), !1), Me(s), !1), Me(s), !1),
                    Me(a),
                    !1
                  ),
                  Me(l),
                  !1
                ),
                Me(u),
                !1
              ),
              Me(c),
              !1
            );
          this.addManagedPropertyListeners(p, function (d) {
            var h,
              f = (h = d.changeSet) === null || h === void 0 ? void 0 : h.properties;
            if (f) {
              var y = function (m) {
                return f.some(function (C) {
                  return m.has(C);
                });
              };
              if (y(r)) {
                e.setRowData(
                  e.rootNode.allLeafChildren.map(function (m) {
                    return m.data;
                  })
                );
                return;
              }
              if (y(o)) {
                e.refreshModel({ step: z.EVERYTHING });
                return;
              }
              if (y(i)) {
                e.refreshModel({ step: z.FILTER });
                return;
              }
              if (y(s)) {
                e.refreshModel({ step: z.PIVOT });
                return;
              }
              if (y(a)) {
                e.refreshModel({ step: z.AGGREGATE });
                return;
              }
              if (y(l)) {
                e.refreshModel({ step: z.SORT });
                return;
              }
              if (y(u)) {
                e.refreshModel({ step: z.FILTER_AGGREGATES });
                return;
              }
              y(c) && e.refreshModel({ step: z.MAP });
            }
          }),
            this.addManagedPropertyListener('rowHeight', function () {
              return e.resetRowHeights();
            });
        }),
        (t.prototype.start = function () {
          (this.hasStarted = !0),
            this.shouldSkipSettingDataOnStart
              ? this.dispatchUpdateEventsAndRefresh()
              : this.setInitialData();
        }),
        (t.prototype.setInitialData = function () {
          var e = this.gridOptionsService.get('rowData');
          e && ((this.shouldSkipSettingDataOnStart = !0), this.setRowData(e));
        }),
        (t.prototype.ensureRowHeightsValid = function (e, r, o, i) {
          var s,
            a = !1;
          do {
            s = !1;
            for (
              var l = this.getRowIndexAtPixel(e),
                u = this.getRowIndexAtPixel(r),
                c = Math.max(l, o),
                p = Math.min(u, i),
                d = c;
              d <= p;
              d++
            ) {
              var h = this.getRow(d);
              if (h.rowHeightEstimated) {
                var f = this.gridOptionsService.getRowHeightForNode(h);
                h.setRowHeight(f.height), (s = !0), (a = !0);
              }
            }
            s && this.setRowTopAndRowIndex();
          } while (s);
          return a;
        }),
        (t.prototype.setRowTopAndRowIndex = function () {
          for (
            var e = this.environment.getDefaultRowHeight(),
              r = 0,
              o = new Set(),
              i = this.gridOptionsService.isDomLayout('normal'),
              s = 0;
            s < this.rowsToDisplay.length;
            s++
          ) {
            var a = this.rowsToDisplay[s];
            if ((a.id != null && o.add(a.id), a.rowHeight == null)) {
              var l = this.gridOptionsService.getRowHeightForNode(a, i, e);
              a.setRowHeight(l.height, l.estimated);
            }
            a.setRowTop(r), a.setRowIndex(s), (r += a.rowHeight);
          }
          return o;
        }),
        (t.prototype.clearRowTopAndRowIndex = function (e, r) {
          var o = e.isActive(),
            i = function (a) {
              a && a.id != null && !r.has(a.id) && a.clearRowTopAndRowIndex();
            },
            s = function (a) {
              if ((i(a), i(a.detailNode), i(a.sibling), a.hasChildren() && a.childrenAfterGroup)) {
                var l = a.level == -1,
                  u = o && !l && !a.expanded;
                u || a.childrenAfterGroup.forEach(s);
              }
            };
          s(this.rootNode);
        }),
        (t.prototype.ensureRowsAtPixel = function (e, r, o) {
          var i = this;
          o === void 0 && (o = 0);
          var s = this.getRowIndexAtPixel(r),
            a = this.getRow(s),
            l = !this.gridOptionsService.get('suppressAnimationFrame');
          return a === e[0]
            ? !1
            : (e.forEach(function (u) {
                j.removeFromArray(i.rootNode.allLeafChildren, u);
              }),
              e.forEach(function (u, c) {
                j.insertIntoArray(i.rootNode.allLeafChildren, u, Math.max(s + o, 0) + c);
              }),
              this.refreshModel({
                step: z.EVERYTHING,
                keepRenderedRows: !0,
                keepEditingRows: !0,
                animate: l,
              }),
              !0);
        }),
        (t.prototype.highlightRowAtPixel = function (e, r) {
          var o = r != null ? this.getRowIndexAtPixel(r) : null,
            i = o != null ? this.getRow(o) : null;
          if (!i || !e || i === e || r == null) {
            this.lastHighlightedRow &&
              (this.lastHighlightedRow.setHighlighted(null), (this.lastHighlightedRow = null));
            return;
          }
          var s = this.getHighlightPosition(r, i);
          this.lastHighlightedRow &&
            this.lastHighlightedRow !== i &&
            (this.lastHighlightedRow.setHighlighted(null), (this.lastHighlightedRow = null)),
            i.setHighlighted(s),
            (this.lastHighlightedRow = i);
        }),
        (t.prototype.getHighlightPosition = function (e, r) {
          if (!r) {
            var o = this.getRowIndexAtPixel(e);
            if (((r = this.getRow(o || 0)), !r)) return et.Below;
          }
          var i = r.rowTop,
            s = r.rowHeight;
          return e - i < s / 2 ? et.Above : et.Below;
        }),
        (t.prototype.getLastHighlightedRowNode = function () {
          return this.lastHighlightedRow;
        }),
        (t.prototype.isLastRowIndexKnown = function () {
          return !0;
        }),
        (t.prototype.getRowCount = function () {
          return this.rowsToDisplay ? this.rowsToDisplay.length : 0;
        }),
        (t.prototype.getTopLevelRowCount = function () {
          var e = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;
          if (e) return 1;
          var r = this.rootNode.childrenAfterAggFilter;
          return r ? r.length : 0;
        }),
        (t.prototype.getTopLevelRowDisplayedIndex = function (e) {
          var r = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;
          if (r) return e;
          var o = this.rootNode.childrenAfterSort[e];
          if (this.gridOptionsService.get('groupHideOpenParents'))
            for (; o.expanded && o.childrenAfterSort && o.childrenAfterSort.length > 0; )
              o = o.childrenAfterSort[0];
          return o.rowIndex;
        }),
        (t.prototype.getRowBounds = function (e) {
          if (j.missing(this.rowsToDisplay)) return null;
          var r = this.rowsToDisplay[e];
          return r ? { rowTop: r.rowTop, rowHeight: r.rowHeight } : null;
        }),
        (t.prototype.onRowGroupOpened = function () {
          var e = this.gridOptionsService.isAnimateRows();
          this.refreshModel({ step: z.MAP, keepRenderedRows: !0, animate: e });
        }),
        (t.prototype.onFilterChanged = function (e) {
          if (!e.afterDataChange) {
            var r = this.gridOptionsService.isAnimateRows(),
              o =
                e.columns.length === 0 ||
                e.columns.some(function (s) {
                  return s.isPrimary();
                }),
              i = o ? z.FILTER : z.FILTER_AGGREGATES;
            this.refreshModel({ step: i, keepRenderedRows: !0, animate: r });
          }
        }),
        (t.prototype.onSortChanged = function () {
          var e = this.gridOptionsService.isAnimateRows();
          this.refreshModel({
            step: z.SORT,
            keepRenderedRows: !0,
            animate: e,
            keepEditingRows: !0,
          });
        }),
        (t.prototype.getType = function () {
          return 'clientSide';
        }),
        (t.prototype.onValueChanged = function () {
          this.columnModel.isPivotActive()
            ? this.refreshModel({ step: z.PIVOT })
            : this.refreshModel({ step: z.AGGREGATE });
        }),
        (t.prototype.createChangePath = function (e) {
          var r = j.missingOrEmpty(e),
            o = new Ti(!1, this.rootNode);
          return (r || this.gridOptionsService.get('treeData')) && o.setInactive(), o;
        }),
        (t.prototype.isSuppressModelUpdateAfterUpdateTransaction = function (e) {
          if (
            !this.gridOptionsService.get('suppressModelUpdateAfterUpdateTransaction') ||
            e.rowNodeTransactions == null
          )
            return !1;
          var r = e.rowNodeTransactions.filter(function (i) {
              return (
                (i.add != null && i.add.length > 0) || (i.remove != null && i.remove.length > 0)
              );
            }),
            o = r == null || r.length == 0;
          return o;
        }),
        (t.prototype.buildRefreshModelParams = function (e) {
          var r = z.EVERYTHING,
            o = {
              everything: z.EVERYTHING,
              group: z.EVERYTHING,
              filter: z.FILTER,
              map: z.MAP,
              aggregate: z.AGGREGATE,
              sort: z.SORT,
              pivot: z.PIVOT,
            };
          if ((j.exists(e) && (r = o[e]), j.missing(r))) {
            console.error(
              'AG Grid: invalid step '
                .concat(e, ', available steps are ')
                .concat(Object.keys(o).join(', '))
            );
            return;
          }
          var i = !this.gridOptionsService.get('suppressAnimationFrame'),
            s = { step: r, keepRenderedRows: !0, keepEditingRows: !0, animate: i };
          return s;
        }),
        (t.prototype.refreshModel = function (e) {
          if (
            !(
              !this.hasStarted ||
              this.isRefreshingModel ||
              this.columnModel.shouldRowModelIgnoreRefresh()
            )
          ) {
            var r = typeof e == 'object' && 'step' in e ? e : this.buildRefreshModelParams(e);
            if (r && !this.isSuppressModelUpdateAfterUpdateTransaction(r)) {
              var o = this.createChangePath(r.rowNodeTransactions);
              switch (((this.isRefreshingModel = !0), r.step)) {
                case z.EVERYTHING:
                  this.doRowGrouping(
                    r.rowNodeTransactions,
                    r.rowNodeOrder,
                    o,
                    !!r.afterColumnsChanged
                  );
                case z.FILTER:
                  this.doFilter(o);
                case z.PIVOT:
                  this.doPivot(o);
                case z.AGGREGATE:
                  this.doAggregate(o);
                case z.FILTER_AGGREGATES:
                  this.doFilterAggregates(o);
                case z.SORT:
                  this.doSort(r.rowNodeTransactions, o);
                case z.MAP:
                  this.doRowsToDisplay();
              }
              var i = this.setRowTopAndRowIndex();
              this.clearRowTopAndRowIndex(o, i), (this.isRefreshingModel = !1);
              var s = {
                type: g.EVENT_MODEL_UPDATED,
                animate: r.animate,
                keepRenderedRows: r.keepRenderedRows,
                newData: r.newData,
                newPage: !1,
                keepUndoRedoStack: r.keepUndoRedoStack,
              };
              this.eventService.dispatchEvent(s);
            }
          }
        }),
        (t.prototype.isEmpty = function () {
          var e =
            j.missing(this.rootNode.allLeafChildren) || this.rootNode.allLeafChildren.length === 0;
          return j.missing(this.rootNode) || e || !this.columnModel.isReady();
        }),
        (t.prototype.isRowsToRender = function () {
          return j.exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0;
        }),
        (t.prototype.getNodesInRangeForSelection = function (e, r) {
          var o = !r,
            i = !1,
            s = [],
            a = this.gridOptionsService.get('groupSelectsChildren');
          return (
            this.forEachNodeAfterFilterAndSort(function (l) {
              if (!i) {
                if (o && (l === r || l === e) && ((i = !0), l.group && a)) {
                  s.push.apply(s, Ie([], Me(l.allLeafChildren), !1));
                  return;
                }
                if (!o) {
                  if (l !== r && l !== e) return;
                  o = !0;
                }
                var u = !l.group || !a;
                if (u) {
                  s.push(l);
                  return;
                }
              }
            }),
            s
          );
        }),
        (t.prototype.setDatasource = function (e) {
          console.error('AG Grid: should never call setDatasource on clientSideRowController');
        }),
        (t.prototype.getTopLevelNodes = function () {
          return this.rootNode ? this.rootNode.childrenAfterGroup : null;
        }),
        (t.prototype.getRootNode = function () {
          return this.rootNode;
        }),
        (t.prototype.getRow = function (e) {
          return this.rowsToDisplay[e];
        }),
        (t.prototype.isRowPresent = function (e) {
          return this.rowsToDisplay.indexOf(e) >= 0;
        }),
        (t.prototype.getRowIndexAtPixel = function (e) {
          if (this.isEmpty() || this.rowsToDisplay.length === 0) return -1;
          var r = 0,
            o = this.rowsToDisplay.length - 1;
          if (e <= 0) return 0;
          var i = j.last(this.rowsToDisplay);
          if (i.rowTop <= e) return this.rowsToDisplay.length - 1;
          for (var s = -1, a = -1; ; ) {
            var l = Math.floor((r + o) / 2),
              u = this.rowsToDisplay[l];
            if (this.isRowInPixel(u, e)) return l;
            u.rowTop < e ? (r = l + 1) : u.rowTop > e && (o = l - 1);
            var c = s === r && a === o;
            if (c) return l;
            (s = r), (a = o);
          }
        }),
        (t.prototype.isRowInPixel = function (e, r) {
          var o = e.rowTop,
            i = e.rowTop + e.rowHeight,
            s = o <= r && i > r;
          return s;
        }),
        (t.prototype.forEachLeafNode = function (e) {
          this.rootNode.allLeafChildren &&
            this.rootNode.allLeafChildren.forEach(function (r, o) {
              return e(r, o);
            });
        }),
        (t.prototype.forEachNode = function (e, r) {
          r === void 0 && (r = !1),
            this.recursivelyWalkNodesAndCallback({
              nodes: Ie([], Me(this.rootNode.childrenAfterGroup || []), !1),
              callback: e,
              recursionType: Rt.Normal,
              index: 0,
              includeFooterNodes: r,
            });
        }),
        (t.prototype.forEachNodeAfterFilter = function (e, r) {
          r === void 0 && (r = !1),
            this.recursivelyWalkNodesAndCallback({
              nodes: Ie([], Me(this.rootNode.childrenAfterAggFilter || []), !1),
              callback: e,
              recursionType: Rt.AfterFilter,
              index: 0,
              includeFooterNodes: r,
            });
        }),
        (t.prototype.forEachNodeAfterFilterAndSort = function (e, r) {
          r === void 0 && (r = !1),
            this.recursivelyWalkNodesAndCallback({
              nodes: Ie([], Me(this.rootNode.childrenAfterSort || []), !1),
              callback: e,
              recursionType: Rt.AfterFilterAndSort,
              index: 0,
              includeFooterNodes: r,
            });
        }),
        (t.prototype.forEachPivotNode = function (e, r) {
          r === void 0 && (r = !1),
            this.recursivelyWalkNodesAndCallback({
              nodes: [this.rootNode],
              callback: e,
              recursionType: Rt.PivotNodes,
              index: 0,
              includeFooterNodes: r,
            });
        }),
        (t.prototype.recursivelyWalkNodesAndCallback = function (e) {
          for (
            var r,
              o = e.nodes,
              i = e.callback,
              s = e.recursionType,
              a = e.includeFooterNodes,
              l = e.index,
              u = 0;
            u < o.length;
            u++
          ) {
            var c = o[u];
            if ((i(c, l++), c.hasChildren() && !c.footer)) {
              var p = null;
              switch (s) {
                case Rt.Normal:
                  p = c.childrenAfterGroup;
                  break;
                case Rt.AfterFilter:
                  p = c.childrenAfterAggFilter;
                  break;
                case Rt.AfterFilterAndSort:
                  p = c.childrenAfterSort;
                  break;
                case Rt.PivotNodes:
                  p = c.leafGroup ? null : c.childrenAfterSort;
                  break;
              }
              p &&
                (l = this.recursivelyWalkNodesAndCallback({
                  nodes: Ie([], Me(p), !1),
                  callback: i,
                  recursionType: s,
                  index: l,
                  includeFooterNodes: a,
                }));
            }
          }
          var d = (r = o[0]) === null || r === void 0 ? void 0 : r.parent;
          if (!a || !d) return l;
          var h = d === this.rootNode;
          if (h) {
            var f = this.gridOptionsService.get('groupIncludeTotalFooter');
            if (!f) return l;
          } else {
            var y = this.gridOptionsService.getGroupIncludeFooter();
            if (!y({ node: d })) return l;
          }
          return d.createFooter(), i(d.sibling, l++), l;
        }),
        (t.prototype.doAggregate = function (e) {
          this.aggregationStage &&
            this.aggregationStage.execute({ rowNode: this.rootNode, changedPath: e });
        }),
        (t.prototype.doFilterAggregates = function (e) {
          this.filterAggregatesStage
            ? this.filterAggregatesStage.execute({ rowNode: this.rootNode, changedPath: e })
            : (this.rootNode.childrenAfterAggFilter = this.rootNode.childrenAfterFilter);
        }),
        (t.prototype.expandOrCollapseAll = function (e) {
          var r = this.gridOptionsService.get('treeData'),
            o = this.columnModel.isPivotActive(),
            i = function (l) {
              l &&
                l.forEach(function (u) {
                  var c = function () {
                    (u.expanded = e), i(u.childrenAfterGroup);
                  };
                  if (r) {
                    var p = j.exists(u.childrenAfterGroup);
                    p && c();
                    return;
                  }
                  if (o) {
                    var d = !u.leafGroup;
                    d && c();
                    return;
                  }
                  var h = u.group;
                  h && c();
                });
            };
          this.rootNode && i(this.rootNode.childrenAfterGroup), this.refreshModel({ step: z.MAP });
          var s = e ? 'expandAll' : 'collapseAll',
            a = { type: g.EVENT_EXPAND_COLLAPSE_ALL, source: s };
          this.eventService.dispatchEvent(a);
        }),
        (t.prototype.doSort = function (e, r) {
          this.sortStage.execute({
            rowNode: this.rootNode,
            rowNodeTransactions: e,
            changedPath: r,
          });
        }),
        (t.prototype.doRowGrouping = function (e, r, o, i) {
          if (this.groupStage) {
            if (
              (e
                ? this.groupStage.execute({
                    rowNode: this.rootNode,
                    rowNodeTransactions: e,
                    rowNodeOrder: r,
                    changedPath: o,
                  })
                : this.groupStage.execute({
                    rowNode: this.rootNode,
                    changedPath: o,
                    afterColumnsChanged: i,
                  }),
              this.gridOptionsService.get('groupSelectsChildren'))
            ) {
              var s = this.selectionService.updateGroupsFromChildrenSelections(
                'rowGroupChanged',
                o
              );
              if (s) {
                var a = { type: g.EVENT_SELECTION_CHANGED, source: 'rowGroupChanged' };
                this.eventService.dispatchEvent(a);
              }
            }
          } else
            (this.rootNode.childrenAfterGroup = this.rootNode.allLeafChildren),
              this.rootNode.sibling &&
                (this.rootNode.sibling.childrenAfterGroup = this.rootNode.childrenAfterGroup),
              this.rootNode.updateHasChildren();
          this.nodeManager.isRowCountReady() &&
            ((this.rowCountReady = !0),
            this.eventService.dispatchEventOnce({ type: g.EVENT_ROW_COUNT_READY }));
        }),
        (t.prototype.doFilter = function (e) {
          this.filterStage.execute({ rowNode: this.rootNode, changedPath: e });
        }),
        (t.prototype.doPivot = function (e) {
          this.pivotStage && this.pivotStage.execute({ rowNode: this.rootNode, changedPath: e });
        }),
        (t.prototype.getCopyOfNodesMap = function () {
          return this.nodeManager.getCopyOfNodesMap();
        }),
        (t.prototype.getRowNode = function (e) {
          var r = typeof e == 'string' && e.indexOf(U.ID_PREFIX_ROW_GROUP) == 0;
          if (r) {
            var o = void 0;
            return (
              this.forEachNode(function (i) {
                i.id === e && (o = i);
              }),
              o
            );
          }
          return this.nodeManager.getRowNode(e);
        }),
        (t.prototype.setRowData = function (e) {
          this.selectionService.reset('rowDataChanged'),
            this.nodeManager.setRowData(e),
            this.hasStarted && this.dispatchUpdateEventsAndRefresh();
        }),
        (t.prototype.dispatchUpdateEventsAndRefresh = function () {
          var e = { type: g.EVENT_ROW_DATA_UPDATED };
          this.eventService.dispatchEvent(e),
            this.refreshModel({ step: z.EVERYTHING, newData: !0 });
        }),
        (t.prototype.batchUpdateRowData = function (e, r) {
          var o = this;
          if (this.applyAsyncTransactionsTimeout == null) {
            this.rowDataTransactionBatch = [];
            var i = this.gridOptionsService.getAsyncTransactionWaitMillis();
            this.applyAsyncTransactionsTimeout = window.setTimeout(function () {
              o.executeBatchUpdateRowData();
            }, i);
          }
          this.rowDataTransactionBatch.push({ rowDataTransaction: e, callback: r });
        }),
        (t.prototype.flushAsyncTransactions = function () {
          this.applyAsyncTransactionsTimeout != null &&
            (clearTimeout(this.applyAsyncTransactionsTimeout), this.executeBatchUpdateRowData());
        }),
        (t.prototype.executeBatchUpdateRowData = function () {
          var e = this;
          this.valueCache.onDataChanged();
          var r = [],
            o = [],
            i = !1;
          if (
            (this.rowDataTransactionBatch &&
              this.rowDataTransactionBatch.forEach(function (a) {
                var l = e.nodeManager.updateRowData(a.rowDataTransaction, void 0);
                o.push(l),
                  a.callback && r.push(a.callback.bind(null, l)),
                  typeof a.rowDataTransaction.addIndex == 'number' && (i = !0);
              }),
            this.commonUpdateRowData(o, void 0, i),
            r.length > 0 &&
              window.setTimeout(function () {
                r.forEach(function (a) {
                  return a();
                });
              }, 0),
            o.length > 0)
          ) {
            var s = { type: g.EVENT_ASYNC_TRANSACTIONS_FLUSHED, results: o };
            this.eventService.dispatchEvent(s);
          }
          (this.rowDataTransactionBatch = null), (this.applyAsyncTransactionsTimeout = void 0);
        }),
        (t.prototype.updateRowData = function (e, r) {
          this.valueCache.onDataChanged();
          var o = this.nodeManager.updateRowData(e, r),
            i = typeof e.addIndex == 'number';
          return this.commonUpdateRowData([o], r, i), o;
        }),
        (t.prototype.createRowNodeOrder = function () {
          var e = this.gridOptionsService.get('suppressMaintainUnsortedOrder');
          if (!e) {
            var r = {};
            if (this.rootNode && this.rootNode.allLeafChildren)
              for (var o = 0; o < this.rootNode.allLeafChildren.length; o++) {
                var i = this.rootNode.allLeafChildren[o];
                r[i.id] = o;
              }
            return r;
          }
        }),
        (t.prototype.commonUpdateRowData = function (e, r, o) {
          if (this.hasStarted) {
            var i = !this.gridOptionsService.get('suppressAnimationFrame');
            o && (r = this.createRowNodeOrder());
            var s = { type: g.EVENT_ROW_DATA_UPDATED };
            this.eventService.dispatchEvent(s),
              this.refreshModel({
                step: z.EVERYTHING,
                rowNodeTransactions: e,
                rowNodeOrder: r,
                keepRenderedRows: !0,
                keepEditingRows: !0,
                animate: i,
              });
          }
        }),
        (t.prototype.doRowsToDisplay = function () {
          this.rowsToDisplay = this.flattenStage.execute({ rowNode: this.rootNode });
        }),
        (t.prototype.onRowHeightChanged = function () {
          this.refreshModel({
            step: z.MAP,
            keepRenderedRows: !0,
            keepEditingRows: !0,
            keepUndoRedoStack: !0,
          });
        }),
        (t.prototype.onRowHeightChangedDebounced = function () {
          this.onRowHeightChanged_debounced();
        }),
        (t.prototype.resetRowHeights = function () {
          var e = this.resetRowHeightsForAllRowNodes();
          this.rootNode.setRowHeight(this.rootNode.rowHeight, !0),
            this.rootNode.sibling &&
              this.rootNode.sibling.setRowHeight(this.rootNode.sibling.rowHeight, !0),
            e && this.onRowHeightChanged();
        }),
        (t.prototype.resetRowHeightsForAllRowNodes = function () {
          var e = !1;
          return (
            this.forEachNode(function (r) {
              r.setRowHeight(r.rowHeight, !0);
              var o = r.detailNode;
              o && o.setRowHeight(o.rowHeight, !0),
                r.sibling && r.sibling.setRowHeight(r.sibling.rowHeight, !0),
                (e = !0);
            }),
            e
          );
        }),
        (t.prototype.onGridStylesChanges = function () {
          this.columnModel.isAutoRowHeightActive() || this.resetRowHeights();
        }),
        (t.prototype.onGridReady = function () {
          this.hasStarted || this.setInitialData();
        }),
        (t.prototype.isRowDataLoaded = function () {
          return this.rowCountReady;
        }),
        Le([v('columnModel')], t.prototype, 'columnModel', void 0),
        Le([v('selectionService')], t.prototype, 'selectionService', void 0),
        Le([v('filterManager')], t.prototype, 'filterManager', void 0),
        Le([v('valueCache')], t.prototype, 'valueCache', void 0),
        Le([v('beans')], t.prototype, 'beans', void 0),
        Le([v('filterStage')], t.prototype, 'filterStage', void 0),
        Le([v('sortStage')], t.prototype, 'sortStage', void 0),
        Le([v('flattenStage')], t.prototype, 'flattenStage', void 0),
        Le([Y('groupStage')], t.prototype, 'groupStage', void 0),
        Le([Y('aggregationStage')], t.prototype, 'aggregationStage', void 0),
        Le([Y('pivotStage')], t.prototype, 'pivotStage', void 0),
        Le([Y('filterAggregatesStage')], t.prototype, 'filterAggregatesStage', void 0),
        Le([F], t.prototype, 'init', null),
        (t = Le([x('rowModel')], t)),
        t
      );
    })(D),
    xS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Zu = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    NS = (function (n) {
      xS(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.execute = function (e) {
          var r = e.changedPath;
          this.filterService.filter(r);
        }),
        Zu([v('filterService')], t.prototype, 'filterService', void 0),
        (t = Zu([x('filterStage')], t)),
        t
      );
    })(D),
    GS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ta = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    VS = (function (n) {
      GS(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.execute = function (e) {
          var r = this,
            o = this.sortController.getSortOptions(),
            i = j.exists(o) && o.length > 0,
            s = i && j.exists(e.rowNodeTransactions) && this.gridOptionsService.get('deltaSort'),
            a = o.some(function (l) {
              var u = r.gridOptionsService.isColumnsSortingCoupledToGroup();
              return u
                ? l.column.isPrimary() && l.column.isRowGroupActive()
                : !!l.column.getColDef().showRowGroup;
            });
          this.sortService.sort(o, i, s, e.rowNodeTransactions, e.changedPath, a);
        }),
        ta([v('sortService')], t.prototype, 'sortService', void 0),
        ta([v('sortController')], t.prototype, 'sortController', void 0),
        (t = ta([x('sortStage')], t)),
        t
      );
    })(D),
    HS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ra = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    BS = (function (n) {
      HS(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.execute = function (e) {
          var r = e.rowNode,
            o = [],
            i = this.columnModel.isPivotMode(),
            s = i && r.leafGroup,
            a = s ? [r] : r.childrenAfterSort,
            l = this.getFlattenDetails();
          this.recursivelyAddToRowsToDisplay(l, a, o, i, 0);
          var u = o.length > 0,
            c = !s && u && l.groupIncludeTotalFooter;
          return c && (r.createFooter(), this.addRowNodeToRowsToDisplay(l, r.sibling, o, 0)), o;
        }),
        (t.prototype.getFlattenDetails = function () {
          var e = this.gridOptionsService.get('groupRemoveSingleChildren'),
            r = !e && this.gridOptionsService.get('groupRemoveLowestSingleChildren');
          return {
            groupRemoveLowestSingleChildren: r,
            groupRemoveSingleChildren: e,
            isGroupMultiAutoColumn: this.gridOptionsService.isGroupMultiAutoColumn(),
            hideOpenParents: this.gridOptionsService.get('groupHideOpenParents'),
            groupIncludeTotalFooter: this.gridOptionsService.get('groupIncludeTotalFooter'),
            getGroupIncludeFooter: this.gridOptionsService.getGroupIncludeFooter(),
          };
        }),
        (t.prototype.recursivelyAddToRowsToDisplay = function (e, r, o, i, s) {
          if (!j.missingOrEmpty(r))
            for (var a = 0; a < r.length; a++) {
              var l = r[a],
                u = l.hasChildren(),
                c = i && !u,
                p = e.groupRemoveSingleChildren && u && l.childrenAfterGroup.length === 1,
                d =
                  e.groupRemoveLowestSingleChildren &&
                  u &&
                  l.leafGroup &&
                  l.childrenAfterGroup.length === 1,
                h = i && l.leafGroup,
                f = e.hideOpenParents && l.expanded && !l.master && !h,
                y = !c && !f && !p && !d;
              if ((y && this.addRowNodeToRowsToDisplay(e, l, o, s), !(i && l.leafGroup))) {
                if (u) {
                  var m = p || d;
                  if (l.expanded || m) {
                    var C = m ? s : s + 1;
                    this.recursivelyAddToRowsToDisplay(e, l.childrenAfterSort, o, i, C);
                    var w = e.getGroupIncludeFooter({ node: l });
                    w
                      ? (l.createFooter(), this.addRowNodeToRowsToDisplay(e, l.sibling, o, C))
                      : l.destroyFooter();
                  }
                } else if (l.master && l.expanded) {
                  var E = this.createDetailNode(l);
                  this.addRowNodeToRowsToDisplay(e, E, o, s);
                }
              }
            }
        }),
        (t.prototype.addRowNodeToRowsToDisplay = function (e, r, o, i) {
          o.push(r), r.setUiLevel(e.isGroupMultiAutoColumn ? 0 : i);
        }),
        (t.prototype.createDetailNode = function (e) {
          if (j.exists(e.detailNode)) return e.detailNode;
          var r = new U(this.beans);
          return (
            (r.detail = !0),
            (r.selectable = !1),
            (r.parent = e),
            j.exists(e.id) && (r.id = 'detail_' + e.id),
            (r.data = e.data),
            (r.level = e.level + 1),
            (e.detailNode = r),
            r
          );
        }),
        ra([v('columnModel')], t.prototype, 'columnModel', void 0),
        ra([v('beans')], t.prototype, 'beans', void 0),
        (t = ra([x('flattenStage')], t)),
        t
      );
    })(D),
    kS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    oa = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    WS = (function (n) {
      kS(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.sort = function (e, r, o, i, s, a) {
          var l = this,
            u = this.gridOptionsService.get('groupMaintainOrder'),
            c = this.columnModel.getAllGridColumns().some(function (y) {
              return y.isRowGroupActive();
            }),
            p = {};
          o && i && (p = this.calculateDirtyNodes(i));
          var d = this.columnModel.isPivotMode(),
            h = this.gridOptionsService.getCallback('postSortRows'),
            f = function (y) {
              var m;
              l.pullDownGroupDataForHideOpenParents(y.childrenAfterAggFilter, !0);
              var C = d && y.leafGroup,
                w = u && c && !y.leafGroup && !a;
              if (w) {
                var E =
                    (m = l.columnModel.getRowGroupColumns()) === null || m === void 0
                      ? void 0
                      : m[y.level + 1],
                  S = (E == null ? void 0 : E.getSort()) === null,
                  R = y.childrenAfterAggFilter.slice(0);
                if (y.childrenAfterSort && !S) {
                  var O = {};
                  y.childrenAfterSort.forEach(function (A, M) {
                    O[A.id] = M;
                  }),
                    R.sort(function (A, M) {
                      var N, I;
                      return (
                        ((N = O[A.id]) !== null && N !== void 0 ? N : 0) -
                        ((I = O[M.id]) !== null && I !== void 0 ? I : 0)
                      );
                    });
                }
                y.childrenAfterSort = R;
              } else
                !r || C
                  ? (y.childrenAfterSort = y.childrenAfterAggFilter.slice(0))
                  : o
                  ? (y.childrenAfterSort = l.doDeltaSort(y, p, s, e))
                  : (y.childrenAfterSort = l.rowNodeSorter.doFullSort(y.childrenAfterAggFilter, e));
              if (
                (y.sibling && (y.sibling.childrenAfterSort = y.childrenAfterSort),
                l.updateChildIndexes(y),
                h)
              ) {
                var b = { nodes: y.childrenAfterSort };
                h(b);
              }
            };
          s && s.forEachChangedNodeDepthFirst(f), this.updateGroupDataForHideOpenParents(s);
        }),
        (t.prototype.calculateDirtyNodes = function (e) {
          var r = {},
            o = function (i) {
              i &&
                i.forEach(function (s) {
                  return (r[s.id] = !0);
                });
            };
          return (
            e &&
              e.forEach(function (i) {
                o(i.add), o(i.update), o(i.remove);
              }),
            r
          );
        }),
        (t.prototype.doDeltaSort = function (e, r, o, i) {
          var s = this,
            a = e.childrenAfterAggFilter,
            l = e.childrenAfterSort;
          if (!l) return this.rowNodeSorter.doFullSort(a, i);
          var u = {},
            c = [];
          a.forEach(function (f) {
            r[f.id] || !o.canSkip(f) ? c.push(f) : (u[f.id] = !0);
          });
          var p = l.filter(function (f) {
              return u[f.id];
            }),
            d = function (f, y) {
              return { currentPos: y, rowNode: f };
            },
            h = c.map(d).sort(function (f, y) {
              return s.rowNodeSorter.compareRowNodes(i, f, y);
            });
          return this.mergeSortedArrays(i, h, p.map(d)).map(function (f) {
            var y = f.rowNode;
            return y;
          });
        }),
        (t.prototype.mergeSortedArrays = function (e, r, o) {
          for (var i = [], s = 0, a = 0; s < r.length && a < o.length; ) {
            var l = this.rowNodeSorter.compareRowNodes(e, r[s], o[a]);
            l < 0 ? i.push(r[s++]) : i.push(o[a++]);
          }
          for (; s < r.length; ) i.push(r[s++]);
          for (; a < o.length; ) i.push(o[a++]);
          return i;
        }),
        (t.prototype.updateChildIndexes = function (e) {
          if (!j.missing(e.childrenAfterSort))
            for (var r = e.childrenAfterSort, o = 0; o < r.length; o++) {
              var i = r[o],
                s = o === 0,
                a = o === e.childrenAfterSort.length - 1;
              i.setFirstChild(s), i.setLastChild(a), i.setChildIndex(o);
            }
        }),
        (t.prototype.updateGroupDataForHideOpenParents = function (e) {
          var r = this;
          if (this.gridOptionsService.get('groupHideOpenParents')) {
            if (this.gridOptionsService.get('treeData'))
              return (
                j.warnOnce(
                  "The property hideOpenParents dose not work with Tree Data. This is because Tree Data has values at the group level, it doesn't make sense to hide them."
                ),
                !1
              );
            var o = function (i) {
              r.pullDownGroupDataForHideOpenParents(i.childrenAfterSort, !1),
                i.childrenAfterSort.forEach(function (s) {
                  s.hasChildren() && o(s);
                });
            };
            e &&
              e.executeFromRootNode(function (i) {
                return o(i);
              });
          }
        }),
        (t.prototype.pullDownGroupDataForHideOpenParents = function (e, r) {
          var o = this;
          !this.gridOptionsService.get('groupHideOpenParents') ||
            j.missing(e) ||
            e.forEach(function (i) {
              var s = o.columnModel.getGroupDisplayColumns();
              s.forEach(function (a) {
                var l = a.getColDef().showRowGroup;
                if (typeof l != 'string') {
                  console.error(
                    'AG Grid: groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup'
                  );
                  return;
                }
                var u = l,
                  c = o.columnModel.getPrimaryColumn(u),
                  p = c === i.rowGroupColumn;
                if (!p)
                  if (r) i.setGroupValue(a.getId(), void 0);
                  else {
                    var d = i.getFirstChildOfFirstChild(c);
                    d && i.setGroupValue(a.getId(), d.key);
                  }
              });
            });
        }),
        oa([v('columnModel')], t.prototype, 'columnModel', void 0),
        oa([v('rowNodeSorter')], t.prototype, 'rowNodeSorter', void 0),
        (t = oa([x('sortService')], t)),
        t
      );
    })(D),
    jS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ec = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    US = (function (n) {
      jS(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.filter = function (e) {
          var r = this.filterManager.isChildFilterPresent();
          this.filterNodes(r, e);
        }),
        (t.prototype.filterNodes = function (e, r) {
          var o = this,
            i = function (u, c) {
              u.hasChildren() && e && !c
                ? (u.childrenAfterFilter = u.childrenAfterGroup.filter(function (p) {
                    var d = p.childrenAfterFilter && p.childrenAfterFilter.length > 0,
                      h = p.data && o.filterManager.doesRowPassFilter({ rowNode: p });
                    return d || h;
                  }))
                : (u.childrenAfterFilter = u.childrenAfterGroup),
                u.sibling && (u.sibling.childrenAfterFilter = u.childrenAfterFilter);
            };
          if (this.doingTreeDataFiltering()) {
            var s = function (u, c) {
                if (u.childrenAfterGroup)
                  for (var p = 0; p < u.childrenAfterGroup.length; p++) {
                    var d = u.childrenAfterGroup[p],
                      h = c || o.filterManager.doesRowPassFilter({ rowNode: d });
                    d.childrenAfterGroup ? s(u.childrenAfterGroup[p], h) : i(d, h);
                  }
                i(u, c);
              },
              a = function (u) {
                return s(u, !1);
              };
            r.executeFromRootNode(a);
          } else {
            var l = function (u) {
              return i(u, !1);
            };
            r.forEachChangedNodeDepthFirst(l, !0);
          }
        }),
        (t.prototype.doingTreeDataFiltering = function () {
          return (
            this.gridOptionsService.get('treeData') &&
            !this.gridOptionsService.get('excludeChildrenWhenTreeDataFiltering')
          );
        }),
        ec([v('filterManager')], t.prototype, 'filterManager', void 0),
        (t = ec([x('filterService')], t)),
        t
      );
    })(D),
    zS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Io = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    KS = function (n, t) {
      var e = typeof Symbol == 'function' && n[Symbol.iterator];
      if (!e) return n;
      var r = e.call(n),
        o,
        i = [],
        s;
      try {
        for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
      } catch (a) {
        s = { error: a };
      } finally {
        try {
          o && !o.done && (e = r.return) && e.call(r);
        } finally {
          if (s) throw s.error;
        }
      }
      return i;
    },
    $S = (function (n) {
      zS(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          var e = this;
          this.rowModel.getType() === 'clientSide' &&
            ((this.clientSideRowModel = this.rowModel),
            this.addManagedPropertyListener('rowData', function () {
              return e.onRowDataUpdated();
            }));
        }),
        (t.prototype.isActive = function () {
          var e = this.gridOptionsService.exists('getRowId'),
            r = this.gridOptionsService.get('resetRowDataOnUpdate');
          return r ? !1 : e;
        }),
        (t.prototype.setRowData = function (e) {
          var r = this.createTransactionForRowData(e);
          if (r) {
            var o = KS(r, 2),
              i = o[0],
              s = o[1];
            this.clientSideRowModel.updateRowData(i, s);
          }
        }),
        (t.prototype.createTransactionForRowData = function (e) {
          if (j.missing(this.clientSideRowModel)) {
            console.error('AG Grid: ImmutableService only works with ClientSideRowModel');
            return;
          }
          var r = this.gridOptionsService.getCallback('getRowId');
          if (r == null) {
            console.error(
              'AG Grid: ImmutableService requires getRowId() callback to be implemented, your row data needs IDs!'
            );
            return;
          }
          var o = { remove: [], update: [], add: [] },
            i = this.clientSideRowModel.getCopyOfNodesMap(),
            s = this.gridOptionsService.get('suppressMaintainUnsortedOrder'),
            a = s ? void 0 : {};
          return (
            j.exists(e) &&
              e.forEach(function (l, u) {
                var c = r({ data: l, level: 0 }),
                  p = i[c];
                if ((a && (a[c] = u), p)) {
                  var d = p.data !== l;
                  d && o.update.push(l), (i[c] = void 0);
                } else o.add.push(l);
              }),
            j.iterateObject(i, function (l, u) {
              u && o.remove.push(u.data);
            }),
            [o, a]
          );
        }),
        (t.prototype.onRowDataUpdated = function () {
          var e = this.gridOptionsService.get('rowData');
          e &&
            (this.isActive()
              ? this.setRowData(e)
              : (this.selectionService.reset('rowDataChanged'),
                this.clientSideRowModel.setRowData(e)));
        }),
        Io([v('rowModel')], t.prototype, 'rowModel', void 0),
        Io([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        Io([v('selectionService')], t.prototype, 'selectionService', void 0),
        Io([F], t.prototype, 'postConstruct', null),
        (t = Io([x('immutableService')], t)),
        t
      );
    })(D),
    YS = '31.1.1',
    qS = {
      version: YS,
      moduleName: G.ClientSideRowModelModule,
      rowModel: 'clientSide',
      beans: [IS, NS, VS, BS, WS, US, $S],
    },
    QS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    ia = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    tc = (function (n) {
      QS(t, n);
      function t(e, r, o) {
        var i = n.call(this, e) || this;
        return (
          (i.parentCache = r),
          (i.params = o),
          (i.startRow = e * o.blockSize),
          (i.endRow = i.startRow + o.blockSize),
          i
        );
      }
      return (
        (t.prototype.postConstruct = function () {
          this.createRowNodes();
        }),
        (t.prototype.getBlockStateJson = function () {
          return {
            id: '' + this.getId(),
            state: {
              blockNumber: this.getId(),
              startRow: this.getStartRow(),
              endRow: this.getEndRow(),
              pageStatus: this.getState(),
            },
          };
        }),
        (t.prototype.setDataAndId = function (e, r, o) {
          j.exists(r) ? e.setDataAndId(r, o.toString()) : e.setDataAndId(void 0, void 0);
        }),
        (t.prototype.loadFromDatasource = function () {
          var e = this,
            r = this.createLoadParams();
          if (j.missing(this.params.datasource.getRows)) {
            console.warn('AG Grid: datasource is missing getRows method');
            return;
          }
          window.setTimeout(function () {
            e.params.datasource.getRows(r);
          }, 0);
        }),
        (t.prototype.processServerFail = function () {}),
        (t.prototype.createLoadParams = function () {
          var e = {
            startRow: this.getStartRow(),
            endRow: this.getEndRow(),
            successCallback: this.pageLoaded.bind(this, this.getVersion()),
            failCallback: this.pageLoadFailed.bind(this, this.getVersion()),
            sortModel: this.params.sortModel,
            filterModel: this.params.filterModel,
            context: this.gridOptionsService.getGridCommonParams().context,
          };
          return e;
        }),
        (t.prototype.forEachNode = function (e, r, o) {
          var i = this;
          this.rowNodes.forEach(function (s, a) {
            var l = i.startRow + a;
            l < o && e(s, r.next());
          });
        }),
        (t.prototype.getLastAccessed = function () {
          return this.lastAccessed;
        }),
        (t.prototype.getRow = function (e, r) {
          r === void 0 && (r = !1),
            r || (this.lastAccessed = this.params.lastAccessedSequence.next());
          var o = e - this.startRow;
          return this.rowNodes[o];
        }),
        (t.prototype.getStartRow = function () {
          return this.startRow;
        }),
        (t.prototype.getEndRow = function () {
          return this.endRow;
        }),
        (t.prototype.createRowNodes = function () {
          this.rowNodes = [];
          for (var e = 0; e < this.params.blockSize; e++) {
            var r = this.startRow + e,
              o = new U(this.beans);
            o.setRowHeight(this.params.rowHeight),
              (o.uiLevel = 0),
              o.setRowIndex(r),
              o.setRowTop(this.params.rowHeight * r),
              this.rowNodes.push(o);
          }
        }),
        (t.prototype.processServerResult = function (e) {
          var r = this;
          this.rowNodes.forEach(function (i, s) {
            var a = e.rowData ? e.rowData[s] : void 0;
            !i.id &&
              i.alreadyRendered &&
              a &&
              ((r.rowNodes[s] = new U(r.beans)),
              r.rowNodes[s].setRowIndex(i.rowIndex),
              r.rowNodes[s].setRowTop(i.rowTop),
              r.rowNodes[s].setRowHeight(i.rowHeight),
              i.clearRowTopAndRowIndex()),
              r.setDataAndId(r.rowNodes[s], a, r.startRow + s);
          });
          var o = e.rowCount != null && e.rowCount >= 0 ? e.rowCount : void 0;
          this.parentCache.pageLoaded(this, o);
        }),
        (t.prototype.destroyRowNodes = function () {
          this.rowNodes.forEach(function (e) {
            e.clearRowTopAndRowIndex();
          });
        }),
        ia([v('beans')], t.prototype, 'beans', void 0),
        ia([F], t.prototype, 'postConstruct', null),
        ia([Se], t.prototype, 'destroyRowNodes', null),
        t
      );
    })(Ms),
    XS = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    zi = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    JS = function (n, t) {
      return function (e, r) {
        t(e, r, n);
      };
    },
    ZS = (function (n) {
      XS(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return (
          (r.lastRowIndexKnown = !1),
          (r.blocks = {}),
          (r.blockCount = 0),
          (r.rowCount = e.initialRowCount),
          (r.params = e),
          r
        );
      }
      return (
        (t.prototype.setBeans = function (e) {
          this.logger = e.create('InfiniteCache');
        }),
        (t.prototype.getRow = function (e, r) {
          r === void 0 && (r = !1);
          var o = Math.floor(e / this.params.blockSize),
            i = this.blocks[o];
          if (!i) {
            if (r) return;
            i = this.createBlock(o);
          }
          return i.getRow(e);
        }),
        (t.prototype.createBlock = function (e) {
          var r = this.createBean(new tc(e, this, this.params));
          return (
            (this.blocks[r.getId()] = r),
            this.blockCount++,
            this.purgeBlocksIfNeeded(r),
            this.params.rowNodeBlockLoader.addBlock(r),
            r
          );
        }),
        (t.prototype.refreshCache = function () {
          var e = this.blockCount == 0;
          if (e) {
            this.purgeCache();
            return;
          }
          this.getBlocksInOrder().forEach(function (r) {
            return r.setStateWaitingToLoad();
          }),
            this.params.rowNodeBlockLoader.checkBlockToLoad();
        }),
        (t.prototype.destroyAllBlocks = function () {
          var e = this;
          this.getBlocksInOrder().forEach(function (r) {
            return e.destroyBlock(r);
          });
        }),
        (t.prototype.getRowCount = function () {
          return this.rowCount;
        }),
        (t.prototype.isLastRowIndexKnown = function () {
          return this.lastRowIndexKnown;
        }),
        (t.prototype.pageLoaded = function (e, r) {
          this.isAlive() &&
            (this.logger.log('onPageLoaded: page = '.concat(e.getId(), ', lastRow = ').concat(r)),
            this.checkRowCount(e, r),
            this.onCacheUpdated());
        }),
        (t.prototype.purgeBlocksIfNeeded = function (e) {
          var r = this,
            o = this.getBlocksInOrder().filter(function (u) {
              return u != e;
            }),
            i = function (u, c) {
              return c.getLastAccessed() - u.getLastAccessed();
            };
          o.sort(i);
          var s = this.params.maxBlocksInCache > 0,
            a = s ? this.params.maxBlocksInCache - 1 : null,
            l = t.MAX_EMPTY_BLOCKS_TO_KEEP - 1;
          o.forEach(function (u, c) {
            var p = u.getState() === tc.STATE_WAITING_TO_LOAD && c >= l,
              d = s ? c >= a : !1;
            if (p || d) {
              if (r.isBlockCurrentlyDisplayed(u) || r.isBlockFocused(u)) return;
              r.removeBlockFromCache(u);
            }
          });
        }),
        (t.prototype.isBlockFocused = function (e) {
          var r = this.focusService.getFocusCellToUseAfterRefresh();
          if (!r || r.rowPinned != null) return !1;
          var o = e.getStartRow(),
            i = e.getEndRow(),
            s = r.rowIndex >= o && r.rowIndex < i;
          return s;
        }),
        (t.prototype.isBlockCurrentlyDisplayed = function (e) {
          var r = e.getStartRow(),
            o = e.getEndRow() - 1;
          return this.rowRenderer.isRangeInRenderedViewport(r, o);
        }),
        (t.prototype.removeBlockFromCache = function (e) {
          e && this.destroyBlock(e);
        }),
        (t.prototype.checkRowCount = function (e, r) {
          if (typeof r == 'number' && r >= 0) (this.rowCount = r), (this.lastRowIndexKnown = !0);
          else if (!this.lastRowIndexKnown) {
            var o = (e.getId() + 1) * this.params.blockSize,
              i = o + this.params.overflowSize;
            this.rowCount < i && (this.rowCount = i);
          }
        }),
        (t.prototype.setRowCount = function (e, r) {
          (this.rowCount = e),
            j.exists(r) && (this.lastRowIndexKnown = r),
            this.lastRowIndexKnown ||
              (this.rowCount % this.params.blockSize === 0 && this.rowCount++),
            this.onCacheUpdated();
        }),
        (t.prototype.forEachNodeDeep = function (e) {
          var r = this,
            o = new Dr();
          this.getBlocksInOrder().forEach(function (i) {
            return i.forEachNode(e, o, r.rowCount);
          });
        }),
        (t.prototype.getBlocksInOrder = function () {
          var e = function (o, i) {
              return o.getId() - i.getId();
            },
            r = j.getAllValuesInObject(this.blocks).sort(e);
          return r;
        }),
        (t.prototype.destroyBlock = function (e) {
          delete this.blocks[e.getId()],
            this.destroyBean(e),
            this.blockCount--,
            this.params.rowNodeBlockLoader.removeBlock(e);
        }),
        (t.prototype.onCacheUpdated = function () {
          if (this.isAlive()) {
            this.destroyAllBlocksPastVirtualRowCount();
            var e = { type: g.EVENT_STORE_UPDATED };
            this.eventService.dispatchEvent(e);
          }
        }),
        (t.prototype.destroyAllBlocksPastVirtualRowCount = function () {
          var e = this,
            r = [];
          this.getBlocksInOrder().forEach(function (o) {
            var i = o.getId() * e.params.blockSize;
            i >= e.rowCount && r.push(o);
          }),
            r.length > 0 &&
              r.forEach(function (o) {
                return e.destroyBlock(o);
              });
        }),
        (t.prototype.purgeCache = function () {
          var e = this;
          this.getBlocksInOrder().forEach(function (r) {
            return e.removeBlockFromCache(r);
          }),
            (this.lastRowIndexKnown = !1),
            this.rowCount === 0 && (this.rowCount = this.params.initialRowCount),
            this.onCacheUpdated();
        }),
        (t.prototype.getRowNodesInRange = function (e, r) {
          var o = this,
            i = [],
            s = -1,
            a = !1,
            l = new Dr();
          j.missing(e) && (a = !0);
          var u = !1;
          this.getBlocksInOrder().forEach(function (p) {
            if (!u) {
              if (a && s + 1 !== p.getId()) {
                u = !0;
                return;
              }
              (s = p.getId()),
                p.forEachNode(
                  function (d) {
                    var h = d === e || d === r;
                    (a || h) && i.push(d), h && (a = !a);
                  },
                  l,
                  o.rowCount
                );
            }
          });
          var c = u || a;
          return c ? [] : i;
        }),
        (t.MAX_EMPTY_BLOCKS_TO_KEEP = 2),
        zi([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        zi([v('focusService')], t.prototype, 'focusService', void 0),
        zi([JS(0, Ye('loggerFactory'))], t.prototype, 'setBeans', null),
        zi([Se], t.prototype, 'destroyAllBlocks', null),
        t
      );
    })(D),
    ew = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Qt = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    tw = (function (n) {
      ew(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.getRowBounds = function (e) {
          return { rowHeight: this.rowHeight, rowTop: this.rowHeight * e };
        }),
        (t.prototype.ensureRowHeightsValid = function (e, r, o, i) {
          return !1;
        }),
        (t.prototype.init = function () {
          var e = this;
          this.gridOptionsService.isRowModelType('infinite') &&
            ((this.rowHeight = this.gridOptionsService.getRowHeightAsNumber()),
            this.addEventListeners(),
            this.addDestroyFunc(function () {
              return e.destroyCache();
            }),
            this.verifyProps());
        }),
        (t.prototype.verifyProps = function () {
          this.gridOptionsService.exists('initialGroupOrderComparator') &&
            j.warnOnce(
              'initialGroupOrderComparator cannot be used with Infinite Row Model as sorting is done on the server side'
            );
        }),
        (t.prototype.start = function () {
          this.setDatasource(this.gridOptionsService.get('datasource'));
        }),
        (t.prototype.destroyDatasource = function () {
          this.datasource &&
            (this.getContext().destroyBean(this.datasource),
            this.rowRenderer.datasourceChanged(),
            (this.datasource = null));
        }),
        (t.prototype.addEventListeners = function () {
          var e = this;
          this.addManagedListener(
            this.eventService,
            g.EVENT_FILTER_CHANGED,
            this.onFilterChanged.bind(this)
          ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_SORT_CHANGED,
              this.onSortChanged.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_NEW_COLUMNS_LOADED,
              this.onColumnEverything.bind(this)
            ),
            this.addManagedListener(
              this.eventService,
              g.EVENT_STORE_UPDATED,
              this.onCacheUpdated.bind(this)
            ),
            this.addManagedPropertyListener('datasource', function () {
              return e.setDatasource(e.gridOptionsService.get('datasource'));
            }),
            this.addManagedPropertyListener('cacheBlockSize', function () {
              return e.resetCache();
            }),
            this.addManagedPropertyListener('rowHeight', function () {
              (e.rowHeight = e.gridOptionsService.getRowHeightAsNumber()),
                (e.cacheParams.rowHeight = e.rowHeight),
                e.updateRowHeights();
            });
        }),
        (t.prototype.onFilterChanged = function () {
          this.reset();
        }),
        (t.prototype.onSortChanged = function () {
          this.reset();
        }),
        (t.prototype.onColumnEverything = function () {
          var e;
          this.cacheParams ? (e = this.isSortModelDifferent()) : (e = !0), e && this.reset();
        }),
        (t.prototype.isSortModelDifferent = function () {
          return !j.jsonEquals(this.cacheParams.sortModel, this.sortController.getSortModel());
        }),
        (t.prototype.getType = function () {
          return 'infinite';
        }),
        (t.prototype.setDatasource = function (e) {
          this.destroyDatasource(), (this.datasource = e), e && this.reset();
        }),
        (t.prototype.isEmpty = function () {
          return !this.infiniteCache;
        }),
        (t.prototype.isRowsToRender = function () {
          return !!this.infiniteCache;
        }),
        (t.prototype.getNodesInRangeForSelection = function (e, r) {
          return this.infiniteCache ? this.infiniteCache.getRowNodesInRange(e, r) : [];
        }),
        (t.prototype.reset = function () {
          if (this.datasource) {
            var e = this.gridOptionsService.getCallback('getRowId'),
              r = e != null;
            r || this.selectionService.reset('rowDataChanged'), this.resetCache();
          }
        }),
        (t.prototype.createModelUpdatedEvent = function () {
          return {
            type: g.EVENT_MODEL_UPDATED,
            newPage: !1,
            newPageSize: !1,
            newData: !1,
            keepRenderedRows: !0,
            animate: !1,
          };
        }),
        (t.prototype.resetCache = function () {
          this.destroyCache(),
            (this.cacheParams = {
              datasource: this.datasource,
              filterModel: this.filterManager.getFilterModel(),
              sortModel: this.sortController.getSortModel(),
              rowNodeBlockLoader: this.rowNodeBlockLoader,
              initialRowCount: this.gridOptionsService.get('infiniteInitialRowCount'),
              maxBlocksInCache: this.gridOptionsService.get('maxBlocksInCache'),
              rowHeight: this.gridOptionsService.getRowHeightAsNumber(),
              overflowSize: this.gridOptionsService.get('cacheOverflowSize'),
              blockSize: this.gridOptionsService.get('cacheBlockSize'),
              lastAccessedSequence: new Dr(),
            }),
            (this.infiniteCache = this.createBean(new ZS(this.cacheParams))),
            this.eventService.dispatchEventOnce({ type: g.EVENT_ROW_COUNT_READY });
          var e = this.createModelUpdatedEvent();
          this.eventService.dispatchEvent(e);
        }),
        (t.prototype.updateRowHeights = function () {
          var e = this;
          this.forEachNode(function (o) {
            o.setRowHeight(e.rowHeight), o.setRowTop(e.rowHeight * o.rowIndex);
          });
          var r = this.createModelUpdatedEvent();
          this.eventService.dispatchEvent(r);
        }),
        (t.prototype.destroyCache = function () {
          this.infiniteCache && (this.infiniteCache = this.destroyBean(this.infiniteCache));
        }),
        (t.prototype.onCacheUpdated = function () {
          var e = this.createModelUpdatedEvent();
          this.eventService.dispatchEvent(e);
        }),
        (t.prototype.getRow = function (e) {
          if (this.infiniteCache && !(e >= this.infiniteCache.getRowCount()))
            return this.infiniteCache.getRow(e);
        }),
        (t.prototype.getRowNode = function (e) {
          var r;
          return (
            this.forEachNode(function (o) {
              o.id === e && (r = o);
            }),
            r
          );
        }),
        (t.prototype.forEachNode = function (e) {
          this.infiniteCache && this.infiniteCache.forEachNodeDeep(e);
        }),
        (t.prototype.getTopLevelRowCount = function () {
          return this.getRowCount();
        }),
        (t.prototype.getTopLevelRowDisplayedIndex = function (e) {
          return e;
        }),
        (t.prototype.getRowIndexAtPixel = function (e) {
          if (this.rowHeight !== 0) {
            var r = Math.floor(e / this.rowHeight),
              o = this.getRowCount() - 1;
            return r > o ? o : r;
          }
          return 0;
        }),
        (t.prototype.getRowCount = function () {
          return this.infiniteCache ? this.infiniteCache.getRowCount() : 0;
        }),
        (t.prototype.isRowPresent = function (e) {
          var r = this.getRowNode(e.id);
          return !!r;
        }),
        (t.prototype.refreshCache = function () {
          this.infiniteCache && this.infiniteCache.refreshCache();
        }),
        (t.prototype.purgeCache = function () {
          this.infiniteCache && this.infiniteCache.purgeCache();
        }),
        (t.prototype.isLastRowIndexKnown = function () {
          return this.infiniteCache ? this.infiniteCache.isLastRowIndexKnown() : !1;
        }),
        (t.prototype.setRowCount = function (e, r) {
          this.infiniteCache && this.infiniteCache.setRowCount(e, r);
        }),
        Qt([v('filterManager')], t.prototype, 'filterManager', void 0),
        Qt([v('sortController')], t.prototype, 'sortController', void 0),
        Qt([v('selectionService')], t.prototype, 'selectionService', void 0),
        Qt([v('rowRenderer')], t.prototype, 'rowRenderer', void 0),
        Qt([v('rowNodeBlockLoader')], t.prototype, 'rowNodeBlockLoader', void 0),
        Qt([F], t.prototype, 'init', null),
        Qt([Se], t.prototype, 'destroyDatasource', null),
        (t = Qt([x('rowModel')], t)),
        t
      );
    })(D),
    rw = '31.1.1',
    ow = { version: rw, moduleName: G.InfiniteRowModelModule, rowModel: 'infinite', beans: [tw] },
    iw = (function () {
      function n() {}
      return (
        (n.prototype.setBeans = function (t) {
          this.beans = t;
        }),
        (n.prototype.getFileName = function (t) {
          var e = this.getDefaultFileExtension();
          return (
            (t == null || !t.length) && (t = this.getDefaultFileName()),
            t.indexOf('.') === -1 ? ''.concat(t, '.').concat(e) : t
          );
        }),
        (n.prototype.getData = function (t) {
          var e = this.createSerializingSession(t);
          return this.beans.gridSerializer.serialize(e, t);
        }),
        (n.prototype.getDefaultFileName = function () {
          return 'export.'.concat(this.getDefaultFileExtension());
        }),
        n
      );
    })(),
    nw = (function () {
      function n(t) {
        this.groupColumns = [];
        var e = t.columnModel,
          r = t.valueService,
          o = t.gridOptionsService,
          i = t.valueFormatterService,
          s = t.valueParserService,
          a = t.processCellCallback,
          l = t.processHeaderCallback,
          u = t.processGroupHeaderCallback,
          c = t.processRowGroupCallback;
        (this.columnModel = e),
          (this.valueService = r),
          (this.gridOptionsService = o),
          (this.valueFormatterService = i),
          (this.valueParserService = s),
          (this.processCellCallback = a),
          (this.processHeaderCallback = l),
          (this.processGroupHeaderCallback = u),
          (this.processRowGroupCallback = c);
      }
      return (
        (n.prototype.prepare = function (t) {
          this.groupColumns = t.filter(function (e) {
            return !!e.getColDef().showRowGroup;
          });
        }),
        (n.prototype.extractHeaderValue = function (t) {
          var e = this.getHeaderName(this.processHeaderCallback, t);
          return e ?? '';
        }),
        (n.prototype.extractRowCellValue = function (t, e, r, o, i) {
          var s = this.gridOptionsService.get('groupHideOpenParents'),
            a =
              (!s || i.footer) && this.shouldRenderGroupSummaryCell(i, t, e)
                ? this.createValueForGroupNode(t, i)
                : this.valueService.getValue(t, i),
            l = this.processCell({
              accumulatedRowIndex: r,
              rowNode: i,
              column: t,
              value: a,
              processCellCallback: this.processCellCallback,
              type: o,
            });
          return l;
        }),
        (n.prototype.shouldRenderGroupSummaryCell = function (t, e, r) {
          var o,
            i = t && t.group;
          if (!i) return !1;
          var s = this.groupColumns.indexOf(e);
          if (s !== -1) {
            if (
              ((o = t.groupData) === null || o === void 0 ? void 0 : o[e.getId()]) != null ||
              (this.gridOptionsService.isRowModelType('serverSide') && t.group)
            )
              return !0;
            if (t.footer && t.level === -1) {
              var a = e.getColDef(),
                l = a == null || a.showRowGroup === !0;
              return l || a.showRowGroup === this.columnModel.getRowGroupColumns()[0].getId();
            }
          }
          var u = this.gridOptionsService.isGroupUseEntireRow(this.columnModel.isPivotMode());
          return r === 0 && u;
        }),
        (n.prototype.getHeaderName = function (t, e) {
          return t
            ? t(this.gridOptionsService.addGridCommonParams({ column: e }))
            : this.columnModel.getDisplayNameForColumn(e, 'csv', !0);
        }),
        (n.prototype.createValueForGroupNode = function (t, e) {
          var r = this;
          if (this.processRowGroupCallback)
            return this.processRowGroupCallback(
              this.gridOptionsService.addGridCommonParams({ column: t, node: e })
            );
          var o = this.gridOptionsService.get('treeData'),
            i = this.gridOptionsService.get('suppressGroupMaintainValueType'),
            s = function (c) {
              var p, d;
              if (o || i) return c.key;
              var h = (p = c.groupData) === null || p === void 0 ? void 0 : p[t.getId()];
              return !h ||
                !c.rowGroupColumn ||
                c.rowGroupColumn.getColDef().useValueFormatterForExport === !1
                ? h
                : (d = r.valueFormatterService.formatValue(c.rowGroupColumn, c, h)) !== null &&
                  d !== void 0
                ? d
                : h;
            },
            a = e.footer,
            l = [s(e)];
          if (!this.gridOptionsService.isGroupMultiAutoColumn())
            for (; e.parent; ) (e = e.parent), l.push(s(e));
          var u = l.reverse().join(' -> ');
          return a ? 'Total '.concat(u) : u;
        }),
        (n.prototype.processCell = function (t) {
          var e = this,
            r,
            o = t.accumulatedRowIndex,
            i = t.rowNode,
            s = t.column,
            a = t.value,
            l = t.processCellCallback,
            u = t.type;
          return l
            ? {
                value:
                  (r = l(
                    this.gridOptionsService.addGridCommonParams({
                      accumulatedRowIndex: o,
                      column: s,
                      node: i,
                      value: a,
                      type: u,
                      parseValue: function (c) {
                        return e.valueParserService.parseValue(
                          s,
                          i,
                          c,
                          e.valueService.getValue(s, i)
                        );
                      },
                      formatValue: function (c) {
                        var p;
                        return (p = e.valueFormatterService.formatValue(s, i, c)) !== null &&
                          p !== void 0
                          ? p
                          : c;
                      },
                    })
                  )) !== null && r !== void 0
                    ? r
                    : '',
              }
            : s.getColDef().useValueFormatterForExport !== !1
            ? { value: a ?? '', valueFormatted: this.valueFormatterService.formatValue(s, i, a) }
            : { value: a ?? '' };
        }),
        n
      );
    })(),
    sw = (function () {
      function n() {}
      return (
        (n.download = function (t, e) {
          var r = document.defaultView || window;
          if (!r) {
            console.warn('AG Grid: There is no `window` associated with the current `document`');
            return;
          }
          var o = document.createElement('a'),
            i = r.URL.createObjectURL(e);
          o.setAttribute('href', i),
            o.setAttribute('download', t),
            (o.style.display = 'none'),
            document.body.appendChild(o),
            o.dispatchEvent(new MouseEvent('click', { bubbles: !1, cancelable: !0, view: r })),
            document.body.removeChild(o),
            r.setTimeout(function () {
              r.URL.revokeObjectURL(i);
            }, 0);
        }),
        n
      );
    })(),
    aw = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    rc = `\r
`,
    lw = (function (n) {
      aw(t, n);
      function t(e) {
        var r = n.call(this, e) || this;
        (r.isFirstLine = !0), (r.result = '');
        var o = e.suppressQuotes,
          i = e.columnSeparator;
        return (r.suppressQuotes = o), (r.columnSeparator = i), r;
      }
      return (
        (t.prototype.addCustomContent = function (e) {
          var r = this;
          e &&
            (typeof e == 'string'
              ? (/^\s*\n/.test(e) || this.beginNewLine(),
                (e = e.replace(/\r?\n/g, rc)),
                (this.result += e))
              : e.forEach(function (o) {
                  r.beginNewLine(),
                    o.forEach(function (i, s) {
                      s !== 0 && (r.result += r.columnSeparator),
                        (r.result += r.putInQuotes(i.data.value || '')),
                        i.mergeAcross && r.appendEmptyCells(i.mergeAcross);
                    });
                }));
        }),
        (t.prototype.onNewHeaderGroupingRow = function () {
          return this.beginNewLine(), { onColumn: this.onNewHeaderGroupingRowColumn.bind(this) };
        }),
        (t.prototype.onNewHeaderGroupingRowColumn = function (e, r, o, i) {
          o != 0 && (this.result += this.columnSeparator),
            (this.result += this.putInQuotes(r)),
            this.appendEmptyCells(i);
        }),
        (t.prototype.appendEmptyCells = function (e) {
          for (var r = 1; r <= e; r++) this.result += this.columnSeparator + this.putInQuotes('');
        }),
        (t.prototype.onNewHeaderRow = function () {
          return this.beginNewLine(), { onColumn: this.onNewHeaderRowColumn.bind(this) };
        }),
        (t.prototype.onNewHeaderRowColumn = function (e, r) {
          r != 0 && (this.result += this.columnSeparator),
            (this.result += this.putInQuotes(this.extractHeaderValue(e)));
        }),
        (t.prototype.onNewBodyRow = function () {
          return this.beginNewLine(), { onColumn: this.onNewBodyRowColumn.bind(this) };
        }),
        (t.prototype.onNewBodyRowColumn = function (e, r, o) {
          var i;
          r != 0 && (this.result += this.columnSeparator);
          var s = this.extractRowCellValue(e, r, r, 'csv', o);
          this.result += this.putInQuotes(
            (i = s.valueFormatted) !== null && i !== void 0 ? i : s.value
          );
        }),
        (t.prototype.putInQuotes = function (e) {
          if (this.suppressQuotes) return e;
          if (e == null) return '""';
          var r;
          typeof e == 'string'
            ? (r = e)
            : typeof e.toString == 'function'
            ? (r = e.toString())
            : (console.warn('AG Grid: unknown value type during csv conversion'), (r = ''));
          var o = r.replace(/"/g, '""');
          return '"' + o + '"';
        }),
        (t.prototype.parse = function () {
          return this.result;
        }),
        (t.prototype.beginNewLine = function () {
          this.isFirstLine || (this.result += rc), (this.isFirstLine = !1);
        }),
        t
      );
    })(nw),
    uw = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Xt = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    cw = (function (n) {
      uw(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.postConstruct = function () {
          this.setBeans({
            gridSerializer: this.gridSerializer,
            gridOptionsService: this.gridOptionsService,
          });
        }),
        (t.prototype.getMergedParams = function (e) {
          var r = this.gridOptionsService.get('defaultCsvExportParams');
          return Object.assign({}, r, e);
        }),
        (t.prototype.export = function (e) {
          if (this.isExportSuppressed()) {
            console.warn(
              'AG Grid: Export cancelled. Export is not allowed as per your configuration.'
            );
            return;
          }
          var r = this.getMergedParams(e),
            o = this.getData(r),
            i = new Blob(['\uFEFF', o], { type: 'text/plain' }),
            s =
              typeof r.fileName == 'function'
                ? r.fileName(this.gridOptionsService.getGridCommonParams())
                : r.fileName;
          sw.download(this.getFileName(s), i);
        }),
        (t.prototype.exportDataAsCsv = function (e) {
          this.export(e);
        }),
        (t.prototype.getDataAsCsv = function (e, r) {
          r === void 0 && (r = !1);
          var o = r ? Object.assign({}, e) : this.getMergedParams(e);
          return this.getData(o);
        }),
        (t.prototype.getDefaultFileExtension = function () {
          return 'csv';
        }),
        (t.prototype.createSerializingSession = function (e) {
          var r = this,
            o = r.columnModel,
            i = r.valueService,
            s = r.gridOptionsService,
            a = r.valueFormatterService,
            l = r.valueParserService,
            u = e,
            c = u.processCellCallback,
            p = u.processHeaderCallback,
            d = u.processGroupHeaderCallback,
            h = u.processRowGroupCallback,
            f = u.suppressQuotes,
            y = u.columnSeparator;
          return new lw({
            columnModel: o,
            valueService: i,
            gridOptionsService: s,
            valueFormatterService: a,
            valueParserService: l,
            processCellCallback: c || void 0,
            processHeaderCallback: p || void 0,
            processGroupHeaderCallback: d || void 0,
            processRowGroupCallback: h || void 0,
            suppressQuotes: f || !1,
            columnSeparator: y || ',',
          });
        }),
        (t.prototype.isExportSuppressed = function () {
          return this.gridOptionsService.get('suppressCsvExport');
        }),
        Xt([v('columnModel')], t.prototype, 'columnModel', void 0),
        Xt([v('valueService')], t.prototype, 'valueService', void 0),
        Xt([v('gridSerializer')], t.prototype, 'gridSerializer', void 0),
        Xt([v('gridOptionsService')], t.prototype, 'gridOptionsService', void 0),
        Xt([v('valueFormatterService')], t.prototype, 'valueFormatterService', void 0),
        Xt([v('valueParserService')], t.prototype, 'valueParserService', void 0),
        Xt([F], t.prototype, 'postConstruct', null),
        (t = Xt([x('csvCreator')], t)),
        t
      );
    })(iw),
    pw = (function () {
      var n = function (t, e) {
        return (
          (n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, o) {
                r.__proto__ = o;
              }) ||
            function (r, o) {
              for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (r[i] = o[i]);
            }),
          n(t, e)
        );
      };
      return function (t, e) {
        if (typeof e != 'function' && e !== null)
          throw new TypeError('Class extends value ' + String(e) + ' is not a constructor or null');
        n(t, e);
        function r() {
          this.constructor = t;
        }
        t.prototype = e === null ? Object.create(e) : ((r.prototype = e.prototype), new r());
      };
    })(),
    Jt = function (n, t, e, r) {
      var o = arguments.length,
        i = o < 3 ? t : r === null ? (r = Object.getOwnPropertyDescriptor(t, e)) : r,
        s;
      if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
        i = Reflect.decorate(n, t, e, r);
      else
        for (var a = n.length - 1; a >= 0; a--)
          (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
      return o > 3 && i && Object.defineProperty(t, e, i), i;
    },
    oc;
  (function (n) {
    (n[(n.HEADER_GROUPING = 0)] = 'HEADER_GROUPING'),
      (n[(n.HEADER = 1)] = 'HEADER'),
      (n[(n.BODY = 2)] = 'BODY');
  })(oc || (oc = {}));
  var dw = (function (n) {
      pw(t, n);
      function t() {
        return (n !== null && n.apply(this, arguments)) || this;
      }
      return (
        (t.prototype.serialize = function (e, r) {
          r === void 0 && (r = {});
          var o = r.allColumns,
            i = r.columnKeys,
            s = r.skipRowGroups,
            a = this.getColumnsToExport(o, s, i),
            l = j.compose(
              this.prepareSession(a),
              this.prependContent(r),
              this.exportColumnGroups(r, a),
              this.exportHeaders(r, a),
              this.processPinnedTopRows(r, a),
              this.processRows(r, a),
              this.processPinnedBottomRows(r, a),
              this.appendContent(r)
            );
          return l(e).parse();
        }),
        (t.prototype.processRow = function (e, r, o, i) {
          var s =
              r.shouldRowBeSkipped ||
              function () {
                return !1;
              },
            a = this.gridOptionsService.get('groupRemoveSingleChildren'),
            l = this.gridOptionsService.get('groupRemoveLowestSingleChildren'),
            u = r.rowPositions != null,
            c = u || !!r.onlySelected,
            p = this.gridOptionsService.get('groupHideOpenParents') && !c,
            d = this.columnModel.isPivotMode() ? i.leafGroup : !i.group,
            h = !!i.footer;
          r.skipRowGroups;
          var f = l && i.leafGroup,
            y = i.allChildrenCount === 1 && (a || f);
          if (
            !(
              (!d && !h && (r.skipRowGroups || y || p)) ||
              (r.onlySelected && !i.isSelected()) ||
              (r.skipPinnedTop && i.rowPinned === 'top') ||
              (r.skipPinnedBottom && i.rowPinned === 'bottom')
            )
          ) {
            var m = i.level === -1;
            if (!(m && !d && !h)) {
              var C = s(this.gridOptionsService.addGridCommonParams({ node: i }));
              if (!C) {
                var w = e.onNewBodyRow(i);
                if (
                  (o.forEach(function (S, R) {
                    w.onColumn(S, R, i);
                  }),
                  r.getCustomContentBelowRow)
                ) {
                  var E = r.getCustomContentBelowRow(
                    this.gridOptionsService.addGridCommonParams({ node: i })
                  );
                  E && e.addCustomContent(E);
                }
              }
            }
          }
        }),
        (t.prototype.appendContent = function (e) {
          return function (r) {
            var o = e.appendContent;
            return o && r.addCustomContent(o), r;
          };
        }),
        (t.prototype.prependContent = function (e) {
          return function (r) {
            var o = e.prependContent;
            return o && r.addCustomContent(o), r;
          };
        }),
        (t.prototype.prepareSession = function (e) {
          return function (r) {
            return r.prepare(e), r;
          };
        }),
        (t.prototype.exportColumnGroups = function (e, r) {
          var o = this;
          return function (i) {
            if (!e.skipColumnGroupHeaders) {
              var s = new Pa(),
                a = o.displayedGroupCreator.createDisplayedGroups(r, s, null);
              o.recursivelyAddHeaderGroups(a, i, e.processGroupHeaderCallback);
            }
            return i;
          };
        }),
        (t.prototype.exportHeaders = function (e, r) {
          return function (o) {
            if (!e.skipColumnHeaders) {
              var i = o.onNewHeaderRow();
              r.forEach(function (s, a) {
                i.onColumn(s, a, void 0);
              });
            }
            return o;
          };
        }),
        (t.prototype.processPinnedTopRows = function (e, r) {
          var o = this;
          return function (i) {
            var s = o.processRow.bind(o, i, e, r);
            return (
              e.rowPositions
                ? e.rowPositions
                    .filter(function (a) {
                      return a.rowPinned === 'top';
                    })
                    .sort(function (a, l) {
                      return a.rowIndex - l.rowIndex;
                    })
                    .map(function (a) {
                      return o.pinnedRowModel.getPinnedTopRow(a.rowIndex);
                    })
                    .forEach(s)
                : o.pinnedRowModel.forEachPinnedTopRow(s),
              i
            );
          };
        }),
        (t.prototype.processRows = function (e, r) {
          var o = this;
          return function (i) {
            var s = o.rowModel,
              a = s.getType(),
              l = a === 'clientSide',
              u = a === 'serverSide',
              c = !l && e.onlySelected,
              p = o.processRow.bind(o, i, e, r),
              d = e.exportedRows,
              h = d === void 0 ? 'filteredAndSorted' : d;
            if (e.rowPositions)
              e.rowPositions
                .filter(function (y) {
                  return y.rowPinned == null;
                })
                .sort(function (y, m) {
                  return y.rowIndex - m.rowIndex;
                })
                .map(function (y) {
                  return s.getRow(y.rowIndex);
                })
                .forEach(p);
            else if (o.columnModel.isPivotMode())
              l
                ? s.forEachPivotNode(p, !0)
                : u
                ? s.forEachNodeAfterFilterAndSort(p, !0)
                : s.forEachNode(p);
            else if (e.onlySelectedAllPages || c) {
              var f = o.selectionService.getSelectedNodes();
              o.replicateSortedOrder(f), f.forEach(p);
            } else
              h === 'all'
                ? s.forEachNode(p)
                : l || u
                ? s.forEachNodeAfterFilterAndSort(p, !0)
                : s.forEachNode(p);
            return i;
          };
        }),
        (t.prototype.replicateSortedOrder = function (e) {
          var r = this,
            o = this.sortController.getSortOptions(),
            i = function (s, a) {
              var l, u, c, p;
              return s.rowIndex != null && a.rowIndex != null
                ? s.rowIndex - a.rowIndex
                : s.level === a.level
                ? ((l = s.parent) === null || l === void 0 ? void 0 : l.id) ===
                  ((u = a.parent) === null || u === void 0 ? void 0 : u.id)
                  ? r.rowNodeSorter.compareRowNodes(
                      o,
                      {
                        rowNode: s,
                        currentPos: (c = s.rowIndex) !== null && c !== void 0 ? c : -1,
                      },
                      { rowNode: a, currentPos: (p = a.rowIndex) !== null && p !== void 0 ? p : -1 }
                    )
                  : i(s.parent, a.parent)
                : s.level > a.level
                ? i(s.parent, a)
                : i(s, a.parent);
            };
          e.sort(i);
        }),
        (t.prototype.processPinnedBottomRows = function (e, r) {
          var o = this;
          return function (i) {
            var s = o.processRow.bind(o, i, e, r);
            return (
              e.rowPositions
                ? e.rowPositions
                    .filter(function (a) {
                      return a.rowPinned === 'bottom';
                    })
                    .sort(function (a, l) {
                      return a.rowIndex - l.rowIndex;
                    })
                    .map(function (a) {
                      return o.pinnedRowModel.getPinnedBottomRow(a.rowIndex);
                    })
                    .forEach(s)
                : o.pinnedRowModel.forEachPinnedBottomRow(s),
              i
            );
          };
        }),
        (t.prototype.getColumnsToExport = function (e, r, o) {
          e === void 0 && (e = !1), r === void 0 && (r = !1);
          var i = this.columnModel.isPivotMode();
          if (o && o.length) return this.columnModel.getGridColumns(o);
          var s = this.gridOptionsService.get('treeData'),
            a = [];
          return (
            e && !i
              ? (a = this.columnModel.getAllGridColumns())
              : (a = this.columnModel.getAllDisplayedColumns()),
            r &&
              !s &&
              (a = a.filter(function (l) {
                return l.getColId() !== Er;
              })),
            a
          );
        }),
        (t.prototype.recursivelyAddHeaderGroups = function (e, r, o) {
          var i = [];
          e.forEach(function (s) {
            var a = s;
            a.getChildren &&
              a.getChildren().forEach(function (l) {
                return i.push(l);
              });
          }),
            e.length > 0 && e[0] instanceof se && this.doAddHeaderHeader(r, e, o),
            i && i.length > 0 && this.recursivelyAddHeaderGroups(i, r, o);
        }),
        (t.prototype.doAddHeaderHeader = function (e, r, o) {
          var i = this,
            s = e.onNewHeaderGroupingRow(),
            a = 0;
          r.forEach(function (l) {
            var u = l,
              c;
            o
              ? (c = o(i.gridOptionsService.addGridCommonParams({ columnGroup: u })))
              : (c = i.columnModel.getDisplayNameForColumnGroup(u, 'header'));
            var p = u.getLeafColumns().reduce(function (d, h, f, y) {
              var m = j.last(d),
                C = h.getColumnGroupShow() === 'open';
              return (
                C
                  ? (!m || m[1] != null) && ((m = [f]), d.push(m))
                  : m && m[1] == null && (m[1] = f - 1),
                f === y.length - 1 && m && m[1] == null && (m[1] = f),
                d
              );
            }, []);
            s.onColumn(u, c || '', a++, u.getLeafColumns().length - 1, p);
          });
        }),
        Jt([v('displayedGroupCreator')], t.prototype, 'displayedGroupCreator', void 0),
        Jt([v('columnModel')], t.prototype, 'columnModel', void 0),
        Jt([v('rowModel')], t.prototype, 'rowModel', void 0),
        Jt([v('pinnedRowModel')], t.prototype, 'pinnedRowModel', void 0),
        Jt([v('selectionService')], t.prototype, 'selectionService', void 0),
        Jt([v('rowNodeSorter')], t.prototype, 'rowNodeSorter', void 0),
        Jt([v('sortController')], t.prototype, 'sortController', void 0),
        (t = Jt([x('gridSerializer')], t)),
        t
      );
    })(D),
    hw = '31.1.1',
    fw = { version: hw, moduleName: G.CsvExportModule, beans: [cw, dw] };
  j.utf8_encode;
  var vw = [qS, ow, fw];
  X.registerModules(vw);
  const gw = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
   <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
   <path d="M9 4h6a2 2 0 0 1 2 2v14l-5 -3l-5 3v-14a2 2 0 0 1 2 -2"></path>
</svg>`,
    yw = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
   <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
   <path d="M15 3a3 3 0 0 1 2.995 2.824l.005 .176v14a1 1 0 0 1 -1.413 .911l-.101 -.054l-4.487 -2.691l-4.485 2.691a1 1 0 0 1 -1.508 -.743l-.006 -.114v-14a3 3 0 0 1 2.824 -2.995l.176 -.005h6z" stroke-width="0" fill="currentColor"></path>
</svg>`,
    ic = `<svg width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <path d="M18 6l-12 12"/>
  <path d="M6 6l12 12"/>
</svg>`,
    nc = `<svg width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <path d="M4 7l16 0"/>
  <path d="M10 11l0 6"/>
  <path d="M14 11l0 6"/>
  <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"/>
  <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"/>
</svg>`,
    mw = `<svg
  width="24"
  height="24"
  viewBox="0 0 24 24"
  stroke-width="2"
  stroke="currentColor"
  fill="none"
  stroke-linecap="round"
  stroke-linejoin="round"
>
  <path stroke="none" d="M0 0h24v24H0z" fill="none" />
  <path d="M7 4v16l13 -8z" />
</svg>
`,
    Cw = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
   <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
   <path d="M9 4.55a8 8 0 0 1 6 14.9m0 -4.45v5h5"></path>
   <path d="M5.63 7.16l0 .01"></path>
   <path d="M4.06 11l0 .01"></path>
   <path d="M4.63 15.1l0 .01"></path>
   <path d="M7.16 18.37l0 .01"></path>
   <path d="M11 19.94l0 .01"></path>
</svg>`,
    Sw = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
   <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
   <path d="M6 4h10l4 4v10a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2"></path>
   <path d="M12 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0"></path>
   <path d="M14 4l0 4l-6 0l0 -4"></path>
</svg>`,
    ww = `<svg width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
<path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0"/>
<path d="M21 21l-6 -6"/>
</svg>`,
    Ew = Vs.prototype.setFocusedCell;
  Vs.prototype.setFocusedCell = function (n) {
    return (
      n.preventScrollOnBrowserFocus == null && (n.preventScrollOnBrowserFocus = !0),
      Ew.call(this, n)
    );
  };
  const _w = (n, t) => {
      if (n.getDisplayedRowCount() === 0) return;
      const e = n.paginationGetPageSize() * n.paginationGetCurrentPage(),
        o = n.getDisplayedRowAtIndex(e).rowTop,
        i = Math.min(
          n.paginationGetPageSize() * (n.paginationGetCurrentPage() + 1) - 1,
          n.getDisplayedRowCount() - 1
        ),
        s = n.getDisplayedRowAtIndex(i),
        a = s.rowTop + s.rowHeight;
      let l;
      return (
        n.forEachNodeAfterFilterAndSort(u => {
          const c = u.rowTop,
            p = u.rowHeight;
          if (c < a) {
            const d = t - (c - o);
            d > 0 && d < p && (l = u);
          }
        }),
        l
      );
    },
    na = (n, t, e) => {
      const r = n.paginationGetPageSize() * n.paginationGetCurrentPage(),
        i = n.getDisplayedRowAtIndex(r).rowTop;
      return e - (t.rowTop - i);
    },
    Rw = (n, t, e) => (na(n, t, e) < t.rowHeight / 2 ? et.Above : et.Below),
    sc = (n, t = 300) => {
      let e;
      return function (...r) {
        clearTimeout(e), (e = setTimeout(() => n.apply(this, r), t));
      };
    },
    Ow = n =>
      (n + '')
        .replace(/[/][/].*$/gm, '')
        .replace(/\s+/g, '')
        .replace(/[/][*][^/*]*[*][/]/g, '')
        .split('){', 1)[0]
        .replace(/^[^(]*[(]/, '')
        .replace(/=[^,]+/g, '')
        .split(',')
        .filter(Boolean);
  var Tw = { BASE_URL: '/', MODE: 'production', DEV: !1, PROD: !0, SSR: !1 };
  const ac = n => {
      let t;
      const e = new Set(),
        r = (c, p) => {
          const d = typeof c == 'function' ? c(t) : c;
          if (!Object.is(d, t)) {
            const h = t;
            (t = p ?? (typeof d != 'object' || d === null) ? d : Object.assign({}, t, d)),
              e.forEach(f => f(t, h));
          }
        },
        o = () => t,
        l = {
          setState: r,
          getState: o,
          getInitialState: () => u,
          subscribe: c => (e.add(c), () => e.delete(c)),
          destroy: () => {
            (Tw ? 'production' : void 0) !== 'production' &&
              console.warn(
                '[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.'
              ),
              e.clear();
          },
        },
        u = (t = n(r, o, l));
      return l;
    },
    sa = n => (n ? ac(n) : ac),
    Pw = n => {
      const t = sa()(() => n),
        { getState: e, setState: r, subscribe: o } = t,
        i = {
          refresh: async s => {
            const { limit: a = 1e3, offset: l = 0 } = s ?? {},
              u = e().status ?? '';
            return fetch(`/agent-scheduler-hysli/v1/history?status=${u}&limit=${a}&offset=${l}`)
              .then(c => c.json())
              .then(c => (r({ ...c }), c));
          },
          onFilterStatus: s => {
            r({ status: s }), i.refresh();
          },
          bookmarkTask: async (s, a) =>
            fetch(`/agent-scheduler-hysli/v1/task/${s}/${a ? 'bookmark' : 'unbookmark'}`, {
              method: 'POST',
            }).then(l => l.json()),
          renameTask: async (s, a) =>
            fetch(`/agent-scheduler-hysli/v1/task/${s}/rename?name=${encodeURIComponent(a)}`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
            }).then(l => l.json()),
          requeueTask: async s =>
            fetch(`/agent-scheduler-hysli/v1/task/${s}/requeue`, { method: 'POST' }).then(a =>
              a.json()
            ),
          requeueFailedTasks: async () =>
            fetch('/agent-scheduler-hysli/v1/task/requeue-failed', { method: 'POST' }).then(
              s => (i.refresh(), s.json())
            ),
          clearHistory: async () =>
            fetch('/agent-scheduler-hysli/v1/history/clear', { method: 'POST' }).then(
              s => (i.refresh(), s.json())
            ),
        };
      return { getState: e, setState: r, subscribe: o, ...i };
    },
    Dw = n => {
      const t = sa()(() => n),
        { getState: e, setState: r, subscribe: o } = t,
        i = {
          refresh: async () =>
            fetch('/agent-scheduler-hysli/v1/queue?limit=1000')
              .then(s => s.json())
              .then(r),
          exportQueue: async () => fetch('/agent-scheduler-hysli/v1/export').then(s => s.json()),
          importQueue: async s =>
            fetch('/agent-scheduler-hysli/v1/import', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ content: s }),
            })
              .then(l => l.json())
              .then(
                l => (
                  setTimeout(() => {
                    i.refresh();
                  }, 3e3),
                  l
                )
              ),
          pauseQueue: async () =>
            fetch('/agent-scheduler-hysli/v1/queue/pause', { method: 'POST' })
              .then(s => s.json())
              .then(
                s => (
                  setTimeout(() => {
                    i.refresh();
                  }, 500),
                  s
                )
              ),
          resumeQueue: async () =>
            fetch('/agent-scheduler-hysli/v1/queue/resume', { method: 'POST' })
              .then(s => s.json())
              .then(
                s => (
                  setTimeout(() => {
                    i.refresh();
                  }, 500),
                  s
                )
              ),
          clearQueue: async () =>
            fetch('/agent-scheduler-hysli/v1/queue/clear', { method: 'POST' })
              .then(s => s.json())
              .then(s => (i.refresh(), s)),
          runTask: async s =>
            fetch(`/agent-scheduler-hysli/v1/task/${s}/run`, { method: 'POST' })
              .then(a => a.json())
              .then(
                a => (
                  setTimeout(() => {
                    i.refresh();
                  }, 500),
                  a
                )
              ),
          moveTask: async (s, a) =>
            fetch(`/agent-scheduler-hysli/v1/task/${s}/move/${a}`, { method: 'POST' })
              .then(l => l.json())
              .then(l => (i.refresh(), l)),
          updateTask: async (s, a) => {
            const l = {
              name: a.name,
              checkpoint: a.params.checkpoint,
              params: {
                prompt: a.params.prompt,
                negative_prompt: a.params.negative_prompt,
                sampler_name: a.params.sampler_name,
                steps: a.params.steps,
                cfg_scale: a.params.cfg_scale,
              },
            };
            return fetch(`/agent-scheduler-hysli/v1/task/${s}`, {
              method: 'PUT',
              body: JSON.stringify(l),
              headers: { 'Content-Type': 'application/json' },
            }).then(u => u.json());
          },
          deleteTask: async s =>
            fetch(`/agent-scheduler-hysli/v1/task/${s}`, { method: 'DELETE' }).then(a => a.json()),
        };
      return { getState: e, setState: r, subscribe: o, ...i };
    },
    Aw = n => {
      const t = sa(() => n),
        { getState: e, setState: r, subscribe: o } = t;
      return {
        getState: e,
        setState: r,
        subscribe: o,
        ...{
          setSelectedTab: s => {
            r({ selectedTab: s });
          },
          getSamplers: async () => fetch('/agent-scheduler-hysli/v1/samplers').then(s => s.json()),
          getCheckpoints: async () =>
            fetch('/agent-scheduler-hysli/v1/sd-models').then(s => s.json()),
        },
      };
    };
  let Ki;
  const lt = Aw({ uiAsTab: !0, selectedTab: 'pending' }),
    Ot = Dw({ current_task_id: null, total_pending_tasks: 0, pending_tasks: [], paused: !1 }),
    $i = Pw({ total: 0, tasks: [] }),
    lc = [],
    uc = ['System'],
    Cr = {
      defaultColDef: { sortable: !1, filter: !0, resizable: !0, suppressMenu: !0 },
      columnDefs: [
        {
          field: 'name',
          headerName: 'Task Id',
          cellDataType: 'text',
          minWidth: 240,
          maxWidth: 240,
          pinned: 'left',
          rowDrag: !0,
          valueGetter: ({ data: n }) =>
            (n == null ? void 0 : n.name) ?? (n == null ? void 0 : n.id),
          cellClass: ({ data: n }) => {
            if (n != null) return ['cursor-pointer', `task-${n.status}`];
          },
        },
        { field: 'type', headerName: 'Type', minWidth: 80, maxWidth: 80, editable: !1 },
        { field: 'editing', editable: !1, hide: !0 },
        {
          headerName: 'Params',
          children: [
            {
              field: 'params.prompt',
              headerName: 'Prompt',
              cellDataType: 'text',
              minWidth: 200,
              maxWidth: 400,
              autoHeight: !0,
              wrapText: !0,
              cellClass: 'wrap-cell',
            },
            {
              field: 'params.negative_prompt',
              headerName: 'Negative Prompt',
              cellDataType: 'text',
              minWidth: 200,
              maxWidth: 400,
              autoHeight: !0,
              wrapText: !0,
              cellClass: 'wrap-cell',
            },
            {
              field: 'params.checkpoint',
              headerName: 'Checkpoint',
              cellDataType: 'text',
              minWidth: 150,
              maxWidth: 300,
              valueFormatter: ({ value: n }) => n ?? 'System',
              cellEditor: 'agSelectCellEditor',
              cellEditorParams: () => ({ values: uc }),
            },
            {
              field: 'params.sampler_name',
              headerName: 'Sampler',
              cellDataType: 'text',
              width: 150,
              minWidth: 150,
              cellEditor: 'agSelectCellEditor',
              cellEditorParams: () => ({ values: lc }),
            },
            {
              field: 'params.steps',
              headerName: 'Steps',
              cellDataType: 'number',
              minWidth: 80,
              maxWidth: 80,
              filter: 'agNumberColumnFilter',
              cellEditor: 'agNumberCellEditor',
              cellEditorParams: { min: 1, max: 150, precision: 0, step: 1 },
            },
            {
              field: 'params.cfg_scale',
              headerName: 'CFG Scale',
              cellDataType: 'number',
              width: 100,
              minWidth: 100,
              filter: 'agNumberColumnFilter',
              cellEditor: 'agNumberCellEditor',
              cellEditorParams: { min: 1, max: 30, precision: 1, step: 0.5 },
            },
            {
              field: 'params.size',
              headerName: 'Size',
              minWidth: 110,
              maxWidth: 110,
              editable: !1,
              valueGetter: ({ data: n }) => {
                const t = n == null ? void 0 : n.params;
                return t != null ? `${t.width} × ${t.height}` : void 0;
              },
            },
            {
              field: 'params.batch',
              headerName: 'Batching',
              minWidth: 100,
              maxWidth: 100,
              editable: !1,
              valueGetter: ({ data: n }) => {
                const t = n == null ? void 0 : n.params;
                return t != null ? `${t.batch_size} × ${t.n_iter}` : '1 × 1';
              },
            },
          ],
        },
        {
          field: 'created_at',
          headerName: 'Queued At',
          minWidth: 180,
          editable: !1,
          valueFormatter: ({ value: n }) =>
            n != null ? new Date(n).toLocaleString(document.documentElement.lang) : '',
        },
        {
          field: 'updated_at',
          headerName: 'Updated At',
          minWidth: 180,
          editable: !1,
          valueFormatter: ({ value: n }) =>
            n != null ? new Date(n).toLocaleString(document.documentElement.lang) : '',
        },
      ],
      getRowId: ({ data: n }) => n.id,
      rowSelection: 'single',
      animateRows: !0,
      pagination: !0,
      paginationAutoPageSize: !0,
      suppressCopyRowsToClipboard: !0,
      enableBrowserTooltips: !0,
    };
  function cc(n) {
    const t = gradioApp().querySelector(n);
    if (t == null) throw new Error(`Search container '${n}' not found.`);
    const e = t.getElementsByTagName('input')[0];
    if (e == null) throw new Error('Search input not found.');
    e.classList.add('ts-search-input');
    const r = document.createElement('div');
    return (r.className = 'ts-search-icon'), (r.innerHTML = ww), e.parentElement.appendChild(r), e;
  }
  async function xe(n) {
    if (Ki == null) {
      const t = await Promise.resolve().then(() => xw);
      Ki = new t.Notyf({ position: { x: 'center', y: 'bottom' }, duration: 3e3 });
    }
    n.success ? Ki.success(n.message) : Ki.error(n.message);
  }
  (window.notify = xe), (window.origRandomId = window.randomId);
  function pc(n, t, e) {
    if (Object.keys(opts).length === 0) {
      setTimeout(() => pc(n, t, e), 500);
      return;
    }
    const r = Ow(requestProgress),
      o = gradioApp().querySelector('#agent_scheduler_hysli_current_task_images');
    if (r.includes('progressbarContainer')) requestProgress(n, o, o, e);
    else {
      const i = document.createElement('div');
      (i.className = 'progressDiv'),
        o.parentElement.insertBefore(i, o),
        requestProgress(
          n,
          o,
          o,
          () => {
            i.remove(), e();
          },
          s => {
            const a = `${Math.round(s.progress * 100)}%`,
              l = s.paused ? 'Paused' : `ETA: ${Math.round(s.eta)}s`;
            (i.innerText = `${a} ${l}`),
              (i.style.background = `linear-gradient(to right, var(--primary-500) 0%, var(--primary-800) ${a}, var(--neutral-700) ${a})`);
          }
        );
    }
    (window.randomId = () => n),
      t === 'txt2img' ? submit() : t === 'img2img' && submit_img2img(),
      (window.randomId = window.origRandomId);
  }
  function bw() {
    const n = l => {
        const u = gradioApp().querySelector(
          `#${l ? 'img2img_enqueue_wrapper' : 'txt2img_enqueue_wrapper'} input`
        );
        if (u != null) {
          const p = u.value;
          if (p === 'Runtime Checkpoint' || p !== 'Current Checkpoint') return p;
        }
        const c = gradioApp().querySelector('#setting_sd_model_checkpoint input');
        return (c == null ? void 0 : c.value) ?? 'Current Checkpoint';
      },
      t = gradioApp().querySelector('#txt2img_enqueue');
    window.submit_enqueue = (...l) => {
      const u = create_submit_args(l);
      return (
        (u[0] = n(!1)),
        (u[1] = randomId()),
        (window.randomId = window.origRandomId),
        t != null &&
          ((t.innerText = 'Queued'),
          setTimeout(() => {
            (t.innerText = 'Enqueue'),
              lt.getState().uiAsTab || (lt.getState().selectedTab === 'pending' && Ot.refresh());
          }, 1e3)),
        u
      );
    };
    const e = gradioApp().querySelector('#img2img_enqueue');
    window.submit_enqueue_img2img = (...l) => {
      const u = create_submit_args(l);
      return (
        (u[0] = n(!0)),
        (u[1] = randomId()),
        (u[2] = get_tab_index('mode_img2img')),
        (window.randomId = window.origRandomId),
        e != null &&
          ((e.innerText = 'Queued'),
          setTimeout(() => {
            (e.innerText = 'Enqueue'),
              lt.getState().uiAsTab || (lt.getState().selectedTab === 'pending' && Ot.refresh());
          }, 1e3)),
        u
      );
    };
    const r = gradioApp().querySelector('.interrogate-col');
    r != null && r.childElementCount > 2 && r.classList.add('has-queue-button');
    const o = gradioApp().querySelector('#setting_queue_keyboard_shortcut textarea');
    if (!o.value.includes('Disabled')) {
      const l = o.value.split('+'),
        u = l.pop(),
        c = h => {
          if (
            h.code !== u ||
            (l.includes('Shift') && !h.shiftKey) ||
            (l.includes('Alt') && !h.altKey) ||
            (l.includes('Command') && !h.metaKey) ||
            ((l.includes('Control') || l.includes('Ctrl')) && !h.ctrlKey)
          )
            return;
          h.preventDefault(), h.stopPropagation();
          const f = get_tab_index('tabs');
          f === 0 ? t.click() : f === 1 && e.click();
        };
      window.addEventListener('keydown', c),
        gradioApp().querySelector('#txt2img_prompt textarea').addEventListener('keydown', c),
        gradioApp().querySelector('#img2img_prompt textarea').addEventListener('keydown', c);
    }
    Ot.subscribe((l, u) => {
      const c = l.current_task_id;
      if (c !== u.current_task_id && c != null) {
        const p = l.pending_tasks.find(d => d.id === c);
        pc(c, p == null ? void 0 : p.type, Ot.refresh);
      }
    });
    const i = (l = !1) => {
        const u = prompt('Enter task name');
        (window.randomId = () => u ?? window.origRandomId()), l ? e.click() : t.click();
      },
      s = (l = !1) => {
        (window.randomId = () => '$$_queue_with_all_checkpoints_$$'), l ? e.click() : t.click();
      };
    appendContextMenuOption('#txt2img_enqueue', 'Queue with task name', () => i()),
      appendContextMenuOption('#txt2img_enqueue', 'Queue with all checkpoints', () => s()),
      appendContextMenuOption('#img2img_enqueue', 'Queue with task name', () => i(!0)),
      appendContextMenuOption('#img2img_enqueue', 'Queue with all checkpoints', () => s(!0));
    const a = window.modalSaveImage;
    window.modalSaveImage = l => {
      gradioApp().querySelector('#tab_agent_scheduler_hysli').style.display !== 'none'
        ? (gradioApp().querySelector('#agent_scheduler_hysli_save').click(), l.preventDefault())
        : a(l);
    };
  }
  function Fw() {
    lt.subscribe((e, r) => {
      (!e.uiAsTab || e.selectedTab !== r.selectedTab) &&
        (e.selectedTab === 'pending' ? Ot.refresh() : $i.refresh());
    });
    const n = new MutationObserver(e => {
        e.forEach(r => {
          const o = r.target;
          if (o.style.display !== 'none')
            switch (o.id) {
              case 'tab_agent_scheduler_hysli':
                lt.getState().selectedTab === 'pending' ? Ot.refresh() : $i.refresh();
                break;
              case 'agent_scheduler_hysli_pending_tasks_tab':
                lt.setSelectedTab('pending');
                break;
              case 'agent_scheduler_hysli_history_tab':
                lt.setSelectedTab('history');
                break;
            }
        });
      }),
      t = gradioApp().querySelector('#tab_agent_scheduler_hysli');
    t != null ? n.observe(t, { attributeFilter: ['style'] }) : lt.setState({ uiAsTab: !1 }),
      n.observe(gradioApp().querySelector('#agent_scheduler_hysli_pending_tasks_tab'), {
        attributeFilter: ['style'],
      }),
      n.observe(gradioApp().querySelector('#agent_scheduler_hysli_history_tab'), {
        attributeFilter: ['style'],
      });
  }
  function Lw() {
    const n = Ot;
    lt.getSamplers().then(S => lc.push(...S)),
      lt.getCheckpoints().then(S => uc.push(...S)),
      gradioApp()
        .querySelector('#agent_scheduler_hysli_action_reload')
        .addEventListener('click', () => n.refresh());
    const e = gradioApp().querySelector('#agent_scheduler_hysli_action_pause');
    e.addEventListener('click', () => n.pauseQueue().then(xe));
    const r = gradioApp().querySelector('#agent_scheduler_hysli_action_resume');
    r.addEventListener('click', () => n.resumeQueue().then(xe)),
      gradioApp()
        .querySelector('#agent_scheduler_hysli_action_clear_queue')
        .addEventListener('click', () => {
          confirm('Are you sure you want to clear the queue?') && n.clearQueue().then(xe);
        });
    const i = gradioApp().querySelector('#agent_scheduler_hysli_action_import'),
      s = gradioApp().querySelector('#agent_scheduler_hysli_import_file');
    i.addEventListener('click', () => {
      s.click();
    }),
      s.addEventListener('change', S => {
        if (S.target === null) return;
        const R = s.files;
        if (R == null || R.length === 0) return;
        const O = R[0],
          b = new FileReader();
        (b.onload = () => {
          const A = b.result;
          n.importQueue(A)
            .then(xe)
            .then(() => {
              (s.value = ''), n.refresh();
            });
        }),
          b.readAsText(O);
      }),
      gradioApp()
        .querySelector('#agent_scheduler_hysli_action_export')
        .addEventListener('click', () => {
          n.exportQueue().then(S => {
            const R = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(S)),
              O = document.createElement('a');
            O.setAttribute('href', R),
              O.setAttribute('download', `agent-scheduler-hysli-${Date.now()}.json`),
              O.click();
          });
        });
    const l = S => {
      S.paused
        ? (e.classList.add('hide', 'hidden'), r.classList.remove('hide', 'hidden'))
        : (e.classList.remove('hide', 'hidden'), r.classList.add('hide', 'hidden'));
    };
    n.subscribe(l), l(n.getState());
    let u, c;
    const p = 1.5 * 1e3,
      d = 45 / 2,
      h = () => {
        c != null && (clearTimeout(c), (c = null));
      },
      f = (S, R) => {
        if (u == null) {
          h();
          return;
        }
        const O = S.paginationGetPageSize() * S.paginationGetCurrentPage(),
          b = Math.min(
            S.paginationGetPageSize() * (S.paginationGetCurrentPage() + 1) - 1,
            S.getDisplayedRowCount() - 1
          ),
          A = u.rowIndex;
        if (A === O) {
          if (na(S, u, R) > d) {
            h();
            return;
          }
          c == null &&
            (c = setTimeout(() => {
              S.paginationGetCurrentPage() > 0 && (S.paginationGoToPreviousPage(), C(S)),
                (c = null);
            }, p));
        } else if (A === b) {
          if (na(S, u, R) < u.rowHeight - d) {
            h();
            return;
          }
          c == null &&
            (c = setTimeout(() => {
              S.paginationGetCurrentPage() < S.paginationGetTotalPages() - 1 &&
                (S.paginationGoToNextPage(), C(S)),
                (c = null);
            }, p));
        }
      };
    let y;
    const m = () => {
        h(), (y = null), u != null && (u.setHighlighted(null), (u = null));
      },
      C = (S, R) => {
        if (R == null) {
          if (y == null) return;
          R = y;
        } else y = R;
        const O = _w(S, R);
        if (O == null) return;
        const b = Rw(S, O, R);
        u != null && O.id !== u.id && m(), O.setHighlighted(b), (u = O), f(S, R);
      },
      w = {
        ...Cr,
        editType: 'fullRow',
        defaultColDef: {
          ...Cr.defaultColDef,
          editable: ({ data: S }) => (S == null ? void 0 : S.status) === 'pending',
          cellDataType: !1,
        },
        columnDefs: [
          { field: 'priority', hide: !0, sort: 'asc' },
          ...Cr.columnDefs,
          {
            headerName: 'Action',
            pinned: 'right',
            minWidth: 110,
            maxWidth: 110,
            resizable: !1,
            editable: !1,
            valueGetter: ({ data: S }) => (S == null ? void 0 : S.id),
            cellClass: 'pending-actions',
            cellRenderer: ({ api: S, value: R, data: O }) => {
              if (O == null || R == null) return;
              const b = document.createElement('div');
              return (
                (b.innerHTML = `
          <div class="inline-flex mt-1 edit-actions" role="group">
            <button type="button" title="Save" class="ts-btn-action primary ts-btn-save">
              ${Sw}
            </button>
            <button type="button" title="Cancel" class="ts-btn-action secondary ts-btn-cancel">
              ${ic}
            </button>
          </div>
          <div class="inline-flex mt-1 control-actions" role="group">
            <button type="button" title="Run" class="ts-btn-action primary ts-btn-run"
              ${O.status === 'running' ? 'disabled' : ''}>
              ${mw}
            </button>
            <button type="button" title="${O.status === 'pending' ? 'Delete' : 'Interrupt'}"
              class="ts-btn-action stop ts-btn-delete">
              ${O.status === 'pending' ? nc : ic}
            </button>
          </div>
          `),
                b.querySelector('button.ts-btn-save').addEventListener('click', () => {
                  S.showLoadingOverlay(),
                    Ot.updateTask(O.id, O).then(W => {
                      xe(W), S.hideOverlay(), S.stopEditing(!1);
                    });
                }),
                b
                  .querySelector('button.ts-btn-cancel')
                  .addEventListener('click', () => S.stopEditing(!0)),
                b.querySelector('button.ts-btn-run').addEventListener('click', () => {
                  S.showLoadingOverlay(), n.runTask(R).then(() => S.hideOverlay());
                }),
                b.querySelector('button.ts-btn-delete').addEventListener('click', () => {
                  S.showLoadingOverlay(),
                    n.deleteTask(R).then(W => {
                      xe(W), S.applyTransaction({ remove: [O] }), S.hideOverlay();
                    });
                }),
                b
              );
            },
          },
        ],
        onColumnMoved: ({ api: S }) => {
          const R = S.getColumnState(),
            O = JSON.stringify(R);
          localStorage.setItem('agent_scheduler_hysli:queue_col_state', O);
        },
        onSortChanged: ({ api: S }) => {
          const R = S.getColumnState(),
            O = JSON.stringify(R);
          localStorage.setItem('agent_scheduler_hysli:queue_col_state', O);
        },
        onColumnResized: ({ api: S }) => {
          const R = S.getColumnState(),
            O = JSON.stringify(R);
          localStorage.setItem('agent_scheduler_hysli:queue_col_state', O);
        },
        onGridReady: ({ api: S }) => {
          cc('#agent_scheduler_hysli_action_search').addEventListener(
            'keyup',
            sc(function () {
              S.updateGridOptions({ quickFilterText: this.value });
            }, 200)
          );
          const O = A => {
            if ((S.updateGridOptions({ rowData: A.pending_tasks }), A.current_task_id != null)) {
              const M = S.getRowNode(A.current_task_id);
              M != null && S.refreshCells({ rowNodes: [M], force: !0 });
            }
            S.clearFocusedCell(), S.autoSizeAllColumns();
          };
          n.subscribe(O), O(n.getState());
          const b = localStorage.getItem('agent_scheduler_hysli:queue_col_state');
          if (b != null) {
            const A = JSON.parse(b);
            S.applyColumnState({ state: A, applyOrder: !0 });
          }
        },
        onRowDragEnter: ({ api: S, y: R }) => C(S, R),
        onRowDragMove: ({ api: S, y: R }) => C(S, R),
        onRowDragLeave: () => m(),
        onRowDragEnd: ({ api: S, node: R }) => {
          var ee, oe, Z;
          const O = u;
          if (O == null) {
            m();
            return;
          }
          const b = (ee = R.data) == null ? void 0 : ee.id,
            A = (oe = O.data) == null ? void 0 : oe.id;
          if (b == null || A == null || b === A) {
            m();
            return;
          }
          let M = -1,
            N = -1;
          const I = [...n.getState().pending_tasks].sort((te, Q) => te.priority - Q.priority);
          for (
            let te = 0;
            te < I.length &&
            (I[te].id === b && (M = te), I[te].id === A && (N = te), !(M !== -1 && N !== -1));
            te++
          );
          if (M === -1 || N === -1) {
            m();
            return;
          }
          if ((O.highlighted === et.Below && (N += 1), N === M || N === M + 1)) {
            m();
            return;
          }
          const W = ((Z = I[N]) == null ? void 0 : Z.id) ?? 'bottom';
          S.showLoadingOverlay(),
            n.moveTask(b, W).then(() => {
              m(), S.hideOverlay();
            });
        },
        onRowEditingStarted: ({ api: S, data: R, node: O }) => {
          R != null &&
            (O.setDataValue('editing', !0), S.refreshCells({ rowNodes: [O], force: !0 }));
        },
        onRowEditingStopped: ({ api: S, data: R, node: O }) => {
          R != null &&
            (O.setDataValue('editing', !1), S.refreshCells({ rowNodes: [O], force: !0 }));
        },
        onRowValueChanged: ({ api: S, data: R }) => {
          R != null &&
            (S.showLoadingOverlay(),
            Ot.updateTask(R.id, R).then(O => {
              xe(O), S.hideOverlay();
            }));
        },
      },
      E = gradioApp().querySelector('#agent_scheduler_hysli_pending_tasks_grid');
    if (typeof E.dataset.pageSize == 'string') {
      const S = parseInt(E.dataset.pageSize, 10);
      S > 0 && ((w.paginationAutoPageSize = !1), (w.paginationPageSize = S));
    }
    Xu(E, w);
  }
  function Mw() {
    const n = $i;
    gradioApp()
      .querySelector('#agent_scheduler_hysli_action_refresh_history')
      .addEventListener('click', () => n.refresh()),
      gradioApp()
        .querySelector('#agent_scheduler_hysli_action_clear_history')
        .addEventListener('click', () => {
          confirm('Are you sure you want to clear the history?') && n.clearHistory().then(xe);
        }),
      gradioApp()
        .querySelector('#agent_scheduler_hysli_action_requeue')
        .addEventListener('click', () => {
          n.requeueFailedTasks().then(xe);
        });
    const o = gradioApp().querySelector('#agent_scheduler_hysli_history_selected_task textarea'),
      i = gradioApp().querySelector('#agent_scheduler_hysli_history_selected_image textarea');
    gradioApp()
      .querySelector('#agent_scheduler_hysli_history_gallery')
      .addEventListener('click', u => {
        const c = u.target;
        if ((c == null ? void 0 : c.tagName) === 'IMG') {
          const p = Array.prototype.indexOf.call(
            c.parentElement.parentElement.children,
            c.parentElement
          );
          (i.value = p.toString()), i.dispatchEvent(new Event('input', { bubbles: !0 }));
        }
      }),
      (window.agent_scheduler_hysli_status_filter_changed = u => {
        n.onFilterStatus(u == null ? void 0 : u.toLowerCase());
      });
    const a = {
        ...Cr,
        readOnlyEdit: !0,
        defaultColDef: {
          ...Cr.defaultColDef,
          sortable: !0,
          editable: ({ colDef: u }) => (u == null ? void 0 : u.field) === 'name',
        },
        columnDefs: [
          {
            headerName: '',
            field: 'bookmarked',
            minWidth: 55,
            maxWidth: 55,
            pinned: 'left',
            sort: 'desc',
            tooltipValueGetter: ({ value: u }) => (u === !0 ? 'Unbookmark' : 'Bookmark'),
            cellClass: ({ value: u }) => [
              'cursor-pointer',
              'pt-3',
              u === !0 ? 'ts-bookmarked' : 'ts-bookmark',
            ],
            cellRenderer: ({ value: u }) => (u === !0 ? yw : gw),
            onCellClicked: ({ api: u, data: c, value: p, event: d }) => {
              if (c == null) return;
              d != null && (d.stopPropagation(), d.preventDefault());
              const h = p === !0;
              n.bookmarkTask(c.id, !h).then(f => {
                xe(f), u.applyTransaction({ update: [{ ...c, bookmarked: !h }] });
              });
            },
          },
          { field: 'priority', hide: !0, sort: 'desc' },
          { ...Cr.columnDefs[0], rowDrag: !1 },
          ...Cr.columnDefs.slice(1),
          {
            headerName: 'Action',
            pinned: 'right',
            minWidth: 110,
            maxWidth: 110,
            resizable: !1,
            valueGetter: ({ data: u }) => (u == null ? void 0 : u.id),
            cellRenderer: ({ api: u, data: c, value: p }) => {
              if (c == null || p == null) return;
              const d = document.createElement('div');
              return (
                (d.innerHTML = `
          <div class="inline-flex mt-1" role="group">
            <button type="button" title="Requeue" class="ts-btn-action primary ts-btn-run">
              ${Cw}
            </button>
            <button type="button" title="Delete" class="ts-btn-action stop ts-btn-delete">
              ${nc}
            </button>
          </div>
          `),
                d.querySelector('button.ts-btn-run').addEventListener('click', y => {
                  y.preventDefault(), y.stopPropagation(), n.requeueTask(p).then(xe);
                }),
                d.querySelector('button.ts-btn-delete').addEventListener('click', y => {
                  y.preventDefault(),
                    y.stopPropagation(),
                    u.showLoadingOverlay(),
                    Ot.deleteTask(p).then(m => {
                      xe(m), u.applyTransaction({ remove: [c] }), u.hideOverlay();
                    });
                }),
                d
              );
            },
          },
        ],
        rowSelection: 'single',
        suppressRowDeselection: !0,
        onColumnMoved: ({ api: u }) => {
          const c = u.getColumnState(),
            p = JSON.stringify(c);
          localStorage.setItem('agent_scheduler_hysli:history_col_state', p);
        },
        onSortChanged: ({ api: u }) => {
          const c = u.getColumnState(),
            p = JSON.stringify(c);
          localStorage.setItem('agent_scheduler_hysli:history_col_state', p);
        },
        onColumnResized: ({ api: u }) => {
          const c = u.getColumnState(),
            p = JSON.stringify(c);
          localStorage.setItem('agent_scheduler_hysli:history_col_state', p);
        },
        onGridReady: ({ api: u }) => {
          cc('#agent_scheduler_hysli_action_search_history').addEventListener(
            'keyup',
            sc(function () {
              u.updateGridOptions({ quickFilterText: this.value });
            }, 200)
          );
          const p = h => {
            u.updateGridOptions({ rowData: h.tasks }), u.clearFocusedCell(), u.autoSizeAllColumns();
          };
          n.subscribe(p), p(n.getState());
          const d = localStorage.getItem('agent_scheduler_hysli:history_col_state');
          if (d != null) {
            const h = JSON.parse(d);
            u.applyColumnState({ state: h, applyOrder: !0 });
          }
        },
        onSelectionChanged: ({ api: u }) => {
          const [c] = u.getSelectedRows();
          (o.value = c.id), o.dispatchEvent(new Event('input', { bubbles: !0 }));
        },
        onCellEditRequest: ({ api: u, data: c, colDef: p, newValue: d }) => {
          if (p.field !== 'name') return;
          const h = d;
          h != null &&
            (u.showLoadingOverlay(),
            $i.renameTask(c.id, h).then(f => {
              xe(f);
              const y = { ...c, name: h };
              u.applyTransaction({ update: [y] }), u.hideOverlay();
            }));
        },
      },
      l = gradioApp().querySelector('#agent_scheduler_hysli_history_tasks_grid');
    if (typeof l.dataset.pageSize == 'string') {
      const u = parseInt(l.dataset.pageSize, 10);
      u > 0 && ((a.paginationAutoPageSize = !1), (a.paginationPageSize = u));
    }
    Xu(l, a);
  }
  let dc = !1;
  onUiLoaded(function n() {
    if (gradioApp().querySelector('#agent_scheduler_hysli_tabs') == null) {
      setTimeout(n, 500);
      return;
    }
    dc || (bw(), Fw(), Lw(), Mw(), (dc = !0));
  });
  /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */ var rt =
      function () {
        return (
          (rt =
            Object.assign ||
            function (t) {
              for (var e, r = 1, o = arguments.length; r < o; r++) {
                e = arguments[r];
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
              }
              return t;
            }),
          rt.apply(this, arguments)
        );
      },
    hc = (function () {
      function n(t) {
        (this.options = t), (this.listeners = {});
      }
      return (
        (n.prototype.on = function (t, e) {
          var r = this.listeners[t] || [];
          this.listeners[t] = r.concat([e]);
        }),
        (n.prototype.triggerEvent = function (t, e) {
          var r = this,
            o = this.listeners[t] || [];
          o.forEach(function (i) {
            return i({ target: r, event: e });
          });
        }),
        n
      );
    })(),
    Sr;
  (function (n) {
    (n[(n.Add = 0)] = 'Add'), (n[(n.Remove = 1)] = 'Remove');
  })(Sr || (Sr = {}));
  var fc = (function () {
      function n() {
        this.notifications = [];
      }
      return (
        (n.prototype.push = function (t) {
          this.notifications.push(t), this.updateFn(t, Sr.Add, this.notifications);
        }),
        (n.prototype.splice = function (t, e) {
          var r = this.notifications.splice(t, e)[0];
          return this.updateFn(r, Sr.Remove, this.notifications), r;
        }),
        (n.prototype.indexOf = function (t) {
          return this.notifications.indexOf(t);
        }),
        (n.prototype.onUpdate = function (t) {
          this.updateFn = t;
        }),
        n
      );
    })(),
    Ft;
  (function (n) {
    (n.Dismiss = 'dismiss'), (n.Click = 'click');
  })(Ft || (Ft = {}));
  var aa = {
      types: [
        {
          type: 'success',
          className: 'notyf__toast--success',
          backgroundColor: '#3dc763',
          icon: { className: 'notyf__icon--success', tagName: 'i' },
        },
        {
          type: 'error',
          className: 'notyf__toast--error',
          backgroundColor: '#ed3d3d',
          icon: { className: 'notyf__icon--error', tagName: 'i' },
        },
      ],
      duration: 2e3,
      ripple: !0,
      position: { x: 'right', y: 'bottom' },
      dismissible: !1,
    },
    vc = (function () {
      function n() {
        (this.notifications = []),
          (this.events = {}),
          (this.X_POSITION_FLEX_MAP = { left: 'flex-start', center: 'center', right: 'flex-end' }),
          (this.Y_POSITION_FLEX_MAP = { top: 'flex-start', center: 'center', bottom: 'flex-end' });
        var t = document.createDocumentFragment(),
          e = this._createHTMLElement({ tagName: 'div', className: 'notyf' });
        t.appendChild(e),
          document.body.appendChild(t),
          (this.container = e),
          (this.animationEndEventName = this._getAnimationEndEventName()),
          this._createA11yContainer();
      }
      return (
        (n.prototype.on = function (t, e) {
          var r;
          this.events = rt(rt({}, this.events), ((r = {}), (r[t] = e), r));
        }),
        (n.prototype.update = function (t, e) {
          e === Sr.Add ? this.addNotification(t) : e === Sr.Remove && this.removeNotification(t);
        }),
        (n.prototype.removeNotification = function (t) {
          var e = this,
            r = this._popRenderedNotification(t),
            o;
          if (r) {
            (o = r.node), o.classList.add('notyf__toast--disappear');
            var i;
            o.addEventListener(
              this.animationEndEventName,
              (i = function (s) {
                s.target === o &&
                  (o.removeEventListener(e.animationEndEventName, i), e.container.removeChild(o));
              })
            );
          }
        }),
        (n.prototype.addNotification = function (t) {
          var e = this._renderNotification(t);
          this.notifications.push({ notification: t, node: e }),
            this._announce(t.options.message || 'Notification');
        }),
        (n.prototype._renderNotification = function (t) {
          var e,
            r = this._buildNotificationCard(t),
            o = t.options.className;
          return (
            o && (e = r.classList).add.apply(e, o.split(' ')), this.container.appendChild(r), r
          );
        }),
        (n.prototype._popRenderedNotification = function (t) {
          for (var e = -1, r = 0; r < this.notifications.length && e < 0; r++)
            this.notifications[r].notification === t && (e = r);
          if (e !== -1) return this.notifications.splice(e, 1)[0];
        }),
        (n.prototype.getXPosition = function (t) {
          var e;
          return (
            ((e = t == null ? void 0 : t.position) === null || e === void 0 ? void 0 : e.x) ||
            'right'
          );
        }),
        (n.prototype.getYPosition = function (t) {
          var e;
          return (
            ((e = t == null ? void 0 : t.position) === null || e === void 0 ? void 0 : e.y) ||
            'bottom'
          );
        }),
        (n.prototype.adjustContainerAlignment = function (t) {
          var e = this.X_POSITION_FLEX_MAP[this.getXPosition(t)],
            r = this.Y_POSITION_FLEX_MAP[this.getYPosition(t)],
            o = this.container.style;
          o.setProperty('justify-content', r), o.setProperty('align-items', e);
        }),
        (n.prototype._buildNotificationCard = function (t) {
          var e = this,
            r = t.options,
            o = r.icon;
          this.adjustContainerAlignment(r);
          var i = this._createHTMLElement({ tagName: 'div', className: 'notyf__toast' }),
            s = this._createHTMLElement({ tagName: 'div', className: 'notyf__ripple' }),
            a = this._createHTMLElement({ tagName: 'div', className: 'notyf__wrapper' }),
            l = this._createHTMLElement({ tagName: 'div', className: 'notyf__message' });
          l.innerHTML = r.message || '';
          var u = r.background || r.backgroundColor;
          if (o) {
            var c = this._createHTMLElement({ tagName: 'div', className: 'notyf__icon' });
            if (
              ((typeof o == 'string' || o instanceof String) &&
                (c.innerHTML = new String(o).valueOf()),
              typeof o == 'object')
            ) {
              var p = o.tagName,
                d = p === void 0 ? 'i' : p,
                h = o.className,
                f = o.text,
                y = o.color,
                m = y === void 0 ? u : y,
                C = this._createHTMLElement({ tagName: d, className: h, text: f });
              m && (C.style.color = m), c.appendChild(C);
            }
            a.appendChild(c);
          }
          if (
            (a.appendChild(l),
            i.appendChild(a),
            u &&
              (r.ripple ? ((s.style.background = u), i.appendChild(s)) : (i.style.background = u)),
            r.dismissible)
          ) {
            var w = this._createHTMLElement({ tagName: 'div', className: 'notyf__dismiss' }),
              E = this._createHTMLElement({ tagName: 'button', className: 'notyf__dismiss-btn' });
            w.appendChild(E),
              a.appendChild(w),
              i.classList.add('notyf__toast--dismissible'),
              E.addEventListener('click', function (R) {
                var O, b;
                (b = (O = e.events)[Ft.Dismiss]) === null ||
                  b === void 0 ||
                  b.call(O, { target: t, event: R }),
                  R.stopPropagation();
              });
          }
          i.addEventListener('click', function (R) {
            var O, b;
            return (b = (O = e.events)[Ft.Click]) === null || b === void 0
              ? void 0
              : b.call(O, { target: t, event: R });
          });
          var S = this.getYPosition(r) === 'top' ? 'upper' : 'lower';
          return i.classList.add('notyf__toast--' + S), i;
        }),
        (n.prototype._createHTMLElement = function (t) {
          var e = t.tagName,
            r = t.className,
            o = t.text,
            i = document.createElement(e);
          return r && (i.className = r), (i.textContent = o || null), i;
        }),
        (n.prototype._createA11yContainer = function () {
          var t = this._createHTMLElement({ tagName: 'div', className: 'notyf-announcer' });
          t.setAttribute('aria-atomic', 'true'),
            t.setAttribute('aria-live', 'polite'),
            (t.style.border = '0'),
            (t.style.clip = 'rect(0 0 0 0)'),
            (t.style.height = '1px'),
            (t.style.margin = '-1px'),
            (t.style.overflow = 'hidden'),
            (t.style.padding = '0'),
            (t.style.position = 'absolute'),
            (t.style.width = '1px'),
            (t.style.outline = '0'),
            document.body.appendChild(t),
            (this.a11yContainer = t);
        }),
        (n.prototype._announce = function (t) {
          var e = this;
          (this.a11yContainer.textContent = ''),
            setTimeout(function () {
              e.a11yContainer.textContent = t;
            }, 100);
        }),
        (n.prototype._getAnimationEndEventName = function () {
          var t = document.createElement('_fake'),
            e = {
              MozTransition: 'animationend',
              OTransition: 'oAnimationEnd',
              WebkitTransition: 'webkitAnimationEnd',
              transition: 'animationend',
            },
            r;
          for (r in e) if (t.style[r] !== void 0) return e[r];
          return 'animationend';
        }),
        n
      );
    })(),
    Iw = (function () {
      function n(t) {
        var e = this;
        (this.dismiss = this._removeNotification),
          (this.notifications = new fc()),
          (this.view = new vc());
        var r = this.registerTypes(t);
        (this.options = rt(rt({}, aa), t)),
          (this.options.types = r),
          this.notifications.onUpdate(function (o, i) {
            return e.view.update(o, i);
          }),
          this.view.on(Ft.Dismiss, function (o) {
            var i = o.target,
              s = o.event;
            e._removeNotification(i), i.triggerEvent(Ft.Dismiss, s);
          }),
          this.view.on(Ft.Click, function (o) {
            var i = o.target,
              s = o.event;
            return i.triggerEvent(Ft.Click, s);
          });
      }
      return (
        (n.prototype.error = function (t) {
          var e = this.normalizeOptions('error', t);
          return this.open(e);
        }),
        (n.prototype.success = function (t) {
          var e = this.normalizeOptions('success', t);
          return this.open(e);
        }),
        (n.prototype.open = function (t) {
          var e =
              this.options.types.find(function (i) {
                var s = i.type;
                return s === t.type;
              }) || {},
            r = rt(rt({}, e), t);
          this.assignProps(['ripple', 'position', 'dismissible'], r);
          var o = new hc(r);
          return this._pushNotification(o), o;
        }),
        (n.prototype.dismissAll = function () {
          for (; this.notifications.splice(0, 1); );
        }),
        (n.prototype.assignProps = function (t, e) {
          var r = this;
          t.forEach(function (o) {
            e[o] = e[o] == null ? r.options[o] : e[o];
          });
        }),
        (n.prototype._pushNotification = function (t) {
          var e = this;
          this.notifications.push(t);
          var r = t.options.duration !== void 0 ? t.options.duration : this.options.duration;
          r &&
            setTimeout(function () {
              return e._removeNotification(t);
            }, r);
        }),
        (n.prototype._removeNotification = function (t) {
          var e = this.notifications.indexOf(t);
          e !== -1 && this.notifications.splice(e, 1);
        }),
        (n.prototype.normalizeOptions = function (t, e) {
          var r = { type: t };
          return (
            typeof e == 'string' ? (r.message = e) : typeof e == 'object' && (r = rt(rt({}, r), e)),
            r
          );
        }),
        (n.prototype.registerTypes = function (t) {
          var e = ((t && t.types) || []).slice(),
            r = aa.types.map(function (o) {
              var i = -1;
              e.forEach(function (a, l) {
                a.type === o.type && (i = l);
              });
              var s = i !== -1 ? e.splice(i, 1)[0] : {};
              return rt(rt({}, o), s);
            });
          return r.concat(e);
        }),
        n
      );
    })();
  const xw = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        DEFAULT_OPTIONS: aa,
        Notyf: Iw,
        NotyfArray: fc,
        get NotyfArrayEvent() {
          return Sr;
        },
        get NotyfEvent() {
          return Ft;
        },
        NotyfNotification: hc,
        NotyfView: vc,
      },
      Symbol.toStringTag,
      { value: 'Module' }
    )
  );
})();
