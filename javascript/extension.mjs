var Cn = function(n, t) {
  return Cn = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e, r) {
    e.__proto__ = r;
  } || function(e, r) {
    for (var i in r)
      Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i]);
  }, Cn(n, t);
};
function _t(n, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
  Cn(n, t);
  function e() {
    this.constructor = n;
  }
  n.prototype = t === null ? Object.create(t) : (e.prototype = t.prototype, new e());
}
function Ou(n, t, e, r) {
  function i(o) {
    return o instanceof e ? o : new e(function(s) {
      s(o);
    });
  }
  return new (e || (e = Promise))(function(o, s) {
    function a(c) {
      try {
        u(r.next(c));
      } catch (p) {
        s(p);
      }
    }
    function l(c) {
      try {
        u(r.throw(c));
      } catch (p) {
        s(p);
      }
    }
    function u(c) {
      c.done ? o(c.value) : i(c.value).then(a, l);
    }
    u((r = r.apply(n, t || [])).next());
  });
}
function Ma(n, t) {
  var e = { label: 0, sent: function() {
    if (o[0] & 1)
      throw o[1];
    return o[1];
  }, trys: [], ops: [] }, r, i, o, s;
  return s = { next: a(0), throw: a(1), return: a(2) }, typeof Symbol == "function" && (s[Symbol.iterator] = function() {
    return this;
  }), s;
  function a(u) {
    return function(c) {
      return l([u, c]);
    };
  }
  function l(u) {
    if (r)
      throw new TypeError("Generator is already executing.");
    for (; s && (s = 0, u[0] && (e = 0)), e; )
      try {
        if (r = 1, i && (o = u[0] & 2 ? i.return : u[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, u[1])).done)
          return o;
        switch (i = 0, o && (u = [u[0] & 2, o.value]), u[0]) {
          case 0:
          case 1:
            o = u;
            break;
          case 4:
            return e.label++, { value: u[1], done: !1 };
          case 5:
            e.label++, i = u[1], u = [0];
            continue;
          case 7:
            u = e.ops.pop(), e.trys.pop();
            continue;
          default:
            if (o = e.trys, !(o = o.length > 0 && o[o.length - 1]) && (u[0] === 6 || u[0] === 2)) {
              e = 0;
              continue;
            }
            if (u[0] === 3 && (!o || u[1] > o[0] && u[1] < o[3])) {
              e.label = u[1];
              break;
            }
            if (u[0] === 6 && e.label < o[1]) {
              e.label = o[1], o = u;
              break;
            }
            if (o && e.label < o[2]) {
              e.label = o[2], e.ops.push(u);
              break;
            }
            o[2] && e.ops.pop(), e.trys.pop();
            continue;
        }
        u = t.call(n, e);
      } catch (c) {
        u = [6, c], i = 0;
      } finally {
        r = o = 0;
      }
    if (u[0] & 5)
      throw u[1];
    return { value: u[0] ? u[1] : void 0, done: !0 };
  }
}
function tr(n) {
  var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
  if (e)
    return e.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function St(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}
function Gt(n, t, e) {
  if (e || arguments.length === 2)
    for (var r = 0, i = t.length, o; r < i; r++)
      (o || !(r in t)) && (o || (o = Array.prototype.slice.call(t, 0, r)), o[r] = t[r]);
  return n.concat(o || Array.prototype.slice.call(t));
}
function Xt(n) {
  return this instanceof Xt ? (this.v = n, this) : new Xt(n);
}
function Tu(n, t, e) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var r = e.apply(n, t || []), i, o = [];
  return i = {}, s("next"), s("throw"), s("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i;
  function s(d) {
    r[d] && (i[d] = function(v) {
      return new Promise(function(f, y) {
        o.push([d, v, f, y]) > 1 || a(d, v);
      });
    });
  }
  function a(d, v) {
    try {
      l(r[d](v));
    } catch (f) {
      p(o[0][3], f);
    }
  }
  function l(d) {
    d.value instanceof Xt ? Promise.resolve(d.value.v).then(u, c) : p(o[0][2], d);
  }
  function u(d) {
    a("next", d);
  }
  function c(d) {
    a("throw", d);
  }
  function p(d, v) {
    d(v), o.shift(), o.length && a(o[0][0], o[0][1]);
  }
}
function bu(n) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var t = n[Symbol.asyncIterator], e;
  return t ? t.call(n) : (n = typeof tr == "function" ? tr(n) : n[Symbol.iterator](), e = {}, r("next"), r("throw"), r("return"), e[Symbol.asyncIterator] = function() {
    return this;
  }, e);
  function r(o) {
    e[o] = n[o] && function(s) {
      return new Promise(function(a, l) {
        s = n[o](s), i(a, l, s.done, s.value);
      });
    };
  }
  function i(o, s, a, l) {
    Promise.resolve(l).then(function(u) {
      o({ value: u, done: a });
    }, s);
  }
}
function ee(n) {
  return typeof n == "function";
}
function Ia(n) {
  var t = function(r) {
    Error.call(r), r.stack = new Error().stack;
  }, e = n(t);
  return e.prototype = Object.create(Error.prototype), e.prototype.constructor = e, e;
}
var yo = Ia(function(n) {
  return function(e) {
    n(this), this.message = e ? e.length + ` errors occurred during unsubscription:
` + e.map(function(r, i) {
      return i + 1 + ") " + r.toString();
    }).join(`
  `) : "", this.name = "UnsubscriptionError", this.errors = e;
  };
});
function Mi(n, t) {
  if (n) {
    var e = n.indexOf(t);
    0 <= e && n.splice(e, 1);
  }
}
var Ur = function() {
  function n(t) {
    this.initialTeardown = t, this.closed = !1, this._parentage = null, this._finalizers = null;
  }
  return n.prototype.unsubscribe = function() {
    var t, e, r, i, o;
    if (!this.closed) {
      this.closed = !0;
      var s = this._parentage;
      if (s)
        if (this._parentage = null, Array.isArray(s))
          try {
            for (var a = tr(s), l = a.next(); !l.done; l = a.next()) {
              var u = l.value;
              u.remove(this);
            }
          } catch (y) {
            t = { error: y };
          } finally {
            try {
              l && !l.done && (e = a.return) && e.call(a);
            } finally {
              if (t)
                throw t.error;
            }
          }
        else
          s.remove(this);
      var c = this.initialTeardown;
      if (ee(c))
        try {
          c();
        } catch (y) {
          o = y instanceof yo ? y.errors : [y];
        }
      var p = this._finalizers;
      if (p) {
        this._finalizers = null;
        try {
          for (var d = tr(p), v = d.next(); !v.done; v = d.next()) {
            var f = v.value;
            try {
              Ds(f);
            } catch (y) {
              o = o ?? [], y instanceof yo ? o = Gt(Gt([], St(o)), St(y.errors)) : o.push(y);
            }
          }
        } catch (y) {
          r = { error: y };
        } finally {
          try {
            v && !v.done && (i = d.return) && i.call(d);
          } finally {
            if (r)
              throw r.error;
          }
        }
      }
      if (o)
        throw new yo(o);
    }
  }, n.prototype.add = function(t) {
    var e;
    if (t && t !== this)
      if (this.closed)
        Ds(t);
      else {
        if (t instanceof n) {
          if (t.closed || t._hasParent(this))
            return;
          t._addParent(this);
        }
        (this._finalizers = (e = this._finalizers) !== null && e !== void 0 ? e : []).push(t);
      }
  }, n.prototype._hasParent = function(t) {
    var e = this._parentage;
    return e === t || Array.isArray(e) && e.includes(t);
  }, n.prototype._addParent = function(t) {
    var e = this._parentage;
    this._parentage = Array.isArray(e) ? (e.push(t), e) : e ? [e, t] : t;
  }, n.prototype._removeParent = function(t) {
    var e = this._parentage;
    e === t ? this._parentage = null : Array.isArray(e) && Mi(e, t);
  }, n.prototype.remove = function(t) {
    var e = this._finalizers;
    e && Mi(e, t), t instanceof n && t._removeParent(this);
  }, n.EMPTY = function() {
    var t = new n();
    return t.closed = !0, t;
  }(), n;
}(), xa = Ur.EMPTY;
function Na(n) {
  return n instanceof Ur || n && "closed" in n && ee(n.remove) && ee(n.add) && ee(n.unsubscribe);
}
function Ds(n) {
  ee(n) ? n() : n.unsubscribe();
}
var Ga = {
  onUnhandledError: null,
  onStoppedNotification: null,
  Promise: void 0,
  useDeprecatedSynchronousErrorHandling: !1,
  useDeprecatedNextContext: !1
}, mn = {
  setTimeout: function(n, t) {
    for (var e = [], r = 2; r < arguments.length; r++)
      e[r - 2] = arguments[r];
    var i = mn.delegate;
    return i != null && i.setTimeout ? i.setTimeout.apply(i, Gt([n, t], St(e))) : setTimeout.apply(void 0, Gt([n, t], St(e)));
  },
  clearTimeout: function(n) {
    var t = mn.delegate;
    return ((t == null ? void 0 : t.clearTimeout) || clearTimeout)(n);
  },
  delegate: void 0
};
function Ha(n) {
  mn.setTimeout(function() {
    throw n;
  });
}
function wn() {
}
function Di(n) {
  n();
}
var kn = function(n) {
  _t(t, n);
  function t(e) {
    var r = n.call(this) || this;
    return r.isStopped = !1, e ? (r.destination = e, Na(e) && e.add(r)) : r.destination = Fu, r;
  }
  return t.create = function(e, r, i) {
    return new Sn(e, r, i);
  }, t.prototype.next = function(e) {
    this.isStopped || this._next(e);
  }, t.prototype.error = function(e) {
    this.isStopped || (this.isStopped = !0, this._error(e));
  }, t.prototype.complete = function() {
    this.isStopped || (this.isStopped = !0, this._complete());
  }, t.prototype.unsubscribe = function() {
    this.closed || (this.isStopped = !0, n.prototype.unsubscribe.call(this), this.destination = null);
  }, t.prototype._next = function(e) {
    this.destination.next(e);
  }, t.prototype._error = function(e) {
    try {
      this.destination.error(e);
    } finally {
      this.unsubscribe();
    }
  }, t.prototype._complete = function() {
    try {
      this.destination.complete();
    } finally {
      this.unsubscribe();
    }
  }, t;
}(Ur), Pu = Function.prototype.bind;
function Co(n, t) {
  return Pu.call(n, t);
}
var Du = function() {
  function n(t) {
    this.partialObserver = t;
  }
  return n.prototype.next = function(t) {
    var e = this.partialObserver;
    if (e.next)
      try {
        e.next(t);
      } catch (r) {
        Jr(r);
      }
  }, n.prototype.error = function(t) {
    var e = this.partialObserver;
    if (e.error)
      try {
        e.error(t);
      } catch (r) {
        Jr(r);
      }
    else
      Jr(t);
  }, n.prototype.complete = function() {
    var t = this.partialObserver;
    if (t.complete)
      try {
        t.complete();
      } catch (e) {
        Jr(e);
      }
  }, n;
}(), Sn = function(n) {
  _t(t, n);
  function t(e, r, i) {
    var o = n.call(this) || this, s;
    if (ee(e) || !e)
      s = {
        next: e ?? void 0,
        error: r ?? void 0,
        complete: i ?? void 0
      };
    else {
      var a;
      o && Ga.useDeprecatedNextContext ? (a = Object.create(e), a.unsubscribe = function() {
        return o.unsubscribe();
      }, s = {
        next: e.next && Co(e.next, a),
        error: e.error && Co(e.error, a),
        complete: e.complete && Co(e.complete, a)
      }) : s = e;
    }
    return o.destination = new Du(s), o;
  }
  return t;
}(kn);
function Jr(n) {
  Ha(n);
}
function Au(n) {
  throw n;
}
var Fu = {
  closed: !0,
  next: wn,
  error: Au,
  complete: wn
}, Un = function() {
  return typeof Symbol == "function" && Symbol.observable || "@@observable";
}();
function Lu(n) {
  return n;
}
function Mu(n) {
  return n.length === 0 ? Lu : n.length === 1 ? n[0] : function(e) {
    return n.reduce(function(r, i) {
      return i(r);
    }, e);
  };
}
var tt = function() {
  function n(t) {
    t && (this._subscribe = t);
  }
  return n.prototype.lift = function(t) {
    var e = new n();
    return e.source = this, e.operator = t, e;
  }, n.prototype.subscribe = function(t, e, r) {
    var i = this, o = xu(t) ? t : new Sn(t, e, r);
    return Di(function() {
      var s = i, a = s.operator, l = s.source;
      o.add(a ? a.call(o, l) : l ? i._subscribe(o) : i._trySubscribe(o));
    }), o;
  }, n.prototype._trySubscribe = function(t) {
    try {
      return this._subscribe(t);
    } catch (e) {
      t.error(e);
    }
  }, n.prototype.forEach = function(t, e) {
    var r = this;
    return e = As(e), new e(function(i, o) {
      var s = new Sn({
        next: function(a) {
          try {
            t(a);
          } catch (l) {
            o(l), s.unsubscribe();
          }
        },
        error: o,
        complete: i
      });
      r.subscribe(s);
    });
  }, n.prototype._subscribe = function(t) {
    var e;
    return (e = this.source) === null || e === void 0 ? void 0 : e.subscribe(t);
  }, n.prototype[Un] = function() {
    return this;
  }, n.prototype.pipe = function() {
    for (var t = [], e = 0; e < arguments.length; e++)
      t[e] = arguments[e];
    return Mu(t)(this);
  }, n.prototype.toPromise = function(t) {
    var e = this;
    return t = As(t), new t(function(r, i) {
      var o;
      e.subscribe(function(s) {
        return o = s;
      }, function(s) {
        return i(s);
      }, function() {
        return r(o);
      });
    });
  }, n.create = function(t) {
    return new n(t);
  }, n;
}();
function As(n) {
  var t;
  return (t = n ?? Ga.Promise) !== null && t !== void 0 ? t : Promise;
}
function Iu(n) {
  return n && ee(n.next) && ee(n.error) && ee(n.complete);
}
function xu(n) {
  return n && n instanceof kn || Iu(n) && Na(n);
}
function Nu(n) {
  return ee(n == null ? void 0 : n.lift);
}
function no(n) {
  return function(t) {
    if (Nu(t))
      return t.lift(function(e) {
        try {
          return n(e, this);
        } catch (r) {
          this.error(r);
        }
      });
    throw new TypeError("Unable to lift unknown Observable type");
  };
}
function rr(n, t, e, r, i) {
  return new Gu(n, t, e, r, i);
}
var Gu = function(n) {
  _t(t, n);
  function t(e, r, i, o, s, a) {
    var l = n.call(this, e) || this;
    return l.onFinalize = s, l.shouldUnsubscribe = a, l._next = r ? function(u) {
      try {
        r(u);
      } catch (c) {
        e.error(c);
      }
    } : n.prototype._next, l._error = o ? function(u) {
      try {
        o(u);
      } catch (c) {
        e.error(c);
      } finally {
        this.unsubscribe();
      }
    } : n.prototype._error, l._complete = i ? function() {
      try {
        i();
      } catch (u) {
        e.error(u);
      } finally {
        this.unsubscribe();
      }
    } : n.prototype._complete, l;
  }
  return t.prototype.unsubscribe = function() {
    var e;
    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
      var r = this.closed;
      n.prototype.unsubscribe.call(this), !r && ((e = this.onFinalize) === null || e === void 0 || e.call(this));
    }
  }, t;
}(kn), Hu = Ia(function(n) {
  return function() {
    n(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed";
  };
}), Va = function(n) {
  _t(t, n);
  function t() {
    var e = n.call(this) || this;
    return e.closed = !1, e.currentObservers = null, e.observers = [], e.isStopped = !1, e.hasError = !1, e.thrownError = null, e;
  }
  return t.prototype.lift = function(e) {
    var r = new Fs(this, this);
    return r.operator = e, r;
  }, t.prototype._throwIfClosed = function() {
    if (this.closed)
      throw new Hu();
  }, t.prototype.next = function(e) {
    var r = this;
    Di(function() {
      var i, o;
      if (r._throwIfClosed(), !r.isStopped) {
        r.currentObservers || (r.currentObservers = Array.from(r.observers));
        try {
          for (var s = tr(r.currentObservers), a = s.next(); !a.done; a = s.next()) {
            var l = a.value;
            l.next(e);
          }
        } catch (u) {
          i = { error: u };
        } finally {
          try {
            a && !a.done && (o = s.return) && o.call(s);
          } finally {
            if (i)
              throw i.error;
          }
        }
      }
    });
  }, t.prototype.error = function(e) {
    var r = this;
    Di(function() {
      if (r._throwIfClosed(), !r.isStopped) {
        r.hasError = r.isStopped = !0, r.thrownError = e;
        for (var i = r.observers; i.length; )
          i.shift().error(e);
      }
    });
  }, t.prototype.complete = function() {
    var e = this;
    Di(function() {
      if (e._throwIfClosed(), !e.isStopped) {
        e.isStopped = !0;
        for (var r = e.observers; r.length; )
          r.shift().complete();
      }
    });
  }, t.prototype.unsubscribe = function() {
    this.isStopped = this.closed = !0, this.observers = this.currentObservers = null;
  }, Object.defineProperty(t.prototype, "observed", {
    get: function() {
      var e;
      return ((e = this.observers) === null || e === void 0 ? void 0 : e.length) > 0;
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype._trySubscribe = function(e) {
    return this._throwIfClosed(), n.prototype._trySubscribe.call(this, e);
  }, t.prototype._subscribe = function(e) {
    return this._throwIfClosed(), this._checkFinalizedStatuses(e), this._innerSubscribe(e);
  }, t.prototype._innerSubscribe = function(e) {
    var r = this, i = this, o = i.hasError, s = i.isStopped, a = i.observers;
    return o || s ? xa : (this.currentObservers = null, a.push(e), new Ur(function() {
      r.currentObservers = null, Mi(a, e);
    }));
  }, t.prototype._checkFinalizedStatuses = function(e) {
    var r = this, i = r.hasError, o = r.thrownError, s = r.isStopped;
    i ? e.error(o) : s && e.complete();
  }, t.prototype.asObservable = function() {
    var e = new tt();
    return e.source = this, e;
  }, t.create = function(e, r) {
    return new Fs(e, r);
  }, t;
}(tt), Fs = function(n) {
  _t(t, n);
  function t(e, r) {
    var i = n.call(this) || this;
    return i.destination = e, i.source = r, i;
  }
  return t.prototype.next = function(e) {
    var r, i;
    (i = (r = this.destination) === null || r === void 0 ? void 0 : r.next) === null || i === void 0 || i.call(r, e);
  }, t.prototype.error = function(e) {
    var r, i;
    (i = (r = this.destination) === null || r === void 0 ? void 0 : r.error) === null || i === void 0 || i.call(r, e);
  }, t.prototype.complete = function() {
    var e, r;
    (r = (e = this.destination) === null || e === void 0 ? void 0 : e.complete) === null || r === void 0 || r.call(e);
  }, t.prototype._subscribe = function(e) {
    var r, i;
    return (i = (r = this.source) === null || r === void 0 ? void 0 : r.subscribe(e)) !== null && i !== void 0 ? i : xa;
  }, t;
}(Va), Ba = {
  now: function() {
    return (Ba.delegate || Date).now();
  },
  delegate: void 0
}, Vu = function(n) {
  _t(t, n);
  function t(e, r) {
    return n.call(this) || this;
  }
  return t.prototype.schedule = function(e, r) {
    return this;
  }, t;
}(Ur), Ii = {
  setInterval: function(n, t) {
    for (var e = [], r = 2; r < arguments.length; r++)
      e[r - 2] = arguments[r];
    var i = Ii.delegate;
    return i != null && i.setInterval ? i.setInterval.apply(i, Gt([n, t], St(e))) : setInterval.apply(void 0, Gt([n, t], St(e)));
  },
  clearInterval: function(n) {
    var t = Ii.delegate;
    return ((t == null ? void 0 : t.clearInterval) || clearInterval)(n);
  },
  delegate: void 0
}, Bu = function(n) {
  _t(t, n);
  function t(e, r) {
    var i = n.call(this, e, r) || this;
    return i.scheduler = e, i.work = r, i.pending = !1, i;
  }
  return t.prototype.schedule = function(e, r) {
    var i;
    if (r === void 0 && (r = 0), this.closed)
      return this;
    this.state = e;
    var o = this.id, s = this.scheduler;
    return o != null && (this.id = this.recycleAsyncId(s, o, r)), this.pending = !0, this.delay = r, this.id = (i = this.id) !== null && i !== void 0 ? i : this.requestAsyncId(s, this.id, r), this;
  }, t.prototype.requestAsyncId = function(e, r, i) {
    return i === void 0 && (i = 0), Ii.setInterval(e.flush.bind(e, this), i);
  }, t.prototype.recycleAsyncId = function(e, r, i) {
    if (i === void 0 && (i = 0), i != null && this.delay === i && this.pending === !1)
      return r;
    r != null && Ii.clearInterval(r);
  }, t.prototype.execute = function(e, r) {
    if (this.closed)
      return new Error("executing a cancelled action");
    this.pending = !1;
    var i = this._execute(e, r);
    if (i)
      return i;
    this.pending === !1 && this.id != null && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
  }, t.prototype._execute = function(e, r) {
    var i = !1, o;
    try {
      this.work(e);
    } catch (s) {
      i = !0, o = s || new Error("Scheduled action threw falsy error");
    }
    if (i)
      return this.unsubscribe(), o;
  }, t.prototype.unsubscribe = function() {
    if (!this.closed) {
      var e = this, r = e.id, i = e.scheduler, o = i.actions;
      this.work = this.state = this.scheduler = null, this.pending = !1, Mi(o, this), r != null && (this.id = this.recycleAsyncId(i, r, null)), this.delay = null, n.prototype.unsubscribe.call(this);
    }
  }, t;
}(Vu), Ls = function() {
  function n(t, e) {
    e === void 0 && (e = n.now), this.schedulerActionCtor = t, this.now = e;
  }
  return n.prototype.schedule = function(t, e, r) {
    return e === void 0 && (e = 0), new this.schedulerActionCtor(this, t).schedule(r, e);
  }, n.now = Ba.now, n;
}(), Wu = function(n) {
  _t(t, n);
  function t(e, r) {
    r === void 0 && (r = Ls.now);
    var i = n.call(this, e, r) || this;
    return i.actions = [], i._active = !1, i;
  }
  return t.prototype.flush = function(e) {
    var r = this.actions;
    if (this._active) {
      r.push(e);
      return;
    }
    var i;
    this._active = !0;
    do
      if (i = e.execute(e.state, e.delay))
        break;
    while (e = r.shift());
    if (this._active = !1, i) {
      for (; e = r.shift(); )
        e.unsubscribe();
      throw i;
    }
  }, t;
}(Ls), Wa = new Wu(Bu), ju = Wa;
function ku(n) {
  return n && ee(n.schedule);
}
var ja = function(n) {
  return n && typeof n.length == "number" && typeof n != "function";
};
function Uu(n) {
  return ee(n == null ? void 0 : n.then);
}
function zu(n) {
  return ee(n[Un]);
}
function Ku(n) {
  return Symbol.asyncIterator && ee(n == null ? void 0 : n[Symbol.asyncIterator]);
}
function $u(n) {
  return new TypeError("You provided " + (n !== null && typeof n == "object" ? "an invalid object" : "'" + n + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
}
function Yu() {
  return typeof Symbol != "function" || !Symbol.iterator ? "@@iterator" : Symbol.iterator;
}
var qu = Yu();
function Qu(n) {
  return ee(n == null ? void 0 : n[qu]);
}
function Xu(n) {
  return Tu(this, arguments, function() {
    var e, r, i, o;
    return Ma(this, function(s) {
      switch (s.label) {
        case 0:
          e = n.getReader(), s.label = 1;
        case 1:
          s.trys.push([1, , 9, 10]), s.label = 2;
        case 2:
          return [4, Xt(e.read())];
        case 3:
          return r = s.sent(), i = r.value, o = r.done, o ? [4, Xt(void 0)] : [3, 5];
        case 4:
          return [2, s.sent()];
        case 5:
          return [4, Xt(i)];
        case 6:
          return [4, s.sent()];
        case 7:
          return s.sent(), [3, 2];
        case 8:
          return [3, 10];
        case 9:
          return e.releaseLock(), [7];
        case 10:
          return [2];
      }
    });
  });
}
function Ju(n) {
  return ee(n == null ? void 0 : n.getReader);
}
function so(n) {
  if (n instanceof tt)
    return n;
  if (n != null) {
    if (zu(n))
      return Zu(n);
    if (ja(n))
      return ec(n);
    if (Uu(n))
      return tc(n);
    if (Ku(n))
      return ka(n);
    if (Qu(n))
      return rc(n);
    if (Ju(n))
      return ic(n);
  }
  throw $u(n);
}
function Zu(n) {
  return new tt(function(t) {
    var e = n[Un]();
    if (ee(e.subscribe))
      return e.subscribe(t);
    throw new TypeError("Provided object does not correctly implement Symbol.observable");
  });
}
function ec(n) {
  return new tt(function(t) {
    for (var e = 0; e < n.length && !t.closed; e++)
      t.next(n[e]);
    t.complete();
  });
}
function tc(n) {
  return new tt(function(t) {
    n.then(function(e) {
      t.closed || (t.next(e), t.complete());
    }, function(e) {
      return t.error(e);
    }).then(null, Ha);
  });
}
function rc(n) {
  return new tt(function(t) {
    var e, r;
    try {
      for (var i = tr(n), o = i.next(); !o.done; o = i.next()) {
        var s = o.value;
        if (t.next(s), t.closed)
          return;
      }
    } catch (a) {
      e = { error: a };
    } finally {
      try {
        o && !o.done && (r = i.return) && r.call(i);
      } finally {
        if (e)
          throw e.error;
      }
    }
    t.complete();
  });
}
function ka(n) {
  return new tt(function(t) {
    oc(n, t).catch(function(e) {
      return t.error(e);
    });
  });
}
function ic(n) {
  return ka(Xu(n));
}
function oc(n, t) {
  var e, r, i, o;
  return Ou(this, void 0, void 0, function() {
    var s, a;
    return Ma(this, function(l) {
      switch (l.label) {
        case 0:
          l.trys.push([0, 5, 6, 11]), e = bu(n), l.label = 1;
        case 1:
          return [4, e.next()];
        case 2:
          if (r = l.sent(), !!r.done)
            return [3, 4];
          if (s = r.value, t.next(s), t.closed)
            return [2];
          l.label = 3;
        case 3:
          return [3, 1];
        case 4:
          return [3, 11];
        case 5:
          return a = l.sent(), i = { error: a }, [3, 11];
        case 6:
          return l.trys.push([6, , 9, 10]), r && !r.done && (o = e.return) ? [4, o.call(e)] : [3, 8];
        case 7:
          l.sent(), l.label = 8;
        case 8:
          return [3, 10];
        case 9:
          if (i)
            throw i.error;
          return [7];
        case 10:
          return [7];
        case 11:
          return t.complete(), [2];
      }
    });
  });
}
function nc(n, t, e, r, i) {
  r === void 0 && (r = 0), i === void 0 && (i = !1);
  var o = t.schedule(function() {
    e(), i ? n.add(this.schedule(null, r)) : this.unsubscribe();
  }, r);
  if (n.add(o), !i)
    return o;
}
function sc(n) {
  return n instanceof Date && !isNaN(n);
}
function Ua(n, t) {
  return no(function(e, r) {
    var i = 0;
    e.subscribe(rr(r, function(o) {
      r.next(n.call(t, o, i++));
    }));
  });
}
var ac = Array.isArray;
function lc(n, t) {
  return ac(t) ? n.apply(void 0, Gt([], St(t))) : n(t);
}
function uc(n) {
  return Ua(function(t) {
    return lc(n, t);
  });
}
function cc(n, t, e, r, i, o, s, a) {
  var l = [], u = 0, c = 0, p = !1, d = function() {
    p && !l.length && !u && t.complete();
  }, v = function(y) {
    return u < r ? f(y) : l.push(y);
  }, f = function(y) {
    o && t.next(y), u++;
    var C = !1;
    so(e(y, c++)).subscribe(rr(t, function(m) {
      i == null || i(m), o ? v(m) : t.next(m);
    }, function() {
      C = !0;
    }, void 0, function() {
      if (C)
        try {
          u--;
          for (var m = function() {
            var w = l.shift();
            s ? nc(t, s, function() {
              return f(w);
            }) : f(w);
          }; l.length && u < r; )
            m();
          d();
        } catch (w) {
          t.error(w);
        }
    }));
  };
  return n.subscribe(rr(t, v, function() {
    p = !0, d();
  })), function() {
    a == null || a();
  };
}
function za(n, t, e) {
  return e === void 0 && (e = 1 / 0), ee(t) ? za(function(r, i) {
    return Ua(function(o, s) {
      return t(r, o, i, s);
    })(so(n(r, i)));
  }, e) : (typeof t == "number" && (e = t), no(function(r, i) {
    return cc(r, i, n, e);
  }));
}
var pc = ["addListener", "removeListener"], dc = ["addEventListener", "removeEventListener"], hc = ["on", "off"];
function En(n, t, e, r) {
  if (ee(e) && (r = e, e = void 0), r)
    return En(n, t, e).pipe(uc(r));
  var i = St(gc(n) ? dc.map(function(a) {
    return function(l) {
      return n[a](t, l, e);
    };
  }) : fc(n) ? pc.map(Ms(n, t)) : vc(n) ? hc.map(Ms(n, t)) : [], 2), o = i[0], s = i[1];
  if (!o && ja(n))
    return za(function(a) {
      return En(a, t, e);
    })(so(n));
  if (!o)
    throw new TypeError("Invalid event target");
  return new tt(function(a) {
    var l = function() {
      for (var u = [], c = 0; c < arguments.length; c++)
        u[c] = arguments[c];
      return a.next(1 < u.length ? u : u[0]);
    };
    return o(l), function() {
      return s(l);
    };
  });
}
function Ms(n, t) {
  return function(e) {
    return function(r) {
      return n[e](t, r);
    };
  };
}
function fc(n) {
  return ee(n.addListener) && ee(n.removeListener);
}
function vc(n) {
  return ee(n.on) && ee(n.off);
}
function gc(n) {
  return ee(n.addEventListener) && ee(n.removeEventListener);
}
function yc(n, t, e) {
  n === void 0 && (n = 0), e === void 0 && (e = ju);
  var r = -1;
  return t != null && (ku(t) ? e = t : r = t), new tt(function(i) {
    var o = sc(n) ? +n - e.now() : n;
    o < 0 && (o = 0);
    var s = 0;
    return e.schedule(function() {
      i.closed || (i.next(s++), 0 <= r ? this.schedule(void 0, r) : i.complete());
    }, o);
  });
}
function Cc(n, t) {
  return n === void 0 && (n = 0), t === void 0 && (t = Wa), n < 0 && (n = 0), yc(n, n, t);
}
function mc(n) {
  return no(function(t, e) {
    var r = !1, i = null, o = null, s = function() {
      if (o == null || o.unsubscribe(), o = null, r) {
        r = !1;
        var a = i;
        i = null, e.next(a);
      }
    };
    t.subscribe(rr(e, function(a) {
      o == null || o.unsubscribe(), r = !0, i = a, o = rr(e, s, wn), so(n(a)).subscribe(o);
    }, function() {
      s(), e.complete();
    }, void 0, function() {
      i = o = null;
    }));
  });
}
function wc() {
  return no(function(n, t) {
    var e, r = !1;
    n.subscribe(rr(t, function(i) {
      var o = e;
      e = i, r && t.next([o, i]), r = !0;
    }));
  });
}
/**
          * @ag-grid-community/all-modules - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue * @version v29.3.5
          * @link https://www.ag-grid.com/
          * @license MIT
          */
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
function wt(n) {
  return n == null || n === "" ? null : n;
}
function O(n, t) {
  return t === void 0 && (t = !1), n != null && (n !== "" || t);
}
function x(n) {
  return !O(n);
}
function De(n) {
  return n == null || n.length === 0;
}
function zn(n) {
  return n != null && typeof n.toString == "function" ? n.toString() : null;
}
function He(n) {
  if (n !== void 0) {
    if (n === null || n === "")
      return null;
    if (typeof n == "number")
      return isNaN(n) ? void 0 : n;
    var t = parseInt(n, 10);
    return isNaN(t) ? void 0 : t;
  }
}
function Qe(n) {
  if (n !== void 0)
    return n === null || n === "" ? !1 : typeof n == "boolean" ? n : /true/i.test(n);
}
function Sc(n) {
  if (!(n == null || n === ""))
    return n;
}
function Ec(n, t) {
  return n == null && t == null ? !0 : n == null && t != null || n != null && t == null ? !1 : n === t;
}
function _c(n, t) {
  var e = n ? JSON.stringify(n) : null, r = t ? JSON.stringify(t) : null;
  return e === r;
}
function Rc(n, t, e) {
  e === void 0 && (e = !1);
  var r = n == null, i = t == null;
  if (n && n.toNumber && (n = n.toNumber()), t && t.toNumber && (t = t.toNumber()), r && i)
    return 0;
  if (r)
    return -1;
  if (i)
    return 1;
  function o(s, a) {
    return s > a ? 1 : s < a ? -1 : 0;
  }
  if (typeof n != "string" || !e)
    return o(n, t);
  try {
    return n.localeCompare(t);
  } catch {
    return o(n, t);
  }
}
function zr(n) {
  if (n instanceof Set || n instanceof Map) {
    var t = [];
    return n.forEach(function(e) {
      return t.push(e);
    }), t;
  }
  return Object.values(n);
}
var Oc = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  makeNull: wt,
  exists: O,
  missing: x,
  missingOrEmpty: De,
  toStringOrNull: zn,
  attrToNumber: He,
  attrToBoolean: Qe,
  attrToString: Sc,
  referenceCompare: Ec,
  jsonEquals: _c,
  defaultComparator: Rc,
  values: zr
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Tc = (
  /** @class */
  function() {
    function n() {
      this.existingKeys = {};
    }
    return n.prototype.addExistingKeys = function(t) {
      for (var e = 0; e < t.length; e++)
        this.existingKeys[t[e]] = !0;
    }, n.prototype.getUniqueKey = function(t, e) {
      t = zn(t);
      for (var r = 0; ; ) {
        var i = void 0;
        if (t ? (i = t, r !== 0 && (i += "_" + r)) : e ? (i = e, r !== 0 && (i += "_" + r)) : i = "" + r, !this.existingKeys[i])
          return this.existingKeys[i] = !0, i;
        r++;
      }
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
function J(n, t) {
  n != null && (Array.isArray(n) ? n.forEach(function(e, r) {
    return t("" + r, e);
  }) : Object.keys(n).forEach(function(e) {
    return t(e, n[e]);
  }));
}
function Kn(n) {
  for (var t = {}, e = Object.keys(n), r = 0; r < e.length; r++) {
    var i = e[r], o = n[i];
    t[i] = o;
  }
  return t;
}
function bc(n) {
  return JSON.parse(JSON.stringify(n));
}
function xi(n, t) {
  if (n) {
    var e = n, r = {};
    return Object.keys(e).forEach(function(i) {
      if (!(t && t.indexOf(i) >= 0)) {
        var o = e[i], s = Gi(o) && o.constructor === Object;
        s ? r[i] = xi(o) : r[i] = o;
      }
    }), r;
  }
}
function Ka(n, t) {
  return n[t];
}
function $a(n, t, e) {
  n[t] = e;
}
function Pc(n, t) {
  for (var e = [], r = 2; r < arguments.length; r++)
    e[r - 2] = arguments[r];
  e.forEach(function(i) {
    return Ya(n, t, i);
  });
}
function Ya(n, t, e, r) {
  var i = Ka(n, e);
  i !== void 0 && $a(t, e, r ? r(i) : i);
}
function qa(n) {
  var t = {};
  return n.filter(function(e) {
    return e != null;
  }).forEach(function(e) {
    Object.keys(e).forEach(function(r) {
      return t[r] = null;
    });
  }), Object.keys(t);
}
function rt(n) {
  if (!n)
    return [];
  var t = Object;
  if (typeof t.values == "function")
    return t.values(n);
  var e = [];
  for (var r in n)
    n.hasOwnProperty(r) && n.propertyIsEnumerable(r) && e.push(n[r]);
  return e;
}
function Oe(n, t, e, r) {
  e === void 0 && (e = !0), r === void 0 && (r = !1), O(t) && J(t, function(i, o) {
    var s = n[i];
    if (s !== o) {
      if (r) {
        var a = s == null && o != null;
        if (a) {
          var l = typeof o == "object" && o.constructor === Object, u = l;
          u && (s = {}, n[i] = s);
        }
      }
      Gi(o) && Gi(s) && !Array.isArray(s) ? Oe(s, o, e, r) : (e || o !== void 0) && (n[i] = o);
    }
  });
}
function Dc(n) {
  return x(n) || Object.keys(n).length === 0;
}
function Ac(n, t, e) {
  if (n == null)
    return e;
  for (var r = t.split("."), i = n; r.length > 1; )
    if (i = i[r.shift()], i == null)
      return e;
  var o = i[r[0]];
  return o ?? e;
}
function Fc(n, t, e) {
  if (n != null) {
    var r = t.split("."), i = n;
    r.forEach(function(o, s) {
      i[o] || (i[o] = {}), s < r.length - 1 && (i = i[o]);
    }), i[r[r.length - 1]] = e;
  }
}
function Ni(n, t, e) {
  if (!(!t || !n)) {
    if (!e)
      return n[t];
    for (var r = t.split("."), i = n, o = 0; o < r.length; o++) {
      if (i == null)
        return;
      i = i[r[o]];
    }
    return i;
  }
}
function Qa(n, t) {
  Object.keys(n).forEach(function(i) {
    var o = n[i];
    typeof o == "object" && (n[i] = void 0);
  });
  var e = Object.getPrototypeOf(n), r = {};
  Object.keys(e).forEach(function(i) {
    var o = e[i];
    if (typeof o == "function") {
      var s = function() {
        console.warn("AG Grid: " + t + " function " + i + `() cannot be called as the grid has been destroyed.
                     Please don't call grid API functions on destroyed grids - as a matter of fact you shouldn't
                     be keeping the API reference, your application has a memory leak! Remove the API reference
                     when the grid is destroyed.`);
      };
      r[i] = { value: s, writable: !0 };
    }
  }), Object.defineProperties(n, r);
}
function Gi(n) {
  return typeof n == "object" && n !== null;
}
var Lc = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  iterateObject: J,
  cloneObject: Kn,
  deepCloneObject: bc,
  deepCloneDefinition: xi,
  getProperty: Ka,
  setProperty: $a,
  copyPropertiesIfPresent: Pc,
  copyPropertyIfPresent: Ya,
  getAllKeysInObjects: qa,
  getAllValuesInObject: rt,
  mergeDeep: Oe,
  missingOrEmptyObject: Dc,
  get: Ac,
  set: Fc,
  getValueUsingField: Ni,
  removeAllReferences: Qa,
  isNonNullObject: Gi
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Is = {};
function K(n, t) {
  Is[t] || (n(), Is[t] = !0);
}
function ao(n) {
  if (n.name)
    return n.name;
  var t = /function\s+([^\(]+)/.exec(n.toString());
  return t && t.length === 2 ? t[1].trim() : null;
}
function lo(n) {
  return !!(n && n.constructor && n.call && n.apply);
}
function Xa(n) {
  Ja(n, 400);
}
var mo = [], wo = !1;
function _n(n) {
  mo.push(n), !wo && (wo = !0, window.setTimeout(function() {
    var t = mo.slice();
    mo.length = 0, wo = !1, t.forEach(function(e) {
      return e();
    });
  }, 0));
}
function Ja(n, t) {
  t === void 0 && (t = 0), n.length > 0 && window.setTimeout(function() {
    return n.forEach(function(e) {
      return e();
    });
  }, t);
}
function Ze(n, t) {
  var e;
  return function() {
    for (var r = [], i = 0; i < arguments.length; i++)
      r[i] = arguments[i];
    var o = this;
    window.clearTimeout(e), e = window.setTimeout(function() {
      n.apply(o, r);
    }, t);
  };
}
function Rn(n, t) {
  var e = 0;
  return function() {
    for (var r = [], i = 0; i < arguments.length; i++)
      r[i] = arguments[i];
    var o = this, s = (/* @__PURE__ */ new Date()).getTime();
    s - e < t || (e = s, n.apply(o, r));
  };
}
function Za(n, t, e, r) {
  e === void 0 && (e = 100);
  var i = (/* @__PURE__ */ new Date()).getTime(), o = null, s = !1, a = function() {
    var l = (/* @__PURE__ */ new Date()).getTime() - i > e;
    (n() || l) && (t(), s = !0, o != null && (window.clearInterval(o), o = null), l && r && console.warn(r));
  };
  a(), s || (o = window.setInterval(a, 10));
}
function Mc() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n[t] = arguments[t];
  return function(e) {
    return n.reduce(function(r, i) {
      return i(r);
    }, e);
  };
}
function el(n) {
  n && n();
}
var Ic = function() {
}, xc = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  doOnce: K,
  getFunctionName: ao,
  isFunction: lo,
  executeInAWhile: Xa,
  executeNextVMTurn: _n,
  executeAfter: Ja,
  debounce: Ze,
  throttle: Rn,
  waitUntil: Za,
  compose: Mc,
  callIfPresent: el,
  noop: Ic
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Nc = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Gc = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Nc(arguments[t]));
  return n;
}, Hc = (
  /** @class */
  function() {
    function n(t, e) {
      if (this.beanWrappers = {}, this.destroyed = !1, !(!t || !t.beanClasses)) {
        this.contextParams = t, this.logger = e, this.logger.log(">> creating ag-Application Context"), this.createBeans();
        var r = this.getBeanInstances();
        this.wireBeans(r), this.logger.log(">> ag-Application Context ready - component is alive");
      }
    }
    return n.prototype.getBeanInstances = function() {
      return zr(this.beanWrappers).map(function(t) {
        return t.beanInstance;
      });
    }, n.prototype.createBean = function(t, e) {
      if (!t)
        throw Error("Can't wire to bean since it is null");
      return this.wireBeans([t], e), t;
    }, n.prototype.wireBeans = function(t, e) {
      this.autoWireBeans(t), this.methodWireBeans(t), this.callLifeCycleMethods(t, "preConstructMethods"), O(e) && t.forEach(e), this.callLifeCycleMethods(t, "postConstructMethods");
    }, n.prototype.createBeans = function() {
      var t = this;
      this.contextParams.beanClasses.forEach(this.createBeanWrapper.bind(this)), J(this.beanWrappers, function(r, i) {
        var o;
        i.bean.__agBeanMetaData && i.bean.__agBeanMetaData.autowireMethods && i.bean.__agBeanMetaData.autowireMethods.agConstructor && (o = i.bean.__agBeanMetaData.autowireMethods.agConstructor);
        var s = t.getBeansForParameters(o, i.bean.name), a = new (i.bean.bind.apply(i.bean, Gc([null], s)))();
        i.beanInstance = a;
      });
      var e = Object.keys(this.beanWrappers).join(", ");
      this.logger.log("created beans: " + e);
    }, n.prototype.createBeanWrapper = function(t) {
      var e = t.__agBeanMetaData;
      if (!e) {
        var r = void 0;
        t.prototype.constructor ? r = ao(t.prototype.constructor) : r = "" + t, console.error("Context item " + r + " is not a bean");
        return;
      }
      var i = {
        bean: t,
        beanInstance: null,
        beanName: e.beanName
      };
      this.beanWrappers[e.beanName] = i;
    }, n.prototype.autoWireBeans = function(t) {
      var e = this;
      t.forEach(function(r) {
        e.forEachMetaDataInHierarchy(r, function(i, o) {
          var s = i.agClassAttributes;
          s && s.forEach(function(a) {
            var l = e.lookupBeanInstance(o, a.beanName, a.optional);
            r[a.attributeName] = l;
          });
        });
      });
    }, n.prototype.methodWireBeans = function(t) {
      var e = this;
      t.forEach(function(r) {
        e.forEachMetaDataInHierarchy(r, function(i, o) {
          J(i.autowireMethods, function(s, a) {
            if (s !== "agConstructor") {
              var l = e.getBeansForParameters(a, o);
              r[s].apply(r, l);
            }
          });
        });
      });
    }, n.prototype.forEachMetaDataInHierarchy = function(t, e) {
      for (var r = Object.getPrototypeOf(t); r != null; ) {
        var i = r.constructor;
        if (i.hasOwnProperty("__agBeanMetaData")) {
          var o = i.__agBeanMetaData, s = this.getBeanName(i);
          e(o, s);
        }
        r = Object.getPrototypeOf(r);
      }
    }, n.prototype.getBeanName = function(t) {
      if (t.__agBeanMetaData && t.__agBeanMetaData.beanName)
        return t.__agBeanMetaData.beanName;
      var e = t.toString(), r = e.substring(9, e.indexOf("("));
      return r;
    }, n.prototype.getBeansForParameters = function(t, e) {
      var r = this, i = [];
      return t && J(t, function(o, s) {
        var a = r.lookupBeanInstance(e, s);
        i[Number(o)] = a;
      }), i;
    }, n.prototype.lookupBeanInstance = function(t, e, r) {
      if (r === void 0 && (r = !1), e === "context")
        return this;
      if (this.contextParams.providedBeanInstances && this.contextParams.providedBeanInstances.hasOwnProperty(e))
        return this.contextParams.providedBeanInstances[e];
      var i = this.beanWrappers[e];
      return i ? i.beanInstance : (r || console.error("AG Grid: unable to find bean reference " + e + " while initialising " + t), null);
    }, n.prototype.callLifeCycleMethods = function(t, e) {
      var r = this;
      t.forEach(function(i) {
        return r.callLifeCycleMethodsOnBean(i, e);
      });
    }, n.prototype.callLifeCycleMethodsOnBean = function(t, e, r) {
      var i = {};
      this.forEachMetaDataInHierarchy(t, function(s) {
        var a = s[e];
        a && a.forEach(function(l) {
          l != r && (i[l] = !0);
        });
      });
      var o = Object.keys(i);
      o.forEach(function(s) {
        return t[s]();
      });
    }, n.prototype.getBean = function(t) {
      return this.lookupBeanInstance("getBean", t, !0);
    }, n.prototype.destroy = function() {
      if (!this.destroyed) {
        this.logger.log(">> Shutting down ag-Application Context");
        var t = this.getBeanInstances();
        this.destroyBeans(t), this.contextParams.providedBeanInstances = null, this.destroyed = !0, this.logger.log(">> ag-Application Context shut down - component is dead");
      }
    }, n.prototype.destroyBean = function(t) {
      t && this.destroyBeans([t]);
    }, n.prototype.destroyBeans = function(t) {
      var e = this;
      return t ? (t.forEach(function(r) {
        e.callLifeCycleMethodsOnBean(r, "preDestroyMethods", "destroy");
        var i = r;
        typeof i.destroy == "function" && i.destroy();
      }), []) : [];
    }, n;
  }()
);
function xs(n, t, e) {
  var r = Ht(n.constructor);
  r.preConstructMethods || (r.preConstructMethods = []), r.preConstructMethods.push(t);
}
function b(n, t, e) {
  var r = Ht(n.constructor);
  r.postConstructMethods || (r.postConstructMethods = []), r.postConstructMethods.push(t);
}
function ve(n, t, e) {
  var r = Ht(n.constructor);
  r.preDestroyMethods || (r.preDestroyMethods = []), r.preDestroyMethods.push(t);
}
function A(n) {
  return function(t) {
    var e = Ht(t);
    e.beanName = n;
  };
}
function h(n) {
  return function(t, e, r) {
    tl(t, n, !1, t, e, null);
  };
}
function Y(n) {
  return function(t, e, r) {
    tl(t, n, !0, t, e, null);
  };
}
function tl(n, t, e, r, i, o) {
  if (t === null) {
    console.error("AG Grid: Autowired name should not be null");
    return;
  }
  if (typeof o == "number") {
    console.error("AG Grid: Autowired should be on an attribute");
    return;
  }
  var s = Ht(n.constructor);
  s.agClassAttributes || (s.agClassAttributes = []), s.agClassAttributes.push({
    attributeName: i,
    beanName: t,
    optional: e
  });
}
function me(n) {
  return function(t, e, r) {
    var i = typeof t == "function" ? t : t.constructor, o;
    if (typeof r == "number") {
      var s = void 0;
      e ? (o = Ht(i), s = e) : (o = Ht(i), s = "agConstructor"), o.autowireMethods || (o.autowireMethods = {}), o.autowireMethods[s] || (o.autowireMethods[s] = {}), o.autowireMethods[s][r] = n;
    }
  };
}
function Ht(n) {
  return n.hasOwnProperty("__agBeanMetaData") || (n.__agBeanMetaData = {}), n.__agBeanMetaData;
}
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ns = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Zr = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, Rt = (
  /** @class */
  function() {
    function n() {
      this.allSyncListeners = /* @__PURE__ */ new Map(), this.allAsyncListeners = /* @__PURE__ */ new Map(), this.globalSyncListeners = /* @__PURE__ */ new Set(), this.globalAsyncListeners = /* @__PURE__ */ new Set(), this.asyncFunctionsQueue = [], this.scheduled = !1, this.firedEvents = {};
    }
    return n.prototype.setBeans = function(t, e, r, i) {
      if (i === void 0 && (i = null), this.frameworkOverrides = r, this.gridOptionsService = e, i) {
        var o = e.useAsyncEvents();
        this.addGlobalListener(i, o);
      }
    }, n.prototype.getListeners = function(t, e, r) {
      var i = e ? this.allAsyncListeners : this.allSyncListeners, o = i.get(t);
      return !o && r && (o = /* @__PURE__ */ new Set(), i.set(t, o)), o;
    }, n.prototype.noRegisteredListenersExist = function() {
      return this.allSyncListeners.size === 0 && this.allAsyncListeners.size === 0 && this.globalSyncListeners.size === 0 && this.globalAsyncListeners.size === 0;
    }, n.prototype.addEventListener = function(t, e, r) {
      r === void 0 && (r = !1), this.getListeners(t, r, !0).add(e);
    }, n.prototype.removeEventListener = function(t, e, r) {
      r === void 0 && (r = !1);
      var i = this.getListeners(t, r, !1);
      if (i && (i.delete(e), i.size === 0)) {
        var o = r ? this.allAsyncListeners : this.allSyncListeners;
        o.delete(t);
      }
    }, n.prototype.addGlobalListener = function(t, e) {
      e === void 0 && (e = !1), (e ? this.globalAsyncListeners : this.globalSyncListeners).add(t);
    }, n.prototype.removeGlobalListener = function(t, e) {
      e === void 0 && (e = !1), (e ? this.globalAsyncListeners : this.globalSyncListeners).delete(t);
    }, n.prototype.dispatchEvent = function(t) {
      var e = t;
      if (this.gridOptionsService) {
        var r = this.gridOptionsService, i = r.api, o = r.columnApi, s = r.context;
        e.api = i, e.columnApi = o, e.context = s;
      }
      this.dispatchToListeners(e, !0), this.dispatchToListeners(e, !1), this.firedEvents[e.type] = !0;
    }, n.prototype.dispatchEventOnce = function(t) {
      this.firedEvents[t.type] || this.dispatchEvent(t);
    }, n.prototype.dispatchToListeners = function(t, e) {
      var r = this, i = t.type;
      if (e && "event" in t) {
        var o = t.event;
        o instanceof Event && (t.eventPath = o.composedPath());
      }
      var s = function(u) {
        return u.forEach(function(c) {
          e ? r.dispatchAsync(function() {
            return c(t);
          }) : c(t);
        });
      }, a = this.getListeners(i, e, !1);
      a && s(a);
      var l = e ? this.globalAsyncListeners : this.globalSyncListeners;
      l.forEach(function(u) {
        e ? r.dispatchAsync(function() {
          return r.frameworkOverrides.dispatchEvent(i, function() {
            return u(i, t);
          }, !0);
        }) : r.frameworkOverrides.dispatchEvent(i, function() {
          return u(i, t);
        }, !0);
      });
    }, n.prototype.dispatchAsync = function(t) {
      this.asyncFunctionsQueue.push(t), this.scheduled || (window.setTimeout(this.flushAsyncQueue.bind(this), 0), this.scheduled = !0);
    }, n.prototype.flushAsyncQueue = function() {
      this.scheduled = !1;
      var t = this.asyncFunctionsQueue.slice();
      this.asyncFunctionsQueue = [], t.forEach(function(e) {
        return e();
      });
    }, Ns([
      Zr(0, me("loggerFactory")),
      Zr(1, me("gridOptionsService")),
      Zr(2, me("frameworkOverrides")),
      Zr(3, me("globalEventListener"))
    ], n.prototype, "setBeans", null), n = Ns([
      A("eventService")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var F;
(function(n) {
  n.CommunityCoreModule = "@ag-grid-community/core", n.InfiniteRowModelModule = "@ag-grid-community/infinite-row-model", n.ClientSideRowModelModule = "@ag-grid-community/client-side-row-model", n.CsvExportModule = "@ag-grid-community/csv-export", n.EnterpriseCoreModule = "@ag-grid-enterprise/core", n.RowGroupingModule = "@ag-grid-enterprise/row-grouping", n.ColumnsToolPanelModule = "@ag-grid-enterprise/column-tool-panel", n.FiltersToolPanelModule = "@ag-grid-enterprise/filter-tool-panel", n.MenuModule = "@ag-grid-enterprise/menu", n.SetFilterModule = "@ag-grid-enterprise/set-filter", n.MultiFilterModule = "@ag-grid-enterprise/multi-filter", n.StatusBarModule = "@ag-grid-enterprise/status-bar", n.SideBarModule = "@ag-grid-enterprise/side-bar", n.RangeSelectionModule = "@ag-grid-enterprise/range-selection", n.MasterDetailModule = "@ag-grid-enterprise/master-detail", n.RichSelectModule = "@ag-grid-enterprise/rich-select", n.GridChartsModule = "@ag-grid-enterprise/charts", n.ViewportRowModelModule = "@ag-grid-enterprise/viewport-row-model", n.ServerSideRowModelModule = "@ag-grid-enterprise/server-side-row-model", n.ExcelExportModule = "@ag-grid-enterprise/excel-export", n.ClipboardModule = "@ag-grid-enterprise/clipboard", n.SparklinesModule = "@ag-grid-enterprise/sparklines", n.AngularModule = "@ag-grid-community/angular", n.ReactModule = "@ag-grid-community/react", n.VueModule = "@ag-grid-community/vue";
})(F || (F = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Vc = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, N = (
  /** @class */
  function() {
    function n() {
    }
    return n.register = function(t, e) {
      e === void 0 && (e = !0), n.runVersionChecks(t), n.modulesMap[t.moduleName] = t, n.setModuleBased(e);
    }, n.runVersionChecks = function(t) {
      if (n.currentModuleVersion || (n.currentModuleVersion = t.version), t.version ? t.version !== n.currentModuleVersion && console.error("AG Grid: You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. '" + t.moduleName + "' is version " + t.version + " but the other modules are version " + this.currentModuleVersion + ". Please update all modules to the same version.") : console.error("AG Grid: You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. '" + t.moduleName + "' is incompatible. Please update all modules to the same version."), t.validate) {
        var e = t.validate();
        if (!e.isValid) {
          var r = e;
          console.error("AG Grid: " + r.message);
        }
      }
    }, n.setModuleBased = function(t) {
      n.moduleBased === void 0 ? n.moduleBased = t : n.moduleBased !== t && K(function() {
        console.warn("AG Grid: You are mixing modules (i.e. @ag-grid-community/core) and packages (ag-grid-community) - you can only use one or the other of these mechanisms."), console.warn("Please see https://www.ag-grid.com/javascript-grid/packages-modules/ for more information.");
      }, "ModulePackageCheck");
    }, n.setIsBundled = function() {
      n.isBundled = !0;
    }, n.registerModules = function(t, e) {
      e === void 0 && (e = !0), n.setModuleBased(e), t && t.forEach(function(r) {
        return n.register(r, e);
      });
    }, n.assertRegistered = function(t, e) {
      var r;
      if (this.isRegistered(t))
        return !0;
      var i = e + t, o;
      if (n.isBundled)
        o = "AG Grid: unable to use " + e + ` as 'ag-grid-enterprise' has not been loaded. Check you are using the Enterprise bundle:
        
        <script src="https://cdn.jsdelivr.net/npm/ag-grid-enterprise@AG_GRID_VERSION/dist/ag-grid-enterprise.min.js"><\/script>
        
For more info see: https://ag-grid.com/javascript-data-grid/getting-started/#getting-started-with-ag-grid-enterprise`;
      else if (n.moduleBased || n.moduleBased === void 0) {
        var s = (r = Object.entries(F).find(function(a) {
          var l = Vc(a, 2);
          l[0];
          var u = l[1];
          return u === t;
        })) === null || r === void 0 ? void 0 : r[0];
        o = "AG Grid: unable to use " + e + " as the " + s + ` is not registered. Check if you have registered the module:
           
    import { ModuleRegistry } from '@ag-grid-community/core';
    import { ` + s + " } from '" + t + `';
    
    ModuleRegistry.registerModules([ ` + s + ` ]);

For more info see: https://www.ag-grid.com/javascript-grid/modules/`;
      } else
        o = "AG Grid: unable to use " + e + ` as package 'ag-grid-enterprise' has not been imported. Check that you have imported the package:
            
    import 'ag-grid-enterprise';
            
For more info see: https://www.ag-grid.com/javascript-grid/packages/`;
      return K(function() {
        console.warn(o);
      }, i), !1;
    }, n.isRegistered = function(t) {
      return !!n.modulesMap[t];
    }, n.getRegisteredModules = function() {
      return zr(n.modulesMap);
    }, n.isPackageBased = function() {
      return !n.moduleBased;
    }, n.modulesMap = {}, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ei = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Bc = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Wc = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Bc(arguments[t]));
  return n;
}, jc = 0;
function rl() {
  return jc++;
}
var Z = (
  /** @class */
  function() {
    function n(t, e, r, i) {
      this.instanceId = rl(), this.autoHeaderHeight = null, this.moving = !1, this.menuVisible = !1, this.filterActive = !1, this.eventService = new Rt(), this.tooltipEnabled = !1, this.rowGroupActive = !1, this.pivotActive = !1, this.aggregationActive = !1, this.colDef = t, this.userProvidedColDef = e, this.colId = r, this.primary = i, this.setState(t);
    }
    return n.prototype.getInstanceId = function() {
      return this.instanceId;
    }, n.prototype.setState = function(t) {
      t.sort !== void 0 ? (t.sort === "asc" || t.sort === "desc") && (this.sort = t.sort) : (t.initialSort === "asc" || t.initialSort === "desc") && (this.sort = t.initialSort);
      var e = He(t.sortIndex), r = He(t.initialSortIndex);
      e !== void 0 ? e !== null && (this.sortIndex = e) : r !== null && (this.sortIndex = r);
      var i = Qe(t.hide), o = Qe(t.initialHide);
      i !== void 0 ? this.visible = !i : this.visible = !o, t.pinned !== void 0 ? this.setPinned(t.pinned) : this.setPinned(t.initialPinned);
      var s = He(t.flex), a = He(t.initialFlex);
      s !== void 0 ? this.flex = s : a !== void 0 && (this.flex = a);
    }, n.prototype.setColDef = function(t, e) {
      this.colDef = t, this.userProvidedColDef = e, this.initMinAndMaxWidths(), this.initDotNotation(), this.eventService.dispatchEvent(this.createColumnEvent("colDefChanged", "api"));
    }, n.prototype.getUserProvidedColDef = function() {
      return this.userProvidedColDef;
    }, n.prototype.setParent = function(t) {
      this.parent = t;
    }, n.prototype.getParent = function() {
      return this.parent;
    }, n.prototype.setOriginalParent = function(t) {
      this.originalParent = t;
    }, n.prototype.getOriginalParent = function() {
      return this.originalParent;
    }, n.prototype.initialise = function() {
      this.initMinAndMaxWidths(), this.resetActualWidth("gridInitializing"), this.initDotNotation(), this.initTooltip(), this.validate();
    }, n.prototype.initDotNotation = function() {
      var t = this.gridOptionsService.is("suppressFieldDotNotation");
      this.fieldContainsDots = O(this.colDef.field) && this.colDef.field.indexOf(".") >= 0 && !t, this.tooltipFieldContainsDots = O(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf(".") >= 0 && !t;
    }, n.prototype.initMinAndMaxWidths = function() {
      var t = this.colDef;
      this.minWidth = this.columnUtils.calculateColMinWidth(t), this.maxWidth = this.columnUtils.calculateColMaxWidth(t);
    }, n.prototype.initTooltip = function() {
      this.tooltipEnabled = O(this.colDef.tooltipField) || O(this.colDef.tooltipValueGetter) || O(this.colDef.tooltipComponent) || O(this.colDef.tooltipComponentFramework);
    }, n.prototype.resetActualWidth = function(t) {
      t === void 0 && (t = "api");
      var e = this.columnUtils.calculateColInitialWidth(this.colDef);
      this.setActualWidth(e, t, !0);
    }, n.prototype.isEmptyGroup = function() {
      return !1;
    }, n.prototype.isRowGroupDisplayed = function(t) {
      if (x(this.colDef) || x(this.colDef.showRowGroup))
        return !1;
      var e = this.colDef.showRowGroup === !0, r = this.colDef.showRowGroup === t;
      return e || r;
    }, n.prototype.isPrimary = function() {
      return this.primary;
    }, n.prototype.isFilterAllowed = function() {
      var t = !!this.colDef.filter || !!this.colDef.filterFramework;
      return t;
    }, n.prototype.isFieldContainsDots = function() {
      return this.fieldContainsDots;
    }, n.prototype.isTooltipEnabled = function() {
      return this.tooltipEnabled;
    }, n.prototype.isTooltipFieldContainsDots = function() {
      return this.tooltipFieldContainsDots;
    }, n.prototype.validate = function() {
      var t = this.colDef;
      function e(u, c, p) {
        K(function() {
          p ? console.warn(u, p) : K(function() {
            return console.warn(u);
          }, c);
        }, c);
      }
      var r = this.gridOptionsService.isRowModelType("clientSide");
      if (r && !N.isRegistered(F.RowGroupingModule)) {
        var i = ["enableRowGroup", "rowGroup", "rowGroupIndex", "enablePivot", "enableValue", "pivot", "pivotIndex", "aggFunc"], o = i.filter(function(u) {
          return O(t[u]);
        });
        o.length > 0 && N.assertRegistered(F.RowGroupingModule, o.map(function(u) {
          return "colDef." + u;
        }).join(", "));
      }
      if ((this.colDef.cellEditor === "agRichSelect" || this.colDef.cellEditor === "agRichSelectCellEditor") && N.assertRegistered(F.RichSelectModule, this.colDef.cellEditor), this.gridOptionsService.isTreeData()) {
        var s = ["rowGroup", "rowGroupIndex", "pivot", "pivotIndex"], o = s.filter(function(c) {
          return O(t[c]);
        });
        o.length > 0 && e("AG Grid: " + o.join() + " is not possible when doing tree data, your column definition should not have " + o.join(), "TreeDataCannotRowGroup");
      }
      if (O(t.menuTabs))
        if (Array.isArray(t.menuTabs)) {
          var a = ["filterMenuTab"], l = ["columnsMenuTab", "generalMenuTab"], o = l.filter(function(c) {
            return t.menuTabs.includes(c);
          });
          o.length > 0 && N.assertRegistered(F.MenuModule, "menuTab(s): " + o.map(function(c) {
            return "'" + c + "'";
          }).join()), t.menuTabs.forEach(function(c) {
            !l.includes(c) && !a.includes(c) && e("AG Grid: '" + c + "' is not valid for 'colDef.menuTabs'. Valid values are: " + Wc(a, l).map(function(p) {
              return "'" + p + "'";
            }).join() + ".", "wrongValue_menuTabs_" + c);
          });
        } else
          e("AG Grid: The typeof 'colDef.menuTabs' should be an array not:" + typeof t.menuTabs, "wrongType_menuTabs");
      O(t.columnsMenuParams) && N.assertRegistered(F.MenuModule, "columnsMenuParams"), O(t.columnsMenuParams) && N.assertRegistered(F.ColumnsToolPanelModule, "columnsMenuParams"), O(this.colDef.width) && typeof this.colDef.width != "number" && e("AG Grid: colDef.width should be a number, not " + typeof this.colDef.width, "ColumnCheck"), (t.pinnedRowCellRenderer || t.pinnedRowCellRendererParams || t.pinnedRowCellRendererFramework) && e("AG Grid: pinnedRowCellRenderer[Params,Framework] no longer exist. Use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned.", "colDef.pinnedRowCellRenderer-deprecated"), O(t.columnGroupShow) && t.columnGroupShow !== "closed" && t.columnGroupShow !== "open" && e("AG Grid: '" + t.columnGroupShow + "' is not valid for columnGroupShow. Valid values are 'open', 'closed', undefined, null", "columnGroupShow_invalid");
    }, n.prototype.addEventListener = function(t, e) {
      this.eventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.eventService.removeEventListener(t, e);
    }, n.prototype.createColumnFunctionCallbackParams = function(t) {
      return {
        node: t,
        data: t.data,
        column: this,
        colDef: this.colDef,
        context: this.gridOptionsService.context,
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi
      };
    }, n.prototype.isSuppressNavigable = function(t) {
      if (typeof this.colDef.suppressNavigable == "boolean")
        return this.colDef.suppressNavigable;
      if (typeof this.colDef.suppressNavigable == "function") {
        var e = this.createColumnFunctionCallbackParams(t), r = this.colDef.suppressNavigable;
        return r(e);
      }
      return !1;
    }, n.prototype.isCellEditable = function(t) {
      return t.group && !this.gridOptionsService.is("enableGroupEdit") ? !1 : this.isColumnFunc(t, this.colDef.editable);
    }, n.prototype.isSuppressFillHandle = function() {
      return !!Qe(this.colDef.suppressFillHandle);
    }, n.prototype.isAutoHeight = function() {
      return !!Qe(this.colDef.autoHeight);
    }, n.prototype.isAutoHeaderHeight = function() {
      return !!Qe(this.colDef.autoHeaderHeight);
    }, n.prototype.isRowDrag = function(t) {
      return this.isColumnFunc(t, this.colDef.rowDrag);
    }, n.prototype.isDndSource = function(t) {
      return this.isColumnFunc(t, this.colDef.dndSource);
    }, n.prototype.isCellCheckboxSelection = function(t) {
      return this.isColumnFunc(t, this.colDef.checkboxSelection);
    }, n.prototype.isSuppressPaste = function(t) {
      return this.isColumnFunc(t, this.colDef ? this.colDef.suppressPaste : null);
    }, n.prototype.isResizable = function() {
      return !!Qe(this.colDef.resizable);
    }, n.prototype.isColumnFunc = function(t, e) {
      if (typeof e == "boolean")
        return e;
      if (typeof e == "function") {
        var r = this.createColumnFunctionCallbackParams(t), i = e;
        return i(r);
      }
      return !1;
    }, n.prototype.setMoving = function(t, e) {
      e === void 0 && (e = "api"), this.moving = t, this.eventService.dispatchEvent(this.createColumnEvent("movingChanged", e));
    }, n.prototype.createColumnEvent = function(t, e) {
      return {
        type: t,
        column: this,
        columns: [this],
        source: e,
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi,
        context: this.gridOptionsService.context
      };
    }, n.prototype.isMoving = function() {
      return this.moving;
    }, n.prototype.getSort = function() {
      return this.sort;
    }, n.prototype.setSort = function(t, e) {
      e === void 0 && (e = "api"), this.sort !== t && (this.sort = t, this.eventService.dispatchEvent(this.createColumnEvent("sortChanged", e)));
    }, n.prototype.setMenuVisible = function(t, e) {
      e === void 0 && (e = "api"), this.menuVisible !== t && (this.menuVisible = t, this.eventService.dispatchEvent(this.createColumnEvent("menuVisibleChanged", e)));
    }, n.prototype.isMenuVisible = function() {
      return this.menuVisible;
    }, n.prototype.isSortAscending = function() {
      return this.sort === "asc";
    }, n.prototype.isSortDescending = function() {
      return this.sort === "desc";
    }, n.prototype.isSortNone = function() {
      return x(this.sort);
    }, n.prototype.isSorting = function() {
      return O(this.sort);
    }, n.prototype.getSortIndex = function() {
      return this.sortIndex;
    }, n.prototype.setSortIndex = function(t) {
      this.sortIndex = t;
    }, n.prototype.setAggFunc = function(t) {
      this.aggFunc = t;
    }, n.prototype.getAggFunc = function() {
      return this.aggFunc;
    }, n.prototype.getLeft = function() {
      return this.left;
    }, n.prototype.getOldLeft = function() {
      return this.oldLeft;
    }, n.prototype.getRight = function() {
      return this.left + this.actualWidth;
    }, n.prototype.setLeft = function(t, e) {
      e === void 0 && (e = "api"), this.oldLeft = this.left, this.left !== t && (this.left = t, this.eventService.dispatchEvent(this.createColumnEvent("leftChanged", e)));
    }, n.prototype.isFilterActive = function() {
      return this.filterActive;
    }, n.prototype.setFilterActive = function(t, e, r) {
      e === void 0 && (e = "api"), this.filterActive !== t && (this.filterActive = t, this.eventService.dispatchEvent(this.createColumnEvent("filterActiveChanged", e)));
      var i = this.createColumnEvent("filterChanged", e);
      r && Oe(i, r), this.eventService.dispatchEvent(i);
    }, n.prototype.isHovered = function() {
      return this.columnHoverService.isHovered(this);
    }, n.prototype.setPinned = function(t) {
      t === !0 || t === "left" ? this.pinned = "left" : t === "right" ? this.pinned = "right" : this.pinned = null;
    }, n.prototype.setFirstRightPinned = function(t, e) {
      e === void 0 && (e = "api"), this.firstRightPinned !== t && (this.firstRightPinned = t, this.eventService.dispatchEvent(this.createColumnEvent("firstRightPinnedChanged", e)));
    }, n.prototype.setLastLeftPinned = function(t, e) {
      e === void 0 && (e = "api"), this.lastLeftPinned !== t && (this.lastLeftPinned = t, this.eventService.dispatchEvent(this.createColumnEvent("lastLeftPinnedChanged", e)));
    }, n.prototype.isFirstRightPinned = function() {
      return this.firstRightPinned;
    }, n.prototype.isLastLeftPinned = function() {
      return this.lastLeftPinned;
    }, n.prototype.isPinned = function() {
      return this.pinned === "left" || this.pinned === "right";
    }, n.prototype.isPinnedLeft = function() {
      return this.pinned === "left";
    }, n.prototype.isPinnedRight = function() {
      return this.pinned === "right";
    }, n.prototype.getPinned = function() {
      return this.pinned;
    }, n.prototype.setVisible = function(t, e) {
      e === void 0 && (e = "api");
      var r = t === !0;
      this.visible !== r && (this.visible = r, this.eventService.dispatchEvent(this.createColumnEvent("visibleChanged", e)));
    }, n.prototype.isVisible = function() {
      return this.visible;
    }, n.prototype.isSpanHeaderHeight = function() {
      return !!this.getColDef().spanHeaderHeight;
    }, n.prototype.getColDef = function() {
      return this.colDef;
    }, n.prototype.getColumnGroupShow = function() {
      return this.colDef.columnGroupShow;
    }, n.prototype.getColId = function() {
      return this.colId;
    }, n.prototype.getId = function() {
      return this.colId;
    }, n.prototype.getUniqueId = function() {
      return this.colId;
    }, n.prototype.getDefinition = function() {
      return this.colDef;
    }, n.prototype.getActualWidth = function() {
      return this.actualWidth;
    }, n.prototype.getAutoHeaderHeight = function() {
      return this.autoHeaderHeight;
    }, n.prototype.setAutoHeaderHeight = function(t) {
      var e = t !== this.autoHeaderHeight;
      return this.autoHeaderHeight = t, e;
    }, n.prototype.createBaseColDefParams = function(t) {
      var e = {
        node: t,
        data: t.data,
        colDef: this.colDef,
        column: this,
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi,
        context: this.gridOptionsService.context
      };
      return e;
    }, n.prototype.getColSpan = function(t) {
      if (x(this.colDef.colSpan))
        return 1;
      var e = this.createBaseColDefParams(t), r = this.colDef.colSpan(e);
      return Math.max(r, 1);
    }, n.prototype.getRowSpan = function(t) {
      if (x(this.colDef.rowSpan))
        return 1;
      var e = this.createBaseColDefParams(t), r = this.colDef.rowSpan(e);
      return Math.max(r, 1);
    }, n.prototype.setActualWidth = function(t, e, r) {
      e === void 0 && (e = "api"), r === void 0 && (r = !1), this.minWidth != null && (t = Math.max(t, this.minWidth)), this.maxWidth != null && (t = Math.min(t, this.maxWidth)), this.actualWidth !== t && (this.actualWidth = t, this.flex && e !== "flex" && e !== "gridInitializing" && (this.flex = null), r || this.fireColumnWidthChangedEvent(e));
    }, n.prototype.fireColumnWidthChangedEvent = function(t) {
      this.eventService.dispatchEvent(this.createColumnEvent("widthChanged", t));
    }, n.prototype.isGreaterThanMax = function(t) {
      return this.maxWidth != null ? t > this.maxWidth : !1;
    }, n.prototype.getMinWidth = function() {
      return this.minWidth;
    }, n.prototype.getMaxWidth = function() {
      return this.maxWidth;
    }, n.prototype.getFlex = function() {
      return this.flex || 0;
    }, n.prototype.setFlex = function(t) {
      this.flex !== t && (this.flex = t);
    }, n.prototype.setMinimum = function(t) {
      t === void 0 && (t = "api"), O(this.minWidth) && this.setActualWidth(this.minWidth, t);
    }, n.prototype.setRowGroupActive = function(t, e) {
      e === void 0 && (e = "api"), this.rowGroupActive !== t && (this.rowGroupActive = t, this.eventService.dispatchEvent(this.createColumnEvent("columnRowGroupChanged", e)));
    }, n.prototype.isRowGroupActive = function() {
      return this.rowGroupActive;
    }, n.prototype.setPivotActive = function(t, e) {
      e === void 0 && (e = "api"), this.pivotActive !== t && (this.pivotActive = t, this.eventService.dispatchEvent(this.createColumnEvent("columnPivotChanged", e)));
    }, n.prototype.isPivotActive = function() {
      return this.pivotActive;
    }, n.prototype.isAnyFunctionActive = function() {
      return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();
    }, n.prototype.isAnyFunctionAllowed = function() {
      return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();
    }, n.prototype.setValueActive = function(t, e) {
      e === void 0 && (e = "api"), this.aggregationActive !== t && (this.aggregationActive = t, this.eventService.dispatchEvent(this.createColumnEvent("columnValueChanged", e)));
    }, n.prototype.isValueActive = function() {
      return this.aggregationActive;
    }, n.prototype.isAllowPivot = function() {
      return this.colDef.enablePivot === !0;
    }, n.prototype.isAllowValue = function() {
      return this.colDef.enableValue === !0;
    }, n.prototype.isAllowRowGroup = function() {
      return this.colDef.enableRowGroup === !0;
    }, n.prototype.getMenuTabs = function(t) {
      var e = this.getColDef().menuTabs;
      return e == null && (e = t), e;
    }, n.EVENT_MOVING_CHANGED = "movingChanged", n.EVENT_LEFT_CHANGED = "leftChanged", n.EVENT_WIDTH_CHANGED = "widthChanged", n.EVENT_LAST_LEFT_PINNED_CHANGED = "lastLeftPinnedChanged", n.EVENT_FIRST_RIGHT_PINNED_CHANGED = "firstRightPinnedChanged", n.EVENT_VISIBLE_CHANGED = "visibleChanged", n.EVENT_FILTER_CHANGED = "filterChanged", n.EVENT_FILTER_ACTIVE_CHANGED = "filterActiveChanged", n.EVENT_SORT_CHANGED = "sortChanged", n.EVENT_COL_DEF_CHANGED = "colDefChanged", n.EVENT_MENU_VISIBLE_CHANGED = "menuVisibleChanged", n.EVENT_ROW_GROUP_CHANGED = "columnRowGroupChanged", n.EVENT_PIVOT_CHANGED = "columnPivotChanged", n.EVENT_VALUE_CHANGED = "columnValueChanged", ei([
      h("gridOptionsService")
    ], n.prototype, "gridOptionsService", void 0), ei([
      h("columnUtils")
    ], n.prototype, "columnUtils", void 0), ei([
      h("columnHoverService")
    ], n.prototype, "columnHoverService", void 0), ei([
      b
    ], n.prototype, "initialise", null), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var kc = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, ie = (
  /** @class */
  function() {
    function n(t, e, r, i) {
      this.localEventService = new Rt(), this.expandable = !1, this.instanceId = rl(), this.expandableListenerRemoveCallback = null, this.colGroupDef = t, this.groupId = e, this.expanded = !!t && !!t.openByDefault, this.padding = r, this.level = i;
    }
    return n.prototype.destroy = function() {
      this.expandableListenerRemoveCallback && this.reset(null, void 0);
    }, n.prototype.reset = function(t, e) {
      this.colGroupDef = t, this.level = e, this.originalParent = null, this.expandableListenerRemoveCallback && this.expandableListenerRemoveCallback(), this.children = void 0, this.expandable = void 0;
    }, n.prototype.getInstanceId = function() {
      return this.instanceId;
    }, n.prototype.setOriginalParent = function(t) {
      this.originalParent = t;
    }, n.prototype.getOriginalParent = function() {
      return this.originalParent;
    }, n.prototype.getLevel = function() {
      return this.level;
    }, n.prototype.isVisible = function() {
      return this.children ? this.children.some(function(t) {
        return t.isVisible();
      }) : !1;
    }, n.prototype.isPadding = function() {
      return this.padding;
    }, n.prototype.setExpanded = function(t) {
      this.expanded = t === void 0 ? !1 : t;
      var e = {
        type: n.EVENT_EXPANDED_CHANGED
      };
      this.localEventService.dispatchEvent(e);
    }, n.prototype.isExpandable = function() {
      return this.expandable;
    }, n.prototype.isExpanded = function() {
      return this.expanded;
    }, n.prototype.getGroupId = function() {
      return this.groupId;
    }, n.prototype.getId = function() {
      return this.getGroupId();
    }, n.prototype.setChildren = function(t) {
      this.children = t;
    }, n.prototype.getChildren = function() {
      return this.children;
    }, n.prototype.getColGroupDef = function() {
      return this.colGroupDef;
    }, n.prototype.getLeafColumns = function() {
      var t = [];
      return this.addLeafColumns(t), t;
    }, n.prototype.addLeafColumns = function(t) {
      this.children && this.children.forEach(function(e) {
        e instanceof Z ? t.push(e) : e instanceof n && e.addLeafColumns(t);
      });
    }, n.prototype.getColumnGroupShow = function() {
      var t = this.colGroupDef;
      if (t)
        return t.columnGroupShow;
    }, n.prototype.setupExpandable = function() {
      var t = this;
      this.setExpandable(), this.expandableListenerRemoveCallback && this.expandableListenerRemoveCallback();
      var e = this.onColumnVisibilityChanged.bind(this);
      this.getLeafColumns().forEach(function(r) {
        return r.addEventListener("visibleChanged", e);
      }), this.expandableListenerRemoveCallback = function() {
        t.getLeafColumns().forEach(function(r) {
          return r.removeEventListener("visibleChanged", e);
        }), t.expandableListenerRemoveCallback = null;
      };
    }, n.prototype.setExpandable = function() {
      if (!this.isPadding()) {
        for (var t = !1, e = !1, r = !1, i = this.findChildrenRemovingPadding(), o = 0, s = i.length; o < s; o++) {
          var a = i[o];
          if (a.isVisible()) {
            var l = a.getColumnGroupShow();
            l === "open" ? (t = !0, r = !0) : l === "closed" ? (e = !0, r = !0) : (t = !0, e = !0);
          }
        }
        var u = t && e && r;
        if (this.expandable !== u) {
          this.expandable = u;
          var c = {
            type: n.EVENT_EXPANDABLE_CHANGED
          };
          this.localEventService.dispatchEvent(c);
        }
      }
    }, n.prototype.findChildrenRemovingPadding = function() {
      var t = [], e = function(r) {
        r.forEach(function(i) {
          var o = i instanceof n && i.isPadding();
          o ? e(i.children) : t.push(i);
        });
      };
      return e(this.children), t;
    }, n.prototype.onColumnVisibilityChanged = function() {
      this.setExpandable();
    }, n.prototype.addEventListener = function(t, e) {
      this.localEventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.localEventService.removeEventListener(t, e);
    }, n.EVENT_EXPANDED_CHANGED = "expandedChanged", n.EVENT_EXPANDABLE_CHANGED = "expandableChanged", kc([
      ve
    ], n.prototype, "destroy", null), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Uc = {
  numericColumn: {
    headerClass: "ag-right-aligned-header",
    cellClass: "ag-right-aligned-cell"
  },
  rightAligned: {
    headerClass: "ag-right-aligned-header",
    cellClass: "ag-right-aligned-cell"
  }
};
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
function il() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n[t] = arguments[t];
  for (var e = 0; e < n.length; e++) {
    var r = n[e];
    if (O(r))
      return r;
  }
  return null;
}
function zc(n) {
  return n != null && n.length > 0;
}
function q(n) {
  if (!(!n || !n.length))
    return n[n.length - 1];
}
function Ct(n, t, e) {
  return n == null && t == null ? !0 : n != null && t != null && n.length === t.length && n.every(function(r, i) {
    return e ? e(r, t[i]) : t[i] === r;
  });
}
function Kc(n, t) {
  return Ct(n, t);
}
function ol(n) {
  return n.sort(function(t, e) {
    return t - e;
  });
}
function $c(n, t) {
  if (n)
    for (var e = n.length - 2; e >= 0; e--) {
      var r = n[e] === t, i = n[e + 1] === t;
      r && i && n.splice(e + 1, 1);
    }
}
function ye(n, t) {
  var e = n.indexOf(t);
  e >= 0 && n.splice(e, 1);
}
function $n(n, t) {
  t.forEach(function(e) {
    return ye(n, e);
  });
}
function Hr(n, t, e) {
  n.splice(e, 0, t);
}
function Yc(n, t, e) {
  if (!(n == null || t == null))
    for (var r = t.length - 1; r >= 0; r--) {
      var i = t[r];
      Hr(n, i, e);
    }
}
function On(n, t, e) {
  $n(n, t), t.slice().reverse().forEach(function(r) {
    return Hr(n, r, e);
  });
}
function Ve(n, t) {
  return n.indexOf(t) > -1;
}
function nl(n) {
  return [].concat.apply([], n);
}
function Tn(n, t) {
  t == null || n == null || t.forEach(function(e) {
    return n.push(e);
  });
}
function qc(n) {
  return n.map(zn);
}
function Qc(n, t) {
  if (n != null)
    for (var e = n.length - 1; e >= 0; e--)
      t(n[e], e);
}
var Xc = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  firstExistingValue: il,
  existsAndNotEmpty: zc,
  last: q,
  areEqual: Ct,
  shallowCompare: Kc,
  sortNumerically: ol,
  removeRepeatsFromArray: $c,
  removeFromArray: ye,
  removeAllFromArray: $n,
  insertIntoArray: Hr,
  insertArrayIntoArray: Yc,
  moveInArray: On,
  includes: Ve,
  flatten: nl,
  pushAll: Tn,
  toStrings: qc,
  forEachReverse: Qc
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var sl = "__ag_Grid_Stop_Propagation", Jc = ["touchstart", "touchend", "touchmove", "touchcancel", "scroll"], So = {};
function ir(n) {
  n[sl] = !0;
}
function et(n) {
  return n[sl] === !0;
}
var Yn = function() {
  var n = {
    select: "input",
    change: "input",
    submit: "form",
    reset: "form",
    error: "img",
    load: "img",
    abort: "img"
  }, t = function(e) {
    if (typeof So[e] == "boolean")
      return So[e];
    var r = document.createElement(n[e] || "div");
    return e = "on" + e, So[e] = e in r;
  };
  return t;
}();
function Hi(n, t, e) {
  for (var r = t; r; ) {
    var i = n.getDomData(r, e);
    if (i)
      return i;
    r = r.parentElement;
  }
  return null;
}
function Vi(n, t) {
  return !t || !n ? !1 : ll(t).indexOf(n) >= 0;
}
function al(n) {
  for (var t = [], e = n.target; e; )
    t.push(e), e = e.parentElement;
  return t;
}
function ll(n) {
  var t = n;
  return t.path ? t.path : t.composedPath ? t.composedPath() : al(t);
}
function ul(n, t, e, r) {
  var i = Ve(Jc, e), o = i ? { passive: !0 } : void 0;
  n && n.addEventListener && n.addEventListener(t, e, r, o);
}
var Zc = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  stopPropagationForAgGrid: ir,
  isStopPropagationForAgGrid: et,
  isEventSupported: Yn,
  getCtrlForEventTarget: Hi,
  isElementInEventPath: Vi,
  createEventPath: al,
  getEventPath: ll,
  addSafePassiveEventListener: ul
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var bt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, T = (
  /** @class */
  function() {
    function n() {
      var t = this;
      this.destroyFunctions = [], this.destroyed = !1, this.__v_skip = !0, this.isAlive = function() {
        return !t.destroyed;
      };
    }
    return n.prototype.getFrameworkOverrides = function() {
      return this.frameworkOverrides;
    }, n.prototype.getContext = function() {
      return this.context;
    }, n.prototype.destroy = function() {
      this.destroyFunctions.forEach(function(t) {
        return t();
      }), this.destroyFunctions.length = 0, this.destroyed = !0, this.dispatchEvent({ type: n.EVENT_DESTROYED });
    }, n.prototype.addEventListener = function(t, e) {
      this.localEventService || (this.localEventService = new Rt()), this.localEventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.localEventService && this.localEventService.removeEventListener(t, e);
    }, n.prototype.dispatchEventAsync = function(t) {
      var e = this;
      window.setTimeout(function() {
        return e.dispatchEvent(t);
      }, 0);
    }, n.prototype.dispatchEvent = function(t) {
      this.localEventService && this.localEventService.dispatchEvent(t);
    }, n.prototype.addManagedListener = function(t, e, r) {
      var i = this;
      if (!this.destroyed) {
        t instanceof HTMLElement ? ul(this.getFrameworkOverrides(), t, e, r) : t.addEventListener(e, r);
        var o = function() {
          return t.removeEventListener(e, r), i.destroyFunctions = i.destroyFunctions.filter(function(s) {
            return s !== o;
          }), null;
        };
        return this.destroyFunctions.push(o), o;
      }
    }, n.prototype.addManagedPropertyListener = function(t, e) {
      var r = this;
      if (!this.destroyed) {
        this.gridOptionsService.addEventListener(t, e);
        var i = function() {
          return r.gridOptionsService.removeEventListener(t, e), r.destroyFunctions = r.destroyFunctions.filter(function(o) {
            return o !== i;
          }), null;
        };
        return this.destroyFunctions.push(i), i;
      }
    }, n.prototype.addDestroyFunc = function(t) {
      this.isAlive() ? this.destroyFunctions.push(t) : t();
    }, n.prototype.createManagedBean = function(t, e) {
      var r = this.createBean(t, e);
      return this.addDestroyFunc(this.destroyBean.bind(this, t, e)), r;
    }, n.prototype.createBean = function(t, e, r) {
      return (e || this.getContext()).createBean(t, r);
    }, n.prototype.destroyBean = function(t, e) {
      return (e || this.getContext()).destroyBean(t);
    }, n.prototype.destroyBeans = function(t, e) {
      var r = this;
      return t && t.forEach(function(i) {
        return r.destroyBean(i, e);
      }), [];
    }, n.EVENT_DESTROYED = "destroyed", bt([
      h("frameworkOverrides")
    ], n.prototype, "frameworkOverrides", void 0), bt([
      h("context")
    ], n.prototype, "context", void 0), bt([
      h("eventService")
    ], n.prototype, "eventService", void 0), bt([
      h("gridOptionsService")
    ], n.prototype, "gridOptionsService", void 0), bt([
      h("localeService")
    ], n.prototype, "localeService", void 0), bt([
      h("environment")
    ], n.prototype, "environment", void 0), bt([
      ve
    ], n.prototype, "destroy", null), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ep = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Eo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, tp = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, rp = (
  /** @class */
  function(n) {
    ep(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setBeans = function(e) {
      this.logger = e.create("ColumnFactory");
    }, t.prototype.createColumnTree = function(e, r, i) {
      var o = new Tc(), s = this.extractExistingTreeData(i), a = s.existingCols, l = s.existingGroups, u = s.existingColKeys;
      o.addExistingKeys(u);
      var c = this.recursivelyCreateColumns(e, 0, r, a, o, l), p = this.findMaxDept(c, 0);
      this.logger.log("Number of levels for grouped columns is " + p);
      var d = this.balanceColumnTree(c, 0, p, o), v = function(f, y) {
        f instanceof ie && f.setupExpandable(), f.setOriginalParent(y);
      };
      return this.columnUtils.depthFirstOriginalTreeSearch(null, d, v), {
        columnTree: d,
        treeDept: p
      };
    }, t.prototype.extractExistingTreeData = function(e) {
      var r = [], i = [], o = [];
      return e && this.columnUtils.depthFirstOriginalTreeSearch(null, e, function(s) {
        if (s instanceof ie) {
          var a = s;
          i.push(a);
        } else {
          var l = s;
          o.push(l.getId()), r.push(l);
        }
      }), { existingCols: r, existingGroups: i, existingColKeys: o };
    }, t.prototype.createForAutoGroups = function(e, r) {
      var i = this;
      return e.map(function(o) {
        return i.createAutoGroupTreeItem(r, o);
      });
    }, t.prototype.createAutoGroupTreeItem = function(e, r) {
      for (var i = this.findDepth(e), o = r, s = i - 1; s >= 0; s--) {
        var a = new ie(null, "FAKE_PATH_" + r.getId() + "}_" + s, !0, s);
        this.createBean(a), a.setChildren([o]), o.setOriginalParent(a), o = a;
      }
      return o;
    }, t.prototype.findDepth = function(e) {
      for (var r = 0, i = e; i && i[0] && i[0] instanceof ie; )
        r++, i = i[0].getChildren();
      return r;
    }, t.prototype.balanceColumnTree = function(e, r, i, o) {
      for (var s = [], a = 0; a < e.length; a++) {
        var l = e[a];
        if (l instanceof ie) {
          var u = l, c = this.balanceColumnTree(u.getChildren(), r + 1, i, o);
          u.setChildren(c), s.push(u);
        } else {
          for (var p = void 0, d = void 0, v = i - 1; v >= r; v--) {
            var f = o.getUniqueKey(null, null), y = this.createMergedColGroupDef(null), C = new ie(y, f, !0, r);
            this.createBean(C), d && d.setChildren([C]), d = C, p || (p = d);
          }
          if (p && d) {
            s.push(p);
            var m = e.some(function(w) {
              return w instanceof ie;
            });
            if (m) {
              d.setChildren([l]);
              continue;
            } else {
              d.setChildren(e);
              break;
            }
          }
          s.push(l);
        }
      }
      return s;
    }, t.prototype.findMaxDept = function(e, r) {
      for (var i = r, o = 0; o < e.length; o++) {
        var s = e[o];
        if (s instanceof ie) {
          var a = s, l = this.findMaxDept(a.getChildren(), r + 1);
          i < l && (i = l);
        }
      }
      return i;
    }, t.prototype.recursivelyCreateColumns = function(e, r, i, o, s, a) {
      var l = this;
      return (e || []).map(function(u) {
        return l.isColumnGroup(u) ? l.createColumnGroup(i, u, r, o, s, a) : l.createColumn(i, u, o, s);
      });
    }, t.prototype.createColumnGroup = function(e, r, i, o, s, a) {
      var l = this.createMergedColGroupDef(r), u = s.getUniqueKey(l.groupId || null, null), c = new ie(l, u, !1, i);
      this.createBean(c);
      var p = this.findExistingGroup(r, a);
      p && ye(a, p), p && p.isExpanded() && c.setExpanded(!0);
      var d = this.recursivelyCreateColumns(l.children, i + 1, e, o, s, a);
      return c.setChildren(d), c;
    }, t.prototype.createMergedColGroupDef = function(e) {
      var r = {};
      return Object.assign(r, this.gridOptionsService.get("defaultColGroupDef")), Object.assign(r, e), r;
    }, t.prototype.createColumn = function(e, r, i, o) {
      var s = this.mergeColDefs(r), a = this.findExistingColumn(r, i);
      if (i && a && ye(i, a), a)
        a.setColDef(s, r), this.applyColumnState(a, s);
      else {
        var l = o.getUniqueKey(s.colId, s.field);
        a = new Z(s, r, l, e), this.context.createBean(a);
      }
      return a;
    }, t.prototype.applyColumnState = function(e, r) {
      var i = He(r.flex);
      i !== void 0 && e.setFlex(i);
      var o = e.getFlex() <= 0;
      if (o) {
        var s = He(r.width);
        if (s != null)
          e.setActualWidth(s);
        else {
          var a = e.getActualWidth();
          e.setActualWidth(a);
        }
      }
      r.sort !== void 0 && (r.sort == "asc" || r.sort == "desc" ? e.setSort(r.sort) : e.setSort(void 0));
      var l = He(r.sortIndex);
      l !== void 0 && e.setSortIndex(l);
      var u = Qe(r.hide);
      u !== void 0 && e.setVisible(!u), r.pinned !== void 0 && e.setPinned(r.pinned);
    }, t.prototype.findExistingColumn = function(e, r) {
      return (r || []).find(function(i) {
        var o = i.getUserProvidedColDef();
        if (!o)
          return !1;
        var s = e.colId != null, a = e.field != null;
        return s ? i.getId() === e.colId : a ? o.field === e.field : o === e;
      });
    }, t.prototype.findExistingGroup = function(e, r) {
      return r.find(function(i) {
        var o = i.getColGroupDef();
        if (!o)
          return !1;
        var s = e.groupId != null;
        return s ? i.getId() === e.groupId : !1;
      });
    }, t.prototype.mergeColDefs = function(e) {
      var r = {}, i = this.gridOptionsService.get("defaultColDef");
      Oe(r, i, !1, !0);
      var o = e.type;
      o || (o = i && i.type), o && this.assignColumnTypes(o, r), Oe(r, e, !1, !0);
      var s = this.gridOptionsService.get("autoGroupColumnDef"), a = this.gridOptionsService.isColumnsSortingCoupledToGroup();
      return e.rowGroup && s && a && Oe(r, { sort: s.sort, initialSort: s.initialSort }, !1, !0), r;
    }, t.prototype.assignColumnTypes = function(e, r) {
      var i = [];
      if (e instanceof Array) {
        var o = e.some(function(l) {
          return typeof l != "string";
        });
        o ? console.warn("AG Grid: if colDef.type is supplied an array it should be of type 'string[]'") : i = e;
      } else if (typeof e == "string")
        i = e.split(",");
      else {
        console.warn("AG Grid: colDef.type should be of type 'string' | 'string[]'");
        return;
      }
      var s = Object.assign({}, Uc), a = this.gridOptionsService.get("columnTypes") || {};
      J(a, function(l, u) {
        l in s ? console.warn("AG Grid: the column type '" + l + "' is a default column type and cannot be overridden.") : s[l] = u;
      }), i.forEach(function(l) {
        var u = s[l.trim()];
        u ? Oe(r, u, !1, !0) : console.warn("AG Grid: colDef.type '" + l + "' does not correspond to defined gridOptions.columnTypes");
      });
    }, t.prototype.isColumnGroup = function(e) {
      return e.children !== void 0;
    }, Eo([
      h("columnUtils")
    ], t.prototype, "columnUtils", void 0), Eo([
      tp(0, me("loggerFactory"))
    ], t.prototype, "setBeans", null), t = Eo([
      A("columnFactory")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Gs = (
  /** @class */
  function() {
    function n() {
    }
    return n.ColDefPropertyMap = {
      headerName: void 0,
      columnGroupShow: void 0,
      headerClass: void 0,
      toolPanelClass: void 0,
      headerValueGetter: void 0,
      pivotKeys: void 0,
      groupId: void 0,
      colId: void 0,
      sort: void 0,
      initialSort: void 0,
      field: void 0,
      type: void 0,
      tooltipComponent: void 0,
      tooltipField: void 0,
      headerTooltip: void 0,
      cellClass: void 0,
      showRowGroup: void 0,
      filter: void 0,
      initialAggFunc: void 0,
      defaultAggFunc: void 0,
      aggFunc: void 0,
      pinned: void 0,
      initialPinned: void 0,
      chartDataType: void 0,
      cellEditorPopupPosition: void 0,
      headerGroupComponent: void 0,
      headerGroupComponentFramework: void 0,
      headerGroupComponentParams: void 0,
      cellStyle: void 0,
      cellRenderer: void 0,
      cellRendererParams: void 0,
      cellRendererFramework: void 0,
      cellEditor: void 0,
      cellEditorFramework: void 0,
      cellEditorParams: void 0,
      filterFramework: void 0,
      filterParams: void 0,
      pivotValueColumn: void 0,
      headerComponent: void 0,
      headerComponentFramework: void 0,
      headerComponentParams: void 0,
      floatingFilterComponent: void 0,
      floatingFilterComponentParams: void 0,
      floatingFilterComponentFramework: void 0,
      tooltipComponentParams: void 0,
      tooltipComponentFramework: void 0,
      refData: void 0,
      columnsMenuParams: void 0,
      children: void 0,
      sortingOrder: void 0,
      allowedAggFuncs: void 0,
      menuTabs: void 0,
      pivotTotalColumnIds: void 0,
      cellClassRules: void 0,
      icons: void 0,
      sortIndex: void 0,
      initialSortIndex: void 0,
      flex: void 0,
      initialFlex: void 0,
      width: void 0,
      initialWidth: void 0,
      minWidth: void 0,
      maxWidth: void 0,
      rowGroupIndex: void 0,
      initialRowGroupIndex: void 0,
      pivotIndex: void 0,
      initialPivotIndex: void 0,
      suppressCellFlash: void 0,
      suppressColumnsToolPanel: void 0,
      suppressFiltersToolPanel: void 0,
      openByDefault: void 0,
      marryChildren: void 0,
      stickyLabel: void 0,
      hide: void 0,
      initialHide: void 0,
      rowGroup: void 0,
      initialRowGroup: void 0,
      pivot: void 0,
      initialPivot: void 0,
      checkboxSelection: void 0,
      showDisabledCheckboxes: void 0,
      headerCheckboxSelection: void 0,
      headerCheckboxSelectionFilteredOnly: void 0,
      headerCheckboxSelectionCurrentPageOnly: void 0,
      suppressMenu: void 0,
      suppressMovable: void 0,
      lockPosition: void 0,
      lockVisible: void 0,
      lockPinned: void 0,
      unSortIcon: void 0,
      suppressSizeToFit: void 0,
      suppressAutoSize: void 0,
      enableRowGroup: void 0,
      enablePivot: void 0,
      enableValue: void 0,
      editable: void 0,
      suppressPaste: void 0,
      suppressNavigable: void 0,
      enableCellChangeFlash: void 0,
      rowDrag: void 0,
      dndSource: void 0,
      autoHeight: void 0,
      wrapText: void 0,
      sortable: void 0,
      resizable: void 0,
      singleClickEdit: void 0,
      floatingFilter: void 0,
      cellEditorPopup: void 0,
      suppressFillHandle: void 0,
      wrapHeaderText: void 0,
      autoHeaderHeight: void 0,
      dndSourceOnRowDrag: void 0,
      valueGetter: void 0,
      valueSetter: void 0,
      filterValueGetter: void 0,
      keyCreator: void 0,
      valueFormatter: void 0,
      valueParser: void 0,
      comparator: void 0,
      equals: void 0,
      pivotComparator: void 0,
      suppressKeyboardEvent: void 0,
      suppressHeaderKeyboardEvent: void 0,
      colSpan: void 0,
      rowSpan: void 0,
      getQuickFilterText: void 0,
      onCellValueChanged: void 0,
      onCellClicked: void 0,
      onCellDoubleClicked: void 0,
      onCellContextMenu: void 0,
      rowDragText: void 0,
      tooltipValueGetter: void 0,
      cellRendererSelector: void 0,
      cellEditorSelector: void 0,
      spanHeaderHeight: void 0
    }, n.ALL_PROPERTIES = Object.keys(n.ColDefPropertyMap), n.FRAMEWORK_PROPERTIES = [
      "__ob__",
      "__v_skip",
      "__metadata__",
      "mappedColumnProperties",
      "hasChildColumns",
      "toColDef",
      "createColDefFromGridColumn"
    ], n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var g = (
  /** @class */
  function() {
    function n() {
    }
    return n.EVENT_COLUMN_EVERYTHING_CHANGED = "columnEverythingChanged", n.EVENT_NEW_COLUMNS_LOADED = "newColumnsLoaded", n.EVENT_COLUMN_PIVOT_MODE_CHANGED = "columnPivotModeChanged", n.EVENT_COLUMN_ROW_GROUP_CHANGED = "columnRowGroupChanged", n.EVENT_EXPAND_COLLAPSE_ALL = "expandOrCollapseAll", n.EVENT_COLUMN_PIVOT_CHANGED = "columnPivotChanged", n.EVENT_GRID_COLUMNS_CHANGED = "gridColumnsChanged", n.EVENT_COLUMN_VALUE_CHANGED = "columnValueChanged", n.EVENT_COLUMN_MOVED = "columnMoved", n.EVENT_COLUMN_VISIBLE = "columnVisible", n.EVENT_COLUMN_PINNED = "columnPinned", n.EVENT_COLUMN_GROUP_OPENED = "columnGroupOpened", n.EVENT_COLUMN_RESIZED = "columnResized", n.EVENT_DISPLAYED_COLUMNS_CHANGED = "displayedColumnsChanged", n.EVENT_VIRTUAL_COLUMNS_CHANGED = "virtualColumnsChanged", n.EVENT_ASYNC_TRANSACTIONS_FLUSHED = "asyncTransactionsFlushed", n.EVENT_ROW_GROUP_OPENED = "rowGroupOpened", n.EVENT_ROW_DATA_CHANGED = "rowDataChanged", n.EVENT_ROW_DATA_UPDATED = "rowDataUpdated", n.EVENT_PINNED_ROW_DATA_CHANGED = "pinnedRowDataChanged", n.EVENT_RANGE_SELECTION_CHANGED = "rangeSelectionChanged", n.EVENT_CHART_CREATED = "chartCreated", n.EVENT_CHART_RANGE_SELECTION_CHANGED = "chartRangeSelectionChanged", n.EVENT_CHART_OPTIONS_CHANGED = "chartOptionsChanged", n.EVENT_CHART_DESTROYED = "chartDestroyed", n.EVENT_TOOL_PANEL_VISIBLE_CHANGED = "toolPanelVisibleChanged", n.EVENT_TOOL_PANEL_SIZE_CHANGED = "toolPanelSizeChanged", n.EVENT_INTERNAL_TOOL_PANEL_VISIBLE_CHANGED = "internalToolPanelVisibleChanged", n.EVENT_COLUMN_PANEL_ITEM_DRAG_START = "columnPanelItemDragStart", n.EVENT_COLUMN_PANEL_ITEM_DRAG_END = "columnPanelItemDragEnd", n.EVENT_MODEL_UPDATED = "modelUpdated", n.EVENT_PASTE_START = "pasteStart", n.EVENT_PASTE_END = "pasteEnd", n.EVENT_FILL_START = "fillStart", n.EVENT_FILL_END = "fillEnd", n.EVENT_UNDO_STARTED = "undoStarted", n.EVENT_UNDO_ENDED = "undoEnded", n.EVENT_REDO_STARTED = "redoStarted", n.EVENT_REDO_ENDED = "redoEnded", n.EVENT_KEY_SHORTCUT_CHANGED_CELL_START = "keyShortcutChangedCellStart", n.EVENT_KEY_SHORTCUT_CHANGED_CELL_END = "keyShortcutChangedCellEnd", n.EVENT_CELL_CLICKED = "cellClicked", n.EVENT_CELL_DOUBLE_CLICKED = "cellDoubleClicked", n.EVENT_CELL_MOUSE_DOWN = "cellMouseDown", n.EVENT_CELL_CONTEXT_MENU = "cellContextMenu", n.EVENT_CELL_VALUE_CHANGED = "cellValueChanged", n.EVENT_CELL_EDIT_REQUEST = "cellEditRequest", n.EVENT_ROW_VALUE_CHANGED = "rowValueChanged", n.EVENT_CELL_FOCUSED = "cellFocused", n.EVENT_CELL_FOCUS_CLEARED = "cellFocusCleared", n.EVENT_FULL_WIDTH_ROW_FOCUSED = "fullWidthRowFocused", n.EVENT_ROW_SELECTED = "rowSelected", n.EVENT_SELECTION_CHANGED = "selectionChanged", n.EVENT_CELL_KEY_DOWN = "cellKeyDown", n.EVENT_CELL_KEY_PRESS = "cellKeyPress", n.EVENT_CELL_MOUSE_OVER = "cellMouseOver", n.EVENT_CELL_MOUSE_OUT = "cellMouseOut", n.EVENT_FILTER_CHANGED = "filterChanged", n.EVENT_FILTER_MODIFIED = "filterModified", n.EVENT_FILTER_OPENED = "filterOpened", n.EVENT_SORT_CHANGED = "sortChanged", n.EVENT_VIRTUAL_ROW_REMOVED = "virtualRowRemoved", n.EVENT_ROW_CLICKED = "rowClicked", n.EVENT_ROW_DOUBLE_CLICKED = "rowDoubleClicked", n.EVENT_GRID_READY = "gridReady", n.EVENT_GRID_SIZE_CHANGED = "gridSizeChanged", n.EVENT_VIEWPORT_CHANGED = "viewportChanged", n.EVENT_SCROLLBAR_WIDTH_CHANGED = "scrollbarWidthChanged", n.EVENT_FIRST_DATA_RENDERED = "firstDataRendered", n.EVENT_DRAG_STARTED = "dragStarted", n.EVENT_DRAG_STOPPED = "dragStopped", n.EVENT_CHECKBOX_CHANGED = "checkboxChanged", n.EVENT_ROW_EDITING_STARTED = "rowEditingStarted", n.EVENT_ROW_EDITING_STOPPED = "rowEditingStopped", n.EVENT_CELL_EDITING_STARTED = "cellEditingStarted", n.EVENT_CELL_EDITING_STOPPED = "cellEditingStopped", n.EVENT_BODY_SCROLL = "bodyScroll", n.EVENT_BODY_SCROLL_END = "bodyScrollEnd", n.EVENT_HEIGHT_SCALE_CHANGED = "heightScaleChanged", n.EVENT_PAGINATION_CHANGED = "paginationChanged", n.EVENT_COMPONENT_STATE_CHANGED = "componentStateChanged", n.EVENT_STORE_REFRESHED = "storeRefreshed", n.EVENT_BODY_HEIGHT_CHANGED = "bodyHeightChanged", n.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED = "displayedColumnsWidthChanged", n.EVENT_SCROLL_VISIBILITY_CHANGED = "scrollVisibilityChanged", n.EVENT_COLUMN_HOVER_CHANGED = "columnHoverChanged", n.EVENT_FLASH_CELLS = "flashCells", n.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED = "paginationPixelOffsetChanged", n.EVENT_DISPLAYED_ROWS_CHANGED = "displayedRowsChanged", n.EVENT_LEFT_PINNED_WIDTH_CHANGED = "leftPinnedWidthChanged", n.EVENT_RIGHT_PINNED_WIDTH_CHANGED = "rightPinnedWidthChanged", n.EVENT_ROW_CONTAINER_HEIGHT_CHANGED = "rowContainerHeightChanged", n.EVENT_HEADER_HEIGHT_CHANGED = "headerHeightChanged", n.EVENT_COLUMN_HEADER_HEIGHT_CHANGED = "columnHeaderHeightChanged", n.EVENT_ROW_DRAG_ENTER = "rowDragEnter", n.EVENT_ROW_DRAG_MOVE = "rowDragMove", n.EVENT_ROW_DRAG_LEAVE = "rowDragLeave", n.EVENT_ROW_DRAG_END = "rowDragEnd", n.EVENT_GRID_STYLES_CHANGED = "gridStylesChanged", n.EVENT_POPUP_TO_FRONT = "popupToFront", n.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST = "columnRowGroupChangeRequest", n.EVENT_COLUMN_PIVOT_CHANGE_REQUEST = "columnPivotChangeRequest", n.EVENT_COLUMN_VALUE_CHANGE_REQUEST = "columnValueChangeRequest", n.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST = "columnAggFuncChangeRequest", n.EVENT_KEYBOARD_FOCUS = "keyboardFocus", n.EVENT_MOUSE_FOCUS = "mouseFocus", n.EVENT_STORE_UPDATED = "storeUpdated", n.EVENT_FILTER_DESTROYED = "filterDestroyed", n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ip = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Hs = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(ip(arguments[t]));
  return n;
}, Ye = (
  /** @class */
  function() {
    function n() {
    }
    return n.STRING_PROPERTIES = [
      "rowSelection",
      "overlayLoadingTemplate",
      "overlayNoRowsTemplate",
      "quickFilterText",
      "rowModelType",
      "editType",
      "domLayout",
      "clipboardDelimiter",
      "rowGroupPanelShow",
      "multiSortKey",
      "pivotColumnGroupTotals",
      "pivotRowTotals",
      "pivotPanelShow",
      "fillHandleDirection",
      "serverSideStoreType",
      "groupDisplayType",
      "treeDataDisplayType",
      "colResizeDefault"
    ], n.OBJECT_PROPERTIES = [
      "components",
      "frameworkComponents",
      "rowStyle",
      "context",
      "autoGroupColumnDef",
      "localeText",
      "icons",
      "datasource",
      "serverSideDatasource",
      "viewportDatasource",
      "groupRowRendererParams",
      "aggFuncs",
      "fullWidthCellRendererParams",
      "defaultColGroupDef",
      "defaultColDef",
      "defaultCsvExportParams",
      "defaultExcelExportParams",
      "columnTypes",
      "rowClassRules",
      "detailCellRendererParams",
      "loadingCellRendererParams",
      "loadingOverlayComponentParams",
      "noRowsOverlayComponentParams",
      "popupParent",
      "statusBar",
      "sideBar",
      "chartThemeOverrides",
      "customChartThemes",
      "chartToolPanelsDef"
    ], n.ARRAY_PROPERTIES = [
      "sortingOrder",
      "alignedGrids",
      "rowData",
      "columnDefs",
      "excelStyles",
      "pinnedTopRowData",
      "pinnedBottomRowData",
      "chartThemes",
      "rowClass"
    ], n.NUMBER_PROPERTIES = [
      "rowHeight",
      "detailRowHeight",
      "rowBuffer",
      "headerHeight",
      "groupHeaderHeight",
      "floatingFiltersHeight",
      "pivotHeaderHeight",
      "pivotGroupHeaderHeight",
      "groupDefaultExpanded",
      "viewportRowModelPageSize",
      "viewportRowModelBufferSize",
      "autoSizePadding",
      "maxBlocksInCache",
      "maxConcurrentDatasourceRequests",
      "tooltipShowDelay",
      "tooltipHideDelay",
      "cacheOverflowSize",
      "paginationPageSize",
      "cacheBlockSize",
      "infiniteInitialRowCount",
      "serverSideInitialRowCount",
      "scrollbarWidth",
      "asyncTransactionWaitMillis",
      "blockLoadDebounceMillis",
      "keepDetailRowsCount",
      "undoRedoCellEditingLimit",
      "cellFlashDelay",
      "cellFadeDelay",
      "tabIndex"
    ], n.BOOLEAN_PROPERTIES = [
      "suppressMakeColumnVisibleAfterUnGroup",
      "suppressRowClickSelection",
      "suppressCellSelection",
      "suppressCellFocus",
      "suppressHorizontalScroll",
      "alwaysShowHorizontalScroll",
      "alwaysShowVerticalScroll",
      "debug",
      "enableBrowserTooltips",
      "enableCellExpressions",
      "groupSelectsChildren",
      "groupIncludeFooter",
      "groupIncludeTotalFooter",
      "groupSuppressBlankHeader",
      "suppressMenuHide",
      "suppressRowDeselection",
      "unSortIcon",
      "suppressMultiSort",
      "alwaysMultiSort",
      "singleClickEdit",
      "suppressLoadingOverlay",
      "suppressNoRowsOverlay",
      "suppressAutoSize",
      "skipHeaderOnAutoSize",
      "suppressParentsInRowNodes",
      "suppressColumnMoveAnimation",
      "suppressMovableColumns",
      "suppressFieldDotNotation",
      "enableRangeSelection",
      "enableRangeHandle",
      "enableFillHandle",
      "suppressClearOnFillReduction",
      "deltaSort",
      "suppressTouch",
      "suppressAsyncEvents",
      "allowContextMenuWithControlKey",
      "suppressContextMenu",
      "rememberGroupStateWhenNewData",
      "enableCellChangeFlash",
      "suppressDragLeaveHidesColumns",
      "suppressRowGroupHidesColumns",
      "suppressMiddleClickScrolls",
      "suppressPreventDefaultOnMouseWheel",
      "suppressCopyRowsToClipboard",
      "copyHeadersToClipboard",
      "copyGroupHeadersToClipboard",
      "pivotMode",
      "suppressAggFuncInHeader",
      "suppressColumnVirtualisation",
      "suppressAggAtRootLevel",
      "suppressFocusAfterRefresh",
      "functionsPassive",
      "functionsReadOnly",
      "animateRows",
      "groupSelectsFiltered",
      "groupRemoveSingleChildren",
      "groupRemoveLowestSingleChildren",
      "enableRtl",
      "suppressClickEdit",
      "rowDragEntireRow",
      "rowDragManaged",
      "suppressRowDrag",
      "suppressMoveWhenRowDragging",
      "rowDragMultiRow",
      "enableGroupEdit",
      "embedFullWidthRows",
      "suppressPaginationPanel",
      "groupHideOpenParents",
      "groupAllowUnbalanced",
      "pagination",
      "paginationAutoPageSize",
      "suppressScrollOnNewData",
      "suppressScrollWhenPopupsAreOpen",
      "purgeClosedRowNodes",
      "cacheQuickFilter",
      "excludeHiddenColumnsFromQuickFilter",
      "ensureDomOrder",
      "accentedSort",
      "suppressChangeDetection",
      "valueCache",
      "valueCacheNeverExpires",
      "aggregateOnlyChangedColumns",
      "suppressAnimationFrame",
      "suppressExcelExport",
      "suppressCsvExport",
      "treeData",
      "masterDetail",
      "suppressMultiRangeSelection",
      "enterMovesDownAfterEdit",
      "enterMovesDown",
      "suppressPropertyNamesCheck",
      "rowMultiSelectWithClick",
      "suppressRowHoverHighlight",
      "suppressRowTransform",
      "suppressClipboardPaste",
      "suppressLastEmptyLineOnPaste",
      "enableCharts",
      "enableChartToolPanelsButton",
      "suppressChartToolPanelsButton",
      "suppressMaintainUnsortedOrder",
      "enableCellTextSelection",
      "suppressBrowserResizeObserver",
      "suppressMaxRenderedRowRestriction",
      "excludeChildrenWhenTreeDataFiltering",
      "tooltipMouseTrack",
      "keepDetailRows",
      "paginateChildRows",
      "preventDefaultOnContextMenu",
      "undoRedoCellEditing",
      "allowDragFromColumnsToolPanel",
      "immutableData",
      "pivotSuppressAutoColumn",
      "suppressExpandablePivotGroups",
      "debounceVerticalScrollbar",
      "detailRowAutoHeight",
      "serverSideFilteringAlwaysResets",
      "serverSideSortingAlwaysResets",
      "serverSideSortAllLevels",
      "serverSideFilterAllLevels",
      "serverSideSortOnServer",
      "serverSideFilterOnServer",
      "suppressAggFilteredOnly",
      "showOpenedGroup",
      "suppressClipboardApi",
      "suppressModelUpdateAfterUpdateTransaction",
      "stopEditingWhenCellsLoseFocus",
      "maintainColumnOrder",
      "groupMaintainOrder",
      "columnHoverHighlight",
      "reactUi",
      "suppressReactUi",
      "readOnlyEdit",
      "suppressRowVirtualisation",
      "enableCellEditingOnBackspace",
      "resetRowDataOnUpdate",
      "removePivotHeaderRowWhenSingleValueColumn",
      "suppressCopySingleCellRanges",
      "groupRowsSticky",
      "suppressServerSideInfiniteScroll",
      "rowGroupPanelSuppressSort",
      "allowShowChangeAfterFilter",
      "suppressCutToClipboard"
    ], n.FUNCTIONAL_PROPERTIES = [
      "localeTextFunc",
      "doesExternalFilterPass",
      "groupRowAggNodes",
      "isFullWidthCell",
      "processSecondaryColDef",
      "processSecondaryColGroupDef",
      "processPivotResultColDef",
      "processPivotResultColGroupDef",
      "getBusinessKeyForNode",
      "isRowSelectable",
      "postSort",
      "defaultGroupOrderComparator",
      "rowDragText",
      "groupRowRenderer",
      "groupRowRendererFramework",
      "fullWidthCellRenderer",
      "fullWidthCellRendererFramework",
      "loadingCellRenderer",
      "loadingCellRendererFramework",
      "loadingOverlayComponent",
      "loadingOverlayComponentFramework",
      "noRowsOverlayComponent",
      "noRowsOverlayComponentFramework",
      "detailCellRenderer",
      "detailCellRendererFramework"
    ], n.CALLBACK_PROPERTIES = [
      "getLocaleText",
      "isExternalFilterPresent",
      "getRowHeight",
      "getRowClass",
      "getRowStyle",
      "getContextMenuItems",
      "getMainMenuItems",
      "processRowPostCreate",
      "processCellForClipboard",
      "getGroupRowAgg",
      "getRowNodeId",
      "isFullWidthRow",
      "sendToClipboard",
      "navigateToNextHeader",
      "tabToNextHeader",
      "navigateToNextCell",
      "tabToNextCell",
      "processCellFromClipboard",
      "getDocument",
      "postProcessPopup",
      "getChildCount",
      "getDataPath",
      "isRowMaster",
      "postSortRows",
      "processHeaderForClipboard",
      "processGroupHeaderForClipboard",
      "paginationNumberFormatter",
      "processDataFromClipboard",
      "getServerSideGroupKey",
      "isServerSideGroup",
      "createChartContainer",
      "getChartToolbarItems",
      "fillOperation",
      "isApplyServerSideTransaction",
      "getServerSideStoreParams",
      "getServerSideGroupLevelParams",
      "isServerSideGroupOpenByDefault",
      "isGroupOpenByDefault",
      "initialGroupOrderComparator",
      "loadingCellRendererSelector",
      "getRowId",
      "groupAggFiltering"
    ], n.FUNCTION_PROPERTIES = Hs(n.FUNCTIONAL_PROPERTIES, n.CALLBACK_PROPERTIES), n.ALL_PROPERTIES = Hs(n.ARRAY_PROPERTIES, n.OBJECT_PROPERTIES, n.STRING_PROPERTIES, n.NUMBER_PROPERTIES, n.FUNCTION_PROPERTIES, n.BOOLEAN_PROPERTIES), n.FRAMEWORK_PROPERTIES = [
      "__ob__",
      "__v_skip",
      "__metadata__",
      "mappedColumnProperties",
      "hasChildColumns",
      "toColDef",
      "createColDefFromGridColumn"
    ], n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var bn = function() {
  return bn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, bn.apply(this, arguments);
}, op = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, np = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(op(arguments[t]));
  return n;
}, Ai = (
  /** @class */
  function() {
    function n() {
    }
    return n.getCallbackForEvent = function(t) {
      return !t || t.length < 2 ? t : "on" + t[0].toUpperCase() + t.substr(1);
    }, n.getCoercionLookup = function() {
      var t = {};
      return np(n.ARRAY_PROPERTIES, n.OBJECT_PROPERTIES, n.STRING_PROPERTIES, n.FUNCTION_PROPERTIES, n.EVENT_CALLBACKS).forEach(function(e) {
        return t[e] = "none";
      }), n.BOOLEAN_PROPERTIES.forEach(function(e) {
        return t[e] = "boolean";
      }), n.NUMBER_PROPERTIES.forEach(function(e) {
        return t[e] = "number";
      }), t;
    }, n.getValue = function(t, e) {
      var r = n.coercionLookup[t];
      if (r) {
        var i = e;
        switch (r) {
          case "number": {
            i = n.toNumber(e);
            break;
          }
          case "boolean": {
            i = n.toBoolean(e);
            break;
          }
          case "none": {
            t === "groupAggFiltering" && typeof e != "function" && (i = n.toBoolean(e));
            break;
          }
        }
        return i;
      }
    }, n.getGridOptionKeys = function(t, e) {
      return Object.keys(e ? n.coercionLookup : t);
    }, n.copyAttributesToGridOptions = function(t, e, r) {
      r === void 0 && (r = !1), typeof t != "object" && (t = {});
      var i = t, o = n.getGridOptionKeys(e, r);
      return o.forEach(function(s) {
        var a = e[s];
        if (typeof a < "u") {
          var l = n.getValue(s, a);
          l !== void 0 && (i[s] = l);
        }
      }), t;
    }, n.processOnChange = function(t, e) {
      if (!(!t || Object.keys(t).length === 0)) {
        var r = bn({}, t);
        r.columnTypes && (e.setColumnTypes(r.columnTypes.currentValue, "gridOptionsChanged"), delete r.columnTypes), r.autoGroupColumnDef && (e.setAutoGroupColumnDef(r.autoGroupColumnDef.currentValue, "gridOptionsChanged"), delete r.autoGroupColumnDef), r.defaultColDef && (e.setDefaultColDef(r.defaultColDef.currentValue, "gridOptionsChanged"), delete r.defaultColDef), r.columnDefs && (e.setColumnDefs(r.columnDefs.currentValue, "gridOptionsChanged"), delete r.columnDefs), Object.keys(r).forEach(function(o) {
          var s = o, a = n.getValue(s, r[s].currentValue);
          e.__setProperty(s, a);
        });
        var i = {
          type: g.EVENT_COMPONENT_STATE_CHANGED
        };
        J(t, function(o, s) {
          i[o] = s;
        }), e.dispatchEvent(i);
      }
    }, n.toBoolean = function(t) {
      return typeof t == "boolean" ? t : typeof t == "string" ? t.toUpperCase() === "TRUE" || t == "" : !1;
    }, n.toNumber = function(t) {
      if (typeof t == "number")
        return t;
      if (typeof t == "string")
        return Number(t);
    }, n.EVENTS = zr(g), n.EXCLUDED_INTERNAL_EVENTS = [
      g.EVENT_SCROLLBAR_WIDTH_CHANGED,
      g.EVENT_CHECKBOX_CHANGED,
      g.EVENT_HEIGHT_SCALE_CHANGED,
      g.EVENT_BODY_HEIGHT_CHANGED,
      g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
      g.EVENT_SCROLL_VISIBILITY_CHANGED,
      g.EVENT_COLUMN_HOVER_CHANGED,
      g.EVENT_FLASH_CELLS,
      g.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED,
      g.EVENT_DISPLAYED_ROWS_CHANGED,
      g.EVENT_LEFT_PINNED_WIDTH_CHANGED,
      g.EVENT_RIGHT_PINNED_WIDTH_CHANGED,
      g.EVENT_ROW_CONTAINER_HEIGHT_CHANGED,
      g.EVENT_POPUP_TO_FRONT,
      g.EVENT_KEYBOARD_FOCUS,
      g.EVENT_MOUSE_FOCUS,
      g.EVENT_STORE_UPDATED,
      g.EVENT_COLUMN_PANEL_ITEM_DRAG_START,
      g.EVENT_COLUMN_PANEL_ITEM_DRAG_END,
      g.EVENT_FILL_START,
      g.EVENT_FILL_END,
      g.EVENT_KEY_SHORTCUT_CHANGED_CELL_START,
      g.EVENT_KEY_SHORTCUT_CHANGED_CELL_END,
      g.EVENT_FULL_WIDTH_ROW_FOCUSED,
      g.EVENT_HEADER_HEIGHT_CHANGED,
      g.EVENT_COLUMN_HEADER_HEIGHT_CHANGED,
      g.EVENT_INTERNAL_TOOL_PANEL_VISIBLE_CHANGED,
      g.EVENT_CELL_FOCUS_CLEARED,
      g.EVENT_GRID_STYLES_CHANGED,
      g.EVENT_FILTER_DESTROYED
    ], n.PUBLIC_EVENTS = n.EVENTS.filter(function(t) {
      return !Ve(n.EXCLUDED_INTERNAL_EVENTS, t);
    }), n.EVENT_CALLBACKS = n.EVENTS.map(function(t) {
      return n.getCallbackForEvent(t);
    }), n.STRING_PROPERTIES = Ye.STRING_PROPERTIES, n.OBJECT_PROPERTIES = Ye.OBJECT_PROPERTIES, n.ARRAY_PROPERTIES = Ye.ARRAY_PROPERTIES, n.NUMBER_PROPERTIES = Ye.NUMBER_PROPERTIES, n.BOOLEAN_PROPERTIES = Ye.BOOLEAN_PROPERTIES, n.FUNCTION_PROPERTIES = Ye.FUNCTION_PROPERTIES, n.ALL_PROPERTIES = Ye.ALL_PROPERTIES, n.ALL_PROPERTIES_SET = new Set(Ye.ALL_PROPERTIES), n.coercionLookup = n.getCoercionLookup(), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
function cl(n, t, e) {
  var r = {}, i = n.filter(function(o) {
    return !t.some(function(s) {
      return s === o;
    });
  });
  return i.length > 0 && i.forEach(function(o) {
    return r[o] = qn(o, e);
  }), r;
}
function qn(n, t, e, r) {
  var i = t.map(function(a) {
    return {
      value: a,
      relevance: sp(n.toLowerCase(), a.toLocaleLowerCase())
    };
  });
  if (i.sort(function(a, l) {
    return l.relevance - a.relevance;
  }), e && (i = i.filter(function(a) {
    return a.relevance !== 0;
  })), r && r > 0) {
    var o = i[0].relevance, s = o * r;
    i = i.filter(function(a) {
      return s - a.relevance < 0;
    });
  }
  return i.map(function(a) {
    return a.value;
  });
}
function sp(n, t) {
  for (var e = n.replace(/\s/g, ""), r = t.replace(/\s/g, ""), i = 0, o = -1, s = 0; s < e.length; s++) {
    var a = r.indexOf(e[s], o + 1);
    a !== -1 && (o = a, i += 100 - o * 100 / 1e4 * 100);
  }
  return i;
}
var ap = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  fuzzyCheckStrings: cl,
  fuzzySuggestions: qn
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ti = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, pl = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, _o = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(pl(arguments[t]));
  return n;
};
function ae(n, t, e, r) {
  var i = e ? "Please use '" + e + "' instead. " : "";
  K(function() {
    return console.warn("AG Grid: since v" + n + ", '" + t + "' is deprecated. " + i + (r ?? ""));
  }, "Deprecated_" + t);
}
var lp = (
  /** @class */
  function() {
    function n() {
      this.deprecatedProperties = {
        serverSideInfiniteScroll: { version: "29", message: "Infinite Scrolling is now the default behaviour. This can be suppressed with `suppressServerSideInfiniteScroll`." },
        rememberGroupStateWhenNewData: { version: "24", message: "Now that transaction updates are possible and they keep group state, this feature is no longer needed." },
        suppressEnterpriseResetOnNewColumns: { version: "25", message: "Now that it is possible to dynamically change columns in the grid, this is no longer needed." },
        suppressColumnStateEvents: { version: "25", message: 'Events should be ignored based on the `event.source`, which will be "api" if the event was due to setting column state via the API.' },
        defaultExportParams: { version: "25.2", message: "The property `defaultExportParams` has been replaced by `defaultCsvExportParams` and `defaultExcelExportParams`" },
        stopEditingWhenGridLosesFocus: { version: "25.2.2", newProp: "stopEditingWhenCellsLoseFocus", copyToNewProp: !0 },
        applyColumnDefOrder: { version: "26", message: "The property `applyColumnDefOrder` is no longer needed, as this is the default behaviour. To turn this behaviour off, set maintainColumnOrder=true" },
        groupMultiAutoColumn: { version: "26", newProp: "groupDisplayType", copyToNewProp: !0, newPropValue: "multipleColumns" },
        groupUseEntireRow: { version: "26", newProp: "groupDisplayType", copyToNewProp: !0, newPropValue: "groupRows" },
        defaultGroupSortComparator: { version: "26", newProp: "initialGroupOrderComparator" },
        enableMultiRowDragging: { version: "26.1", newProp: "rowDragMultiRow", copyToNewProp: !0 },
        colWidth: { version: "26.1", newProp: "defaultColDef.width" },
        minColWidth: { version: "26.1", newProp: "defaultColDef.minWidth" },
        maxColWidth: { version: "26.1", newProp: "defaultColDef.maxWidth" },
        reactUi: { version: "26.1", message: "React UI is on by default, so no need for reactUi=true. To turn it off, set suppressReactUi=true." },
        suppressCellSelection: { version: "27", newProp: "suppressCellFocus", copyToNewProp: !0 },
        clipboardDeliminator: { version: "27.1", newProp: "clipboardDelimiter", copyToNewProp: !0 },
        getRowNodeId: { version: "27.1", newProp: "getRowId", message: "The difference: if getRowId() is implemented then immutable data is enabled by default." },
        defaultGroupOrderComparator: { version: "27.2", newProp: "initialGroupOrderComparator" },
        groupRowAggNodes: { version: "27.2", newProp: "getGroupRowAgg" },
        postSort: { version: "27.2", newProp: "postSortRows" },
        isFullWidthCell: { version: "27.2", newProp: "isFullWidthRow" },
        localeTextFunc: { version: "27.2", newProp: "getLocaleText" },
        serverSideFilteringAlwaysResets: { version: "28.0", newProp: "serverSideFilterAllLevels", copyToNewProp: !0 },
        serverSideSortingAlwaysResets: { version: "28.0", newProp: "serverSideSortAllLevels", copyToNewProp: !0 },
        suppressReactUi: { version: "28", message: "The legacy React rendering engine is deprecated and will be removed in the next major version of the grid." },
        processSecondaryColDef: { version: "28", newProp: "processPivotResultColDef", copyToNewProp: !0 },
        processSecondaryColGroupDef: { version: "28", newProp: "processPivotResultColGroupDef", copyToNewProp: !0 },
        getServerSideStoreParams: { version: "28", newProp: "getServerSideGroupLevelParams", copyToNewProp: !0 },
        enableChartToolPanelsButton: { version: "29", message: "The Chart Tool Panels button is now enabled by default. To hide the Chart Tool Panels button and display the hamburger button instead, set suppressChartToolPanelsButton=true." },
        functionsPassive: { version: "29.2" },
        onColumnRowGroupChangeRequest: { version: "29.2" },
        onColumnPivotChangeRequest: { version: "29.2" },
        onColumnValueChangeRequest: { version: "29.2" },
        onColumnAggFuncChangeRequest: { version: "29.2" }
      };
    }
    return n.prototype.pickOneWarning = function(t, e) {
      console.warn("AG Grid: " + t + " and " + e + " do not work with each other, you need to pick one.");
    }, n.prototype.init = function() {
      var t = this;
      if (this.checkForDeprecated(), this.checkForViolations(), this.gridOptions.suppressPropertyNamesCheck !== !0 && (this.checkGridOptionsProperties(), this.checkColumnDefProperties()), this.checkColumnDefViolations(), this.gridOptionsService.is("groupSelectsChildren") && this.gridOptionsService.is("suppressParentsInRowNodes") && console.warn("AG Grid: 'groupSelectsChildren' does not work with 'suppressParentsInRowNodes', this selection method needs the part in rowNode to work"), this.gridOptionsService.is("groupSelectsChildren") && this.gridOptionsService.get("rowSelection") !== "multiple" && console.warn("AG Grid: rowSelection must be 'multiple' for groupSelectsChildren to make sense"), this.gridOptionsService.is("groupRemoveSingleChildren") && this.gridOptionsService.is("groupHideOpenParents") && this.pickOneWarning("groupRemoveSingleChildren", "groupHideOpenParents"), this.gridOptionsService.get("domLayout") === "autoHeight" && !this.gridOptionsService.isRowModelType("clientSide") && (this.gridOptionsService.is("pagination") || (console.warn("AG Grid: domLayout='autoHeight' was ignored as it is only supported by the Client-Side row model, unless using pagination."), this.gridOptions.domLayout = "normal")), this.gridOptionsService.isRowModelType("serverSide")) {
        var e = function(i, o) {
          return "AG Grid: '" + i + "' is not supported on the Server-Side Row Model." + (o ? " Please use " + o + " instead." : "");
        };
        this.gridOptionsService.exists("groupDefaultExpanded") && console.warn(e("groupDefaultExpanded", "isServerSideGroupOpenByDefault callback")), this.gridOptionsService.exists("groupIncludeFooter") && console.warn(e("groupIncludeFooter")), this.gridOptionsService.exists("groupIncludeTotalFooter") && console.warn(e("groupIncludeTotalFooter"));
      }
      this.gridOptionsService.is("enableRangeSelection") ? N.assertRegistered(F.RangeSelectionModule, "enableRangeSelection") : (this.gridOptionsService.is("enableRangeHandle") || this.gridOptionsService.is("enableFillHandle")) && console.warn("AG Grid: 'enableRangeHandle' or 'enableFillHandle' will not work unless 'enableRangeSelection' is set to true");
      var r = function(i, o) {
        return t.gridOptionsService.exists(i) && N.assertRegistered(o, i);
      };
      r("sideBar", F.SideBarModule), r("statusBar", F.StatusBarModule), r("enableCharts", F.GridChartsModule), r("getMainMenuItems", F.MenuModule), r("getContextMenuItems", F.MenuModule), r("allowContextMenuWithControlKey", F.MenuModule), this.gridOptionsService.is("groupRowsSticky") && (this.gridOptionsService.is("groupHideOpenParents") && this.pickOneWarning("groupRowsSticky", "groupHideOpenParents"), this.gridOptionsService.is("masterDetail") && this.pickOneWarning("groupRowsSticky", "masterDetail"), this.gridOptionsService.is("pagination") && this.pickOneWarning("groupRowsSticky", "pagination"));
    }, n.prototype.checkColumnDefProperties = function() {
      var t = this;
      if (this.gridOptions.columnDefs != null) {
        var e = _o(Gs.ALL_PROPERTIES, Gs.FRAMEWORK_PROPERTIES), r = function(i, o) {
          var s = Object.getOwnPropertyNames(i);
          t.checkProperties(s, e, e, o, "https://www.ag-grid.com/javascript-data-grid/column-properties/"), i.children && i.children.forEach(function(a) {
            return r(a, "columnDefs.children");
          });
        };
        this.gridOptions.columnDefs.forEach(function(i) {
          return r(i, "columnDefs");
        }), this.gridOptions.defaultColDef && r(this.gridOptions.defaultColDef, "defaultColDef");
      }
    }, n.prototype.checkColumnDefViolations = function() {
      var t, e = (t = this.gridOptionsService.get("rowModelType")) !== null && t !== void 0 ? t : "clientSide", r = {
        infinite: ["headerCheckboxSelection", "headerCheckboxSelectionFilteredOnly", "headerCheckboxSelectionCurrentPageOnly"],
        viewport: ["headerCheckboxSelection", "headerCheckboxSelectionFilteredOnly", "headerCheckboxSelectionCurrentPageOnly"],
        serverSide: ["headerCheckboxSelectionFilteredOnly", "headerCheckboxSelectionCurrentPageOnly"],
        clientSide: []
      }, i = r[e];
      if (i != null && i.length) {
        var o = function(s) {
          i.forEach(function(a) {
            a in s && s[a] && console.warn("AG Grid: Column property " + a + " is not supported with the row model type " + e + ".");
          });
        };
        this.gridOptions.columnDefs != null && this.gridOptions.columnDefs.forEach(function(s) {
          return o(s);
        }), this.gridOptions.autoGroupColumnDef != null && o(this.gridOptions.autoGroupColumnDef), this.gridOptions.defaultColDef != null && o(this.gridOptions.defaultColDef);
      }
    }, n.prototype.checkGridOptionsProperties = function() {
      var t = Object.getOwnPropertyNames(this.gridOptions), e = _o(Ye.ALL_PROPERTIES, Ye.FRAMEWORK_PROPERTIES, Ai.EVENT_CALLBACKS), r = _o(e, ["api", "columnApi"], Object.keys(this.deprecatedProperties));
      this.checkProperties(t, r, e, "gridOptions", "https://www.ag-grid.com/javascript-data-grid/grid-options/");
    }, n.prototype.checkProperties = function(t, e, r, i, o) {
      var s = cl(t, e, r);
      J(s, function(a, l) {
        K(function() {
          return console.warn("AG Grid: invalid " + i + " property '" + a + "' did you mean any of these: " + l.slice(0, 8).join(", "));
        }, "invalidProperty" + i + a);
      }), Object.keys(s).length > 0 && K(function() {
        return console.warn("AG Grid: to see all the valid " + i + " properties please check: " + o);
      }, "invalidProperties" + i + o);
    }, n.prototype.checkForDeprecated = function() {
      var t = this.gridOptions;
      if (Object.entries(this.deprecatedProperties).forEach(function(r) {
        var i, o = pl(r, 2), s = o[0], a = o[1], l = t[s];
        l && (ae(a.version, s, a.newProp, a.message), a.copyToNewProp && a.newProp && t[a.newProp] == null && (t[a.newProp] = (i = a.newPropValue) !== null && i !== void 0 ? i : l));
      }), t.groupSuppressAutoColumn) {
        var e = t.treeData ? "treeDataDisplayType" : "groupDisplayType";
        console.warn("AG Grid: since v26.0, the grid property `groupSuppressAutoColumn` has been replaced by `" + e + " = 'custom'`"), t[e] = "custom";
      }
      t.immutableData && (t.getRowId ? console.warn("AG Grid: since v27.1, `immutableData` is deprecated. With the `getRowId` callback implemented, immutable data is enabled by default so you can remove `immutableData=true`.") : console.warn("AG Grid: since v27.1, `immutableData` is deprecated. To enable immutable data you must implement the `getRowId()` callback.")), t.serverSideStoreType && (console.warn("AG Grid: since v29.0, `serverSideStoreType` has been replaced by `suppressServerSideInfiniteScroll`. Set to false to use Partial Store, and true to use Full Store."), t.suppressServerSideInfiniteScroll = t.serverSideStoreType !== "partial");
    }, n.prototype.checkForViolations = function() {
      this.gridOptionsService.is("treeData") && this.treeDataViolations();
    }, n.prototype.treeDataViolations = function() {
      this.gridOptionsService.isRowModelType("clientSide") && (this.gridOptionsService.exists("getDataPath") || console.warn("AG Grid: property usingTreeData=true with rowModel=clientSide, but you did not provide getDataPath function, please provide getDataPath function if using tree data.")), this.gridOptionsService.isRowModelType("serverSide") && (this.gridOptionsService.exists("isServerSideGroup") || console.warn("AG Grid: property usingTreeData=true with rowModel=serverSide, but you did not provide isServerSideGroup function, please provide isServerSideGroup function if using tree data."), this.gridOptionsService.exists("getServerSideGroupKey") || console.warn("AG Grid: property usingTreeData=true with rowModel=serverSide, but you did not provide getServerSideGroupKey function, please provide getServerSideGroupKey function if using tree data."));
    }, ti([
      h("gridOptions")
    ], n.prototype, "gridOptions", void 0), ti([
      h("gridOptionsService")
    ], n.prototype, "gridOptionsService", void 0), ti([
      b
    ], n.prototype, "init", null), n = ti([
      A("gridOptionsValidator")
    ], n), n;
  }()
);
function Pn(n, t) {
  var e = ["groupRows", "multipleColumns", "custom", "singleColumn"];
  return e.indexOf(t) < 0 ? (console.warn("AG Grid: '" + t + "' is not a valid groupDisplayType value - possible values are: '" + e.join("', '") + "'"), !1) : t === n;
}
function up(n, t) {
  var e = ["auto", "custom"];
  return e.indexOf(t) < 0 ? (console.warn("AG Grid: '" + t + "' is not a valid treeDataDisplayType value - possible values are: '" + e.join("', '") + "'"), !1) : t === n;
}
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var cp = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Te = (
  /** @class */
  function() {
    function n(t, e, r, i) {
      this.displayedChildren = [], this.localEventService = new Rt(), this.groupId = e, this.partId = r, this.providedColumnGroup = t, this.pinned = i;
    }
    return n.createUniqueId = function(t, e) {
      return t + "_" + e;
    }, n.prototype.reset = function() {
      this.parent = null, this.children = null, this.displayedChildren = null;
    }, n.prototype.getParent = function() {
      return this.parent;
    }, n.prototype.setParent = function(t) {
      this.parent = t;
    }, n.prototype.getUniqueId = function() {
      return n.createUniqueId(this.groupId, this.partId);
    }, n.prototype.isEmptyGroup = function() {
      return this.displayedChildren.length === 0;
    }, n.prototype.isMoving = function() {
      var t = this.getProvidedColumnGroup().getLeafColumns();
      return !t || t.length === 0 ? !1 : t.every(function(e) {
        return e.isMoving();
      });
    }, n.prototype.checkLeft = function() {
      if (this.displayedChildren.forEach(function(i) {
        i instanceof n && i.checkLeft();
      }), this.displayedChildren.length > 0)
        if (this.gridOptionsService.is("enableRtl")) {
          var t = q(this.displayedChildren), e = t.getLeft();
          this.setLeft(e);
        } else {
          var r = this.displayedChildren[0].getLeft();
          this.setLeft(r);
        }
      else
        this.setLeft(null);
    }, n.prototype.getLeft = function() {
      return this.left;
    }, n.prototype.getOldLeft = function() {
      return this.oldLeft;
    }, n.prototype.setLeft = function(t) {
      this.oldLeft = t, this.left !== t && (this.left = t, this.localEventService.dispatchEvent(this.createAgEvent(n.EVENT_LEFT_CHANGED)));
    }, n.prototype.getPinned = function() {
      return this.pinned;
    }, n.prototype.createAgEvent = function(t) {
      return { type: t };
    }, n.prototype.addEventListener = function(t, e) {
      this.localEventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.localEventService.removeEventListener(t, e);
    }, n.prototype.getGroupId = function() {
      return this.groupId;
    }, n.prototype.getPartId = function() {
      return this.partId;
    }, n.prototype.isChildInThisGroupDeepSearch = function(t) {
      var e = !1;
      return this.children.forEach(function(r) {
        t === r && (e = !0), r instanceof n && r.isChildInThisGroupDeepSearch(t) && (e = !0);
      }), e;
    }, n.prototype.getActualWidth = function() {
      var t = 0;
      return this.displayedChildren && this.displayedChildren.forEach(function(e) {
        t += e.getActualWidth();
      }), t;
    }, n.prototype.isResizable = function() {
      if (!this.displayedChildren)
        return !1;
      var t = !1;
      return this.displayedChildren.forEach(function(e) {
        e.isResizable() && (t = !0);
      }), t;
    }, n.prototype.getMinWidth = function() {
      var t = 0;
      return this.displayedChildren.forEach(function(e) {
        t += e.getMinWidth() || 0;
      }), t;
    }, n.prototype.addChild = function(t) {
      this.children || (this.children = []), this.children.push(t);
    }, n.prototype.getDisplayedChildren = function() {
      return this.displayedChildren;
    }, n.prototype.getLeafColumns = function() {
      var t = [];
      return this.addLeafColumns(t), t;
    }, n.prototype.getDisplayedLeafColumns = function() {
      var t = [];
      return this.addDisplayedLeafColumns(t), t;
    }, n.prototype.getDefinition = function() {
      return this.providedColumnGroup.getColGroupDef();
    }, n.prototype.getColGroupDef = function() {
      return this.providedColumnGroup.getColGroupDef();
    }, n.prototype.isPadding = function() {
      return this.providedColumnGroup.isPadding();
    }, n.prototype.isExpandable = function() {
      return this.providedColumnGroup.isExpandable();
    }, n.prototype.isExpanded = function() {
      return this.providedColumnGroup.isExpanded();
    }, n.prototype.setExpanded = function(t) {
      this.providedColumnGroup.setExpanded(t);
    }, n.prototype.addDisplayedLeafColumns = function(t) {
      this.displayedChildren.forEach(function(e) {
        e instanceof Z ? t.push(e) : e instanceof n && e.addDisplayedLeafColumns(t);
      });
    }, n.prototype.addLeafColumns = function(t) {
      this.children.forEach(function(e) {
        e instanceof Z ? t.push(e) : e instanceof n && e.addLeafColumns(t);
      });
    }, n.prototype.getChildren = function() {
      return this.children;
    }, n.prototype.getColumnGroupShow = function() {
      return this.providedColumnGroup.getColumnGroupShow();
    }, n.prototype.getProvidedColumnGroup = function() {
      return this.providedColumnGroup;
    }, n.prototype.getOriginalColumnGroup = function() {
      return ae("27", "getOriginalColumnGroup", "getProvidedColumnGroup"), this.getProvidedColumnGroup();
    }, n.prototype.getPaddingLevel = function() {
      var t = this.getParent();
      return !this.isPadding() || !t || !t.isPadding() ? 0 : 1 + t.getPaddingLevel();
    }, n.prototype.calculateDisplayedColumns = function() {
      var t = this;
      this.displayedChildren = [];
      for (var e = this; e != null && e.isPadding(); )
        e = e.getParent();
      var r = e ? e.providedColumnGroup.isExpandable() : !1;
      if (!r) {
        this.displayedChildren = this.children, this.localEventService.dispatchEvent(this.createAgEvent(n.EVENT_DISPLAYED_CHILDREN_CHANGED));
        return;
      }
      this.children.forEach(function(i) {
        var o = i instanceof n && (!i.displayedChildren || !i.displayedChildren.length);
        if (!o) {
          var s = i.getColumnGroupShow();
          switch (s) {
            case "open":
              e.providedColumnGroup.isExpanded() && t.displayedChildren.push(i);
              break;
            case "closed":
              e.providedColumnGroup.isExpanded() || t.displayedChildren.push(i);
              break;
            default:
              t.displayedChildren.push(i);
              break;
          }
        }
      }), this.localEventService.dispatchEvent(this.createAgEvent(n.EVENT_DISPLAYED_CHILDREN_CHANGED));
    }, n.EVENT_LEFT_CHANGED = "leftChanged", n.EVENT_DISPLAYED_CHILDREN_CHANGED = "displayedChildrenChanged", cp([
      h("gridOptionsService")
    ], n.prototype, "gridOptionsService", void 0), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var dl = (
  /** @class */
  function() {
    function n() {
      this.existingIds = {};
    }
    return n.prototype.getInstanceIdForKey = function(t) {
      var e = this.existingIds[t], r;
      return typeof e != "number" ? r = 0 : r = e + 1, this.existingIds[t] = r, r;
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var pp = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ro = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Vr = "ag-Grid-AutoColumn", dp = (
  /** @class */
  function(n) {
    pp(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.createAutoGroupColumns = function(e, r) {
      var i = this, o = [], s = this.gridOptionsService.isTreeData(), a = this.gridOptionsService.isGroupMultiAutoColumn();
      return s && a && (console.warn('AG Grid: you cannot mix groupDisplayType = "multipleColumns" with treeData, only one column can be used to display groups when doing tree data'), a = !1), a ? r.forEach(function(l, u) {
        o.push(i.createOneAutoGroupColumn(e, l, u));
      }) : o.push(this.createOneAutoGroupColumn(e)), o;
    }, t.prototype.createOneAutoGroupColumn = function(e, r, i) {
      var o = this.generateDefaultColDef(r), s;
      r ? s = Vr + "-" + r.getId() : s = Vr;
      var a = this.gridOptionsService.get("autoGroupColumnDef");
      if (Oe(o, a), o = this.columnFactory.mergeColDefs(o), o.colId = s, !this.gridOptionsService.isTreeData()) {
        var l = x(o.field) && x(o.valueGetter) && x(o.filterValueGetter) && o.filter !== "agGroupColumnFilter";
        l && (o.filter = !1);
      }
      i && i > 0 && (o.headerCheckboxSelection = !1);
      var u = e.find(function(d) {
        return d.getId() == s;
      });
      if (u)
        return u.setColDef(o, null), this.columnFactory.applyColumnState(u, o), u;
      var c = this.gridOptionsService.isColumnsSortingCoupledToGroup();
      c && (o.sort || o.initialSort) && !o.field && Oe(o, { sort: null, initialSort: null }, !0, !0);
      var p = new Z(o, null, s, !0);
      return this.context.createBean(p), p;
    }, t.prototype.generateDefaultColDef = function(e) {
      var r = this.gridOptionsService.get("autoGroupColumnDef"), i = this.localeService.getLocaleTextFunc(), o = {
        headerName: i("group", "Group")
      }, s = r && (r.cellRenderer || r.cellRendererFramework || r.cellRendererSelector);
      if (s || (o.cellRenderer = "agGroupCellRenderer"), e) {
        var a = e.getColDef();
        Object.assign(o, {
          // cellRendererParams.groupKey: colDefToCopy.field;
          headerName: this.columnModel.getDisplayNameForColumn(e, "header"),
          headerValueGetter: a.headerValueGetter
        }), (a.cellRenderer || a.cellRendererFramework) && Object.assign(o, {
          cellRendererParams: {
            innerRenderer: a.cellRenderer,
            innerRendererFramework: a.cellRendererFramework,
            innerRendererParams: a.cellRendererParams
          }
        }), o.showRowGroup = e.getColId();
      } else
        o.showRowGroup = !0;
      return o;
    }, Ro([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Ro([
      h("columnFactory")
    ], t.prototype, "columnFactory", void 0), t = Ro([
      A("autoGroupColService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var hp = /[&<>"']/g, fp = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
function vp(n) {
  var t = String.fromCharCode;
  function e(p) {
    var d = [];
    if (!p)
      return [];
    for (var v = p.length, f = 0, y, C; f < v; )
      y = p.charCodeAt(f++), y >= 55296 && y <= 56319 && f < v ? (C = p.charCodeAt(f++), (C & 64512) == 56320 ? d.push(((y & 1023) << 10) + (C & 1023) + 65536) : (d.push(y), f--)) : d.push(y);
    return d;
  }
  function r(p) {
    if (p >= 55296 && p <= 57343)
      throw Error("Lone surrogate U+" + p.toString(16).toUpperCase() + " is not a scalar value");
  }
  function i(p, d) {
    return t(p >> d & 63 | 128);
  }
  function o(p) {
    if (p >= 0 && p <= 31 && p !== 10) {
      var d = p.toString(16).toUpperCase(), v = d.padStart(4, "0");
      return "_x" + v + "_";
    }
    if (!(p & 4294967168))
      return t(p);
    var f = "";
    return p & 4294965248 ? p & 4294901760 ? p & 4292870144 || (f = t(p >> 18 & 7 | 240), f += i(p, 12), f += i(p, 6)) : (r(p), f = t(p >> 12 & 15 | 224), f += i(p, 6)) : f = t(p >> 6 & 31 | 192), f += t(p & 63 | 128), f;
  }
  for (var s = e(n), a = s.length, l = -1, u, c = ""; ++l < a; )
    u = s[l], c += o(u);
  return c;
}
function hl(n) {
  return n[0].toUpperCase() + n.substr(1).toLowerCase();
}
function it(n, t) {
  if (n == null)
    return null;
  var e = n.toString().toString();
  return t ? e : e.replace(hp, function(r) {
    return fp[r];
  });
}
function fl(n) {
  if (!n || n == null)
    return null;
  var t = /([a-z])([A-Z])/g, e = /([A-Z]+)([A-Z])([a-z])/g, r = n.replace(t, "$1 $2").replace(e, "$1 $2$3").replace(/\./g, " ").split(" ");
  return r.map(function(i) {
    return i.substring(0, 1).toUpperCase() + (i.length > 1 ? i.substring(1, i.length) : "");
  }).join(" ");
}
var gp = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  utf8_encode: vp,
  capitalise: hl,
  escapeString: it,
  camelCaseToHumanText: fl
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
function st(n) {
  var t = /* @__PURE__ */ new Map();
  return n.forEach(function(e) {
    return t.set(e[0], e[1]);
  }), t;
}
function yp(n, t) {
  var e = /* @__PURE__ */ new Map();
  return n.forEach(function(r) {
    return e.set(t(r), r);
  }), e;
}
function Cp(n) {
  var t = [];
  return n.forEach(function(e, r) {
    return t.push(r);
  }), t;
}
var mp = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  convertToMap: st,
  mapById: yp,
  keys: Cp
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var wp = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), pe = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Sp = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, Ep = function(n, t) {
  var e = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && t.indexOf(r) < 0 && (e[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (e[r[i]] = n[r[i]]);
  return e;
}, Vs = function(n) {
  var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
  if (e)
    return e.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, _p = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, fr = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(_p(arguments[t]));
  return n;
}, Rp = (
  /** @class */
  function(n) {
    wp(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.primaryHeaderRowCount = 0, e.secondaryHeaderRowCount = 0, e.gridHeaderRowCount = 0, e.displayedColumnsLeft = [], e.displayedColumnsRight = [], e.displayedColumnsCenter = [], e.displayedColumns = [], e.displayedColumnsAndGroupsMap = {}, e.viewportColumns = [], e.viewportColumnsHash = "", e.headerViewportColumns = [], e.viewportColumnsCenter = [], e.headerViewportColumnsCenter = [], e.autoHeightActiveAtLeastOnce = !1, e.rowGroupColumns = [], e.valueColumns = [], e.pivotColumns = [], e.ready = !1, e.autoGroupsNeedBuilding = !1, e.forceRecreateAutoGroups = !1, e.pivotMode = !1, e.bodyWidth = 0, e.leftWidth = 0, e.rightWidth = 0, e.bodyWidthDirty = !0, e;
    }
    return t.prototype.init = function() {
      var e = this;
      this.suppressColumnVirtualisation = this.gridOptionsService.is("suppressColumnVirtualisation");
      var r = this.gridOptionsService.is("pivotMode");
      this.isPivotSettingAllowed(r) && (this.pivotMode = r), this.usingTreeData = this.gridOptionsService.isTreeData(), this.addManagedPropertyListener("groupDisplayType", function() {
        return e.onAutoGroupColumnDefChanged();
      }), this.addManagedPropertyListener("autoGroupColumnDef", function() {
        return e.onAutoGroupColumnDefChanged();
      }), this.addManagedPropertyListener("defaultColDef", function(i) {
        return e.onSharedColDefChanged(i.source);
      }), this.addManagedPropertyListener("columnTypes", function(i) {
        return e.onSharedColDefChanged(i.source);
      });
    }, t.prototype.onAutoGroupColumnDefChanged = function() {
      this.autoGroupsNeedBuilding = !0, this.forceRecreateAutoGroups = !0, this.updateGridColumns(), this.updateDisplayedColumns("gridOptionsChanged");
    }, t.prototype.onSharedColDefChanged = function(e) {
      e === void 0 && (e = "api"), this.forceRecreateAutoGroups = !0, this.createColumnsFromColumnDefs(!0, e);
    }, t.prototype.setColumnDefs = function(e, r) {
      r === void 0 && (r = "api");
      var i = !!this.columnDefs;
      this.columnDefs = e, this.createColumnsFromColumnDefs(i, r);
    }, t.prototype.destroyOldColumns = function(e, r) {
      var i = {};
      if (e) {
        this.columnUtils.depthFirstOriginalTreeSearch(null, e, function(s) {
          i[s.getInstanceId()] = s;
        }), r && this.columnUtils.depthFirstOriginalTreeSearch(null, r, function(s) {
          i[s.getInstanceId()] = null;
        });
        var o = Object.values(i).filter(function(s) {
          return s != null;
        });
        this.destroyBeans(o);
      }
    }, t.prototype.destroyColumns = function() {
      this.destroyOldColumns(this.primaryColumnTree), this.destroyOldColumns(this.secondaryBalancedTree), this.destroyOldColumns(this.groupAutoColsBalancedTree);
    }, t.prototype.createColumnsFromColumnDefs = function(e, r) {
      var i = this;
      r === void 0 && (r = "api");
      var o = e ? this.compareColumnStatesAndDispatchEvents(r) : void 0;
      this.valueCache.expire(), this.autoGroupsNeedBuilding = !0;
      var s = this.primaryColumns, a = this.primaryColumnTree, l = this.columnFactory.createColumnTree(this.columnDefs, !0, a);
      this.destroyOldColumns(this.primaryColumnTree, l.columnTree), this.primaryColumnTree = l.columnTree, this.primaryHeaderRowCount = l.treeDept + 1, this.primaryColumns = this.getColumnsFromTree(this.primaryColumnTree), this.primaryColumnsMap = {}, this.primaryColumns.forEach(function(p) {
        return i.primaryColumnsMap[p.getId()] = p;
      }), this.extractRowGroupColumns(r, s), this.extractPivotColumns(r, s), this.extractValueColumns(r, s), this.ready = !0;
      var u = this.gridColsArePrimary === void 0, c = this.gridColsArePrimary || u;
      c && (this.updateGridColumns(), e && !this.gridOptionsService.is("maintainColumnOrder") && this.orderGridColumnsLikePrimary(), this.updateDisplayedColumns(r), this.checkViewportColumns()), this.dispatchEverythingChanged(r), o && o(), this.dispatchNewColumnsLoaded();
    }, t.prototype.dispatchNewColumnsLoaded = function() {
      var e = {
        type: g.EVENT_NEW_COLUMNS_LOADED
      };
      this.eventService.dispatchEvent(e);
    }, t.prototype.dispatchEverythingChanged = function(e) {
      e === void 0 && (e = "api");
      var r = {
        type: g.EVENT_COLUMN_EVERYTHING_CHANGED,
        source: e
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.orderGridColumnsLikePrimary = function() {
      var e = this, r = this.primaryColumns;
      r && (this.gridColumns.sort(function(i, o) {
        var s = r.indexOf(i), a = r.indexOf(o), l = s >= 0, u = a >= 0;
        if (l && u)
          return s - a;
        if (l)
          return 1;
        if (u)
          return -1;
        var c = e.gridColumns.indexOf(i), p = e.gridColumns.indexOf(o);
        return c - p;
      }), this.gridColumns = this.placeLockedColumns(this.gridColumns));
    }, t.prototype.getAllDisplayedAutoHeightCols = function() {
      return this.displayedAutoHeightCols;
    }, t.prototype.setViewport = function() {
      this.gridOptionsService.is("enableRtl") ? (this.viewportLeft = this.bodyWidth - this.scrollPosition - this.scrollWidth, this.viewportRight = this.bodyWidth - this.scrollPosition) : (this.viewportLeft = this.scrollPosition, this.viewportRight = this.scrollWidth + this.scrollPosition);
    }, t.prototype.getDisplayedColumnsStartingAt = function(e) {
      for (var r = e, i = []; r != null; )
        i.push(r), r = this.getDisplayedColAfter(r);
      return i;
    }, t.prototype.checkViewportColumns = function() {
      if (this.displayedColumnsCenter != null) {
        var e = this.extractViewport();
        if (e) {
          var r = {
            type: g.EVENT_VIRTUAL_COLUMNS_CHANGED
          };
          this.eventService.dispatchEvent(r);
        }
      }
    }, t.prototype.setViewportPosition = function(e, r) {
      (e !== this.scrollWidth || r !== this.scrollPosition || this.bodyWidthDirty) && (this.scrollWidth = e, this.scrollPosition = r, this.bodyWidthDirty = !0, this.setViewport(), this.ready && this.checkViewportColumns());
    }, t.prototype.isPivotMode = function() {
      return this.pivotMode;
    }, t.prototype.isPivotSettingAllowed = function(e) {
      return e && this.gridOptionsService.isTreeData() ? (console.warn("AG Grid: Pivot mode not available in conjunction Tree Data i.e. 'gridOptions.treeData: true'"), !1) : !0;
    }, t.prototype.setPivotMode = function(e, r) {
      if (r === void 0 && (r = "api"), !(e === this.pivotMode || !this.isPivotSettingAllowed(this.pivotMode))) {
        this.pivotMode = e, this.autoGroupsNeedBuilding = !0, this.updateGridColumns(), this.updateDisplayedColumns(r);
        var i = {
          type: g.EVENT_COLUMN_PIVOT_MODE_CHANGED
        };
        this.eventService.dispatchEvent(i);
      }
    }, t.prototype.getSecondaryPivotColumn = function(e, r) {
      if (x(this.secondaryColumns))
        return null;
      var i = this.getPrimaryColumn(r), o = null;
      return this.secondaryColumns.forEach(function(s) {
        var a = s.getColDef().pivotKeys, l = s.getColDef().pivotValueColumn, u = Ct(a, e), c = l === i;
        u && c && (o = s);
      }), o;
    }, t.prototype.setBeans = function(e) {
      this.logger = e.create("columnModel");
    }, t.prototype.setFirstRightAndLastLeftPinned = function(e) {
      var r, i;
      this.gridOptionsService.is("enableRtl") ? (r = this.displayedColumnsLeft ? this.displayedColumnsLeft[0] : null, i = this.displayedColumnsRight ? q(this.displayedColumnsRight) : null) : (r = this.displayedColumnsLeft ? q(this.displayedColumnsLeft) : null, i = this.displayedColumnsRight ? this.displayedColumnsRight[0] : null), this.gridColumns.forEach(function(o) {
        o.setLastLeftPinned(o === r, e), o.setFirstRightPinned(o === i, e);
      });
    }, t.prototype.autoSizeColumns = function(e) {
      var r = this, i = e.columns, o = e.skipHeader, s = e.skipHeaderGroups, a = e.stopAtGroup, l = e.source, u = l === void 0 ? "api" : l;
      this.animationFrameService.flushAllFrames();
      for (var c = [], p = -1, d = o ?? this.gridOptionsService.is("skipHeaderOnAutoSize"), v = s ?? d; p !== 0; )
        p = 0, this.actionOnGridColumns(i, function(f) {
          if (c.indexOf(f) >= 0)
            return !1;
          var y = r.autoWidthCalculator.getPreferredWidthForColumn(f, d);
          if (y > 0) {
            var C = r.normaliseColumnWidth(f, y);
            f.setActualWidth(C, u), c.push(f), p++;
          }
          return !0;
        }, u);
      v || this.autoSizeColumnGroupsByColumns(i, u, a), this.dispatchColumnResizedEvent(c, !0, "autosizeColumns");
    }, t.prototype.dispatchColumnResizedEvent = function(e, r, i, o) {
      if (o === void 0 && (o = null), e && e.length) {
        var s = {
          type: g.EVENT_COLUMN_RESIZED,
          columns: e,
          column: e.length === 1 ? e[0] : null,
          flexColumns: o,
          finished: r,
          source: i
        };
        this.eventService.dispatchEvent(s);
      }
    }, t.prototype.dispatchColumnChangedEvent = function(e, r, i) {
      var o = {
        type: e,
        columns: r,
        column: r && r.length == 1 ? r[0] : null,
        source: i
      };
      this.eventService.dispatchEvent(o);
    }, t.prototype.dispatchColumnMovedEvent = function(e) {
      var r = e.movedColumns, i = e.source, o = e.toIndex, s = e.finished, a = {
        type: g.EVENT_COLUMN_MOVED,
        columns: r,
        column: r && r.length === 1 ? r[0] : null,
        toIndex: o,
        finished: s,
        source: i
      };
      this.eventService.dispatchEvent(a);
    }, t.prototype.dispatchColumnPinnedEvent = function(e, r) {
      if (e.length) {
        var i = e.length === 1 ? e[0] : null, o = this.getCommonValue(e, function(a) {
          return a.getPinned();
        }), s = {
          type: g.EVENT_COLUMN_PINNED,
          // mistake in typing, 'undefined' should be allowed, as 'null' means 'not pinned'
          pinned: o ?? null,
          columns: e,
          column: i,
          source: r
        };
        this.eventService.dispatchEvent(s);
      }
    }, t.prototype.dispatchColumnVisibleEvent = function(e, r) {
      if (e.length) {
        var i = e.length === 1 ? e[0] : null, o = this.getCommonValue(e, function(a) {
          return a.isVisible();
        }), s = {
          type: g.EVENT_COLUMN_VISIBLE,
          visible: o,
          columns: e,
          column: i,
          source: r
        };
        this.eventService.dispatchEvent(s);
      }
    }, t.prototype.autoSizeColumn = function(e, r, i) {
      i === void 0 && (i = "api"), e && this.autoSizeColumns({ columns: [e], skipHeader: r, skipHeaderGroups: !0, source: i });
    }, t.prototype.autoSizeColumnGroupsByColumns = function(e, r, i) {
      var o, s, a, l, u = /* @__PURE__ */ new Set(), c = this.getGridColumns(e);
      c.forEach(function(E) {
        for (var R = E.getParent(); R && R != i; )
          R.isPadding() || u.add(R), R = R.getParent();
      });
      var p, d = [];
      try {
        for (var v = Vs(u), f = v.next(); !f.done; f = v.next()) {
          var y = f.value;
          try {
            for (var C = (a = void 0, Vs(this.ctrlsService.getHeaderRowContainerCtrls())), m = C.next(); !m.done; m = C.next()) {
              var w = m.value;
              if (p = w.getHeaderCtrlForColumn(y), p)
                break;
            }
          } catch (E) {
            a = { error: E };
          } finally {
            try {
              m && !m.done && (l = C.return) && l.call(C);
            } finally {
              if (a)
                throw a.error;
            }
          }
          p && p.resizeLeafColumnsToFit(r);
        }
      } catch (E) {
        o = { error: E };
      } finally {
        try {
          f && !f.done && (s = v.return) && s.call(v);
        } finally {
          if (o)
            throw o.error;
        }
      }
      return d;
    }, t.prototype.autoSizeAllColumns = function(e, r) {
      r === void 0 && (r = "api");
      var i = this.getAllDisplayedColumns();
      this.autoSizeColumns({ columns: i, skipHeader: e, source: r });
    }, t.prototype.getColumnsFromTree = function(e) {
      var r = [], i = function(o) {
        for (var s = 0; s < o.length; s++) {
          var a = o[s];
          a instanceof Z ? r.push(a) : a instanceof ie && i(a.getChildren());
        }
      };
      return i(e), r;
    }, t.prototype.getAllDisplayedTrees = function() {
      return this.displayedTreeLeft && this.displayedTreeRight && this.displayedTreeCentre ? this.displayedTreeLeft.concat(this.displayedTreeCentre).concat(this.displayedTreeRight) : null;
    }, t.prototype.getPrimaryColumnTree = function() {
      return this.primaryColumnTree;
    }, t.prototype.getHeaderRowCount = function() {
      return this.gridHeaderRowCount;
    }, t.prototype.getDisplayedTreeLeft = function() {
      return this.displayedTreeLeft;
    }, t.prototype.getDisplayedTreeRight = function() {
      return this.displayedTreeRight;
    }, t.prototype.getDisplayedTreeCentre = function() {
      return this.displayedTreeCentre;
    }, t.prototype.isColumnDisplayed = function(e) {
      return this.getAllDisplayedColumns().indexOf(e) >= 0;
    }, t.prototype.getAllDisplayedColumns = function() {
      return this.displayedColumns;
    }, t.prototype.getViewportColumns = function() {
      return this.viewportColumns;
    }, t.prototype.getDisplayedLeftColumnsForRow = function(e) {
      return this.colSpanActive ? this.getDisplayedColumnsForRow(e, this.displayedColumnsLeft) : this.displayedColumnsLeft;
    }, t.prototype.getDisplayedRightColumnsForRow = function(e) {
      return this.colSpanActive ? this.getDisplayedColumnsForRow(e, this.displayedColumnsRight) : this.displayedColumnsRight;
    }, t.prototype.isColSpanActive = function() {
      return this.colSpanActive;
    }, t.prototype.getDisplayedColumnsForRow = function(e, r, i, o) {
      for (var s = [], a = null, l = function(p) {
        var d = r[p], v = r.length - p, f = Math.min(d.getColSpan(e), v), y = [d];
        if (f > 1) {
          for (var C = f - 1, m = 1; m <= C; m++)
            y.push(r[p + m]);
          p += C;
        }
        var w;
        if (i ? (w = !1, y.forEach(function(R) {
          i(R) && (w = !0);
        })) : w = !0, w) {
          if (s.length === 0 && a) {
            var E = o ? o(d) : !1;
            E && s.push(a);
          }
          s.push(d);
        }
        a = d, u = p;
      }, u, c = 0; c < r.length; c++)
        l(c), c = u;
      return s;
    }, t.prototype.getViewportCenterColumnsForRow = function(e) {
      var r = this;
      if (!this.colSpanActive)
        return this.viewportColumnsCenter;
      var i = function(s) {
        var a = s.getLeft();
        return O(a) && a > r.viewportLeft;
      }, o = this.suppressColumnVirtualisation ? null : this.isColumnInRowViewport.bind(this);
      return this.getDisplayedColumnsForRow(e, this.displayedColumnsCenter, o, i);
    }, t.prototype.getAriaColumnIndex = function(e) {
      return this.getAllGridColumns().indexOf(e) + 1;
    }, t.prototype.isColumnInHeaderViewport = function(e) {
      return e.isAutoHeaderHeight() ? !0 : this.isColumnInRowViewport(e);
    }, t.prototype.isColumnInRowViewport = function(e) {
      if (e.isAutoHeight())
        return !0;
      var r = e.getLeft() || 0, i = r + e.getActualWidth(), o = this.viewportLeft - 200, s = this.viewportRight + 200, a = r < o && i < o, l = r > s && i > s;
      return !a && !l;
    }, t.prototype.getDisplayedColumnsLeftWidth = function() {
      return this.getWidthOfColsInList(this.displayedColumnsLeft);
    }, t.prototype.getDisplayedColumnsRightWidth = function() {
      return this.getWidthOfColsInList(this.displayedColumnsRight);
    }, t.prototype.updatePrimaryColumnList = function(e, r, i, o, s, a) {
      var l = this;
      if (a === void 0 && (a = "api"), !(!e || De(e))) {
        var u = !1;
        if (e.forEach(function(p) {
          var d = l.getPrimaryColumn(p);
          if (d) {
            if (i) {
              if (r.indexOf(d) >= 0)
                return;
              r.push(d);
            } else {
              if (r.indexOf(d) < 0)
                return;
              ye(r, d);
            }
            o(d), u = !0;
          }
        }), !!u) {
          this.autoGroupsNeedBuilding && this.updateGridColumns(), this.updateDisplayedColumns(a);
          var c = {
            type: s,
            columns: r,
            column: r.length === 1 ? r[0] : null,
            source: a
          };
          this.eventService.dispatchEvent(c);
        }
      }
    }, t.prototype.setRowGroupColumns = function(e, r) {
      r === void 0 && (r = "api"), this.autoGroupsNeedBuilding = !0, this.setPrimaryColumnList(e, this.rowGroupColumns, g.EVENT_COLUMN_ROW_GROUP_CHANGED, this.setRowGroupActive.bind(this), r);
    }, t.prototype.setRowGroupActive = function(e, r, i) {
      e !== r.isRowGroupActive() && (r.setRowGroupActive(e, i), e && !this.gridOptionsService.is("suppressRowGroupHidesColumns") && this.setColumnVisible(r, !1, i), !e && !this.gridOptionsService.is("suppressMakeColumnVisibleAfterUnGroup") && this.setColumnVisible(r, !0, i));
    }, t.prototype.addRowGroupColumn = function(e, r) {
      r === void 0 && (r = "api"), e && this.addRowGroupColumns([e], r);
    }, t.prototype.addRowGroupColumns = function(e, r) {
      r === void 0 && (r = "api"), this.autoGroupsNeedBuilding = !0, this.updatePrimaryColumnList(e, this.rowGroupColumns, !0, this.setRowGroupActive.bind(this, !0), g.EVENT_COLUMN_ROW_GROUP_CHANGED, r);
    }, t.prototype.removeRowGroupColumns = function(e, r) {
      r === void 0 && (r = "api"), this.autoGroupsNeedBuilding = !0, this.updatePrimaryColumnList(e, this.rowGroupColumns, !1, this.setRowGroupActive.bind(this, !1), g.EVENT_COLUMN_ROW_GROUP_CHANGED, r);
    }, t.prototype.removeRowGroupColumn = function(e, r) {
      r === void 0 && (r = "api"), e && this.removeRowGroupColumns([e], r);
    }, t.prototype.addPivotColumns = function(e, r) {
      r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.pivotColumns, !0, function(i) {
        return i.setPivotActive(!0, r);
      }, g.EVENT_COLUMN_PIVOT_CHANGED, r);
    }, t.prototype.setPivotColumns = function(e, r) {
      r === void 0 && (r = "api"), this.setPrimaryColumnList(e, this.pivotColumns, g.EVENT_COLUMN_PIVOT_CHANGED, function(i, o) {
        o.setPivotActive(i, r);
      }, r);
    }, t.prototype.addPivotColumn = function(e, r) {
      r === void 0 && (r = "api"), this.addPivotColumns([e], r);
    }, t.prototype.removePivotColumns = function(e, r) {
      r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.pivotColumns, !1, function(i) {
        return i.setPivotActive(!1, r);
      }, g.EVENT_COLUMN_PIVOT_CHANGED, r);
    }, t.prototype.removePivotColumn = function(e, r) {
      r === void 0 && (r = "api"), this.removePivotColumns([e], r);
    }, t.prototype.setPrimaryColumnList = function(e, r, i, o, s) {
      var a = this;
      r.length = 0, O(e) && e.forEach(function(l) {
        var u = a.getPrimaryColumn(l);
        u && r.push(u);
      }), (this.primaryColumns || []).forEach(function(l) {
        var u = r.indexOf(l) >= 0;
        o(u, l);
      }), this.autoGroupsNeedBuilding && this.updateGridColumns(), this.updateDisplayedColumns(s), this.dispatchColumnChangedEvent(i, r, s);
    }, t.prototype.setValueColumns = function(e, r) {
      r === void 0 && (r = "api"), this.setPrimaryColumnList(e, this.valueColumns, g.EVENT_COLUMN_VALUE_CHANGED, this.setValueActive.bind(this), r);
    }, t.prototype.setValueActive = function(e, r, i) {
      if (e !== r.isValueActive() && (r.setValueActive(e, i), e && !r.getAggFunc())) {
        var o = this.aggFuncService.getDefaultAggFunc(r);
        r.setAggFunc(o);
      }
    }, t.prototype.addValueColumns = function(e, r) {
      r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.valueColumns, !0, this.setValueActive.bind(this, !0), g.EVENT_COLUMN_VALUE_CHANGED, r);
    }, t.prototype.addValueColumn = function(e, r) {
      r === void 0 && (r = "api"), e && this.addValueColumns([e], r);
    }, t.prototype.removeValueColumn = function(e, r) {
      r === void 0 && (r = "api"), this.removeValueColumns([e], r);
    }, t.prototype.removeValueColumns = function(e, r) {
      r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.valueColumns, !1, this.setValueActive.bind(this, !1), g.EVENT_COLUMN_VALUE_CHANGED, r);
    }, t.prototype.normaliseColumnWidth = function(e, r) {
      var i = e.getMinWidth();
      O(i) && r < i && (r = i);
      var o = e.getMaxWidth();
      return O(o) && e.isGreaterThanMax(r) && (r = o), r;
    }, t.prototype.getPrimaryOrGridColumn = function(e) {
      var r = this.getPrimaryColumn(e);
      return r || this.getGridColumn(e);
    }, t.prototype.setColumnWidths = function(e, r, i, o) {
      var s = this;
      o === void 0 && (o = "api");
      var a = [];
      e.forEach(function(l) {
        var u = s.getPrimaryOrGridColumn(l.key);
        if (u) {
          a.push({
            width: l.newWidth,
            ratios: [1],
            columns: [u]
          });
          var c = s.gridOptionsService.get("colResizeDefault") === "shift";
          if (c && (r = !r), r) {
            var p = s.getDisplayedColAfter(u);
            if (!p)
              return;
            var d = u.getActualWidth() - l.newWidth, v = p.getActualWidth() + d;
            a.push({
              width: v,
              ratios: [1],
              columns: [p]
            });
          }
        }
      }), a.length !== 0 && this.resizeColumnSets({
        resizeSets: a,
        finished: i,
        source: o
      });
    }, t.prototype.checkMinAndMaxWidthsForSet = function(e) {
      var r = e.columns, i = e.width, o = 0, s = 0, a = !0;
      r.forEach(function(c) {
        var p = c.getMinWidth();
        o += p || 0;
        var d = c.getMaxWidth();
        O(d) && d > 0 ? s += d : a = !1;
      });
      var l = i >= o, u = !a || i <= s;
      return l && u;
    }, t.prototype.resizeColumnSets = function(e) {
      var r = this, i = e.resizeSets, o = e.finished, s = e.source, a = !i || i.every(function(f) {
        return r.checkMinAndMaxWidthsForSet(f);
      });
      if (!a) {
        if (o) {
          var l = i && i.length > 0 ? i[0].columns : null;
          this.dispatchColumnResizedEvent(l, o, s);
        }
        return;
      }
      var u = [], c = [];
      i.forEach(function(f) {
        var y = f.width, C = f.columns, m = f.ratios, w = {}, E = {};
        C.forEach(function(L) {
          return c.push(L);
        });
        for (var R = !0, D = 0, M = function() {
          if (D++, D > 1e3)
            return console.error("AG Grid: infinite loop in resizeColumnSets"), "break";
          R = !1;
          var L = [], H = 0, B = y;
          C.forEach(function(U, ce) {
            var Se = E[U.getId()];
            if (Se)
              B -= w[U.getId()];
            else {
              L.push(U);
              var re = m[ce];
              H += re;
            }
          });
          var Q = 1 / H;
          L.forEach(function(U, ce) {
            var Se = ce === L.length - 1, re;
            Se ? re = B : (re = Math.round(m[ce] * y * Q), B -= re);
            var X = U.getMinWidth(), Ce = U.getMaxWidth();
            O(X) && re < X ? (re = X, E[U.getId()] = !0, R = !0) : O(Ce) && Ce > 0 && re > Ce && (re = Ce, E[U.getId()] = !0, R = !0), w[U.getId()] = re;
          });
        }; R; ) {
          var I = M();
          if (I === "break")
            break;
        }
        C.forEach(function(L) {
          var H = w[L.getId()], B = L.getActualWidth();
          B !== H && (L.setActualWidth(H, s), u.push(L));
        });
      });
      var p = u.length > 0, d = [];
      p && (d = this.refreshFlexedColumns({ resizingCols: c, skipSetLeft: !0 }), this.setLeftValues(s), this.updateBodyWidths(), this.checkViewportColumns());
      var v = c.concat(d);
      (p || o) && this.dispatchColumnResizedEvent(v, o, s, d);
    }, t.prototype.setColumnAggFunc = function(e, r, i) {
      if (i === void 0 && (i = "api"), !!e) {
        var o = this.getPrimaryColumn(e);
        o && (o.setAggFunc(r), this.dispatchColumnChangedEvent(g.EVENT_COLUMN_VALUE_CHANGED, [o], i));
      }
    }, t.prototype.moveRowGroupColumn = function(e, r, i) {
      i === void 0 && (i = "api");
      var o = this.rowGroupColumns[e];
      this.rowGroupColumns.splice(e, 1), this.rowGroupColumns.splice(r, 0, o);
      var s = {
        type: g.EVENT_COLUMN_ROW_GROUP_CHANGED,
        columns: this.rowGroupColumns,
        column: this.rowGroupColumns.length === 1 ? this.rowGroupColumns[0] : null,
        source: i
      };
      this.eventService.dispatchEvent(s);
    }, t.prototype.moveColumns = function(e, r, i, o) {
      if (i === void 0 && (i = "api"), o === void 0 && (o = !0), this.columnAnimationService.start(), r > this.gridColumns.length - e.length) {
        console.warn("AG Grid: tried to insert columns in invalid location, toIndex = " + r), console.warn("AG Grid: remember that you should not count the moving columns when calculating the new index");
        return;
      }
      var s = this.getGridColumns(e), a = !this.doesMovePassRules(s, r);
      a || (On(this.gridColumns, s, r), this.updateDisplayedColumns(i), this.dispatchColumnMovedEvent({ movedColumns: s, source: i, toIndex: r, finished: o }), this.columnAnimationService.finish());
    }, t.prototype.doesMovePassRules = function(e, r) {
      var i = this.getProposedColumnOrder(e, r);
      return this.doesOrderPassRules(i);
    }, t.prototype.doesOrderPassRules = function(e) {
      return !(!this.doesMovePassMarryChildren(e) || !this.doesMovePassLockedPositions(e));
    }, t.prototype.getProposedColumnOrder = function(e, r) {
      var i = this.gridColumns.slice();
      return On(i, e, r), i;
    }, t.prototype.sortColumnsLikeGridColumns = function(e) {
      var r = this;
      if (!(!e || e.length <= 1)) {
        var i = e.filter(function(o) {
          return r.gridColumns.indexOf(o) < 0;
        }).length > 0;
        i || e.sort(function(o, s) {
          var a = r.gridColumns.indexOf(o), l = r.gridColumns.indexOf(s);
          return a - l;
        });
      }
    }, t.prototype.doesMovePassLockedPositions = function(e) {
      var r = 0, i = !0, o = function(s) {
        return s ? s === !0 || s === "left" ? 0 : 2 : 1;
      };
      return e.forEach(function(s) {
        var a = o(s.getColDef().lockPosition);
        a < r && (i = !1), r = a;
      }), i;
    }, t.prototype.doesMovePassMarryChildren = function(e) {
      var r = !0;
      return this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function(i) {
        if (i instanceof ie) {
          var o = i, s = o.getColGroupDef(), a = s && s.marryChildren;
          if (a) {
            var l = [];
            o.getLeafColumns().forEach(function(v) {
              var f = e.indexOf(v);
              l.push(f);
            });
            var u = Math.max.apply(Math, l), c = Math.min.apply(Math, l), p = u - c, d = o.getLeafColumns().length - 1;
            p > d && (r = !1);
          }
        }
      }), r;
    }, t.prototype.moveColumn = function(e, r, i) {
      i === void 0 && (i = "api"), this.moveColumns([e], r, i);
    }, t.prototype.moveColumnByIndex = function(e, r, i) {
      i === void 0 && (i = "api");
      var o = this.gridColumns[e];
      this.moveColumn(o, r, i);
    }, t.prototype.getColumnDefs = function() {
      var e = this;
      if (this.primaryColumns) {
        var r = this.primaryColumns.slice();
        return this.gridColsArePrimary ? r.sort(function(i, o) {
          return e.gridColumns.indexOf(i) - e.gridColumns.indexOf(o);
        }) : this.lastPrimaryOrder && r.sort(function(i, o) {
          return e.lastPrimaryOrder.indexOf(i) - e.lastPrimaryOrder.indexOf(o);
        }), this.columnDefFactory.buildColumnDefs(r, this.rowGroupColumns, this.pivotColumns);
      }
    }, t.prototype.getBodyContainerWidth = function() {
      return this.bodyWidth;
    }, t.prototype.getContainerWidth = function(e) {
      switch (e) {
        case "left":
          return this.leftWidth;
        case "right":
          return this.rightWidth;
        default:
          return this.bodyWidth;
      }
    }, t.prototype.updateBodyWidths = function() {
      var e = this.getWidthOfColsInList(this.displayedColumnsCenter), r = this.getWidthOfColsInList(this.displayedColumnsLeft), i = this.getWidthOfColsInList(this.displayedColumnsRight);
      this.bodyWidthDirty = this.bodyWidth !== e;
      var o = this.bodyWidth !== e || this.leftWidth !== r || this.rightWidth !== i;
      if (o) {
        this.bodyWidth = e, this.leftWidth = r, this.rightWidth = i;
        var s = {
          type: g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED
        };
        this.eventService.dispatchEvent(s);
      }
    }, t.prototype.getValueColumns = function() {
      return this.valueColumns ? this.valueColumns : [];
    }, t.prototype.getPivotColumns = function() {
      return this.pivotColumns ? this.pivotColumns : [];
    }, t.prototype.isPivotActive = function() {
      return this.pivotColumns && this.pivotColumns.length > 0 && this.pivotMode;
    }, t.prototype.getRowGroupColumns = function() {
      return this.rowGroupColumns ? this.rowGroupColumns : [];
    }, t.prototype.getDisplayedCenterColumns = function() {
      return this.displayedColumnsCenter;
    }, t.prototype.getDisplayedLeftColumns = function() {
      return this.displayedColumnsLeft;
    }, t.prototype.getDisplayedRightColumns = function() {
      return this.displayedColumnsRight;
    }, t.prototype.getDisplayedColumns = function(e) {
      switch (e) {
        case "left":
          return this.getDisplayedLeftColumns();
        case "right":
          return this.getDisplayedRightColumns();
        default:
          return this.getDisplayedCenterColumns();
      }
    }, t.prototype.getAllPrimaryColumns = function() {
      return this.primaryColumns ? this.primaryColumns.slice() : null;
    }, t.prototype.getSecondaryColumns = function() {
      return this.secondaryColumns ? this.secondaryColumns.slice() : null;
    }, t.prototype.getAllColumnsForQuickFilter = function() {
      return this.columnsForQuickFilter;
    }, t.prototype.getAllGridColumns = function() {
      return this.gridColumns;
    }, t.prototype.isEmpty = function() {
      return De(this.gridColumns);
    }, t.prototype.isRowGroupEmpty = function() {
      return De(this.rowGroupColumns);
    }, t.prototype.setColumnVisible = function(e, r, i) {
      i === void 0 && (i = "api"), this.setColumnsVisible([e], r, i);
    }, t.prototype.setColumnsVisible = function(e, r, i) {
      r === void 0 && (r = !1), i === void 0 && (i = "api"), this.applyColumnState({
        state: e.map(function(o) {
          return {
            colId: typeof o == "string" ? o : o.getColId(),
            hide: !r
          };
        })
      }, i);
    }, t.prototype.setColumnPinned = function(e, r, i) {
      i === void 0 && (i = "api"), e && this.setColumnsPinned([e], r, i);
    }, t.prototype.setColumnsPinned = function(e, r, i) {
      if (i === void 0 && (i = "api"), this.gridOptionsService.isDomLayout("print")) {
        console.warn("AG Grid: Changing the column pinning status is not allowed with domLayout='print'");
        return;
      }
      this.columnAnimationService.start();
      var o;
      r === !0 || r === "left" ? o = "left" : r === "right" ? o = "right" : o = null, this.actionOnGridColumns(e, function(s) {
        return s.getPinned() !== o ? (s.setPinned(o), !0) : !1;
      }, i, function() {
        var s = {
          type: g.EVENT_COLUMN_PINNED,
          pinned: o,
          column: null,
          columns: null,
          source: i
        };
        return s;
      }), this.columnAnimationService.finish();
    }, t.prototype.actionOnGridColumns = function(e, r, i, o) {
      var s = this;
      if (!De(e)) {
        var a = [];
        if (e.forEach(function(u) {
          var c = s.getGridColumn(u);
          if (c) {
            var p = r(c);
            p !== !1 && a.push(c);
          }
        }), !!a.length && (this.updateDisplayedColumns(i), O(o) && o)) {
          var l = o();
          l.columns = a, l.column = a.length === 1 ? a[0] : null, this.eventService.dispatchEvent(l);
        }
      }
    }, t.prototype.getDisplayedColBefore = function(e) {
      var r = this.getAllDisplayedColumns(), i = r.indexOf(e);
      return i > 0 ? r[i - 1] : null;
    }, t.prototype.getDisplayedColAfter = function(e) {
      var r = this.getAllDisplayedColumns(), i = r.indexOf(e);
      return i < r.length - 1 ? r[i + 1] : null;
    }, t.prototype.getDisplayedGroupAfter = function(e) {
      return this.getDisplayedGroupAtDirection(e, "After");
    }, t.prototype.getDisplayedGroupBefore = function(e) {
      return this.getDisplayedGroupAtDirection(e, "Before");
    }, t.prototype.getDisplayedGroupAtDirection = function(e, r) {
      for (var i = e.getProvidedColumnGroup().getLevel() + e.getPaddingLevel(), o = e.getDisplayedLeafColumns(), s = r === "After" ? q(o) : o[0], a = "getDisplayedCol" + r; ; ) {
        var l = this[a](s);
        if (!l)
          return null;
        var u = this.getColumnGroupAtLevel(l, i);
        if (u !== e)
          return u;
      }
    }, t.prototype.getColumnGroupAtLevel = function(e, r) {
      for (var i = e.getParent(), o, s; ; ) {
        var a = i.getProvidedColumnGroup();
        if (o = a.getLevel(), s = i.getPaddingLevel(), o + s <= r)
          break;
        i = i.getParent();
      }
      return i;
    }, t.prototype.isPinningLeft = function() {
      return this.displayedColumnsLeft.length > 0;
    }, t.prototype.isPinningRight = function() {
      return this.displayedColumnsRight.length > 0;
    }, t.prototype.getPrimaryAndSecondaryAndAutoColumns = function() {
      var e;
      return (e = []).concat.apply(e, fr([
        this.primaryColumns || [],
        this.groupAutoColumns || [],
        this.secondaryColumns || []
      ]));
    }, t.prototype.createStateItemFromColumn = function(e) {
      var r = e.isRowGroupActive() ? this.rowGroupColumns.indexOf(e) : null, i = e.isPivotActive() ? this.pivotColumns.indexOf(e) : null, o = e.isValueActive() ? e.getAggFunc() : null, s = e.getSort() != null ? e.getSort() : null, a = e.getSortIndex() != null ? e.getSortIndex() : null, l = e.getFlex() != null && e.getFlex() > 0 ? e.getFlex() : null, u = {
        colId: e.getColId(),
        width: e.getActualWidth(),
        hide: !e.isVisible(),
        pinned: e.getPinned(),
        sort: s,
        sortIndex: a,
        aggFunc: o,
        rowGroup: e.isRowGroupActive(),
        rowGroupIndex: r,
        pivot: e.isPivotActive(),
        pivotIndex: i,
        flex: l
      };
      return u;
    }, t.prototype.getColumnState = function() {
      if (x(this.primaryColumns) || !this.isAlive())
        return [];
      var e = this.getPrimaryAndSecondaryAndAutoColumns(), r = e.map(this.createStateItemFromColumn.bind(this));
      return this.orderColumnStateList(r), r;
    }, t.prototype.orderColumnStateList = function(e) {
      var r = st(this.gridColumns.map(function(i, o) {
        return [i.getColId(), o];
      }));
      e.sort(function(i, o) {
        var s = r.has(i.colId) ? r.get(i.colId) : -1, a = r.has(o.colId) ? r.get(o.colId) : -1;
        return s - a;
      });
    }, t.prototype.resetColumnState = function(e) {
      e === void 0 && (e = "api");
      var r = this.getColumnsFromTree(this.primaryColumnTree), i = [], o = 1e3, s = 1e3, a = [];
      this.groupAutoColumns && (a = a.concat(this.groupAutoColumns)), r && (a = a.concat(r)), a.forEach(function(l) {
        var u = function(I, L) {
          return I ?? L ?? null;
        }, c = l.getColDef(), p = u(c.sort, c.initialSort), d = u(c.sortIndex, c.initialSortIndex), v = u(c.hide, c.initialHide), f = u(c.pinned, c.initialPinned), y = u(c.width, c.initialWidth), C = u(c.flex, c.initialFlex), m = u(c.rowGroupIndex, c.initialRowGroupIndex), w = u(c.rowGroup, c.initialRowGroup);
        m == null && (w == null || w == !1) && (m = null, w = null);
        var E = u(c.pivotIndex, c.initialPivotIndex), R = u(c.pivot, c.initialPivot);
        E == null && (R == null || R == !1) && (E = null, R = null);
        var D = u(c.aggFunc, c.initialAggFunc), M = {
          colId: l.getColId(),
          sort: p,
          sortIndex: d,
          hide: v,
          pinned: f,
          width: y,
          flex: C,
          rowGroup: w,
          rowGroupIndex: m,
          pivot: R,
          pivotIndex: E,
          aggFunc: D
        };
        x(m) && w && (M.rowGroupIndex = o++), x(E) && R && (M.pivotIndex = s++), i.push(M);
      }), this.applyColumnState({ state: i, applyOrder: !0 }, e);
    }, t.prototype.applyColumnState = function(e, r) {
      var i = this;
      if (De(this.primaryColumns))
        return !1;
      if (e && e.state && !e.state.forEach)
        return console.warn("AG Grid: applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state."), !1;
      var o = function(u, c, p) {
        var d = i.compareColumnStatesAndDispatchEvents(r);
        i.autoGroupsNeedBuilding = !0;
        var v = c.slice(), f = {}, y = {}, C = [], m = [], w = 0, E = i.rowGroupColumns.slice(), R = i.pivotColumns.slice();
        u.forEach(function(L) {
          var H = L.colId || "", B = H.startsWith(Vr);
          if (B) {
            C.push(L), m.push(L);
            return;
          }
          var Q = p(H);
          Q ? (i.syncColumnWithStateItem(Q, L, e.defaultState, f, y, !1, r), ye(v, Q)) : (m.push(L), w += 1);
        });
        var D = function(L) {
          return i.syncColumnWithStateItem(L, null, e.defaultState, f, y, !1, r);
        };
        v.forEach(D);
        var M = function(L, H, B, Q) {
          var U = L[B.getId()], ce = L[Q.getId()], Se = U != null, re = ce != null;
          if (Se && re)
            return U - ce;
          if (Se)
            return -1;
          if (re)
            return 1;
          var X = H.indexOf(B), Ce = H.indexOf(Q), pt = X >= 0, Xr = Ce >= 0;
          return pt && Xr ? X - Ce : pt ? -1 : 1;
        };
        i.rowGroupColumns.sort(M.bind(i, f, E)), i.pivotColumns.sort(M.bind(i, y, R)), i.updateGridColumns();
        var I = i.groupAutoColumns ? i.groupAutoColumns.slice() : [];
        return C.forEach(function(L) {
          var H = i.getAutoColumn(L.colId);
          ye(I, H), i.syncColumnWithStateItem(H, L, e.defaultState, null, null, !0, r);
        }), I.forEach(D), i.applyOrderAfterApplyState(e), i.updateDisplayedColumns(r), i.dispatchEverythingChanged(r), d(), { unmatchedAndAutoStates: m, unmatchedCount: w };
      };
      this.columnAnimationService.start();
      var s = o(e.state || [], this.primaryColumns || [], function(u) {
        return i.getPrimaryColumn(u);
      }), a = s.unmatchedAndAutoStates, l = s.unmatchedCount;
      return (a.length > 0 || O(e.defaultState)) && (l = o(a, this.secondaryColumns || [], function(u) {
        return i.getSecondaryColumn(u);
      }).unmatchedCount), this.columnAnimationService.finish(), l === 0;
    }, t.prototype.applyOrderAfterApplyState = function(e) {
      var r = this;
      if (!(!e.applyOrder || !e.state)) {
        var i = [], o = {};
        e.state.forEach(function(a) {
          if (!(!a.colId || o[a.colId])) {
            var l = r.gridColumnsMap[a.colId];
            l && (i.push(l), o[a.colId] = !0);
          }
        });
        var s = 0;
        if (this.gridColumns.forEach(function(a) {
          var l = a.getColId(), u = o[l] != null;
          if (!u) {
            var c = l.startsWith(Vr);
            c ? Hr(i, a, s++) : i.push(a);
          }
        }), i = this.placeLockedColumns(i), !this.doesMovePassMarryChildren(i)) {
          console.warn("AG Grid: Applying column order broke a group where columns should be married together. Applying new order has been discarded.");
          return;
        }
        this.gridColumns = i;
      }
    }, t.prototype.compareColumnStatesAndDispatchEvents = function(e) {
      var r = this, i = {
        rowGroupColumns: this.rowGroupColumns.slice(),
        pivotColumns: this.pivotColumns.slice(),
        valueColumns: this.valueColumns.slice()
      }, o = this.getColumnState(), s = {};
      return o.forEach(function(a) {
        s[a.colId] = a;
      }), function() {
        var a = r.getPrimaryAndSecondaryAndAutoColumns(), l = function(m, w, E, R) {
          var D = w.map(R), M = E.map(R), I = Ct(D, M);
          if (!I) {
            var L = {
              type: m,
              columns: E,
              column: E.length === 1 ? E[0] : null,
              source: e
            };
            r.eventService.dispatchEvent(L);
          }
        }, u = function(m) {
          var w = [];
          return a.forEach(function(E) {
            var R = s[E.getColId()];
            R && m(R, E) && w.push(E);
          }), w;
        }, c = function(m) {
          return m.getColId();
        };
        l(g.EVENT_COLUMN_ROW_GROUP_CHANGED, i.rowGroupColumns, r.rowGroupColumns, c), l(g.EVENT_COLUMN_PIVOT_CHANGED, i.pivotColumns, r.pivotColumns, c);
        var p = function(m, w) {
          var E = m.aggFunc != null, R = E != w.isValueActive(), D = E && m.aggFunc != w.getAggFunc();
          return R || D;
        }, d = u(p);
        d.length > 0 && r.dispatchColumnChangedEvent(g.EVENT_COLUMN_VALUE_CHANGED, r.valueColumns, e);
        var v = function(m, w) {
          return m.width != w.getActualWidth();
        };
        r.dispatchColumnResizedEvent(u(v), !0, e);
        var f = function(m, w) {
          return m.pinned != w.getPinned();
        };
        r.dispatchColumnPinnedEvent(u(f), e);
        var y = function(m, w) {
          return m.hide == w.isVisible();
        };
        r.dispatchColumnVisibleEvent(u(y), e);
        var C = function(m, w) {
          return m.sort != w.getSort() || m.sortIndex != w.getSortIndex();
        };
        u(C).length > 0 && r.sortController.dispatchSortChangedEvents(e), r.normaliseColumnMovedEventForColumnState(o, e);
      };
    }, t.prototype.getCommonValue = function(e, r) {
      if (!(!e || e.length == 0)) {
        for (var i = r(e[0]), o = 1; o < e.length; o++)
          if (i !== r(e[o]))
            return;
        return i;
      }
    }, t.prototype.normaliseColumnMovedEventForColumnState = function(e, r) {
      var i = this, o = this.getColumnState(), s = {};
      o.forEach(function(p) {
        return s[p.colId] = p;
      });
      var a = {};
      e.forEach(function(p) {
        s[p.colId] && (a[p.colId] = !0);
      });
      var l = e.filter(function(p) {
        return a[p.colId];
      }), u = o.filter(function(p) {
        return a[p.colId];
      }), c = [];
      u.forEach(function(p, d) {
        var v = l && l[d];
        if (v && v.colId !== p.colId) {
          var f = i.getGridColumn(v.colId);
          f && c.push(f);
        }
      }), c.length && this.dispatchColumnMovedEvent({ movedColumns: c, source: r, finished: !0 });
    }, t.prototype.syncColumnWithStateItem = function(e, r, i, o, s, a, l) {
      if (e) {
        var u = function(H, B) {
          var Q = { value1: void 0, value2: void 0 }, U = !1;
          return r && (r[H] !== void 0 && (Q.value1 = r[H], U = !0), O(B) && r[B] !== void 0 && (Q.value2 = r[B], U = !0)), !U && i && (i[H] !== void 0 && (Q.value1 = i[H]), O(B) && i[B] !== void 0 && (Q.value2 = i[B])), Q;
        }, c = u("hide").value1;
        c !== void 0 && e.setVisible(!c, l);
        var p = u("pinned").value1;
        p !== void 0 && e.setPinned(p);
        var d = this.columnUtils.calculateColMinWidth(e.getColDef()), v = u("flex").value1;
        v !== void 0 && e.setFlex(v);
        var f = e.getFlex() <= 0;
        if (f) {
          var y = u("width").value1;
          y != null && d != null && y >= d && e.setActualWidth(y, l);
        }
        var C = u("sort").value1;
        C !== void 0 && (C === "desc" || C === "asc" ? e.setSort(C, l) : e.setSort(void 0, l));
        var m = u("sortIndex").value1;
        if (m !== void 0 && e.setSortIndex(m), !(a || !e.isPrimary())) {
          var w = u("aggFunc").value1;
          w !== void 0 && (typeof w == "string" ? (e.setAggFunc(w), e.isValueActive() || (e.setValueActive(!0, l), this.valueColumns.push(e))) : (O(w) && console.warn("AG Grid: stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON."), e.isValueActive() && (e.setValueActive(!1, l), ye(this.valueColumns, e))));
          var E = u("rowGroup", "rowGroupIndex"), R = E.value1, D = E.value2;
          (R !== void 0 || D !== void 0) && (typeof D == "number" || R ? (e.isRowGroupActive() || (e.setRowGroupActive(!0, l), this.rowGroupColumns.push(e)), o && typeof D == "number" && (o[e.getId()] = D)) : e.isRowGroupActive() && (e.setRowGroupActive(!1, l), ye(this.rowGroupColumns, e)));
          var M = u("pivot", "pivotIndex"), I = M.value1, L = M.value2;
          (I !== void 0 || L !== void 0) && (typeof L == "number" || I ? (e.isPivotActive() || (e.setPivotActive(!0, l), this.pivotColumns.push(e)), s && typeof L == "number" && (s[e.getId()] = L)) : e.isPivotActive() && (e.setPivotActive(!1, l), ye(this.pivotColumns, e)));
        }
      }
    }, t.prototype.getGridColumns = function(e) {
      return this.getColumns(e, this.getGridColumn.bind(this));
    }, t.prototype.getColumns = function(e, r) {
      var i = [];
      return e && e.forEach(function(o) {
        var s = r(o);
        s && i.push(s);
      }), i;
    }, t.prototype.getColumnWithValidation = function(e) {
      if (e == null)
        return null;
      var r = this.getGridColumn(e);
      return r || console.warn("AG Grid: could not find column " + e), r;
    }, t.prototype.getPrimaryColumn = function(e) {
      return this.primaryColumns ? this.getColumn(e, this.primaryColumns, this.primaryColumnsMap) : null;
    }, t.prototype.getGridColumn = function(e) {
      return this.getColumn(e, this.gridColumns, this.gridColumnsMap);
    }, t.prototype.getSecondaryColumn = function(e) {
      return this.secondaryColumns ? this.getColumn(e, this.secondaryColumns, this.secondaryColumnsMap) : null;
    }, t.prototype.getColumn = function(e, r, i) {
      if (!e)
        return null;
      if (typeof e == "string" && i[e])
        return i[e];
      for (var o = 0; o < r.length; o++)
        if (this.columnsMatch(r[o], e))
          return r[o];
      return this.getAutoColumn(e);
    }, t.prototype.getSourceColumnsForGroupColumn = function(e) {
      var r = e.getColDef().showRowGroup;
      if (!r)
        return null;
      if (r === !0)
        return this.rowGroupColumns.slice(0);
      var i = this.getPrimaryColumn(r);
      return i ? [i] : null;
    }, t.prototype.getAutoColumn = function(e) {
      var r = this;
      return !this.groupAutoColumns || !O(this.groupAutoColumns) || x(this.groupAutoColumns) ? null : this.groupAutoColumns.find(function(i) {
        return r.columnsMatch(i, e);
      }) || null;
    }, t.prototype.columnsMatch = function(e, r) {
      var i = e === r, o = e.getColDef() === r, s = e.getColId() == r;
      return i || o || s;
    }, t.prototype.getDisplayNameForColumn = function(e, r, i) {
      if (i === void 0 && (i = !1), !e)
        return null;
      var o = this.getHeaderName(e.getColDef(), e, null, null, r);
      return i ? this.wrapHeaderNameWithAggFunc(e, o) : o;
    }, t.prototype.getDisplayNameForProvidedColumnGroup = function(e, r, i) {
      var o = r ? r.getColGroupDef() : null;
      return o ? this.getHeaderName(o, null, e, r, i) : null;
    }, t.prototype.getDisplayNameForColumnGroup = function(e, r) {
      return this.getDisplayNameForProvidedColumnGroup(e, e.getProvidedColumnGroup(), r);
    }, t.prototype.getHeaderName = function(e, r, i, o, s) {
      var a = e.headerValueGetter;
      if (a) {
        var l = {
          colDef: e,
          column: r,
          columnGroup: i,
          providedColumnGroup: o,
          location: s,
          api: this.gridOptionsService.api,
          columnApi: this.gridOptionsService.columnApi,
          context: this.gridOptionsService.context
        };
        return typeof a == "function" ? a(l) : typeof a == "string" ? this.expressionService.evaluate(a, l) : (console.warn("AG Grid: headerValueGetter must be a function or a string"), "");
      } else {
        if (e.headerName != null)
          return e.headerName;
        if (e.field)
          return fl(e.field);
      }
      return "";
    }, t.prototype.wrapHeaderNameWithAggFunc = function(e, r) {
      if (this.gridOptionsService.is("suppressAggFuncInHeader"))
        return r;
      var i = e.getColDef().pivotValueColumn, o = O(i), s = null, a;
      if (o) {
        var l = this.gridOptionsService.is("removePivotHeaderRowWhenSingleValueColumn") && this.valueColumns.length === 1, u = e.getColDef().pivotTotalColumnIds !== void 0;
        if (l && !u)
          return r;
        s = i ? i.getAggFunc() : null, a = !0;
      } else {
        var c = e.isValueActive(), p = this.pivotMode || !this.isRowGroupEmpty();
        c && p ? (s = e.getAggFunc(), a = !0) : a = !1;
      }
      if (a) {
        var d = typeof s == "string" ? s : "func", v = this.localeService.getLocaleTextFunc(), f = v(d, d);
        return f + "(" + r + ")";
      }
      return r;
    }, t.prototype.getColumnGroup = function(e, r) {
      if (!e)
        return null;
      if (e instanceof Te)
        return e;
      var i = this.getAllDisplayedTrees(), o = typeof r == "number", s = null;
      return this.columnUtils.depthFirstAllColumnTreeSearch(i, function(a) {
        if (a instanceof Te) {
          var l = a, u = void 0;
          o ? u = e === l.getGroupId() && r === l.getPartId() : u = e === l.getGroupId(), u && (s = l);
        }
      }), s;
    }, t.prototype.isReady = function() {
      return this.ready;
    }, t.prototype.extractValueColumns = function(e, r) {
      this.valueColumns = this.extractColumns(
        r,
        this.valueColumns,
        function(i, o) {
          return i.setValueActive(o, e);
        },
        // aggFunc doesn't have index variant, cos order of value cols doesn't matter, so always return null
        function() {
        },
        function() {
        },
        // aggFunc is a string, so return it's existence
        function(i) {
          var o = i.aggFunc;
          if (o === null || o === "")
            return null;
          if (o !== void 0)
            return !!o;
        },
        function(i) {
          return i.initialAggFunc != null && i.initialAggFunc != "";
        }
      ), this.valueColumns.forEach(function(i) {
        var o = i.getColDef();
        o.aggFunc != null && o.aggFunc != "" ? i.setAggFunc(o.aggFunc) : i.getAggFunc() || i.setAggFunc(o.initialAggFunc);
      });
    }, t.prototype.extractRowGroupColumns = function(e, r) {
      this.rowGroupColumns = this.extractColumns(r, this.rowGroupColumns, function(i, o) {
        return i.setRowGroupActive(o, e);
      }, function(i) {
        return i.rowGroupIndex;
      }, function(i) {
        return i.initialRowGroupIndex;
      }, function(i) {
        return i.rowGroup;
      }, function(i) {
        return i.initialRowGroup;
      });
    }, t.prototype.extractColumns = function(e, r, i, o, s, a, l) {
      e === void 0 && (e = []), r === void 0 && (r = []);
      var u = [], c = [];
      (this.primaryColumns || []).forEach(function(v) {
        var f = e.indexOf(v) < 0, y = v.getColDef(), C = Qe(a(y)), m = Qe(l(y)), w = He(o(y)), E = He(s(y)), R, D = C !== void 0, M = w !== void 0, I = m !== void 0, L = E !== void 0;
        if (D ? R = C : M ? w === null ? R = !1 : R = w >= 0 : f ? I ? R = m : L ? R = E != null && E >= 0 : R = !1 : R = r.indexOf(v) >= 0, R) {
          var H = f ? w != null || E != null : w != null;
          H ? u.push(v) : c.push(v);
        }
      });
      var p = function(v) {
        var f = o(v.getColDef()), y = s(v.getColDef());
        return f ?? y;
      };
      u.sort(function(v, f) {
        var y = p(v), C = p(f);
        return y === C ? 0 : y < C ? -1 : 1;
      });
      var d = [].concat(u);
      return r.forEach(function(v) {
        c.indexOf(v) >= 0 && d.push(v);
      }), c.forEach(function(v) {
        d.indexOf(v) < 0 && d.push(v);
      }), r.forEach(function(v) {
        d.indexOf(v) < 0 && i(v, !1);
      }), d.forEach(function(v) {
        r.indexOf(v) < 0 && i(v, !0);
      }), d;
    }, t.prototype.extractPivotColumns = function(e, r) {
      this.pivotColumns = this.extractColumns(r, this.pivotColumns, function(i, o) {
        return i.setPivotActive(o, e);
      }, function(i) {
        return i.pivotIndex;
      }, function(i) {
        return i.initialPivotIndex;
      }, function(i) {
        return i.pivot;
      }, function(i) {
        return i.initialPivot;
      });
    }, t.prototype.resetColumnGroupState = function(e) {
      e === void 0 && (e = "api");
      var r = [];
      this.columnUtils.depthFirstOriginalTreeSearch(null, this.primaryColumnTree, function(i) {
        if (i instanceof ie) {
          var o = i.getColGroupDef(), s = {
            groupId: i.getGroupId(),
            open: o ? o.openByDefault : void 0
          };
          r.push(s);
        }
      }), this.setColumnGroupState(r, e);
    }, t.prototype.getColumnGroupState = function() {
      var e = [];
      return this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function(r) {
        r instanceof ie && e.push({
          groupId: r.getGroupId(),
          open: r.isExpanded()
        });
      }), e;
    }, t.prototype.setColumnGroupState = function(e, r) {
      var i = this;
      r === void 0 && (r = "api"), this.columnAnimationService.start();
      var o = [];
      e.forEach(function(s) {
        var a = s.groupId, l = s.open, u = i.getProvidedColumnGroup(a);
        u && u.isExpanded() !== l && (i.logger.log("columnGroupOpened(" + u.getGroupId() + "," + l + ")"), u.setExpanded(l), o.push(u));
      }), this.updateGroupsAndDisplayedColumns(r), this.setFirstRightAndLastLeftPinned(r), o.forEach(function(s) {
        var a = {
          type: g.EVENT_COLUMN_GROUP_OPENED,
          columnGroup: s
        };
        i.eventService.dispatchEvent(a);
      }), this.columnAnimationService.finish();
    }, t.prototype.setColumnGroupOpened = function(e, r, i) {
      i === void 0 && (i = "api");
      var o;
      e instanceof ie ? o = e.getId() : o = e || "", this.setColumnGroupState([{ groupId: o, open: r }], i);
    }, t.prototype.getProvidedColumnGroup = function(e) {
      typeof e != "string" && console.error("AG Grid: group key must be a string");
      var r = null;
      return this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function(i) {
        i instanceof ie && i.getId() === e && (r = i);
      }), r;
    }, t.prototype.calculateColumnsForDisplay = function() {
      var e = this, r;
      return this.pivotMode && x(this.secondaryColumns) ? r = this.gridColumns.filter(function(i) {
        var o = e.groupAutoColumns && Ve(e.groupAutoColumns, i), s = e.valueColumns && Ve(e.valueColumns, i);
        return o || s;
      }) : r = this.gridColumns.filter(function(i) {
        var o = e.groupAutoColumns && Ve(e.groupAutoColumns, i);
        return o || i.isVisible();
      }), r;
    }, t.prototype.checkColSpanActiveInCols = function(e) {
      var r = !1;
      return e.forEach(function(i) {
        O(i.getColDef().colSpan) && (r = !0);
      }), r;
    }, t.prototype.calculateColumnsForGroupDisplay = function() {
      var e = this;
      this.groupDisplayColumns = [], this.groupDisplayColumnsMap = {};
      var r = function(i) {
        var o = i.getColDef(), s = o.showRowGroup;
        o && O(s) && (e.groupDisplayColumns.push(i), typeof s == "string" ? e.groupDisplayColumnsMap[s] = i : s === !0 && e.getRowGroupColumns().forEach(function(a) {
          e.groupDisplayColumnsMap[a.getId()] = i;
        }));
      };
      this.gridColumns.forEach(r), this.groupAutoColumns && this.groupAutoColumns.forEach(r);
    }, t.prototype.getGroupDisplayColumns = function() {
      return this.groupDisplayColumns;
    }, t.prototype.getGroupDisplayColumnForGroup = function(e) {
      return this.groupDisplayColumnsMap[e];
    }, t.prototype.updateDisplayedColumns = function(e) {
      var r = this.calculateColumnsForDisplay();
      this.buildDisplayedTrees(r), this.calculateColumnsForGroupDisplay(), this.updateGroupsAndDisplayedColumns(e), this.setFirstRightAndLastLeftPinned(e);
    }, t.prototype.isSecondaryColumnsPresent = function() {
      return O(this.secondaryColumns);
    }, t.prototype.setSecondaryColumns = function(e, r) {
      var i = this;
      r === void 0 && (r = "api");
      var o = e && e.length > 0;
      if (!(!o && x(this.secondaryColumns))) {
        if (o) {
          this.processSecondaryColumnDefinitions(e);
          var s = this.columnFactory.createColumnTree(e, !1, this.secondaryBalancedTree || this.previousSecondaryColumns || void 0);
          this.destroyOldColumns(this.secondaryBalancedTree, s.columnTree), this.secondaryBalancedTree = s.columnTree, this.secondaryHeaderRowCount = s.treeDept + 1, this.secondaryColumns = this.getColumnsFromTree(this.secondaryBalancedTree), this.secondaryColumnsMap = {}, this.secondaryColumns.forEach(function(a) {
            return i.secondaryColumnsMap[a.getId()] = a;
          }), this.previousSecondaryColumns = null;
        } else
          this.previousSecondaryColumns = this.secondaryBalancedTree, this.secondaryBalancedTree = null, this.secondaryHeaderRowCount = -1, this.secondaryColumns = null, this.secondaryColumnsMap = {};
        this.updateGridColumns(), this.updateDisplayedColumns(r);
      }
    }, t.prototype.processSecondaryColumnDefinitions = function(e) {
      var r = this.gridOptionsService.get("processPivotResultColDef") || this.gridOptionsService.get("processSecondaryColDef"), i = this.gridOptionsService.get("processPivotResultColGroupDef") || this.gridOptionsService.get("processSecondaryColGroupDef");
      if (!(!r && !i)) {
        var o = function(s) {
          s.forEach(function(a) {
            var l = O(a.children);
            if (l) {
              var u = a;
              i && i(u), o(u.children);
            } else {
              var c = a;
              r && r(c);
            }
          });
        };
        e && o(e);
      }
    }, t.prototype.updateGridColumns = function() {
      var e = this, r = this.gridBalancedTree;
      this.gridColsArePrimary ? this.lastPrimaryOrder = this.gridColumns : this.lastSecondaryOrder = this.gridColumns;
      var i;
      if (this.secondaryColumns && this.secondaryBalancedTree) {
        var o = this.secondaryColumns.every(function(u) {
          return e.gridColumnsMap[u.getColId()] !== void 0;
        });
        this.gridBalancedTree = this.secondaryBalancedTree.slice(), this.gridHeaderRowCount = this.secondaryHeaderRowCount, this.gridColumns = this.secondaryColumns.slice(), this.gridColsArePrimary = !1, o && (i = this.lastSecondaryOrder);
      } else
        this.primaryColumns && (this.gridBalancedTree = this.primaryColumnTree.slice(), this.gridHeaderRowCount = this.primaryHeaderRowCount, this.gridColumns = this.primaryColumns.slice(), this.gridColsArePrimary = !0, i = this.lastPrimaryOrder);
      var s = this.createGroupAutoColumnsIfNeeded();
      if (s && i) {
        var a = st(this.groupAutoColumns.map(function(u) {
          return [u, !0];
        }));
        i = i.filter(function(u) {
          return !a.has(u);
        }), i = fr(this.groupAutoColumns, i);
      }
      if (this.addAutoGroupToGridColumns(), this.orderGridColsLike(i), this.gridColumns = this.placeLockedColumns(this.gridColumns), this.refreshQuickFilterColumns(), this.clearDisplayedAndViewportColumns(), this.colSpanActive = this.checkColSpanActiveInCols(this.gridColumns), this.gridColumnsMap = {}, this.gridColumns.forEach(function(u) {
        return e.gridColumnsMap[u.getId()] = u;
      }), this.setAutoHeightActive(), !Ct(r, this.gridBalancedTree)) {
        var l = {
          type: g.EVENT_GRID_COLUMNS_CHANGED
        };
        this.eventService.dispatchEvent(l);
      }
    }, t.prototype.setAutoHeightActive = function() {
      if (this.autoHeightActive = this.gridColumns.filter(function(i) {
        return i.isAutoHeight();
      }).length > 0, this.autoHeightActive) {
        this.autoHeightActiveAtLeastOnce = !0;
        var e = this.gridOptionsService.isRowModelType("clientSide") || this.gridOptionsService.isRowModelType("serverSide");
        if (!e) {
          var r = "AG Grid - autoHeight columns only work with Client Side Row Model and Server Side Row Model.";
          K(function() {
            return console.warn(r);
          }, "autoHeightActive.wrongRowModel");
        }
      }
    }, t.prototype.orderGridColsLike = function(e) {
      if (!x(e)) {
        var r = st(e.map(function(c, p) {
          return [c, p];
        })), i = !0;
        if (this.gridColumns.forEach(function(c) {
          r.has(c) && (i = !1);
        }), !i) {
          var o = st(this.gridColumns.map(function(c) {
            return [c, !0];
          })), s = e.filter(function(c) {
            return o.has(c);
          }), a = st(s.map(function(c) {
            return [c, !0];
          })), l = this.gridColumns.filter(function(c) {
            return !a.has(c);
          }), u = s.slice();
          l.forEach(function(c) {
            var p = c.getOriginalParent();
            if (!p) {
              u.push(c);
              return;
            }
            for (var d = []; !d.length && p; ) {
              var v = p.getLeafColumns();
              v.forEach(function(C) {
                var m = u.indexOf(C) >= 0, w = d.indexOf(C) < 0;
                m && w && d.push(C);
              }), p = p.getOriginalParent();
            }
            if (!d.length) {
              u.push(c);
              return;
            }
            var f = d.map(function(C) {
              return u.indexOf(C);
            }), y = Math.max.apply(Math, fr(f));
            Hr(u, c, y + 1);
          }), this.gridColumns = u;
        }
      }
    }, t.prototype.isPrimaryColumnGroupsPresent = function() {
      return this.primaryHeaderRowCount > 1;
    }, t.prototype.refreshQuickFilterColumns = function() {
      var e, r;
      this.groupAutoColumns ? r = ((e = this.primaryColumns) !== null && e !== void 0 ? e : []).concat(this.groupAutoColumns) : this.primaryColumns && (r = this.primaryColumns), r = r ?? [], this.columnsForQuickFilter = this.gridOptionsService.is("excludeHiddenColumnsFromQuickFilter") ? r.filter(function(i) {
        return i.isVisible() || i.isRowGroupActive();
      }) : r;
    }, t.prototype.placeLockedColumns = function(e) {
      var r = [], i = [], o = [];
      return e.forEach(function(s) {
        var a = s.getColDef().lockPosition;
        a === "right" ? o.push(s) : a === "left" || a === !0 ? r.push(s) : i.push(s);
      }), fr(r, i, o);
    }, t.prototype.addAutoGroupToGridColumns = function() {
      if (x(this.groupAutoColumns)) {
        this.destroyOldColumns(this.groupAutoColsBalancedTree), this.groupAutoColsBalancedTree = null;
        return;
      }
      this.gridColumns = this.groupAutoColumns ? this.groupAutoColumns.concat(this.gridColumns) : this.gridColumns;
      var e = this.columnFactory.createForAutoGroups(this.groupAutoColumns, this.gridBalancedTree);
      this.destroyOldColumns(this.groupAutoColsBalancedTree, e), this.groupAutoColsBalancedTree = e, this.gridBalancedTree = e.concat(this.gridBalancedTree);
    }, t.prototype.clearDisplayedAndViewportColumns = function() {
      this.viewportRowLeft = {}, this.viewportRowRight = {}, this.viewportRowCenter = {}, this.displayedColumnsLeft = [], this.displayedColumnsRight = [], this.displayedColumnsCenter = [], this.displayedColumns = [], this.viewportColumns = [], this.headerViewportColumns = [], this.viewportColumnsHash = "";
    }, t.prototype.updateGroupsAndDisplayedColumns = function(e) {
      this.updateOpenClosedVisibilityInColumnGroups(), this.deriveDisplayedColumns(e), this.refreshFlexedColumns(), this.extractViewport(), this.updateBodyWidths();
      var r = {
        type: g.EVENT_DISPLAYED_COLUMNS_CHANGED
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.deriveDisplayedColumns = function(e) {
      this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeLeft, this.displayedColumnsLeft), this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeCentre, this.displayedColumnsCenter), this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeRight, this.displayedColumnsRight), this.joinDisplayedColumns(), this.setLeftValues(e), this.displayedAutoHeightCols = this.displayedColumns.filter(function(r) {
        return r.isAutoHeight();
      });
    }, t.prototype.isAutoRowHeightActive = function() {
      return this.autoHeightActive;
    }, t.prototype.wasAutoRowHeightEverActive = function() {
      return this.autoHeightActiveAtLeastOnce;
    }, t.prototype.joinDisplayedColumns = function() {
      this.gridOptionsService.is("enableRtl") ? this.displayedColumns = this.displayedColumnsRight.concat(this.displayedColumnsCenter).concat(this.displayedColumnsLeft) : this.displayedColumns = this.displayedColumnsLeft.concat(this.displayedColumnsCenter).concat(this.displayedColumnsRight);
    }, t.prototype.setLeftValues = function(e) {
      this.setLeftValuesOfColumns(e), this.setLeftValuesOfGroups();
    }, t.prototype.setLeftValuesOfColumns = function(e) {
      var r = this;
      if (this.primaryColumns) {
        var i = this.primaryColumns.slice(0), o = this.gridOptionsService.is("enableRtl");
        [
          this.displayedColumnsLeft,
          this.displayedColumnsRight,
          this.displayedColumnsCenter
        ].forEach(function(s) {
          if (o) {
            var a = r.getWidthOfColsInList(s);
            s.forEach(function(u) {
              a -= u.getActualWidth(), u.setLeft(a, e);
            });
          } else {
            var l = 0;
            s.forEach(function(u) {
              u.setLeft(l, e), l += u.getActualWidth();
            });
          }
          $n(i, s);
        }), i.forEach(function(s) {
          s.setLeft(null, e);
        });
      }
    }, t.prototype.setLeftValuesOfGroups = function() {
      [
        this.displayedTreeLeft,
        this.displayedTreeRight,
        this.displayedTreeCentre
      ].forEach(function(e) {
        e.forEach(function(r) {
          if (r instanceof Te) {
            var i = r;
            i.checkLeft();
          }
        });
      });
    }, t.prototype.derivedDisplayedColumnsFromDisplayedTree = function(e, r) {
      r.length = 0, this.columnUtils.depthFirstDisplayedColumnTreeSearch(e, function(i) {
        i instanceof Z && r.push(i);
      });
    }, t.prototype.extractViewportColumns = function() {
      this.suppressColumnVirtualisation ? (this.viewportColumnsCenter = this.displayedColumnsCenter, this.headerViewportColumnsCenter = this.displayedColumnsCenter) : (this.viewportColumnsCenter = this.displayedColumnsCenter.filter(this.isColumnInRowViewport.bind(this)), this.headerViewportColumnsCenter = this.displayedColumnsCenter.filter(this.isColumnInHeaderViewport.bind(this))), this.viewportColumns = this.viewportColumnsCenter.concat(this.displayedColumnsLeft).concat(this.displayedColumnsRight), this.headerViewportColumns = this.headerViewportColumnsCenter.concat(this.displayedColumnsLeft).concat(this.displayedColumnsRight);
    }, t.prototype.getVirtualHeaderGroupRow = function(e, r) {
      var i;
      switch (e) {
        case "left":
          i = this.viewportRowLeft[r];
          break;
        case "right":
          i = this.viewportRowRight[r];
          break;
        default:
          i = this.viewportRowCenter[r];
          break;
      }
      return x(i) && (i = []), i;
    }, t.prototype.calculateHeaderRows = function() {
      this.viewportRowLeft = {}, this.viewportRowRight = {}, this.viewportRowCenter = {};
      var e = {};
      this.headerViewportColumns.forEach(function(i) {
        return e[i.getId()] = !0;
      });
      var r = function(i, o, s) {
        for (var a = !1, l = 0; l < i.length; l++) {
          var u = i[l], c = !1;
          if (u instanceof Z)
            c = e[u.getId()] === !0;
          else {
            var p = u, d = p.getDisplayedChildren();
            d && (c = r(d, o, s + 1));
          }
          c && (a = !0, o[s] || (o[s] = []), o[s].push(u));
        }
        return a;
      };
      r(this.displayedTreeLeft, this.viewportRowLeft, 0), r(this.displayedTreeRight, this.viewportRowRight, 0), r(this.displayedTreeCentre, this.viewportRowCenter, 0);
    }, t.prototype.extractViewport = function() {
      var e = function(o) {
        return o.getId() + "-" + (o.getPinned() || "normal");
      };
      this.extractViewportColumns();
      var r = this.viewportColumns.map(e).join("#"), i = this.viewportColumnsHash !== r;
      return i && (this.viewportColumnsHash = r, this.calculateHeaderRows()), i;
    }, t.prototype.refreshFlexedColumns = function(e) {
      var r = this;
      e === void 0 && (e = {});
      var i = e.source ? e.source : "flex";
      if (e.viewportWidth != null && (this.flexViewportWidth = e.viewportWidth), !this.flexViewportWidth)
        return [];
      var o = -1;
      e.resizingCols && e.resizingCols.forEach(function(R) {
        var D = r.displayedColumnsCenter.indexOf(R);
        o < D && (o = D);
      });
      var s = function(R) {
        var D = r.displayedColumnsCenter.indexOf(R) > o;
        return R.getFlex() && D;
      }, a = this.displayedColumnsCenter.filter(function(R) {
        return !s(R);
      }), l = this.displayedColumnsCenter.filter(function(R) {
        return s(R);
      }), u = [];
      if (!l.length)
        return [];
      var c = [], p;
      e:
        for (; ; ) {
          var d = l.reduce(function(R, D) {
            return R + D.getFlex();
          }, 0);
          p = this.flexViewportWidth - this.getWidthOfColsInList(a);
          for (var v = 0; v < l.length; v++) {
            var f = l[v], y = p * f.getFlex() / d, C = 0, m = f.getMinWidth(), w = f.getMaxWidth();
            if (O(m) && y < m ? C = m : O(w) && y > w && (C = w), C) {
              f.setActualWidth(C, i), ye(l, f), u.push(f), a.push(f);
              continue e;
            }
            c[v] = Math.round(y);
          }
          break;
        }
      var E = p;
      return l.forEach(function(R, D) {
        R.setActualWidth(Math.min(c[D], E), i), u.push(R), E -= c[D];
      }), e.skipSetLeft || this.setLeftValues(i), e.updateBodyWidths && this.updateBodyWidths(), e.fireResizedEvent && this.dispatchColumnResizedEvent(u, !0, i, l), l;
    }, t.prototype.sizeColumnsToFit = function(e, r, i, o) {
      var s, a, l, u, c;
      r === void 0 && (r = "sizeColumnsToFit");
      var p = {};
      o && ((s = o == null ? void 0 : o.columnLimits) === null || s === void 0 || s.forEach(function(X) {
        var Ce = X.key, pt = Ep(X, ["key"]);
        p[typeof Ce == "string" ? Ce : Ce.getColId()] = pt;
      }));
      var d = this.getAllDisplayedColumns(), v = e === this.getWidthOfColsInList(d);
      if (!(e <= 0 || !d.length || v)) {
        var f = [], y = [];
        d.forEach(function(X) {
          X.getColDef().suppressSizeToFit === !0 ? y.push(X) : f.push(X);
        });
        var C = f.slice(0), m = !1, w = function(X) {
          ye(f, X), y.push(X);
        };
        for (f.forEach(function(X) {
          return X.resetActualWidth(r);
        }); !m; ) {
          m = !0;
          var E = e - this.getWidthOfColsInList(y);
          if (E <= 0)
            f.forEach(function(X) {
              var Ce, pt, Xr = (pt = (Ce = p == null ? void 0 : p[X.getId()]) === null || Ce === void 0 ? void 0 : Ce.minWidth) !== null && pt !== void 0 ? pt : o == null ? void 0 : o.defaultMinWidth;
              if (typeof Xr == "number") {
                X.setActualWidth(Xr);
                return;
              }
              X.setMinimum(r);
            });
          else
            for (var R = E / this.getWidthOfColsInList(f), D = E, M = f.length - 1; M >= 0; M--) {
              var I = f[M], L = p == null ? void 0 : p[I.getId()], H = (a = L == null ? void 0 : L.minWidth) !== null && a !== void 0 ? a : o == null ? void 0 : o.defaultMinWidth, B = (l = L == null ? void 0 : L.maxWidth) !== null && l !== void 0 ? l : o == null ? void 0 : o.defaultMaxWidth, Q = (u = I.getMinWidth()) !== null && u !== void 0 ? u : 0, U = (c = I.getMaxWidth()) !== null && c !== void 0 ? c : Number.MAX_VALUE, ce = typeof H == "number" && H > Q ? H : I.getMinWidth(), Se = typeof B == "number" && B < U ? B : I.getMaxWidth(), re = Math.round(I.getActualWidth() * R);
              O(ce) && re < ce ? (re = ce, w(I), m = !1) : O(Se) && re > Se ? (re = Se, w(I), m = !1) : M === 0 && (re = D), I.setActualWidth(re, r, !0), D -= re;
            }
        }
        C.forEach(function(X) {
          X.fireColumnWidthChangedEvent(r);
        }), this.setLeftValues(r), this.updateBodyWidths(), !i && this.dispatchColumnResizedEvent(C, !0, r);
      }
    }, t.prototype.buildDisplayedTrees = function(e) {
      var r = [], i = [], o = [];
      e.forEach(function(a) {
        switch (a.getPinned()) {
          case "left":
            r.push(a);
            break;
          case "right":
            i.push(a);
            break;
          default:
            o.push(a);
            break;
        }
      });
      var s = new dl();
      this.displayedTreeLeft = this.displayedGroupCreator.createDisplayedGroups(r, this.gridBalancedTree, s, "left", this.displayedTreeLeft), this.displayedTreeRight = this.displayedGroupCreator.createDisplayedGroups(i, this.gridBalancedTree, s, "right", this.displayedTreeRight), this.displayedTreeCentre = this.displayedGroupCreator.createDisplayedGroups(o, this.gridBalancedTree, s, null, this.displayedTreeCentre), this.updateDisplayedMap();
    }, t.prototype.updateDisplayedMap = function() {
      var e = this;
      this.displayedColumnsAndGroupsMap = {};
      var r = function(i) {
        e.displayedColumnsAndGroupsMap[i.getUniqueId()] = i;
      };
      this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeCentre, r), this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeLeft, r), this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeRight, r);
    }, t.prototype.isDisplayed = function(e) {
      var r = this.displayedColumnsAndGroupsMap[e.getUniqueId()];
      return r === e;
    }, t.prototype.updateOpenClosedVisibilityInColumnGroups = function() {
      var e = this.getAllDisplayedTrees();
      this.columnUtils.depthFirstAllColumnTreeSearch(e, function(r) {
        if (r instanceof Te) {
          var i = r;
          i.calculateDisplayedColumns();
        }
      });
    }, t.prototype.getGroupAutoColumns = function() {
      return this.groupAutoColumns;
    }, t.prototype.createGroupAutoColumnsIfNeeded = function() {
      if (!this.autoGroupsNeedBuilding)
        return !1;
      this.autoGroupsNeedBuilding = !1;
      var e = this.gridOptionsService.isGroupUseEntireRow(this.pivotMode), r = this.pivotMode ? this.gridOptionsService.is("pivotSuppressAutoColumn") : this.isGroupSuppressAutoColumn(), i = this.rowGroupColumns.length > 0 || this.usingTreeData, o = i && !r && !e;
      if (o) {
        var s = this.groupAutoColumns || [], a = this.autoGroupColService.createAutoGroupColumns(s, this.rowGroupColumns), l = !this.autoColsEqual(a, this.groupAutoColumns);
        if (l || this.forceRecreateAutoGroups)
          return this.groupAutoColumns = a, !0;
      } else
        this.groupAutoColumns = null;
      return !1;
    }, t.prototype.isGroupSuppressAutoColumn = function() {
      var e = this.gridOptionsService.get("groupDisplayType"), r = e ? Pn("custom", e) : !1;
      if (r)
        return !0;
      var i = this.gridOptionsService.get("treeDataDisplayType");
      return i ? up("custom", i) : !1;
    }, t.prototype.autoColsEqual = function(e, r) {
      return Ct(e, r, function(i, o) {
        return i.getColId() === o.getColId();
      });
    }, t.prototype.getWidthOfColsInList = function(e) {
      return e.reduce(function(r, i) {
        return r + i.getActualWidth();
      }, 0);
    }, t.prototype.getGridBalancedTree = function() {
      return this.gridBalancedTree;
    }, t.prototype.hasFloatingFilters = function() {
      if (!this.gridColumns)
        return !1;
      var e = this.gridColumns.some(function(r) {
        return r.getColDef().floatingFilter;
      });
      return e;
    }, t.prototype.getFirstDisplayedColumn = function() {
      var e = this.gridOptionsService.is("enableRtl"), r = [
        "getDisplayedLeftColumns",
        "getDisplayedCenterColumns",
        "getDisplayedRightColumns"
      ];
      e && r.reverse();
      for (var i = 0; i < r.length; i++) {
        var o = this[r[i]]();
        if (o.length)
          return e ? q(o) : o[0];
      }
      return null;
    }, t.prototype.setColumnHeaderHeight = function(e, r) {
      var i = e.setAutoHeaderHeight(r);
      if (i) {
        var o = {
          type: g.EVENT_COLUMN_HEADER_HEIGHT_CHANGED,
          column: e,
          columns: [e],
          source: "autosizeColumnHeaderHeight"
        };
        this.eventService.dispatchEvent(o);
      }
    }, t.prototype.getColumnGroupHeaderRowHeight = function() {
      return this.isPivotMode() ? this.getPivotGroupHeaderHeight() : this.getGroupHeaderHeight();
    }, t.prototype.getColumnHeaderRowHeight = function() {
      var e = this.isPivotMode() ? this.getPivotHeaderHeight() : this.getHeaderHeight(), r = this.getAllDisplayedColumns().filter(function(i) {
        return i.isAutoHeaderHeight();
      }).map(function(i) {
        return i.getAutoHeaderHeight() || 0;
      });
      return Math.max.apply(Math, fr([e], r));
    }, t.prototype.getHeaderHeight = function() {
      var e;
      return (e = this.gridOptionsService.getNum("headerHeight")) !== null && e !== void 0 ? e : this.environment.getFromTheme(25, "headerHeight");
    }, t.prototype.getFloatingFiltersHeight = function() {
      var e;
      return (e = this.gridOptionsService.getNum("floatingFiltersHeight")) !== null && e !== void 0 ? e : this.getHeaderHeight();
    }, t.prototype.getGroupHeaderHeight = function() {
      var e;
      return (e = this.gridOptionsService.getNum("groupHeaderHeight")) !== null && e !== void 0 ? e : this.getHeaderHeight();
    }, t.prototype.getPivotHeaderHeight = function() {
      var e;
      return (e = this.gridOptionsService.getNum("pivotHeaderHeight")) !== null && e !== void 0 ? e : this.getHeaderHeight();
    }, t.prototype.getPivotGroupHeaderHeight = function() {
      var e;
      return (e = this.gridOptionsService.getNum("pivotGroupHeaderHeight")) !== null && e !== void 0 ? e : this.getGroupHeaderHeight();
    }, pe([
      h("expressionService")
    ], t.prototype, "expressionService", void 0), pe([
      h("columnFactory")
    ], t.prototype, "columnFactory", void 0), pe([
      h("displayedGroupCreator")
    ], t.prototype, "displayedGroupCreator", void 0), pe([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), pe([
      h("autoWidthCalculator")
    ], t.prototype, "autoWidthCalculator", void 0), pe([
      h("columnUtils")
    ], t.prototype, "columnUtils", void 0), pe([
      h("columnAnimationService")
    ], t.prototype, "columnAnimationService", void 0), pe([
      h("autoGroupColService")
    ], t.prototype, "autoGroupColService", void 0), pe([
      Y("aggFuncService")
    ], t.prototype, "aggFuncService", void 0), pe([
      Y("valueCache")
    ], t.prototype, "valueCache", void 0), pe([
      Y("animationFrameService")
    ], t.prototype, "animationFrameService", void 0), pe([
      h("sortController")
    ], t.prototype, "sortController", void 0), pe([
      h("columnDefFactory")
    ], t.prototype, "columnDefFactory", void 0), pe([
      b
    ], t.prototype, "init", null), pe([
      ve
    ], t.prototype, "destroyColumns", null), pe([
      Sp(0, me("loggerFactory"))
    ], t.prototype, "setBeans", null), t = pe([
      A("columnModel")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Op = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Tp = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, bp = (
  /** @class */
  function(n) {
    Op(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.calculateColMinWidth = function(e) {
      return e.minWidth != null ? e.minWidth : this.environment.getMinColWidth();
    }, t.prototype.calculateColMaxWidth = function(e) {
      return e.maxWidth != null ? e.maxWidth : Number.MAX_SAFE_INTEGER;
    }, t.prototype.calculateColInitialWidth = function(e) {
      var r = this.calculateColMinWidth(e), i = this.calculateColMaxWidth(e), o, s = He(e.width), a = He(e.initialWidth);
      return s != null ? o = s : a != null ? o = a : o = 200, Math.max(Math.min(o, i), r);
    }, t.prototype.getOriginalPathForColumn = function(e, r) {
      var i = [], o = !1, s = function(a, l) {
        for (var u = 0; u < a.length; u++) {
          if (o)
            return;
          var c = a[u];
          if (c instanceof ie) {
            var p = c;
            s(p.getChildren(), l + 1), i[l] = c;
          } else
            c === e && (o = !0);
        }
      };
      return s(r, 0), o ? i : null;
    }, t.prototype.depthFirstOriginalTreeSearch = function(e, r, i) {
      var o = this;
      r && r.forEach(function(s) {
        s instanceof ie && o.depthFirstOriginalTreeSearch(s, s.getChildren(), i), i(s, e);
      });
    }, t.prototype.depthFirstAllColumnTreeSearch = function(e, r) {
      var i = this;
      e && e.forEach(function(o) {
        o instanceof Te && i.depthFirstAllColumnTreeSearch(o.getChildren(), r), r(o);
      });
    }, t.prototype.depthFirstDisplayedColumnTreeSearch = function(e, r) {
      var i = this;
      e && e.forEach(function(o) {
        o instanceof Te && i.depthFirstDisplayedColumnTreeSearch(o.getDisplayedChildren(), r), r(o);
      });
    }, t = Tp([
      A("columnUtils")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Pp = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Dp = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ap = (
  /** @class */
  function(n) {
    Pp(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.createDisplayedGroups = function(e, r, i, o, s) {
      var a = this, l = [], u, c, p = this.mapOldGroupsById(s);
      return e.forEach(function(d) {
        for (var v = a.getOriginalPathForColumn(r, d), f = [], y = !c, C = 0; C < v.length; C++)
          if (y || v[C] !== c[C]) {
            var m = a.createColumnGroup(v[C], i, p, o);
            f[C] = m, C == 0 ? l.push(m) : f[C - 1].addChild(m);
          } else
            f[C] = u[C];
        var w = f.length === 0;
        if (w)
          l.push(d);
        else {
          var E = q(f);
          E.addChild(d);
        }
        u = f, c = v;
      }), this.setupParentsIntoColumns(l, null), l;
    }, t.prototype.createColumnGroup = function(e, r, i, o) {
      var s = e.getGroupId(), a = r.getInstanceIdForKey(s), l = Te.createUniqueId(s, a), u = i[l];
      return u && u.getProvidedColumnGroup() !== e && (u = null), O(u) ? u.reset() : (u = new Te(e, s, a, o), this.context.createBean(u)), u;
    }, t.prototype.mapOldGroupsById = function(e) {
      var r = {}, i = function(o) {
        o.forEach(function(s) {
          if (s instanceof Te) {
            var a = s;
            r[s.getUniqueId()] = a, i(a.getChildren());
          }
        });
      };
      return e && i(e), r;
    }, t.prototype.setupParentsIntoColumns = function(e, r) {
      var i = this;
      e.forEach(function(o) {
        if (o.setParent(r), o instanceof Te) {
          var s = o;
          i.setupParentsIntoColumns(s.getChildren(), s);
        }
      });
    }, t.prototype.getOriginalPathForColumn = function(e, r) {
      var i = [], o = !1, s = function(a, l) {
        for (var u = 0; u < a.length; u++) {
          if (o)
            return;
          var c = a[u];
          c instanceof ie ? (s(c.getChildren(), l + 1), i[l] = c) : c === r && (o = !0);
        }
      };
      return s(e, 0), o ? i : (console.warn("AG Grid: could not get path"), null);
    }, t = Dp([
      A("displayedGroupCreator")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Fp = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Lp = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Mp = (
  /** @class */
  function(n) {
    Fp(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.componentsMappedByName = {}, e;
    }
    return t.prototype.setupComponents = function(e) {
      var r = this;
      e && e.forEach(function(i) {
        return r.addComponent(i);
      });
    }, t.prototype.addComponent = function(e) {
      var r = e.componentName.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(), i = r.toUpperCase();
      this.componentsMappedByName[i] = e.componentClass;
    }, t.prototype.getComponentClass = function(e) {
      return this.componentsMappedByName[e];
    }, t = Lp([
      A("agStackComponentsRegistry")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
function ct(n, t, e) {
  e == null || e == "" ? Qn(n, t) : We(n, t, e);
}
function We(n, t, e) {
  n.setAttribute(vl(t), e.toString());
}
function Qn(n, t) {
  n.removeAttribute(vl(t));
}
function vl(n) {
  return "aria-" + n;
}
function ue(n, t) {
  t ? n.setAttribute("role", t) : n.removeAttribute("role");
}
function gl(n) {
  var t;
  return n === "asc" ? t = "ascending" : n === "desc" ? t = "descending" : n === "mixed" ? t = "other" : t = "none", t;
}
function yl(n) {
  return parseInt(n.getAttribute("aria-level"), 10);
}
function Cl(n) {
  return parseInt(n.getAttribute("aria-posinset"), 10);
}
function Ip(n) {
  return n.getAttribute("aria-describedby") || "";
}
function Vt(n, t) {
  ct(n, "label", t);
}
function Xn(n, t) {
  ct(n, "labelledby", t);
}
function ml(n, t) {
  ct(n, "description", t);
}
function wl(n, t) {
  ct(n, "describedby", t);
}
function xp(n, t) {
  ct(n, "live", t);
}
function Sl(n, t) {
  ct(n, "level", t);
}
function Jn(n, t) {
  ct(n, "disabled", t);
}
function uo(n, t) {
  ct(n, "hidden", t);
}
function Ue(n, t) {
  We(n, "expanded", t);
}
function El(n) {
  Qn(n, "expanded");
}
function Zn(n, t) {
  We(n, "setsize", t);
}
function es(n, t) {
  We(n, "posinset", t);
}
function _l(n, t) {
  We(n, "multiselectable", t);
}
function Rl(n, t) {
  We(n, "rowcount", t);
}
function ts(n, t) {
  We(n, "rowindex", t);
}
function Ol(n, t) {
  We(n, "colcount", t);
}
function rs(n, t) {
  We(n, "colindex", t);
}
function Tl(n, t) {
  We(n, "colspan", t);
}
function bl(n, t) {
  We(n, "sort", t);
}
function Pl(n) {
  Qn(n, "sort");
}
function or(n, t) {
  ct(n, "selected", t);
}
function Dl(n, t) {
  We(n, "checked", t === void 0 ? "mixed" : t);
}
var Np = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  setAriaRole: ue,
  getAriaSortState: gl,
  getAriaLevel: yl,
  getAriaPosInSet: Cl,
  getAriaDescribedBy: Ip,
  setAriaLabel: Vt,
  setAriaLabelledBy: Xn,
  setAriaDescription: ml,
  setAriaDescribedBy: wl,
  setAriaLive: xp,
  setAriaLevel: Sl,
  setAriaDisabled: Jn,
  setAriaHidden: uo,
  setAriaExpanded: Ue,
  removeAriaExpanded: El,
  setAriaSetSize: Zn,
  setAriaPosInSet: es,
  setAriaMultiSelectable: _l,
  setAriaRowCount: Rl,
  setAriaRowIndex: ts,
  setAriaColCount: Ol,
  setAriaColIndex: rs,
  setAriaColSpan: Tl,
  setAriaSort: bl,
  removeAriaSort: Pl,
  setAriaSelected: or,
  setAriaChecked: Dl
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Oo, ri, To, bo, Po, Do, Dn, An;
function ot() {
  return Oo === void 0 && (Oo = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)), Oo;
}
function is() {
  if (ri === void 0)
    if (ot()) {
      var n = navigator.userAgent.match(/version\/(\d+)/i);
      n && (ri = n[1] != null ? parseFloat(n[1]) : 0);
    } else
      ri = 0;
  return ri;
}
function Kr() {
  if (To === void 0) {
    var n = window;
    To = !!n.chrome && (!!n.chrome.webstore || !!n.chrome.runtime) || /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
  }
  return To;
}
function os() {
  return bo === void 0 && (bo = /(firefox)/i.test(navigator.userAgent)), bo;
}
function ns() {
  return Po === void 0 && (Po = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)), Po;
}
function Ot() {
  return Do === void 0 && (Do = /iPad|iPhone|iPod/.test(navigator.platform) || // eslint-disable-next-line
  navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1), Do;
}
function co() {
  return !ot() || is() >= 15;
}
function Bi(n) {
  if (!n)
    return null;
  var t = n.tabIndex, e = n.getAttribute("tabIndex");
  return t === -1 && (e === null || e === "" && !os()) ? null : t.toString();
}
function Al() {
  if (!document.body)
    return -1;
  var n = 1e6, t = navigator.userAgent.toLowerCase().match(/firefox/) ? 6e6 : 1e9, e = document.createElement("div");
  for (document.body.appendChild(e); ; ) {
    var r = n * 2;
    if (e.style.height = r + "px", r > t || e.clientHeight !== r)
      break;
    n = r;
  }
  return document.body.removeChild(e), n;
}
function Fl() {
  var n, t, e;
  return (t = (n = document.body) === null || n === void 0 ? void 0 : n.clientWidth) !== null && t !== void 0 ? t : window.innerHeight || ((e = document.documentElement) === null || e === void 0 ? void 0 : e.clientWidth) || -1;
}
function Ll() {
  var n, t, e;
  return (t = (n = document.body) === null || n === void 0 ? void 0 : n.clientHeight) !== null && t !== void 0 ? t : window.innerHeight || ((e = document.documentElement) === null || e === void 0 ? void 0 : e.clientHeight) || -1;
}
function Ml() {
  return An == null && Il(), An;
}
function Il() {
  var n = document.body, t = document.createElement("div");
  t.style.width = t.style.height = "100px", t.style.opacity = "0", t.style.overflow = "scroll", t.style.msOverflowStyle = "scrollbar", t.style.position = "absolute", n.appendChild(t);
  var e = t.offsetWidth - t.clientWidth;
  e === 0 && t.clientWidth === 0 && (e = null), t.parentNode && t.parentNode.removeChild(t), e != null && (An = e, Dn = e === 0);
}
function Jt() {
  return Dn == null && Il(), Dn;
}
var Gp = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  isBrowserSafari: ot,
  getSafariVersion: is,
  isBrowserChrome: Kr,
  isBrowserFirefox: os,
  isMacOsUserAgent: ns,
  isIOSUserAgent: Ot,
  browserSupportsPreventScroll: co,
  getTabIndex: Bi,
  getMaxDivHeight: Al,
  getBodyWidth: Fl,
  getBodyHeight: Ll,
  getScrollbarWidth: Ml,
  isInvisibleScrollbar: Jt
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
function Zt(n, t) {
  return n.toString().padStart(t, "0");
}
function xl(n, t) {
  for (var e = [], r = n; r <= t; r++)
    e.push(r);
  return e;
}
function Hp(n) {
  return typeof n == "string" && (n = parseInt(n, 10)), typeof n == "number" ? Math.floor(n) : null;
}
function Vp(n, t) {
  for (var e = "", r = 0; r < t; r++)
    e += String.fromCharCode(n & 255), n >>>= 8;
  return e;
}
function Bp(n, t, e) {
  return typeof n != "number" ? "" : ss(Math.round(n * 100) / 100, t, e);
}
function ss(n, t, e) {
  return typeof n != "number" ? "" : n.toString().replace(".", e).replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1" + t);
}
function Wp(n) {
  return n == null ? null : n.reduce(function(t, e) {
    return t + e;
  }, 0);
}
function jp(n, t) {
  return n >= 0 ? n : t;
}
function kp(n, t) {
  var e = parseInt(n, 10);
  return !isNaN(e) && isFinite(e) && e > 0 ? e : t;
}
var Up = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  padStartWidthZeros: Zt,
  createArrayOfNumbers: xl,
  cleanNumber: Hp,
  decToHex: Vp,
  formatNumberTwoDecimalPlacesAndCommas: Bp,
  formatNumberCommas: ss,
  sum: Wp,
  zeroOrGreater: jp,
  oneOrGreater: kp
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ao = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
};
function Br(n, t, e) {
  if (t === void 0 && (t = !0), e === void 0 && (e = "-"), !n)
    return null;
  var r = [n.getFullYear(), n.getMonth() + 1, n.getDate()].map(function(i) {
    return Zt(i, 2);
  }).join(e);
  return t && (r += " " + [n.getHours(), n.getMinutes(), n.getSeconds()].map(function(i) {
    return Zt(i, 2);
  }).join(":")), r;
}
var Fo = function(n) {
  if (n > 3 && n < 21)
    return "th";
  var t = n % 10;
  switch (t) {
    case 1:
      return "st";
    case 2:
      return "nd";
    case 3:
      return "rd";
  }
  return "th";
};
function Fi(n, t) {
  t === void 0 && (t = "YYYY-MM-DD");
  var e = Zt(n.getFullYear(), 4), r = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ], i = [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ], o = {
    YYYY: function() {
      return e.slice(e.length - 4, e.length);
    },
    YY: function() {
      return e.slice(e.length - 2, e.length);
    },
    Y: function() {
      return "" + n.getFullYear();
    },
    MMMM: function() {
      return r[n.getMonth()];
    },
    MMM: function() {
      return r[n.getMonth()].slice(0, 3);
    },
    MM: function() {
      return Zt(n.getMonth() + 1, 2);
    },
    Mo: function() {
      return "" + (n.getMonth() + 1) + Fo(n.getMonth() + 1);
    },
    M: function() {
      return "" + (n.getMonth() + 1);
    },
    Do: function() {
      return "" + n.getDate() + Fo(n.getDate());
    },
    DD: function() {
      return Zt(n.getDate(), 2);
    },
    D: function() {
      return "" + n.getDate();
    },
    dddd: function() {
      return i[n.getDay()];
    },
    ddd: function() {
      return i[n.getDay()].slice(0, 3);
    },
    dd: function() {
      return i[n.getDay()].slice(0, 2);
    },
    do: function() {
      return "" + n.getDay() + Fo(n.getDay());
    },
    d: function() {
      return "" + n.getDay();
    }
  }, s = new RegExp(Object.keys(o).join("|"), "g");
  return t.replace(s, function(a) {
    return a in o ? o[a]() : a;
  });
}
function Et(n) {
  if (!n)
    return null;
  var t = Ao(n.split(" "), 2), e = t[0], r = t[1];
  if (!e)
    return null;
  var i = e.split("-").map(function(f) {
    return parseInt(f, 10);
  });
  if (i.filter(function(f) {
    return !isNaN(f);
  }).length !== 3)
    return null;
  var o = Ao(i, 3), s = o[0], a = o[1], l = o[2], u = new Date(s, a - 1, l);
  if (u.getFullYear() !== s || u.getMonth() !== a - 1 || u.getDate() !== l)
    return null;
  if (!r || r === "00:00:00")
    return u;
  var c = Ao(r.split(":").map(function(f) {
    return parseInt(f, 10);
  }), 3), p = c[0], d = c[1], v = c[2];
  return p >= 0 && p < 24 && u.setHours(p), d >= 0 && d < 60 && u.setMinutes(d), v >= 0 && v < 60 && u.setSeconds(v), u;
}
var zp = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  serialiseDate: Br,
  dateToFormattedString: Fi,
  parseDateTimeFromString: Et
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Kp = function(n) {
  var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
  if (e)
    return e.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, $p = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, ii;
function Yp(n, t, e) {
  for (var r = n.parentElement, i = r && r.firstChild; i; )
    t && i.classList.toggle(t, i === n), e && i.classList.toggle(e, i !== n), i = i.nextSibling;
}
var Nl = "[tabindex], input, select, button, textarea, [href]", as = ".ag-hidden, .ag-hidden *, [disabled], .ag-disabled, .ag-disabled *";
function ls(n) {
  var t = Element.prototype.matches || Element.prototype.msMatchesSelector, e = "input, select, button, textarea", r = t.call(n, e), i = t.call(n, as), o = pr(n), s = r && !i && o;
  return s;
}
function k(n, t, e) {
  e === void 0 && (e = {});
  var r = e.skipAriaHidden;
  n.classList.toggle("ag-hidden", !t), r || uo(n, !t);
}
function Gl(n, t, e) {
  e === void 0 && (e = {});
  var r = e.skipAriaHidden;
  n.classList.toggle("ag-invisible", !t), r || uo(n, !t);
}
function nr(n, t) {
  var e = "disabled", r = t ? function(i) {
    return i.setAttribute(e, "");
  } : function(i) {
    return i.removeAttribute(e);
  };
  r(n), fs(n.querySelectorAll("input"), function(i) {
    return r(i);
  });
}
function Mt(n, t, e) {
  for (var r = 0; n; ) {
    if (n.classList.contains(t))
      return !0;
    if (n = n.parentElement, typeof e == "number") {
      if (++r > e)
        break;
    } else if (n === e)
      break;
  }
  return !1;
}
function Bt(n) {
  var t = window.getComputedStyle(n), e = t.height, r = t.width, i = t.borderTopWidth, o = t.borderRightWidth, s = t.borderBottomWidth, a = t.borderLeftWidth, l = t.paddingTop, u = t.paddingRight, c = t.paddingBottom, p = t.paddingLeft, d = t.marginTop, v = t.marginRight, f = t.marginBottom, y = t.marginLeft, C = t.boxSizing;
  return {
    height: parseFloat(e),
    width: parseFloat(r),
    borderTopWidth: parseFloat(i),
    borderRightWidth: parseFloat(o),
    borderBottomWidth: parseFloat(s),
    borderLeftWidth: parseFloat(a),
    paddingTop: parseFloat(l),
    paddingRight: parseFloat(u),
    paddingBottom: parseFloat(c),
    paddingLeft: parseFloat(p),
    marginTop: parseFloat(d),
    marginRight: parseFloat(v),
    marginBottom: parseFloat(f),
    marginLeft: parseFloat(y),
    boxSizing: C
  };
}
function $r(n) {
  var t = Bt(n);
  return t.boxSizing === "border-box" ? t.height - t.paddingTop - t.paddingBottom : t.height;
}
function po(n) {
  var t = Bt(n);
  return t.boxSizing === "border-box" ? t.width - t.paddingLeft - t.paddingRight : t.width;
}
function us(n) {
  var t = Bt(n), e = t.marginBottom + t.marginTop;
  return Math.ceil(n.offsetHeight + e);
}
function ho(n) {
  var t = Bt(n), e = t.marginLeft + t.marginRight;
  return Math.ceil(n.offsetWidth + e);
}
function Wr() {
  if (typeof ii == "boolean")
    return ii;
  var n = document.createElement("div");
  return n.style.direction = "rtl", n.style.width = "1px", n.style.height = "1px", n.style.position = "fixed", n.style.top = "0px", n.style.overflow = "hidden", n.dir = "rtl", n.innerHTML = /* html */
  `<div style="width: 2px">
            <span style="display: inline-block; width: 1px"></span>
            <span style="display: inline-block; width: 1px"></span>
        </div>`, document.body.appendChild(n), n.scrollLeft = 1, ii = Math.floor(n.scrollLeft) === 0, document.body.removeChild(n), ii;
}
function jr(n, t) {
  var e = n.scrollLeft;
  return t && (e = Math.abs(e), Kr() && !Wr() && (e = n.scrollWidth - n.clientWidth - e)), e;
}
function Wi(n, t, e) {
  e && (Wr() ? t *= -1 : (ot() || Kr()) && (t = n.scrollWidth - n.clientWidth - t)), n.scrollLeft = t;
}
function Fe(n) {
  for (; n && n.firstChild; )
    n.removeChild(n.firstChild);
}
function qp(n, t) {
  lt(n.querySelector(t));
}
function lt(n) {
  n && n.parentNode && n.parentNode.removeChild(n);
}
function pr(n) {
  return n.offsetParent !== null;
}
function he(n) {
  var t = document.createElement("div");
  return t.innerHTML = (n || "").trim(), t.firstChild;
}
function Qp(n, t) {
  n.lastChild ? n.insertAdjacentHTML("afterbegin", t) : n.innerHTML = t;
}
function Xp(n, t) {
  if (n.attributes && n.attributes[t]) {
    var e = n.attributes[t];
    return e.value;
  }
  return null;
}
function Fn(n) {
  return n && n.clientHeight ? n.clientHeight : 0;
}
function Ln(n) {
  return n && n.clientWidth ? n.clientWidth : 0;
}
function cs(n, t, e) {
  if (!(e && e.nextSibling === t)) {
    var r = document.activeElement, i = t.contains(r);
    e ? e.nextSibling ? n.insertBefore(t, e.nextSibling) : n.appendChild(t) : n.firstChild && n.firstChild !== t && n.insertAdjacentElement("afterbegin", t), i && r && co() && r.focus({ preventScroll: !0 });
  }
}
function ps(n, t) {
  for (var e = 0; e < t.length; e++) {
    var r = t[e], i = n.children[e];
    i !== r && n.insertBefore(r, i);
  }
}
function Hl(n, t, e) {
  e ? e.insertAdjacentElement("afterend", t) : n.firstChild ? n.insertAdjacentElement("afterbegin", t) : n.appendChild(t);
}
function Jp(n, t) {
  O(n.firstChild) ? n.insertBefore(t, n.firstChild) : n.appendChild(t);
}
function ds(n, t) {
  var e, r;
  if (t)
    try {
      for (var i = Kp(Object.entries(t)), o = i.next(); !o.done; o = i.next()) {
        var s = $p(o.value, 2), a = s[0], l = s[1];
        if (!(!a || !a.length || l == null)) {
          var u = a.replace(/[A-Z]/g, function(v) {
            return "-" + v.toLocaleLowerCase();
          }), c = l.toString(), p = c.replace(/\s*!important/g, ""), d = p.length != c.length ? "important" : void 0;
          n.style.setProperty(u, l, d);
        }
      }
    } catch (v) {
      e = { error: v };
    } finally {
      try {
        o && !o.done && (r = i.return) && r.call(i);
      } finally {
        if (e)
          throw e.error;
      }
    }
}
function Vl(n) {
  return n.clientWidth < n.scrollWidth;
}
function Bl(n) {
  return n.clientHeight < n.scrollHeight;
}
function Yr(n, t) {
  t === "flex" ? (n.style.removeProperty("width"), n.style.removeProperty("minWidth"), n.style.removeProperty("maxWidth"), n.style.flex = "1 1 auto") : Be(n, t);
}
function Be(n, t) {
  t = hs(t), n.style.width = t.toString(), n.style.maxWidth = t.toString(), n.style.minWidth = t.toString();
}
function Zp(n, t) {
  t === "flex" ? (n.style.removeProperty("height"), n.style.removeProperty("minHeight"), n.style.removeProperty("maxHeight"), n.style.flex = "1 1 auto") : It(n, t);
}
function It(n, t) {
  t = hs(t), n.style.height = t.toString(), n.style.maxHeight = t.toString(), n.style.minHeight = t.toString();
}
function hs(n) {
  return typeof n == "number" ? n + "px" : n;
}
function qr(n) {
  return n instanceof Node || n instanceof HTMLElement;
}
function Wl(n) {
  if (n == null)
    return [];
  var t = [];
  return fs(n, function(e) {
    return t.push(e);
  }), t;
}
function jl(n, t) {
  if (n)
    for (var e = 0; e < n.length; e++) {
      var r = n[e];
      t(r.name, r.value);
    }
}
function Ir(n, t, e) {
  e == null ? n.removeAttribute(t) : n.setAttribute(t, e.toString());
}
function fs(n, t) {
  if (n != null)
    for (var e = 0; e < n.length; e++)
      t(n[e]);
}
var ed = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  radioCssClass: Yp,
  FOCUSABLE_SELECTOR: Nl,
  FOCUSABLE_EXCLUDE: as,
  isFocusableFormField: ls,
  setDisplayed: k,
  setVisible: Gl,
  setDisabled: nr,
  isElementChildOfClass: Mt,
  getElementSize: Bt,
  getInnerHeight: $r,
  getInnerWidth: po,
  getAbsoluteHeight: us,
  getAbsoluteWidth: ho,
  isRtlNegativeScroll: Wr,
  getScrollLeft: jr,
  setScrollLeft: Wi,
  clearElement: Fe,
  removeElement: qp,
  removeFromParent: lt,
  isVisible: pr,
  loadTemplate: he,
  appendHtml: Qp,
  getElementAttribute: Xp,
  offsetHeight: Fn,
  offsetWidth: Ln,
  ensureDomOrder: cs,
  setDomChildOrder: ps,
  insertWithDomOrder: Hl,
  prependDC: Jp,
  addStylesToElement: ds,
  isHorizontalScrollShowing: Vl,
  isVerticalScrollShowing: Bl,
  setElementWidth: Yr,
  setFixedWidth: Be,
  setElementHeight: Zp,
  setFixedHeight: It,
  formatSize: hs,
  isNodeOrElement: qr,
  copyNodeList: Wl,
  iterateNamedNodeMap: jl,
  addOrRemoveAttribute: Ir,
  nodeListForEach: fs
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var kl = {
  // header column group shown when expanded (click to contract)
  columnGroupOpened: "expanded",
  // header column group shown when contracted (click to expand)
  columnGroupClosed: "contracted",
  // tool panel column group contracted (click to expand)
  columnSelectClosed: "tree-closed",
  // tool panel column group expanded (click to contract)
  columnSelectOpen: "tree-open",
  // column tool panel header expand/collapse all button, shown when some children are expanded and
  //     others are collapsed
  columnSelectIndeterminate: "tree-indeterminate",
  // shown on ghost icon while dragging column to the side of the grid to pin
  columnMovePin: "pin",
  // shown on ghost icon while dragging over part of the page that is not a drop zone
  columnMoveHide: "eye-slash",
  // shown on ghost icon while dragging columns to reorder
  columnMoveMove: "arrows",
  // animating icon shown when dragging a column to the right of the grid causes horizontal scrolling
  columnMoveLeft: "left",
  // animating icon shown when dragging a column to the left of the grid causes horizontal scrolling
  columnMoveRight: "right",
  // shown on ghost icon while dragging over Row Groups drop zone
  columnMoveGroup: "group",
  // shown on ghost icon while dragging over Values drop zone
  columnMoveValue: "aggregation",
  // shown on ghost icon while dragging over pivot drop zone
  columnMovePivot: "pivot",
  // shown on ghost icon while dragging over drop zone that doesn't support it, e.g.
  //     string column over aggregation drop zone
  dropNotAllowed: "not-allowed",
  // shown on row group when contracted (click to expand)
  groupContracted: "tree-closed",
  // shown on row group when expanded (click to contract)
  groupExpanded: "tree-open",
  // set filter tree list group contracted (click to expand)
  setFilterGroupClosed: "tree-closed",
  // set filter tree list group expanded (click to contract)
  setFilterGroupOpen: "tree-open",
  // set filter tree list expand/collapse all button, shown when some children are expanded and
  //     others are collapsed
  setFilterGroupIndeterminate: "tree-indeterminate",
  // context menu chart item
  chart: "chart",
  // chart window title bar
  close: "cross",
  // X (remove) on column 'pill' after adding it to a drop zone list
  cancel: "cancel",
  // indicates the currently active pin state in the "Pin column" sub-menu of the column menu
  check: "tick",
  // "go to first" button in pagination controls
  first: "first",
  // "go to previous" button in pagination controls
  previous: "previous",
  // "go to next" button in pagination controls
  next: "next",
  // "go to last" button in pagination controls
  last: "last",
  // shown on top right of chart when chart is linked to range data (click to unlink)
  linked: "linked",
  // shown on top right of chart when chart is not linked to range data (click to link)
  unlinked: "unlinked",
  // "Choose colour" button on chart settings tab
  colorPicker: "color-picker",
  // rotating spinner shown by the loading cell renderer
  groupLoading: "loading",
  // button to launch enterprise column menu
  menu: "menu",
  // filter tool panel tab
  filter: "filter",
  // column tool panel tab
  columns: "columns",
  // button in chart regular size window title bar (click to maximise)
  maximize: "maximize",
  // button in chart maximised window title bar (click to make regular size)
  minimize: "minimize",
  // "Pin column" item in column header menu
  menuPin: "pin",
  // "Value aggregation" column menu item (shown on numeric columns when grouping is active)"
  menuValue: "aggregation",
  // "Group by {column-name}" item in column header menu
  menuAddRowGroup: "group",
  // "Un-Group by {column-name}" item in column header menu
  menuRemoveRowGroup: "group",
  // context menu copy item
  clipboardCopy: "copy",
  // context menu cut item
  clipboardCut: "cut",
  // context menu paste item
  clipboardPaste: "paste",
  // identifies the pivot drop zone
  pivotPanel: "pivot",
  // "Row groups" drop zone in column tool panel
  rowGroupPanel: "group",
  // columns tool panel Values drop zone
  valuePanel: "aggregation",
  // drag handle used to pick up draggable columns
  columnDrag: "grip",
  // drag handle used to pick up draggable rows
  rowDrag: "grip",
  // context menu export item
  save: "save",
  // csv export
  csvExport: "csv",
  // excel export,
  excelExport: "excel",
  // icon on dropdown editors
  smallDown: "small-down",
  // version of small-right used in RTL mode
  smallLeft: "small-left",
  // separater between column 'pills' when you add multiple columns to the header drop zone
  smallRight: "small-right",
  smallUp: "small-up",
  // show on column header when column is sorted ascending
  sortAscending: "asc",
  // show on column header when column is sorted descending
  sortDescending: "desc",
  // show on column header when column has no sort, only when enabled with gridOptions.unSortIcon=true
  sortUnSort: "none"
};
function xe(n, t, e) {
  var r = oe(n, t, e);
  if (r) {
    var i = r.className;
    if (typeof i == "string" && i.indexOf("ag-icon") > -1 || typeof i == "object" && i["ag-icon"])
      return r;
  }
  var o = document.createElement("span");
  return o.appendChild(r), o;
}
function oe(n, t, e, r) {
  var i = null, o = e && e.getColDef().icons;
  if (o && (i = o[n]), t && !i) {
    var s = t.get("icons");
    s && (i = s[n]);
  }
  if (i) {
    var a = void 0;
    if (typeof i == "function")
      a = i();
    else if (typeof i == "string")
      a = i;
    else
      throw new Error("icon from grid options needs to be a string or a function");
    if (typeof a == "string")
      return he(a);
    if (qr(a))
      return a;
    console.warn("AG Grid: iconRenderer should return back a string or a dom object");
  } else {
    var l = document.createElement("span"), u = kl[n];
    return u || (r ? u = n : (console.warn("AG Grid: Did not find icon " + n), u = "")), l.setAttribute("class", "ag-icon ag-icon-" + u), l.setAttribute("unselectable", "on"), ue(l, "presentation"), l;
  }
}
var td = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  iconNameClassMap: kl,
  createIcon: xe,
  createIconNoSpan: oe
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var _ = (
  /** @class */
  function() {
    function n() {
    }
    return n.BACKSPACE = "Backspace", n.TAB = "Tab", n.ENTER = "Enter", n.ESCAPE = "Escape", n.SPACE = " ", n.LEFT = "ArrowLeft", n.UP = "ArrowUp", n.RIGHT = "ArrowRight", n.DOWN = "ArrowDown", n.DELETE = "Delete", n.F2 = "F2", n.PAGE_UP = "PageUp", n.PAGE_DOWN = "PageDown", n.PAGE_HOME = "Home", n.PAGE_END = "End", n.A = "KeyA", n.C = "KeyC", n.D = "KeyD", n.V = "KeyV", n.X = "KeyX", n.Y = "KeyY", n.Z = "KeyZ", n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var rd = 65, id = 67, od = 86, nd = 68, sd = 90, ad = 89;
function Ul(n) {
  if (n.altKey || n.ctrlKey || n.metaKey)
    return !1;
  var t = n.key.length === 1;
  return t;
}
function ji(n, t, e, r, i) {
  var o = r ? r.getColDef().suppressKeyboardEvent : void 0;
  if (!o)
    return !1;
  var s = {
    event: t,
    editing: i,
    column: r,
    api: n.api,
    node: e,
    data: e.data,
    colDef: r.getColDef(),
    context: n.context,
    columnApi: n.columnApi
  };
  if (o) {
    var a = o(s);
    if (a)
      return !0;
  }
  return !1;
}
function zl(n, t, e, r) {
  var i = r.getDefinition(), o = i && i.suppressHeaderKeyboardEvent;
  if (!O(o))
    return !1;
  var s = {
    api: n.api,
    columnApi: n.columnApi,
    context: n.context,
    colDef: i,
    column: r,
    headerRowIndex: e,
    event: t
  };
  return !!o(s);
}
function Kl(n) {
  var t = n.keyCode, e;
  switch (t) {
    case rd:
      e = _.A;
      break;
    case id:
      e = _.C;
      break;
    case od:
      e = _.V;
      break;
    case nd:
      e = _.D;
      break;
    case sd:
      e = _.Z;
      break;
    case ad:
      e = _.Y;
      break;
    default:
      e = n.code;
  }
  return e;
}
function $l(n, t) {
  return t === void 0 && (t = !1), n === _.DELETE ? !0 : !t && n === _.BACKSPACE ? ns() : !1;
}
var ld = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  isEventFromPrintableCharacter: Ul,
  isUserSuppressingKeyboardEvent: ji,
  isUserSuppressingHeaderKeyboardEvent: zl,
  normaliseQwertyAzerty: Kl,
  isDeleteKey: $l
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
function vs(n, t, e) {
  if (e === 0)
    return !1;
  var r = Math.abs(n.clientX - t.clientX), i = Math.abs(n.clientY - t.clientY);
  return Math.max(r, i) <= e;
}
var ud = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  areEventsNear: vs
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
function cd(n, t) {
  if (!n)
    return !1;
  for (var e = function(a, l) {
    var u = t[a.id], c = t[l.id], p = u !== void 0, d = c !== void 0, v = p && d, f = !p && !d;
    return v ? u - c : f ? a.__objectId - l.__objectId : p ? 1 : -1;
  }, r, i, o = !1, s = 0; s < n.length - 1; s++)
    if (r = n[s], i = n[s + 1], e(r, i) > 0) {
      o = !0;
      break;
    }
  return o ? (n.sort(e), !0) : !1;
}
function pd(n, t) {
  var e = [];
  r(n);
  function r(i) {
    i && i.forEach(function(o) {
      if (o.group || o.hasChildren()) {
        e.push(o.key);
        var s = e.join("|");
        t(o, s), r(o.childrenAfterGroup), e.pop();
      }
    });
  }
}
var dd = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  sortRowNodesByOrder: cd,
  traverseNodesWithKey: pd
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
function gs(n) {
  var t = /* @__PURE__ */ new Set();
  return n.forEach(function(e) {
    return t.add(e);
  }), t;
}
var hd = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  convertToSet: gs
});
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ne = function() {
  return ne = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, ne.apply(this, arguments);
}, fd = ne(ne(ne(ne(ne(ne(ne(ne(ne(ne(ne(ne(ne(ne(ne(ne(ne(ne({}, Np), Xc), Gp), zp), ed), Zc), xc), ap), Oc), td), ld), mp), ud), Up), Lc), dd), hd), gp), G = fd;
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var sr = (
  /** @class */
  function() {
    function n(t, e) {
      t === void 0 && (t = 0), e === void 0 && (e = 1), this.nextValue = t, this.step = e;
    }
    return n.prototype.next = function() {
      var t = this.nextValue;
      return this.nextValue += this.step, t;
    }, n.prototype.peek = function() {
      return this.nextValue;
    }, n.prototype.skip = function(t) {
      this.nextValue += t;
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var $t;
(function(n) {
  n[n.IN_PROGRESS = 0] = "IN_PROGRESS", n[n.RESOLVED = 1] = "RESOLVED";
})($t || ($t = {}));
var Ge = (
  /** @class */
  function() {
    function n(t) {
      var e = this;
      this.status = $t.IN_PROGRESS, this.resolution = null, this.waiters = [], t(function(r) {
        return e.onDone(r);
      }, function(r) {
        return e.onReject(r);
      });
    }
    return n.all = function(t) {
      return new n(function(e) {
        var r = t.length, i = new Array(r);
        t.forEach(function(o, s) {
          o.then(function(a) {
            i[s] = a, r--, r === 0 && e(i);
          });
        });
      });
    }, n.resolve = function(t) {
      return t === void 0 && (t = null), new n(function(e) {
        return e(t);
      });
    }, n.prototype.then = function(t) {
      var e = this;
      return new n(function(r) {
        e.status === $t.RESOLVED ? r(t(e.resolution)) : e.waiters.push(function(i) {
          return r(t(i));
        });
      });
    }, n.prototype.resolveNow = function(t, e) {
      return this.status === $t.RESOLVED ? e(this.resolution) : t;
    }, n.prototype.onDone = function(t) {
      this.status = $t.RESOLVED, this.resolution = t, this.waiters.forEach(function(e) {
        return e(t);
      });
    }, n.prototype.onReject = function(t) {
      console.warn("TBI");
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var vd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Mn = function() {
  return Mn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Mn.apply(this, arguments);
}, Lo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, ke;
(function(n) {
  n[n.NOTHING = 0] = "NOTHING", n[n.WAITING_TO_SHOW = 1] = "WAITING_TO_SHOW", n[n.SHOWING = 2] = "SHOWING";
})(ke || (ke = {}));
var ys = (
  /** @class */
  function(n) {
    vd(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.DEFAULT_SHOW_TOOLTIP_DELAY = 2e3, r.DEFAULT_HIDE_TOOLTIP_DELAY = 1e4, r.SHOW_QUICK_TOOLTIP_DIFF = 1e3, r.FADE_OUT_TOOLTIP_TIMEOUT = 1e3, r.state = ke.NOTHING, r.tooltipInstanceCount = 0, r.tooltipMouseTrack = !1, r.parentComp = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.tooltipShowDelay = this.getTooltipDelay("show") || this.DEFAULT_SHOW_TOOLTIP_DELAY, this.tooltipHideDelay = this.getTooltipDelay("hide") || this.DEFAULT_HIDE_TOOLTIP_DELAY, this.tooltipMouseTrack = this.gridOptionsService.is("tooltipMouseTrack");
      var e = this.parentComp.getGui();
      this.addManagedListener(e, "mouseenter", this.onMouseEnter.bind(this)), this.addManagedListener(e, "mouseleave", this.onMouseLeave.bind(this)), this.addManagedListener(e, "mousemove", this.onMouseMove.bind(this)), this.addManagedListener(e, "mousedown", this.onMouseDown.bind(this)), this.addManagedListener(e, "keydown", this.onKeyDown.bind(this));
    }, t.prototype.destroy = function() {
      this.setToDoNothing(), n.prototype.destroy.call(this);
    }, t.prototype.onMouseEnter = function(e) {
      if (!Ot() && this.state == ke.NOTHING) {
        var r = this.isLastTooltipHiddenRecently() ? 200 : this.tooltipShowDelay;
        this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), r), this.lastMouseEvent = e, this.state = ke.WAITING_TO_SHOW;
      }
    }, t.prototype.onMouseLeave = function() {
      this.setToDoNothing();
    }, t.prototype.onKeyDown = function() {
      this.setToDoNothing();
    }, t.prototype.setToDoNothing = function() {
      this.state === ke.SHOWING && this.hideTooltip(), this.clearTimeouts(), this.state = ke.NOTHING;
    }, t.prototype.onMouseMove = function(e) {
      this.lastMouseEvent = e, this.tooltipMouseTrack && this.state === ke.SHOWING && this.tooltipComp && this.positionTooltipUnderLastMouseEvent();
    }, t.prototype.onMouseDown = function() {
      this.setToDoNothing();
    }, t.prototype.getTooltipDelay = function(e) {
      var r = this.gridOptionsService.getNum("tooltipShowDelay"), i = this.gridOptionsService.getNum("tooltipHideDelay"), o = e === "show" ? r : i, s = hl(e);
      return O(o) ? (o < 0 && K(function() {
        return console.warn("AG Grid: tooltip" + s + "Delay should not be lower than 0");
      }, "tooltip" + s + "DelayWarn"), Math.max(200, o)) : null;
    }, t.prototype.hideTooltip = function() {
      this.tooltipComp && (this.destroyTooltipComp(), t.lastTooltipHideTime = (/* @__PURE__ */ new Date()).getTime()), this.state = ke.NOTHING;
    }, t.prototype.destroyTooltipComp = function() {
      var e = this;
      this.tooltipComp.getGui().classList.add("ag-tooltip-hiding");
      var r = this.tooltipPopupDestroyFunc, i = this.tooltipComp;
      window.setTimeout(function() {
        r(), e.getContext().destroyBean(i);
      }, this.FADE_OUT_TOOLTIP_TIMEOUT), this.tooltipPopupDestroyFunc = void 0, this.tooltipComp = void 0;
    }, t.prototype.isLastTooltipHiddenRecently = function() {
      var e = (/* @__PURE__ */ new Date()).getTime(), r = t.lastTooltipHideTime;
      return e - r < this.SHOW_QUICK_TOOLTIP_DIFF;
    }, t.prototype.showTooltip = function() {
      var e = Mn({}, this.parentComp.getTooltipParams());
      if (!O(e.value)) {
        this.setToDoNothing();
        return;
      }
      this.state = ke.SHOWING, this.tooltipInstanceCount++;
      var r = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount), i = this.userComponentFactory.getTooltipCompDetails(e);
      i.newAgStackInstance().then(r);
    }, t.prototype.newTooltipComponentCallback = function(e, r) {
      var i = this.state !== ke.SHOWING || this.tooltipInstanceCount !== e;
      if (i) {
        this.getContext().destroyBean(r);
        return;
      }
      var o = r.getGui();
      this.tooltipComp = r, o.classList.contains("ag-tooltip") || o.classList.add("ag-tooltip-custom");
      var s = this.localeService.getLocaleTextFunc(), a = this.popupService.addPopup({
        eChild: o,
        ariaLabel: s("ariaLabelTooltip", "Tooltip")
      });
      a && (this.tooltipPopupDestroyFunc = a.hideFunc), this.positionTooltipUnderLastMouseEvent(), this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.tooltipHideDelay);
    }, t.prototype.positionTooltipUnderLastMouseEvent = function() {
      this.popupService.positionPopupUnderMouseEvent({
        type: "tooltip",
        mouseEvent: this.lastMouseEvent,
        ePopup: this.tooltipComp.getGui(),
        nudgeY: 18,
        skipObserver: this.tooltipMouseTrack
      });
    }, t.prototype.clearTimeouts = function() {
      this.showTooltipTimeoutId && (window.clearTimeout(this.showTooltipTimeoutId), this.showTooltipTimeoutId = void 0), this.hideTooltipTimeoutId && (window.clearTimeout(this.hideTooltipTimeoutId), this.hideTooltipTimeoutId = void 0);
    }, Lo([
      h("popupService")
    ], t.prototype, "popupService", void 0), Lo([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), Lo([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var gd = (
  /** @class */
  function() {
    function n(t) {
      this.cssClassStates = {}, this.getGui = t;
    }
    return n.prototype.addCssClass = function(t) {
      var e = this, r = (t || "").split(" ");
      if (r.length > 1) {
        r.forEach(function(s) {
          return e.addCssClass(s);
        });
        return;
      }
      var i = this.cssClassStates[t] !== !0;
      if (i && t.length) {
        var o = this.getGui();
        o && o.classList.add(t), this.cssClassStates[t] = !0;
      }
    }, n.prototype.removeCssClass = function(t) {
      var e = this, r = (t || "").split(" ");
      if (r.length > 1) {
        r.forEach(function(s) {
          return e.removeCssClass(s);
        });
        return;
      }
      var i = this.cssClassStates[t] !== !1;
      if (i && t.length) {
        var o = this.getGui();
        o && o.classList.remove(t), this.cssClassStates[t] = !1;
      }
    }, n.prototype.containsCssClass = function(t) {
      var e = this.getGui();
      return e ? e.classList.contains(t) : !1;
    }, n.prototype.addOrRemoveCssClass = function(t, e) {
      var r = this;
      if (t) {
        if (t.indexOf(" ") >= 0) {
          var i = (t || "").split(" ");
          if (i.length > 1) {
            i.forEach(function(a) {
              return r.addOrRemoveCssClass(a, e);
            });
            return;
          }
        }
        var o = this.cssClassStates[t] !== e;
        if (o && t.length) {
          var s = this.getGui();
          s && s.classList.toggle(t, e), this.cssClassStates[t] = e;
        }
      }
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var yd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Mo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Cd = new sr(), W = (
  /** @class */
  function(n) {
    yd(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.displayed = !0, r.visible = !0, r.compId = Cd.next(), r.cssClassManager = new gd(function() {
        return r.eGui;
      }), e && r.setTemplate(e), r;
    }
    return t.prototype.preConstructOnComponent = function() {
      this.usingBrowserTooltips = this.gridOptionsService.is("enableBrowserTooltips");
    }, t.prototype.getCompId = function() {
      return this.compId;
    }, t.prototype.getTooltipParams = function() {
      return {
        value: this.tooltipText,
        location: "UNKNOWN"
      };
    }, t.prototype.setTooltip = function(e) {
      var r = this, i = function() {
        r.usingBrowserTooltips ? r.getGui().removeAttribute("title") : r.tooltipFeature = r.destroyBean(r.tooltipFeature);
      }, o = function() {
        r.usingBrowserTooltips ? r.getGui().setAttribute("title", r.tooltipText) : r.tooltipFeature = r.createBean(new ys(r));
      };
      this.tooltipText != e && (this.tooltipText && i(), e != null && (this.tooltipText = e, this.tooltipText && o()));
    }, t.prototype.createChildComponentsFromTags = function(e, r) {
      var i = this, o = Wl(e.childNodes);
      o.forEach(function(s) {
        if (s instanceof HTMLElement) {
          var a = i.createComponentFromElement(s, function(u) {
            var c = u.getGui();
            c && i.copyAttributesFromNode(s, u.getGui());
          }, r);
          if (a) {
            if (a.addItems && s.children.length) {
              i.createChildComponentsFromTags(s, r);
              var l = Array.prototype.slice.call(s.children);
              a.addItems(l);
            }
            i.swapComponentForNode(a, e, s);
          } else
            s.childNodes && i.createChildComponentsFromTags(s, r);
        }
      });
    }, t.prototype.createComponentFromElement = function(e, r, i) {
      var o = e.nodeName, s = i ? i[e.getAttribute("ref")] : void 0, a = this.agStackComponentsRegistry.getComponentClass(o);
      if (a) {
        t.elementGettingCreated = e;
        var l = new a(s);
        return l.setParentComponent(this), this.createBean(l, null, r), l;
      }
      return null;
    }, t.prototype.copyAttributesFromNode = function(e, r) {
      jl(e.attributes, function(i, o) {
        return r.setAttribute(i, o);
      });
    }, t.prototype.swapComponentForNode = function(e, r, i) {
      var o = e.getGui();
      r.replaceChild(o, i), r.insertBefore(document.createComment(i.nodeName), o), this.addDestroyFunc(this.destroyBean.bind(this, e)), this.swapInComponentForQuerySelectors(e, i);
    }, t.prototype.swapInComponentForQuerySelectors = function(e, r) {
      var i = this;
      this.iterateOverQuerySelectors(function(o) {
        i[o.attributeName] === r && (i[o.attributeName] = e);
      });
    }, t.prototype.iterateOverQuerySelectors = function(e) {
      for (var r = Object.getPrototypeOf(this); r != null; ) {
        var i = r.__agComponentMetaData, o = ao(r.constructor);
        i && i[o] && i[o].querySelectors && i[o].querySelectors.forEach(function(s) {
          return e(s);
        }), r = Object.getPrototypeOf(r);
      }
    }, t.prototype.setTemplate = function(e, r) {
      var i = he(e);
      this.setTemplateFromElement(i, r);
    }, t.prototype.setTemplateFromElement = function(e, r) {
      this.eGui = e, this.eGui.__agComponent = this, this.wireQuerySelectors(), this.getContext() && this.createChildComponentsFromTags(this.getGui(), r);
    }, t.prototype.createChildComponentsPreConstruct = function() {
      this.getGui() && this.createChildComponentsFromTags(this.getGui());
    }, t.prototype.wireQuerySelectors = function() {
      var e = this;
      if (this.eGui) {
        var r = this;
        this.iterateOverQuerySelectors(function(i) {
          var o = function(l) {
            return r[i.attributeName] = l;
          }, s = i.refSelector && e.eGui.getAttribute("ref") === i.refSelector;
          if (s)
            o(e.eGui);
          else {
            var a = e.eGui.querySelector(i.querySelector);
            a && o(a.__agComponent || a);
          }
        });
      }
    }, t.prototype.getGui = function() {
      return this.eGui;
    }, t.prototype.getFocusableElement = function() {
      return this.eGui;
    }, t.prototype.setParentComponent = function(e) {
      this.parentComponent = e;
    }, t.prototype.getParentComponent = function() {
      return this.parentComponent;
    }, t.prototype.setGui = function(e) {
      this.eGui = e;
    }, t.prototype.queryForHtmlElement = function(e) {
      return this.eGui.querySelector(e);
    }, t.prototype.queryForHtmlInputElement = function(e) {
      return this.eGui.querySelector(e);
    }, t.prototype.appendChild = function(e, r) {
      if (e != null)
        if (r || (r = this.eGui), qr(e))
          r.appendChild(e);
        else {
          var i = e;
          r.appendChild(i.getGui());
        }
    }, t.prototype.isDisplayed = function() {
      return this.displayed;
    }, t.prototype.setVisible = function(e, r) {
      if (r === void 0 && (r = {}), e !== this.visible) {
        this.visible = e;
        var i = r.skipAriaHidden;
        Gl(this.eGui, e, { skipAriaHidden: i });
      }
    }, t.prototype.setDisplayed = function(e, r) {
      if (r === void 0 && (r = {}), e !== this.displayed) {
        this.displayed = e;
        var i = r.skipAriaHidden;
        k(this.eGui, e, { skipAriaHidden: i });
        var o = {
          type: t.EVENT_DISPLAYED_CHANGED,
          visible: this.displayed
        };
        this.dispatchEvent(o);
      }
    }, t.prototype.destroy = function() {
      this.tooltipFeature && (this.tooltipFeature = this.destroyBean(this.tooltipFeature)), this.parentComponent && (this.parentComponent = void 0);
      var e = this.eGui;
      e && e.__agComponent && (e.__agComponent = void 0), n.prototype.destroy.call(this);
    }, t.prototype.addGuiEventListener = function(e, r, i) {
      var o = this;
      this.eGui.addEventListener(e, r, i), this.addDestroyFunc(function() {
        return o.eGui.removeEventListener(e, r);
      });
    }, t.prototype.addCssClass = function(e) {
      this.cssClassManager.addCssClass(e);
    }, t.prototype.removeCssClass = function(e) {
      this.cssClassManager.removeCssClass(e);
    }, t.prototype.containsCssClass = function(e) {
      return this.cssClassManager.containsCssClass(e);
    }, t.prototype.addOrRemoveCssClass = function(e, r) {
      this.cssClassManager.addOrRemoveCssClass(e, r);
    }, t.prototype.getAttribute = function(e) {
      var r = this.eGui;
      return r ? r.getAttribute(e) : null;
    }, t.prototype.getRefElement = function(e) {
      return this.queryForHtmlElement('[ref="' + e + '"]');
    }, t.EVENT_DISPLAYED_CHANGED = "displayedChanged", Mo([
      h("agStackComponentsRegistry")
    ], t.prototype, "agStackComponentsRegistry", void 0), Mo([
      xs
    ], t.prototype, "preConstructOnComponent", null), Mo([
      xs
    ], t.prototype, "createChildComponentsPreConstruct", null), t;
  }(T)
);
function P(n) {
  return md.bind(this, "[ref=" + n + "]", n);
}
function md(n, t, e, r, i) {
  if (n === null) {
    console.error("AG Grid: QuerySelector selector should not be null");
    return;
  }
  if (typeof i == "number") {
    console.error("AG Grid: QuerySelector should be on an attribute");
    return;
  }
  wd(e, "querySelectors", {
    attributeName: r,
    querySelector: n,
    refSelector: t
  });
}
function wd(n, t, e) {
  var r = Sd(n, ao(n.constructor));
  r[t] || (r[t] = []), r[t].push(e);
}
function Sd(n, t) {
  return n.__agComponentMetaData || (n.__agComponentMetaData = {}), n.__agComponentMetaData[t] || (n.__agComponentMetaData[t] = {}), n.__agComponentMetaData[t];
}
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ed = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Bs = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, _d = (
  /** @class */
  function(n) {
    Ed(t, n);
    function t() {
      return n.call(
        this,
        /* html */
        `
            <div class="ag-floating-filter-input" role="presentation">
                <ag-input-text-field ref="eFloatingFilterText"></ag-input-text-field>
            </div>`
      ) || this;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.init = function(e) {
      this.params = e;
      var r = this.columnModel.getDisplayNameForColumn(e.column, "header", !0), i = this.localeService.getLocaleTextFunc();
      this.eFloatingFilterText.setDisabled(!0).setInputAriaLabel(r + " " + i("ariaFilterInput", "Filter Input"));
    }, t.prototype.onParentModelChanged = function(e) {
      var r = this;
      if (!e) {
        this.eFloatingFilterText.setValue("");
        return;
      }
      this.params.parentFilterInstance(function(i) {
        if (i.getModelAsString) {
          var o = i.getModelAsString(e);
          r.eFloatingFilterText.setValue(o);
        }
      });
    }, Bs([
      P("eFloatingFilterText")
    ], t.prototype, "eFloatingFilterText", void 0), Bs([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Yl = (
  /** @class */
  function() {
    function n(t, e, r, i) {
      var o = this;
      this.alive = !0, this.context = t, this.eParent = i;
      var s = e.getDateCompDetails(r), a = s.newAgStackInstance();
      a.then(function(l) {
        if (!o.alive) {
          t.destroyBean(l);
          return;
        }
        o.dateComp = l, l && (i.appendChild(l.getGui()), l.afterGuiAttached && l.afterGuiAttached(), o.tempValue && l.setDate(o.tempValue), o.disabled != null && o.setDateCompDisabled(o.disabled));
      });
    }
    return n.prototype.destroy = function() {
      this.alive = !1, this.dateComp = this.context.destroyBean(this.dateComp);
    }, n.prototype.getDate = function() {
      return this.dateComp ? this.dateComp.getDate() : this.tempValue;
    }, n.prototype.setDate = function(t) {
      this.dateComp ? this.dateComp.setDate(t) : this.tempValue = t;
    }, n.prototype.setDisabled = function(t) {
      this.dateComp ? this.setDateCompDisabled(t) : this.disabled = t;
    }, n.prototype.setDisplayed = function(t) {
      k(this.eParent, t);
    }, n.prototype.setInputPlaceholder = function(t) {
      this.dateComp && this.dateComp.setInputPlaceholder && this.dateComp.setInputPlaceholder(t);
    }, n.prototype.setInputAriaLabel = function(t) {
      this.dateComp && this.dateComp.setInputAriaLabel && this.dateComp.setInputAriaLabel(t);
    }, n.prototype.afterGuiAttached = function(t) {
      this.dateComp && typeof this.dateComp.afterGuiAttached == "function" && this.dateComp.afterGuiAttached(t);
    }, n.prototype.setDateCompDisabled = function(t) {
      this.dateComp != null && this.dateComp.setDisabled != null && this.dateComp.setDisabled(t);
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var In = function() {
  return In = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, In.apply(this, arguments);
}, ql = (
  /** @class */
  function() {
    function n() {
      this.customFilterOptions = {};
    }
    return n.prototype.init = function(t, e) {
      this.filterOptions = t.filterOptions || e, this.mapCustomOptions(), this.selectDefaultItem(t), this.checkForDeprecatedParams();
    }, n.prototype.checkForDeprecatedParams = function() {
      this.filterOptions.some(function(t) {
        return typeof t != "string" && t.test != null;
      }) && console.warn("AG Grid: [IFilterOptionDef] since v26.2.0, test() has been replaced with predicate()."), this.filterOptions.some(function(t) {
        return typeof t != "string" && t.hideFilterInput != null;
      }) && console.warn("AG Grid: [IFilterOptionDef] since v26.2.0, useOfHideFilterInput has been replaced with numberOfInputs.");
    }, n.prototype.getFilterOptions = function() {
      return this.filterOptions;
    }, n.prototype.mapCustomOptions = function() {
      var t = this;
      this.filterOptions && this.filterOptions.forEach(function(e) {
        if (typeof e != "string") {
          var r = [["displayKey"], ["displayName"], ["predicate", "test"]], i = function(a) {
            return a.some(function(l) {
              return e[l] != null;
            }) ? !0 : (console.warn("AG Grid: ignoring FilterOptionDef as it doesn't contain one of '" + a + "'"), !1);
          };
          if (!r.every(i)) {
            t.filterOptions = t.filterOptions.filter(function(a) {
              return a === e;
            }) || [];
            return;
          }
          var o = e.test, s = In({}, e);
          o != null && e.predicate == null && (s.predicate = function(a, l) {
            return o(a[0], l);
          }, delete s.test), s.hideFilterInput && s.numberOfInputs == null && (s.numberOfInputs = 0, delete s.hideFilterInput), t.customFilterOptions[e.displayKey] = s;
        }
      });
    }, n.prototype.selectDefaultItem = function(t) {
      if (t.defaultOption)
        this.defaultOption = t.defaultOption;
      else if (this.filterOptions.length >= 1) {
        var e = this.filterOptions[0];
        typeof e == "string" ? this.defaultOption = e : e.displayKey ? this.defaultOption = e.displayKey : console.warn("AG Grid: invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'");
      } else
        console.warn("AG Grid: no filter options for filter");
    }, n.prototype.getDefaultOption = function() {
      return this.defaultOption;
    }, n.prototype.getCustomOption = function(t) {
      return this.customFilterOptions[t];
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ql = {
  applyFilter: "Apply",
  clearFilter: "Clear",
  resetFilter: "Reset",
  cancelFilter: "Cancel",
  textFilter: "Text Filter",
  numberFilter: "Number Filter",
  dateFilter: "Date Filter",
  setFilter: "Set Filter",
  filterOoo: "Filter...",
  empty: "Choose One",
  equals: "Equals",
  notEqual: "Not equal",
  lessThan: "Less than",
  greaterThan: "Greater than",
  inRange: "In range",
  inRangeStart: "From",
  inRangeEnd: "To",
  lessThanOrEqual: "Less than or equals",
  greaterThanOrEqual: "Greater than or equals",
  contains: "Contains",
  notContains: "Not contains",
  startsWith: "Starts with",
  endsWith: "Ends with",
  blank: "Blank",
  notBlank: "Not blank",
  andCondition: "AND",
  orCondition: "OR",
  dateFormatOoo: "yyyy-mm-dd"
};
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Rd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), xn = function() {
  return xn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, xn.apply(this, arguments);
}, Ws = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Tt = (
  /** @class */
  function(n) {
    Rd(t, n);
    function t(e, r) {
      r === void 0 && (r = {});
      var i = n.call(this) || this;
      return i.eFocusableElement = e, i.callbacks = r, i.callbacks = xn({ shouldStopEventPropagation: function() {
        return !1;
      }, onTabKeyDown: function(o) {
        if (!o.defaultPrevented) {
          var s = i.focusService.findNextFocusableElement(i.eFocusableElement, !1, o.shiftKey);
          s && (s.focus(), o.preventDefault());
        }
      } }, r), i;
    }
    return t.prototype.postConstruct = function() {
      this.eFocusableElement.classList.add(t.FOCUS_MANAGED_CLASS), this.addKeyDownListeners(this.eFocusableElement), this.callbacks.onFocusIn && this.addManagedListener(this.eFocusableElement, "focusin", this.callbacks.onFocusIn), this.callbacks.onFocusOut && this.addManagedListener(this.eFocusableElement, "focusout", this.callbacks.onFocusOut);
    }, t.prototype.addKeyDownListeners = function(e) {
      var r = this;
      this.addManagedListener(e, "keydown", function(i) {
        if (!(i.defaultPrevented || et(i))) {
          if (r.callbacks.shouldStopEventPropagation(i)) {
            ir(i);
            return;
          }
          i.key === _.TAB ? r.callbacks.onTabKeyDown(i) : r.callbacks.handleKeyDown && r.callbacks.handleKeyDown(i);
        }
      });
    }, t.FOCUS_MANAGED_CLASS = "ag-focus-managed", Ws([
      h("focusService")
    ], t.prototype, "focusService", void 0), Ws([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Od = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Io = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Xl = "ag-resizer-wrapper", Td = (
  /* html */
  '<div class="' + Xl + `">
        <div ref="eTopLeftResizer" class="ag-resizer ag-resizer-topLeft"></div>
        <div ref="eTopResizer" class="ag-resizer ag-resizer-top"></div>
        <div ref="eTopRightResizer" class="ag-resizer ag-resizer-topRight"></div>
        <div ref="eRightResizer" class="ag-resizer ag-resizer-right"></div>
        <div ref="eBottomRightResizer" class="ag-resizer ag-resizer-bottomRight"></div>
        <div ref="eBottomResizer" class="ag-resizer ag-resizer-bottom"></div>
        <div ref="eBottomLeftResizer" class="ag-resizer ag-resizer-bottomLeft"></div>
        <div ref="eLeftResizer" class="ag-resizer ag-resizer-left"></div>
    </div>`
), Jl = (
  /** @class */
  function(n) {
    Od(t, n);
    function t(e, r) {
      var i = n.call(this) || this;
      return i.element = e, i.dragStartPosition = {
        x: 0,
        y: 0
      }, i.position = {
        x: 0,
        y: 0
      }, i.lastSize = {
        width: -1,
        height: -1
      }, i.positioned = !1, i.resizersAdded = !1, i.resizeListeners = [], i.boundaryEl = null, i.isResizing = !1, i.isMoving = !1, i.resizable = {}, i.movable = !1, i.currentResizer = null, i.config = Object.assign({}, { popup: !1 }, r), i;
    }
    return t.prototype.center = function() {
      var e = this.offsetParent, r = e.clientHeight, i = e.clientWidth, o = i / 2 - this.getWidth() / 2, s = r / 2 - this.getHeight() / 2;
      this.offsetElement(o, s);
    }, t.prototype.initialisePosition = function() {
      if (!this.positioned) {
        var e = this.config, r = e.centered, i = e.forcePopupParentAsOffsetParent, o = e.minWidth, s = e.width, a = e.minHeight, l = e.height, u = e.x, c = e.y;
        this.offsetParent || this.setOffsetParent();
        var p = 0, d = 0, v = !!this.element.offsetParent;
        if (v) {
          var f = this.findBoundaryElement(), y = window.getComputedStyle(f);
          if (y.minWidth != null) {
            var C = f.offsetWidth - this.element.offsetWidth;
            d = parseInt(y.minWidth, 10) - C;
          }
          if (y.minHeight != null) {
            var m = f.offsetHeight - this.element.offsetHeight;
            p = parseInt(y.minHeight, 10) - m;
          }
        }
        if (this.minHeight = a || p, this.minWidth = o || d, s && this.setWidth(s), l && this.setHeight(l), (!s || !l) && this.refreshSize(), r)
          this.center();
        else if (u || c)
          this.offsetElement(u, c);
        else if (v && i && this.boundaryEl) {
          var w = parseFloat(this.boundaryEl.style.top), E = parseFloat(this.boundaryEl.style.left);
          this.offsetElement(isNaN(E) ? 0 : E, isNaN(w) ? 0 : w);
        }
        this.positioned = !!this.offsetParent;
      }
    }, t.prototype.isPositioned = function() {
      return this.positioned;
    }, t.prototype.getPosition = function() {
      return this.position;
    }, t.prototype.setMovable = function(e, r) {
      if (!(!this.config.popup || e === this.movable)) {
        this.movable = e;
        var i = this.moveElementDragListener || {
          eElement: r,
          onDragStart: this.onMoveStart.bind(this),
          onDragging: this.onMove.bind(this),
          onDragStop: this.onMoveEnd.bind(this)
        };
        e ? (this.dragService.addDragSource(i), this.moveElementDragListener = i) : (this.dragService.removeDragSource(i), this.moveElementDragListener = void 0);
      }
    }, t.prototype.setResizable = function(e) {
      var r = this;
      if (this.clearResizeListeners(), e ? this.addResizers() : this.removeResizers(), typeof e == "boolean") {
        if (e === !1)
          return;
        e = {
          topLeft: e,
          top: e,
          topRight: e,
          right: e,
          bottomRight: e,
          bottom: e,
          bottomLeft: e,
          left: e
        };
      }
      Object.keys(e).forEach(function(i) {
        var o = e, s = !!o[i], a = r.getResizerElement(i), l = {
          dragStartPixels: 0,
          eElement: a,
          onDragStart: function(u) {
            return r.onResizeStart(u, i);
          },
          onDragging: r.onResize.bind(r),
          onDragStop: function(u) {
            return r.onResizeEnd(u, i);
          }
        };
        (s || !r.isAlive() && !s) && (s ? (r.dragService.addDragSource(l), r.resizeListeners.push(l), a.style.pointerEvents = "all") : a.style.pointerEvents = "none", r.resizable[i] = s);
      });
    }, t.prototype.removeSizeFromEl = function() {
      this.element.style.removeProperty("height"), this.element.style.removeProperty("width"), this.element.style.removeProperty("flex");
    }, t.prototype.restoreLastSize = function() {
      this.element.style.flex = "0 0 auto";
      var e = this.lastSize, r = e.height, i = e.width;
      i !== -1 && (this.element.style.width = i + "px"), r !== -1 && (this.element.style.height = r + "px");
    }, t.prototype.getHeight = function() {
      return this.element.offsetHeight;
    }, t.prototype.setHeight = function(e) {
      var r = this.config.popup, i = this.element, o = !1;
      if (typeof e == "string" && e.indexOf("%") !== -1)
        It(i, e), e = us(i), o = !0;
      else if (this.positioned) {
        e = Math.max(this.minHeight, e);
        var s = this.getAvailableHeight();
        s && e > s && (e = s);
      }
      this.getHeight() !== e && (o ? (i.style.maxHeight = "unset", i.style.minHeight = "unset") : r ? It(i, e) : (i.style.height = e + "px", i.style.flex = "0 0 auto", this.lastSize.height = typeof e == "number" ? e : parseFloat(e)));
    }, t.prototype.getAvailableHeight = function() {
      var e = this.config, r = e.popup, i = e.forcePopupParentAsOffsetParent;
      this.positioned || this.initialisePosition();
      var o = this.offsetParent.clientHeight;
      if (!o)
        return null;
      var s = this.element.getBoundingClientRect(), a = this.offsetParent.getBoundingClientRect(), l = r ? this.position.y : s.top, u = r ? 0 : a.top, c = 0;
      if (i) {
        var p = this.element.parentElement;
        if (p) {
          var d = p.getBoundingClientRect().bottom;
          c = d - s.bottom;
        }
      }
      var v = o + u - l - c;
      return v;
    }, t.prototype.getWidth = function() {
      return this.element.offsetWidth;
    }, t.prototype.setWidth = function(e) {
      var r = this.element, i = this.config.popup, o = !1;
      if (typeof e == "string" && e.indexOf("%") !== -1)
        Be(r, e), e = ho(r), o = !0;
      else if (this.positioned) {
        e = Math.max(this.minWidth, e);
        var s = this.offsetParent.clientWidth, a = i ? this.position.x : this.element.getBoundingClientRect().left;
        s && e + a > s && (e = s - a);
      }
      this.getWidth() !== e && (o ? (r.style.maxWidth = "unset", r.style.minWidth = "unset") : this.config.popup ? Be(r, e) : (r.style.width = e + "px", r.style.flex = " unset", this.lastSize.width = typeof e == "number" ? e : parseFloat(e)));
    }, t.prototype.offsetElement = function(e, r) {
      e === void 0 && (e = 0), r === void 0 && (r = 0);
      var i = this.config.forcePopupParentAsOffsetParent ? this.boundaryEl : this.element;
      this.popupService.positionPopup({
        ePopup: i,
        keepWithinBounds: !0,
        skipObserver: this.movable || this.isResizable(),
        updatePosition: function() {
          return { x: e, y: r };
        }
      }), this.setPosition(parseFloat(i.style.left), parseFloat(i.style.top));
    }, t.prototype.constrainSizeToAvailableHeight = function(e) {
      var r = this;
      if (this.config.forcePopupParentAsOffsetParent) {
        var i = function() {
          var o = r.getAvailableHeight();
          r.element.style.setProperty("max-height", o + "px");
        };
        e ? this.resizeObserverSubscriber = this.resizeObserverService.observeResize(this.popupService.getPopupParent(), i) : (this.element.style.removeProperty("max-height"), this.resizeObserverSubscriber && (this.resizeObserverSubscriber(), this.resizeObserverSubscriber = void 0));
      }
    }, t.prototype.setPosition = function(e, r) {
      this.position.x = e, this.position.y = r;
    }, t.prototype.updateDragStartPosition = function(e, r) {
      this.dragStartPosition = { x: e, y: r };
    }, t.prototype.calculateMouseMovement = function(e) {
      var r = e.e, i = e.isLeft, o = e.isTop, s = e.anywhereWithin, a = e.topBuffer, l = r.clientX - this.dragStartPosition.x, u = r.clientY - this.dragStartPosition.y, c = this.shouldSkipX(r, !!i, !!s, l) ? 0 : l, p = this.shouldSkipY(r, !!o, a, u) ? 0 : u;
      return { movementX: c, movementY: p };
    }, t.prototype.shouldSkipX = function(e, r, i, o) {
      var s = this.element.getBoundingClientRect(), a = this.offsetParent.getBoundingClientRect(), l = this.boundaryEl.getBoundingClientRect(), u = this.config.popup ? this.position.x : s.left, c = u <= 0 && a.left >= e.clientX || a.right <= e.clientX && a.right <= l.right;
      return c ? !0 : (r ? c = // skip if we are moving to the left and the cursor
      // is positioned to the right of the left side anchor
      o < 0 && e.clientX > u + a.left || // skip if we are moving to the right and the cursor
      // is positioned to the left of the dialog
      o > 0 && e.clientX < u + a.left : i ? c = o < 0 && e.clientX > l.right || o > 0 && e.clientX < u + a.left : c = // if the movement is bound to the right side of the dialog
      // we skip if we are moving to the left and the cursor
      // is to the right of the dialog
      o < 0 && e.clientX > l.right || // or skip if we are moving to the right and the cursor
      // is to the left of the right side anchor
      o > 0 && e.clientX < l.right, c);
    }, t.prototype.shouldSkipY = function(e, r, i, o) {
      i === void 0 && (i = 0);
      var s = this.element.getBoundingClientRect(), a = this.offsetParent.getBoundingClientRect(), l = this.boundaryEl.getBoundingClientRect(), u = this.config.popup ? this.position.y : s.top, c = u <= 0 && a.top >= e.clientY || a.bottom <= e.clientY && a.bottom <= l.bottom;
      return c ? !0 : (r ? c = // skip if we are moving to towards top and the cursor is
      // below the top anchor + topBuffer
      // note: topBuffer is used when moving the dialog using the title bar
      o < 0 && e.clientY > u + a.top + i || // skip if we are moving to the bottom and the cursor is
      // above the top anchor
      o > 0 && e.clientY < u + a.top : c = // skip if we are moving towards the top and the cursor
      // is below the bottom anchor
      o < 0 && e.clientY > l.bottom || // skip if we are moving towards the bottom and the cursor
      // is above the bottom anchor
      o > 0 && e.clientY < l.bottom, c);
    }, t.prototype.createResizeMap = function() {
      var e = this.element;
      this.resizerMap = {
        topLeft: { element: e.querySelector("[ref=eTopLeftResizer]") },
        top: { element: e.querySelector("[ref=eTopResizer]") },
        topRight: { element: e.querySelector("[ref=eTopRightResizer]") },
        right: { element: e.querySelector("[ref=eRightResizer]") },
        bottomRight: { element: e.querySelector("[ref=eBottomRightResizer]") },
        bottom: { element: e.querySelector("[ref=eBottomResizer]") },
        bottomLeft: { element: e.querySelector("[ref=eBottomLeftResizer]") },
        left: { element: e.querySelector("[ref=eLeftResizer]") }
      };
    }, t.prototype.addResizers = function() {
      if (!this.resizersAdded) {
        var e = this.element;
        if (e) {
          var r = new DOMParser(), i = r.parseFromString(Td, "text/html").body;
          e.appendChild(i.firstChild), this.createResizeMap(), this.resizersAdded = !0;
        }
      }
    }, t.prototype.removeResizers = function() {
      this.resizerMap = void 0;
      var e = this.element.querySelector("." + Xl);
      e && this.element.removeChild(e), this.resizersAdded = !1;
    }, t.prototype.getResizerElement = function(e) {
      return this.resizerMap[e].element;
    }, t.prototype.onResizeStart = function(e, r) {
      this.boundaryEl = this.findBoundaryElement(), this.positioned || this.initialisePosition(), this.currentResizer = {
        isTop: !!r.match(/top/i),
        isRight: !!r.match(/right/i),
        isBottom: !!r.match(/bottom/i),
        isLeft: !!r.match(/left/i)
      }, this.element.classList.add("ag-resizing"), this.resizerMap[r].element.classList.add("ag-active");
      var i = this.config, o = i.popup, s = i.forcePopupParentAsOffsetParent;
      !o && !s && this.applySizeToSiblings(this.currentResizer.isBottom || this.currentResizer.isTop), this.isResizing = !0, this.updateDragStartPosition(e.clientX, e.clientY);
    }, t.prototype.getSiblings = function() {
      var e = this.element, r = e.parentElement;
      return r ? Array.prototype.slice.call(r.children).filter(function(i) {
        return !i.classList.contains("ag-hidden");
      }) : null;
    }, t.prototype.getMinSizeOfSiblings = function() {
      for (var e = this.getSiblings() || [], r = 0, i = 0, o = 0; o < e.length; o++) {
        var s = e[o], a = !!s.style.flex && s.style.flex !== "0 0 auto";
        if (s !== this.element) {
          var l = this.minHeight || 0, u = this.minWidth || 0;
          if (a) {
            var c = window.getComputedStyle(s);
            c.minHeight && (l = parseInt(c.minHeight, 10)), c.minWidth && (u = parseInt(c.minWidth, 10));
          } else
            l = s.offsetHeight, u = s.offsetWidth;
          r += l, i += u;
        }
      }
      return { height: r, width: i };
    }, t.prototype.applySizeToSiblings = function(e) {
      var r = null, i = this.getSiblings();
      if (i) {
        for (var o = 0; o < i.length; o++) {
          var s = i[o];
          s !== r && (e ? s.style.height = s.offsetHeight + "px" : s.style.width = s.offsetWidth + "px", s.style.flex = "0 0 auto", s === this.element && (r = i[o + 1]));
        }
        r && (r.style.removeProperty("height"), r.style.removeProperty("min-height"), r.style.removeProperty("max-height"), r.style.flex = "1 1 auto");
      }
    }, t.prototype.isResizable = function() {
      return Object.values(this.resizable).some(function(e) {
        return e;
      });
    }, t.prototype.onResize = function(e) {
      if (!(!this.isResizing || !this.currentResizer)) {
        var r = this.config, i = r.popup, o = r.forcePopupParentAsOffsetParent, s = this.currentResizer, a = s.isTop, l = s.isRight, u = s.isBottom, c = s.isLeft, p = l || c, d = u || a, v = this.calculateMouseMovement({ e, isLeft: c, isTop: a }), f = v.movementX, y = v.movementY, C = this.position.x, m = this.position.y, w = 0, E = 0;
        if (p && f) {
          var R = c ? -1 : 1, D = this.getWidth(), M = D + f * R, I = !1;
          c && (w = D - M, (C + w <= 0 || M <= this.minWidth) && (I = !0, w = 0)), I || this.setWidth(M);
        }
        if (d && y) {
          var R = a ? -1 : 1, L = this.getHeight(), H = L + y * R, B = !1;
          a ? (E = L - H, (m + E <= 0 || H <= this.minHeight) && (B = !0, E = 0)) : !this.config.popup && !this.config.forcePopupParentAsOffsetParent && L < H && this.getMinSizeOfSiblings().height + H > this.element.parentElement.offsetHeight && (B = !0), B || this.setHeight(H);
        }
        this.updateDragStartPosition(e.clientX, e.clientY), ((i || o) && w || E) && this.offsetElement(C + w, m + E);
      }
    }, t.prototype.onResizeEnd = function(e, r) {
      this.isResizing = !1, this.currentResizer = null, this.boundaryEl = null;
      var i = {
        type: "resize",
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi
      };
      this.element.classList.remove("ag-resizing"), this.resizerMap[r].element.classList.remove("ag-active"), this.dispatchEvent(i);
    }, t.prototype.refreshSize = function() {
      var e = this.element;
      this.config.popup && (this.config.width || this.setWidth(e.offsetWidth), this.config.height || this.setHeight(e.offsetHeight));
    }, t.prototype.onMoveStart = function(e) {
      this.boundaryEl = this.findBoundaryElement(), this.positioned || this.initialisePosition(), this.isMoving = !0, this.element.classList.add("ag-moving"), this.updateDragStartPosition(e.clientX, e.clientY);
    }, t.prototype.onMove = function(e) {
      if (this.isMoving) {
        var r = this.position, i = r.x, o = r.y, s;
        this.config.calculateTopBuffer && (s = this.config.calculateTopBuffer());
        var a = this.calculateMouseMovement({
          e,
          isTop: !0,
          anywhereWithin: !0,
          topBuffer: s
        }), l = a.movementX, u = a.movementY;
        this.offsetElement(i + l, o + u), this.updateDragStartPosition(e.clientX, e.clientY);
      }
    }, t.prototype.onMoveEnd = function() {
      this.isMoving = !1, this.boundaryEl = null, this.element.classList.remove("ag-moving");
    }, t.prototype.setOffsetParent = function() {
      this.config.forcePopupParentAsOffsetParent ? this.offsetParent = this.popupService.getPopupParent() : this.offsetParent = this.element.offsetParent;
    }, t.prototype.findBoundaryElement = function() {
      for (var e = this.element; e; ) {
        if (window.getComputedStyle(e).position !== "static")
          return e;
        e = e.parentElement;
      }
      return this.element;
    }, t.prototype.clearResizeListeners = function() {
      for (; this.resizeListeners.length; ) {
        var e = this.resizeListeners.pop();
        this.dragService.removeDragSource(e);
      }
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this), this.moveElementDragListener && this.dragService.removeDragSource(this.moveElementDragListener), this.constrainSizeToAvailableHeight(!1), this.clearResizeListeners(), this.removeResizers();
    }, Io([
      h("popupService")
    ], t.prototype, "popupService", void 0), Io([
      h("resizeObserverService")
    ], t.prototype, "resizeObserverService", void 0), Io([
      h("dragService")
    ], t.prototype, "dragService", void 0), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var bd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), xo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, ki = (
  /** @class */
  function(n) {
    bd(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.filterNameKey = e, r.applyActive = !1, r.hidePopup = null, r.debouncePending = !1, r.appliedModel = null, r;
    }
    return t.prototype.postConstruct = function() {
      this.resetTemplate(), this.createManagedBean(new Tt(this.getFocusableElement(), {
        handleKeyDown: this.handleKeyDown.bind(this)
      })), this.positionableFeature = new Jl(this.getPositionableElement(), {
        forcePopupParentAsOffsetParent: !0
      }), this.createBean(this.positionableFeature);
    }, t.prototype.handleKeyDown = function(e) {
    }, t.prototype.getFilterTitle = function() {
      return this.translate(this.filterNameKey);
    }, t.prototype.isFilterActive = function() {
      return !!this.appliedModel;
    }, t.prototype.resetTemplate = function(e) {
      var r = this.getGui();
      r && r.removeEventListener("submit", this.onFormSubmit);
      var i = (
        /* html */
        `
            <form class="ag-filter-wrapper">
                <div class="ag-filter-body-wrapper ag-` + this.getCssIdentifier() + `-body-wrapper" ref="eFilterBody">
                    ` + this.createBodyTemplate() + `
                </div>
            </form>`
      );
      this.setTemplate(i, e), r = this.getGui(), r && r.addEventListener("submit", this.onFormSubmit);
    }, t.prototype.isReadOnly = function() {
      return !!this.providedFilterParams.readOnly;
    }, t.prototype.init = function(e) {
      var r = this;
      this.setParams(e), this.resetUiToDefaults(!0).then(function() {
        r.updateUiVisibility(), r.setupOnBtApplyDebounce();
      });
    }, t.prototype.setParams = function(e) {
      this.providedFilterParams = e, this.applyActive = t.isUseApplyButton(e), this.createButtonPanel();
    }, t.prototype.createButtonPanel = function() {
      var e = this, r = this.providedFilterParams.buttons;
      if (!(!r || r.length < 1 || this.isReadOnly())) {
        var i = document.createElement("div");
        i.classList.add("ag-filter-apply-panel");
        var o = function(s) {
          var a, l;
          switch (s) {
            case "apply":
              a = e.translate("applyFilter"), l = function(p) {
                return e.onBtApply(!1, !1, p);
              };
              break;
            case "clear":
              a = e.translate("clearFilter"), l = function() {
                return e.onBtClear();
              };
              break;
            case "reset":
              a = e.translate("resetFilter"), l = function() {
                return e.onBtReset();
              };
              break;
            case "cancel":
              a = e.translate("cancelFilter"), l = function(p) {
                e.onBtCancel(p);
              };
              break;
            default:
              console.warn("AG Grid: Unknown button type specified");
              return;
          }
          var u = s === "apply" ? "submit" : "button", c = he(
            /* html */
            `<button
                    type="` + u + `"
                    ref="` + s + `FilterButton"
                    class="ag-standard-button ag-filter-apply-panel-button"
                >` + a + `
                </button>`
          );
          i.appendChild(c), e.addManagedListener(c, "click", l);
        };
        gs(r).forEach(function(s) {
          return o(s);
        }), this.getGui().appendChild(i);
      }
    }, t.prototype.getDefaultDebounceMs = function() {
      return 0;
    }, t.prototype.setupOnBtApplyDebounce = function() {
      var e = this, r = t.getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs()), i = Ze(this.checkApplyDebounce.bind(this), r);
      this.onBtApplyDebounce = function() {
        e.debouncePending = !0, i();
      };
    }, t.prototype.checkApplyDebounce = function() {
      this.debouncePending && (this.debouncePending = !1, this.onBtApply());
    }, t.prototype.getModel = function() {
      return this.appliedModel ? this.appliedModel : null;
    }, t.prototype.setModel = function(e) {
      var r = this, i = e != null ? this.setModelIntoUi(e) : this.resetUiToDefaults();
      return i.then(function() {
        r.updateUiVisibility(), r.applyModel("api");
      });
    }, t.prototype.onBtCancel = function(e) {
      var r = this;
      this.resetUiToActiveModel(this.getModel(), function() {
        r.handleCancelEnd(e);
      });
    }, t.prototype.handleCancelEnd = function(e) {
      this.providedFilterParams.closeOnApply && this.close(e);
    }, t.prototype.resetUiToActiveModel = function(e, r) {
      var i = this, o = function() {
        i.onUiChanged(!1, "prevent"), r == null || r();
      };
      e != null ? this.setModelIntoUi(e).then(o) : this.resetUiToDefaults().then(o);
    }, t.prototype.onBtClear = function() {
      var e = this;
      this.resetUiToDefaults().then(function() {
        return e.onUiChanged();
      });
    }, t.prototype.onBtReset = function() {
      this.onBtClear(), this.onBtApply();
    }, t.prototype.applyModel = function(e) {
      var r = this.getModelFromUi();
      if (!this.isModelValid(r))
        return !1;
      var i = this.appliedModel;
      return this.appliedModel = r, !this.areModelsEqual(i, r);
    }, t.prototype.isModelValid = function(e) {
      return !0;
    }, t.prototype.onFormSubmit = function(e) {
      e.preventDefault();
    }, t.prototype.onBtApply = function(e, r, i) {
      e === void 0 && (e = !1), r === void 0 && (r = !1), i && i.preventDefault(), this.applyModel(r ? "rowDataUpdated" : "ui") && this.providedFilterParams.filterChangedCallback({ afterFloatingFilter: e, afterDataChange: r });
      var o = this.providedFilterParams.closeOnApply;
      o && this.applyActive && !e && !r && this.close(i);
    }, t.prototype.onNewRowsLoaded = function() {
    }, t.prototype.close = function(e) {
      if (this.hidePopup) {
        var r = e, i = r && r.key, o;
        (i === "Enter" || i === "Space") && (o = { keyboardEvent: r }), this.hidePopup(o), this.hidePopup = null;
      }
    }, t.prototype.onUiChanged = function(e, r) {
      if (e === void 0 && (e = !1), this.updateUiVisibility(), this.providedFilterParams.filterModifiedCallback(), this.applyActive && !this.isReadOnly()) {
        var i = this.isModelValid(this.getModelFromUi());
        nr(this.getRefElement("applyFilterButton"), !i);
      }
      e && !r || r === "immediately" ? this.onBtApply(e) : (!this.applyActive && !r || r === "debounce") && this.onBtApplyDebounce();
    }, t.prototype.afterGuiAttached = function(e) {
      e && (this.hidePopup = e.hidePopup), this.refreshFilterResizer(e == null ? void 0 : e.container);
    }, t.prototype.refreshFilterResizer = function(e) {
      if (!(!this.positionableFeature || e === "toolPanel")) {
        var r = e === "floatingFilter", i = this, o = i.positionableFeature, s = i.gridOptionsService;
        r ? (o.restoreLastSize(), o.setResizable(s.is("enableRtl") ? { bottom: !0, bottomLeft: !0, left: !0 } : { bottom: !0, bottomRight: !0, right: !0 })) : (this.positionableFeature.removeSizeFromEl(), this.positionableFeature.setResizable(!1)), this.positionableFeature.constrainSizeToAvailableHeight(!0);
      }
    }, t.prototype.afterGuiDetached = function() {
      this.checkApplyDebounce(), this.positionableFeature && this.positionableFeature.constrainSizeToAvailableHeight(!1);
    }, t.getDebounceMs = function(e, r) {
      return t.isUseApplyButton(e) ? (e.debounceMs != null && console.warn("AG Grid: debounceMs is ignored when apply button is present"), 0) : e.debounceMs != null ? e.debounceMs : r;
    }, t.isUseApplyButton = function(e) {
      return !!e.buttons && e.buttons.indexOf("apply") >= 0;
    }, t.prototype.destroy = function() {
      var e = this.getGui();
      e && e.removeEventListener("submit", this.onFormSubmit), this.hidePopup = null, this.positionableFeature && (this.positionableFeature = this.destroyBean(this.positionableFeature)), n.prototype.destroy.call(this);
    }, t.prototype.translate = function(e) {
      var r = this.localeService.getLocaleTextFunc();
      return r(e, Ql[e]);
    }, t.prototype.getCellValue = function(e) {
      var r = this.providedFilterParams, i = r.api, o = r.colDef, s = r.column, a = r.columnApi, l = r.context;
      return this.providedFilterParams.valueGetter({
        api: i,
        colDef: o,
        column: s,
        columnApi: a,
        context: l,
        data: e.data,
        getValue: function(u) {
          return e.data[u];
        },
        node: e
      });
    }, t.prototype.getPositionableElement = function() {
      return this.eFilterBody;
    }, xo([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), xo([
      P("eFilterBody")
    ], t.prototype, "eFilterBody", void 0), xo([
      b
    ], t.prototype, "postConstruct", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Pd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Dd = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Zl = (
  /** @class */
  function(n) {
    Pd(t, n);
    function t(e, r) {
      var i = n.call(this, r) || this;
      return i.labelSeparator = "", i.labelAlignment = "left", i.disabled = !1, i.label = "", i.config = e || {}, i;
    }
    return t.prototype.postConstruct = function() {
      this.addCssClass("ag-labeled"), this.eLabel.classList.add("ag-label");
      var e = this.config, r = e.labelSeparator, i = e.label, o = e.labelWidth, s = e.labelAlignment;
      r != null && this.setLabelSeparator(r), i != null && this.setLabel(i), o != null && this.setLabelWidth(o), this.setLabelAlignment(s || this.labelAlignment), this.refreshLabel();
    }, t.prototype.refreshLabel = function() {
      Fe(this.eLabel), typeof this.label == "string" ? this.eLabel.innerText = this.label + this.labelSeparator : this.label && this.eLabel.appendChild(this.label), this.label === "" ? (k(this.eLabel, !1), ue(this.eLabel, "presentation")) : (k(this.eLabel, !0), ue(this.eLabel, null));
    }, t.prototype.setLabelSeparator = function(e) {
      return this.labelSeparator === e ? this : (this.labelSeparator = e, this.label != null && this.refreshLabel(), this);
    }, t.prototype.getLabelId = function() {
      return this.eLabel.id = this.eLabel.id || "ag-" + this.getCompId() + "-label", this.eLabel.id;
    }, t.prototype.getLabel = function() {
      return this.label;
    }, t.prototype.setLabel = function(e) {
      return this.label === e ? this : (this.label = e, this.refreshLabel(), this);
    }, t.prototype.setLabelAlignment = function(e) {
      var r = this.getGui(), i = r.classList;
      return i.toggle("ag-label-align-left", e === "left"), i.toggle("ag-label-align-right", e === "right"), i.toggle("ag-label-align-top", e === "top"), this;
    }, t.prototype.setLabelEllipsis = function(e) {
      return this.eLabel.classList.toggle("ag-label-ellipsis", e), this;
    }, t.prototype.setLabelWidth = function(e) {
      return this.label == null ? this : (Yr(this.eLabel, e), this);
    }, t.prototype.setDisabled = function(e) {
      e = !!e;
      var r = this.getGui();
      return nr(r, e), r.classList.toggle("ag-disabled", e), this.disabled = e, this;
    }, t.prototype.isDisabled = function() {
      return !!this.disabled;
    }, Dd([
      b
    ], t.prototype, "postConstruct", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ad = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ar = (
  /** @class */
  function(n) {
    Ad(t, n);
    function t(e, r, i) {
      var o = n.call(this, e, r) || this;
      return o.className = i, o;
    }
    return t.prototype.postConstruct = function() {
      n.prototype.postConstruct.call(this), this.className && this.addCssClass(this.className);
    }, t.prototype.onValueChange = function(e) {
      var r = this;
      return this.addManagedListener(this, t.EVENT_CHANGED, function() {
        return e(r.getValue());
      }), this;
    }, t.prototype.getWidth = function() {
      return this.getGui().clientWidth;
    }, t.prototype.setWidth = function(e) {
      return Be(this.getGui(), e), this;
    }, t.prototype.getPreviousValue = function() {
      return this.previousValue;
    }, t.prototype.getValue = function() {
      return this.value;
    }, t.prototype.setValue = function(e, r) {
      return this.value === e ? this : (this.previousValue = this.value, this.value = e, r || this.dispatchEvent({ type: t.EVENT_CHANGED }), this);
    }, t.EVENT_CHANGED = "valueChange", t;
  }(Zl)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Fd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), oi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ld = (
  /** @class */
  function(n) {
    Fd(t, n);
    function t(e, r, i, o) {
      var s = n.call(
        this,
        e,
        /* html */
        `<div class="ag-picker-field" role="presentation">
                <div ref="eLabel"></div>
                <div ref="eWrapper"
                    class="ag-wrapper ag-picker-field-wrapper"
                    tabIndex="-1"
                    aria-expanded="false"
                    ` + (o ? 'role="' + o + '"' : "") + `
                >
                    <div ref="eDisplayField" class="ag-picker-field-display"></div>
                    <div ref="eIcon" class="ag-picker-field-icon" aria-hidden="true"></div>
                </div>
            </div>`,
        r
      ) || this;
      return s.pickerIcon = i, s.isPickerDisplayed = !1, s.isDestroyingPicker = !1, s.skipClick = !1, s;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      n.prototype.postConstruct.call(this);
      var r = this.getCompId() + "-display";
      this.eDisplayField.setAttribute("id", r), wl(this.eWrapper, r);
      var i = function() {
        if (e.skipClick) {
          e.skipClick = !1;
          return;
        }
        e.isDisabled() || (e.pickerComponent = e.showPicker());
      }, o = this.getGui();
      if (this.addManagedListener(o, "mousedown", function(a) {
        !e.skipClick && e.pickerComponent && e.pickerComponent.isAlive() && pr(e.pickerComponent.getGui()) && o.contains(a.target) && (e.skipClick = !0);
      }), this.addManagedListener(o, "keydown", function(a) {
        switch (a.key) {
          case _.UP:
          case _.DOWN:
          case _.ENTER:
          case _.SPACE:
            i();
          case _.ESCAPE:
            e.isPickerDisplayed && a.preventDefault();
            break;
        }
      }), this.addManagedListener(this.eWrapper, "click", i), this.addManagedListener(this.eLabel, "click", i), this.pickerIcon) {
        var s = oe(this.pickerIcon, this.gridOptionsService);
        s && this.eIcon.appendChild(s);
      }
    }, t.prototype.refreshLabel = function() {
      O(this.getLabel()) ? Xn(this.eWrapper, this.getLabelId()) : this.eWrapper.removeAttribute("aria-labelledby"), n.prototype.refreshLabel.call(this);
    }, t.prototype.setAriaLabel = function(e) {
      return Vt(this.eWrapper, e), this;
    }, t.prototype.setInputWidth = function(e) {
      return Yr(this.eWrapper, e), this;
    }, t.prototype.getFocusableElement = function() {
      return this.eWrapper;
    }, oi([
      P("eLabel")
    ], t.prototype, "eLabel", void 0), oi([
      P("eWrapper")
    ], t.prototype, "eWrapper", void 0), oi([
      P("eDisplayField")
    ], t.prototype, "eDisplayField", void 0), oi([
      P("eIcon")
    ], t.prototype, "eIcon", void 0), t;
  }(ar)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Md = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Id = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, js = (
  /** @class */
  function(n) {
    Md(t, n);
    function t(e) {
      e === void 0 && (e = "default");
      var r = n.call(
        this,
        /* html */
        '<div class="ag-list ag-' + e + '-list" role="listbox"></div>'
      ) || this;
      return r.cssIdentifier = e, r.options = [], r.itemEls = [], r;
    }
    return t.prototype.init = function() {
      this.addManagedListener(this.getGui(), "keydown", this.handleKeyDown.bind(this));
    }, t.prototype.handleKeyDown = function(e) {
      var r = e.key;
      switch (r) {
        case _.ENTER:
          if (!this.highlightedEl)
            this.setValue(this.getValue());
          else {
            var i = this.itemEls.indexOf(this.highlightedEl);
            this.setValueByIndex(i);
          }
          break;
        case _.DOWN:
        case _.UP:
          var o = r === _.DOWN, s = void 0;
          if (e.preventDefault(), !this.highlightedEl)
            s = this.itemEls[o ? 0 : this.itemEls.length - 1];
          else {
            var a = this.itemEls.indexOf(this.highlightedEl), l = a + (o ? 1 : -1);
            l = Math.min(Math.max(l, 0), this.itemEls.length - 1), s = this.itemEls[l];
          }
          this.highlightItem(s);
          break;
      }
    }, t.prototype.addOptions = function(e) {
      var r = this;
      return e.forEach(function(i) {
        return r.addOption(i);
      }), this;
    }, t.prototype.addOption = function(e) {
      var r = e.value, i = e.text, o = it(i || r);
      return this.options.push({ value: r, text: o }), this.renderOption(r, o), this.updateIndices(), this;
    }, t.prototype.updateIndices = function() {
      var e = this.getGui().querySelectorAll(".ag-list-item");
      e.forEach(function(r, i) {
        es(r, i + 1), Zn(r, e.length);
      });
    }, t.prototype.renderOption = function(e, r) {
      var i = this, o = document.createElement("div");
      ue(o, "option"), o.classList.add("ag-list-item", "ag-" + this.cssIdentifier + "-list-item"), o.innerHTML = "<span>" + r + "</span>", o.tabIndex = -1, this.itemEls.push(o), this.addManagedListener(o, "mouseover", function() {
        return i.highlightItem(o);
      }), this.addManagedListener(o, "mouseleave", function() {
        return i.clearHighlighted();
      }), this.addManagedListener(o, "click", function() {
        return i.setValue(e);
      }), this.getGui().appendChild(o);
    }, t.prototype.setValue = function(e, r) {
      if (this.value === e)
        return this.fireItemSelected(), this;
      if (e == null)
        return this.reset(), this;
      var i = this.options.findIndex(function(s) {
        return s.value === e;
      });
      if (i !== -1) {
        var o = this.options[i];
        this.value = o.value, this.displayValue = o.text != null ? o.text : o.value, this.highlightItem(this.itemEls[i]), r || this.fireChangeEvent();
      }
      return this;
    }, t.prototype.setValueByIndex = function(e) {
      return this.setValue(this.options[e].value);
    }, t.prototype.getValue = function() {
      return this.value;
    }, t.prototype.getDisplayValue = function() {
      return this.displayValue;
    }, t.prototype.refreshHighlighted = function() {
      var e = this;
      this.clearHighlighted();
      var r = this.options.findIndex(function(i) {
        return i.value === e.value;
      });
      r !== -1 && this.highlightItem(this.itemEls[r]);
    }, t.prototype.reset = function() {
      this.value = null, this.displayValue = null, this.clearHighlighted(), this.fireChangeEvent();
    }, t.prototype.highlightItem = function(e) {
      e.offsetParent && (this.clearHighlighted(), this.highlightedEl = e, this.highlightedEl.classList.add(t.ACTIVE_CLASS), or(this.highlightedEl, !0), this.highlightedEl.focus());
    }, t.prototype.clearHighlighted = function() {
      !this.highlightedEl || !this.highlightedEl.offsetParent || (this.highlightedEl.classList.remove(t.ACTIVE_CLASS), or(this.highlightedEl, !1), this.highlightedEl = null);
    }, t.prototype.fireChangeEvent = function() {
      this.dispatchEvent({ type: ar.EVENT_CHANGED }), this.fireItemSelected();
    }, t.prototype.fireItemSelected = function() {
      this.dispatchEvent({ type: t.EVENT_ITEM_SELECTED });
    }, t.EVENT_ITEM_SELECTED = "selectedItem", t.ACTIVE_CLASS = "ag-active-item", Id([
      b
    ], t.prototype, "init", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var xd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ks = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ui = (
  /** @class */
  function(n) {
    xd(t, n);
    function t(e) {
      return n.call(this, e, "ag-select", "smallDown", "listbox") || this;
    }
    return t.prototype.init = function() {
      var e = this;
      this.listComponent = this.createBean(new js("select")), this.listComponent.setParentComponent(this), this.eWrapper.tabIndex = 0, this.listComponent.addManagedListener(this.listComponent, js.EVENT_ITEM_SELECTED, function() {
        e.hideList && e.hideList(), e.dispatchEvent({ type: t.EVENT_ITEM_SELECTED });
      }), this.listComponent.addManagedListener(this.listComponent, ar.EVENT_CHANGED, function() {
        e.setValue(e.listComponent.getValue(), !1, !0), e.hideList && e.hideList();
      });
    }, t.prototype.showPicker = function() {
      var e = this, r = this.listComponent.getGui(), i = this.gridOptionsService.getDocument(), o = this.addManagedListener(i.body, "wheel", function(u) {
        !r.contains(u.target) && e.hideList && e.hideList();
      }), s = this.addManagedListener(r, "focusout", function(u) {
        !r.contains(u.relatedTarget) && e.hideList && e.hideList();
      }), a = this.localeService.getLocaleTextFunc(), l = this.popupService.addPopup({
        modal: !0,
        eChild: r,
        closeOnEsc: !0,
        closedCallback: function() {
          e.hideList = null, e.isPickerDisplayed = !1, s(), o(), e.isAlive() && (Ue(e.eWrapper, !1), e.getFocusableElement().focus());
        },
        ariaLabel: a("ariaLabelSelectField", "Select Field")
      });
      return l && (this.hideList = l.hideFunc), this.isPickerDisplayed = !0, Yr(r, ho(this.eWrapper)), Ue(this.eWrapper, !0), r.style.maxHeight = $r(this.popupService.getPopupParent()) + "px", r.style.position = "absolute", this.popupService.positionPopupByComponent({
        type: "ag-list",
        eventSource: this.eWrapper,
        ePopup: r,
        position: "under",
        keepWithinBounds: !0
      }), this.listComponent.refreshHighlighted(), this.listComponent;
    }, t.prototype.addOptions = function(e) {
      var r = this;
      return e.forEach(function(i) {
        return r.addOption(i);
      }), this;
    }, t.prototype.addOption = function(e) {
      return this.listComponent.addOption(e), this;
    }, t.prototype.setValue = function(e, r, i) {
      if (this.value === e)
        return this;
      i || this.listComponent.setValue(e, !0);
      var o = this.listComponent.getValue();
      return o === this.getValue() ? this : (this.eDisplayField.innerHTML = this.listComponent.getDisplayValue(), n.prototype.setValue.call(this, e, r));
    }, t.prototype.destroy = function() {
      this.hideList && this.hideList(), this.destroyBean(this.listComponent), n.prototype.destroy.call(this);
    }, t.EVENT_ITEM_SELECTED = "selectedItem", ks([
      h("popupService")
    ], t.prototype, "popupService", void 0), ks([
      b
    ], t.prototype, "init", null), t;
  }(Ld)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Nd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), No = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, at = (
  /** @class */
  function(n) {
    Nd(t, n);
    function t(e, r, i, o) {
      i === void 0 && (i = "text"), o === void 0 && (o = "input");
      var s = n.call(
        this,
        e,
        /* html */
        `
            <div role="presentation">
                <div ref="eLabel" class="ag-input-field-label"></div>
                <div ref="eWrapper" class="ag-wrapper ag-input-wrapper" role="presentation">
                    <` + o + ' ref="eInput" class="ag-input-field-input"></' + o + `>
                </div>
            </div>`,
        r
      ) || this;
      return s.inputType = i, s.displayFieldTag = o, s;
    }
    return t.prototype.postConstruct = function() {
      n.prototype.postConstruct.call(this), this.setInputType(), this.eLabel.classList.add(this.className + "-label"), this.eWrapper.classList.add(this.className + "-input-wrapper"), this.eInput.classList.add(this.className + "-input"), this.addCssClass("ag-input-field"), this.eInput.id = this.eInput.id || "ag-" + this.getCompId() + "-input";
      var e = this.config, r = e.width, i = e.value;
      r != null && this.setWidth(r), i != null && this.setValue(i), this.addInputListeners();
    }, t.prototype.refreshLabel = function() {
      O(this.getLabel()) ? Xn(this.eInput, this.getLabelId()) : this.eInput.removeAttribute("aria-labelledby"), n.prototype.refreshLabel.call(this);
    }, t.prototype.addInputListeners = function() {
      var e = this;
      this.addManagedListener(this.eInput, "input", function(r) {
        return e.setValue(r.target.value);
      });
    }, t.prototype.setInputType = function() {
      this.displayFieldTag === "input" && this.eInput.setAttribute("type", this.inputType);
    }, t.prototype.getInputElement = function() {
      return this.eInput;
    }, t.prototype.setInputWidth = function(e) {
      return Yr(this.eWrapper, e), this;
    }, t.prototype.setInputName = function(e) {
      return this.getInputElement().setAttribute("name", e), this;
    }, t.prototype.getFocusableElement = function() {
      return this.eInput;
    }, t.prototype.setMaxLength = function(e) {
      var r = this.eInput;
      return r.maxLength = e, this;
    }, t.prototype.setInputPlaceholder = function(e) {
      return Ir(this.eInput, "placeholder", e), this;
    }, t.prototype.setInputAriaLabel = function(e) {
      return Vt(this.eInput, e), this;
    }, t.prototype.setDisabled = function(e) {
      return nr(this.eInput, e), n.prototype.setDisabled.call(this, e);
    }, No([
      P("eLabel")
    ], t.prototype, "eLabel", void 0), No([
      P("eWrapper")
    ], t.prototype, "eWrapper", void 0), No([
      P("eInput")
    ], t.prototype, "eInput", void 0), t;
  }(ar)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Gd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), kr = (
  /** @class */
  function(n) {
    Gd(t, n);
    function t(e, r, i) {
      r === void 0 && (r = "ag-checkbox"), i === void 0 && (i = "checkbox");
      var o = n.call(this, e, r, i) || this;
      return o.labelAlignment = "right", o.selected = !1, o.readOnly = !1, o.passive = !1, o;
    }
    return t.prototype.addInputListeners = function() {
      this.addManagedListener(this.eInput, "click", this.onCheckboxClick.bind(this)), this.addManagedListener(this.eLabel, "click", this.toggle.bind(this));
    }, t.prototype.getNextValue = function() {
      return this.selected === void 0 ? !0 : !this.selected;
    }, t.prototype.setPassive = function(e) {
      this.passive = e;
    }, t.prototype.isReadOnly = function() {
      return this.readOnly;
    }, t.prototype.setReadOnly = function(e) {
      this.eWrapper.classList.toggle("ag-disabled", e), this.eInput.disabled = e, this.readOnly = e;
    }, t.prototype.setDisabled = function(e) {
      return this.eWrapper.classList.toggle("ag-disabled", e), n.prototype.setDisabled.call(this, e);
    }, t.prototype.toggle = function() {
      if (!this.eInput.disabled) {
        var e = this.isSelected(), r = this.getNextValue();
        this.passive ? this.dispatchChange(r, e) : this.setValue(r);
      }
    }, t.prototype.getValue = function() {
      return this.isSelected();
    }, t.prototype.setValue = function(e, r) {
      return this.refreshSelectedClass(e), this.setSelected(e, r), this;
    }, t.prototype.setName = function(e) {
      var r = this.getInputElement();
      return r.name = e, this;
    }, t.prototype.isSelected = function() {
      return this.selected;
    }, t.prototype.setSelected = function(e, r) {
      this.isSelected() !== e && (this.previousValue = this.isSelected(), e = this.selected = typeof e == "boolean" ? e : void 0, this.eInput.checked = e, this.eInput.indeterminate = e === void 0, r || this.dispatchChange(this.selected, this.previousValue));
    }, t.prototype.dispatchChange = function(e, r, i) {
      this.dispatchEvent({ type: t.EVENT_CHANGED, selected: e, previousValue: r, event: i });
      var o = this.getInputElement(), s = {
        type: g.EVENT_CHECKBOX_CHANGED,
        id: o.id,
        name: o.name,
        selected: e,
        previousValue: r
      };
      this.eventService.dispatchEvent(s);
    }, t.prototype.onCheckboxClick = function(e) {
      if (!(this.passive || this.eInput.disabled)) {
        var r = this.isSelected(), i = this.selected = e.target.checked;
        this.refreshSelectedClass(i), this.dispatchChange(i, r, e);
      }
    }, t.prototype.refreshSelectedClass = function(e) {
      this.eWrapper.classList.toggle("ag-checked", e === !0), this.eWrapper.classList.toggle("ag-indeterminate", e == null);
    }, t;
  }(at)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Hd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), eu = (
  /** @class */
  function(n) {
    Hd(t, n);
    function t(e) {
      return n.call(this, e, "ag-radio-button", "radio") || this;
    }
    return t.prototype.isSelected = function() {
      return this.eInput.checked;
    }, t.prototype.toggle = function() {
      this.eInput.disabled || this.isSelected() || this.setValue(!0);
    }, t.prototype.addInputListeners = function() {
      n.prototype.addInputListeners.call(this), this.addManagedListener(this.eventService, g.EVENT_CHECKBOX_CHANGED, this.onChange.bind(this));
    }, t.prototype.onChange = function(e) {
      e.selected && e.name && this.eInput.name && this.eInput.name === e.name && e.id && this.eInput.id !== e.id && this.setValue(!1, !0);
    }, t;
  }(kr)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Vd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Bd = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Wd = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Bd(arguments[t]));
  return n;
}, Cs = (
  /** @class */
  function() {
    function n(t, e) {
      this.localeService = t, this.optionsFactory = e;
    }
    return n.prototype.getModelAsString = function(t) {
      var e = this;
      if (!t)
        return null;
      var r = t.operator != null, i = this.localeService.getLocaleTextFunc();
      if (r) {
        var o = t, s = o.conditions;
        if (!s) {
          var a = o.condition1, l = o.condition2;
          s = [a, l];
        }
        var u = s.map(function(m) {
          return e.getModelAsString(m);
        }), c = o.operator === "AND" ? "andCondition" : "orCondition";
        return u.join(" " + i(c, Ql[c]) + " ");
      } else {
        if (t.type === te.BLANK || t.type === te.NOT_BLANK)
          return i(t.type, t.type);
        var p = t, d = this.optionsFactory.getCustomOption(p.type), v = d || {}, f = v.displayKey, y = v.displayName, C = v.numberOfInputs;
        return f && y && C === 0 ? (i(f, y), y) : this.conditionToString(p, d);
      }
    }, n;
  }()
), te = (
  /** @class */
  function(n) {
    Vd(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.eTypes = [], e.eJoinOperatorPanels = [], e.eJoinOperatorsAnd = [], e.eJoinOperatorsOr = [], e.eConditionBodies = [], e.listener = function() {
        return e.onUiChanged();
      }, e.lastUiCompletePosition = null, e.joinOperatorId = 0, e;
    }
    return t.prototype.getNumberOfInputs = function(e) {
      var r = this.optionsFactory.getCustomOption(e);
      if (r) {
        var i = r.numberOfInputs;
        return i ?? 1;
      }
      var o = [
        t.EMPTY,
        t.NOT_BLANK,
        t.BLANK
      ];
      return e && o.indexOf(e) >= 0 ? 0 : e === t.IN_RANGE ? 2 : 1;
    }, t.prototype.onFloatingFilterChanged = function(e, r) {
      this.setTypeFromFloatingFilter(e), this.setValueFromFloatingFilter(r), this.onUiChanged(!0);
    }, t.prototype.setTypeFromFloatingFilter = function(e) {
      var r = this;
      this.eTypes.forEach(function(i, o) {
        o === 0 ? i.setValue(e, !0) : i.setValue(r.optionsFactory.getDefaultOption(), !0);
      });
    }, t.prototype.getModelFromUi = function() {
      var e = this.getUiCompleteConditions();
      return e.length === 0 ? null : this.maxNumConditions > 1 && e.length > 1 ? {
        filterType: this.getFilterType(),
        operator: this.getJoinOperator(),
        condition1: e[0],
        condition2: e[1],
        conditions: e
      } : e[0];
    }, t.prototype.getConditionTypes = function() {
      return this.eTypes.map(function(e) {
        return e.getValue();
      });
    }, t.prototype.getConditionType = function(e) {
      return this.eTypes[e].getValue();
    }, t.prototype.getJoinOperator = function() {
      return this.eJoinOperatorsOr.length === 0 ? this.defaultJoinOperator : this.eJoinOperatorsOr[0].getValue() === !0 ? "OR" : "AND";
    }, t.prototype.areModelsEqual = function(e, r) {
      var i = this;
      if (!e && !r)
        return !0;
      if (!e && r || e && !r)
        return !1;
      var o = !e.operator, s = !r.operator, a = !o && s || o && !s;
      if (a)
        return !1;
      var l;
      if (o) {
        var u = e, c = r;
        l = this.areSimpleModelsEqual(u, c);
      } else {
        var p = e, d = r;
        l = p.operator === d.operator && Ct(p.conditions, d.conditions, function(v, f) {
          return i.areSimpleModelsEqual(v, f);
        });
      }
      return l;
    }, t.prototype.setModelIntoUi = function(e) {
      var r = this, i = e.operator;
      if (i) {
        var o = e;
        o.conditions || (o.conditions = [
          o.condition1,
          o.condition2
        ]);
        var s = this.validateAndUpdateConditions(o.conditions), a = this.getNumConditions();
        if (s < a)
          this.removeConditionsAndOperators(s);
        else if (s > a)
          for (var l = a; l < s; l++)
            this.createJoinOperatorPanel(), this.createOption();
        var u = o.operator === "OR";
        this.eJoinOperatorsAnd.forEach(function(p) {
          return p.setValue(!u, !0);
        }), this.eJoinOperatorsOr.forEach(function(p) {
          return p.setValue(u, !0);
        }), o.conditions.forEach(function(p, d) {
          r.eTypes[d].setValue(p.type, !0), r.setConditionIntoUi(p, d);
        });
      } else {
        var c = e;
        this.getNumConditions() > 1 && this.removeConditionsAndOperators(1), this.eTypes[0].setValue(c.type, !0), this.setConditionIntoUi(c, 0);
      }
      return this.lastUiCompletePosition = this.getNumConditions() - 1, this.createMissingConditionsAndOperators(), this.onUiChanged(), Ge.resolve();
    }, t.prototype.validateAndUpdateConditions = function(e) {
      var r = e.length;
      return r > this.maxNumConditions && (e.splice(this.maxNumConditions), K(function() {
        return console.warn('AG Grid: Filter Model contains more conditions than "filterParams.maxNumConditions". Additional conditions have been ignored.');
      }, "simpleFilterSetModelMaxNumConditions"), r = this.maxNumConditions), r;
    }, t.prototype.doesFilterPass = function(e) {
      var r = this, i, o = this.getModel();
      if (o == null)
        return !0;
      var s = o.operator, a = [];
      if (s) {
        var l = o;
        a.push.apply(a, Wd((i = l.conditions) !== null && i !== void 0 ? i : []));
      } else
        a.push(o);
      var u = s && s === "OR" ? "some" : "every";
      return a[u](function(c) {
        return r.individualConditionPasses(e, c);
      });
    }, t.prototype.setParams = function(e) {
      n.prototype.setParams.call(this, e), this.setNumConditions(e), this.defaultJoinOperator = this.getDefaultJoinOperator(e.defaultJoinOperator), this.filterPlaceholder = e.filterPlaceholder, this.optionsFactory = new ql(), this.optionsFactory.init(e, this.getDefaultFilterOptions()), this.createOption(), this.createMissingConditionsAndOperators();
    }, t.prototype.setNumConditions = function(e) {
      var r, i;
      e.suppressAndOrCondition != null && K(function() {
        return console.warn('AG Grid: Since v29.2 "filterParams.suppressAndOrCondition" is deprecated. Use "filterParams.maxNumConditions = 1" instead.');
      }, "simpleFilterSuppressAndOrCondition"), e.alwaysShowBothConditions != null && K(function() {
        return console.warn('AG Grid: Since v29.2 "filterParams.alwaysShowBothConditions" is deprecated. Use "filterParams.numAlwaysVisibleConditions = 2" instead.');
      }, "simpleFilterAlwaysShowBothConditions"), this.maxNumConditions = (r = e.maxNumConditions) !== null && r !== void 0 ? r : e.suppressAndOrCondition ? 1 : 2, this.maxNumConditions < 1 && (K(function() {
        return console.warn('AG Grid: "filterParams.maxNumConditions" must be greater than or equal to zero.');
      }, "simpleFilterMaxNumConditions"), this.maxNumConditions = 1), this.numAlwaysVisibleConditions = (i = e.numAlwaysVisibleConditions) !== null && i !== void 0 ? i : e.alwaysShowBothConditions ? 2 : 1, this.numAlwaysVisibleConditions < 1 && (K(function() {
        return console.warn('AG Grid: "filterParams.numAlwaysVisibleConditions" must be greater than or equal to zero.');
      }, "simpleFilterNumAlwaysVisibleConditions"), this.numAlwaysVisibleConditions = 1), this.numAlwaysVisibleConditions > this.maxNumConditions && (K(function() {
        return console.warn('AG Grid: "filterParams.numAlwaysVisibleConditions" cannot be greater than "filterParams.maxNumConditions".');
      }, "simpleFilterNumAlwaysVisibleGreaterThanMaxNumConditions"), this.numAlwaysVisibleConditions = this.maxNumConditions);
    }, t.prototype.createOption = function() {
      var e = this, r = this.createManagedBean(new Ui());
      this.eTypes.push(r), r.addCssClass("ag-filter-select"), this.eFilterBody.appendChild(r.getGui());
      var i = this.createValueElement();
      this.eConditionBodies.push(i), this.eFilterBody.appendChild(i), this.putOptionsIntoDropdown(r), this.resetType(r);
      var o = this.getNumConditions() - 1;
      this.forEachPositionInput(o, function(s) {
        return e.resetInput(s);
      }), this.addChangedListeners(r, o);
    }, t.prototype.createJoinOperatorPanel = function() {
      var e = document.createElement("div");
      this.eJoinOperatorPanels.push(e), e.classList.add("ag-filter-condition");
      var r = this.createJoinOperator(this.eJoinOperatorsAnd, e, "and"), i = this.createJoinOperator(this.eJoinOperatorsOr, e, "or");
      this.eFilterBody.appendChild(e);
      var o = this.eJoinOperatorPanels.length - 1, s = this.joinOperatorId++;
      this.resetJoinOperatorAnd(r, o, s), this.resetJoinOperatorOr(i, o, s), this.isReadOnly() || (r.onValueChange(this.listener), i.onValueChange(this.listener));
    }, t.prototype.createJoinOperator = function(e, r, i) {
      var o = this.createManagedBean(new eu());
      return e.push(o), o.addCssClass("ag-filter-condition-operator"), o.addCssClass("ag-filter-condition-operator-" + i), r.appendChild(o.getGui()), o;
    }, t.prototype.getDefaultJoinOperator = function(e) {
      return e === "AND" || e === "OR" ? e : "AND";
    }, t.prototype.putOptionsIntoDropdown = function(e) {
      var r = this, i = this.optionsFactory.getFilterOptions();
      i.forEach(function(o) {
        var s = typeof o == "string" ? r.createBoilerplateListOption(o) : r.createCustomListOption(o);
        e.addOption(s);
      }), e.setDisabled(i.length <= 1);
    }, t.prototype.createBoilerplateListOption = function(e) {
      return { value: e, text: this.translate(e) };
    }, t.prototype.createCustomListOption = function(e) {
      var r = e.displayKey, i = this.optionsFactory.getCustomOption(e.displayKey);
      return {
        value: r,
        text: i ? this.localeService.getLocaleTextFunc()(i.displayKey, i.displayName) : this.translate(r)
      };
    }, t.prototype.isAllowTwoConditions = function() {
      return this.maxNumConditions >= 2;
    }, t.prototype.createBodyTemplate = function() {
      return "";
    }, t.prototype.getCssIdentifier = function() {
      return "simple-filter";
    }, t.prototype.updateUiVisibility = function() {
      var e = this.getJoinOperator();
      this.updateNumConditions(), this.updateConditionStatusesAndValues(this.lastUiCompletePosition, e);
    }, t.prototype.updateNumConditions = function() {
      for (var e, r = -1, i = !0, o = 0; o < this.getNumConditions(); o++)
        this.isConditionUiComplete(o) ? r = o : i = !1;
      if (this.shouldAddNewConditionAtEnd(i))
        this.createJoinOperatorPanel(), this.createOption();
      else {
        var s = (e = this.lastUiCompletePosition) !== null && e !== void 0 ? e : this.getNumConditions() - 2;
        if (r < s) {
          this.removeConditionsAndOperators(s + 1);
          var a = r + 1, l = s - a;
          l > 0 && this.removeConditionsAndOperators(a, l), this.createMissingConditionsAndOperators();
        }
      }
      this.lastUiCompletePosition = r;
    }, t.prototype.updateConditionStatusesAndValues = function(e, r) {
      var i = this;
      this.eTypes.forEach(function(s, a) {
        var l = i.isConditionDisabled(a, e), u = a === 1 ? [s, i.eJoinOperatorPanels[0], i.eJoinOperatorsAnd[0], i.eJoinOperatorsOr[0]] : [s];
        u.forEach(function(c) {
          c instanceof at || c instanceof Ui ? c.setDisabled(l) : nr(c, l);
        });
      }), this.eConditionBodies.forEach(function(s, a) {
        k(s, i.isConditionBodyVisible(a));
      });
      var o = (r ?? this.getJoinOperator()) === "OR";
      this.eJoinOperatorsAnd.forEach(function(s, a) {
        s.setValue(!o, !0);
      }), this.eJoinOperatorsOr.forEach(function(s, a) {
        s.setValue(o, !0);
      }), this.forEachInput(function(s, a, l, u) {
        i.setElementDisplayed(s, a < u), i.setElementDisabled(s, i.isConditionDisabled(l, e));
      }), this.resetPlaceholder();
    }, t.prototype.shouldAddNewConditionAtEnd = function(e) {
      return e && this.getNumConditions() < this.maxNumConditions && !this.isReadOnly();
    }, t.prototype.removeConditionsAndOperators = function(e, r) {
      if (!(e >= this.getNumConditions())) {
        this.removeComponents(this.eTypes, e, r), this.removeElements(this.eConditionBodies, e, r), this.removeValueElements(e, r);
        var i = Math.max(e - 1, 0);
        this.removeElements(this.eJoinOperatorPanels, i, r), this.removeComponents(this.eJoinOperatorsAnd, i, r), this.removeComponents(this.eJoinOperatorsOr, i, r);
      }
    }, t.prototype.removeElements = function(e, r, i) {
      var o = this.removeItems(e, r, i);
      o.forEach(function(s) {
        return lt(s);
      });
    }, t.prototype.removeComponents = function(e, r, i) {
      var o = this, s = this.removeItems(e, r, i);
      s.forEach(function(a) {
        lt(a.getGui()), o.destroyBean(a);
      });
    }, t.prototype.removeItems = function(e, r, i) {
      return i == null ? e.splice(r) : e.splice(r, i);
    }, t.prototype.afterGuiAttached = function(e) {
      if (n.prototype.afterGuiAttached.call(this, e), this.resetPlaceholder(), !e || !e.suppressFocus && !this.isReadOnly()) {
        var r = this.getInputs(0)[0];
        if (!r)
          return;
        r instanceof at && r.getInputElement().focus();
      }
    }, t.prototype.afterGuiDetached = function() {
      n.prototype.afterGuiDetached.call(this);
      var e = this.getModel();
      this.areModelsEqual(e, this.getModelFromUi()) || this.resetUiToActiveModel(e);
      for (var r = -1, i = -1, o = !1, s = this.getJoinOperator(), a = this.getNumConditions() - 1; a >= 0; a--)
        if (this.isConditionUiComplete(a))
          r === -1 && (r = a, i = a);
        else {
          var l = a >= this.numAlwaysVisibleConditions && !this.isConditionUiComplete(a - 1), u = a < r;
          (l || u) && (this.removeConditionsAndOperators(a, 1), o = !0, u && i--);
        }
      var c = !1;
      this.getNumConditions() < this.numAlwaysVisibleConditions && (this.createMissingConditionsAndOperators(), c = !0), this.shouldAddNewConditionAtEnd(i === this.getNumConditions() - 1) && (this.createJoinOperatorPanel(), this.createOption(), c = !0), c && this.updateConditionStatusesAndValues(i, s), o && this.updateJoinOperatorsDisabled(), this.lastUiCompletePosition = i;
    }, t.prototype.getPlaceholderText = function(e, r) {
      var i = this.translate(e);
      if (lo(this.filterPlaceholder)) {
        var o = this.filterPlaceholder, s = this.eTypes[r].getValue(), a = this.translate(s);
        i = o({
          filterOptionKey: s,
          filterOption: a,
          placeholder: i
        });
      } else
        typeof this.filterPlaceholder == "string" && (i = this.filterPlaceholder);
      return i;
    }, t.prototype.resetPlaceholder = function() {
      var e = this, r = this.localeService.getLocaleTextFunc();
      this.forEachInput(function(i, o, s, a) {
        if (i instanceof at) {
          var l = o === 0 && a > 1 ? "inRangeStart" : o === 0 ? "filterOoo" : "inRangeEnd", u = o === 0 && a > 1 ? r("ariaFilterFromValue", "Filter from value") : o === 0 ? r("ariaFilterValue", "Filter Value") : r("ariaFilterToValue", "Filter to Value");
          i.setInputPlaceholder(e.getPlaceholderText(l, s)), i.setInputAriaLabel(u);
        }
      });
    }, t.prototype.setElementValue = function(e, r) {
      e instanceof at && e.setValue(r != null ? String(r) : null, !0);
    }, t.prototype.setElementDisplayed = function(e, r) {
      e instanceof W && k(e.getGui(), r);
    }, t.prototype.setElementDisabled = function(e, r) {
      e instanceof W && nr(e.getGui(), r);
    }, t.prototype.attachElementOnChange = function(e, r) {
      e instanceof at && e.onValueChange(r);
    }, t.prototype.forEachInput = function(e) {
      var r = this;
      this.getConditionTypes().forEach(function(i, o) {
        r.forEachPositionTypeInput(o, i, e);
      });
    }, t.prototype.forEachPositionInput = function(e, r) {
      var i = this.getConditionType(e);
      this.forEachPositionTypeInput(e, i, r);
    }, t.prototype.forEachPositionTypeInput = function(e, r, i) {
      for (var o = this.getNumberOfInputs(r), s = this.getInputs(e), a = 0; a < s.length; a++) {
        var l = s[a];
        l != null && i(l, a, e, o);
      }
    }, t.prototype.isConditionDisabled = function(e, r) {
      return this.isReadOnly() ? !0 : e === 0 ? !1 : e > r + 1;
    }, t.prototype.isConditionBodyVisible = function(e) {
      var r = this.getConditionType(e), i = this.getNumberOfInputs(r);
      return i > 0;
    }, t.prototype.isConditionUiComplete = function(e) {
      if (e >= this.getNumConditions())
        return !1;
      var r = this.getConditionType(e);
      return !(r === t.EMPTY || this.getValues(e).some(function(i) {
        return i == null;
      }));
    }, t.prototype.getNumConditions = function() {
      return this.eTypes.length;
    }, t.prototype.getUiCompleteConditions = function() {
      for (var e = [], r = 0; r < this.getNumConditions(); r++)
        this.isConditionUiComplete(r) && e.push(this.createCondition(r));
      return e;
    }, t.prototype.createMissingConditionsAndOperators = function() {
      if (!this.isReadOnly())
        for (var e = this.getNumConditions(); e < this.numAlwaysVisibleConditions; e++)
          this.createJoinOperatorPanel(), this.createOption();
    }, t.prototype.resetUiToDefaults = function(e) {
      var r = this;
      return this.removeConditionsAndOperators(this.isReadOnly() ? 1 : this.numAlwaysVisibleConditions), this.eTypes.forEach(function(i) {
        return r.resetType(i);
      }), this.eJoinOperatorsAnd.forEach(function(i, o) {
        return r.resetJoinOperatorAnd(i, o, r.joinOperatorId + o);
      }), this.eJoinOperatorsOr.forEach(function(i, o) {
        return r.resetJoinOperatorOr(i, o, r.joinOperatorId + o);
      }), this.joinOperatorId++, this.forEachInput(function(i) {
        return r.resetInput(i);
      }), this.resetPlaceholder(), this.createMissingConditionsAndOperators(), this.lastUiCompletePosition = null, e || this.onUiChanged(), Ge.resolve();
    }, t.prototype.resetType = function(e) {
      var r = this.localeService.getLocaleTextFunc(), i = r("ariaFilteringOperator", "Filtering operator");
      e.setValue(this.optionsFactory.getDefaultOption(), !0).setAriaLabel(i).setDisabled(this.isReadOnly());
    }, t.prototype.resetJoinOperatorAnd = function(e, r, i) {
      this.resetJoinOperator(e, r, this.isDefaultOperator("AND"), this.translate("andCondition"), i);
    }, t.prototype.resetJoinOperatorOr = function(e, r, i) {
      this.resetJoinOperator(e, r, this.isDefaultOperator("OR"), this.translate("orCondition"), i);
    }, t.prototype.resetJoinOperator = function(e, r, i, o, s) {
      this.updateJoinOperatorDisabled(e.setValue(i, !0).setName("ag-simple-filter-and-or-" + this.getCompId() + "-" + s).setLabel(o), r);
    }, t.prototype.updateJoinOperatorsDisabled = function() {
      var e = this;
      this.eJoinOperatorsAnd.forEach(function(r, i) {
        return e.updateJoinOperatorDisabled(r, i);
      }), this.eJoinOperatorsOr.forEach(function(r, i) {
        return e.updateJoinOperatorDisabled(r, i);
      });
    }, t.prototype.updateJoinOperatorDisabled = function(e, r) {
      e.setDisabled(this.isReadOnly() || r > 0);
    }, t.prototype.resetInput = function(e) {
      this.setElementValue(e, null), this.setElementDisabled(e, this.isReadOnly());
    }, t.prototype.setConditionIntoUi = function(e, r) {
      var i = this, o = this.mapValuesFromModel(e);
      this.forEachInput(function(s, a, l, u) {
        l === r && i.setElementValue(s, o[a] != null ? o[a] : null);
      });
    }, t.prototype.setValueFromFloatingFilter = function(e) {
      var r = this;
      this.forEachInput(function(i, o, s, a) {
        r.setElementValue(i, o === 0 && s === 0 ? e : null);
      });
    }, t.prototype.isDefaultOperator = function(e) {
      return e === this.defaultJoinOperator;
    }, t.prototype.addChangedListeners = function(e, r) {
      var i = this;
      this.isReadOnly() || (e.onValueChange(this.listener), this.forEachPositionInput(r, function(o) {
        i.attachElementOnChange(o, i.listener);
      }));
    }, t.prototype.individualConditionPasses = function(e, r) {
      var i = this.getCellValue(e.node), o = this.mapValuesFromModel(r), s = this.optionsFactory.getCustomOption(r.type), a = this.evaluateCustomFilter(s, o, i);
      return a ?? (i == null ? this.evaluateNullValue(r.type) : this.evaluateNonNullValue(o, i, r, e));
    }, t.prototype.evaluateCustomFilter = function(e, r, i) {
      if (e != null) {
        var o = e.predicate;
        if (o != null && !r.some(function(s) {
          return s == null;
        }))
          return o(r, i);
      }
    }, t.prototype.isBlank = function(e) {
      return e == null || typeof e == "string" && e.trim().length === 0;
    }, t.EMPTY = "empty", t.BLANK = "blank", t.NOT_BLANK = "notBlank", t.EQUALS = "equals", t.NOT_EQUAL = "notEqual", t.LESS_THAN = "lessThan", t.LESS_THAN_OR_EQUAL = "lessThanOrEqual", t.GREATER_THAN = "greaterThan", t.GREATER_THAN_OR_EQUAL = "greaterThanOrEqual", t.IN_RANGE = "inRange", t.CONTAINS = "contains", t.NOT_CONTAINS = "notContains", t.STARTS_WITH = "startsWith", t.ENDS_WITH = "endsWith", t;
  }(ki)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var jd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), le = (
  /** @class */
  function(n) {
    jd(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setParams = function(e) {
      n.prototype.setParams.call(this, e), this.scalarFilterParams = e;
    }, t.prototype.evaluateNullValue = function(e) {
      switch (e) {
        case t.EQUALS:
        case t.NOT_EQUAL:
          if (this.scalarFilterParams.includeBlanksInEquals)
            return !0;
          break;
        case t.GREATER_THAN:
        case t.GREATER_THAN_OR_EQUAL:
          if (this.scalarFilterParams.includeBlanksInGreaterThan)
            return !0;
          break;
        case t.LESS_THAN:
        case t.LESS_THAN_OR_EQUAL:
          if (this.scalarFilterParams.includeBlanksInLessThan)
            return !0;
          break;
        case t.IN_RANGE:
          if (this.scalarFilterParams.includeBlanksInRange)
            return !0;
          break;
        case t.BLANK:
          return !0;
        case t.NOT_BLANK:
          return !1;
      }
      return !1;
    }, t.prototype.evaluateNonNullValue = function(e, r, i) {
      var o = this.comparator(), s = e[0] != null ? o(e[0], r) : 0;
      switch (i.type) {
        case t.EQUALS:
          return s === 0;
        case t.NOT_EQUAL:
          return s !== 0;
        case t.GREATER_THAN:
          return s > 0;
        case t.GREATER_THAN_OR_EQUAL:
          return s >= 0;
        case t.LESS_THAN:
          return s < 0;
        case t.LESS_THAN_OR_EQUAL:
          return s <= 0;
        case t.IN_RANGE: {
          var a = o(e[1], r);
          return this.scalarFilterParams.inRangeInclusive ? s >= 0 && a <= 0 : s > 0 && a < 0;
        }
        case t.BLANK:
          return this.isBlank(r);
        case t.NOT_BLANK:
          return !this.isBlank(r);
        default:
          return console.warn('AG Grid: Unexpected type of filter "' + i.type + '", it looks like the filter was configured with incorrect Filter Options'), !0;
      }
    }, t;
  }(te)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var tu = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Nn = function() {
  return Nn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Nn.apply(this, arguments);
}, kd = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Us = 1e3, zs = 1 / 0, ru = (
  /** @class */
  function(n) {
    tu(t, n);
    function t(e, r, i) {
      var o = n.call(this, r, i) || this;
      return o.dateFilterParams = e, o;
    }
    return t.prototype.conditionToString = function(e, r) {
      var i = e.type, o = (r || {}).numberOfInputs, s = i == te.IN_RANGE || o === 2, a = Et(e.dateFrom), l = Et(e.dateTo), u = this.dateFilterParams.inRangeFloatingFilterDateFormat;
      if (s) {
        var c = a !== null ? Fi(a, u) : "null", p = l !== null ? Fi(l, u) : "null";
        return c + "-" + p;
      }
      return a != null ? Fi(a, u) : "" + i;
    }, t;
  }(Cs)
), iu = (
  /** @class */
  function(n) {
    tu(t, n);
    function t() {
      var e = n.call(this, "dateFilter") || this;
      return e.eConditionPanelsFrom = [], e.eConditionPanelsTo = [], e.dateConditionFromComps = [], e.dateConditionToComps = [], e.minValidYear = Us, e.maxValidYear = zs, e;
    }
    return t.prototype.afterGuiAttached = function(e) {
      n.prototype.afterGuiAttached.call(this, e), this.dateConditionFromComps[0].afterGuiAttached(e);
    }, t.prototype.mapValuesFromModel = function(e) {
      var r = e || {}, i = r.dateFrom, o = r.dateTo, s = r.type;
      return [
        i && Et(i) || null,
        o && Et(o) || null
      ].slice(0, this.getNumberOfInputs(s));
    }, t.prototype.comparator = function() {
      return this.dateFilterParams.comparator ? this.dateFilterParams.comparator : this.defaultComparator.bind(this);
    }, t.prototype.defaultComparator = function(e, r) {
      var i = r;
      return r == null || i < e ? -1 : i > e ? 1 : 0;
    }, t.prototype.setParams = function(e) {
      this.dateFilterParams = e, n.prototype.setParams.call(this, e);
      var r = function(i, o) {
        if (e[i] != null)
          if (isNaN(e[i]))
            console.warn("AG Grid: DateFilter " + i + " is not a number");
          else
            return e[i] == null ? o : Number(e[i]);
        return o;
      };
      this.minValidYear = r("minValidYear", Us), this.maxValidYear = r("maxValidYear", zs), this.minValidYear > this.maxValidYear && console.warn("AG Grid: DateFilter minValidYear should be <= maxValidYear"), this.filterModelFormatter = new ru(this.dateFilterParams, this.localeService, this.optionsFactory);
    }, t.prototype.createDateCompWrapper = function(e) {
      var r = this, i = new Yl(this.getContext(), this.userComponentFactory, {
        onDateChanged: function() {
          return r.onUiChanged();
        },
        filterParams: this.dateFilterParams
      }, e);
      return this.addDestroyFunc(function() {
        return i.destroy();
      }), i;
    }, t.prototype.setElementValue = function(e, r) {
      e.setDate(r);
    }, t.prototype.setElementDisplayed = function(e, r) {
      e.setDisplayed(r);
    }, t.prototype.setElementDisabled = function(e, r) {
      e.setDisabled(r);
    }, t.prototype.getDefaultFilterOptions = function() {
      return t.DEFAULT_FILTER_OPTIONS;
    }, t.prototype.createValueElement = function() {
      var e = document.createElement("div");
      return e.classList.add("ag-filter-body"), this.createFromToElement(e, this.eConditionPanelsFrom, this.dateConditionFromComps, "from"), this.createFromToElement(e, this.eConditionPanelsTo, this.dateConditionToComps, "to"), e;
    }, t.prototype.createFromToElement = function(e, r, i, o) {
      var s = document.createElement("div");
      s.classList.add("ag-filter-" + o), s.classList.add("ag-filter-date-" + o), r.push(s), e.appendChild(s), i.push(this.createDateCompWrapper(s));
    }, t.prototype.removeValueElements = function(e, r) {
      this.removeDateComps(this.dateConditionFromComps, e, r), this.removeDateComps(this.dateConditionToComps, e, r), this.removeItems(this.eConditionPanelsFrom, e, r), this.removeItems(this.eConditionPanelsTo, e, r);
    }, t.prototype.removeDateComps = function(e, r, i) {
      var o = this.removeItems(e, r, i);
      o.forEach(function(s) {
        return s.destroy();
      });
    }, t.prototype.isConditionUiComplete = function(e) {
      var r = this;
      if (!n.prototype.isConditionUiComplete.call(this, e))
        return !1;
      var i = function(s) {
        return s != null && s.getUTCFullYear() >= r.minValidYear && s.getUTCFullYear() <= r.maxValidYear;
      }, o = !0;
      return this.forEachInput(function(s, a, l, u) {
        l !== e || !o || a >= u || (o = o && i(s.getDate()));
      }), o;
    }, t.prototype.areSimpleModelsEqual = function(e, r) {
      return e.dateFrom === r.dateFrom && e.dateTo === r.dateTo && e.type === r.type;
    }, t.prototype.getFilterType = function() {
      return "date";
    }, t.prototype.createCondition = function(e) {
      var r = this.getConditionType(e), i = {}, o = this.getValues(e);
      return o.length > 0 && (i.dateFrom = Br(o[0])), o.length > 1 && (i.dateTo = Br(o[1])), Nn({ dateFrom: null, dateTo: null, filterType: this.getFilterType(), type: r }, i);
    }, t.prototype.resetPlaceholder = function() {
      var e = this.localeService.getLocaleTextFunc(), r = this.translate("dateFormatOoo"), i = e("ariaFilterValue", "Filter Value");
      this.forEachInput(function(o) {
        o.setInputPlaceholder(r), o.setInputAriaLabel(i);
      });
    }, t.prototype.getInputs = function(e) {
      return e >= this.dateConditionFromComps.length ? [null, null] : [this.dateConditionFromComps[e], this.dateConditionToComps[e]];
    }, t.prototype.getValues = function(e) {
      var r = [];
      return this.forEachPositionInput(e, function(i, o, s, a) {
        o < a && r.push(i.getDate());
      }), r;
    }, t.prototype.getModelAsString = function(e) {
      var r;
      return (r = this.filterModelFormatter.getModelAsString(e)) !== null && r !== void 0 ? r : "";
    }, t.DEFAULT_FILTER_OPTIONS = [
      le.EQUALS,
      le.GREATER_THAN,
      le.LESS_THAN,
      le.NOT_EQUAL,
      le.IN_RANGE,
      le.BLANK,
      le.NOT_BLANK
    ], kd([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), t;
  }(le)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ud = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ou = (
  /** @class */
  function(n) {
    Ud(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getDefaultDebounceMs = function() {
      return 0;
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.isEventFromFloatingFilter = function(e) {
      return e && e.afterFloatingFilter;
    }, t.prototype.isEventFromDataChange = function(e) {
      return e == null ? void 0 : e.afterDataChange;
    }, t.prototype.getLastType = function() {
      return this.lastType;
    }, t.prototype.isReadOnly = function() {
      return this.readOnly;
    }, t.prototype.setLastTypeFromModel = function(e) {
      if (!e) {
        this.lastType = this.optionsFactory.getDefaultOption();
        return;
      }
      var r = e.operator, i;
      if (r) {
        var o = e;
        i = o.conditions[0];
      } else
        i = e;
      this.lastType = i.type;
    }, t.prototype.canWeEditAfterModelFromParentFilter = function(e) {
      if (!e)
        return this.isTypeEditable(this.lastType);
      var r = e.operator;
      if (r)
        return !1;
      var i = e;
      return this.isTypeEditable(i.type);
    }, t.prototype.init = function(e) {
      this.optionsFactory = new ql(), this.optionsFactory.init(e.filterParams, this.getDefaultFilterOptions()), this.lastType = this.optionsFactory.getDefaultOption(), this.readOnly = !!e.filterParams.readOnly;
      var r = this.isTypeEditable(this.lastType);
      this.setEditable(r);
    }, t.prototype.doesFilterHaveSingleInput = function(e) {
      var r = this.optionsFactory.getCustomOption(e), i = (r || {}).numberOfInputs;
      return i == null || i == 1;
    }, t.prototype.isTypeEditable = function(e) {
      var r = [
        te.IN_RANGE,
        te.EMPTY,
        te.BLANK,
        te.NOT_BLANK
      ];
      return !!e && !this.isReadOnly() && this.doesFilterHaveSingleInput(e) && r.indexOf(e) < 0;
    }, t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var zd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Go = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Kd = (
  /** @class */
  function(n) {
    zd(t, n);
    function t() {
      return n.call(
        this,
        /* html */
        `
            <div class="ag-floating-filter-input" role="presentation">
                <ag-input-text-field ref="eReadOnlyText"></ag-input-text-field>
                <div ref="eDateWrapper" style="display: flex;"></div>
            </div>`
      ) || this;
    }
    return t.prototype.getDefaultFilterOptions = function() {
      return iu.DEFAULT_FILTER_OPTIONS;
    }, t.prototype.init = function(e) {
      n.prototype.init.call(this, e), this.params = e, this.filterParams = e.filterParams, this.createDateComponent();
      var r = this.localeService.getLocaleTextFunc();
      this.eReadOnlyText.setDisabled(!0).setInputAriaLabel(r("ariaDateFilterInput", "Date Filter Input")), this.filterModelFormatter = new ru(this.filterParams, this.localeService, this.optionsFactory);
    }, t.prototype.setEditable = function(e) {
      k(this.eDateWrapper, e), k(this.eReadOnlyText.getGui(), !e);
    }, t.prototype.onParentModelChanged = function(e, r) {
      if (!(this.isEventFromFloatingFilter(r) || this.isEventFromDataChange(r))) {
        n.prototype.setLastTypeFromModel.call(this, e);
        var i = !this.isReadOnly() && this.canWeEditAfterModelFromParentFilter(e);
        if (this.setEditable(i), i) {
          if (e) {
            var o = e;
            this.dateComp.setDate(Et(o.dateFrom));
          } else
            this.dateComp.setDate(null);
          this.eReadOnlyText.setValue("");
        } else
          this.eReadOnlyText.setValue(this.filterModelFormatter.getModelAsString(e)), this.dateComp.setDate(null);
      }
    }, t.prototype.onDateChanged = function() {
      var e = this, r = this.dateComp.getDate(), i = Br(r);
      this.params.parentFilterInstance(function(o) {
        if (o) {
          var s = Et(i);
          o.onFloatingFilterChanged(e.getLastType() || null, s);
        }
      });
    }, t.prototype.createDateComponent = function() {
      var e = this, r = ki.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs()), i = {
        onDateChanged: Ze(this.onDateChanged.bind(this), r),
        filterParams: this.params.column.getColDef().filterParams
      };
      this.dateComp = new Yl(this.getContext(), this.userComponentFactory, i, this.eDateWrapper), this.addDestroyFunc(function() {
        return e.dateComp.destroy();
      });
    }, t.prototype.getFilterModelFormatter = function() {
      return this.filterModelFormatter;
    }, Go([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), Go([
      P("eReadOnlyText")
    ], t.prototype, "eReadOnlyText", void 0), Go([
      P("eDateWrapper")
    ], t.prototype, "eDateWrapper", void 0), t;
  }(ou)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var $d = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Yd = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, qd = (
  /** @class */
  function(n) {
    $d(t, n);
    function t() {
      return n.call(
        this,
        /* html */
        `
            <div class="ag-filter-filter">
                <ag-input-text-field class="ag-date-filter" ref="eDateInput"></ag-input-text-field>
            </div>`
      ) || this;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.init = function(e) {
      var r = this, i = this.gridOptionsService.getDocument(), o = this.eDateInput.getInputElement(), s = this.shouldUseBrowserDatePicker(e);
      s && (o.type = "date");
      var a = s && ot();
      this.addManagedListener(o, "mousedown", function() {
        r.eDateInput.isDisabled() || a || o.focus();
      }), this.addManagedListener(o, "input", function(p) {
        p.target === i.activeElement && (r.eDateInput.isDisabled() || e.onDateChanged());
      });
      var l = e.filterParams || {}, u = l.minValidYear, c = l.maxValidYear;
      u && (o.min = u + "-01-01"), c && (o.max = c + "-12-31");
    }, t.prototype.getDate = function() {
      return Et(this.eDateInput.getValue());
    }, t.prototype.setDate = function(e) {
      this.eDateInput.setValue(Br(e, !1));
    }, t.prototype.setInputPlaceholder = function(e) {
      this.eDateInput.setInputPlaceholder(e);
    }, t.prototype.setDisabled = function(e) {
      this.eDateInput.setDisabled(e);
    }, t.prototype.afterGuiAttached = function(e) {
      (!e || !e.suppressFocus) && this.eDateInput.getInputElement().focus();
    }, t.prototype.shouldUseBrowserDatePicker = function(e) {
      return e.filterParams && e.filterParams.browserDatePicker != null ? e.filterParams.browserDatePicker : Kr() || os() || ot() && is() >= 14.1;
    }, Yd([
      P("eDateInput")
    ], t.prototype, "eDateInput", void 0), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Qd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), dr = (
  /** @class */
  function(n) {
    Qd(t, n);
    function t(e, r, i) {
      return r === void 0 && (r = "ag-text-field"), i === void 0 && (i = "text"), n.call(this, e, r, i) || this;
    }
    return t.prototype.postConstruct = function() {
      n.prototype.postConstruct.call(this), this.config.allowedCharPattern && this.preventDisallowedCharacters();
    }, t.prototype.setValue = function(e, r) {
      var i = n.prototype.setValue.call(this, e, r);
      return this.eInput.value !== e && (this.eInput.value = O(e) ? e : ""), i;
    }, t.prototype.preventDisallowedCharacters = function() {
      var e = new RegExp("[" + this.config.allowedCharPattern + "]"), r = function(i) {
        i.ctrlKey || i.metaKey || i.key && !e.test(i.key) && i.preventDefault();
      };
      this.addManagedListener(this.eInput, "keypress", r), this.addManagedListener(this.eInput, "paste", function(i) {
        var o, s = (o = i.clipboardData) === null || o === void 0 ? void 0 : o.getData("text");
        s && s.split("").some(function(a) {
          return !e.test(a);
        }) && i.preventDefault();
      });
    }, t;
  }(at)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Xd = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ms = (
  /** @class */
  function(n) {
    Xd(t, n);
    function t(e) {
      return n.call(this, e, "ag-number-field", "number") || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      n.prototype.postConstruct.call(this), this.addManagedListener(this.eInput, "blur", function() {
        var r = parseFloat(e.eInput.value), i = isNaN(r) ? "" : e.normalizeValue(r.toString());
        e.value !== i && e.setValue(i);
      }), this.addManagedListener(this.eInput, "wheel", this.onWheel.bind(this)), this.eInput.step = "any";
    }, t.prototype.onWheel = function(e) {
      document.activeElement === this.eInput && e.preventDefault();
    }, t.prototype.normalizeValue = function(e) {
      if (e === "")
        return "";
      this.precision && (e = this.adjustPrecision(e));
      var r = parseFloat(e);
      return this.min != null && r < this.min ? e = this.min.toString() : this.max != null && r > this.max && (e = this.max.toString()), e;
    }, t.prototype.adjustPrecision = function(e) {
      if (this.precision) {
        var r = parseFloat(e).toFixed(this.precision);
        e = parseFloat(r).toString();
      }
      return e;
    }, t.prototype.setMin = function(e) {
      return this.min === e ? this : (this.min = e, Ir(this.eInput, "min", e), this);
    }, t.prototype.setMax = function(e) {
      return this.max === e ? this : (this.max = e, Ir(this.eInput, "max", e), this);
    }, t.prototype.setPrecision = function(e) {
      return this.precision = e, this;
    }, t.prototype.setStep = function(e) {
      return this.step === e ? this : (this.step = e, Ir(this.eInput, "step", e), this);
    }, t.prototype.setValue = function(e, r) {
      if (e != null) {
        e = this.adjustPrecision(e);
        var i = this.normalizeValue(e);
        if (e != i)
          return this;
      }
      return n.prototype.setValue.call(this, e, r);
    }, t;
  }(dr)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var nu = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), su = (
  /** @class */
  function(n) {
    nu(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.conditionToString = function(e, r) {
      var i = (r || {}).numberOfInputs, o = e.type == te.IN_RANGE || i === 2;
      return o ? e.filter + "-" + e.filterTo : e.filter != null ? "" + e.filter : "" + e.type;
    }, t;
  }(Cs)
);
function au(n) {
  var t = (n ?? {}).allowedCharPattern;
  return t || (Kr() ? null : "\\d\\-\\.");
}
var lu = (
  /** @class */
  function(n) {
    nu(t, n);
    function t() {
      var e = n.call(this, "numberFilter") || this;
      return e.eValuesFrom = [], e.eValuesTo = [], e;
    }
    return t.prototype.mapValuesFromModel = function(e) {
      var r = e || {}, i = r.filter, o = r.filterTo, s = r.type;
      return [
        this.processValue(i),
        this.processValue(o)
      ].slice(0, this.getNumberOfInputs(s));
    }, t.prototype.getDefaultDebounceMs = function() {
      return 500;
    }, t.prototype.comparator = function() {
      return function(e, r) {
        return e === r ? 0 : e < r ? 1 : -1;
      };
    }, t.prototype.setParams = function(e) {
      this.numberFilterParams = e, n.prototype.setParams.call(this, e), this.filterModelFormatter = new su(this.localeService, this.optionsFactory);
    }, t.prototype.getDefaultFilterOptions = function() {
      return t.DEFAULT_FILTER_OPTIONS;
    }, t.prototype.createValueElement = function() {
      var e = au(this.numberFilterParams), r = document.createElement("div");
      return r.classList.add("ag-filter-body"), ue(r, "presentation"), this.createFromToElement(r, this.eValuesFrom, "from", e), this.createFromToElement(r, this.eValuesTo, "to", e), r;
    }, t.prototype.createFromToElement = function(e, r, i, o) {
      var s = this.createManagedBean(o ? new dr({ allowedCharPattern: o }) : new ms());
      s.addCssClass("ag-filter-" + i), s.addCssClass("ag-filter-filter"), r.push(s), e.appendChild(s.getGui());
    }, t.prototype.removeValueElements = function(e, r) {
      this.removeComponents(this.eValuesFrom, e, r), this.removeComponents(this.eValuesTo, e, r);
    }, t.prototype.getValues = function(e) {
      var r = this, i = [];
      return this.forEachPositionInput(e, function(o, s, a, l) {
        s < l && i.push(r.processValue(r.stringToFloat(o.getValue())));
      }), i;
    }, t.prototype.areSimpleModelsEqual = function(e, r) {
      return e.filter === r.filter && e.filterTo === r.filterTo && e.type === r.type;
    }, t.prototype.getFilterType = function() {
      return "number";
    }, t.prototype.processValue = function(e) {
      return e == null || isNaN(e) ? null : e;
    }, t.prototype.stringToFloat = function(e) {
      if (typeof e == "number")
        return e;
      var r = wt(e);
      return r != null && r.trim() === "" && (r = null), this.numberFilterParams.numberParser ? this.numberFilterParams.numberParser(r) : r == null || r.trim() === "-" ? null : parseFloat(r);
    }, t.prototype.createCondition = function(e) {
      var r = this.getConditionType(e), i = {
        filterType: this.getFilterType(),
        type: r
      }, o = this.getValues(e);
      return o.length > 0 && (i.filter = o[0]), o.length > 1 && (i.filterTo = o[1]), i;
    }, t.prototype.getInputs = function(e) {
      return e >= this.eValuesFrom.length ? [null, null] : [this.eValuesFrom[e], this.eValuesTo[e]];
    }, t.prototype.getModelAsString = function(e) {
      var r;
      return (r = this.filterModelFormatter.getModelAsString(e)) !== null && r !== void 0 ? r : "";
    }, t.DEFAULT_FILTER_OPTIONS = [
      le.EQUALS,
      le.NOT_EQUAL,
      le.LESS_THAN,
      le.LESS_THAN_OR_EQUAL,
      le.GREATER_THAN,
      le.GREATER_THAN_OR_EQUAL,
      le.IN_RANGE,
      le.BLANK,
      le.NOT_BLANK
    ], t;
  }(le)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var uu = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), zi = function() {
  return zi = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, zi.apply(this, arguments);
}, cu = (
  /** @class */
  function(n) {
    uu(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.conditionToString = function(e, r) {
      var i = (r || {}).numberOfInputs, o = e.type == te.IN_RANGE || i === 2;
      return o ? e.filter + "-" + e.filterTo : e.filter != null ? "" + e.filter : "" + e.type;
    }, t;
  }(Cs)
), ws = (
  /** @class */
  function(n) {
    uu(t, n);
    function t() {
      var e = n.call(this, "textFilter") || this;
      return e.eValuesFrom = [], e.eValuesTo = [], e;
    }
    return t.trimInput = function(e) {
      var r = e && e.trim();
      return r === "" ? e : r;
    }, t.prototype.getDefaultDebounceMs = function() {
      return 500;
    }, t.prototype.setParams = function(e) {
      this.textFilterParams = e, n.prototype.setParams.call(this, e), this.matcher = this.getTextMatcher(), this.formatter = this.textFilterParams.textFormatter || (this.textFilterParams.caseSensitive ? t.DEFAULT_FORMATTER : t.DEFAULT_LOWERCASE_FORMATTER), this.filterModelFormatter = new cu(this.localeService, this.optionsFactory);
    }, t.prototype.getTextMatcher = function() {
      var e = this.textFilterParams.textCustomComparator;
      return e ? (G.doOnce(function() {
        return console.warn("AG Grid - textCustomComparator is deprecated, use textMatcher instead.");
      }, "textCustomComparator.deprecated"), function(r) {
        var i = r.filterOption, o = r.value, s = r.filterText;
        return e(i, o, s);
      }) : this.textFilterParams.textMatcher || t.DEFAULT_MATCHER;
    }, t.prototype.createCondition = function(e) {
      var r = this.getConditionType(e), i = {
        filterType: this.getFilterType(),
        type: r
      }, o = this.getValues(e);
      return o.length > 0 && (i.filter = o[0]), o.length > 1 && (i.filterTo = o[1]), i;
    }, t.prototype.getFilterType = function() {
      return "text";
    }, t.prototype.areSimpleModelsEqual = function(e, r) {
      return e.filter === r.filter && e.filterTo === r.filterTo && e.type === r.type;
    }, t.prototype.getInputs = function(e) {
      return e >= this.eValuesFrom.length ? [null, null] : [this.eValuesFrom[e], this.eValuesTo[e]];
    }, t.prototype.getValues = function(e) {
      var r = this, i = [];
      return this.forEachPositionInput(e, function(o, s, a, l) {
        if (s < l) {
          var u = wt(o.getValue()), c = (r.textFilterParams.trimInput ? t.trimInput(u) : u) || null;
          i.push(c), o.setValue(c, !0);
        }
      }), i;
    }, t.prototype.getDefaultFilterOptions = function() {
      return t.DEFAULT_FILTER_OPTIONS;
    }, t.prototype.createValueElement = function() {
      var e = document.createElement("div");
      return e.classList.add("ag-filter-body"), ue(e, "presentation"), this.createFromToElement(e, this.eValuesFrom, "from"), this.createFromToElement(e, this.eValuesTo, "to"), e;
    }, t.prototype.createFromToElement = function(e, r, i) {
      var o = this.createManagedBean(new dr());
      o.addCssClass("ag-filter-" + i), o.addCssClass("ag-filter-filter"), r.push(o), e.appendChild(o.getGui());
    }, t.prototype.removeValueElements = function(e, r) {
      this.removeComponents(this.eValuesFrom, e, r), this.removeComponents(this.eValuesTo, e, r);
    }, t.prototype.mapValuesFromModel = function(e) {
      var r = e || {}, i = r.filter, o = r.filterTo, s = r.type;
      return [
        i || null,
        o || null
      ].slice(0, this.getNumberOfInputs(s));
    }, t.prototype.evaluateNullValue = function(e) {
      var r = [
        te.NOT_EQUAL,
        te.NOT_CONTAINS,
        te.BLANK
      ];
      return e ? r.indexOf(e) >= 0 : !1;
    }, t.prototype.evaluateNonNullValue = function(e, r, i, o) {
      var s = this, a = e.map(function(m) {
        return s.formatter(m);
      }) || [], l = this.formatter(r), u = this.textFilterParams, c = u.api, p = u.colDef, d = u.column, v = u.columnApi, f = u.context, y = u.textFormatter;
      if (i.type === te.BLANK)
        return this.isBlank(r);
      if (i.type === te.NOT_BLANK)
        return !this.isBlank(r);
      var C = {
        api: c,
        colDef: p,
        column: d,
        columnApi: v,
        context: f,
        node: o.node,
        data: o.data,
        filterOption: i.type,
        value: l,
        textFormatter: y
      };
      return a.some(function(m) {
        return s.matcher(zi(zi({}, C), { filterText: m }));
      });
    }, t.prototype.getModelAsString = function(e) {
      var r;
      return (r = this.filterModelFormatter.getModelAsString(e)) !== null && r !== void 0 ? r : "";
    }, t.DEFAULT_FILTER_OPTIONS = [
      te.CONTAINS,
      te.NOT_CONTAINS,
      te.EQUALS,
      te.NOT_EQUAL,
      te.STARTS_WITH,
      te.ENDS_WITH,
      te.BLANK,
      te.NOT_BLANK
    ], t.DEFAULT_FORMATTER = function(e) {
      return e;
    }, t.DEFAULT_LOWERCASE_FORMATTER = function(e) {
      return e == null ? null : e.toString().toLowerCase();
    }, t.DEFAULT_MATCHER = function(e) {
      var r = e.filterOption, i = e.value, o = e.filterText;
      if (o == null)
        return !1;
      switch (r) {
        case t.CONTAINS:
          return i.indexOf(o) >= 0;
        case t.NOT_CONTAINS:
          return i.indexOf(o) < 0;
        case t.EQUALS:
          return i === o;
        case t.NOT_EQUAL:
          return i != o;
        case t.STARTS_WITH:
          return i.indexOf(o) === 0;
        case t.ENDS_WITH:
          var s = i.lastIndexOf(o);
          return s >= 0 && s === i.length - o.length;
        default:
          return !1;
      }
    }, t;
  }(te)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var pu = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ho = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, du = (
  /** @class */
  function(n) {
    pu(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.params = e, r;
    }
    return t.prototype.setupGui = function(e) {
      this.eFloatingFilterTextInput = this.createManagedBean(new dr(this.params.config)), this.eFloatingFilterTextInput.setInputAriaLabel(this.params.ariaLabel), e.appendChild(this.eFloatingFilterTextInput.getGui());
    }, t.prototype.setEditable = function(e) {
      this.eFloatingFilterTextInput.setDisabled(!e);
    }, t.prototype.getValue = function() {
      return this.eFloatingFilterTextInput.getValue();
    }, t.prototype.setValue = function(e, r) {
      this.eFloatingFilterTextInput.setValue(e, r);
    }, t.prototype.addValueChangedListener = function(e) {
      var r = this.eFloatingFilterTextInput.getGui();
      this.addManagedListener(r, "input", e), this.addManagedListener(r, "keypress", e), this.addManagedListener(r, "keydown", e);
    }, t;
  }(T)
), hu = (
  /** @class */
  function(n) {
    pu(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.setTemplate(
        /* html */
        `
            <div class="ag-floating-filter-input" role="presentation" ref="eFloatingFilterInputContainer"></div>
        `
      );
    }, t.prototype.getDefaultDebounceMs = function() {
      return 500;
    }, t.prototype.onParentModelChanged = function(e, r) {
      this.isEventFromFloatingFilter(r) || this.isEventFromDataChange(r) || (this.setLastTypeFromModel(e), this.setEditable(this.canWeEditAfterModelFromParentFilter(e)), this.floatingFilterInputService.setValue(this.getFilterModelFormatter().getModelAsString(e)));
    }, t.prototype.init = function(e) {
      this.params = e;
      var r = this.columnModel.getDisplayNameForColumn(e.column, "header", !0), i = this.localeService.getLocaleTextFunc(), o = r + " " + i("ariaFilterInput", "Filter Input");
      if (this.floatingFilterInputService = this.createFloatingFilterInputService(o), this.floatingFilterInputService.setupGui(this.eFloatingFilterInputContainer), n.prototype.init.call(this, e), this.applyActive = ki.isUseApplyButton(this.params.filterParams), !this.isReadOnly()) {
        var s = ki.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs()), a = Ze(this.syncUpWithParentFilter.bind(this), s);
        this.floatingFilterInputService.addValueChangedListener(a);
      }
    }, t.prototype.syncUpWithParentFilter = function(e) {
      var r = this, i = e.key === _.ENTER;
      if (!(this.applyActive && !i)) {
        var o = this.floatingFilterInputService.getValue();
        this.params.filterParams.trimInput && (o = ws.trimInput(o), this.floatingFilterInputService.setValue(o, !0)), this.params.parentFilterInstance(function(s) {
          s && s.onFloatingFilterChanged(r.getLastType() || null, o || null);
        });
      }
    }, t.prototype.setEditable = function(e) {
      this.floatingFilterInputService.setEditable(e);
    }, Ho([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Ho([
      P("eFloatingFilterInputContainer")
    ], t.prototype, "eFloatingFilterInputContainer", void 0), Ho([
      b
    ], t.prototype, "postConstruct", null), t;
  }(ou)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var fu = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Jd = (
  /** @class */
  function(n) {
    fu(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.params = e, r.numberInputActive = !0, r;
    }
    return t.prototype.setupGui = function(e) {
      this.eFloatingFilterNumberInput = this.createManagedBean(new ms()), this.eFloatingFilterTextInput = this.createManagedBean(new dr()), this.eFloatingFilterTextInput.setDisabled(!0), this.eFloatingFilterNumberInput.setInputAriaLabel(this.params.ariaLabel), this.eFloatingFilterTextInput.setInputAriaLabel(this.params.ariaLabel), e.appendChild(this.eFloatingFilterNumberInput.getGui()), e.appendChild(this.eFloatingFilterTextInput.getGui());
    }, t.prototype.setEditable = function(e) {
      this.numberInputActive = e, this.eFloatingFilterNumberInput.setDisplayed(this.numberInputActive), this.eFloatingFilterTextInput.setDisplayed(!this.numberInputActive);
    }, t.prototype.getValue = function() {
      return this.getActiveInputElement().getValue();
    }, t.prototype.setValue = function(e, r) {
      this.getActiveInputElement().setValue(e, r);
    }, t.prototype.getActiveInputElement = function() {
      return this.numberInputActive ? this.eFloatingFilterNumberInput : this.eFloatingFilterTextInput;
    }, t.prototype.addValueChangedListener = function(e) {
      this.setupListeners(this.eFloatingFilterNumberInput.getGui(), e), this.setupListeners(this.eFloatingFilterTextInput.getGui(), e);
    }, t.prototype.setupListeners = function(e, r) {
      this.addManagedListener(e, "input", r), this.addManagedListener(e, "keypress", r), this.addManagedListener(e, "keydown", r);
    }, t;
  }(T)
), Zd = (
  /** @class */
  function(n) {
    fu(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function(e) {
      n.prototype.init.call(this, e), this.filterModelFormatter = new su(this.localeService, this.optionsFactory);
    }, t.prototype.getDefaultFilterOptions = function() {
      return lu.DEFAULT_FILTER_OPTIONS;
    }, t.prototype.getFilterModelFormatter = function() {
      return this.filterModelFormatter;
    }, t.prototype.createFloatingFilterInputService = function(e) {
      var r = au(this.params.filterParams);
      return r ? this.createManagedBean(new du({
        config: { allowedCharPattern: r },
        ariaLabel: e
      })) : this.createManagedBean(new Jd({ ariaLabel: e }));
    }, t;
  }(hu)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var eh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), th = (
  /** @class */
  function(n) {
    eh(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function(e) {
      n.prototype.init.call(this, e), this.filterModelFormatter = new cu(this.localeService, this.optionsFactory);
    }, t.prototype.getDefaultFilterOptions = function() {
      return ws.DEFAULT_FILTER_OPTIONS;
    }, t.prototype.getFilterModelFormatter = function() {
      return this.filterModelFormatter;
    }, t.prototype.createFloatingFilterInputService = function(e) {
      return this.createManagedBean(new du({
        ariaLabel: e
      }));
    }, t;
  }(hu)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ae = (
  /** @class */
  function() {
    function n(t, e) {
      var r = this;
      e === void 0 && (e = !1), this.destroyFuncs = [], this.touching = !1, this.eventService = new Rt(), this.eElement = t, this.preventMouseClick = e;
      var i = this.onTouchStart.bind(this), o = this.onTouchMove.bind(this), s = this.onTouchEnd.bind(this);
      this.eElement.addEventListener("touchstart", i, { passive: !0 }), this.eElement.addEventListener("touchmove", o, { passive: !0 }), this.eElement.addEventListener("touchend", s, { passive: !1 }), this.destroyFuncs.push(function() {
        r.eElement.removeEventListener("touchstart", i, { passive: !0 }), r.eElement.removeEventListener("touchmove", o, { passive: !0 }), r.eElement.removeEventListener("touchend", s, { passive: !1 });
      });
    }
    return n.prototype.getActiveTouch = function(t) {
      for (var e = 0; e < t.length; e++) {
        var r = t[e].identifier === this.touchStart.identifier;
        if (r)
          return t[e];
      }
      return null;
    }, n.prototype.addEventListener = function(t, e) {
      this.eventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.eventService.removeEventListener(t, e);
    }, n.prototype.onTouchStart = function(t) {
      var e = this;
      if (!this.touching) {
        this.touchStart = t.touches[0], this.touching = !0, this.moved = !1;
        var r = this.touchStart;
        window.setTimeout(function() {
          var i = e.touchStart === r;
          if (e.touching && i && !e.moved) {
            e.moved = !0;
            var o = {
              type: n.EVENT_LONG_TAP,
              touchStart: e.touchStart,
              touchEvent: t
            };
            e.eventService.dispatchEvent(o);
          }
        }, 500);
      }
    }, n.prototype.onTouchMove = function(t) {
      if (this.touching) {
        var e = this.getActiveTouch(t.touches);
        if (e) {
          var r = !vs(e, this.touchStart, 4);
          r && (this.moved = !0);
        }
      }
    }, n.prototype.onTouchEnd = function(t) {
      if (this.touching) {
        if (!this.moved) {
          var e = {
            type: n.EVENT_TAP,
            touchStart: this.touchStart
          };
          this.eventService.dispatchEvent(e), this.checkForDoubleTap();
        }
        this.preventMouseClick && t.cancelable && t.preventDefault(), this.touching = !1;
      }
    }, n.prototype.checkForDoubleTap = function() {
      var t = (/* @__PURE__ */ new Date()).getTime();
      if (this.lastTapTime && this.lastTapTime > 0) {
        var e = t - this.lastTapTime;
        if (e > n.DOUBLE_TAP_MILLIS) {
          var r = {
            type: n.EVENT_DOUBLE_TAP,
            touchStart: this.touchStart
          };
          this.eventService.dispatchEvent(r), this.lastTapTime = null;
        } else
          this.lastTapTime = t;
      } else
        this.lastTapTime = t;
    }, n.prototype.destroy = function() {
      this.destroyFuncs.forEach(function(t) {
        return t();
      });
    }, n.EVENT_TAP = "tap", n.EVENT_DOUBLE_TAP = "doubleTap", n.EVENT_LONG_TAP = "longTap", n.DOUBLE_TAP_MILLIS = 500, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var rh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Pt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ss = (
  /** @class */
  function(n) {
    rh(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return e || r.setTemplate(t.TEMPLATE), r;
    }
    return t.prototype.attachCustomElements = function(e, r, i, o, s) {
      this.eSortOrder = e, this.eSortAsc = r, this.eSortDesc = i, this.eSortMixed = o, this.eSortNone = s;
    }, t.prototype.setupSort = function(e, r) {
      var i = this;
      r === void 0 && (r = !1), this.column = e, this.suppressOrder = r, this.setupMultiSortIndicator();
      var o = !!this.column.getColDef().sortable;
      o && (this.addInIcon("sortAscending", this.eSortAsc, e), this.addInIcon("sortDescending", this.eSortDesc, e), this.addInIcon("sortUnSort", this.eSortNone, e), this.addManagedListener(this.eventService, g.EVENT_SORT_CHANGED, function() {
        return i.onSortChanged();
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, function() {
        return i.onSortChanged();
      }), this.onSortChanged());
    }, t.prototype.addInIcon = function(e, r, i) {
      if (r != null) {
        var o = oe(e, this.gridOptionsService, i);
        o && r.appendChild(o);
      }
    }, t.prototype.onSortChanged = function() {
      this.updateIcons(), this.suppressOrder || this.updateSortOrder();
    }, t.prototype.updateIcons = function() {
      var e = this.sortController.getDisplaySortForColumn(this.column);
      if (this.eSortAsc) {
        var r = e === "asc";
        k(this.eSortAsc, r, { skipAriaHidden: !0 });
      }
      if (this.eSortDesc) {
        var i = e === "desc";
        k(this.eSortDesc, i, { skipAriaHidden: !0 });
      }
      if (this.eSortNone) {
        var o = !this.column.getColDef().unSortIcon && !this.gridOptionsService.is("unSortIcon"), s = e == null;
        k(this.eSortNone, !o && s, { skipAriaHidden: !0 });
      }
    }, t.prototype.setupMultiSortIndicator = function() {
      var e = this;
      this.addInIcon("sortUnSort", this.eSortMixed, this.column);
      var r = this.column.getColDef().showRowGroup, i = this.gridOptionsService.isColumnsSortingCoupledToGroup();
      i && r && (this.addManagedListener(this.eventService, g.EVENT_SORT_CHANGED, function() {
        return e.updateMultiSortIndicator();
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, function() {
        return e.updateMultiSortIndicator();
      }), this.updateMultiSortIndicator());
    }, t.prototype.updateMultiSortIndicator = function() {
      if (this.eSortMixed) {
        var e = this.sortController.getDisplaySortForColumn(this.column) === "mixed";
        k(this.eSortMixed, e, { skipAriaHidden: !0 });
      }
    }, t.prototype.updateSortOrder = function() {
      var e = this, r;
      if (this.eSortOrder) {
        var i = this.sortController.getColumnsWithSortingOrdered(), o = (r = this.sortController.getDisplaySortIndexForColumn(this.column)) !== null && r !== void 0 ? r : -1, s = i.some(function(l) {
          var u;
          return (u = e.sortController.getDisplaySortIndexForColumn(l)) !== null && u !== void 0 ? u : -1 >= 1;
        }), a = o >= 0 && s;
        k(this.eSortOrder, a, { skipAriaHidden: !0 }), o >= 0 ? this.eSortOrder.innerHTML = (o + 1).toString() : Fe(this.eSortOrder);
      }
    }, t.TEMPLATE = `<span class="ag-sort-indicator-container">
            <span ref="eSortOrder" class="ag-sort-indicator-icon ag-sort-order ag-hidden" aria-hidden="true"></span>
            <span ref="eSortAsc" class="ag-sort-indicator-icon ag-sort-ascending-icon ag-hidden" aria-hidden="true"></span>
            <span ref="eSortDesc" class="ag-sort-indicator-icon ag-sort-descending-icon ag-hidden" aria-hidden="true"></span>
            <span ref="eSortMixed" class="ag-sort-indicator-icon ag-sort-mixed-icon ag-hidden" aria-hidden="true"></span>
            <span ref="eSortNone" class="ag-sort-indicator-icon ag-sort-none-icon ag-hidden" aria-hidden="true"></span>
        </span>`, Pt([
      P("eSortOrder")
    ], t.prototype, "eSortOrder", void 0), Pt([
      P("eSortAsc")
    ], t.prototype, "eSortAsc", void 0), Pt([
      P("eSortDesc")
    ], t.prototype, "eSortDesc", void 0), Pt([
      P("eSortMixed")
    ], t.prototype, "eSortMixed", void 0), Pt([
      P("eSortNone")
    ], t.prototype, "eSortNone", void 0), Pt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Pt([
      h("sortController")
    ], t.prototype, "sortController", void 0), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ih = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), be = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, oh = (
  /** @class */
  function(n) {
    ih(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.lastMovingChanged = 0, e;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.refresh = function(e) {
      return this.params = e, this.workOutTemplate() != this.currentTemplate || this.workOutShowMenu() != this.currentShowMenu || this.workOutSort() != this.currentSort ? !1 : (this.setDisplayName(e), !0);
    }, t.prototype.workOutTemplate = function() {
      var e = il(this.params.template, t.TEMPLATE);
      return e = e && e.trim ? e.trim() : e, e;
    }, t.prototype.init = function(e) {
      this.params = e, this.currentTemplate = this.workOutTemplate(), this.setTemplate(this.currentTemplate), this.setupTap(), this.setupIcons(e.column), this.setMenu(), this.setupSort(), this.setupFilterIcon(), this.setDisplayName(e);
    }, t.prototype.setDisplayName = function(e) {
      if (this.currentDisplayName != e.displayName) {
        this.currentDisplayName = e.displayName;
        var r = it(this.currentDisplayName);
        this.eText && (this.eText.innerHTML = r);
      }
    }, t.prototype.setupIcons = function(e) {
      this.addInIcon("menu", this.eMenu, e), this.addInIcon("filter", this.eFilter, e);
    }, t.prototype.addInIcon = function(e, r, i) {
      if (r != null) {
        var o = oe(e, this.gridOptionsService, i);
        o && r.appendChild(o);
      }
    }, t.prototype.setupTap = function() {
      var e = this, r = this.gridOptionsService;
      if (!r.is("suppressTouch")) {
        var i = new Ae(this.getGui(), !0), o = r.is("suppressMenuHide"), s = o && O(this.eMenu), a = s ? new Ae(this.eMenu, !0) : i;
        if (this.params.enableMenu) {
          var l = s ? "EVENT_TAP" : "EVENT_LONG_TAP", u = function(p) {
            r.api.showColumnMenuAfterMouseClick(e.params.column, p.touchStart);
          };
          this.addManagedListener(a, Ae[l], u);
        }
        if (this.params.enableSorting) {
          var c = function(p) {
            var d = p.touchStart.target;
            o && e.eMenu.contains(d) || e.sortController.progressSort(e.params.column, !1, "uiColumnSorted");
          };
          this.addManagedListener(i, Ae.EVENT_TAP, c);
        }
        this.addDestroyFunc(function() {
          return i.destroy();
        }), s && this.addDestroyFunc(function() {
          return a.destroy();
        });
      }
    }, t.prototype.workOutShowMenu = function() {
      var e = !this.gridOptionsService.is("suppressMenuHide"), r = Ot() && e, i = this.params.enableMenu && !r;
      return i;
    }, t.prototype.setMenu = function() {
      var e = this;
      if (this.eMenu) {
        if (this.currentShowMenu = this.workOutShowMenu(), !this.currentShowMenu) {
          lt(this.eMenu);
          return;
        }
        var r = this.gridOptionsService.is("suppressMenuHide");
        this.addManagedListener(this.eMenu, "click", function() {
          return e.showMenu(e.eMenu);
        }), this.eMenu.classList.toggle("ag-header-menu-always-show", r);
      }
    }, t.prototype.showMenu = function(e) {
      e || (e = this.eMenu), this.menuFactory.showMenuAfterButtonClick(this.params.column, e, "columnMenu");
    }, t.prototype.workOutSort = function() {
      return this.params.enableSorting;
    }, t.prototype.setupSort = function() {
      var e = this;
      if (this.currentSort = this.params.enableSorting, this.eSortIndicator || (this.eSortIndicator = this.context.createBean(new Ss(!0)), this.eSortIndicator.attachCustomElements(this.eSortOrder, this.eSortAsc, this.eSortDesc, this.eSortMixed, this.eSortNone)), this.eSortIndicator.setupSort(this.params.column), !!this.currentSort) {
        var r = this.gridOptionsService.get("multiSortKey") === "ctrl";
        this.addManagedListener(this.params.column, Z.EVENT_MOVING_CHANGED, function() {
          e.lastMovingChanged = (/* @__PURE__ */ new Date()).getTime();
        }), this.eLabel && this.addManagedListener(this.eLabel, "click", function(o) {
          var s = e.params.column.isMoving(), a = (/* @__PURE__ */ new Date()).getTime(), l = a - e.lastMovingChanged < 50, u = s || l;
          if (!u) {
            var c = r ? o.ctrlKey || o.metaKey : o.shiftKey;
            e.params.progressSort(c);
          }
        });
        var i = function() {
          if (e.addOrRemoveCssClass("ag-header-cell-sorted-asc", e.params.column.isSortAscending()), e.addOrRemoveCssClass("ag-header-cell-sorted-desc", e.params.column.isSortDescending()), e.addOrRemoveCssClass("ag-header-cell-sorted-none", e.params.column.isSortNone()), e.params.column.getColDef().showRowGroup) {
            var o = e.columnModel.getSourceColumnsForGroupColumn(e.params.column), s = o == null ? void 0 : o.every(function(l) {
              return e.params.column.getSort() == l.getSort();
            }), a = !s;
            e.addOrRemoveCssClass("ag-header-cell-sorted-mixed", a);
          }
        };
        this.addManagedListener(this.eventService, g.EVENT_SORT_CHANGED, i), this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, i);
      }
    }, t.prototype.setupFilterIcon = function() {
      this.eFilter && (this.addManagedListener(this.params.column, Z.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.onFilterChanged());
    }, t.prototype.onFilterChanged = function() {
      var e = this.params.column.isFilterActive();
      k(this.eFilter, e, { skipAriaHidden: !0 });
    }, t.TEMPLATE = `<div class="ag-cell-label-container" role="presentation">
            <span ref="eMenu" class="ag-header-icon ag-header-cell-menu-button" aria-hidden="true"></span>
            <div ref="eLabel" class="ag-header-cell-label" role="presentation">
                <span ref="eText" class="ag-header-cell-text"></span>
                <span ref="eFilter" class="ag-header-icon ag-header-label-icon ag-filter-icon" aria-hidden="true"></span>
                <ag-sort-indicator ref="eSortIndicator"></ag-sort-indicator>
            </div>
        </div>`, be([
      h("sortController")
    ], t.prototype, "sortController", void 0), be([
      h("menuFactory")
    ], t.prototype, "menuFactory", void 0), be([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), be([
      P("eFilter")
    ], t.prototype, "eFilter", void 0), be([
      P("eSortIndicator")
    ], t.prototype, "eSortIndicator", void 0), be([
      P("eMenu")
    ], t.prototype, "eMenu", void 0), be([
      P("eLabel")
    ], t.prototype, "eLabel", void 0), be([
      P("eText")
    ], t.prototype, "eText", void 0), be([
      P("eSortOrder")
    ], t.prototype, "eSortOrder", void 0), be([
      P("eSortAsc")
    ], t.prototype, "eSortAsc", void 0), be([
      P("eSortDesc")
    ], t.prototype, "eSortDesc", void 0), be([
      P("eSortMixed")
    ], t.prototype, "eSortMixed", void 0), be([
      P("eSortNone")
    ], t.prototype, "eSortNone", void 0), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var nh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Vo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, sh = (
  /** @class */
  function(n) {
    nh(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.init = function(e) {
      this.params = e, this.checkWarnings(), this.setupLabel(), this.addGroupExpandIcon(), this.setupExpandIcons();
    }, t.prototype.checkWarnings = function() {
      var e = this.params;
      if (e.template) {
        var r = "AG Grid: A template was provided for Header Group Comp - templates are only supported for Header Comps (not groups)";
        K(function() {
          return console.warn(r);
        }, "HeaderGroupComp.templateNotSupported");
      }
    }, t.prototype.setupExpandIcons = function() {
      var e = this;
      this.addInIcon("columnGroupOpened", "agOpened"), this.addInIcon("columnGroupClosed", "agClosed");
      var r = function(s) {
        if (!et(s)) {
          var a = !e.params.columnGroup.isExpanded();
          e.columnModel.setColumnGroupOpened(e.params.columnGroup.getProvidedColumnGroup(), a, "uiColumnExpanded");
        }
      };
      this.addTouchAndClickListeners(this.eCloseIcon, r), this.addTouchAndClickListeners(this.eOpenIcon, r);
      var i = function(s) {
        ir(s);
      };
      this.addManagedListener(this.eCloseIcon, "dblclick", i), this.addManagedListener(this.eOpenIcon, "dblclick", i), this.addManagedListener(this.getGui(), "dblclick", r), this.updateIconVisibility();
      var o = this.params.columnGroup.getProvidedColumnGroup();
      this.addManagedListener(o, ie.EVENT_EXPANDED_CHANGED, this.updateIconVisibility.bind(this)), this.addManagedListener(o, ie.EVENT_EXPANDABLE_CHANGED, this.updateIconVisibility.bind(this));
    }, t.prototype.addTouchAndClickListeners = function(e, r) {
      var i = new Ae(e, !0);
      this.addManagedListener(i, Ae.EVENT_TAP, r), this.addDestroyFunc(function() {
        return i.destroy();
      }), this.addManagedListener(e, "click", r);
    }, t.prototype.updateIconVisibility = function() {
      var e = this.params.columnGroup;
      if (e.isExpandable()) {
        var r = this.params.columnGroup.isExpanded();
        k(this.eOpenIcon, r), k(this.eCloseIcon, !r);
      } else
        k(this.eOpenIcon, !1), k(this.eCloseIcon, !1);
    }, t.prototype.addInIcon = function(e, r) {
      var i = oe(e, this.gridOptionsService, null);
      i && this.getRefElement(r).appendChild(i);
    }, t.prototype.addGroupExpandIcon = function() {
      if (!this.params.columnGroup.isExpandable()) {
        k(this.eOpenIcon, !1), k(this.eCloseIcon, !1);
        return;
      }
    }, t.prototype.setupLabel = function() {
      var e, r = this.params, i = r.displayName, o = r.columnGroup;
      if (O(i)) {
        var s = it(i);
        this.getRefElement("agLabel").innerHTML = s;
      }
      this.addOrRemoveCssClass("ag-sticky-label", !!(!((e = o.getColGroupDef()) === null || e === void 0) && e.stickyLabel));
    }, t.TEMPLATE = `<div class="ag-header-group-cell-label" ref="agContainer" role="presentation">
            <span ref="agLabel" class="ag-header-group-text" role="presentation"></span>
            <span ref="agOpened" class="ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded"></span>
            <span ref="agClosed" class="ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed"></span>
        </div>`, Vo([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Vo([
      P("agOpened")
    ], t.prototype, "eOpenIcon", void 0), Vo([
      P("agClosed")
    ], t.prototype, "eCloseIcon", void 0), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ah = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Qr = (
  /** @class */
  function(n) {
    ah(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.isPopup = function() {
      return !0;
    }, t.prototype.setParentComponent = function(e) {
      e.addCssClass("ag-has-popup"), n.prototype.setParentComponent.call(this, e);
    }, t.prototype.destroy = function() {
      var e = this.parentComponent, r = e && e.isAlive();
      r && e.getGui().classList.remove("ag-has-popup"), n.prototype.destroy.call(this);
    }, t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var lh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), uh = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, ch = (
  /** @class */
  function(n) {
    lh(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.init = function(e) {
      this.params = e, this.focusAfterAttached = e.cellStartedEdit, this.eTextArea.setMaxLength(e.maxLength || 200).setCols(e.cols || 60).setRows(e.rows || 10), O(e.value, !0) && this.eTextArea.setValue(e.value.toString(), !0), this.addGuiEventListener("keydown", this.onKeyDown.bind(this));
    }, t.prototype.onKeyDown = function(e) {
      var r = e.key;
      (r === _.LEFT || r === _.UP || r === _.RIGHT || r === _.DOWN || e.shiftKey && r === _.ENTER) && e.stopPropagation();
    }, t.prototype.afterGuiAttached = function() {
      var e = this.localeService.getLocaleTextFunc();
      this.eTextArea.setInputAriaLabel(e("ariaInputEditor", "Input Editor")), this.focusAfterAttached && this.eTextArea.getFocusableElement().focus();
    }, t.prototype.getValue = function() {
      return this.params.parseValue(this.eTextArea.getValue());
    }, t.TEMPLATE = `<div class="ag-large-text" tabindex="0">
            <ag-input-text-area ref="eTextArea" class="ag-large-text-input"></ag-input-text-area>
        </div>`, uh([
      P("eTextArea")
    ], t.prototype, "eTextArea", void 0), t;
  }(Qr)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ph = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ks = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, dh = (
  /** @class */
  function(n) {
    ph(t, n);
    function t() {
      var e = n.call(this, '<div class="ag-cell-edit-wrapper"><ag-select class="ag-cell-editor" ref="eSelect"></ag-select></div>') || this;
      return e.startedByEnter = !1, e;
    }
    return t.prototype.init = function(e) {
      var r = this;
      if (this.focusAfterAttached = e.cellStartedEdit, x(e.values)) {
        console.warn("AG Grid: no values found for select cellEditor");
        return;
      }
      this.startedByEnter = e.eventKey != null ? e.eventKey === _.ENTER : !1;
      var i = !1;
      e.values.forEach(function(o) {
        var s = { value: o }, a = r.valueFormatterService.formatValue(e.column, null, o), l = a != null;
        s.text = l ? a : o, r.eSelect.addOption(s), i = i || e.value === o;
      }), i ? this.eSelect.setValue(e.value, !0) : e.values.length && this.eSelect.setValue(e.values[0], !0), this.gridOptionsService.get("editType") !== "fullRow" && this.addManagedListener(this.eSelect, Ui.EVENT_ITEM_SELECTED, function() {
        return e.stopEditing();
      });
    }, t.prototype.afterGuiAttached = function() {
      this.focusAfterAttached && this.eSelect.getFocusableElement().focus(), this.startedByEnter && this.eSelect.showPicker();
    }, t.prototype.focusIn = function() {
      this.eSelect.getFocusableElement().focus();
    }, t.prototype.getValue = function() {
      return this.eSelect.getValue();
    }, t.prototype.isPopup = function() {
      return !1;
    }, Ks([
      h("valueFormatterService")
    ], t.prototype, "valueFormatterService", void 0), Ks([
      P("eSelect")
    ], t.prototype, "eSelect", void 0), t;
  }(Qr)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var hh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), fh = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, $s = (
  /** @class */
  function(n) {
    hh(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.init = function(e) {
      this.params = e;
      var r = this.eInput, i;
      e.cellStartedEdit ? (this.focusAfterAttached = !0, e.eventKey === _.BACKSPACE || e.eventKey === _.DELETE ? i = "" : e.charPress ? i = e.charPress : (i = this.getStartValue(e), e.eventKey !== _.F2 && (this.highlightAllOnFocus = !0))) : (this.focusAfterAttached = !1, i = this.getStartValue(e)), i != null && r.setValue(i, !0), e.maxLength != null && r.setMaxLength(e.maxLength), this.addManagedListener(r.getGui(), "keydown", function(o) {
        var s = o.key;
        (s === _.PAGE_UP || s === _.PAGE_DOWN) && o.preventDefault();
      });
    }, t.prototype.afterGuiAttached = function() {
      var e = this.localeService.getLocaleTextFunc(), r = this.eInput;
      if (r.setInputAriaLabel(e("ariaInputEditor", "Input Editor")), !!this.focusAfterAttached) {
        ot() || r.getFocusableElement().focus();
        var i = r.getInputElement();
        if (this.highlightAllOnFocus)
          i.select();
        else {
          var o = r.getValue(), s = O(o) && o.length || 0;
          s && i.setSelectionRange(s, s);
        }
      }
    }, t.prototype.focusIn = function() {
      var e = this.eInput, r = e.getFocusableElement(), i = e.getInputElement();
      r.focus(), i.select();
    }, t.prototype.getValue = function() {
      var e = this.eInput;
      return this.params.parseValue(e.getValue());
    }, t.prototype.getStartValue = function(e) {
      var r = e.useFormatter || e.column.getColDef().refData;
      return r ? e.formatValue(e.value) : e.value;
    }, t.prototype.isPopup = function() {
      return !1;
    }, t.TEMPLATE = `<div class="ag-cell-edit-wrapper">
            <ag-input-text-field class="ag-cell-editor" ref="eInput"></ag-input-text-field>
        </div>`, fh([
      P("eInput")
    ], t.prototype, "eInput", void 0), t;
  }(Qr)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var vh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), gh = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, yh = "↑", Ch = "↓", mh = (
  /** @class */
  function(n) {
    vh(t, n);
    function t() {
      var e = n.call(this, t.TEMPLATE) || this;
      return e.refreshCount = 0, e;
    }
    return t.prototype.init = function(e) {
      this.eValue = this.queryForHtmlElement(".ag-value-change-value"), this.eDelta = this.queryForHtmlElement(".ag-value-change-delta"), this.refresh(e);
    }, t.prototype.showDelta = function(e, r) {
      var i = Math.abs(r), o = e.formatValue(i), s = O(o) ? o : i, a = r >= 0;
      a ? this.eDelta.innerHTML = yh + s : this.eDelta.innerHTML = Ch + s, this.eDelta.classList.toggle("ag-value-change-delta-up", a), this.eDelta.classList.toggle("ag-value-change-delta-down", !a);
    }, t.prototype.setTimerToRemoveDelta = function() {
      var e = this;
      this.refreshCount++;
      var r = this.refreshCount;
      window.setTimeout(function() {
        r === e.refreshCount && e.hideDeltaValue();
      }, 2e3);
    }, t.prototype.hideDeltaValue = function() {
      this.eValue.classList.remove("ag-value-change-value-highlight"), Fe(this.eDelta);
    }, t.prototype.refresh = function(e) {
      var r = e.value;
      if (r === this.lastValue || (O(e.valueFormatted) ? this.eValue.innerHTML = e.valueFormatted : O(e.value) ? this.eValue.innerHTML = r : Fe(this.eValue), this.filterManager.isSuppressFlashingCellsBecauseFiltering()))
        return !1;
      if (typeof r == "number" && typeof this.lastValue == "number") {
        var i = r - this.lastValue;
        this.showDelta(e, i);
      }
      return this.lastValue && this.eValue.classList.add("ag-value-change-value-highlight"), this.setTimerToRemoveDelta(), this.lastValue = r, !0;
    }, t.TEMPLATE = '<span><span class="ag-value-change-delta"></span><span class="ag-value-change-value"></span></span>', gh([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var wh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Sh = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Eh = (
  /** @class */
  function(n) {
    wh(t, n);
    function t() {
      var e = n.call(this, t.TEMPLATE) || this;
      return e.refreshCount = 0, e.eCurrent = e.queryForHtmlElement(".ag-value-slide-current"), e;
    }
    return t.prototype.init = function(e) {
      this.refresh(e);
    }, t.prototype.addSlideAnimation = function() {
      var e = this;
      this.refreshCount++;
      var r = this.refreshCount;
      this.ePrevious && this.getGui().removeChild(this.ePrevious), this.ePrevious = he('<span class="ag-value-slide-previous ag-value-slide-out"></span>'), this.ePrevious.innerHTML = this.eCurrent.innerHTML, this.getGui().insertBefore(this.ePrevious, this.eCurrent), window.setTimeout(function() {
        r === e.refreshCount && e.ePrevious.classList.add("ag-value-slide-out-end");
      }, 50), window.setTimeout(function() {
        r === e.refreshCount && (e.getGui().removeChild(e.ePrevious), e.ePrevious = null);
      }, 3e3);
    }, t.prototype.refresh = function(e) {
      var r = e.value;
      return x(r) && (r = ""), r === this.lastValue || this.filterManager.isSuppressFlashingCellsBecauseFiltering() ? !1 : (this.addSlideAnimation(), this.lastValue = r, O(e.valueFormatted) ? this.eCurrent.innerHTML = e.valueFormatted : O(e.value) ? this.eCurrent.innerHTML = r : Fe(this.eCurrent), !0);
    }, t.TEMPLATE = `<span>
            <span class="ag-value-slide-current"></span>
        </span>`, Sh([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Yt = function() {
  return Yt = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Yt.apply(this, arguments);
}, j = (
  /** @class */
  function() {
    function n(t) {
      this.rowIndex = null, this.key = null, this.childrenMapped = {}, this.displayed = !1, this.rowTop = null, this.oldRowTop = null, this.selectable = !0, this.__objectId = n.OBJECT_ID_SEQUENCE++, this.__autoHeights = {}, this.alreadyRendered = !1, this.highlighted = null, this.hovered = !1, this.selected = !1, this.beans = t;
    }
    return n.prototype.setData = function(t) {
      this.setDataCommon(t, !1);
    }, n.prototype.updateData = function(t) {
      this.setDataCommon(t, !0);
    }, n.prototype.setDataCommon = function(t, e) {
      var r = this.data;
      this.data = t, this.beans.valueCache.onDataChanged(), this.updateDataOnDetailNode(), this.checkRowSelectable(), this.resetQuickFilterAggregateText();
      var i = this.createDataChangedEvent(t, r, e);
      this.dispatchLocalEvent(i);
    }, n.prototype.updateDataOnDetailNode = function() {
      this.detailNode && (this.detailNode.data = this.data);
    }, n.prototype.createDataChangedEvent = function(t, e, r) {
      return {
        type: n.EVENT_DATA_CHANGED,
        node: this,
        oldData: e,
        newData: t,
        update: r
      };
    }, n.prototype.createLocalRowEvent = function(t) {
      return {
        type: t,
        node: this
      };
    }, n.prototype.getRowIndexString = function() {
      return this.rowPinned === "top" ? "t-" + this.rowIndex : this.rowPinned === "bottom" ? "b-" + this.rowIndex : this.rowIndex.toString();
    }, n.prototype.createDaemonNode = function() {
      var t = new n(this.beans);
      return t.id = this.id, t.data = this.data, t.__daemon = !0, t.selected = this.selected, t.level = this.level, t;
    }, n.prototype.setDataAndId = function(t, e) {
      var r = O(this.id) ? this.createDaemonNode() : null, i = this.data;
      this.data = t, this.updateDataOnDetailNode(), this.setId(e), this.beans.selectionService.syncInRowNode(this, r), this.checkRowSelectable();
      var o = this.createDataChangedEvent(t, i, !1);
      this.dispatchLocalEvent(o);
    }, n.prototype.checkRowSelectable = function() {
      var t = this.beans.gridOptionsService.get("isRowSelectable");
      this.setRowSelectable(t ? t(this) : !0);
    }, n.prototype.setRowSelectable = function(t) {
      if (this.selectable !== t) {
        this.selectable = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_SELECTABLE_CHANGED));
        var e = this.beans.gridOptionsService.is("groupSelectsChildren");
        if (e) {
          var r = this.calculateSelectedFromChildren();
          this.setSelectedParams({ newValue: r ?? !1, source: "selectableChanged" });
        }
      }
    }, n.prototype.setId = function(t) {
      var e = this.beans.gridOptionsService.getRowIdFunc();
      if (e)
        if (this.data) {
          var r = this.getGroupKeys(!0);
          this.id = e({
            data: this.data,
            parentKeys: r.length > 0 ? r : void 0,
            level: this.level
          }), this.id !== null && typeof this.id == "string" && this.id.startsWith(n.ID_PREFIX_ROW_GROUP) && console.error("AG Grid: Row IDs cannot start with " + n.ID_PREFIX_ROW_GROUP + ", this is a reserved prefix for AG Grid's row grouping feature."), this.id !== null && typeof this.id != "string" && (this.id = "" + this.id);
        } else
          this.id = void 0;
      else
        this.id = t;
    }, n.prototype.getGroupKeys = function(t) {
      t === void 0 && (t = !1);
      var e = [], r = this;
      for (t && (r = r.parent); r && r.level >= 0; )
        e.push(r.key), r = r.parent;
      return e.reverse(), e;
    }, n.prototype.isPixelInRange = function(t) {
      return !O(this.rowTop) || !O(this.rowHeight) ? !1 : t >= this.rowTop && t < this.rowTop + this.rowHeight;
    }, n.prototype.setFirstChild = function(t) {
      this.firstChild !== t && (this.firstChild = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_FIRST_CHILD_CHANGED)));
    }, n.prototype.setLastChild = function(t) {
      this.lastChild !== t && (this.lastChild = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_LAST_CHILD_CHANGED)));
    }, n.prototype.setChildIndex = function(t) {
      this.childIndex !== t && (this.childIndex = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_CHILD_INDEX_CHANGED)));
    }, n.prototype.setRowTop = function(t) {
      this.oldRowTop = this.rowTop, this.rowTop !== t && (this.rowTop = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_TOP_CHANGED)), this.setDisplayed(t !== null));
    }, n.prototype.clearRowTopAndRowIndex = function() {
      this.oldRowTop = null, this.setRowTop(null), this.setRowIndex(null);
    }, n.prototype.setDisplayed = function(t) {
      this.displayed !== t && (this.displayed = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_DISPLAYED_CHANGED)));
    }, n.prototype.setDragging = function(t) {
      this.dragging !== t && (this.dragging = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_DRAGGING_CHANGED)));
    }, n.prototype.setHighlighted = function(t) {
      t !== this.highlighted && (this.highlighted = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HIGHLIGHT_CHANGED)));
    }, n.prototype.setHovered = function(t) {
      this.hovered !== t && (this.hovered = t);
    }, n.prototype.isHovered = function() {
      return this.hovered;
    }, n.prototype.setAllChildrenCount = function(t) {
      this.allChildrenCount !== t && (this.allChildrenCount = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_ALL_CHILDREN_COUNT_CHANGED)));
    }, n.prototype.setMaster = function(t) {
      this.master !== t && (this.master && !t && (this.expanded = !1), this.master = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_MASTER_CHANGED)));
    }, n.prototype.setGroup = function(t) {
      this.group !== t && (this.group && !t && (this.expanded = !1), this.group = t, this.updateHasChildren(), this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_GROUP_CHANGED)));
    }, n.prototype.setRowHeight = function(t, e) {
      e === void 0 && (e = !1), this.rowHeight = t, this.rowHeightEstimated = e, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HEIGHT_CHANGED));
    }, n.prototype.setRowAutoHeight = function(t, e) {
      this.__autoHeights || (this.__autoHeights = {}), this.__autoHeights[e.getId()] = t, t != null && (this.checkAutoHeightsDebounced == null && (this.checkAutoHeightsDebounced = Ze(this.checkAutoHeights.bind(this), 1)), this.checkAutoHeightsDebounced());
    }, n.prototype.checkAutoHeights = function() {
      var t = this, e = !1, r = !0, i = 0, o = this.__autoHeights;
      if (o != null) {
        var s = this.beans.columnModel.getAllDisplayedAutoHeightCols();
        if (s.forEach(function(l) {
          var u = o[l.getId()];
          if (u == null)
            if (t.beans.columnModel.isColSpanActive()) {
              var c = [];
              switch (l.getPinned()) {
                case "left":
                  c = t.beans.columnModel.getDisplayedLeftColumnsForRow(t);
                  break;
                case "right":
                  c = t.beans.columnModel.getDisplayedRightColumnsForRow(t);
                  break;
                case null:
                  c = t.beans.columnModel.getViewportCenterColumnsForRow(t);
                  break;
              }
              if (c.includes(l)) {
                e = !0;
                return;
              }
              u = -1;
            } else {
              e = !0;
              return;
            }
          else
            r = !1;
          u > i && (i = u);
        }), !e && ((r || i < 10) && (i = this.beans.gridOptionsService.getRowHeightForNode(this).height), i != this.rowHeight)) {
          this.setRowHeight(i);
          var a = this.beans.rowModel;
          a.onRowHeightChangedDebounced && a.onRowHeightChangedDebounced();
        }
      }
    }, n.prototype.setRowIndex = function(t) {
      this.rowIndex !== t && (this.rowIndex = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_ROW_INDEX_CHANGED)));
    }, n.prototype.setUiLevel = function(t) {
      this.uiLevel !== t && (this.uiLevel = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_UI_LEVEL_CHANGED)));
    }, n.prototype.setExpanded = function(t, e) {
      if (this.expanded !== t) {
        this.expanded = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_EXPANDED_CHANGED));
        var r = Object.assign({}, this.createGlobalRowEvent(g.EVENT_ROW_GROUP_OPENED), {
          expanded: t,
          event: e || null
        });
        this.beans.rowNodeEventThrottle.dispatchExpanded(r), this.beans.gridOptionsService.is("groupIncludeFooter") && this.beans.rowRenderer.refreshCells({ rowNodes: [this] });
      }
    }, n.prototype.createGlobalRowEvent = function(t) {
      return {
        type: t,
        node: this,
        data: this.data,
        rowIndex: this.rowIndex,
        rowPinned: this.rowPinned,
        context: this.beans.gridOptionsService.context,
        api: this.beans.gridOptionsService.api,
        columnApi: this.beans.gridOptionsService.columnApi
      };
    }, n.prototype.dispatchLocalEvent = function(t) {
      this.eventService && this.eventService.dispatchEvent(t);
    }, n.prototype.setDataValue = function(t, e, r) {
      var i = this, o = function() {
        var u;
        return typeof t != "string" ? t : (u = i.beans.columnModel.getGridColumn(t)) !== null && u !== void 0 ? u : i.beans.columnModel.getPrimaryColumn(t);
      }, s = o(), a = this.getValueFromValueService(s);
      if (this.beans.gridOptionsService.is("readOnlyEdit"))
        return this.dispatchEventForSaveValueReadOnly(s, a, e, r), !1;
      var l = this.beans.valueService.setValue(this, s, e, r);
      return this.dispatchCellChangedEvent(s, e, a), this.checkRowSelectable(), l;
    }, n.prototype.getValueFromValueService = function(t) {
      var e = this.leafGroup && this.beans.columnModel.isPivotMode(), r = this.group && this.expanded && !this.footer && !e, i = this.beans.gridOptionsService.is("groupIncludeFooter"), o = this.beans.gridOptionsService.is("groupSuppressBlankHeader"), s = r && i && !o, a = this.beans.valueService.getValue(t, this, !1, s);
      return a;
    }, n.prototype.dispatchEventForSaveValueReadOnly = function(t, e, r, i) {
      var o = {
        type: g.EVENT_CELL_EDIT_REQUEST,
        event: null,
        rowIndex: this.rowIndex,
        rowPinned: this.rowPinned,
        column: t,
        colDef: t.getColDef(),
        context: this.beans.gridOptionsService.context,
        api: this.beans.gridOptionsService.api,
        columnApi: this.beans.gridOptionsService.columnApi,
        data: this.data,
        node: this,
        oldValue: e,
        newValue: r,
        value: r,
        source: i
      };
      this.beans.eventService.dispatchEvent(o);
    }, n.prototype.setGroupValue = function(t, e) {
      var r = this.beans.columnModel.getGridColumn(t);
      x(this.groupData) && (this.groupData = {});
      var i = r.getColId(), o = this.groupData[i];
      o !== e && (this.groupData[i] = e, this.dispatchCellChangedEvent(r, e, o));
    }, n.prototype.setAggData = function(t) {
      var e = this, r = qa([this.aggData, t]), i = this.aggData;
      this.aggData = t, this.eventService && r.forEach(function(o) {
        var s = e.beans.columnModel.getGridColumn(o), a = e.aggData ? e.aggData[o] : void 0, l = i ? i[o] : void 0;
        e.dispatchCellChangedEvent(s, a, l);
      });
    }, n.prototype.updateHasChildren = function() {
      var t = this.group && !this.footer || this.childrenAfterGroup && this.childrenAfterGroup.length > 0, e = this.beans.gridOptionsService.isRowModelType("serverSide");
      if (e) {
        var r = this.beans.gridOptionsService.isTreeData(), i = this.beans.gridOptionsService.get("isServerSideGroup");
        t = !this.stub && !this.footer && (r ? !!i && i(this.data) : !!this.group);
      }
      t !== this.__hasChildren && (this.__hasChildren = !!t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HAS_CHILDREN_CHANGED)));
    }, n.prototype.hasChildren = function() {
      return this.__hasChildren == null && this.updateHasChildren(), this.__hasChildren;
    }, n.prototype.isEmptyRowGroupNode = function() {
      return this.group && De(this.childrenAfterGroup);
    }, n.prototype.dispatchCellChangedEvent = function(t, e, r) {
      var i = {
        type: n.EVENT_CELL_CHANGED,
        node: this,
        column: t,
        newValue: e,
        oldValue: r
      };
      this.dispatchLocalEvent(i);
    }, n.prototype.resetQuickFilterAggregateText = function() {
      this.quickFilterAggregateText = null;
    }, n.prototype.isExpandable = function() {
      return !!(this.hasChildren() && !this.footer || this.master);
    }, n.prototype.isSelected = function() {
      return this.footer ? this.sibling.isSelected() : this.selected;
    }, n.prototype.depthFirstSearch = function(t) {
      this.childrenAfterGroup && this.childrenAfterGroup.forEach(function(e) {
        return e.depthFirstSearch(t);
      }), t(this);
    }, n.prototype.calculateSelectedFromChildren = function() {
      var t, e = !1, r = !1, i = !1;
      if (!(!((t = this.childrenAfterGroup) === null || t === void 0) && t.length))
        return this.selectable ? this.selected : null;
      for (var o = 0; o < this.childrenAfterGroup.length; o++) {
        var s = this.childrenAfterGroup[o], a = s.isSelected();
        if (!s.selectable) {
          var l = s.calculateSelectedFromChildren();
          if (l === null)
            continue;
          a = l;
        }
        switch (a) {
          case !0:
            e = !0;
            break;
          case !1:
            r = !0;
            break;
          default:
            i = !0;
            break;
        }
      }
      if (!(i || e && r))
        return e ? !0 : r ? !1 : this.selectable ? this.selected : null;
    }, n.prototype.setSelectedInitialValue = function(t) {
      this.selected = t;
    }, n.prototype.selectThisNode = function(t, e, r) {
      r === void 0 && (r = "api");
      var i = !this.selectable && t, o = this.selected === t;
      if (i || o)
        return !1;
      this.selected = t, this.eventService && this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_ROW_SELECTED));
      var s = Yt(Yt({}, this.createGlobalRowEvent(g.EVENT_ROW_SELECTED)), { event: e || null, source: r });
      return this.beans.eventService.dispatchEvent(s), !0;
    }, n.prototype.setSelected = function(t, e, r, i) {
      e === void 0 && (e = !1), r === void 0 && (r = !1), i === void 0 && (i = "api"), this.setSelectedParams({
        newValue: t,
        clearSelection: e,
        suppressFinishActions: r,
        rangeSelect: !1,
        source: i
      });
    }, n.prototype.setSelectedParams = function(t) {
      return this.rowPinned ? (console.warn("AG Grid: cannot select pinned rows"), 0) : this.id === void 0 ? (console.warn("AG Grid: cannot select node until id for node is known"), 0) : this.beans.selectionService.setNodeSelected(Yt(Yt({}, t), { node: this.footer ? this.sibling : this }));
    }, n.prototype.isRowPinned = function() {
      return this.rowPinned === "top" || this.rowPinned === "bottom";
    }, n.prototype.isParentOfNode = function(t) {
      for (var e = this.parent; e; ) {
        if (e === t)
          return !0;
        e = e.parent;
      }
      return !1;
    }, n.prototype.addEventListener = function(t, e) {
      this.eventService || (this.eventService = new Rt()), this.eventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.eventService && (this.eventService.removeEventListener(t, e), this.eventService.noRegisteredListenersExist() && (this.eventService = null));
    }, n.prototype.onMouseEnter = function() {
      this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_MOUSE_ENTER));
    }, n.prototype.onMouseLeave = function() {
      this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_MOUSE_LEAVE));
    }, n.prototype.getFirstChildOfFirstChild = function(t) {
      for (var e = this, r = !0, i = !1, o = null; r && !i; ) {
        var s = e.parent, a = O(s) && e.firstChild;
        a ? s.rowGroupColumn === t && (i = !0, o = s) : r = !1, e = s;
      }
      return i ? o : null;
    }, n.prototype.isFullWidthCell = function() {
      var t = this.getIsFullWidthCellFunc();
      return t ? t({ rowNode: this }) : !1;
    }, n.prototype.getIsFullWidthCellFunc = function() {
      var t = this.beans.gridOptionsService.getCallback("isFullWidthRow");
      if (t)
        return t;
      var e = this.beans.gridOptionsService.get("isFullWidthCell");
      if (e)
        return function(r) {
          return e(r.rowNode);
        };
    }, n.prototype.getRoute = function() {
      if (this.key != null) {
        for (var t = [], e = this; e.key != null; )
          t.push(e.key), e = e.parent;
        return t.reverse();
      }
    }, n.prototype.createFooter = function() {
      var t = this;
      if (!this.sibling) {
        var e = new n(this.beans);
        Object.keys(this).forEach(function(r) {
          e[r] = t[r];
        }), e.footer = !0, e.setRowTop(null), e.setRowIndex(null), e.oldRowTop = null, e.id = "rowGroupFooter_" + this.id, e.sibling = this, this.sibling = e;
      }
    }, n.ID_PREFIX_ROW_GROUP = "row-group-", n.ID_PREFIX_TOP_PINNED = "t-", n.ID_PREFIX_BOTTOM_PINNED = "b-", n.OBJECT_ID_SEQUENCE = 0, n.EVENT_ROW_SELECTED = "rowSelected", n.EVENT_DATA_CHANGED = "dataChanged", n.EVENT_CELL_CHANGED = "cellChanged", n.EVENT_ALL_CHILDREN_COUNT_CHANGED = "allChildrenCountChanged", n.EVENT_MASTER_CHANGED = "masterChanged", n.EVENT_GROUP_CHANGED = "groupChanged", n.EVENT_MOUSE_ENTER = "mouseEnter", n.EVENT_MOUSE_LEAVE = "mouseLeave", n.EVENT_HEIGHT_CHANGED = "heightChanged", n.EVENT_TOP_CHANGED = "topChanged", n.EVENT_DISPLAYED_CHANGED = "displayedChanged", n.EVENT_FIRST_CHILD_CHANGED = "firstChildChanged", n.EVENT_LAST_CHILD_CHANGED = "lastChildChanged", n.EVENT_CHILD_INDEX_CHANGED = "childIndexChanged", n.EVENT_ROW_INDEX_CHANGED = "rowIndexChanged", n.EVENT_EXPANDED_CHANGED = "expandedChanged", n.EVENT_HAS_CHILDREN_CHANGED = "hasChildrenChanged", n.EVENT_SELECTABLE_CHANGED = "selectableChanged", n.EVENT_UI_LEVEL_CHANGED = "uiLevelChanged", n.EVENT_HIGHLIGHT_CHANGED = "rowHighlightChanged", n.EVENT_DRAGGING_CHANGED = "draggingChanged", n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var _h = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ki = function() {
  return Ki = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Ki.apply(this, arguments);
}, Ys = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, vu = (
  /** @class */
  function(n) {
    _h(t, n);
    function t() {
      return n.call(
        this,
        /* html*/
        `
            <div class="ag-selection-checkbox" role="presentation">
                <ag-checkbox role="presentation" ref="eCheckbox"></ag-checkbox>
            </div>`
      ) || this;
    }
    return t.prototype.postConstruct = function() {
      this.eCheckbox.setPassive(!0);
    }, t.prototype.getCheckboxId = function() {
      return this.eCheckbox.getInputElement().id;
    }, t.prototype.onDataChanged = function() {
      this.onSelectionChanged();
    }, t.prototype.onSelectableChanged = function() {
      this.showOrHideSelect();
    }, t.prototype.onSelectionChanged = function() {
      var e = this.localeService.getLocaleTextFunc(), r = this.rowNode.isSelected(), i = r === void 0 ? e("ariaIndeterminate", "indeterminate") : r === !0 ? e("ariaChecked", "checked") : e("ariaUnchecked", "unchecked"), o = e("ariaRowToggleSelection", "Press Space to toggle row selection");
      this.eCheckbox.setValue(r, !0), this.eCheckbox.setInputAriaLabel(o + " (" + i + ")");
    }, t.prototype.onCheckedClicked = function(e) {
      var r = this.gridOptionsService.is("groupSelectsFiltered"), i = this.rowNode.setSelectedParams({ newValue: !1, rangeSelect: e.shiftKey, groupSelectsFiltered: r, event: e, source: "checkboxSelected" });
      return i;
    }, t.prototype.onUncheckedClicked = function(e) {
      var r = this.gridOptionsService.is("groupSelectsFiltered"), i = this.rowNode.setSelectedParams({ newValue: !0, rangeSelect: e.shiftKey, groupSelectsFiltered: r, event: e, source: "checkboxSelected" });
      return i;
    }, t.prototype.init = function(e) {
      var r = this;
      this.rowNode = e.rowNode, this.column = e.column, this.overrides = e.overrides, this.onSelectionChanged(), this.addManagedListener(this.eCheckbox.getInputElement(), "dblclick", function(a) {
        ir(a);
      }), this.addManagedListener(this.eCheckbox.getInputElement(), "click", function(a) {
        ir(a);
        var l = r.eCheckbox.getValue();
        l ? r.onCheckedClicked(a) : r.onUncheckedClicked(a || {});
      }), this.addManagedListener(this.rowNode, j.EVENT_ROW_SELECTED, this.onSelectionChanged.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_DATA_CHANGED, this.onDataChanged.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_SELECTABLE_CHANGED, this.onSelectableChanged.bind(this));
      var i = this.gridOptionsService.get("isRowSelectable"), o = i || typeof this.getIsVisible() == "function";
      if (o) {
        var s = this.showOrHideSelect.bind(this);
        this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, s), this.addManagedListener(this.rowNode, j.EVENT_DATA_CHANGED, s), this.addManagedListener(this.rowNode, j.EVENT_CELL_CHANGED, s), this.showOrHideSelect();
      }
      this.eCheckbox.getInputElement().setAttribute("tabindex", "-1");
    }, t.prototype.showOrHideSelect = function() {
      var e, r, i, o, s = this.rowNode.selectable, a = this.getIsVisible();
      if (s)
        if (typeof a == "function") {
          var l = (e = this.overrides) === null || e === void 0 ? void 0 : e.callbackParams, u = (r = this.column) === null || r === void 0 ? void 0 : r.createColumnFunctionCallbackParams(this.rowNode);
          s = u ? a(Ki(Ki({}, l), u)) : !1;
        } else
          s = a ?? !1;
      var c = (i = this.column) === null || i === void 0 ? void 0 : i.getColDef().showDisabledCheckboxes;
      if (c) {
        this.eCheckbox.setDisabled(!s), this.setVisible(!0), this.setDisplayed(!0);
        return;
      }
      if (!((o = this.overrides) === null || o === void 0) && o.removeHidden) {
        this.setDisplayed(s);
        return;
      }
      this.setVisible(s);
    }, t.prototype.getIsVisible = function() {
      var e, r;
      return this.overrides ? this.overrides.isVisible : (r = (e = this.column) === null || e === void 0 ? void 0 : e.getColDef()) === null || r === void 0 ? void 0 : r.checkboxSelection;
    }, Ys([
      P("eCheckbox")
    ], t.prototype, "eCheckbox", void 0), Ys([
      b
    ], t.prototype, "postConstruct", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Rh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Dt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, ni = function(n) {
  var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
  if (e)
    return e.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, we;
(function(n) {
  n[n.ToolPanel = 0] = "ToolPanel", n[n.HeaderCell = 1] = "HeaderCell", n[n.RowDrag = 2] = "RowDrag", n[n.ChartPanel = 3] = "ChartPanel";
})(we || (we = {}));
var lr;
(function(n) {
  n[n.Up = 0] = "Up", n[n.Down = 1] = "Down";
})(lr || (lr = {}));
var Xe;
(function(n) {
  n[n.Left = 0] = "Left", n[n.Right = 1] = "Right";
})(Xe || (Xe = {}));
var de = (
  /** @class */
  function(n) {
    Rh(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.dragSourceAndParamsList = [], r.dropTargets = [], r;
    }
    e = t, t.prototype.init = function() {
      this.ePinnedIcon = xe("columnMovePin", this.gridOptionsService, null), this.eHideIcon = xe("columnMoveHide", this.gridOptionsService, null), this.eMoveIcon = xe("columnMoveMove", this.gridOptionsService, null), this.eLeftIcon = xe("columnMoveLeft", this.gridOptionsService, null), this.eRightIcon = xe("columnMoveRight", this.gridOptionsService, null), this.eGroupIcon = xe("columnMoveGroup", this.gridOptionsService, null), this.eAggregateIcon = xe("columnMoveValue", this.gridOptionsService, null), this.ePivotIcon = xe("columnMovePivot", this.gridOptionsService, null), this.eDropNotAllowedIcon = xe("dropNotAllowed", this.gridOptionsService, null);
    }, t.prototype.addDragSource = function(r, i) {
      i === void 0 && (i = !1);
      var o = {
        eElement: r.eElement,
        dragStartPixels: r.dragStartPixels,
        onDragStart: this.onDragStart.bind(this, r),
        onDragStop: this.onDragStop.bind(this),
        onDragging: this.onDragging.bind(this)
      };
      this.dragSourceAndParamsList.push({ params: o, dragSource: r }), this.dragService.addDragSource(o, i);
    }, t.prototype.removeDragSource = function(r) {
      var i = this.dragSourceAndParamsList.find(function(o) {
        return o.dragSource === r;
      });
      i && (this.dragService.removeDragSource(i.params), ye(this.dragSourceAndParamsList, i));
    }, t.prototype.clearDragSourceParamsList = function() {
      var r = this;
      this.dragSourceAndParamsList.forEach(function(i) {
        return r.dragService.removeDragSource(i.params);
      }), this.dragSourceAndParamsList.length = 0, this.dropTargets.length = 0;
    }, t.prototype.nudge = function() {
      this.dragging && this.onDragging(this.eventLastTime, !0);
    }, t.prototype.onDragStart = function(r, i) {
      this.dragging = !0, this.dragSource = r, this.eventLastTime = i, this.dragItem = this.dragSource.getDragItem(), this.lastDropTarget = this.dragSource.dragSourceDropTarget, this.dragSource.onDragStarted && this.dragSource.onDragStarted(), this.createGhost();
    }, t.prototype.onDragStop = function(r) {
      if (this.eventLastTime = null, this.dragging = !1, this.dragSource.onDragStopped && this.dragSource.onDragStopped(), this.lastDropTarget && this.lastDropTarget.onDragStop) {
        var i = this.createDropTargetEvent(this.lastDropTarget, r, null, null, !1);
        this.lastDropTarget.onDragStop(i);
      }
      this.lastDropTarget = null, this.dragItem = null, this.removeGhost();
    }, t.prototype.onDragging = function(r, i) {
      var o = this, s, a, l, u, c = this.getHorizontalDirection(r), p = this.getVerticalDirection(r);
      this.eventLastTime = r, this.positionGhost(r);
      var d = this.dropTargets.filter(function(y) {
        return o.isMouseOnDropTarget(r, y);
      }), v = this.findCurrentDropTarget(r, d);
      if (v !== this.lastDropTarget)
        this.leaveLastTargetIfExists(r, c, p, i), this.lastDropTarget !== null && v === null && ((a = (s = this.dragSource).onGridExit) === null || a === void 0 || a.call(s, this.dragItem)), this.lastDropTarget === null && v !== null && ((u = (l = this.dragSource).onGridEnter) === null || u === void 0 || u.call(l, this.dragItem)), this.enterDragTargetIfExists(v, r, c, p, i), this.lastDropTarget = v;
      else if (v && v.onDragging) {
        var f = this.createDropTargetEvent(v, r, c, p, i);
        v.onDragging(f);
      }
    }, t.prototype.getAllContainersFromDropTarget = function(r) {
      var i = r.getSecondaryContainers ? r.getSecondaryContainers() : null, o = [[r.getContainer()]];
      return i ? o.concat(i) : o;
    }, t.prototype.allContainersIntersect = function(r, i) {
      var o, s;
      try {
        for (var a = ni(i), l = a.next(); !l.done; l = a.next()) {
          var u = l.value, c = u.getBoundingClientRect();
          if (c.width === 0 || c.height === 0)
            return !1;
          var p = r.clientX >= c.left && r.clientX < c.right, d = r.clientY >= c.top && r.clientY < c.bottom;
          if (!p || !d)
            return !1;
        }
      } catch (v) {
        o = { error: v };
      } finally {
        try {
          l && !l.done && (s = a.return) && s.call(a);
        } finally {
          if (o)
            throw o.error;
        }
      }
      return !0;
    }, t.prototype.isMouseOnDropTarget = function(r, i) {
      var o, s, a = this.getAllContainersFromDropTarget(i), l = !1;
      try {
        for (var u = ni(a), c = u.next(); !c.done; c = u.next()) {
          var p = c.value;
          if (this.allContainersIntersect(r, p)) {
            l = !0;
            break;
          }
        }
      } catch (d) {
        o = { error: d };
      } finally {
        try {
          c && !c.done && (s = u.return) && s.call(u);
        } finally {
          if (o)
            throw o.error;
        }
      }
      return i.targetContainsSource && !i.getContainer().contains(this.dragSource.eElement) ? !1 : l && i.isInterestedIn(this.dragSource.type, this.dragSource.eElement);
    }, t.prototype.findCurrentDropTarget = function(r, i) {
      var o, s, a, l, u = i.length;
      if (u === 0)
        return null;
      if (u === 1)
        return i[0];
      var c = this.gridOptionsService.getRootNode(), p = c.elementsFromPoint(r.clientX, r.clientY);
      try {
        for (var d = ni(p), v = d.next(); !v.done; v = d.next()) {
          var f = v.value;
          try {
            for (var y = (a = void 0, ni(i)), C = y.next(); !C.done; C = y.next()) {
              var m = C.value, w = nl(this.getAllContainersFromDropTarget(m));
              if (w.indexOf(f) !== -1)
                return m;
            }
          } catch (E) {
            a = { error: E };
          } finally {
            try {
              C && !C.done && (l = y.return) && l.call(y);
            } finally {
              if (a)
                throw a.error;
            }
          }
        }
      } catch (E) {
        o = { error: E };
      } finally {
        try {
          v && !v.done && (s = d.return) && s.call(d);
        } finally {
          if (o)
            throw o.error;
        }
      }
      return null;
    }, t.prototype.enterDragTargetIfExists = function(r, i, o, s, a) {
      if (r) {
        if (r.onDragEnter) {
          var l = this.createDropTargetEvent(r, i, o, s, a);
          r.onDragEnter(l);
        }
        this.setGhostIcon(r.getIconName ? r.getIconName() : null);
      }
    }, t.prototype.leaveLastTargetIfExists = function(r, i, o, s) {
      if (this.lastDropTarget) {
        if (this.lastDropTarget.onDragLeave) {
          var a = this.createDropTargetEvent(this.lastDropTarget, r, i, o, s);
          this.lastDropTarget.onDragLeave(a);
        }
        this.setGhostIcon(null);
      }
    }, t.prototype.addDropTarget = function(r) {
      this.dropTargets.push(r);
    }, t.prototype.removeDropTarget = function(r) {
      this.dropTargets = this.dropTargets.filter(function(i) {
        return i.getContainer() !== r.getContainer();
      });
    }, t.prototype.hasExternalDropZones = function() {
      return this.dropTargets.some(function(r) {
        return r.external;
      });
    }, t.prototype.findExternalZone = function(r) {
      var i = this.dropTargets.filter(function(o) {
        return o.external;
      });
      return i.find(function(o) {
        return o.getContainer() === r.getContainer();
      }) || null;
    }, t.prototype.getHorizontalDirection = function(r) {
      var i = this.eventLastTime && this.eventLastTime.clientX, o = r.clientX;
      return i === o ? null : i > o ? Xe.Left : Xe.Right;
    }, t.prototype.getVerticalDirection = function(r) {
      var i = this.eventLastTime && this.eventLastTime.clientY, o = r.clientY;
      return i === o ? null : i > o ? lr.Up : lr.Down;
    }, t.prototype.createDropTargetEvent = function(r, i, o, s, a) {
      var l = r.getContainer(), u = l.getBoundingClientRect(), c = this, p = c.gridApi, d = c.columnApi, v = c.dragItem, f = c.dragSource, y = i.clientX - u.left, C = i.clientY - u.top;
      return { event: i, x: y, y: C, vDirection: s, hDirection: o, dragSource: f, fromNudge: a, dragItem: v, api: p, columnApi: d, dropZoneTarget: l };
    }, t.prototype.positionGhost = function(r) {
      var i = this.eGhost;
      if (i) {
        var o = i.getBoundingClientRect(), s = o.height, a = Fl() - 2, l = Ll() - 2, u = r.pageY - s / 2, c = r.pageX - 10, p = this.gridOptionsService.getDocument(), d = p.defaultView || window, v = d.pageYOffset || p.documentElement.scrollTop, f = d.pageXOffset || p.documentElement.scrollLeft;
        a > 0 && c + i.clientWidth > a + f && (c = a + f - i.clientWidth), c < 0 && (c = 0), l > 0 && u + i.clientHeight > l + v && (u = l + v - i.clientHeight), u < 0 && (u = 0), i.style.left = c + "px", i.style.top = u + "px";
      }
    }, t.prototype.removeGhost = function() {
      this.eGhost && this.eGhostParent && this.eGhostParent.removeChild(this.eGhost), this.eGhost = null;
    }, t.prototype.createGhost = function() {
      this.eGhost = he(e.GHOST_TEMPLATE), this.mouseEventService.stampTopLevelGridCompWithGridInstance(this.eGhost);
      var r = this.environment.getTheme().theme;
      r && this.eGhost.classList.add(r), this.eGhostIcon = this.eGhost.querySelector(".ag-dnd-ghost-icon"), this.setGhostIcon(null);
      var i = this.eGhost.querySelector(".ag-dnd-ghost-label"), o = this.dragSource.dragItemName;
      lo(o) && (o = o()), i.innerHTML = it(o) || "", this.eGhost.style.height = "25px", this.eGhost.style.top = "20px", this.eGhost.style.left = "20px";
      var s = this.gridOptionsService.getDocument(), a = null;
      try {
        a = s.fullscreenElement;
      } catch {
      } finally {
        if (!a) {
          var l = this.gridOptionsService.getRootNode(), u = l.querySelector("body");
          u ? a = u : l instanceof ShadowRoot ? a = l : a = l == null ? void 0 : l.documentElement;
        }
      }
      this.eGhostParent = a, this.eGhostParent ? this.eGhostParent.appendChild(this.eGhost) : console.warn("AG Grid: could not find document body, it is needed for dragging columns");
    }, t.prototype.setGhostIcon = function(r, i) {
      i === void 0 && (i = !1), Fe(this.eGhostIcon);
      var o = null;
      switch (r || (r = this.dragSource.defaultIconName || e.ICON_NOT_ALLOWED), r) {
        case e.ICON_PINNED:
          o = this.ePinnedIcon;
          break;
        case e.ICON_MOVE:
          o = this.eMoveIcon;
          break;
        case e.ICON_LEFT:
          o = this.eLeftIcon;
          break;
        case e.ICON_RIGHT:
          o = this.eRightIcon;
          break;
        case e.ICON_GROUP:
          o = this.eGroupIcon;
          break;
        case e.ICON_AGGREGATE:
          o = this.eAggregateIcon;
          break;
        case e.ICON_PIVOT:
          o = this.ePivotIcon;
          break;
        case e.ICON_NOT_ALLOWED:
          o = this.eDropNotAllowedIcon;
          break;
        case e.ICON_HIDE:
          o = this.eHideIcon;
          break;
      }
      this.eGhostIcon.classList.toggle("ag-shake-left-to-right", i), !(o === this.eHideIcon && this.gridOptionsService.is("suppressDragLeaveHidesColumns")) && o && this.eGhostIcon.appendChild(o);
    };
    var e;
    return t.ICON_PINNED = "pinned", t.ICON_MOVE = "move", t.ICON_LEFT = "left", t.ICON_RIGHT = "right", t.ICON_GROUP = "group", t.ICON_AGGREGATE = "aggregate", t.ICON_PIVOT = "pivot", t.ICON_NOT_ALLOWED = "notAllowed", t.ICON_HIDE = "hide", t.GHOST_TEMPLATE = `<div class="ag-dnd-ghost ag-unselectable">
            <span class="ag-dnd-ghost-icon ag-shake-left-to-right"></span>
            <div class="ag-dnd-ghost-label"></div>
        </div>`, Dt([
      h("dragService")
    ], t.prototype, "dragService", void 0), Dt([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), Dt([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), Dt([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), Dt([
      b
    ], t.prototype, "init", null), Dt([
      ve
    ], t.prototype, "clearDragSourceParamsList", null), t = e = Dt([
      A("dragAndDropService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var fo = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), xr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, $i = (
  /** @class */
  function(n) {
    fo(t, n);
    function t(e, r, i, o, s, a) {
      var l = n.call(this) || this;
      return l.cellValueFn = e, l.rowNode = r, l.column = i, l.customGui = o, l.dragStartPixels = s, l.suppressVisibilityChange = a, l.dragSource = null, l;
    }
    return t.prototype.isCustomGui = function() {
      return this.customGui != null;
    }, t.prototype.postConstruct = function() {
      if (this.customGui ? this.setDragElement(this.customGui, this.dragStartPixels) : (this.setTemplate(
        /* html */
        '<div class="ag-drag-handle ag-row-drag" aria-hidden="true"></div>'
      ), this.getGui().appendChild(oe("rowDrag", this.beans.gridOptionsService, null)), this.addDragSource()), this.checkCompatibility(), !this.suppressVisibilityChange) {
        var e = this.beans.gridOptionsService.is("rowDragManaged") ? new Th(this, this.beans, this.rowNode, this.column) : new Oh(this, this.beans, this.rowNode, this.column);
        this.createManagedBean(e, this.beans.context);
      }
    }, t.prototype.setDragElement = function(e, r) {
      this.setTemplateFromElement(e), this.addDragSource(r);
    }, t.prototype.getSelectedNodes = function() {
      var e = this.beans.gridOptionsService.is("rowDragMultiRow");
      if (!e)
        return [this.rowNode];
      var r = this.beans.selectionService.getSelectedNodes();
      return r.indexOf(this.rowNode) !== -1 ? r : [this.rowNode];
    }, t.prototype.checkCompatibility = function() {
      var e = this.beans.gridOptionsService.is("rowDragManaged"), r = this.beans.gridOptionsService.isTreeData();
      r && e && K(function() {
        return console.warn("AG Grid: If using row drag with tree data, you cannot have rowDragManaged=true");
      }, "RowDragComp.managedAndTreeData");
    }, t.prototype.getDragItem = function() {
      return {
        rowNode: this.rowNode,
        rowNodes: this.getSelectedNodes(),
        columns: this.column ? [this.column] : void 0,
        defaultTextValue: this.cellValueFn()
      };
    }, t.prototype.getRowDragText = function(e) {
      if (e) {
        var r = e.getColDef();
        if (r.rowDragText)
          return r.rowDragText;
      }
      return this.gridOptionsService.get("rowDragText");
    }, t.prototype.addDragSource = function(e) {
      var r = this;
      e === void 0 && (e = 4), this.dragSource && this.removeDragSource();
      var i = this.getRowDragText(this.column), o = this.localeService.getLocaleTextFunc();
      this.dragSource = {
        type: we.RowDrag,
        eElement: this.getGui(),
        dragItemName: function() {
          var s, a = r.getDragItem(), l = ((s = a.rowNodes) === null || s === void 0 ? void 0 : s.length) || 1;
          return i ? i(a, l) : l === 1 ? r.cellValueFn() : l + " " + o("rowDragRows", "rows");
        },
        getDragItem: function() {
          return r.getDragItem();
        },
        dragStartPixels: e,
        dragSourceDomDataKey: this.beans.gridOptionsService.getDomDataKey()
      }, this.beans.dragAndDropService.addDragSource(this.dragSource, !0);
    }, t.prototype.removeDragSource = function() {
      this.dragSource && this.beans.dragAndDropService.removeDragSource(this.dragSource), this.dragSource = null;
    }, xr([
      h("beans")
    ], t.prototype, "beans", void 0), xr([
      b
    ], t.prototype, "postConstruct", null), xr([
      ve
    ], t.prototype, "removeDragSource", null), t;
  }(W)
), gu = (
  /** @class */
  function(n) {
    fo(t, n);
    function t(e, r, i) {
      var o = n.call(this) || this;
      return o.parent = e, o.rowNode = r, o.column = i, o;
    }
    return t.prototype.setDisplayedOrVisible = function(e) {
      var r = { skipAriaHidden: !0 };
      if (e)
        this.parent.setDisplayed(!1, r);
      else {
        var i = !0, o = !1;
        this.column && (i = this.column.isRowDrag(this.rowNode) || this.parent.isCustomGui(), o = lo(this.column.getColDef().rowDrag)), o ? (this.parent.setDisplayed(!0, r), this.parent.setVisible(i, r)) : (this.parent.setDisplayed(i, r), this.parent.setVisible(!0, r));
      }
    }, t;
  }(T)
), Oh = (
  /** @class */
  function(n) {
    fo(t, n);
    function t(e, r, i, o) {
      var s = n.call(this, e, i, o) || this;
      return s.beans = r, s;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedPropertyListener("suppressRowDrag", this.onSuppressRowDrag.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, g.EVENT_NEW_COLUMNS_LOADED, this.workOutVisibility.bind(this)), this.workOutVisibility();
    }, t.prototype.onSuppressRowDrag = function() {
      this.workOutVisibility();
    }, t.prototype.workOutVisibility = function() {
      var e = this.beans.gridOptionsService.is("suppressRowDrag");
      this.setDisplayedOrVisible(e);
    }, xr([
      b
    ], t.prototype, "postConstruct", null), t;
  }(gu)
), Th = (
  /** @class */
  function(n) {
    fo(t, n);
    function t(e, r, i, o) {
      var s = n.call(this, e, i, o) || this;
      return s.beans = r, s;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.beans.eventService, g.EVENT_SORT_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, g.EVENT_FILTER_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, g.EVENT_NEW_COLUMNS_LOADED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this)), this.addManagedPropertyListener("suppressRowDrag", this.onSuppressRowDrag.bind(this)), this.workOutVisibility();
    }, t.prototype.onSuppressRowDrag = function() {
      this.workOutVisibility();
    }, t.prototype.workOutVisibility = function() {
      var e = this.beans.ctrlsService.getGridBodyCtrl(), r = e.getRowDragFeature(), i = r && r.shouldPreventRowMove(), o = this.beans.gridOptionsService.is("suppressRowDrag"), s = this.beans.dragAndDropService.hasExternalDropZones(), a = i && !s || o;
      this.setDisplayedOrVisible(a);
    }, xr([
      b
    ], t.prototype, "postConstruct", null), t;
  }(gu)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var bh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Yi = function() {
  return Yi = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Yi.apply(this, arguments);
}, vr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ph = (
  /** @class */
  function(n) {
    bh(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function(e, r, i, o, s, a, l) {
      this.params = l, this.eGui = r, this.eCheckbox = i, this.eExpanded = o, this.eContracted = s, this.comp = e, this.compClass = a;
      var u = this.isTopLevelFooter(), c = this.isEmbeddedRowMismatch(), p = l.value == null && !l.node.master, d = !1;
      if (this.gridOptionsService.is("groupIncludeFooter") && this.gridOptionsService.is("groupHideOpenParents")) {
        var v = l.node;
        if (v.footer) {
          var f = l.colDef && l.colDef.showRowGroup, y = v.rowGroupColumn && v.rowGroupColumn.getColId();
          d = f !== y;
        }
      }
      this.cellIsBlank = u ? !1 : c || p && !l.node.master || d, !this.cellIsBlank && (this.setupShowingValueForOpenedParent(), this.findDisplayedGroupNode(), this.addFullWidthRowDraggerIfNeeded(), this.addExpandAndContract(), this.addCheckboxIfNeeded(), this.addValueElement(), this.setupIndent(), this.refreshAriaExpanded());
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this), this.expandListener = null;
    }, t.prototype.refreshAriaExpanded = function() {
      var e = this.params, r = e.node, i = e.eParentOfValue;
      if (this.expandListener && (this.expandListener = this.expandListener()), !this.isExpandable()) {
        El(i);
        return;
      }
      var o = function() {
        Ue(i, !!r.expanded);
      };
      this.expandListener = this.addManagedListener(r, j.EVENT_EXPANDED_CHANGED, o) || null, o();
    }, t.prototype.isTopLevelFooter = function() {
      if (!this.gridOptionsService.is("groupIncludeTotalFooter") || this.params.value != null || this.params.node.level != -1)
        return !1;
      var e = this.params.colDef, r = e == null;
      if (r || e.showRowGroup === !0)
        return !0;
      var i = this.columnModel.getRowGroupColumns();
      if (!i || i.length === 0)
        return !0;
      var o = i[0];
      return o.getId() === e.showRowGroup;
    }, t.prototype.isEmbeddedRowMismatch = function() {
      if (!this.params.fullWidth || !this.gridOptionsService.is("embedFullWidthRows"))
        return !1;
      var e = this.params.pinned === "left", r = this.params.pinned === "right", i = !e && !r;
      return this.gridOptionsService.is("enableRtl") ? this.columnModel.isPinningLeft() ? !r : !i : this.columnModel.isPinningLeft() ? !e : !i;
    }, t.prototype.findDisplayedGroupNode = function() {
      var e = this.params.column, r = this.params.node;
      if (this.showingValueForOpenedParent)
        for (var i = r.parent; i != null; ) {
          if (i.rowGroupColumn && e.isRowGroupDisplayed(i.rowGroupColumn.getId())) {
            this.displayedGroupNode = i;
            break;
          }
          i = i.parent;
        }
      x(this.displayedGroupNode) && (this.displayedGroupNode = r);
    }, t.prototype.setupShowingValueForOpenedParent = function() {
      var e = this.params.node, r = this.params.column;
      if (!this.gridOptionsService.is("groupHideOpenParents")) {
        this.showingValueForOpenedParent = !1;
        return;
      }
      if (!e.groupData) {
        this.showingValueForOpenedParent = !1;
        return;
      }
      var i = e.rowGroupColumn != null;
      if (i) {
        var o = e.rowGroupColumn.getId(), s = r.isRowGroupDisplayed(o);
        if (s) {
          this.showingValueForOpenedParent = !1;
          return;
        }
      }
      var a = e.groupData[r.getId()] != null;
      this.showingValueForOpenedParent = a;
    }, t.prototype.addValueElement = function() {
      this.displayedGroupNode.footer ? this.addFooterValue() : (this.addGroupValue(), this.addChildCount());
    }, t.prototype.addGroupValue = function() {
      var e = this.adjustParamsWithDetailsFromRelatedColumn(), r = this.getInnerCompDetails(e), i = e.valueFormatted, o = e.value, s = i;
      if (s == null)
        if (o === "" && this.params.node.group) {
          var a = this.localeService.getLocaleTextFunc();
          s = a("blanks", "(Blanks)");
        } else
          s = o ?? null;
      this.comp.setInnerRenderer(r, s);
    }, t.prototype.adjustParamsWithDetailsFromRelatedColumn = function() {
      var e = this.displayedGroupNode.rowGroupColumn, r = this.params.column;
      if (!e)
        return this.params;
      var i = r != null;
      if (i) {
        var o = r.isRowGroupDisplayed(e.getId());
        if (!o)
          return this.params;
      }
      var s = this.params, a = this.params, l = a.value, u = a.node, c = this.valueFormatterService.formatValue(e, u, l), p = Yi(Yi({}, s), { valueFormatted: c });
      return p;
    }, t.prototype.addFooterValue = function() {
      var e = this.params.footerValueGetter, r = "";
      if (e) {
        var i = Kn(this.params);
        i.value = this.params.value, typeof e == "function" ? r = e(i) : typeof e == "string" ? r = this.expressionService.evaluate(e, i) : console.warn("AG Grid: footerValueGetter should be either a function or a string (expression)");
      } else
        r = "Total " + (this.params.value != null ? this.params.value : "");
      var o = this.getInnerCompDetails(this.params);
      this.comp.setInnerRenderer(o, r);
    }, t.prototype.getInnerCompDetails = function(e) {
      var r = this;
      if (e.fullWidth)
        return this.userComponentFactory.getFullWidthGroupRowInnerCellRenderer(this.gridOptionsService.get("groupRowRendererParams"), e);
      var i = this.userComponentFactory.getInnerRendererDetails(e, e), o = function(c) {
        return c && c.componentClass == r.compClass;
      };
      if (i && !o(i))
        return i;
      var s = this.displayedGroupNode.rowGroupColumn, a = s ? s.getColDef() : void 0;
      if (a) {
        var l = this.userComponentFactory.getCellRendererDetails(a, e);
        if (l && !o(l))
          return l;
        if (o(l) && a.cellRendererParams && a.cellRendererParams.innerRenderer) {
          var u = this.userComponentFactory.getInnerRendererDetails(a.cellRendererParams, e);
          return u;
        }
      }
    }, t.prototype.addChildCount = function() {
      this.params.suppressCount || (this.addManagedListener(this.displayedGroupNode, j.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.updateChildCount.bind(this)), this.updateChildCount());
    }, t.prototype.updateChildCount = function() {
      var e = this.displayedGroupNode.allChildrenCount, r = this.isShowRowGroupForThisRow(), i = r && e != null && e >= 0, o = i ? "(" + e + ")" : "";
      this.comp.setChildCount(o);
    }, t.prototype.isShowRowGroupForThisRow = function() {
      if (this.gridOptionsService.isTreeData())
        return !0;
      var e = this.displayedGroupNode.rowGroupColumn;
      if (!e)
        return !1;
      var r = this.params.column, i = r == null || r.isRowGroupDisplayed(e.getId());
      return i;
    }, t.prototype.addExpandAndContract = function() {
      var e, r = this.params, i = oe("groupExpanded", this.gridOptionsService, null), o = oe("groupContracted", this.gridOptionsService, null);
      i && this.eExpanded.appendChild(i), o && this.eContracted.appendChild(o);
      var s = r.eGridCell, a = ((e = this.params.column) === null || e === void 0 ? void 0 : e.isCellEditable(r.node)) && this.gridOptionsService.is("enableGroupEdit");
      !a && this.isExpandable() && !r.suppressDoubleClickExpand && this.addManagedListener(s, "dblclick", this.onCellDblClicked.bind(this)), this.addManagedListener(this.eExpanded, "click", this.onExpandClicked.bind(this)), this.addManagedListener(this.eContracted, "click", this.onExpandClicked.bind(this)), this.addManagedListener(s, "keydown", this.onKeyDown.bind(this)), this.addManagedListener(r.node, j.EVENT_EXPANDED_CHANGED, this.showExpandAndContractIcons.bind(this)), this.showExpandAndContractIcons();
      var l = this.onRowNodeIsExpandableChanged.bind(this);
      this.addManagedListener(this.displayedGroupNode, j.EVENT_ALL_CHILDREN_COUNT_CHANGED, l), this.addManagedListener(this.displayedGroupNode, j.EVENT_MASTER_CHANGED, l), this.addManagedListener(this.displayedGroupNode, j.EVENT_GROUP_CHANGED, l), this.addManagedListener(this.displayedGroupNode, j.EVENT_HAS_CHILDREN_CHANGED, l);
    }, t.prototype.onExpandClicked = function(e) {
      et(e) || (ir(e), this.onExpandOrContract(e));
    }, t.prototype.onExpandOrContract = function(e) {
      var r = this.displayedGroupNode, i = !r.expanded;
      !i && r.sticky && this.scrollToStickyNode(r), r.setExpanded(i, e);
    }, t.prototype.scrollToStickyNode = function(e) {
      var r = this.ctrlsService.getGridBodyCtrl(), i = r.getScrollFeature();
      i.setVerticalScrollPosition(e.rowTop - e.stickyRowTop);
    }, t.prototype.isExpandable = function() {
      if (this.showingValueForOpenedParent)
        return !0;
      var e = this.displayedGroupNode, r = this.columnModel.isPivotMode() && e.leafGroup, i = e.isExpandable() && !e.footer && !r;
      if (!i)
        return !1;
      var o = this.params.column, s = o != null && typeof o.getColDef().showRowGroup == "string";
      if (s) {
        var a = this.isShowRowGroupForThisRow();
        return a;
      }
      return !0;
    }, t.prototype.showExpandAndContractIcons = function() {
      var e = this, r = e.params, i = e.displayedGroupNode, o = e.columnModel, s = r.node, a = this.isExpandable();
      if (a) {
        var l = this.showingValueForOpenedParent ? !0 : s.expanded;
        this.comp.setExpandedDisplayed(l), this.comp.setContractedDisplayed(!l);
      } else
        this.comp.setExpandedDisplayed(!1), this.comp.setContractedDisplayed(!1);
      var u = o.isPivotMode(), c = u && i.leafGroup, p = a && !c, d = s.footer && s.level === -1;
      this.comp.addOrRemoveCssClass("ag-cell-expandable", p), this.comp.addOrRemoveCssClass("ag-row-group", p), u ? this.comp.addOrRemoveCssClass("ag-pivot-leaf-group", c) : d || this.comp.addOrRemoveCssClass("ag-row-group-leaf-indent", !p);
    }, t.prototype.onRowNodeIsExpandableChanged = function() {
      this.showExpandAndContractIcons(), this.setIndent(), this.refreshAriaExpanded();
    }, t.prototype.setupIndent = function() {
      var e = this.params.node, r = this.params.suppressPadding;
      r || (this.addManagedListener(e, j.EVENT_UI_LEVEL_CHANGED, this.setIndent.bind(this)), this.setIndent());
    }, t.prototype.setIndent = function() {
      if (!this.gridOptionsService.is("groupHideOpenParents")) {
        var e = this.params, r = e.node, i = !!e.colDef, o = this.gridOptionsService.isTreeData(), s = !i || o || e.colDef.showRowGroup === !0, a = s ? r.uiLevel : 0;
        this.indentClass && this.comp.addOrRemoveCssClass(this.indentClass, !1), this.indentClass = "ag-row-group-indent-" + a, this.comp.addOrRemoveCssClass(this.indentClass, !0);
      }
    }, t.prototype.addFullWidthRowDraggerIfNeeded = function() {
      var e = this;
      if (!(!this.params.fullWidth || !this.params.rowDrag)) {
        var r = new $i(function() {
          return e.params.value;
        }, this.params.node);
        this.createManagedBean(r, this.context), this.eGui.insertAdjacentElement("afterbegin", r.getGui());
      }
    }, t.prototype.isUserWantsSelected = function() {
      var e = this.params.checkbox;
      return typeof e == "function" || e === !0;
    }, t.prototype.addCheckboxIfNeeded = function() {
      var e = this, r = this.displayedGroupNode, i = this.isUserWantsSelected() && // footers cannot be selected
      !r.footer && // pinned rows cannot be selected
      !r.rowPinned && // details cannot be selected
      !r.detail;
      if (i) {
        var o = new vu();
        this.getContext().createBean(o), o.init({
          rowNode: r,
          column: this.params.column,
          overrides: {
            isVisible: this.params.checkbox,
            callbackParams: this.params,
            removeHidden: !0
          }
        }), this.eCheckbox.appendChild(o.getGui()), this.addDestroyFunc(function() {
          return e.getContext().destroyBean(o);
        });
      }
      this.comp.setCheckboxVisible(i);
    }, t.prototype.onKeyDown = function(e) {
      var r = e.key === _.ENTER;
      if (!(!r || this.params.suppressEnterExpand)) {
        var i = this.params.column && this.params.column.isCellEditable(this.params.node);
        i || this.onExpandOrContract(e);
      }
    }, t.prototype.onCellDblClicked = function(e) {
      if (!et(e)) {
        var r = Vi(this.eExpanded, e) || Vi(this.eContracted, e);
        r || this.onExpandOrContract(e);
      }
    }, vr([
      h("expressionService")
    ], t.prototype, "expressionService", void 0), vr([
      h("valueFormatterService")
    ], t.prototype, "valueFormatterService", void 0), vr([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), vr([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), vr([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Dh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), gr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, qs = (
  /** @class */
  function(n) {
    Dh(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.init = function(e) {
      var r = this, i = {
        setInnerRenderer: function(l, u) {
          return r.setRenderDetails(l, u);
        },
        setChildCount: function(l) {
          return r.eChildCount.innerHTML = l;
        },
        addOrRemoveCssClass: function(l, u) {
          return r.addOrRemoveCssClass(l, u);
        },
        setContractedDisplayed: function(l) {
          return k(r.eContracted, l);
        },
        setExpandedDisplayed: function(l) {
          return k(r.eExpanded, l);
        },
        setCheckboxVisible: function(l) {
          return r.eCheckbox.classList.toggle("ag-invisible", !l);
        }
      }, o = this.createManagedBean(new Ph()), s = !e.colDef, a = this.getGui();
      o.init(i, a, this.eCheckbox, this.eExpanded, this.eContracted, this.constructor, e), s && ue(a, "gridcell");
    }, t.prototype.setRenderDetails = function(e, r) {
      var i = this;
      if (e) {
        var o = e.newAgStackInstance();
        if (!o)
          return;
        o.then(function(s) {
          if (s) {
            var a = function() {
              return i.context.destroyBean(s);
            };
            i.isAlive() ? (i.eValue.appendChild(s.getGui()), i.addDestroyFunc(a)) : a();
          }
        });
      } else
        this.eValue.innerText = r;
    }, t.prototype.destroy = function() {
      this.getContext().destroyBean(this.innerCellRenderer), n.prototype.destroy.call(this);
    }, t.prototype.refresh = function() {
      return !1;
    }, t.TEMPLATE = `<span class="ag-cell-wrapper">
            <span class="ag-group-expanded" ref="eExpanded"></span>
            <span class="ag-group-contracted" ref="eContracted"></span>
            <span class="ag-group-checkbox ag-invisible" ref="eCheckbox"></span>
            <span class="ag-group-value" ref="eValue"></span>
            <span class="ag-group-child-count" ref="eChildCount"></span>
        </span>`, gr([
      P("eExpanded")
    ], t.prototype, "eExpanded", void 0), gr([
      P("eContracted")
    ], t.prototype, "eContracted", void 0), gr([
      P("eCheckbox")
    ], t.prototype, "eCheckbox", void 0), gr([
      P("eValue")
    ], t.prototype, "eValue", void 0), gr([
      P("eChildCount")
    ], t.prototype, "eChildCount", void 0), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ah = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Qs = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Fh = (
  /** @class */
  function(n) {
    Ah(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.init = function(e) {
      e.node.failedLoad ? this.setupFailed() : this.setupLoading();
    }, t.prototype.setupFailed = function() {
      var e = this.localeService.getLocaleTextFunc();
      this.eLoadingText.innerText = e("loadingError", "ERR");
    }, t.prototype.setupLoading = function() {
      var e = oe("groupLoading", this.gridOptionsService, null);
      e && this.eLoadingIcon.appendChild(e);
      var r = this.localeService.getLocaleTextFunc();
      this.eLoadingText.innerText = r("loadingOoo", "Loading");
    }, t.prototype.refresh = function(e) {
      return !1;
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.TEMPLATE = `<div class="ag-loading">
            <span class="ag-loading-icon" ref="eLoadingIcon"></span>
            <span class="ag-loading-text" ref="eLoadingText"></span>
        </div>`, Qs([
      P("eLoadingIcon")
    ], t.prototype, "eLoadingIcon", void 0), Qs([
      P("eLoadingText")
    ], t.prototype, "eLoadingText", void 0), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Lh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Mh = (
  /** @class */
  function(n) {
    Lh(t, n);
    function t() {
      return n.call(this) || this;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.init = function(e) {
      var r, i = (r = this.gridOptionsService.get("overlayLoadingTemplate")) !== null && r !== void 0 ? r : t.DEFAULT_LOADING_OVERLAY_TEMPLATE, o = this.localeService.getLocaleTextFunc(), s = i.replace("[LOADING...]", o("loadingOoo", "Loading..."));
      this.setTemplate(s);
    }, t.DEFAULT_LOADING_OVERLAY_TEMPLATE = '<span class="ag-overlay-loading-center">[LOADING...]</span>', t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ih = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), xh = (
  /** @class */
  function(n) {
    Ih(t, n);
    function t() {
      return n.call(this) || this;
    }
    return t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t.prototype.init = function(e) {
      var r, i = (r = this.gridOptionsService.get("overlayNoRowsTemplate")) !== null && r !== void 0 ? r : t.DEFAULT_NO_ROWS_TEMPLATE, o = this.localeService.getLocaleTextFunc(), s = i.replace("[NO_ROWS_TO_SHOW]", o("noRowsToShow", "No Rows To Show"));
      this.setTemplate(s);
    }, t.DEFAULT_NO_ROWS_TEMPLATE = '<span class="ag-overlay-no-rows-center">[NO_ROWS_TO_SHOW]</span>', t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Nh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Gh = (
  /** @class */
  function(n) {
    Nh(t, n);
    function t() {
      return n.call(
        this,
        /* html */
        '<div class="ag-tooltip"></div>'
      ) || this;
    }
    return t.prototype.init = function(e) {
      var r = e.value;
      this.getGui().innerHTML = it(r);
    }, t;
  }(Qr)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Hh = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Bo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Vh = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Bh = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Vh(arguments[t]));
  return n;
}, Wh = (
  /** @class */
  function(n) {
    Hh(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.agGridDefaults = {
        //date
        agDateInput: qd,
        //header
        agColumnHeader: oh,
        agColumnGroupHeader: sh,
        agSortIndicator: Ss,
        //floating filters
        agTextColumnFloatingFilter: th,
        agNumberColumnFloatingFilter: Zd,
        agDateColumnFloatingFilter: Kd,
        agReadOnlyFloatingFilter: _d,
        // renderers
        agAnimateShowChangeCellRenderer: mh,
        agAnimateSlideCellRenderer: Eh,
        agGroupCellRenderer: qs,
        agGroupRowRenderer: qs,
        agLoadingCellRenderer: Fh,
        //editors
        agCellEditor: $s,
        agTextCellEditor: $s,
        agSelectCellEditor: dh,
        agLargeTextCellEditor: ch,
        //filter
        agTextColumnFilter: ws,
        agNumberColumnFilter: lu,
        agDateColumnFilter: iu,
        //overlays
        agLoadingOverlay: Mh,
        agNoRowsOverlay: xh,
        // tooltips
        agTooltipComponent: Gh
      }, e.enterpriseAgDefaultCompsModule = {
        agSetColumnFilter: F.SetFilterModule,
        agSetColumnFloatingFilter: F.SetFilterModule,
        agMultiColumnFilter: F.MultiFilterModule,
        agMultiColumnFloatingFilter: F.MultiFilterModule,
        agGroupColumnFilter: F.RowGroupingModule,
        agGroupColumnFloatingFilter: F.RowGroupingModule,
        agRichSelect: F.RichSelectModule,
        agRichSelectCellEditor: F.RichSelectModule,
        agDetailCellRenderer: F.MasterDetailModule,
        agSparklineCellRenderer: F.SparklinesModule
      }, e.deprecatedAgGridDefaults = {
        agPopupTextCellEditor: 'AG Grid: Since v27.1 The agPopupTextCellEditor is deprecated. Instead use { cellEditor: "agTextCellEditor", cellEditorPopup: true }',
        agPopupSelectCellEditor: 'AG Grid: Since v27.1 the agPopupSelectCellEditor is deprecated. Instead use { cellEditor: "agSelectCellEditor", cellEditorPopup: true }'
      }, e.jsComps = {}, e.fwComps = {}, e;
    }
    return t.prototype.init = function() {
      var e = this;
      this.gridOptions.components != null && J(this.gridOptions.components, function(r, i) {
        return e.registerJsComponent(r, i);
      }), this.gridOptions.frameworkComponents != null && J(this.gridOptions.frameworkComponents, function(r, i) {
        return e.registerFwComponent(r, i);
      });
    }, t.prototype.registerDefaultComponent = function(e, r) {
      if (this.agGridDefaults[e]) {
        console.error("Trying to overwrite a default component. You should call registerComponent");
        return;
      }
      this.agGridDefaults[e] = r;
    }, t.prototype.registerJsComponent = function(e, r) {
      if (this.fwComps[e]) {
        console.error("Trying to register a component that you have already registered for frameworks: " + e);
        return;
      }
      this.jsComps[e] = r;
    }, t.prototype.registerFwComponent = function(e, r) {
      var i = "AG Grid: As of v27, registering components via grid property frameworkComponents is deprecated. Instead register both JavaScript AND Framework Components via the components property.";
      K(function() {
        return console.warn(i);
      }, "UserComponentRegistry.frameworkComponentsDeprecated"), this.fwComps[e] = r;
    }, t.prototype.retrieve = function(e, r) {
      var i = this, o = function(d, v) {
        return { componentFromFramework: v, component: d };
      }, s = this.getFrameworkOverrides().frameworkComponent(r, this.gridOptions.components);
      if (s != null)
        return o(s, !0);
      var a = this.fwComps[r];
      if (a)
        return o(a, !0);
      var l = this.jsComps[r];
      if (l) {
        var u = this.getFrameworkOverrides().isFrameworkComponent(l);
        return o(l, u);
      }
      var c = this.agGridDefaults[r];
      if (c)
        return o(c, !1);
      var p = this.enterpriseAgDefaultCompsModule[r];
      return p ? N.assertRegistered(p, "AG Grid '" + e + "' component: " + r) : this.deprecatedAgGridDefaults[r] ? K(function() {
        return console.warn(i.deprecatedAgGridDefaults[r]);
      }, r) : K(function() {
        i.warnAboutMissingComponent(e, r);
      }, "MissingComp" + r), null;
    }, t.prototype.warnAboutMissingComponent = function(e, r) {
      var i = Bh(Object.keys(this.agGridDefaults).filter(function(s) {
        return !["agCellEditor", "agGroupRowRenderer", "agSortIndicator"].includes(s);
      }), Object.keys(this.jsComps), Object.keys(this.fwComps)), o = qn(r, i, !0, 0.8);
      console.warn("AG Grid: Could not find '" + r + `' component. It was configured as "` + e + ": '" + r + `'" but it wasn't found in the list of registered components.`), o.length > 0 && console.warn("         Did you mean: [" + o.slice(0, 3) + "]?"), console.warn("If using a custom component check it has been registered as described in: https://ag-grid.com/javascript-data-grid/components/");
    }, Bo([
      h("gridOptions")
    ], t.prototype, "gridOptions", void 0), Bo([
      b
    ], t.prototype, "init", null), t = Bo([
      A("userComponentRegistry")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var jh = {
  propertyName: "dateComponent",
  cellRenderer: !1
}, kh = {
  propertyName: "headerComponent",
  cellRenderer: !1
}, Uh = {
  propertyName: "headerGroupComponent",
  cellRenderer: !1
}, Xs = {
  propertyName: "cellRenderer",
  cellRenderer: !0
}, zh = {
  propertyName: "cellEditor",
  cellRenderer: !1
}, Js = {
  propertyName: "innerRenderer",
  cellRenderer: !0
}, Kh = {
  propertyName: "loadingOverlayComponent",
  cellRenderer: !1
}, $h = {
  propertyName: "noRowsOverlayComponent",
  cellRenderer: !1
}, Yh = {
  propertyName: "tooltipComponent",
  cellRenderer: !1
}, Gn = {
  propertyName: "filter",
  cellRenderer: !1
}, qh = {
  propertyName: "floatingFilterComponent",
  cellRenderer: !1
}, Qh = {
  propertyName: "toolPanel",
  cellRenderer: !1
}, Xh = {
  propertyName: "statusPanel",
  cellRenderer: !1
}, Jh = {
  propertyName: "fullWidthCellRenderer",
  cellRenderer: !0
}, Zh = {
  propertyName: "loadingCellRenderer",
  cellRenderer: !0
}, ef = {
  propertyName: "groupRowRenderer",
  cellRenderer: !0
}, tf = {
  propertyName: "detailCellRenderer",
  cellRenderer: !0
};
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var rf = (
  /** @class */
  function() {
    function n() {
    }
    return n.getFloatingFilterType = function(t) {
      return this.filterToFloatingFilterMapping[t];
    }, n.filterToFloatingFilterMapping = {
      set: "agSetColumnFloatingFilter",
      agSetColumnFilter: "agSetColumnFloatingFilter",
      multi: "agMultiColumnFloatingFilter",
      agMultiColumnFilter: "agMultiColumnFloatingFilter",
      group: "agGroupColumnFloatingFilter",
      agGroupColumnFilter: "agGroupColumnFloatingFilter",
      number: "agNumberColumnFloatingFilter",
      agNumberColumnFilter: "agNumberColumnFloatingFilter",
      date: "agDateColumnFloatingFilter",
      agDateColumnFilter: "agDateColumnFloatingFilter",
      text: "agTextColumnFloatingFilter",
      agTextColumnFilter: "agTextColumnFloatingFilter"
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var of = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Wt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, nf = (
  /** @class */
  function(n) {
    of(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getHeaderCompDetails = function(e, r) {
      return this.getCompDetails(e, kh, "agColumnHeader", r);
    }, t.prototype.getHeaderGroupCompDetails = function(e) {
      var r = e.columnGroup.getColGroupDef();
      return this.getCompDetails(r, Uh, "agColumnGroupHeader", e);
    }, t.prototype.getFullWidthCellRendererDetails = function(e) {
      return this.getCompDetails(this.gridOptions, Jh, null, e, !0);
    }, t.prototype.getFullWidthLoadingCellRendererDetails = function(e) {
      return this.getCompDetails(this.gridOptions, Zh, "agLoadingCellRenderer", e, !0);
    }, t.prototype.getFullWidthGroupCellRendererDetails = function(e) {
      return this.getCompDetails(this.gridOptions, ef, "agGroupRowRenderer", e, !0);
    }, t.prototype.getFullWidthDetailCellRendererDetails = function(e) {
      return this.getCompDetails(this.gridOptions, tf, "agDetailCellRenderer", e, !0);
    }, t.prototype.getInnerRendererDetails = function(e, r) {
      return this.getCompDetails(e, Js, null, r);
    }, t.prototype.getFullWidthGroupRowInnerCellRenderer = function(e, r) {
      return this.getCompDetails(e, Js, null, r);
    }, t.prototype.getCellRendererDetails = function(e, r) {
      return this.getCompDetails(e, Xs, null, r);
    }, t.prototype.getCellEditorDetails = function(e, r) {
      return this.getCompDetails(e, zh, "agCellEditor", r, !0);
    }, t.prototype.getFilterDetails = function(e, r, i) {
      return this.getCompDetails(e, Gn, i, r, !0);
    }, t.prototype.getDateCompDetails = function(e) {
      return this.getCompDetails(this.gridOptions, jh, "agDateInput", e, !0);
    }, t.prototype.getLoadingOverlayCompDetails = function(e) {
      return this.getCompDetails(this.gridOptions, Kh, "agLoadingOverlay", e, !0);
    }, t.prototype.getNoRowsOverlayCompDetails = function(e) {
      return this.getCompDetails(this.gridOptions, $h, "agNoRowsOverlay", e, !0);
    }, t.prototype.getTooltipCompDetails = function(e) {
      return this.getCompDetails(e.colDef, Yh, "agTooltipComponent", e, !0);
    }, t.prototype.getSetFilterCellRendererDetails = function(e, r) {
      return this.getCompDetails(e, Xs, null, r);
    }, t.prototype.getFloatingFilterCompDetails = function(e, r, i) {
      return this.getCompDetails(e, qh, i, r);
    }, t.prototype.getToolPanelCompDetails = function(e, r) {
      return this.getCompDetails(e, Qh, null, r, !0);
    }, t.prototype.getStatusPanelCompDetails = function(e, r) {
      return this.getCompDetails(e, Xh, null, r, !0);
    }, t.prototype.getCompDetails = function(e, r, i, o, s) {
      var a = this;
      s === void 0 && (s = !1);
      var l = r.propertyName, u = r.cellRenderer, c = this.getCompKeys(e, r, o), p = c.compName, d = c.jsComp, v = c.fwComp, f = c.paramsFromSelector, y = c.popupFromSelector, C = c.popupPositionFromSelector, m = function(D) {
        var M = a.userComponentRegistry.retrieve(l, D);
        M && (d = M.componentFromFramework ? void 0 : M.component, v = M.componentFromFramework ? M.component : void 0);
      };
      if (p != null && m(p), d == null && v == null && i != null && m(i), d && u && !this.agComponentUtils.doesImplementIComponent(d) && (d = this.agComponentUtils.adaptFunction(l, d)), !d && !v) {
        s && console.error("AG Grid: Could not find component " + p + ", did you forget to configure this component?");
        return;
      }
      var w = this.mergeParamsWithApplicationProvidedParams(e, r, o, f), E = d == null, R = d || v;
      return {
        componentFromFramework: E,
        componentClass: R,
        params: w,
        type: r,
        popupFromSelector: y,
        popupPositionFromSelector: C,
        newAgStackInstance: function() {
          return a.newAgStackInstance(R, E, w, r);
        }
      };
    }, t.prototype.getCompKeys = function(e, r, i) {
      var o = this, s = r.propertyName, a, l, u, c, p, d;
      if (e) {
        var v = e, f = v[s + "Selector"], y = f ? f(i) : null, C = function(w, E) {
          var R = function() {
            var M = "AG Grid: As of v27, the property " + s + "Framework is deprecated. The property " + s + " can now be used for JavaScript AND Framework Components.";
            K(function() {
              return console.warn(M);
            }, "UserComponentFactory." + s + "FrameworkDeprecated");
          };
          if (typeof w == "string")
            a = w;
          else if (typeof E == "string")
            R(), a = E;
          else if (w != null && w !== !0) {
            var D = o.getFrameworkOverrides().isFrameworkComponent(w);
            D ? u = w : l = w;
          } else
            E != null && (R(), u = E);
        };
        if (y) {
          if (y.frameworkComponent != null) {
            var m = "AG Grid: As of v27, the return for " + s + "Selector has attributes [component, params] only. The attribute frameworkComponent is deprecated. You should now return back Framework Components using the 'component' attribute and the grid works out if it's a framework component or not.";
            K(function() {
              return console.warn(m);
            }, "UserComponentFactory." + s + "FrameworkSelectorDeprecated"), C(y.frameworkComponent, void 0);
          } else
            C(y.component, void 0);
          c = y.params, p = y.popup, d = y.popupPosition;
        } else
          C(v[s], v[s + "Framework"]);
      }
      return { compName: a, jsComp: l, fwComp: u, paramsFromSelector: c, popupFromSelector: p, popupPositionFromSelector: d };
    }, t.prototype.newAgStackInstance = function(e, r, i, o) {
      var s = o.propertyName, a = !r, l;
      if (a)
        l = new e();
      else {
        var u = this.componentMetadataProvider.retrieve(s);
        l = this.frameworkComponentWrapper.wrap(e, u.mandatoryMethodList, u.optionalMethodList, o);
      }
      var c = this.initComponent(l, i);
      return c == null ? Ge.resolve(l) : c.then(function() {
        return l;
      });
    }, t.prototype.mergeParamsWithApplicationProvidedParams = function(e, r, i, o) {
      o === void 0 && (o = null);
      var s = {
        context: this.gridOptionsService.context,
        columnApi: this.gridOptionsService.columnApi,
        api: this.gridOptionsService.api
      };
      Oe(s, i);
      var a = e, l = a && a[r.propertyName + "Params"];
      if (typeof l == "function") {
        var u = l(i);
        Oe(s, u);
      } else
        typeof l == "object" && Oe(s, l);
      return Oe(s, o), s;
    }, t.prototype.initComponent = function(e, r) {
      if (this.context.createBean(e), e.init != null)
        return e.init(r);
    }, t.prototype.getDefaultFloatingFilterType = function(e) {
      if (e == null)
        return null;
      var r = null, i = this.getCompKeys(e, Gn), o = i.compName, s = i.jsComp, a = i.fwComp;
      if (o)
        r = rf.getFloatingFilterType(o);
      else {
        var l = s == null && a == null && e.filter === !0;
        if (l) {
          var u = N.isRegistered(F.SetFilterModule);
          r = u ? "agSetColumnFloatingFilter" : "agTextColumnFloatingFilter";
        }
      }
      return r;
    }, Wt([
      h("gridOptions")
    ], t.prototype, "gridOptions", void 0), Wt([
      h("agComponentUtils")
    ], t.prototype, "agComponentUtils", void 0), Wt([
      h("componentMetadataProvider")
    ], t.prototype, "componentMetadataProvider", void 0), Wt([
      h("userComponentRegistry")
    ], t.prototype, "userComponentRegistry", void 0), Wt([
      Y("frameworkComponentWrapper")
    ], t.prototype, "frameworkComponentWrapper", void 0), t = Wt([
      A("userComponentFactory")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var qi;
(function(n) {
  n[n.SINGLE_SHEET = 0] = "SINGLE_SHEET", n[n.MULTI_SHEET = 1] = "MULTI_SHEET";
})(qi || (qi = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var sf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Wo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, af = (
  /** @class */
  function(n) {
    sf(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.dragEndFunctions = [], e.dragSources = [], e;
    }
    return t.prototype.removeAllListeners = function() {
      this.dragSources.forEach(this.removeListener.bind(this)), this.dragSources.length = 0;
    }, t.prototype.removeListener = function(e) {
      var r = e.dragSource.eElement, i = e.mouseDownListener;
      if (r.removeEventListener("mousedown", i), e.touchEnabled) {
        var o = e.touchStartListener;
        r.removeEventListener("touchstart", o, { passive: !0 });
      }
    }, t.prototype.removeDragSource = function(e) {
      var r = this.dragSources.find(function(i) {
        return i.dragSource === e;
      });
      r && (this.removeListener(r), ye(this.dragSources, r));
    }, t.prototype.isDragging = function() {
      return this.dragging;
    }, t.prototype.addDragSource = function(e, r) {
      var i = this;
      r === void 0 && (r = !1);
      var o = this.onMouseDown.bind(this, e);
      e.eElement.addEventListener("mousedown", o);
      var s = null, a = this.gridOptionsService.is("suppressTouch");
      r && !a && (s = function(l) {
        ls(l.target) || (l.cancelable && (l.preventDefault(), l.stopPropagation()), i.onTouchStart(e, l));
      }, e.eElement.addEventListener("touchstart", s, { passive: !1 })), this.dragSources.push({
        dragSource: e,
        mouseDownListener: o,
        touchStartListener: s,
        touchEnabled: r
      });
    }, t.prototype.getStartTarget = function() {
      return this.startTarget;
    }, t.prototype.onTouchStart = function(e, r) {
      var i = this;
      this.currentDragParams = e, this.dragging = !1;
      var o = r.touches[0];
      this.touchLastTime = o, this.touchStart = o;
      var s = function(p) {
        return i.onTouchMove(p, e.eElement);
      }, a = function(p) {
        return i.onTouchUp(p, e.eElement);
      }, l = function(p) {
        p.cancelable && p.preventDefault();
      }, u = r.target, c = [
        // Prevents the page document from moving while we are dragging items around.
        // preventDefault needs to be called in the touchmove listener and never inside the
        // touchstart, because using touchstart causes the click event to be cancelled on touch devices.
        { target: this.gridOptionsService.getRootNode(), type: "touchmove", listener: l, options: { passive: !1 } },
        { target: u, type: "touchmove", listener: s, options: { passive: !0 } },
        { target: u, type: "touchend", listener: a, options: { passive: !0 } },
        { target: u, type: "touchcancel", listener: a, options: { passive: !0 } }
      ];
      this.addTemporaryEvents(c), e.dragStartPixels === 0 && this.onCommonMove(o, this.touchStart, e.eElement);
    }, t.prototype.onMouseDown = function(e, r) {
      var i = this, o = r;
      if (!(e.skipMouseEvent && e.skipMouseEvent(r)) && !o._alreadyProcessedByDragService && (o._alreadyProcessedByDragService = !0, r.button === 0)) {
        this.currentDragParams = e, this.dragging = !1, this.mouseStartEvent = r, this.startTarget = r.target;
        var s = function(p) {
          return i.onMouseMove(p, e.eElement);
        }, a = function(p) {
          return i.onMouseUp(p, e.eElement);
        }, l = function(p) {
          return p.preventDefault();
        }, u = this.gridOptionsService.getRootNode(), c = [
          { target: u, type: "mousemove", listener: s },
          { target: u, type: "mouseup", listener: a },
          { target: u, type: "contextmenu", listener: l }
        ];
        this.addTemporaryEvents(c), e.dragStartPixels === 0 && this.onMouseMove(r, e.eElement);
      }
    }, t.prototype.addTemporaryEvents = function(e) {
      e.forEach(function(r) {
        var i = r.target, o = r.type, s = r.listener, a = r.options;
        i.addEventListener(o, s, a);
      }), this.dragEndFunctions.push(function() {
        e.forEach(function(r) {
          var i = r.target, o = r.type, s = r.listener, a = r.options;
          i.removeEventListener(o, s, a);
        });
      });
    }, t.prototype.isEventNearStartEvent = function(e, r) {
      var i = this.currentDragParams.dragStartPixels, o = O(i) ? i : 4;
      return vs(e, r, o);
    }, t.prototype.getFirstActiveTouch = function(e) {
      for (var r = 0; r < e.length; r++)
        if (e[r].identifier === this.touchStart.identifier)
          return e[r];
      return null;
    }, t.prototype.onCommonMove = function(e, r, i) {
      if (!this.dragging) {
        if (!this.dragging && this.isEventNearStartEvent(e, r))
          return;
        this.dragging = !0;
        var o = {
          type: g.EVENT_DRAG_STARTED,
          target: i
        };
        this.eventService.dispatchEvent(o), this.currentDragParams.onDragStart(r), this.currentDragParams.onDragging(r);
      }
      this.currentDragParams.onDragging(e);
    }, t.prototype.onTouchMove = function(e, r) {
      var i = this.getFirstActiveTouch(e.touches);
      i && this.onCommonMove(i, this.touchStart, r);
    }, t.prototype.onMouseMove = function(e, r) {
      (this.gridOptionsService.is("enableCellTextSelection") || ot()) && // The event type can be `mousedown` when `dragStartPixels=0`
      // we should only preventDefault on `mousemove`.
      e.type === "mousemove" && e.cancelable && this.mouseEventService.isEventFromThisGrid(e) && // we should not prevent mouseMove when above a form field
      // as that would prevent the text in the field from being selected
      !this.isOverFormFieldElement(e) && e.preventDefault(), this.onCommonMove(e, this.mouseStartEvent, r);
    }, t.prototype.isOverFormFieldElement = function(e) {
      var r = e.target, i = r == null ? void 0 : r.tagName.toLocaleLowerCase();
      return !!(i != null && i.match("^a$|textarea|input|select|button"));
    }, t.prototype.onTouchUp = function(e, r) {
      var i = this.getFirstActiveTouch(e.changedTouches);
      i || (i = this.touchLastTime), this.onUpCommon(i, r);
    }, t.prototype.onMouseUp = function(e, r) {
      this.onUpCommon(e, r);
    }, t.prototype.onUpCommon = function(e, r) {
      if (this.dragging) {
        this.dragging = !1, this.currentDragParams.onDragStop(e);
        var i = {
          type: g.EVENT_DRAG_STOPPED,
          target: r
        };
        this.eventService.dispatchEvent(i);
      }
      this.mouseStartEvent = null, this.startTarget = null, this.touchStart = null, this.touchLastTime = null, this.currentDragParams = null, this.dragEndFunctions.forEach(function(o) {
        return o();
      }), this.dragEndFunctions.length = 0;
    }, Wo([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), Wo([
      ve
    ], t.prototype, "removeAllListeners", null), t = Wo([
      A("dragService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ut;
(function(n) {
  n[n.Above = 0] = "Above", n[n.Below = 1] = "Below";
})(ut || (ut = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var $;
(function(n) {
  n.EVERYTHING = "group", n.FILTER = "filter", n.SORT = "sort", n.MAP = "map", n.AGGREGATE = "aggregate", n.FILTER_AGGREGATES = "filter_aggregates", n.PIVOT = "pivot", n.NOTHING = "nothing";
})($ || ($ = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var z = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
};
function Lt(n) {
  var t = n, e = t != null && t.getFrameworkComponentInstance != null;
  return e ? t.getFrameworkComponentInstance() : n;
}
var lf = (
  /** @class */
  function() {
    function n() {
      this.detailGridInfoMap = {}, this.destroyCalled = !1;
    }
    return n.prototype.registerOverlayWrapperComp = function(t) {
      this.overlayWrapperComp = t;
    }, n.prototype.registerSideBarComp = function(t) {
      this.sideBarComp = t;
    }, n.prototype.init = function() {
      var t = this;
      switch (this.rowModel.getType()) {
        case "clientSide":
          this.clientSideRowModel = this.rowModel;
          break;
        case "infinite":
          this.infiniteRowModel = this.rowModel;
          break;
        case "serverSide":
          this.serverSideRowModel = this.rowModel;
          break;
      }
      this.ctrlsService.whenReady(function() {
        t.gridBodyCtrl = t.ctrlsService.getGridBodyCtrl();
      });
    }, n.prototype.__getAlignedGridService = function() {
      return this.alignedGridsService;
    }, n.prototype.__getContext = function() {
      return this.context;
    }, n.prototype.getSetterMethod = function(t) {
      return "set" + t.charAt(0).toUpperCase() + t.substring(1);
    }, n.prototype.__setProperty = function(t, e) {
      this.gridOptionsService.set(t, e);
      var r = this.getSetterMethod(t), i = this;
      i[r] && i[r](e);
    }, n.prototype.addDetailGridInfo = function(t, e) {
      this.detailGridInfoMap[t] = e;
    }, n.prototype.removeDetailGridInfo = function(t) {
      this.detailGridInfoMap[t] = void 0;
    }, n.prototype.getDetailGridInfo = function(t) {
      return this.detailGridInfoMap[t];
    }, n.prototype.forEachDetailGridInfo = function(t) {
      var e = 0;
      J(this.detailGridInfoMap, function(r, i) {
        O(i) && (t(i, e), e++);
      });
    }, n.prototype.getDataAsCsv = function(t) {
      if (N.assertRegistered(F.CsvExportModule, "api.getDataAsCsv"))
        return this.csvCreator.getDataAsCsv(t);
    }, n.prototype.exportDataAsCsv = function(t) {
      N.assertRegistered(F.CsvExportModule, "api.exportDataAsCSv") && this.csvCreator.exportDataAsCsv(t);
    }, n.prototype.getExcelExportMode = function(t) {
      var e = this.gridOptionsService.get("defaultExcelExportParams"), r = Object.assign({ exportMode: "xlsx" }, e, t);
      return r.exportMode;
    }, n.prototype.assertNotExcelMultiSheet = function(t, e) {
      if (!N.assertRegistered(F.ExcelExportModule, "api." + t))
        return !1;
      var r = this.getExcelExportMode(e);
      return this.excelCreator.getFactoryMode(r) === qi.MULTI_SHEET ? (console.warn("AG Grid: The Excel Exporter is currently on Multi Sheet mode. End that operation by calling 'api.getMultipleSheetAsExcel()' or 'api.exportMultipleSheetsAsExcel()'"), !1) : !0;
    }, n.prototype.getDataAsExcel = function(t) {
      if (this.assertNotExcelMultiSheet("getDataAsExcel", t))
        return this.excelCreator.getDataAsExcel(t);
    }, n.prototype.exportDataAsExcel = function(t) {
      this.assertNotExcelMultiSheet("exportDataAsExcel", t) && this.excelCreator.exportDataAsExcel(t);
    }, n.prototype.getSheetDataForExcel = function(t) {
      if (N.assertRegistered(F.ExcelExportModule, "api.getSheetDataForExcel")) {
        var e = this.getExcelExportMode(t);
        return this.excelCreator.setFactoryMode(qi.MULTI_SHEET, e), this.excelCreator.getSheetDataForExcel(t);
      }
    }, n.prototype.getMultipleSheetsAsExcel = function(t) {
      if (N.assertRegistered(F.ExcelExportModule, "api.getMultipleSheetsAsExcel"))
        return this.excelCreator.getMultipleSheetsAsExcel(t);
    }, n.prototype.exportMultipleSheetsAsExcel = function(t) {
      if (N.assertRegistered(F.ExcelExportModule, "api.exportMultipleSheetsAsExcel"))
        return this.excelCreator.exportMultipleSheetsAsExcel(t);
    }, n.prototype.setGridAriaProperty = function(t, e) {
      if (t) {
        var r = this.ctrlsService.getGridBodyCtrl().getGui(), i = "aria-" + t;
        e === null ? r.removeAttribute(i) : r.setAttribute(i, e);
      }
    }, n.prototype.logMissingRowModel = function(t) {
      for (var e = [], r = 1; r < arguments.length; r++)
        e[r - 1] = arguments[r];
      console.error("AG Grid: api." + t + " can only be called when gridOptions.rowModelType is " + e.join(" or "));
    }, n.prototype.setServerSideDatasource = function(t) {
      this.serverSideRowModel ? this.serverSideRowModel.setDatasource(t) : this.logMissingRowModel("setServerSideDatasource", "serverSide");
    }, n.prototype.setCacheBlockSize = function(t) {
      this.serverSideRowModel ? (this.gridOptionsService.set("cacheBlockSize", t), this.serverSideRowModel.resetRootStore()) : this.logMissingRowModel("setCacheBlockSize", "serverSide");
    }, n.prototype.setDatasource = function(t) {
      this.gridOptionsService.isRowModelType("infinite") ? this.rowModel.setDatasource(t) : this.logMissingRowModel("setDatasource", "infinite");
    }, n.prototype.setViewportDatasource = function(t) {
      this.gridOptionsService.isRowModelType("viewport") ? this.rowModel.setViewportDatasource(t) : this.logMissingRowModel("setViewportDatasource", "viewport");
    }, n.prototype.setRowData = function(t) {
      var e = this.immutableService == null;
      if (e) {
        this.logMissingRowModel("setRowData", "clientSide");
        return;
      }
      this.immutableService.isActive() ? this.immutableService.setRowData(t) : (this.selectionService.reset(), this.clientSideRowModel.setRowData(t));
    }, n.prototype.setPinnedTopRowData = function(t) {
      this.pinnedRowModel.setPinnedTopRowData(t);
    }, n.prototype.setPinnedBottomRowData = function(t) {
      this.pinnedRowModel.setPinnedBottomRowData(t);
    }, n.prototype.getPinnedTopRowCount = function() {
      return this.pinnedRowModel.getPinnedTopRowCount();
    }, n.prototype.getPinnedBottomRowCount = function() {
      return this.pinnedRowModel.getPinnedBottomRowCount();
    }, n.prototype.getPinnedTopRow = function(t) {
      return this.pinnedRowModel.getPinnedTopRow(t);
    }, n.prototype.getPinnedBottomRow = function(t) {
      return this.pinnedRowModel.getPinnedBottomRow(t);
    }, n.prototype.setColumnDefs = function(t, e) {
      e === void 0 && (e = "api"), this.columnModel.setColumnDefs(t, e), this.gridOptionsService.set("columnDefs", t, !0, { source: e });
    }, n.prototype.setAutoGroupColumnDef = function(t, e) {
      e === void 0 && (e = "api"), this.gridOptionsService.set("autoGroupColumnDef", t, !0, { source: e });
    }, n.prototype.setDefaultColDef = function(t, e) {
      e === void 0 && (e = "api"), this.gridOptionsService.set("defaultColDef", t, !0, { source: e });
    }, n.prototype.setColumnTypes = function(t, e) {
      e === void 0 && (e = "api"), this.gridOptionsService.set("columnTypes", t, !0, { source: e });
    }, n.prototype.expireValueCache = function() {
      this.valueCache.expire();
    }, n.prototype.getVerticalPixelRange = function() {
      return this.gridBodyCtrl.getScrollFeature().getVScrollPosition();
    }, n.prototype.getHorizontalPixelRange = function() {
      return this.gridBodyCtrl.getScrollFeature().getHScrollPosition();
    }, n.prototype.setAlwaysShowHorizontalScroll = function(t) {
      this.gridOptionsService.set("alwaysShowHorizontalScroll", t);
    }, n.prototype.setAlwaysShowVerticalScroll = function(t) {
      this.gridOptionsService.set("alwaysShowVerticalScroll", t);
    }, n.prototype.refreshCells = function(t) {
      t === void 0 && (t = {}), this.rowRenderer.refreshCells(t);
    }, n.prototype.flashCells = function(t) {
      t === void 0 && (t = {}), this.rowRenderer.flashCells(t);
    }, n.prototype.redrawRows = function(t) {
      t === void 0 && (t = {});
      var e = t ? t.rowNodes : void 0;
      this.rowRenderer.redrawRows(e);
    }, n.prototype.setFunctionsReadOnly = function(t) {
      this.gridOptionsService.set("functionsReadOnly", t);
    }, n.prototype.refreshHeader = function() {
      this.ctrlsService.getHeaderRowContainerCtrls().forEach(function(t) {
        return t.refresh();
      });
    }, n.prototype.isAnyFilterPresent = function() {
      return this.filterManager.isAnyFilterPresent();
    }, n.prototype.isColumnFilterPresent = function() {
      return this.filterManager.isColumnFilterPresent() || this.filterManager.isAggregateFilterPresent();
    }, n.prototype.isQuickFilterPresent = function() {
      return this.filterManager.isQuickFilterPresent();
    }, n.prototype.getModel = function() {
      return this.rowModel;
    }, n.prototype.setRowNodeExpanded = function(t, e, r) {
      t && (r && t.parent && t.parent.level !== -1 && this.setRowNodeExpanded(t.parent, e, r), t.setExpanded(e));
    }, n.prototype.onGroupExpandedOrCollapsed = function() {
      if (x(this.clientSideRowModel)) {
        this.logMissingRowModel("onGroupExpandedOrCollapsed", "clientSide");
        return;
      }
      this.clientSideRowModel.refreshModel({ step: $.MAP });
    }, n.prototype.refreshClientSideRowModel = function(t) {
      if (x(this.clientSideRowModel)) {
        this.logMissingRowModel("refreshClientSideRowModel", "clientSide");
        return;
      }
      this.clientSideRowModel.refreshModel(t);
    }, n.prototype.isAnimationFrameQueueEmpty = function() {
      return this.animationFrameService.isQueueEmpty();
    }, n.prototype.flushAllAnimationFrames = function() {
      this.animationFrameService.flushAllFrames();
    }, n.prototype.getRowNode = function(t) {
      return this.rowModel.getRowNode(t);
    }, n.prototype.getSizesForCurrentTheme = function() {
      return {
        rowHeight: this.gridOptionsService.getRowHeightAsNumber(),
        headerHeight: this.columnModel.getHeaderHeight()
      };
    }, n.prototype.expandAll = function() {
      this.clientSideRowModel ? this.clientSideRowModel.expandOrCollapseAll(!0) : this.serverSideRowModel ? this.serverSideRowModel.expandAll(!0) : this.logMissingRowModel("expandAll", "clientSide", "serverSide");
    }, n.prototype.collapseAll = function() {
      this.clientSideRowModel ? this.clientSideRowModel.expandOrCollapseAll(!1) : this.serverSideRowModel ? this.serverSideRowModel.expandAll(!1) : this.logMissingRowModel("expandAll", "clientSide", "serverSide");
    }, n.prototype.addRenderedRowListener = function(t, e, r) {
      this.rowRenderer.addRenderedRowListener(t, e, r);
    }, n.prototype.getQuickFilter = function() {
      return this.gridOptionsService.get("quickFilterText");
    }, n.prototype.setQuickFilter = function(t) {
      this.gridOptionsService.set("quickFilterText", t);
    }, n.prototype.setExcludeHiddenColumnsFromQuickFilter = function(t) {
      this.gridOptionsService.set("excludeHiddenColumnsFromQuickFilter", t);
    }, n.prototype.selectAll = function(t) {
      t === void 0 && (t = "apiSelectAll"), this.selectionService.selectAllRowNodes({ source: t });
    }, n.prototype.deselectAll = function(t) {
      t === void 0 && (t = "apiSelectAll"), this.selectionService.deselectAllRowNodes({ source: t });
    }, n.prototype.selectAllFiltered = function(t) {
      t === void 0 && (t = "apiSelectAllFiltered"), this.selectionService.selectAllRowNodes({ source: t, justFiltered: !0 });
    }, n.prototype.deselectAllFiltered = function(t) {
      t === void 0 && (t = "apiSelectAllFiltered"), this.selectionService.deselectAllRowNodes({ source: t, justFiltered: !0 });
    }, n.prototype.getServerSideSelectionState = function() {
      return x(this.serverSideRowModel) ? (this.logMissingRowModel("getServerSideSelectionState", "serverSide"), null) : this.selectionService.getServerSideSelectionState();
    }, n.prototype.setServerSideSelectionState = function(t) {
      if (x(this.serverSideRowModel)) {
        this.logMissingRowModel("setServerSideSelectionState", "serverSide");
        return;
      }
      this.selectionService.setServerSideSelectionState(t);
    }, n.prototype.selectAllOnCurrentPage = function(t) {
      t === void 0 && (t = "apiSelectAllCurrentPage"), this.selectionService.selectAllRowNodes({ source: t, justCurrentPage: !0 });
    }, n.prototype.deselectAllOnCurrentPage = function(t) {
      t === void 0 && (t = "apiSelectAllCurrentPage"), this.selectionService.deselectAllRowNodes({ source: t, justCurrentPage: !0 });
    }, n.prototype.sizeColumnsToFit = function(t) {
      this.gridBodyCtrl.sizeColumnsToFit(t);
    }, n.prototype.showLoadingOverlay = function() {
      this.overlayWrapperComp.showLoadingOverlay();
    }, n.prototype.showNoRowsOverlay = function() {
      this.overlayWrapperComp.showNoRowsOverlay();
    }, n.prototype.hideOverlay = function() {
      this.overlayWrapperComp.hideOverlay();
    }, n.prototype.getSelectedNodes = function() {
      return this.selectionService.getSelectedNodes();
    }, n.prototype.getSelectedRows = function() {
      return this.selectionService.getSelectedRows();
    }, n.prototype.getBestCostNodeSelection = function() {
      if (x(this.clientSideRowModel)) {
        this.logMissingRowModel("getBestCostNodeSelection", "clientSide");
        return;
      }
      return this.selectionService.getBestCostNodeSelection();
    }, n.prototype.getRenderedNodes = function() {
      return this.rowRenderer.getRenderedNodes();
    }, n.prototype.ensureColumnVisible = function(t, e) {
      e === void 0 && (e = "auto"), this.gridBodyCtrl.getScrollFeature().ensureColumnVisible(t, e);
    }, n.prototype.ensureIndexVisible = function(t, e) {
      this.gridBodyCtrl.getScrollFeature().ensureIndexVisible(t, e);
    }, n.prototype.ensureNodeVisible = function(t, e) {
      e === void 0 && (e = null), this.gridBodyCtrl.getScrollFeature().ensureNodeVisible(t, e);
    }, n.prototype.forEachLeafNode = function(t) {
      if (x(this.clientSideRowModel)) {
        this.logMissingRowModel("forEachLeafNode", "clientSide");
        return;
      }
      this.clientSideRowModel.forEachLeafNode(t);
    }, n.prototype.forEachNode = function(t, e) {
      this.rowModel.forEachNode(t, e);
    }, n.prototype.forEachNodeAfterFilter = function(t) {
      if (x(this.clientSideRowModel)) {
        this.logMissingRowModel("forEachNodeAfterFilter", "clientSide");
        return;
      }
      this.clientSideRowModel.forEachNodeAfterFilter(t);
    }, n.prototype.forEachNodeAfterFilterAndSort = function(t) {
      if (x(this.clientSideRowModel)) {
        this.logMissingRowModel("forEachNodeAfterFilterAndSort", "clientSide");
        return;
      }
      this.clientSideRowModel.forEachNodeAfterFilterAndSort(t);
    }, n.prototype.getFilterInstance = function(t, e) {
      var r = this.getFilterInstanceImpl(t, function(o) {
        if (e) {
          var s = Lt(o);
          e(s);
        }
      }), i = Lt(r);
      return i;
    }, n.prototype.getFilterInstanceImpl = function(t, e) {
      var r = this.columnModel.getPrimaryColumn(t);
      if (r) {
        var i = this.filterManager.getFilterComponent(r, "NO_UI"), o = i && i.resolveNow(null, function(s) {
          return s;
        });
        return o ? setTimeout(e, 0, o) : i && i.then(function(s) {
          e(s);
        }), o;
      }
    }, n.prototype.destroyFilter = function(t) {
      var e = this.columnModel.getPrimaryColumn(t);
      if (e)
        return this.filterManager.destroyFilter(e, "api");
    }, n.prototype.getStatusPanel = function(t) {
      if (N.assertRegistered(F.StatusBarModule, "api.getStatusPanel")) {
        var e = this.statusBarService.getStatusPanel(t);
        return Lt(e);
      }
    }, n.prototype.getColumnDef = function(t) {
      var e = this.columnModel.getPrimaryColumn(t);
      return e ? e.getColDef() : null;
    }, n.prototype.getColumnDefs = function() {
      return this.columnModel.getColumnDefs();
    }, n.prototype.onFilterChanged = function() {
      this.filterManager.onFilterChanged();
    }, n.prototype.onSortChanged = function() {
      this.sortController.onSortChanged("api");
    }, n.prototype.setFilterModel = function(t) {
      this.filterManager.setFilterModel(t);
    }, n.prototype.getFilterModel = function() {
      return this.filterManager.getFilterModel();
    }, n.prototype.getFocusedCell = function() {
      return this.focusService.getFocusedCell();
    }, n.prototype.clearFocusedCell = function() {
      return this.focusService.clearFocusedCell();
    }, n.prototype.setFocusedCell = function(t, e, r) {
      this.focusService.setFocusedCell({ rowIndex: t, column: e, rowPinned: r, forceBrowserFocus: !0 });
    }, n.prototype.setSuppressRowDrag = function(t) {
      this.gridOptionsService.set("suppressRowDrag", t);
    }, n.prototype.setSuppressMoveWhenRowDragging = function(t) {
      this.gridOptionsService.set("suppressMoveWhenRowDragging", t);
    }, n.prototype.setSuppressRowClickSelection = function(t) {
      this.gridOptionsService.set("suppressRowClickSelection", t);
    }, n.prototype.addRowDropZone = function(t) {
      this.gridBodyCtrl.getRowDragFeature().addRowDropZone(t);
    }, n.prototype.removeRowDropZone = function(t) {
      var e = this.dragAndDropService.findExternalZone(t);
      e && this.dragAndDropService.removeDropTarget(e);
    }, n.prototype.getRowDropZoneParams = function(t) {
      return this.gridBodyCtrl.getRowDragFeature().getRowDropZone(t);
    }, n.prototype.setHeaderHeight = function(t) {
      this.gridOptionsService.set("headerHeight", t);
    }, n.prototype.setDomLayout = function(t) {
      if (!this.clientSideRowModel && t === "autoHeight" && !this.gridOptionsService.is("pagination")) {
        console.error("AG Grid: domLayout can only be set to 'autoHeight' when using the client side row model or when using pagination.");
        return;
      }
      this.gridOptionsService.set("domLayout", t);
    }, n.prototype.setEnableCellTextSelection = function(t) {
      this.gridBodyCtrl.setCellTextSelection(t);
    }, n.prototype.setFillHandleDirection = function(t) {
      this.gridOptionsService.set("fillHandleDirection", t);
    }, n.prototype.setGroupHeaderHeight = function(t) {
      this.gridOptionsService.set("groupHeaderHeight", t);
    }, n.prototype.setFloatingFiltersHeight = function(t) {
      this.gridOptionsService.set("floatingFiltersHeight", t);
    }, n.prototype.setPivotHeaderHeight = function(t) {
      this.gridOptionsService.set("pivotHeaderHeight", t);
    }, n.prototype.setPivotGroupHeaderHeight = function(t) {
      this.gridOptionsService.set("pivotGroupHeaderHeight", t);
    }, n.prototype.setPivotMode = function(t) {
      this.columnModel.setPivotMode(t);
    }, n.prototype.setAnimateRows = function(t) {
      this.gridOptionsService.set("animateRows", t);
    }, n.prototype.setIsExternalFilterPresent = function(t) {
      this.gridOptionsService.set("isExternalFilterPresent", t);
    }, n.prototype.setDoesExternalFilterPass = function(t) {
      this.gridOptionsService.set("doesExternalFilterPass", t);
    }, n.prototype.setNavigateToNextCell = function(t) {
      this.gridOptionsService.set("navigateToNextCell", t);
    }, n.prototype.setTabToNextCell = function(t) {
      this.gridOptionsService.set("tabToNextCell", t);
    }, n.prototype.setTabToNextHeader = function(t) {
      this.gridOptionsService.set("tabToNextHeader", t);
    }, n.prototype.setNavigateToNextHeader = function(t) {
      this.gridOptionsService.set("navigateToNextHeader", t);
    }, n.prototype.setRowGroupPanelShow = function(t) {
      this.gridOptionsService.set("rowGroupPanelShow", t);
    }, n.prototype.setGroupRowAggNodes = function(t) {
      ae("27.2", "setGroupRowAggNodes", "setGetGroupRowAgg"), this.gridOptionsService.set("groupRowAggNodes", t);
    }, n.prototype.setGetGroupRowAgg = function(t) {
      this.gridOptionsService.set("getGroupRowAgg", t);
    }, n.prototype.setGetBusinessKeyForNode = function(t) {
      this.gridOptionsService.set("getBusinessKeyForNode", t);
    }, n.prototype.setGetChildCount = function(t) {
      this.gridOptionsService.set("getChildCount", t);
    }, n.prototype.setProcessRowPostCreate = function(t) {
      this.gridOptionsService.set("processRowPostCreate", t);
    }, n.prototype.setGetRowNodeId = function(t) {
      ae("27.1", "setGetRowNodeId", "setGetRowId"), this.gridOptionsService.set("getRowNodeId", t);
    }, n.prototype.setGetRowId = function(t) {
      this.gridOptionsService.set("getRowId", t);
    }, n.prototype.setGetRowClass = function(t) {
      this.gridOptionsService.set("getRowClass", t);
    }, n.prototype.setIsFullWidthCell = function(t) {
      ae("27.2", "setIsFullWidthCell", "setIsFullWidthRow"), this.gridOptionsService.set("isFullWidthCell", t);
    }, n.prototype.setIsFullWidthRow = function(t) {
      this.gridOptionsService.set("isFullWidthRow", t);
    }, n.prototype.setIsRowSelectable = function(t) {
      this.gridOptionsService.set("isRowSelectable", t);
    }, n.prototype.setIsRowMaster = function(t) {
      this.gridOptionsService.set("isRowMaster", t);
    }, n.prototype.setPostSort = function(t) {
      ae("27.2", "setPostSort", "setPostSortRows"), this.gridOptionsService.set("postSort", t);
    }, n.prototype.setPostSortRows = function(t) {
      this.gridOptionsService.set("postSortRows", t);
    }, n.prototype.setGetDocument = function(t) {
      this.gridOptionsService.set("getDocument", t);
    }, n.prototype.setGetContextMenuItems = function(t) {
      this.gridOptionsService.set("getContextMenuItems", t);
    }, n.prototype.setGetMainMenuItems = function(t) {
      this.gridOptionsService.set("getMainMenuItems", t);
    }, n.prototype.setProcessCellForClipboard = function(t) {
      this.gridOptionsService.set("processCellForClipboard", t);
    }, n.prototype.setSendToClipboard = function(t) {
      this.gridOptionsService.set("sendToClipboard", t);
    }, n.prototype.setProcessCellFromClipboard = function(t) {
      this.gridOptionsService.set("processCellFromClipboard", t);
    }, n.prototype.setProcessSecondaryColDef = function(t) {
      ae("28.0", "setProcessSecondaryColDef", "setProcessPivotResultColDef"), this.setProcessPivotResultColDef(t);
    }, n.prototype.setProcessSecondaryColGroupDef = function(t) {
      ae("28.0", "setProcessSecondaryColGroupDef", "setProcessPivotResultColGroupDef"), this.setProcessPivotResultColGroupDef(t);
    }, n.prototype.setProcessPivotResultColDef = function(t) {
      this.gridOptionsService.set("processPivotResultColDef", t);
    }, n.prototype.setProcessPivotResultColGroupDef = function(t) {
      this.gridOptionsService.set("processPivotResultColGroupDef", t);
    }, n.prototype.setPostProcessPopup = function(t) {
      this.gridOptionsService.set("postProcessPopup", t);
    }, n.prototype.setDefaultGroupOrderComparator = function(t) {
      ae("27.2", "setDefaultGroupOrderComparator", "setInitialGroupOrderComparator"), this.gridOptionsService.set("defaultGroupOrderComparator", t);
    }, n.prototype.setInitialGroupOrderComparator = function(t) {
      this.gridOptionsService.set("initialGroupOrderComparator", t);
    }, n.prototype.setGetChartToolbarItems = function(t) {
      this.gridOptionsService.set("getChartToolbarItems", t);
    }, n.prototype.setPaginationNumberFormatter = function(t) {
      this.gridOptionsService.set("paginationNumberFormatter", t);
    }, n.prototype.setGetServerSideStoreParams = function(t) {
      ae("28.0", "setGetServerSideStoreParams", "setGetServerSideGroupLevelParams"), this.setGetServerSideGroupLevelParams(t);
    }, n.prototype.setGetServerSideGroupLevelParams = function(t) {
      this.gridOptionsService.set("getServerSideGroupLevelParams", t);
    }, n.prototype.setIsServerSideGroupOpenByDefault = function(t) {
      this.gridOptionsService.set("isServerSideGroupOpenByDefault", t);
    }, n.prototype.setIsApplyServerSideTransaction = function(t) {
      this.gridOptionsService.set("isApplyServerSideTransaction", t);
    }, n.prototype.setIsServerSideGroup = function(t) {
      this.gridOptionsService.set("isServerSideGroup", t);
    }, n.prototype.setGetServerSideGroupKey = function(t) {
      this.gridOptionsService.set("getServerSideGroupKey", t);
    }, n.prototype.setGetRowStyle = function(t) {
      this.gridOptionsService.set("getRowStyle", t);
    }, n.prototype.setGetRowHeight = function(t) {
      this.gridOptionsService.set("getRowHeight", t);
    }, n.prototype.assertSideBarLoaded = function(t) {
      return N.assertRegistered(F.SideBarModule, "api." + t);
    }, n.prototype.isSideBarVisible = function() {
      return this.assertSideBarLoaded("isSideBarVisible") && this.sideBarComp.isDisplayed();
    }, n.prototype.setSideBarVisible = function(t) {
      this.assertSideBarLoaded("setSideBarVisible") && this.sideBarComp.setDisplayed(t);
    }, n.prototype.setSideBarPosition = function(t) {
      this.assertSideBarLoaded("setSideBarPosition") && this.sideBarComp.setSideBarPosition(t);
    }, n.prototype.openToolPanel = function(t) {
      this.assertSideBarLoaded("openToolPanel") && this.sideBarComp.openToolPanel(t, "api");
    }, n.prototype.closeToolPanel = function() {
      this.assertSideBarLoaded("closeToolPanel") && this.sideBarComp.close("api");
    }, n.prototype.getOpenedToolPanel = function() {
      return this.assertSideBarLoaded("getOpenedToolPanel") ? this.sideBarComp.openedItem() : null;
    }, n.prototype.refreshToolPanel = function() {
      this.assertSideBarLoaded("refreshToolPanel") && this.sideBarComp.refresh();
    }, n.prototype.isToolPanelShowing = function() {
      return this.assertSideBarLoaded("isToolPanelShowing") && this.sideBarComp.isToolPanelShowing();
    }, n.prototype.getToolPanelInstance = function(t) {
      if (this.assertSideBarLoaded("getToolPanelInstance")) {
        var e = this.sideBarComp.getToolPanelInstance(t);
        return Lt(e);
      }
    }, n.prototype.getSideBar = function() {
      if (this.assertSideBarLoaded("getSideBar"))
        return this.sideBarComp.getDef();
    }, n.prototype.setSideBar = function(t) {
      this.gridOptionsService.set("sideBar", t);
    }, n.prototype.setSuppressClipboardPaste = function(t) {
      this.gridOptionsService.set("suppressClipboardPaste", t);
    }, n.prototype.resetRowHeights = function() {
      if (O(this.clientSideRowModel)) {
        if (this.columnModel.isAutoRowHeightActive()) {
          console.warn("AG Grid: calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.");
          return;
        }
        this.clientSideRowModel.resetRowHeights();
      }
    }, n.prototype.setGroupRemoveSingleChildren = function(t) {
      this.gridOptionsService.set("groupRemoveSingleChildren", t);
    }, n.prototype.setGroupRemoveLowestSingleChildren = function(t) {
      this.gridOptionsService.set("groupRemoveLowestSingleChildren", t);
    }, n.prototype.setGroupDisplayType = function(t) {
      this.gridOptionsService.set("groupDisplayType", t);
    }, n.prototype.setRowClass = function(t) {
      this.gridOptionsService.set("rowClass", t);
    }, n.prototype.setDeltaSort = function(t) {
      this.gridOptionsService.set("deltaSort", t);
    }, n.prototype.setRowCount = function(t, e) {
      if (this.serverSideRowModel) {
        if (this.columnModel.isRowGroupEmpty()) {
          this.serverSideRowModel.setRowCount(t, e);
          return;
        }
        console.error("AG Grid: setRowCount cannot be used while using row grouping.");
        return;
      }
      if (this.infiniteRowModel) {
        this.infiniteRowModel.setRowCount(t, e);
        return;
      }
      this.logMissingRowModel("setRowCount", "infinite", "serverSide");
    }, n.prototype.onRowHeightChanged = function() {
      this.clientSideRowModel ? this.clientSideRowModel.onRowHeightChanged() : this.serverSideRowModel && this.serverSideRowModel.onRowHeightChanged();
    }, n.prototype.getValue = function(t, e) {
      var r = this.columnModel.getPrimaryColumn(t);
      return x(r) && (r = this.columnModel.getGridColumn(t)), x(r) ? null : this.valueService.getValue(r, e);
    }, n.prototype.addEventListener = function(t, e) {
      var r = this.gridOptionsService.useAsyncEvents();
      this.eventService.addEventListener(t, e, r);
    }, n.prototype.addGlobalListener = function(t) {
      var e = this.gridOptionsService.useAsyncEvents();
      this.eventService.addGlobalListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      var r = this.gridOptionsService.useAsyncEvents();
      this.eventService.removeEventListener(t, e, r);
    }, n.prototype.removeGlobalListener = function(t) {
      var e = this.gridOptionsService.useAsyncEvents();
      this.eventService.removeGlobalListener(t, e);
    }, n.prototype.dispatchEvent = function(t) {
      this.eventService.dispatchEvent(t);
    }, n.prototype.destroy = function() {
      if (!this.destroyCalled) {
        this.destroyCalled = !0;
        var t = this.ctrlsService.getGridCtrl();
        t && t.destroyGridUi(), this.context.destroy();
      }
    }, n.prototype.cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid = function() {
      setTimeout(Qa.bind(window, this, "Grid API"), 100);
    }, n.prototype.warnIfDestroyed = function(t) {
      return this.destroyCalled && console.warn("AG Grid: Grid API method " + t + " was called on a grid that was destroyed."), this.destroyCalled;
    }, n.prototype.resetQuickFilter = function() {
      this.warnIfDestroyed("resetQuickFilter") || this.filterManager.resetQuickFilterCache();
    }, n.prototype.getCellRanges = function() {
      return this.rangeService ? this.rangeService.getCellRanges() : (N.assertRegistered(F.RangeSelectionModule, "api.getCellRanges"), null);
    }, n.prototype.addCellRange = function(t) {
      if (this.rangeService) {
        this.rangeService.addCellRange(t);
        return;
      }
      N.assertRegistered(F.RangeSelectionModule, "api.addCellRange");
    }, n.prototype.clearRangeSelection = function() {
      this.rangeService && this.rangeService.removeAllCellRanges(), N.assertRegistered(F.RangeSelectionModule, "gridApi.clearRangeSelection");
    }, n.prototype.undoCellEditing = function() {
      this.undoRedoService.undo("api");
    }, n.prototype.redoCellEditing = function() {
      this.undoRedoService.redo("api");
    }, n.prototype.getCurrentUndoSize = function() {
      return this.undoRedoService.getCurrentUndoStackSize();
    }, n.prototype.getCurrentRedoSize = function() {
      return this.undoRedoService.getCurrentRedoStackSize();
    }, n.prototype.getChartModels = function() {
      if (N.assertRegistered(F.GridChartsModule, "api.getChartModels"))
        return this.chartService.getChartModels();
    }, n.prototype.getChartRef = function(t) {
      if (N.assertRegistered(F.GridChartsModule, "api.getChartRef"))
        return this.chartService.getChartRef(t);
    }, n.prototype.getChartImageDataURL = function(t) {
      if (N.assertRegistered(F.GridChartsModule, "api.getChartImageDataURL"))
        return this.chartService.getChartImageDataURL(t);
    }, n.prototype.downloadChart = function(t) {
      if (N.assertRegistered(F.GridChartsModule, "api.downloadChart"))
        return this.chartService.downloadChart(t);
    }, n.prototype.openChartToolPanel = function(t) {
      if (N.assertRegistered(F.GridChartsModule, "api.openChartToolPanel"))
        return this.chartService.openChartToolPanel(t);
    }, n.prototype.closeChartToolPanel = function(t) {
      if (N.assertRegistered(F.GridChartsModule, "api.closeChartToolPanel"))
        return this.chartService.closeChartToolPanel(t.chartId);
    }, n.prototype.createRangeChart = function(t) {
      if (N.assertRegistered(F.GridChartsModule, "api.createRangeChart"))
        return this.chartService.createRangeChart(t);
    }, n.prototype.createCrossFilterChart = function(t) {
      if (N.assertRegistered(F.GridChartsModule, "api.createCrossFilterChart"))
        return this.chartService.createCrossFilterChart(t);
    }, n.prototype.restoreChart = function(t, e) {
      if (N.assertRegistered(F.GridChartsModule, "api.restoreChart"))
        return this.chartService.restoreChart(t, e);
    }, n.prototype.createPivotChart = function(t) {
      if (N.assertRegistered(F.GridChartsModule, "api.createPivotChart"))
        return this.chartService.createPivotChart(t);
    }, n.prototype.copyToClipboard = function(t) {
      N.assertRegistered(F.ClipboardModule, "api.copyToClipboard") && this.clipboardService.copyToClipboard(t);
    }, n.prototype.cutToClipboard = function(t) {
      N.assertRegistered(F.ClipboardModule, "api.cutToClipboard") && this.clipboardService.cutToClipboard(t);
    }, n.prototype.copySelectedRowsToClipboard = function(t) {
      N.assertRegistered(F.ClipboardModule, "api.copySelectedRowsToClipboard") && this.clipboardService.copySelectedRowsToClipboard(t);
    }, n.prototype.copySelectedRangeToClipboard = function(t) {
      N.assertRegistered(F.ClipboardModule, "api.copySelectedRangeToClipboard") && this.clipboardService.copySelectedRangeToClipboard(t);
    }, n.prototype.copySelectedRangeDown = function() {
      N.assertRegistered(F.ClipboardModule, "api.copySelectedRangeDown") && this.clipboardService.copyRangeDown();
    }, n.prototype.showColumnMenuAfterButtonClick = function(t, e) {
      var r = this.columnModel.getGridColumn(t);
      this.menuFactory.showMenuAfterButtonClick(r, e, "columnMenu");
    }, n.prototype.showColumnMenuAfterMouseClick = function(t, e) {
      var r = this.columnModel.getGridColumn(t);
      if (r || (r = this.columnModel.getPrimaryColumn(t)), !r) {
        console.error("AG Grid: column '" + t + "' not found");
        return;
      }
      this.menuFactory.showMenuAfterMouseEvent(r, e);
    }, n.prototype.hidePopupMenu = function() {
      this.contextMenuFactory && this.contextMenuFactory.hideActiveMenu(), this.menuFactory.hideActiveMenu();
    }, n.prototype.setPopupParent = function(t) {
      this.gridOptionsService.set("popupParent", t);
    }, n.prototype.tabToNextCell = function(t) {
      return this.navigationService.tabToNextCell(!1, t);
    }, n.prototype.tabToPreviousCell = function(t) {
      return this.navigationService.tabToNextCell(!0, t);
    }, n.prototype.getCellRendererInstances = function(t) {
      t === void 0 && (t = {});
      var e = this.rowRenderer.getCellRendererInstances(t), r = e.map(Lt);
      return r;
    }, n.prototype.getCellEditorInstances = function(t) {
      t === void 0 && (t = {});
      var e = this.rowRenderer.getCellEditorInstances(t), r = e.map(Lt);
      return r;
    }, n.prototype.getEditingCells = function() {
      return this.rowRenderer.getEditingCells();
    }, n.prototype.stopEditing = function(t) {
      t === void 0 && (t = !1), this.rowRenderer.stopEditing(t);
    }, n.prototype.startEditingCell = function(t) {
      var e = this.columnModel.getGridColumn(t.colKey);
      if (!e) {
        console.warn("AG Grid: no column found for " + t.colKey);
        return;
      }
      var r = {
        rowIndex: t.rowIndex,
        rowPinned: t.rowPinned || null,
        column: e
      }, i = t.rowPinned == null;
      i && this.gridBodyCtrl.getScrollFeature().ensureIndexVisible(t.rowIndex);
      var o = this.navigationService.getCellByPosition(r);
      o && o.startRowOrCellEdit(t.key, t.charPress);
    }, n.prototype.addAggFunc = function(t, e) {
      this.aggFuncService && this.aggFuncService.addAggFunc(t, e);
    }, n.prototype.addAggFuncs = function(t) {
      this.aggFuncService && this.aggFuncService.addAggFuncs(t);
    }, n.prototype.clearAggFuncs = function() {
      this.aggFuncService && this.aggFuncService.clear();
    }, n.prototype.applyServerSideTransaction = function(t) {
      if (!this.serverSideTransactionManager) {
        this.logMissingRowModel("applyServerSideTransaction", "serverSide");
        return;
      }
      return this.serverSideTransactionManager.applyTransaction(t);
    }, n.prototype.applyServerSideTransactionAsync = function(t, e) {
      if (!this.serverSideTransactionManager) {
        this.logMissingRowModel("applyServerSideTransactionAsync", "serverSide");
        return;
      }
      return this.serverSideTransactionManager.applyTransactionAsync(t, e);
    }, n.prototype.retryServerSideLoads = function() {
      if (!this.serverSideRowModel) {
        this.logMissingRowModel("retryServerSideLoads", "serverSide");
        return;
      }
      this.serverSideRowModel.retryLoads();
    }, n.prototype.flushServerSideAsyncTransactions = function() {
      if (!this.serverSideTransactionManager) {
        this.logMissingRowModel("flushServerSideAsyncTransactions", "serverSide");
        return;
      }
      return this.serverSideTransactionManager.flushAsyncTransactions();
    }, n.prototype.applyTransaction = function(t) {
      if (!this.clientSideRowModel) {
        this.logMissingRowModel("applyTransaction", "clientSide");
        return;
      }
      var e = this.clientSideRowModel.updateRowData(t);
      return this.gridOptionsService.is("suppressChangeDetection") || this.rowRenderer.refreshCells(), e;
    }, n.prototype.applyTransactionAsync = function(t, e) {
      if (!this.clientSideRowModel) {
        this.logMissingRowModel("applyTransactionAsync", "clientSide");
        return;
      }
      this.clientSideRowModel.batchUpdateRowData(t, e);
    }, n.prototype.flushAsyncTransactions = function() {
      if (!this.clientSideRowModel) {
        this.logMissingRowModel("flushAsyncTransactions", "clientSide");
        return;
      }
      this.clientSideRowModel.flushAsyncTransactions();
    }, n.prototype.setSuppressModelUpdateAfterUpdateTransaction = function(t) {
      this.gridOptionsService.set("suppressModelUpdateAfterUpdateTransaction", t);
    }, n.prototype.refreshInfiniteCache = function() {
      this.infiniteRowModel ? this.infiniteRowModel.refreshCache() : this.logMissingRowModel("refreshInfiniteCache", "infinite");
    }, n.prototype.purgeInfiniteCache = function() {
      this.infiniteRowModel ? this.infiniteRowModel.purgeCache() : this.logMissingRowModel("purgeInfiniteCache", "infinite");
    }, n.prototype.refreshServerSide = function(t) {
      if (!this.serverSideRowModel) {
        this.logMissingRowModel("refreshServerSide", "serverSide");
        return;
      }
      this.serverSideRowModel.refreshStore(t);
    }, n.prototype.refreshServerSideStore = function(t) {
      return ae("28.0", "refreshServerSideStore", "refreshServerSide"), this.refreshServerSide(t);
    }, n.prototype.getServerSideStoreState = function() {
      return ae("28.0", "getServerSideStoreState", "getServerSideGroupLevelState"), this.getServerSideGroupLevelState();
    }, n.prototype.getServerSideGroupLevelState = function() {
      return this.serverSideRowModel ? this.serverSideRowModel.getStoreState() : (this.logMissingRowModel("getServerSideGroupLevelState", "serverSide"), []);
    }, n.prototype.getInfiniteRowCount = function() {
      if (this.infiniteRowModel)
        return this.infiniteRowModel.getRowCount();
      this.logMissingRowModel("getInfiniteRowCount", "infinite");
    }, n.prototype.isLastRowIndexKnown = function() {
      if (this.infiniteRowModel)
        return this.infiniteRowModel.isLastRowIndexKnown();
      this.logMissingRowModel("isLastRowIndexKnown", "infinite");
    }, n.prototype.getCacheBlockState = function() {
      return this.rowNodeBlockLoader.getBlockState();
    }, n.prototype.getFirstDisplayedRow = function() {
      return this.rowRenderer.getFirstVirtualRenderedRow();
    }, n.prototype.getLastDisplayedRow = function() {
      return this.rowRenderer.getLastVirtualRenderedRow();
    }, n.prototype.getDisplayedRowAtIndex = function(t) {
      return this.rowModel.getRow(t);
    }, n.prototype.getDisplayedRowCount = function() {
      return this.rowModel.getRowCount();
    }, n.prototype.setPagination = function(t) {
      if (!this.clientSideRowModel && this.gridOptionsService.get("domLayout") === "autoHeight" && !t) {
        console.error("AG Grid: Pagination cannot be disabled when using domLayout set to 'autoHeight' unless using the client-side row model.");
        return;
      }
      this.gridOptionsService.set("pagination", t);
    }, n.prototype.paginationIsLastPageFound = function() {
      return this.paginationProxy.isLastPageFound();
    }, n.prototype.paginationGetPageSize = function() {
      return this.paginationProxy.getPageSize();
    }, n.prototype.paginationSetPageSize = function(t) {
      this.gridOptionsService.set("paginationPageSize", t);
    }, n.prototype.paginationGetCurrentPage = function() {
      return this.paginationProxy.getCurrentPage();
    }, n.prototype.paginationGetTotalPages = function() {
      return this.paginationProxy.getTotalPages();
    }, n.prototype.paginationGetRowCount = function() {
      return this.paginationProxy.getMasterRowCount();
    }, n.prototype.paginationGoToNextPage = function() {
      this.paginationProxy.goToNextPage();
    }, n.prototype.paginationGoToPreviousPage = function() {
      this.paginationProxy.goToPreviousPage();
    }, n.prototype.paginationGoToFirstPage = function() {
      this.paginationProxy.goToFirstPage();
    }, n.prototype.paginationGoToLastPage = function() {
      this.paginationProxy.goToLastPage();
    }, n.prototype.paginationGoToPage = function(t) {
      this.paginationProxy.goToPage(t);
    }, z([
      Y("immutableService")
    ], n.prototype, "immutableService", void 0), z([
      Y("csvCreator")
    ], n.prototype, "csvCreator", void 0), z([
      Y("excelCreator")
    ], n.prototype, "excelCreator", void 0), z([
      h("rowRenderer")
    ], n.prototype, "rowRenderer", void 0), z([
      h("navigationService")
    ], n.prototype, "navigationService", void 0), z([
      h("filterManager")
    ], n.prototype, "filterManager", void 0), z([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), z([
      h("selectionService")
    ], n.prototype, "selectionService", void 0), z([
      h("gridOptionsService")
    ], n.prototype, "gridOptionsService", void 0), z([
      h("valueService")
    ], n.prototype, "valueService", void 0), z([
      h("alignedGridsService")
    ], n.prototype, "alignedGridsService", void 0), z([
      h("eventService")
    ], n.prototype, "eventService", void 0), z([
      h("pinnedRowModel")
    ], n.prototype, "pinnedRowModel", void 0), z([
      h("context")
    ], n.prototype, "context", void 0), z([
      h("rowModel")
    ], n.prototype, "rowModel", void 0), z([
      h("sortController")
    ], n.prototype, "sortController", void 0), z([
      h("paginationProxy")
    ], n.prototype, "paginationProxy", void 0), z([
      h("focusService")
    ], n.prototype, "focusService", void 0), z([
      h("dragAndDropService")
    ], n.prototype, "dragAndDropService", void 0), z([
      Y("rangeService")
    ], n.prototype, "rangeService", void 0), z([
      Y("clipboardService")
    ], n.prototype, "clipboardService", void 0), z([
      Y("aggFuncService")
    ], n.prototype, "aggFuncService", void 0), z([
      h("menuFactory")
    ], n.prototype, "menuFactory", void 0), z([
      Y("contextMenuFactory")
    ], n.prototype, "contextMenuFactory", void 0), z([
      h("valueCache")
    ], n.prototype, "valueCache", void 0), z([
      h("animationFrameService")
    ], n.prototype, "animationFrameService", void 0), z([
      Y("statusBarService")
    ], n.prototype, "statusBarService", void 0), z([
      Y("chartService")
    ], n.prototype, "chartService", void 0), z([
      Y("undoRedoService")
    ], n.prototype, "undoRedoService", void 0), z([
      Y("rowNodeBlockLoader")
    ], n.prototype, "rowNodeBlockLoader", void 0), z([
      Y("ssrmTransactionManager")
    ], n.prototype, "serverSideTransactionManager", void 0), z([
      h("ctrlsService")
    ], n.prototype, "ctrlsService", void 0), z([
      b
    ], n.prototype, "init", null), z([
      ve
    ], n.prototype, "cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid", null), n = z([
      A("gridApi")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var uf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Qi = function() {
  return Qi = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Qi.apply(this, arguments);
}, At = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, cf = (
  /** @class */
  function(n) {
    uf(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.allColumnFilters = /* @__PURE__ */ new Map(), r.activeAggregateFilters = [], r.activeColumnFilters = [], r.quickFilter = null, r.quickFilterParts = null, r.processingFilterChange = !1, r;
    }
    e = t, t.prototype.init = function() {
      var r = this;
      this.addManagedListener(this.eventService, g.EVENT_GRID_COLUMNS_CHANGED, function() {
        return r.onColumnsChanged();
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_VALUE_CHANGED, function() {
        return r.refreshFiltersForAggregations();
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_CHANGED, function() {
        return r.refreshFiltersForAggregations();
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_MODE_CHANGED, function() {
        r.refreshFiltersForAggregations(), r.resetQuickFilterCache();
      }), this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, function() {
        return r.resetQuickFilterCache();
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, function() {
        return r.resetQuickFilterCache();
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_VISIBLE, function() {
        r.gridOptionsService.is("excludeHiddenColumnsFromQuickFilter") && r.resetQuickFilterCache();
      }), this.addManagedPropertyListener("quickFilterText", function(i) {
        return r.setQuickFilter(i.currentValue);
      }), this.addManagedPropertyListener("excludeHiddenColumnsFromQuickFilter", function() {
        return r.onExcludeHiddenColumnsFromQuickFilterChanged();
      }), this.quickFilter = this.parseQuickFilter(this.gridOptionsService.get("quickFilterText")), this.setQuickFilterParts(), this.allowShowChangeAfterFilter = this.gridOptionsService.is("allowShowChangeAfterFilter"), this.externalFilterPresent = this.isExternalFilterPresentCallback();
    }, t.prototype.isExternalFilterPresentCallback = function() {
      var r = this.gridOptionsService.getCallback("isExternalFilterPresent");
      return typeof r == "function" ? r({}) : !1;
    }, t.prototype.doesExternalFilterPass = function(r) {
      var i = this.gridOptionsService.get("doesExternalFilterPass");
      return typeof i == "function" ? i(r) : !1;
    }, t.prototype.setQuickFilterParts = function() {
      this.quickFilterParts = this.quickFilter ? this.quickFilter.split(" ") : null;
    }, t.prototype.setFilterModel = function(r) {
      var i = this, o = [], s = this.getFilterModel();
      if (r) {
        var a = gs(Object.keys(r));
        this.allColumnFilters.forEach(function(l, u) {
          var c = r[u];
          o.push(i.setModelOnFilterWrapper(l.filterPromise, c)), a.delete(u);
        }), a.forEach(function(l) {
          var u = i.columnModel.getPrimaryColumn(l) || i.columnModel.getGridColumn(l);
          if (!u) {
            console.warn("AG Grid: setFilterModel() - no column found for colId: " + l);
            return;
          }
          if (!u.isFilterAllowed()) {
            console.warn("AG Grid: setFilterModel() - unable to fully apply model, filtering disabled for colId: " + l);
            return;
          }
          var c = i.getOrCreateFilterWrapper(u, "NO_UI");
          if (!c) {
            console.warn("AG-Grid: setFilterModel() - unable to fully apply model, unable to create filter for colId: " + l);
            return;
          }
          o.push(i.setModelOnFilterWrapper(c.filterPromise, r[l]));
        });
      } else
        this.allColumnFilters.forEach(function(l) {
          o.push(i.setModelOnFilterWrapper(l.filterPromise, null));
        });
      Ge.all(o).then(function() {
        var l = i.getFilterModel(), u = [];
        i.allColumnFilters.forEach(function(c, p) {
          var d = s ? s[p] : null, v = l ? l[p] : null;
          G.jsonEquals(d, v) || u.push(c.column);
        }), u.length > 0 && i.onFilterChanged({ columns: u });
      });
    }, t.prototype.setModelOnFilterWrapper = function(r, i) {
      return new Ge(function(o) {
        r.then(function(s) {
          typeof s.setModel != "function" && (console.warn("AG Grid: filter missing setModel method, which is needed for setFilterModel"), o()), (s.setModel(i) || Ge.resolve()).then(function() {
            return o();
          });
        });
      });
    }, t.prototype.getFilterModel = function() {
      var r = {};
      return this.allColumnFilters.forEach(function(i, o) {
        var s = i.filterPromise, a = s.resolveNow(null, function(u) {
          return u;
        });
        if (a == null)
          return null;
        if (typeof a.getModel != "function") {
          console.warn("AG Grid: filter API missing getModel method, which is needed for getFilterModel");
          return;
        }
        var l = a.getModel();
        O(l) && (r[o] = l);
      }), r;
    }, t.prototype.isColumnFilterPresent = function() {
      return this.activeColumnFilters.length > 0;
    }, t.prototype.isAggregateFilterPresent = function() {
      return !!this.activeAggregateFilters.length;
    }, t.prototype.isExternalFilterPresent = function() {
      return this.externalFilterPresent;
    }, t.prototype.doAggregateFiltersPass = function(r, i) {
      return this.doColumnFiltersPass(r, i, !0);
    }, t.prototype.updateActiveFilters = function() {
      var r = this;
      this.activeColumnFilters.length = 0, this.activeAggregateFilters.length = 0;
      var i = function(a) {
        return a ? a.isFilterActive ? a.isFilterActive() : (console.warn("AG Grid: Filter is missing isFilterActive() method"), !1) : !1;
      }, o = !!this.gridOptionsService.getGroupAggFiltering(), s = function(a) {
        var l = !a.isPrimary();
        if (l)
          return !0;
        var u = !r.columnModel.isPivotActive(), c = a.isValueActive();
        return !c || !u ? !1 : r.columnModel.isPivotMode() ? !0 : o;
      };
      this.allColumnFilters.forEach(function(a) {
        if (a.filterPromise.resolveNow(!1, i)) {
          var l = a.filterPromise.resolveNow(null, function(u) {
            return u;
          });
          s(a.column) ? r.activeAggregateFilters.push(l) : r.activeColumnFilters.push(l);
        }
      });
    }, t.prototype.updateFilterFlagInColumns = function(r, i) {
      this.allColumnFilters.forEach(function(o) {
        var s = o.filterPromise.resolveNow(!1, function(a) {
          return a.isFilterActive();
        });
        o.column.setFilterActive(s, r, i);
      });
    }, t.prototype.isAnyFilterPresent = function() {
      return this.isQuickFilterPresent() || this.isColumnFilterPresent() || this.isAggregateFilterPresent() || this.isExternalFilterPresent();
    }, t.prototype.doColumnFiltersPass = function(r, i, o) {
      for (var s = r.data, a = r.aggData, l = o ? this.activeAggregateFilters : this.activeColumnFilters, u = o ? a : s, c = 0; c < l.length; c++) {
        var p = l[c];
        if (!(p == null || p === i)) {
          if (typeof p.doesFilterPass != "function")
            throw new Error("Filter is missing method doesFilterPass");
          if (!p.doesFilterPass({ node: r, data: u }))
            return !1;
        }
      }
      return !0;
    }, t.prototype.parseQuickFilter = function(r) {
      return O(r) ? this.gridOptionsService.isRowModelType("clientSide") ? r.toUpperCase() : (console.warn("AG Grid - Quick filtering only works with the Client-Side Row Model"), null) : null;
    }, t.prototype.setQuickFilter = function(r) {
      if (r != null && typeof r != "string") {
        console.warn("AG Grid - setQuickFilter() only supports string inputs, received: " + typeof r);
        return;
      }
      var i = this.parseQuickFilter(r);
      this.quickFilter !== i && (this.quickFilter = i, this.setQuickFilterParts(), this.onFilterChanged());
    }, t.prototype.resetQuickFilterCache = function() {
      this.rowModel.forEachNode(function(r) {
        return r.quickFilterAggregateText = null;
      });
    }, t.prototype.onExcludeHiddenColumnsFromQuickFilterChanged = function() {
      this.columnModel.refreshQuickFilterColumns(), this.resetQuickFilterCache(), this.isQuickFilterPresent() && this.onFilterChanged();
    }, t.prototype.refreshFiltersForAggregations = function() {
      var r = this.gridOptionsService.getGroupAggFiltering();
      r && this.onFilterChanged();
    }, t.prototype.callOnFilterChangedOutsideRenderCycle = function(r) {
      var i = this;
      r === void 0 && (r = {});
      var o = function() {
        return i.onFilterChanged(r);
      };
      this.rowRenderer.isRefreshInProgress() ? setTimeout(o, 0) : o();
    }, t.prototype.onFilterChanged = function(r) {
      r === void 0 && (r = {});
      var i = r.filterInstance, o = r.additionalEventAttributes, s = r.columns;
      this.updateDependantFilters(), this.updateActiveFilters(), this.updateFilterFlagInColumns("filterChanged", o), this.externalFilterPresent = this.isExternalFilterPresentCallback(), this.allColumnFilters.forEach(function(l) {
        l.filterPromise && l.filterPromise.then(function(u) {
          u && u !== i && u.onAnyFilterChanged && u.onAnyFilterChanged();
        });
      });
      var a = {
        type: g.EVENT_FILTER_CHANGED,
        columns: s || []
      };
      o && Oe(a, o), this.processingFilterChange = !0, this.eventService.dispatchEvent(a), this.processingFilterChange = !1;
    }, t.prototype.isSuppressFlashingCellsBecauseFiltering = function() {
      return !this.allowShowChangeAfterFilter && this.processingFilterChange;
    }, t.prototype.isQuickFilterPresent = function() {
      return this.quickFilter !== null;
    }, t.prototype.doesRowPassOtherFilters = function(r, i) {
      return this.doesRowPassFilter({ rowNode: i, filterInstanceToSkip: r });
    }, t.prototype.doesRowPassQuickFilterNoCache = function(r, i) {
      var o = this, s = this.columnModel.getAllColumnsForQuickFilter();
      return s.some(function(a) {
        var l = o.getQuickFilterTextForColumn(a, r);
        return O(l) && l.indexOf(i) >= 0;
      });
    }, t.prototype.doesRowPassQuickFilterCache = function(r, i) {
      return r.quickFilterAggregateText || this.aggregateRowForQuickFilter(r), r.quickFilterAggregateText.indexOf(i) >= 0;
    }, t.prototype.doesRowPassQuickFilter = function(r) {
      var i = this, o = this.gridOptionsService.is("cacheQuickFilter");
      return this.quickFilterParts.every(function(s) {
        return o ? i.doesRowPassQuickFilterCache(r, s) : i.doesRowPassQuickFilterNoCache(r, s);
      });
    }, t.prototype.doesRowPassAggregateFilters = function(r) {
      return !(this.isAggregateFilterPresent() && !this.doAggregateFiltersPass(r.rowNode, r.filterInstanceToSkip));
    }, t.prototype.doesRowPassFilter = function(r) {
      return !(this.isQuickFilterPresent() && !this.doesRowPassQuickFilter(r.rowNode) || this.isExternalFilterPresent() && !this.doesExternalFilterPass(r.rowNode) || this.isColumnFilterPresent() && !this.doColumnFiltersPass(r.rowNode, r.filterInstanceToSkip));
    }, t.prototype.getQuickFilterTextForColumn = function(r, i) {
      var o = this.valueService.getValue(r, i, !0), s = r.getColDef();
      if (s.getQuickFilterText) {
        var a = {
          value: o,
          node: i,
          data: i.data,
          column: r,
          colDef: s,
          api: this.gridOptionsService.api,
          columnApi: this.gridOptionsService.columnApi,
          context: this.gridOptionsService.context
        };
        o = s.getQuickFilterText(a);
      }
      return O(o) ? o.toString().toUpperCase() : null;
    }, t.prototype.aggregateRowForQuickFilter = function(r) {
      var i = this, o = [], s = this.columnModel.getAllColumnsForQuickFilter();
      s.forEach(function(a) {
        var l = i.getQuickFilterTextForColumn(a, r);
        O(l) && o.push(l);
      }), r.quickFilterAggregateText = o.join(e.QUICK_FILTER_SEPARATOR);
    }, t.prototype.onNewRowsLoaded = function(r) {
      this.allColumnFilters.forEach(function(i) {
        i.filterPromise.then(function(o) {
          o.onNewRowsLoaded && o.onNewRowsLoaded();
        });
      }), this.updateFilterFlagInColumns(r, { afterDataChange: !0 }), this.updateActiveFilters();
    }, t.prototype.createValueGetter = function(r) {
      var i = this;
      return function(o) {
        var s = o.node;
        return i.valueService.getValue(r, s, !0);
      };
    }, t.prototype.getFilterComponent = function(r, i, o) {
      var s;
      if (o === void 0 && (o = !0), o)
        return ((s = this.getOrCreateFilterWrapper(r, i)) === null || s === void 0 ? void 0 : s.filterPromise) || null;
      var a = this.cachedFilter(r);
      return a ? a.filterPromise : null;
    }, t.prototype.isFilterActive = function(r) {
      var i = this.cachedFilter(r);
      return !!i && i.filterPromise.resolveNow(!1, function(o) {
        return o.isFilterActive();
      });
    }, t.prototype.getOrCreateFilterWrapper = function(r, i) {
      if (!r.isFilterAllowed())
        return null;
      var o = this.cachedFilter(r);
      return o ? i !== "NO_UI" && this.putIntoGui(o, i) : (o = this.createFilterWrapper(r, i), this.allColumnFilters.set(r.getColId(), o)), o;
    }, t.prototype.cachedFilter = function(r) {
      return this.allColumnFilters.get(r.getColId());
    }, t.prototype.createFilterInstance = function(r) {
      var i = this, o = N.isRegistered(F.SetFilterModule) ? "agSetColumnFilter" : "agTextColumnFilter", s = r.getColDef(), a, l = Qi(Qi({}, this.createFilterParams(r, s)), { filterModifiedCallback: function() {
        var p = {
          type: g.EVENT_FILTER_MODIFIED,
          column: r,
          filterInstance: a
        };
        i.eventService.dispatchEvent(p);
      }, filterChangedCallback: function(p) {
        var d = { filterInstance: a, additionalEventAttributes: p, columns: [r] };
        i.callOnFilterChangedOutsideRenderCycle(d);
      }, doesRowPassOtherFilter: function(p) {
        return i.doesRowPassOtherFilters(a, p);
      } }), u = this.userComponentFactory.getFilterDetails(s, l, o);
      if (!u)
        return null;
      var c = u.newAgStackInstance();
      return c && c.then(function(p) {
        return a = p;
      }), c;
    }, t.prototype.createFilterParams = function(r, i) {
      var o = {
        column: r,
        colDef: Kn(i),
        rowModel: this.rowModel,
        filterChangedCallback: function() {
        },
        filterModifiedCallback: function() {
        },
        valueGetter: this.createValueGetter(r),
        doesRowPassOtherFilter: function() {
          return !0;
        },
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi,
        context: this.gridOptionsService.context
      };
      return o;
    }, t.prototype.createFilterWrapper = function(r, i) {
      var o = {
        column: r,
        filterPromise: null,
        compiledElement: null,
        guiPromise: Ge.resolve(null)
      };
      return o.filterPromise = this.createFilterInstance(r), o.filterPromise && this.putIntoGui(o, i), o;
    }, t.prototype.putIntoGui = function(r, i) {
      var o = this, s = document.createElement("div");
      s.className = "ag-filter", r.guiPromise = new Ge(function(a) {
        r.filterPromise.then(function(l) {
          var u = l.getGui();
          O(u) || console.warn("AG Grid: getGui method from filter returned " + u + ", it should be a DOM element or an HTML template string."), typeof u == "string" && (u = he(u)), s.appendChild(u), a(s);
          var c = {
            type: g.EVENT_FILTER_OPENED,
            column: r.column,
            source: i,
            eGui: s
          };
          o.eventService.dispatchEvent(c);
        });
      });
    }, t.prototype.onColumnsChanged = function() {
      var r = this, i = [];
      this.allColumnFilters.forEach(function(o, s) {
        var a;
        o.column.isPrimary() ? a = r.columnModel.getPrimaryColumn(s) : a = r.columnModel.getGridColumn(s), !a && (i.push(o.column), r.disposeFilterWrapper(o, "columnChanged"));
      }), i.length > 0 ? this.onFilterChanged({ columns: i }) : this.updateDependantFilters();
    }, t.prototype.updateDependantFilters = function() {
      var r = this, i = this.columnModel.getGroupAutoColumns();
      i == null || i.forEach(function(o) {
        o.getColDef().filter === "agGroupColumnFilter" && r.getOrCreateFilterWrapper(o, "NO_UI");
      });
    }, t.prototype.isFilterAllowed = function(r) {
      var i, o, s = r.isFilterAllowed();
      if (!s)
        return !1;
      var a = this.allColumnFilters.get(r.getColId());
      return (o = (i = a == null ? void 0 : a.filterPromise) === null || i === void 0 ? void 0 : i.resolveNow(
        !0,
        // defer to filter component isFilterAllowed if it exists
        function(l) {
          var u, c;
          return typeof ((u = l) === null || u === void 0 ? void 0 : u.isFilterAllowed) == "function" ? (c = l) === null || c === void 0 ? void 0 : c.isFilterAllowed() : !0;
        }
      )) !== null && o !== void 0 ? o : !0;
    }, t.prototype.getFloatingFilterCompDetails = function(r, i) {
      var o = this, s = r.getColDef(), a = this.createFilterParams(r, s), l = this.userComponentFactory.mergeParamsWithApplicationProvidedParams(s, Gn, a), u = this.userComponentFactory.getDefaultFloatingFilterType(s);
      u == null && (u = "agReadOnlyFloatingFilter");
      var c = function(d) {
        var v = o.getFilterComponent(r, "NO_UI");
        v != null && v.then(function(f) {
          d(Lt(f));
        });
      }, p = {
        column: r,
        filterParams: l,
        currentParentModel: function() {
          return o.getCurrentFloatingFilterParentModel(r);
        },
        parentFilterInstance: c,
        showParentFilter: i,
        suppressFilterButton: !1
        // This one might be overridden from the colDef
      };
      return this.userComponentFactory.getFloatingFilterCompDetails(s, p, u);
    }, t.prototype.getCurrentFloatingFilterParentModel = function(r) {
      var i = this.getFilterComponent(r, "NO_UI", !1);
      return i ? i.resolveNow(null, function(o) {
        return o && o.getModel();
      }) : null;
    }, t.prototype.destroyFilter = function(r, i) {
      i === void 0 && (i = "api");
      var o = this.allColumnFilters.get(r.getColId());
      o && (this.disposeFilterWrapper(o, i), this.onFilterChanged({ columns: [r] }));
    }, t.prototype.disposeFilterWrapper = function(r, i) {
      var o = this;
      r.filterPromise.then(function(s) {
        (s.setModel(null) || Ge.resolve()).then(function() {
          o.getContext().destroyBean(s), r.column.setFilterActive(!1, "filterDestroyed"), o.allColumnFilters.delete(r.column.getColId());
          var a = {
            type: g.EVENT_FILTER_DESTROYED,
            source: i,
            column: r.column
          };
          o.eventService.dispatchEvent(a);
        });
      });
    }, t.prototype.destroy = function() {
      var r = this;
      n.prototype.destroy.call(this), this.allColumnFilters.forEach(function(i) {
        return r.disposeFilterWrapper(i, "gridDestroyed");
      });
    };
    var e;
    return t.QUICK_FILTER_SEPARATOR = `
`, At([
      h("valueService")
    ], t.prototype, "valueService", void 0), At([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), At([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), At([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), At([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), At([
      b
    ], t.prototype, "init", null), t = e = At([
      A("filterManager")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var pf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Es = (
  /** @class */
  function(n) {
    pf(t, n);
    function t(e, r) {
      var i = n.call(this, e) || this;
      return i.ctrl = r, i;
    }
    return t.prototype.getCtrl = function() {
      return this.ctrl;
    }, t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var df = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), si = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, hf = (
  /** @class */
  function(n) {
    df(t, n);
    function t(e) {
      return n.call(this, t.TEMPLATE, e) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.getGui(), i = {
        addOrRemoveCssClass: function(o, s) {
          return e.addOrRemoveCssClass(o, s);
        },
        addOrRemoveBodyCssClass: function(o, s) {
          return e.eFloatingFilterBody.classList.toggle(o, s);
        },
        setButtonWrapperDisplayed: function(o) {
          return k(e.eButtonWrapper, o);
        },
        setCompDetails: function(o) {
          return e.setCompDetails(o);
        },
        getFloatingFilterComp: function() {
          return e.compPromise;
        },
        setWidth: function(o) {
          return r.style.width = o;
        },
        setMenuIcon: function(o) {
          return e.eButtonShowMainFilter.appendChild(o);
        }
      };
      this.ctrl.setComp(i, r, this.eButtonShowMainFilter, this.eFloatingFilterBody);
    }, t.prototype.setCompDetails = function(e) {
      var r = this;
      this.compPromise = e.newAgStackInstance(), this.compPromise.then(function(i) {
        return r.afterCompCreated(i);
      });
    }, t.prototype.afterCompCreated = function(e) {
      var r = this;
      e && (this.addDestroyFunc(function() {
        return r.context.destroyBean(e);
      }), this.isAlive() && (this.eFloatingFilterBody.appendChild(e.getGui()), e.afterGuiAttached && e.afterGuiAttached()));
    }, t.TEMPLATE = `<div class="ag-header-cell ag-floating-filter" role="gridcell" tabindex="-1">
            <div ref="eFloatingFilterBody" role="presentation"></div>
            <div class="ag-floating-filter-button ag-hidden" ref="eButtonWrapper" role="presentation">
                <button type="button" aria-label="Open Filter Menu" class="ag-floating-filter-button-button" ref="eButtonShowMainFilter" tabindex="-1"></button>
            </div>
        </div>`, si([
      P("eFloatingFilterBody")
    ], t.prototype, "eFloatingFilterBody", void 0), si([
      P("eButtonWrapper")
    ], t.prototype, "eButtonWrapper", void 0), si([
      P("eButtonShowMainFilter")
    ], t.prototype, "eButtonShowMainFilter", void 0), si([
      b
    ], t.prototype, "postConstruct", null), t;
  }(Es)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ff = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), vf = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, se;
(function(n) {
  n.AUTO_HEIGHT = "ag-layout-auto-height", n.NORMAL = "ag-layout-normal", n.PRINT = "ag-layout-print";
})(se || (se = {}));
var _s = (
  /** @class */
  function(n) {
    ff(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.view = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedPropertyListener("domLayout", this.updateLayoutClasses.bind(this)), this.updateLayoutClasses();
    }, t.prototype.updateLayoutClasses = function() {
      var e = this.getDomLayout(), r = {
        autoHeight: e === "autoHeight",
        normal: e === "normal",
        print: e === "print"
      }, i = r.autoHeight ? se.AUTO_HEIGHT : r.print ? se.PRINT : se.NORMAL;
      this.view.updateLayoutClasses(i, r);
    }, t.prototype.getDomLayout = function() {
      var e, r = (e = this.gridOptionsService.get("domLayout")) !== null && e !== void 0 ? e : "normal", i = ["normal", "print", "autoHeight"];
      return i.indexOf(r) === -1 ? (K(function() {
        return console.warn("AG Grid: " + r + " is not valid for DOM Layout, valid values are 'normal', 'autoHeight', 'print'.");
      }, "warn about dom layout values"), "normal") : r;
    }, vf([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var gf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Xi = function() {
  return Xi = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Xi.apply(this, arguments);
}, dt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, yf = (
  /** @class */
  function(n) {
    gf(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.scrollLeft = -1, r.nextScrollTop = -1, r.scrollTop = -1, r.eBodyViewport = e, r.resetLastHScrollDebounced = Ze(function() {
        return r.eLastHScroll = null;
      }, 500), r.resetLastVScrollDebounced = Ze(function() {
        return r.eLastVScroll = null;
      }, 500), r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.enableRtl = this.gridOptionsService.is("enableRtl"), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this)), this.ctrlsService.whenReady(function(r) {
        e.centerRowContainerCtrl = r.centerRowContainerCtrl, e.onDisplayedColumnsWidthChanged(), e.addScrollListener();
      });
    }, t.prototype.addScrollListener = function() {
      var e = this.ctrlsService.getFakeHScrollComp(), r = this.ctrlsService.getFakeVScrollComp();
      this.addManagedListener(this.centerRowContainerCtrl.getViewportElement(), "scroll", this.onHScroll.bind(this)), this.addManagedListener(e.getViewport(), "scroll", this.onFakeHScroll.bind(this));
      var i = this.gridOptionsService.is("debounceVerticalScrollbar"), o = i ? Ze(this.onVScroll.bind(this), 100) : this.onVScroll.bind(this), s = i ? Ze(this.onFakeVScroll.bind(this), 100) : this.onFakeVScroll.bind(this);
      this.addManagedListener(this.eBodyViewport, "scroll", o), this.addManagedListener(r.getViewport(), "scroll", s);
    }, t.prototype.onDisplayedColumnsWidthChanged = function() {
      this.enableRtl && this.horizontallyScrollHeaderCenterAndFloatingCenter();
    }, t.prototype.horizontallyScrollHeaderCenterAndFloatingCenter = function(e) {
      var r = this.centerRowContainerCtrl == null;
      if (!r) {
        e === void 0 && (e = this.centerRowContainerCtrl.getCenterViewportScrollLeft());
        var i = this.enableRtl ? e : -e, o = this.ctrlsService.getTopCenterRowContainerCtrl(), s = this.ctrlsService.getStickyTopCenterRowContainerCtrl(), a = this.ctrlsService.getBottomCenterRowContainerCtrl(), l = this.ctrlsService.getFakeHScrollComp(), u = this.ctrlsService.getHeaderRowContainerCtrl();
        u.setHorizontalScroll(-i), a.setContainerTranslateX(i), o.setContainerTranslateX(i), s.setContainerTranslateX(i);
        var c = this.centerRowContainerCtrl.getViewportElement(), p = this.eLastHScroll === c, d = p ? l.getViewport() : this.centerRowContainerCtrl.getViewportElement();
        Wi(d, Math.abs(e), this.enableRtl);
      }
    }, t.prototype.isControllingHScroll = function(e) {
      return this.eLastHScroll ? e === this.eLastHScroll : (this.eLastHScroll = e, !0);
    }, t.prototype.isControllingVScroll = function(e) {
      return this.eLastVScroll ? e === this.eLastVScroll : (this.eLastVScroll = e, !0);
    }, t.prototype.onFakeHScroll = function() {
      var e = this.ctrlsService.getFakeHScrollComp().getViewport();
      this.isControllingHScroll(e) && this.onHScrollCommon(e);
    }, t.prototype.onHScroll = function() {
      var e = this.centerRowContainerCtrl.getViewportElement();
      this.isControllingHScroll(e) && this.onHScrollCommon(e);
    }, t.prototype.onHScrollCommon = function(e) {
      var r = this.centerRowContainerCtrl.getViewportElement(), i = r.scrollLeft;
      this.shouldBlockScrollUpdate("horizontal", i, !0) || (this.doHorizontalScroll(Math.round(jr(e, this.enableRtl))), this.resetLastHScrollDebounced());
    }, t.prototype.onFakeVScroll = function() {
      var e = this.ctrlsService.getFakeVScrollComp().getViewport();
      this.isControllingVScroll(e) && this.onVScrollCommon(e);
    }, t.prototype.onVScroll = function() {
      this.isControllingVScroll(this.eBodyViewport) && this.onVScrollCommon(this.eBodyViewport);
    }, t.prototype.onVScrollCommon = function(e) {
      var r = e.scrollTop;
      if (!this.shouldBlockScrollUpdate("vertical", r, !0)) {
        if (this.animationFrameService.setScrollTop(r), this.nextScrollTop = r, e === this.eBodyViewport) {
          var i = this.ctrlsService.getFakeVScrollComp().getViewport();
          i.scrollTop = r;
        } else
          this.eBodyViewport.scrollTop = r;
        this.gridOptionsService.is("suppressAnimationFrame") ? this.scrollGridIfNeeded() : this.animationFrameService.schedule(), this.resetLastVScrollDebounced();
      }
    }, t.prototype.doHorizontalScroll = function(e) {
      var r = this.ctrlsService.getFakeHScrollComp().getViewport(), i = jr(r, this.enableRtl);
      this.scrollLeft === e && e === i || (this.scrollLeft = e, this.fireScrollEvent("horizontal"), this.horizontallyScrollHeaderCenterAndFloatingCenter(e), this.onHorizontalViewportChanged());
    }, t.prototype.fireScrollEvent = function(e) {
      var r = this, i = {
        type: g.EVENT_BODY_SCROLL,
        direction: e,
        left: this.scrollLeft,
        top: this.scrollTop
      };
      this.eventService.dispatchEvent(i), window.clearTimeout(this.scrollTimer), this.scrollTimer = void 0, this.scrollTimer = window.setTimeout(function() {
        var o = Xi(Xi({}, i), { type: g.EVENT_BODY_SCROLL_END });
        r.eventService.dispatchEvent(o);
      }, 100);
    }, t.prototype.shouldBlockScrollUpdate = function(e, r, i) {
      return i === void 0 && (i = !1), i && !Ot() ? !1 : e === "vertical" ? this.shouldBlockVerticalScroll(r) : this.shouldBlockHorizontalScroll(r);
    }, t.prototype.shouldBlockVerticalScroll = function(e) {
      var r = $r(this.eBodyViewport), i = this.eBodyViewport.scrollHeight;
      return e < 0 || e + r > i;
    }, t.prototype.shouldBlockHorizontalScroll = function(e) {
      var r = this.centerRowContainerCtrl.getCenterWidth(), i = this.centerRowContainerCtrl.getViewportElement().scrollWidth;
      if (this.enableRtl && Wr()) {
        if (e > 0)
          return !0;
      } else if (e < 0)
        return !0;
      return Math.abs(e) + r > i;
    }, t.prototype.redrawRowsAfterScroll = function() {
      this.fireScrollEvent("vertical");
    }, t.prototype.onHorizontalViewportChanged = function() {
      this.centerRowContainerCtrl.onHorizontalViewportChanged();
    }, t.prototype.checkScrollLeft = function() {
      this.scrollLeft !== this.centerRowContainerCtrl.getCenterViewportScrollLeft() && this.onHScrollCommon(this.centerRowContainerCtrl.getViewportElement());
    }, t.prototype.scrollGridIfNeeded = function() {
      var e = this.scrollTop != this.nextScrollTop;
      return e && (this.scrollTop = this.nextScrollTop, this.redrawRowsAfterScroll()), e;
    }, t.prototype.setHorizontalScrollPosition = function(e) {
      var r = 0, i = this.centerRowContainerCtrl.getViewportElement().scrollWidth - this.centerRowContainerCtrl.getCenterWidth();
      this.shouldBlockScrollUpdate("horizontal", e) && (this.enableRtl && Wr() ? e = e > 0 ? 0 : i : e = Math.min(Math.max(e, r), i)), Wi(this.centerRowContainerCtrl.getViewportElement(), Math.abs(e), this.enableRtl), this.doHorizontalScroll(e);
    }, t.prototype.setVerticalScrollPosition = function(e) {
      this.eBodyViewport.scrollTop = e;
    }, t.prototype.getVScrollPosition = function() {
      var e = {
        top: this.eBodyViewport.scrollTop,
        bottom: this.eBodyViewport.scrollTop + this.eBodyViewport.offsetHeight
      };
      return e;
    }, t.prototype.getHScrollPosition = function() {
      return this.centerRowContainerCtrl.getHScrollPosition();
    }, t.prototype.isHorizontalScrollShowing = function() {
      return this.centerRowContainerCtrl.isHorizontalScrollShowing();
    }, t.prototype.scrollHorizontally = function(e) {
      var r = this.centerRowContainerCtrl.getViewportElement().scrollLeft;
      return this.setHorizontalScrollPosition(r + e), this.centerRowContainerCtrl.getViewportElement().scrollLeft - r;
    }, t.prototype.scrollToTop = function() {
      this.eBodyViewport.scrollTop = 0;
    }, t.prototype.ensureNodeVisible = function(e, r) {
      r === void 0 && (r = null);
      for (var i = this.rowModel.getRowCount(), o = -1, s = 0; s < i; s++) {
        var a = this.rowModel.getRow(s);
        if (typeof e == "function") {
          var l = e;
          if (a && l(a)) {
            o = s;
            break;
          }
        } else if (e === a || e === a.data) {
          o = s;
          break;
        }
      }
      o >= 0 && this.ensureIndexVisible(o, r);
    }, t.prototype.ensureIndexVisible = function(e, r) {
      if (!this.gridOptionsService.isDomLayout("print")) {
        var i = this.paginationProxy.getRowCount();
        if (typeof e != "number" || e < 0 || e >= i) {
          console.warn("AG Grid: Invalid row index for ensureIndexVisible: " + e);
          return;
        }
        var o = this.gridOptionsService.is("pagination"), s = o && !this.gridOptionsService.is("suppressPaginationPanel");
        s || this.paginationProxy.goToPageWithIndex(e);
        var a = this.ctrlsService.getGridBodyCtrl(), l = a.getStickyTopHeight(), u = this.paginationProxy.getRow(e), c;
        do {
          var p = u.rowTop, d = u.rowHeight, v = this.paginationProxy.getPixelOffset(), f = u.rowTop - v, y = f + u.rowHeight, C = this.getVScrollPosition(), m = this.heightScaler.getDivStretchOffset(), w = C.top + m, E = C.bottom + m, R = E - w, D = this.heightScaler.getScrollPositionForPixel(f), M = this.heightScaler.getScrollPositionForPixel(y - R), I = Math.min((D + M) / 2, f), L = w + l > f, H = E < y, B = null;
          r === "top" ? B = D : r === "bottom" ? B = M : r === "middle" ? B = I : L ? B = D - l : H && (B = M), B !== null && (this.eBodyViewport.scrollTop = B, this.rowRenderer.redrawAfterScroll()), c = p !== u.rowTop || d !== u.rowHeight;
        } while (c);
        this.animationFrameService.flushAllFrames();
      }
    }, t.prototype.ensureColumnVisible = function(e, r) {
      r === void 0 && (r = "auto");
      var i = this.columnModel.getGridColumn(e);
      if (i && !i.isPinned() && this.columnModel.isColumnDisplayed(i)) {
        var o = this.getPositionedHorizontalScroll(i, r);
        o !== null && this.centerRowContainerCtrl.setCenterViewportScrollLeft(o), this.centerRowContainerCtrl.onHorizontalViewportChanged(), this.animationFrameService.flushAllFrames();
      }
    }, t.prototype.getPositionedHorizontalScroll = function(e, r) {
      var i = this.isColumnOutsideViewport(e), o = i.columnBeforeStart, s = i.columnAfterEnd, a = this.centerRowContainerCtrl.getCenterWidth() < e.getActualWidth(), l = this.centerRowContainerCtrl.getCenterWidth(), u = this.enableRtl, c = (u ? o : s) || a, p = u ? s : o;
      r !== "auto" && (c = r === "start", p = r === "end");
      var d = r === "middle";
      if (c || p || d) {
        var v = this.getColumnBounds(e), f = v.colLeft, y = v.colMiddle, C = v.colRight;
        return d ? y - l / 2 : c ? u ? C : f : u ? f - l : C - l;
      }
      return null;
    }, t.prototype.isColumnOutsideViewport = function(e) {
      var r = this.getViewportBounds(), i = r.start, o = r.end, s = this.getColumnBounds(e), a = s.colLeft, l = s.colRight, u = this.enableRtl, c = u ? i > l : o < l, p = u ? o < a : i > a;
      return { columnBeforeStart: c, columnAfterEnd: p };
    }, t.prototype.getColumnBounds = function(e) {
      var r = this.enableRtl, i = this.columnModel.getBodyContainerWidth(), o = e.getActualWidth(), s = e.getLeft(), a = r ? -1 : 1, l = r ? i - s : s, u = l + o * a, c = l + o / 2 * a;
      return { colLeft: l, colMiddle: c, colRight: u };
    }, t.prototype.getViewportBounds = function() {
      var e = this.centerRowContainerCtrl.getCenterWidth(), r = this.centerRowContainerCtrl.getCenterViewportScrollLeft(), i = r, o = e + r;
      return { start: i, end: o, width: e };
    }, dt([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), dt([
      h("animationFrameService")
    ], t.prototype, "animationFrameService", void 0), dt([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), dt([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), dt([
      h("rowContainerHeightService")
    ], t.prototype, "heightScaler", void 0), dt([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), dt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), dt([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Cf = (
  /** @class */
  function() {
    function n(t) {
      this.tickingInterval = null, this.onScrollCallback = null, this.scrollContainer = t.scrollContainer, this.scrollHorizontally = t.scrollAxis.indexOf("x") !== -1, this.scrollVertically = t.scrollAxis.indexOf("y") !== -1, this.scrollByTick = t.scrollByTick != null ? t.scrollByTick : 20, t.onScrollCallback && (this.onScrollCallback = t.onScrollCallback), this.scrollVertically && (this.getVerticalPosition = t.getVerticalPosition, this.setVerticalPosition = t.setVerticalPosition), this.scrollHorizontally && (this.getHorizontalPosition = t.getHorizontalPosition, this.setHorizontalPosition = t.setHorizontalPosition), this.shouldSkipVerticalScroll = t.shouldSkipVerticalScroll || function() {
        return !1;
      }, this.shouldSkipHorizontalScroll = t.shouldSkipHorizontalScroll || function() {
        return !1;
      };
    }
    return n.prototype.check = function(t, e) {
      e === void 0 && (e = !1);
      var r = e || this.shouldSkipVerticalScroll();
      if (!(r && this.shouldSkipHorizontalScroll())) {
        var i = this.scrollContainer.getBoundingClientRect(), o = this.scrollByTick;
        this.tickLeft = t.clientX < i.left + o, this.tickRight = t.clientX > i.right - o, this.tickUp = t.clientY < i.top + o && !r, this.tickDown = t.clientY > i.bottom - o && !r, this.tickLeft || this.tickRight || this.tickUp || this.tickDown ? this.ensureTickingStarted() : this.ensureCleared();
      }
    }, n.prototype.ensureTickingStarted = function() {
      this.tickingInterval === null && (this.tickingInterval = window.setInterval(this.doTick.bind(this), 100), this.tickCount = 0);
    }, n.prototype.doTick = function() {
      this.tickCount++;
      var t;
      if (t = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40, this.scrollVertically) {
        var e = this.getVerticalPosition();
        this.tickUp && this.setVerticalPosition(e - t), this.tickDown && this.setVerticalPosition(e + t);
      }
      if (this.scrollHorizontally) {
        var r = this.getHorizontalPosition();
        this.tickLeft && this.setHorizontalPosition(r - t), this.tickRight && this.setHorizontalPosition(r + t);
      }
      this.onScrollCallback && this.onScrollCallback();
    }, n.prototype.ensureCleared = function() {
      this.tickingInterval && (window.clearInterval(this.tickingInterval), this.tickingInterval = null);
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var mf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Hn = function() {
  return Hn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Hn.apply(this, arguments);
}, Le = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, wf = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Sf = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(wf(arguments[t]));
  return n;
}, Ef = (
  /** @class */
  function(n) {
    mf(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.isMultiRowDrag = !1, r.isGridSorted = !1, r.isGridFiltered = !1, r.isRowGroupActive = !1, r.eContainer = e, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.gridOptionsService.isRowModelType("clientSide") && (this.clientSideRowModel = this.rowModel);
      var r = function() {
        e.onSortChanged(), e.onFilterChanged(), e.onRowGroupChanged();
      };
      this.addManagedListener(this.eventService, g.EVENT_SORT_CHANGED, this.onSortChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onRowGroupChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_MODEL_UPDATED, function() {
        r();
      }), r(), this.ctrlsService.whenReady(function() {
        var i = e.ctrlsService.getGridBodyCtrl();
        e.autoScrollService = new Cf({
          scrollContainer: i.getBodyViewportElement(),
          scrollAxis: "y",
          getVerticalPosition: function() {
            return i.getScrollFeature().getVScrollPosition().top;
          },
          setVerticalPosition: function(o) {
            return i.getScrollFeature().setVerticalScrollPosition(o);
          },
          onScrollCallback: function() {
            e.onDragging(e.lastDraggingEvent);
          }
        });
      });
    }, t.prototype.onSortChanged = function() {
      this.isGridSorted = this.sortController.isSortActive();
    }, t.prototype.onFilterChanged = function() {
      this.isGridFiltered = this.filterManager.isAnyFilterPresent();
    }, t.prototype.onRowGroupChanged = function() {
      var e = this.columnModel.getRowGroupColumns();
      this.isRowGroupActive = !De(e);
    }, t.prototype.getContainer = function() {
      return this.eContainer;
    }, t.prototype.isInterestedIn = function(e) {
      return e === we.RowDrag;
    }, t.prototype.getIconName = function() {
      var e = this.gridOptionsService.is("rowDragManaged");
      return e && this.shouldPreventRowMove() ? de.ICON_NOT_ALLOWED : de.ICON_MOVE;
    }, t.prototype.shouldPreventRowMove = function() {
      return this.isGridSorted || this.isGridFiltered || this.isRowGroupActive;
    }, t.prototype.getRowNodes = function(e) {
      var r = this;
      if (!this.isFromThisGrid(e))
        return e.dragItem.rowNodes || [];
      var i = this.gridOptionsService.is("rowDragMultiRow"), o = Sf(this.selectionService.getSelectedNodes()).sort(function(a, l) {
        return a.rowIndex == null || l.rowIndex == null ? 0 : r.getRowIndexNumber(a) - r.getRowIndexNumber(l);
      }), s = e.dragItem.rowNode;
      return i && o.indexOf(s) !== -1 ? (this.isMultiRowDrag = !0, o) : (this.isMultiRowDrag = !1, [s]);
    }, t.prototype.onDragEnter = function(e) {
      e.dragItem.rowNodes = this.getRowNodes(e), this.dispatchGridEvent(g.EVENT_ROW_DRAG_ENTER, e), this.getRowNodes(e).forEach(function(r) {
        r.setDragging(!0);
      }), this.onEnterOrDragging(e);
    }, t.prototype.onDragging = function(e) {
      this.onEnterOrDragging(e);
    }, t.prototype.isFromThisGrid = function(e) {
      var r = e.dragSource.dragSourceDomDataKey;
      return r === this.gridOptionsService.getDomDataKey();
    }, t.prototype.isDropZoneWithinThisGrid = function(e) {
      var r = this.ctrlsService.getGridBodyCtrl(), i = r.getGui(), o = e.dropZoneTarget;
      return !i.contains(o);
    }, t.prototype.onEnterOrDragging = function(e) {
      this.dispatchGridEvent(g.EVENT_ROW_DRAG_MOVE, e), this.lastDraggingEvent = e;
      var r = this.mouseEventService.getNormalisedPosition(e).y, i = this.gridOptionsService.is("rowDragManaged");
      i && this.doManagedDrag(e, r), this.autoScrollService.check(e.event);
    }, t.prototype.doManagedDrag = function(e, r) {
      var i = this.isFromThisGrid(e), o = this.gridOptionsService.is("rowDragManaged"), s = e.dragItem.rowNodes;
      o && this.shouldPreventRowMove() || (this.gridOptionsService.is("suppressMoveWhenRowDragging") || !i ? this.isDropZoneWithinThisGrid(e) || this.clientSideRowModel.highlightRowAtPixel(s[0], r) : this.moveRows(s, r));
    }, t.prototype.getRowIndexNumber = function(e) {
      return parseInt(q(e.getRowIndexString().split("-")), 10);
    }, t.prototype.moveRowAndClearHighlight = function(e) {
      var r = this, i = this.clientSideRowModel.getLastHighlightedRowNode(), o = i && i.highlighted === ut.Below, s = this.mouseEventService.getNormalisedPosition(e).y, a = e.dragItem.rowNodes, l = o ? 1 : 0;
      if (this.isFromThisGrid(e))
        a.forEach(function(p) {
          p.rowTop < s && (l -= 1);
        }), this.moveRows(a, s, l);
      else {
        var u = this.gridOptionsService.getRowIdFunc(), c = this.clientSideRowModel.getRowIndexAtPixel(s) + 1;
        this.clientSideRowModel.getHighlightPosition(s) === ut.Above && c--, this.clientSideRowModel.updateRowData({
          add: a.map(function(p) {
            return p.data;
          }).filter(function(p) {
            return !r.clientSideRowModel.getRowNode(u ? u({ data: p, level: 0 }) : p.id);
          }),
          addIndex: c
        });
      }
      this.clearRowHighlight();
    }, t.prototype.clearRowHighlight = function() {
      this.clientSideRowModel.highlightRowAtPixel(null);
    }, t.prototype.moveRows = function(e, r, i) {
      i === void 0 && (i = 0);
      var o = this.clientSideRowModel.ensureRowsAtPixel(e, r, i);
      o && (this.focusService.clearFocusedCell(), this.rangeService && this.rangeService.removeAllCellRanges());
    }, t.prototype.addRowDropZone = function(e) {
      var r = this;
      if (!e.getContainer()) {
        K(function() {
          return console.warn("AG Grid: addRowDropZone - A container target needs to be provided");
        }, "add-drop-zone-empty-target");
        return;
      }
      if (this.dragAndDropService.findExternalZone(e)) {
        console.warn("AG Grid: addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again.");
        return;
      }
      var i = {
        getContainer: e.getContainer
      };
      e.fromGrid ? (e.fromGrid = void 0, i = e) : (e.onDragEnter && (i.onDragEnter = function(o) {
        e.onDragEnter(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_ENTER, o));
      }), e.onDragLeave && (i.onDragLeave = function(o) {
        e.onDragLeave(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_LEAVE, o));
      }), e.onDragging && (i.onDragging = function(o) {
        e.onDragging(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_MOVE, o));
      }), e.onDragStop && (i.onDragStop = function(o) {
        e.onDragStop(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_END, o));
      })), this.dragAndDropService.addDropTarget(Hn({ isInterestedIn: function(o) {
        return o === we.RowDrag;
      }, getIconName: function() {
        return de.ICON_MOVE;
      }, external: !0 }, i));
    }, t.prototype.getRowDropZone = function(e) {
      var r = this, i = this.getContainer.bind(this), o = this.onDragEnter.bind(this), s = this.onDragLeave.bind(this), a = this.onDragging.bind(this), l = this.onDragStop.bind(this);
      return e ? {
        getContainer: i,
        onDragEnter: e.onDragEnter ? function(u) {
          o(u), e.onDragEnter(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_ENTER, u));
        } : o,
        onDragLeave: e.onDragLeave ? function(u) {
          s(u), e.onDragLeave(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_LEAVE, u));
        } : s,
        onDragging: e.onDragging ? function(u) {
          a(u), e.onDragging(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_MOVE, u));
        } : a,
        onDragStop: e.onDragStop ? function(u) {
          l(u), e.onDragStop(r.draggingToRowDragEvent(g.EVENT_ROW_DRAG_END, u));
        } : l,
        fromGrid: !0
        /* @private */
      } : {
        getContainer: i,
        onDragEnter: o,
        onDragLeave: s,
        onDragging: a,
        onDragStop: l,
        /* @private */
        fromGrid: !0
      };
    }, t.prototype.draggingToRowDragEvent = function(e, r) {
      var i = this.mouseEventService.getNormalisedPosition(r).y, o = i > this.paginationProxy.getCurrentPageHeight(), s = -1, a;
      o || (s = this.rowModel.getRowIndexAtPixel(i), a = this.rowModel.getRow(s));
      var l;
      switch (r.vDirection) {
        case lr.Down:
          l = "down";
          break;
        case lr.Up:
          l = "up";
          break;
        default:
          l = null;
          break;
      }
      var u = {
        type: e,
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi,
        context: this.gridOptionsService.context,
        event: r.event,
        node: r.dragItem.rowNode,
        nodes: r.dragItem.rowNodes,
        overIndex: s,
        overNode: a,
        y: i,
        vDirection: l
      };
      return u;
    }, t.prototype.dispatchGridEvent = function(e, r) {
      var i = this.draggingToRowDragEvent(e, r);
      this.eventService.dispatchEvent(i);
    }, t.prototype.onDragLeave = function(e) {
      this.dispatchGridEvent(g.EVENT_ROW_DRAG_LEAVE, e), this.stopDragging(e), this.gridOptionsService.is("rowDragManaged") && this.clearRowHighlight(), this.isFromThisGrid(e) && (this.isMultiRowDrag = !1);
    }, t.prototype.onDragStop = function(e) {
      this.dispatchGridEvent(g.EVENT_ROW_DRAG_END, e), this.stopDragging(e), this.gridOptionsService.is("rowDragManaged") && (this.gridOptionsService.is("suppressMoveWhenRowDragging") || !this.isFromThisGrid(e)) && !this.isDropZoneWithinThisGrid(e) && this.moveRowAndClearHighlight(e);
    }, t.prototype.stopDragging = function(e) {
      this.autoScrollService.ensureCleared(), this.getRowNodes(e).forEach(function(r) {
        r.setDragging(!1);
      });
    }, Le([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), Le([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), Le([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), Le([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Le([
      h("focusService")
    ], t.prototype, "focusService", void 0), Le([
      h("sortController")
    ], t.prototype, "sortController", void 0), Le([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), Le([
      h("selectionService")
    ], t.prototype, "selectionService", void 0), Le([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), Le([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Le([
      Y("rangeService")
    ], t.prototype, "rangeService", void 0), Le([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var _f = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Me = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, ur;
(function(n) {
  n.ANIMATION_ON = "ag-row-animation", n.ANIMATION_OFF = "ag-row-no-animation";
})(ur || (ur = {}));
var yu = "ag-selectable", Cu = "ag-force-vertical-scroll", Rf = "ag-column-moving", Of = (
  /** @class */
  function(n) {
    _f(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.stickyTopHeight = 0, e;
    }
    return t.prototype.getScrollFeature = function() {
      return this.bodyScrollFeature;
    }, t.prototype.getBodyViewportElement = function() {
      return this.eBodyViewport;
    }, t.prototype.setComp = function(e, r, i, o, s, a) {
      this.comp = e, this.eGridBody = r, this.eBodyViewport = i, this.eTop = o, this.eBottom = s, this.eStickyTop = a, this.setCellTextSelection(this.gridOptionsService.is("enableCellTextSelection")), this.createManagedBean(new _s(this.comp)), this.bodyScrollFeature = this.createManagedBean(new yf(this.eBodyViewport)), this.addRowDragListener(), this.setupRowAnimationCssClass(), this.addEventListeners(), this.addFocusListeners([o, i, s, a]), this.onGridColumnsChanged(), this.addBodyViewportListener(), this.setFloatingHeights(), this.disableBrowserDragging(), this.addStopEditingWhenGridLosesFocus(), this.ctrlsService.registerGridBodyCtrl(this);
    }, t.prototype.getComp = function() {
      return this.comp;
    }, t.prototype.addEventListeners = function() {
      this.addManagedListener(this.eventService, g.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_PINNED_ROW_DATA_CHANGED, this.onPinnedRowDataChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_HEADER_HEIGHT_CHANGED, this.onHeaderHeightChanged.bind(this));
    }, t.prototype.addFocusListeners = function(e) {
      var r = this;
      e.forEach(function(i) {
        r.addManagedListener(i, "focusin", function(o) {
          var s = o.target, a = Mt(s, "ag-root", i);
          i.classList.toggle("ag-has-focus", !a);
        }), r.addManagedListener(i, "focusout", function(o) {
          var s = o.target, a = o.relatedTarget, l = i.contains(a), u = Mt(a, "ag-root", i), c = Mt(s, "ag-root", i);
          c || (!l || u) && i.classList.remove("ag-has-focus");
        });
      });
    }, t.prototype.setColumnMovingCss = function(e) {
      this.comp.setColumnMovingCss(Rf, e);
    }, t.prototype.setCellTextSelection = function(e) {
      e === void 0 && (e = !1);
      var r = e ? yu : null;
      this.comp.setCellSelectableCss(r, e);
    }, t.prototype.onScrollVisibilityChanged = function() {
      var e = this.scrollVisibleService.isVerticalScrollShowing();
      this.setVerticalScrollPaddingVisible(e), this.setStickyTopWidth(e);
      var r = e && this.gridOptionsService.getScrollbarWidth() || 0, i = Jt() ? 16 : 0, o = "calc(100% + " + (r + i) + "px)";
      this.comp.setBodyViewportWidth(o);
    }, t.prototype.onGridColumnsChanged = function() {
      var e = this.columnModel.getAllGridColumns();
      this.comp.setColumnCount(e ? e.length : 0);
    }, t.prototype.disableBrowserDragging = function() {
      this.addManagedListener(this.eGridBody, "dragstart", function(e) {
        if (e.target instanceof HTMLImageElement)
          return e.preventDefault(), !1;
      });
    }, t.prototype.addStopEditingWhenGridLosesFocus = function() {
      var e = this;
      if (this.gridOptionsService.is("stopEditingWhenCellsLoseFocus")) {
        var r = function(o) {
          var s = o.relatedTarget;
          if (Bi(s) === null) {
            e.rowRenderer.stopEditing();
            return;
          }
          var a = (
            // see if click came from inside the viewports
            i.some(function(u) {
              return u.contains(s);
            }) && e.mouseEventService.isElementInThisGrid(s)
          );
          if (!a) {
            var l = e.popupService;
            a = l.getActivePopups().some(function(u) {
              return u.contains(s);
            }) || l.isElementWithinCustomPopup(s);
          }
          a || e.rowRenderer.stopEditing();
        }, i = [this.eBodyViewport, this.eBottom, this.eTop, this.eStickyTop];
        i.forEach(function(o) {
          return e.addManagedListener(o, "focusout", r);
        });
      }
    }, t.prototype.updateRowCount = function() {
      var e = this.headerNavigationService.getHeaderRowCount(), r = this.rowModel.isLastRowIndexKnown() ? this.rowModel.getRowCount() : -1, i = r === -1 ? -1 : e + r;
      this.comp.setRowCount(i);
    }, t.prototype.registerBodyViewportResizeListener = function(e) {
      this.comp.registerBodyViewportResizeListener(e);
    }, t.prototype.setVerticalScrollPaddingVisible = function(e) {
      var r = e ? "scroll" : "hidden";
      this.comp.setPinnedTopBottomOverflowY(r);
    }, t.prototype.isVerticalScrollShowing = function() {
      var e = this.gridOptionsService.is("alwaysShowVerticalScroll"), r = e ? Cu : null, i = this.gridOptionsService.isDomLayout("normal");
      return this.comp.setAlwaysVerticalScrollClass(r, e), e || i && Bl(this.eBodyViewport);
    }, t.prototype.setupRowAnimationCssClass = function() {
      var e = this, r = function() {
        var i = e.gridOptionsService.isAnimateRows() && !e.rowContainerHeightService.isStretching(), o = i ? ur.ANIMATION_ON : ur.ANIMATION_OFF;
        e.comp.setRowAnimationCssOnBodyViewport(o, i);
      };
      r(), this.addManagedListener(this.eventService, g.EVENT_HEIGHT_SCALE_CHANGED, r), this.addManagedPropertyListener("animateRows", r);
    }, t.prototype.getGridBodyElement = function() {
      return this.eGridBody;
    }, t.prototype.addBodyViewportListener = function() {
      var e = this.onBodyViewportContextMenu.bind(this);
      this.addManagedListener(this.eBodyViewport, "contextmenu", e), this.mockContextMenuForIPad(e), this.addManagedListener(this.eBodyViewport, "wheel", this.onBodyViewportWheel.bind(this)), this.addManagedListener(this.eStickyTop, "wheel", this.onStickyTopWheel.bind(this)), this.addFullWidthContainerWheelListener();
    }, t.prototype.addFullWidthContainerWheelListener = function() {
      var e = this, r = this.eBodyViewport.querySelector(".ag-full-width-container"), i = this.eBodyViewport.querySelector(".ag-center-cols-viewport");
      r && i && this.addManagedListener(r, "wheel", function(o) {
        return e.onFullWidthContainerWheel(o, i);
      });
    }, t.prototype.onFullWidthContainerWheel = function(e, r) {
      !e.deltaX || Math.abs(e.deltaY) > Math.abs(e.deltaX) || (e.preventDefault(), r.scrollBy({ left: e.deltaX }));
    }, t.prototype.onBodyViewportContextMenu = function(e, r, i) {
      if (!(!e && !i)) {
        if (this.gridOptionsService.is("preventDefaultOnContextMenu")) {
          var o = e || i;
          o.preventDefault();
        }
        var s = (e || r).target;
        if (s === this.eBodyViewport || s === this.ctrlsService.getCenterRowContainerCtrl().getViewportElement()) {
          if (!this.contextMenuFactory)
            return;
          e ? this.contextMenuFactory.onContextMenu(e, null, null, null, null, this.eGridBody) : i && this.contextMenuFactory.onContextMenu(null, i, null, null, null, this.eGridBody);
        }
      }
    }, t.prototype.mockContextMenuForIPad = function(e) {
      if (Ot()) {
        var r = new Ae(this.eBodyViewport), i = function(o) {
          e(void 0, o.touchStart, o.touchEvent);
        };
        this.addManagedListener(r, Ae.EVENT_LONG_TAP, i), this.addDestroyFunc(function() {
          return r.destroy();
        });
      }
    }, t.prototype.onBodyViewportWheel = function(e) {
      this.gridOptionsService.is("suppressScrollWhenPopupsAreOpen") && this.popupService.hasAnchoredPopup() && e.preventDefault();
    }, t.prototype.onStickyTopWheel = function(e) {
      e.preventDefault(), e.offsetY && this.scrollVertically(e.deltaY);
    }, t.prototype.getGui = function() {
      return this.eGridBody;
    }, t.prototype.scrollVertically = function(e) {
      var r = this.eBodyViewport.scrollTop;
      return this.bodyScrollFeature.setVerticalScrollPosition(r + e), this.eBodyViewport.scrollTop - r;
    }, t.prototype.addRowDragListener = function() {
      this.rowDragFeature = this.createManagedBean(new Ef(this.eBodyViewport)), this.dragAndDropService.addDropTarget(this.rowDragFeature);
    }, t.prototype.getRowDragFeature = function() {
      return this.rowDragFeature;
    }, t.prototype.onPinnedRowDataChanged = function() {
      this.setFloatingHeights();
    }, t.prototype.setFloatingHeights = function() {
      var e = this.pinnedRowModel, r = e.getPinnedTopTotalHeight();
      r && (r += 1);
      var i = e.getPinnedBottomTotalHeight();
      i && (i += 1), this.comp.setTopHeight(r), this.comp.setBottomHeight(i), this.comp.setTopDisplay(r ? "inherit" : "none"), this.comp.setBottomDisplay(i ? "inherit" : "none"), this.setStickyTopOffsetTop();
    }, t.prototype.setStickyTopHeight = function(e) {
      e === void 0 && (e = 0), this.comp.setStickyTopHeight(e + "px"), this.stickyTopHeight = e;
    }, t.prototype.getStickyTopHeight = function() {
      return this.stickyTopHeight;
    }, t.prototype.setStickyTopWidth = function(e) {
      if (!e)
        this.comp.setStickyTopWidth("100%");
      else {
        var r = this.gridOptionsService.getScrollbarWidth();
        this.comp.setStickyTopWidth("calc(100% - " + r + "px)");
      }
    }, t.prototype.onHeaderHeightChanged = function() {
      this.setStickyTopOffsetTop();
    }, t.prototype.setStickyTopOffsetTop = function() {
      var e = this.ctrlsService.getGridHeaderCtrl(), r = e.getHeaderHeight(), i = this.pinnedRowModel.getPinnedTopTotalHeight(), o = 0;
      r > 0 && (o += r + 1), i > 0 && (o += i + 1), this.comp.setStickyTopTop(o + "px");
    }, t.prototype.sizeColumnsToFit = function(e, r) {
      var i = this, o = this.isVerticalScrollShowing(), s = o ? this.gridOptionsService.getScrollbarWidth() : 0, a = po(this.eGridBody), l = a - s;
      if (l > 0) {
        this.columnModel.sizeColumnsToFit(l, "sizeColumnsToFit", !1, e);
        return;
      }
      r === void 0 ? window.setTimeout(function() {
        i.sizeColumnsToFit(e, 100);
      }, 0) : r === 100 ? window.setTimeout(function() {
        i.sizeColumnsToFit(e, 500);
      }, 100) : r === 500 ? window.setTimeout(function() {
        i.sizeColumnsToFit(e, -1);
      }, 500) : console.warn("AG Grid: tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?");
    }, t.prototype.addScrollEventListener = function(e) {
      this.eBodyViewport.addEventListener("scroll", e, { passive: !0 });
    }, t.prototype.removeScrollEventListener = function(e) {
      this.eBodyViewport.removeEventListener("scroll", e);
    }, Me([
      h("rowContainerHeightService")
    ], t.prototype, "rowContainerHeightService", void 0), Me([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Me([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Me([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), Me([
      Y("contextMenuFactory")
    ], t.prototype, "contextMenuFactory", void 0), Me([
      h("headerNavigationService")
    ], t.prototype, "headerNavigationService", void 0), Me([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), Me([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), Me([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), Me([
      h("popupService")
    ], t.prototype, "popupService", void 0), Me([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), Me([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ji;
(function(n) {
  n[n.FILL = 0] = "FILL", n[n.RANGE = 1] = "RANGE";
})(Ji || (Ji = {}));
var qt;
(function(n) {
  n[n.VALUE = 0] = "VALUE", n[n.DIMENSION = 1] = "DIMENSION";
})(qt || (qt = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var yr = "ag-cell-range-selected", Tf = "ag-cell-range-chart", bf = "ag-cell-range-single-cell", Pf = "ag-cell-range-chart-category", Df = "ag-cell-range-handle", Af = "ag-cell-range-top", Ff = "ag-cell-range-right", Lf = "ag-cell-range-bottom", Mf = "ag-cell-range-left", If = (
  /** @class */
  function() {
    function n(t, e) {
      this.beans = t, this.cellCtrl = e;
    }
    return n.prototype.setComp = function(t, e) {
      this.cellComp = t, this.eGui = e, this.onRangeSelectionChanged();
    }, n.prototype.onRangeSelectionChanged = function() {
      this.cellComp && (this.rangeCount = this.beans.rangeService.getCellRangeCount(this.cellCtrl.getCellPosition()), this.hasChartRange = this.getHasChartRange(), this.cellComp.addOrRemoveCssClass(yr, this.rangeCount !== 0), this.cellComp.addOrRemoveCssClass(yr + "-1", this.rangeCount === 1), this.cellComp.addOrRemoveCssClass(yr + "-2", this.rangeCount === 2), this.cellComp.addOrRemoveCssClass(yr + "-3", this.rangeCount === 3), this.cellComp.addOrRemoveCssClass(yr + "-4", this.rangeCount >= 4), this.cellComp.addOrRemoveCssClass(Tf, this.hasChartRange), or(this.eGui, this.rangeCount > 0 ? !0 : void 0), this.cellComp.addOrRemoveCssClass(bf, this.isSingleCell()), this.updateRangeBorders(), this.refreshHandle());
    }, n.prototype.updateRangeBorders = function() {
      var t = this.getRangeBorders(), e = this.isSingleCell(), r = !e && t.top, i = !e && t.right, o = !e && t.bottom, s = !e && t.left;
      this.cellComp.addOrRemoveCssClass(Af, r), this.cellComp.addOrRemoveCssClass(Ff, i), this.cellComp.addOrRemoveCssClass(Lf, o), this.cellComp.addOrRemoveCssClass(Mf, s);
    }, n.prototype.isSingleCell = function() {
      var t = this.beans.rangeService;
      return this.rangeCount === 1 && t && !t.isMoreThanOneCell();
    }, n.prototype.getHasChartRange = function() {
      var t = this.beans.rangeService;
      if (!this.rangeCount || !t)
        return !1;
      var e = t.getCellRanges();
      return e.length > 0 && e.every(function(r) {
        return Ve([qt.DIMENSION, qt.VALUE], r.type);
      });
    }, n.prototype.updateRangeBordersIfRangeCount = function() {
      this.rangeCount > 0 && (this.updateRangeBorders(), this.refreshHandle());
    }, n.prototype.getRangeBorders = function() {
      var t = this, e = this.beans.gridOptionsService.is("enableRtl"), r = !1, i = !1, o = !1, s = !1, a = this.cellCtrl.getCellPosition().column, l = this.beans, u = l.rangeService, c = l.columnModel, p, d;
      e ? (p = c.getDisplayedColAfter(a), d = c.getDisplayedColBefore(a)) : (p = c.getDisplayedColBefore(a), d = c.getDisplayedColAfter(a));
      var v = u.getCellRanges().filter(function(w) {
        return u.isCellInSpecificRange(t.cellCtrl.getCellPosition(), w);
      });
      p || (s = !0), d || (i = !0);
      for (var f = 0; f < v.length && !(r && i && o && s); f++) {
        var y = v[f], C = u.getRangeStartRow(y), m = u.getRangeEndRow(y);
        !r && this.beans.rowPositionUtils.sameRow(C, this.cellCtrl.getCellPosition()) && (r = !0), !o && this.beans.rowPositionUtils.sameRow(m, this.cellCtrl.getCellPosition()) && (o = !0), !s && p && y.columns.indexOf(p) < 0 && (s = !0), !i && d && y.columns.indexOf(d) < 0 && (i = !0);
      }
      return { top: r, right: i, bottom: o, left: s };
    }, n.prototype.refreshHandle = function() {
      if (this.beans.rangeService) {
        var t = this.shouldHaveSelectionHandle();
        this.selectionHandle && !t && (this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle)), t && this.addSelectionHandle(), this.cellComp.addOrRemoveCssClass(Df, !!this.selectionHandle);
      }
    }, n.prototype.shouldHaveSelectionHandle = function() {
      var t = this.beans, e = t.gridOptionsService, r = t.rangeService, i = r.getCellRanges(), o = i.length;
      if (this.rangeCount < 1 || o < 1)
        return !1;
      var s = q(i), a = this.cellCtrl.getCellPosition(), l = e.is("enableFillHandle") && !this.cellCtrl.isSuppressFillHandle(), u = e.is("enableRangeHandle"), c = o === 1 && !this.cellCtrl.isEditing() && (l || u);
      if (this.hasChartRange) {
        var p = i[0].type === qt.DIMENSION, d = p && r.isCellInSpecificRange(a, i[0]);
        this.cellComp.addOrRemoveCssClass(Pf, d), c = s.type === qt.VALUE;
      }
      return c && s.endRow != null && r.isContiguousRange(s) && r.isBottomRightCell(s, a);
    }, n.prototype.addSelectionHandle = function() {
      var t = this.beans, e = t.gridOptionsService, r = t.rangeService, i = q(r.getCellRanges()).type, o = e.is("enableFillHandle") && x(i), s = o ? Ji.FILL : Ji.RANGE;
      this.selectionHandle && this.selectionHandle.getType() !== s && (this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle)), this.selectionHandle || (this.selectionHandle = this.beans.selectionHandleFactory.createSelectionHandle(s)), this.selectionHandle.refresh(this.cellCtrl);
    }, n.prototype.destroy = function() {
      this.beans.context.destroyBean(this.selectionHandle);
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var xf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Nf = (
  /** @class */
  function(n) {
    xf(t, n);
    function t(e, r) {
      var i = n.call(this) || this;
      return i.cellCtrl = e, i.beans = r, i.column = e.getColumn(), i.rowNode = e.getRowNode(), i.setupColSpan(), i.setupRowSpan(), i;
    }
    return t.prototype.setupRowSpan = function() {
      this.rowSpan = this.column.getRowSpan(this.rowNode);
    }, t.prototype.setComp = function(e) {
      this.eGui = e, this.onLeftChanged(), this.onWidthChanged(), this.applyRowSpan();
    }, t.prototype.onDisplayColumnsChanged = function() {
      var e = this.getColSpanningList();
      Ct(this.colsSpanning, e) || (this.colsSpanning = e, this.onWidthChanged(), this.onLeftChanged());
    }, t.prototype.setupColSpan = function() {
      this.column.getColDef().colSpan != null && (this.colsSpanning = this.getColSpanningList(), this.addManagedListener(this.beans.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayColumnsChanged.bind(this)), this.addManagedListener(this.beans.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onWidthChanged.bind(this)));
    }, t.prototype.onWidthChanged = function() {
      if (this.eGui) {
        var e = this.getCellWidth();
        this.eGui.style.width = e + "px";
      }
    }, t.prototype.getCellWidth = function() {
      return this.colsSpanning ? this.colsSpanning.reduce(function(e, r) {
        return e + r.getActualWidth();
      }, 0) : this.column.getActualWidth();
    }, t.prototype.getColSpanningList = function() {
      var e = this.column.getColSpan(this.rowNode), r = [];
      if (e === 1)
        r.push(this.column);
      else
        for (var i = this.column, o = this.column.getPinned(), s = 0; i && s < e && (r.push(i), i = this.beans.columnModel.getDisplayedColAfter(i), !(!i || x(i) || o !== i.getPinned())); s++)
          ;
      return r;
    }, t.prototype.onLeftChanged = function() {
      if (this.eGui) {
        var e = this.modifyLeftForPrintLayout(this.getCellLeft());
        this.eGui.style.left = e + "px";
      }
    }, t.prototype.getCellLeft = function() {
      var e;
      return this.beans.gridOptionsService.is("enableRtl") && this.colsSpanning ? e = q(this.colsSpanning) : e = this.column, e.getLeft();
    }, t.prototype.modifyLeftForPrintLayout = function(e) {
      if (!this.cellCtrl.isPrintLayout() || this.column.getPinned() === "left")
        return e;
      var r = this.beans.columnModel.getDisplayedColumnsLeftWidth();
      if (this.column.getPinned() === "right") {
        var i = this.beans.columnModel.getBodyContainerWidth();
        return r + i + (e || 0);
      }
      return r + (e || 0);
    }, t.prototype.applyRowSpan = function() {
      if (this.rowSpan !== 1) {
        var e = this.beans.gridOptionsService.getRowHeightAsNumber(), r = e * this.rowSpan;
        this.eGui.style.height = r + "px", this.eGui.style.zIndex = "1";
      }
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Gf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Hf = (
  /** @class */
  function(n) {
    Gf(t, n);
    function t(e, r) {
      var i = n.call(this) || this;
      return i.staticClasses = [], i.cellCtrl = e, i.beans = r, i.column = e.getColumn(), i.rowNode = e.getRowNode(), i;
    }
    return t.prototype.setComp = function(e) {
      this.cellComp = e, this.applyUserStyles(), this.applyCellClassRules(), this.applyClassesFromColDef();
    }, t.prototype.applyCellClassRules = function() {
      var e = this, r = this.column.getColDef(), i = {
        value: this.cellCtrl.getValue(),
        data: this.rowNode.data,
        node: this.rowNode,
        colDef: r,
        column: this.column,
        rowIndex: this.rowNode.rowIndex,
        api: this.beans.gridOptionsService.api,
        columnApi: this.beans.gridOptionsService.columnApi,
        context: this.beans.gridOptionsService.context
      };
      this.beans.stylingService.processClassRules(r.cellClassRules, i, function(o) {
        return e.cellComp.addOrRemoveCssClass(o, !0);
      }, function(o) {
        return e.cellComp.addOrRemoveCssClass(o, !1);
      });
    }, t.prototype.applyUserStyles = function() {
      var e = this.column.getColDef();
      if (e.cellStyle) {
        var r;
        if (typeof e.cellStyle == "function") {
          var i = {
            column: this.column,
            value: this.cellCtrl.getValue(),
            colDef: e,
            data: this.rowNode.data,
            node: this.rowNode,
            rowIndex: this.rowNode.rowIndex,
            api: this.beans.gridOptionsService.api,
            columnApi: this.beans.gridOptionsService.columnApi,
            context: this.beans.gridOptionsService.context
          }, o = e.cellStyle;
          r = o(i);
        } else
          r = e.cellStyle;
        r && this.cellComp.setUserStyles(r);
      }
    }, t.prototype.applyClassesFromColDef = function() {
      var e = this, r = this.column.getColDef(), i = {
        value: this.cellCtrl.getValue(),
        data: this.rowNode.data,
        node: this.rowNode,
        column: this.column,
        colDef: r,
        rowIndex: this.rowNode.rowIndex,
        api: this.beans.gridOptionsService.api,
        columnApi: this.beans.gridOptionsService.columnApi,
        context: this.beans.gridOptionsService.context
      };
      this.staticClasses.length && this.staticClasses.forEach(function(o) {
        return e.cellComp.addOrRemoveCssClass(o, !1);
      }), this.staticClasses = this.beans.stylingService.getStaticCellClasses(r, i), this.staticClasses.length && this.staticClasses.forEach(function(o) {
        return e.cellComp.addOrRemoveCssClass(o, !0);
      });
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Vf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Rs = (
  /** @class */
  function(n) {
    Vf(t, n);
    function t(e, r) {
      var i = n.call(this) || this;
      return i.ctrl = e, i.beans = r, i;
    }
    return t.prototype.setComp = function(e) {
      this.comp = e, this.setupTooltip();
    }, t.prototype.setupTooltip = function() {
      this.browserTooltips = this.beans.gridOptionsService.is("enableBrowserTooltips"), this.updateTooltipText(), this.browserTooltips ? this.comp.setTitle(this.tooltip != null ? this.tooltip : void 0) : this.createTooltipFeatureIfNeeded();
    }, t.prototype.updateTooltipText = function() {
      this.tooltip = this.ctrl.getTooltipValue();
    }, t.prototype.createTooltipFeatureIfNeeded = function() {
      var e = this;
      if (this.genericTooltipFeature == null) {
        var r = {
          getTooltipParams: function() {
            return e.getTooltipParams();
          },
          getGui: function() {
            return e.ctrl.getGui();
          }
        };
        this.genericTooltipFeature = this.createManagedBean(new ys(r), this.beans.context);
      }
    }, t.prototype.refreshToolTip = function() {
      this.updateTooltipText(), this.browserTooltips && this.comp.setTitle(this.tooltip != null ? this.tooltip : void 0);
    }, t.prototype.getTooltipParams = function() {
      var e = this.ctrl, r = e.getColumn ? e.getColumn() : void 0, i = e.getColDef ? e.getColDef() : void 0, o = e.getRowNode ? e.getRowNode() : void 0;
      return {
        location: e.getLocation(),
        colDef: i,
        column: r,
        rowIndex: e.getRowIndex ? e.getRowIndex() : void 0,
        node: o,
        data: o ? o.data : void 0,
        value: this.getTooltipText(),
        valueFormatted: e.getValueFormatted ? e.getValueFormatted() : void 0
      };
    }, t.prototype.getTooltipText = function() {
      return this.tooltip;
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var V = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, mu = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.postConstruct = function() {
      this.doingMasterDetail = this.gridOptionsService.isMasterDetail(), this.gridOptionsService.isRowModelType("clientSide") && (this.clientSideRowModel = this.rowModel), this.gridOptionsService.isRowModelType("serverSide") && (this.serverSideRowModel = this.rowModel);
    }, V([
      h("resizeObserverService")
    ], n.prototype, "resizeObserverService", void 0), V([
      h("paginationProxy")
    ], n.prototype, "paginationProxy", void 0), V([
      h("context")
    ], n.prototype, "context", void 0), V([
      h("columnApi")
    ], n.prototype, "columnApi", void 0), V([
      h("gridApi")
    ], n.prototype, "gridApi", void 0), V([
      h("gridOptionsService")
    ], n.prototype, "gridOptionsService", void 0), V([
      h("expressionService")
    ], n.prototype, "expressionService", void 0), V([
      h("environment")
    ], n.prototype, "environment", void 0), V([
      h("rowRenderer")
    ], n.prototype, "rowRenderer", void 0), V([
      h("templateService")
    ], n.prototype, "templateService", void 0), V([
      h("valueService")
    ], n.prototype, "valueService", void 0), V([
      h("eventService")
    ], n.prototype, "eventService", void 0), V([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), V([
      h("headerNavigationService")
    ], n.prototype, "headerNavigationService", void 0), V([
      h("navigationService")
    ], n.prototype, "navigationService", void 0), V([
      h("columnAnimationService")
    ], n.prototype, "columnAnimationService", void 0), V([
      Y("rangeService")
    ], n.prototype, "rangeService", void 0), V([
      h("focusService")
    ], n.prototype, "focusService", void 0), V([
      Y("contextMenuFactory")
    ], n.prototype, "contextMenuFactory", void 0), V([
      h("popupService")
    ], n.prototype, "popupService", void 0), V([
      h("valueFormatterService")
    ], n.prototype, "valueFormatterService", void 0), V([
      h("stylingService")
    ], n.prototype, "stylingService", void 0), V([
      h("columnHoverService")
    ], n.prototype, "columnHoverService", void 0), V([
      h("userComponentFactory")
    ], n.prototype, "userComponentFactory", void 0), V([
      h("userComponentRegistry")
    ], n.prototype, "userComponentRegistry", void 0), V([
      h("animationFrameService")
    ], n.prototype, "animationFrameService", void 0), V([
      h("dragService")
    ], n.prototype, "dragService", void 0), V([
      h("dragAndDropService")
    ], n.prototype, "dragAndDropService", void 0), V([
      h("sortController")
    ], n.prototype, "sortController", void 0), V([
      h("filterManager")
    ], n.prototype, "filterManager", void 0), V([
      h("rowContainerHeightService")
    ], n.prototype, "rowContainerHeightService", void 0), V([
      h("frameworkOverrides")
    ], n.prototype, "frameworkOverrides", void 0), V([
      h("cellPositionUtils")
    ], n.prototype, "cellPositionUtils", void 0), V([
      h("rowPositionUtils")
    ], n.prototype, "rowPositionUtils", void 0), V([
      h("selectionService")
    ], n.prototype, "selectionService", void 0), V([
      Y("selectionHandleFactory")
    ], n.prototype, "selectionHandleFactory", void 0), V([
      h("rowCssClassCalculator")
    ], n.prototype, "rowCssClassCalculator", void 0), V([
      h("rowModel")
    ], n.prototype, "rowModel", void 0), V([
      h("ctrlsService")
    ], n.prototype, "ctrlsService", void 0), V([
      h("ctrlsFactory")
    ], n.prototype, "ctrlsFactory", void 0), V([
      h("agStackComponentsRegistry")
    ], n.prototype, "agStackComponentsRegistry", void 0), V([
      h("valueCache")
    ], n.prototype, "valueCache", void 0), V([
      h("rowNodeEventThrottle")
    ], n.prototype, "rowNodeEventThrottle", void 0), V([
      h("localeService")
    ], n.prototype, "localeService", void 0), V([
      b
    ], n.prototype, "postConstruct", null), n = V([
      A("beans")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Bf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Wf = (
  /** @class */
  function(n) {
    Bf(t, n);
    function t(e, r, i) {
      var o = n.call(this) || this;
      return o.cellCtrl = e, o.beans = r, o.column = i, o;
    }
    return t.prototype.onMouseEvent = function(e, r) {
      if (!et(r))
        switch (e) {
          case "click":
            this.onCellClicked(r);
            break;
          case "mousedown":
          case "touchstart":
            this.onMouseDown(r);
            break;
          case "dblclick":
            this.onCellDoubleClicked(r);
            break;
          case "mouseout":
            this.onMouseOut(r);
            break;
          case "mouseover":
            this.onMouseOver(r);
            break;
        }
    }, t.prototype.onCellClicked = function(e) {
      if (this.isDoubleClickOnIPad()) {
        this.onCellDoubleClicked(e), e.preventDefault();
        return;
      }
      var r = this.beans, i = r.eventService, o = r.rangeService, s = r.gridOptionsService, a = e.ctrlKey || e.metaKey;
      o && a && o.getCellRangeCount(this.cellCtrl.getCellPosition()) > 1 && o.intersectLastRange(!0);
      var l = this.cellCtrl.createEvent(e, g.EVENT_CELL_CLICKED);
      i.dispatchEvent(l);
      var u = this.column.getColDef();
      u.onCellClicked && window.setTimeout(function() {
        return u.onCellClicked(l);
      }, 0);
      var c = (s.is("singleClickEdit") || u.singleClickEdit) && !s.is("suppressClickEdit");
      c && this.cellCtrl.startRowOrCellEdit();
    }, t.prototype.isDoubleClickOnIPad = function() {
      if (!Ot() || Yn("dblclick"))
        return !1;
      var e = (/* @__PURE__ */ new Date()).getTime(), r = e - this.lastIPadMouseClickEvent < 200;
      return this.lastIPadMouseClickEvent = e, r;
    }, t.prototype.onCellDoubleClicked = function(e) {
      var r = this.column.getColDef(), i = this.cellCtrl.createEvent(e, g.EVENT_CELL_DOUBLE_CLICKED);
      this.beans.eventService.dispatchEvent(i), typeof r.onCellDoubleClicked == "function" && window.setTimeout(function() {
        return r.onCellDoubleClicked(i);
      }, 0);
      var o = !this.beans.gridOptionsService.is("singleClickEdit") && !this.beans.gridOptionsService.is("suppressClickEdit");
      o && this.cellCtrl.startRowOrCellEdit(null, null, e);
    }, t.prototype.onMouseDown = function(e) {
      var r = e.ctrlKey, i = e.metaKey, o = e.shiftKey, s = e.target, a = this.beans, l = a.eventService, u = a.rangeService;
      if (!this.isRightClickInExistingRange(e)) {
        var c = u && u.getCellRanges().length != 0;
        if (!o || !c) {
          var p = ot() && !this.cellCtrl.isEditing() && !ls(s);
          this.cellCtrl.focusCell(p);
        }
        if (o && c && e.preventDefault(), !this.containsWidget(s)) {
          if (u) {
            var d = this.cellCtrl.getCellPosition();
            if (o)
              u.extendLatestRangeToCell(d);
            else {
              var v = r || i;
              u.setRangeToCell(d, v);
            }
          }
          l.dispatchEvent(this.cellCtrl.createEvent(e, g.EVENT_CELL_MOUSE_DOWN));
        }
      }
    }, t.prototype.isRightClickInExistingRange = function(e) {
      var r = this.beans.rangeService;
      if (r) {
        var i = r.isCellInAnyRange(this.cellCtrl.getCellPosition());
        if (i && e.button === 2)
          return !0;
      }
      return !1;
    }, t.prototype.containsWidget = function(e) {
      return Mt(e, "ag-selection-checkbox", 3);
    }, t.prototype.onMouseOut = function(e) {
      if (!this.mouseStayingInsideCell(e)) {
        var r = this.cellCtrl.createEvent(e, g.EVENT_CELL_MOUSE_OUT);
        this.beans.eventService.dispatchEvent(r), this.beans.columnHoverService.clearMouseOver();
      }
    }, t.prototype.onMouseOver = function(e) {
      if (!this.mouseStayingInsideCell(e)) {
        var r = this.cellCtrl.createEvent(e, g.EVENT_CELL_MOUSE_OVER);
        this.beans.eventService.dispatchEvent(r), this.beans.columnHoverService.setMouseOver([this.column]);
      }
    }, t.prototype.mouseStayingInsideCell = function(e) {
      if (!e.target || !e.relatedTarget)
        return !1;
      var r = this.cellCtrl.getGui(), i = r.contains(e.target), o = r.contains(e.relatedTarget);
      return i && o;
    }, t.prototype.destroy = function() {
    }, t;
  }(mu)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var jf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), kf = (
  /** @class */
  function(n) {
    jf(t, n);
    function t(e, r, i, o, s) {
      var a = n.call(this) || this;
      return a.cellCtrl = e, a.beans = r, a.rowNode = o, a.rowCtrl = s, a;
    }
    return t.prototype.setComp = function(e) {
      this.eGui = e;
    }, t.prototype.onKeyDown = function(e) {
      var r = e.key;
      switch (r) {
        case _.ENTER:
          this.onEnterKeyDown(e);
          break;
        case _.F2:
          this.onF2KeyDown(e);
          break;
        case _.ESCAPE:
          this.onEscapeKeyDown(e);
          break;
        case _.TAB:
          this.onTabKeyDown(e);
          break;
        case _.BACKSPACE:
        case _.DELETE:
          this.onBackspaceOrDeleteKeyPressed(r, e);
          break;
        case _.DOWN:
        case _.UP:
        case _.RIGHT:
        case _.LEFT:
          this.onNavigationKeyPressed(e, r);
          break;
      }
    }, t.prototype.onNavigationKeyPressed = function(e, r) {
      this.cellCtrl.isEditing() || (e.shiftKey && this.cellCtrl.isRangeSelectionEnabled() ? this.onShiftRangeSelect(e) : this.beans.navigationService.navigateToNextCell(e, r, this.cellCtrl.getCellPosition(), !0), e.preventDefault());
    }, t.prototype.onShiftRangeSelect = function(e) {
      if (this.beans.rangeService) {
        var r = this.beans.rangeService.extendLatestRangeInDirection(e);
        r && this.beans.navigationService.ensureCellVisible(r);
      }
    }, t.prototype.onTabKeyDown = function(e) {
      this.beans.navigationService.onTabKeyDown(this.cellCtrl, e);
    }, t.prototype.onBackspaceOrDeleteKeyPressed = function(e, r) {
      var i = this, o = i.cellCtrl, s = i.beans, a = i.rowNode, l = s.gridOptionsService, u = s.rangeService, c = s.eventService;
      o.isEditing() || (c.dispatchEvent({ type: g.EVENT_KEY_SHORTCUT_CHANGED_CELL_START }), $l(e, l.is("enableCellEditingOnBackspace")) ? u && l.isEnableRangeSelection() ? u.clearCellRangeCellValues() : o.isCellEditable() && a.setDataValue(o.getColumn(), null, "cellClear") : o.startRowOrCellEdit(e, void 0, r), c.dispatchEvent({ type: g.EVENT_KEY_SHORTCUT_CHANGED_CELL_END }));
    }, t.prototype.onEnterKeyDown = function(e) {
      this.cellCtrl.isEditing() || this.rowCtrl.isEditing() ? this.cellCtrl.stopEditingAndFocus() : this.beans.gridOptionsService.is("enterMovesDown") ? this.beans.navigationService.navigateToNextCell(null, _.DOWN, this.cellCtrl.getCellPosition(), !1) : (this.cellCtrl.startRowOrCellEdit(_.ENTER, void 0, e), this.cellCtrl.isEditing() && e.preventDefault());
    }, t.prototype.onF2KeyDown = function(e) {
      this.cellCtrl.isEditing() || this.cellCtrl.startRowOrCellEdit(_.F2, void 0, e);
    }, t.prototype.onEscapeKeyDown = function(e) {
      this.cellCtrl.isEditing() && (this.cellCtrl.stopRowOrCellEdit(!0), this.cellCtrl.focusCell(!0));
    }, t.prototype.onKeyPress = function(e) {
      var r = e.target, i = r !== this.eGui;
      if (!(i || this.cellCtrl.isEditing())) {
        var o = String.fromCharCode(e.charCode);
        o === " " ? this.onSpaceKeyPressed(e) : Ul(e) && (this.cellCtrl.startRowOrCellEdit(null, o, e), e.preventDefault());
      }
    }, t.prototype.onSpaceKeyPressed = function(e) {
      var r = this.beans.gridOptionsService;
      if (!this.cellCtrl.isEditing() && r.isRowSelection()) {
        var i = this.rowNode.isSelected(), o = !i;
        if (o || !r.is("suppressRowDeselection")) {
          var s = this.beans.gridOptionsService.is("groupSelectsFiltered"), a = this.rowNode.setSelectedParams({
            newValue: o,
            rangeSelect: e.shiftKey,
            groupSelectsFiltered: s,
            event: e,
            source: "spacePressed"
          });
          i === void 0 && a === 0 && this.rowNode.setSelectedParams({
            newValue: !1,
            rangeSelect: e.shiftKey,
            groupSelectsFiltered: s,
            event: e,
            source: "spacePressed"
          });
        }
      }
      e.preventDefault();
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this);
    }, t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Uf = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), zf = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Kf = (
  /** @class */
  function(n) {
    Uf(t, n);
    function t(e, r, i, o) {
      var s = n.call(this, '<div class="ag-drag-handle ag-row-drag" draggable="true"></div>') || this;
      return s.rowNode = e, s.column = r, s.beans = i, s.eCell = o, s;
    }
    return t.prototype.postConstruct = function() {
      var e = this.getGui();
      e.appendChild(oe("rowDrag", this.beans.gridOptionsService, null)), this.addGuiEventListener("mousedown", function(r) {
        r.stopPropagation();
      }), this.addDragSource(), this.checkVisibility();
    }, t.prototype.addDragSource = function() {
      this.addGuiEventListener("dragstart", this.onDragStart.bind(this));
    }, t.prototype.onDragStart = function(e) {
      var r = this, i = this.column.getColDef().dndSourceOnRowDrag;
      e.dataTransfer.setDragImage(this.eCell, 0, 0);
      var o = function() {
        try {
          var a = JSON.stringify(r.rowNode.data);
          e.dataTransfer.setData("application/json", a), e.dataTransfer.setData("text/plain", a);
        } catch {
        }
      };
      if (i) {
        var s = {
          rowNode: this.rowNode,
          dragEvent: e,
          api: this.gridOptionsService.api,
          columnApi: this.gridOptionsService.columnApi,
          context: this.gridOptionsService.context
        };
        i(s);
      } else
        o();
    }, t.prototype.checkVisibility = function() {
      var e = this.column.isDndSource(this.rowNode);
      this.setDisplayed(e);
    }, zf([
      b
    ], t.prototype, "postConstruct", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var $f = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Zi = function() {
  return Zi = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Zi.apply(this, arguments);
}, Yf = "ag-cell", qf = "ag-cell-auto-height", Qf = "ag-cell-normal-height", Xf = "ag-cell-focus", Jf = "ag-cell-first-right-pinned", Zf = "ag-cell-last-left-pinned", ev = "ag-cell-not-inline-editing", tv = "ag-column-hover", rv = "ag-cell-wrap-text", iv = 0, xt = (
  /** @class */
  function(n) {
    $f(t, n);
    function t(e, r, i, o) {
      var s = n.call(this) || this;
      return s.cellRangeFeature = null, s.cellPositionFeature = null, s.cellCustomStyleFeature = null, s.tooltipFeature = null, s.cellMouseListenerFeature = null, s.cellKeyboardListenerFeature = null, s.suppressRefreshCell = !1, s.onCellCompAttachedFuncs = [], s.column = e, s.rowNode = r, s.beans = i, s.rowCtrl = o, s.instanceId = e.getId() + "-" + iv++, s.createCellPosition(), s.addFeatures(), s;
    }
    return t.prototype.addFeatures = function() {
      var e = this;
      this.cellPositionFeature = new Nf(this, this.beans), this.addDestroyFunc(function() {
        var i;
        (i = e.cellPositionFeature) === null || i === void 0 || i.destroy(), e.cellPositionFeature = null;
      }), this.cellCustomStyleFeature = new Hf(this, this.beans), this.addDestroyFunc(function() {
        var i;
        (i = e.cellCustomStyleFeature) === null || i === void 0 || i.destroy(), e.cellCustomStyleFeature = null;
      }), this.cellMouseListenerFeature = new Wf(this, this.beans, this.column), this.addDestroyFunc(function() {
        var i;
        (i = e.cellMouseListenerFeature) === null || i === void 0 || i.destroy(), e.cellMouseListenerFeature = null;
      }), this.cellKeyboardListenerFeature = new kf(this, this.beans, this.column, this.rowNode, this.rowCtrl), this.addDestroyFunc(function() {
        var i;
        (i = e.cellKeyboardListenerFeature) === null || i === void 0 || i.destroy(), e.cellKeyboardListenerFeature = null;
      });
      var r = this.beans.rangeService && this.beans.gridOptionsService.isEnableRangeSelection();
      r && (this.cellRangeFeature = new If(this.beans, this), this.addDestroyFunc(function() {
        var i;
        (i = e.cellRangeFeature) === null || i === void 0 || i.destroy(), e.cellRangeFeature = null;
      })), this.column.isTooltipEnabled() && this.addTooltipFeature();
    }, t.prototype.addTooltipFeature = function() {
      var e = this, r = function() {
        var o = e.column.getColDef(), s = e.rowNode.data;
        if (o.tooltipField && O(s))
          return Ni(s, o.tooltipField, e.column.isTooltipFieldContainsDots());
        var a = o.tooltipValueGetter;
        return a ? a({
          location: "cell",
          api: e.beans.gridOptionsService.api,
          columnApi: e.beans.gridOptionsService.columnApi,
          context: e.beans.gridOptionsService.context,
          colDef: e.column.getColDef(),
          column: e.column,
          rowIndex: e.cellPosition.rowIndex,
          node: e.rowNode,
          data: e.rowNode.data,
          value: e.value,
          valueFormatted: e.valueFormatted
        }) : null;
      }, i = {
        getColumn: function() {
          return e.column;
        },
        getColDef: function() {
          return e.column.getColDef();
        },
        getRowIndex: function() {
          return e.cellPosition.rowIndex;
        },
        getRowNode: function() {
          return e.rowNode;
        },
        getGui: function() {
          return e.getGui();
        },
        getLocation: function() {
          return "cell";
        },
        getTooltipValue: r,
        // this makes no sense, why is the cell formatted value passed to the tooltip???
        getValueFormatted: function() {
          return e.valueFormatted;
        }
      };
      this.tooltipFeature = new Rs(i, this.beans), this.addDestroyFunc(function() {
        var o;
        (o = e.tooltipFeature) === null || o === void 0 || o.destroy(), e.tooltipFeature = null;
      });
    }, t.prototype.setComp = function(e, r, i, o, s) {
      var a, l, u, c;
      this.cellComp = e, this.eGui = r, this.printLayout = o, this.updateAndFormatValue(!0), this.addDomData(), this.onCellFocused(), this.applyStaticCssClasses(), this.setWrapText(), this.onFirstRightPinnedChanged(), this.onLastLeftPinnedChanged(), this.onColumnHover(), this.setupControlComps(), i && this.setupAutoHeight(i), this.setAriaColIndex(), this.beans.gridOptionsService.is("suppressCellFocus") || this.cellComp.setTabIndex(-1);
      var p = it(this.column.getId());
      this.cellComp.setColId(p), this.cellComp.setRole("gridcell"), (a = this.cellPositionFeature) === null || a === void 0 || a.setComp(r), (l = this.cellCustomStyleFeature) === null || l === void 0 || l.setComp(e), (u = this.tooltipFeature) === null || u === void 0 || u.setComp(e), (c = this.cellKeyboardListenerFeature) === null || c === void 0 || c.setComp(this.eGui), this.cellRangeFeature && this.cellRangeFeature.setComp(e, r), s && this.isCellEditable() ? this.startEditing() : this.showValue(), this.onCellCompAttachedFuncs.length && (this.onCellCompAttachedFuncs.forEach(function(d) {
        return d();
      }), this.onCellCompAttachedFuncs = []);
    }, t.prototype.setupAutoHeight = function(e) {
      var r = this;
      if (this.column.isAutoHeight()) {
        var i = e.parentElement, o = this.beans.gridOptionsService.getRowHeightForNode(this.rowNode).height, s = function(u) {
          if (!r.editing && r.isAlive()) {
            var c = Bt(i), p = c.paddingTop, d = c.paddingBottom, v = c.borderBottomWidth, f = c.borderTopWidth, y = p + d + v + f, C = e.offsetHeight, m = C + y;
            if (u < 5) {
              var w = r.beans.gridOptionsService.getDocument(), E = !w || !w.contains(e), R = m == 0;
              if (E || R) {
                r.beans.frameworkOverrides.setTimeout(function() {
                  return s(u + 1);
                }, 0);
                return;
              }
            }
            var D = Math.max(m, o);
            r.rowNode.setRowAutoHeight(D, r.column);
          }
        }, a = function() {
          return s(0);
        };
        a();
        var l = this.beans.resizeObserverService.observeResize(e, a);
        this.addDestroyFunc(function() {
          l(), r.rowNode.setRowAutoHeight(void 0, r.column);
        });
      }
    }, t.prototype.getInstanceId = function() {
      return this.instanceId;
    }, t.prototype.showValue = function(e) {
      e === void 0 && (e = !1);
      var r = this.valueFormatted != null ? this.valueFormatted : this.value, i = this.createCellRendererParams(), o = this.beans.userComponentFactory.getCellRendererDetails(this.column.getColDef(), i);
      this.cellComp.setRenderDetails(o, r, e), this.refreshHandle();
    }, t.prototype.setupControlComps = function() {
      var e = this.column.getColDef();
      this.includeSelection = this.isIncludeControl(e.checkboxSelection), this.includeRowDrag = this.isIncludeControl(e.rowDrag), this.includeDndSource = this.isIncludeControl(e.dndSource), this.cellComp.setIncludeSelection(this.includeSelection), this.cellComp.setIncludeDndSource(this.includeDndSource), this.cellComp.setIncludeRowDrag(this.includeRowDrag);
    }, t.prototype.isForceWrapper = function() {
      var e = this.beans.gridOptionsService.is("enableCellTextSelection") || this.column.isAutoHeight();
      return e;
    }, t.prototype.isIncludeControl = function(e) {
      var r = this.rowNode.rowPinned != null, i = typeof e == "function", o = r ? !1 : i || e === !0;
      return o;
    }, t.prototype.refreshShouldDestroy = function() {
      var e = this.column.getColDef(), r = this.includeSelection != this.isIncludeControl(e.checkboxSelection), i = this.includeRowDrag != this.isIncludeControl(e.rowDrag), o = this.includeDndSource != this.isIncludeControl(e.dndSource);
      return r || i || o;
    }, t.prototype.startEditing = function(e, r, i, o) {
      var s = this;
      if (e === void 0 && (e = null), r === void 0 && (r = null), i === void 0 && (i = !1), o === void 0 && (o = null), !(!this.isCellEditable() || this.editing)) {
        if (!this.cellComp) {
          this.onCellCompAttachedFuncs.push(function() {
            s.startEditing(e, r, i, o);
          });
          return;
        }
        var a = this.createCellEditorParams(e, r, i), l = this.column.getColDef(), u = this.beans.userComponentFactory.getCellEditorDetails(l, a), c = (u == null ? void 0 : u.popupFromSelector) != null ? u.popupFromSelector : !!l.cellEditorPopup, p = (u == null ? void 0 : u.popupPositionFromSelector) != null ? u.popupPositionFromSelector : l.cellEditorPopupPosition;
        this.setEditing(!0), this.cellComp.setEditDetails(u, c, p);
        var d = this.createEvent(o, g.EVENT_CELL_EDITING_STARTED);
        this.beans.eventService.dispatchEvent(d);
      }
    }, t.prototype.setEditing = function(e) {
      this.editing !== e && (this.editing = e, this.refreshHandle());
    }, t.prototype.stopRowOrCellEdit = function(e) {
      e === void 0 && (e = !1), this.beans.gridOptionsService.get("editType") === "fullRow" ? this.rowCtrl.stopRowEditing(e) : this.stopEditing(e);
    }, t.prototype.onPopupEditorClosed = function() {
      this.isEditing() && this.stopEditingAndFocus();
    }, t.prototype.takeValueFromCellEditor = function(e) {
      var r = { newValueExists: !1 };
      if (e)
        return r;
      var i = this.cellComp.getCellEditor();
      if (!i)
        return r;
      var o = i.isCancelAfterEnd && i.isCancelAfterEnd();
      if (o)
        return r;
      var s = i.getValue();
      return {
        newValue: s,
        newValueExists: !0
      };
    }, t.prototype.saveNewValue = function(e, r) {
      if (r === e)
        return !1;
      this.suppressRefreshCell = !0;
      var i = this.rowNode.setDataValue(this.column, r, "edit");
      return this.suppressRefreshCell = !1, i;
    }, t.prototype.stopEditing = function(e) {
      if (e === void 0 && (e = !1), !this.editing)
        return !1;
      var r = this.takeValueFromCellEditor(e), i = r.newValue, o = r.newValueExists, s = this.rowNode.getValueFromValueService(this.column), a = !1;
      return o && (a = this.saveNewValue(s, i)), this.setEditing(!1), this.cellComp.setEditDetails(), this.updateAndFormatValue(), this.refreshCell({ forceRefresh: !0, suppressFlash: !0 }), this.dispatchEditingStoppedEvent(s, i, !e && !!a), a;
    }, t.prototype.dispatchEditingStoppedEvent = function(e, r, i) {
      var o = Zi(Zi({}, this.createEvent(null, g.EVENT_CELL_EDITING_STOPPED)), {
        oldValue: e,
        newValue: r,
        valueChanged: i
      });
      this.beans.eventService.dispatchEvent(o);
    }, t.prototype.createCellEditorParams = function(e, r, i) {
      return {
        value: this.rowNode.getValueFromValueService(this.column),
        eventKey: e,
        charPress: r,
        column: this.column,
        colDef: this.column.getColDef(),
        rowIndex: this.getCellPosition().rowIndex,
        node: this.rowNode,
        data: this.rowNode.data,
        api: this.beans.gridOptionsService.api,
        cellStartedEdit: i,
        columnApi: this.beans.gridOptionsService.columnApi,
        context: this.beans.gridOptionsService.context,
        onKeyDown: this.onKeyDown.bind(this),
        stopEditing: this.stopEditingAndFocus.bind(this),
        eGridCell: this.getGui(),
        parseValue: this.parseValue.bind(this),
        formatValue: this.formatValue.bind(this)
      };
    }, t.prototype.createCellRendererParams = function() {
      var e = this, r = {
        value: this.value,
        valueFormatted: this.valueFormatted,
        getValue: function() {
          return e.rowNode.getValueFromValueService(e.column);
        },
        setValue: function(i) {
          return e.beans.valueService.setValue(e.rowNode, e.column, i);
        },
        formatValue: this.formatValue.bind(this),
        data: this.rowNode.data,
        node: this.rowNode,
        pinned: this.column.getPinned(),
        colDef: this.column.getColDef(),
        column: this.column,
        rowIndex: this.getCellPosition().rowIndex,
        api: this.beans.gridOptionsService.api,
        columnApi: this.beans.gridOptionsService.columnApi,
        context: this.beans.gridOptionsService.context,
        refreshCell: this.refreshCell.bind(this),
        eGridCell: this.getGui(),
        eParentOfValue: this.cellComp.getParentOfValue(),
        registerRowDragger: function(i, o, s, a) {
          return e.registerRowDragger(i, o, a);
        }
      };
      return r;
    }, t.prototype.parseValue = function(e) {
      var r = this.column.getColDef(), i = {
        node: this.rowNode,
        data: this.rowNode.data,
        oldValue: this.getValue(),
        newValue: e,
        colDef: r,
        column: this.column,
        api: this.beans.gridOptionsService.api,
        columnApi: this.beans.gridOptionsService.columnApi,
        context: this.beans.gridOptionsService.context
      }, o = r.valueParser;
      return O(o) ? typeof o == "function" ? o(i) : this.beans.expressionService.evaluate(o, i) : e;
    }, t.prototype.setFocusOutOnEditor = function() {
      if (this.editing) {
        var e = this.cellComp.getCellEditor();
        e && e.focusOut && e.focusOut();
      }
    }, t.prototype.setFocusInOnEditor = function() {
      if (this.editing) {
        var e = this.cellComp.getCellEditor();
        e && e.focusIn ? e.focusIn() : this.focusCell(!0);
      }
    }, t.prototype.onCellChanged = function(e) {
      if (this.cellComp) {
        var r = e.column === this.column;
        r && this.refreshCell({});
      }
    }, t.prototype.refreshCell = function(e) {
      var r, i, o;
      if (!(this.suppressRefreshCell || this.editing) && this.cellComp) {
        var s = this.column.getColDef(), a = e != null && !!e.newData, l = e != null && !!e.suppressFlash || !!s.suppressCellFlash, u = s.field == null && s.valueGetter == null && s.showRowGroup == null, c = e && e.forceRefresh || u || a, p = this.updateAndFormatValue(), d = c || p;
        if (d) {
          this.showValue(a);
          var v = this.beans.filterManager.isSuppressFlashingCellsBecauseFiltering(), f = !l && !v && (this.beans.gridOptionsService.is("enableCellChangeFlash") || s.enableCellChangeFlash);
          f && this.flashCell(), (r = this.cellCustomStyleFeature) === null || r === void 0 || r.applyUserStyles(), (i = this.cellCustomStyleFeature) === null || i === void 0 || i.applyClassesFromColDef();
        }
        this.refreshToolTip(), (o = this.cellCustomStyleFeature) === null || o === void 0 || o.applyCellClassRules();
      }
    }, t.prototype.stopEditingAndFocus = function(e) {
      e === void 0 && (e = !1), this.stopRowOrCellEdit(), this.focusCell(!0), e || this.navigateAfterEdit();
    }, t.prototype.navigateAfterEdit = function() {
      var e = this.beans.gridOptionsService.get("editType") === "fullRow";
      if (!e) {
        var r = this.beans.gridOptionsService.is("enterMovesDownAfterEdit");
        r && this.beans.navigationService.navigateToNextCell(null, _.DOWN, this.getCellPosition(), !1);
      }
    }, t.prototype.flashCell = function(e) {
      var r = e && e.flashDelay, i = e && e.fadeDelay;
      this.animateCell("data-changed", r, i);
    }, t.prototype.animateCell = function(e, r, i) {
      var o = this, s, a, l = "ag-cell-" + e, u = "ag-cell-" + e + "-animation", c = this.beans.gridOptionsService;
      r || (r = (s = c.getNum("cellFlashDelay")) !== null && s !== void 0 ? s : 500), O(i) || (i = (a = c.getNum("cellFadeDelay")) !== null && a !== void 0 ? a : 1e3), this.cellComp.addOrRemoveCssClass(l, !0), this.cellComp.addOrRemoveCssClass(u, !1), window.setTimeout(function() {
        o.isAlive() && (o.cellComp.addOrRemoveCssClass(l, !1), o.cellComp.addOrRemoveCssClass(u, !0), o.eGui.style.transition = "background-color " + i + "ms", window.setTimeout(function() {
          o.isAlive() && (o.cellComp.addOrRemoveCssClass(u, !1), o.eGui.style.transition = "");
        }, i));
      }, r);
    }, t.prototype.onFlashCells = function(e) {
      if (this.cellComp) {
        var r = this.beans.cellPositionUtils.createId(this.getCellPosition()), i = e.cells[r];
        i && this.animateCell("highlight");
      }
    }, t.prototype.isCellEditable = function() {
      return this.column.isCellEditable(this.rowNode);
    }, t.prototype.isSuppressFillHandle = function() {
      return this.column.isSuppressFillHandle();
    }, t.prototype.formatValue = function(e) {
      var r = this.callValueFormatter(e);
      return r ?? e;
    }, t.prototype.callValueFormatter = function(e) {
      return this.beans.valueFormatterService.formatValue(this.column, this.rowNode, e);
    }, t.prototype.updateAndFormatValue = function(e) {
      e === void 0 && (e = !1);
      var r = this.value, i = this.valueFormatted;
      this.value = this.rowNode.getValueFromValueService(this.column), this.valueFormatted = this.callValueFormatter(this.value);
      var o = e ? !0 : !this.valuesAreEqual(r, this.value) || this.valueFormatted != i;
      return o;
    }, t.prototype.valuesAreEqual = function(e, r) {
      var i = this.column.getColDef();
      return i.equals ? i.equals(e, r) : e === r;
    }, t.prototype.getComp = function() {
      return this.cellComp;
    }, t.prototype.getValue = function() {
      return this.value;
    }, t.prototype.getValueFormatted = function() {
      return this.valueFormatted;
    }, t.prototype.addDomData = function() {
      var e = this, r = this.getGui();
      this.beans.gridOptionsService.setDomData(r, t.DOM_DATA_KEY_CELL_CTRL, this), this.addDestroyFunc(function() {
        return e.beans.gridOptionsService.setDomData(r, t.DOM_DATA_KEY_CELL_CTRL, null);
      });
    }, t.prototype.createEvent = function(e, r) {
      var i = {
        type: r,
        node: this.rowNode,
        data: this.rowNode.data,
        value: this.value,
        column: this.column,
        colDef: this.column.getColDef(),
        context: this.beans.gridOptionsService.context,
        api: this.beans.gridApi,
        columnApi: this.beans.columnApi,
        rowPinned: this.rowNode.rowPinned,
        event: e,
        rowIndex: this.rowNode.rowIndex
      };
      return i;
    }, t.prototype.onKeyPress = function(e) {
      var r;
      (r = this.cellKeyboardListenerFeature) === null || r === void 0 || r.onKeyPress(e);
    }, t.prototype.onKeyDown = function(e) {
      var r;
      (r = this.cellKeyboardListenerFeature) === null || r === void 0 || r.onKeyDown(e);
    }, t.prototype.onMouseEvent = function(e, r) {
      var i;
      (i = this.cellMouseListenerFeature) === null || i === void 0 || i.onMouseEvent(e, r);
    }, t.prototype.getGui = function() {
      return this.eGui;
    }, t.prototype.refreshToolTip = function() {
      var e;
      (e = this.tooltipFeature) === null || e === void 0 || e.refreshToolTip();
    }, t.prototype.getColSpanningList = function() {
      return this.cellPositionFeature.getColSpanningList();
    }, t.prototype.onLeftChanged = function() {
      var e;
      this.cellComp && ((e = this.cellPositionFeature) === null || e === void 0 || e.onLeftChanged());
    }, t.prototype.onDisplayedColumnsChanged = function() {
      this.eGui && this.setAriaColIndex();
    }, t.prototype.setAriaColIndex = function() {
      var e = this.beans.columnModel.getAriaColumnIndex(this.column);
      rs(this.getGui(), e);
    }, t.prototype.isSuppressNavigable = function() {
      return this.column.isSuppressNavigable(this.rowNode);
    }, t.prototype.onWidthChanged = function() {
      var e;
      return (e = this.cellPositionFeature) === null || e === void 0 ? void 0 : e.onWidthChanged();
    }, t.prototype.getColumn = function() {
      return this.column;
    }, t.prototype.getRowNode = function() {
      return this.rowNode;
    }, t.prototype.getBeans = function() {
      return this.beans;
    }, t.prototype.isPrintLayout = function() {
      return this.printLayout;
    }, t.prototype.appendChild = function(e) {
      this.eGui.appendChild(e);
    }, t.prototype.refreshHandle = function() {
      this.cellRangeFeature && this.cellRangeFeature.refreshHandle();
    }, t.prototype.getCellPosition = function() {
      return this.cellPosition;
    }, t.prototype.isEditing = function() {
      return this.editing;
    }, t.prototype.startRowOrCellEdit = function(e, r, i) {
      i === void 0 && (i = null), this.cellComp && (this.beans.gridOptionsService.get("editType") === "fullRow" ? this.rowCtrl.startRowEditing(e, r, this) : this.startEditing(e, r, !0, i));
    }, t.prototype.getRowCtrl = function() {
      return this.rowCtrl;
    }, t.prototype.getRowPosition = function() {
      return {
        rowIndex: this.cellPosition.rowIndex,
        rowPinned: this.cellPosition.rowPinned
      };
    }, t.prototype.updateRangeBordersIfRangeCount = function() {
      this.cellComp && this.cellRangeFeature && this.cellRangeFeature.updateRangeBordersIfRangeCount();
    }, t.prototype.onRangeSelectionChanged = function() {
      this.cellComp && this.cellRangeFeature && this.cellRangeFeature.onRangeSelectionChanged();
    }, t.prototype.isRangeSelectionEnabled = function() {
      return this.cellRangeFeature != null;
    }, t.prototype.focusCell = function(e) {
      e === void 0 && (e = !1), this.beans.focusService.setFocusedCell({
        rowIndex: this.getCellPosition().rowIndex,
        column: this.column,
        rowPinned: this.rowNode.rowPinned,
        forceBrowserFocus: e
      });
    }, t.prototype.onRowIndexChanged = function() {
      this.createCellPosition(), this.onCellFocused(), this.cellRangeFeature && this.cellRangeFeature.onRangeSelectionChanged();
    }, t.prototype.onFirstRightPinnedChanged = function() {
      if (this.cellComp) {
        var e = this.column.isFirstRightPinned();
        this.cellComp.addOrRemoveCssClass(Jf, e);
      }
    }, t.prototype.onLastLeftPinnedChanged = function() {
      if (this.cellComp) {
        var e = this.column.isLastLeftPinned();
        this.cellComp.addOrRemoveCssClass(Zf, e);
      }
    }, t.prototype.onCellFocused = function(e) {
      if (!(!this.cellComp || this.beans.gridOptionsService.is("suppressCellFocus"))) {
        var r = this.beans.focusService.isCellFocused(this.cellPosition);
        if (this.cellComp.addOrRemoveCssClass(Xf, r), r && e && e.forceBrowserFocus) {
          var i = this.cellComp.getFocusableElement();
          i.focus({ preventScroll: !!e.preventScrollOnBrowserFocus });
        }
        var o = this.beans.gridOptionsService.get("editType") === "fullRow";
        !r && !o && this.editing && this.stopRowOrCellEdit();
      }
    }, t.prototype.createCellPosition = function() {
      this.cellPosition = {
        rowIndex: this.rowNode.rowIndex,
        rowPinned: wt(this.rowNode.rowPinned),
        column: this.column
      };
    }, t.prototype.applyStaticCssClasses = function() {
      this.cellComp.addOrRemoveCssClass(Yf, !0), this.cellComp.addOrRemoveCssClass(ev, !0);
      var e = this.column.isAutoHeight() == !0;
      this.cellComp.addOrRemoveCssClass(qf, e), this.cellComp.addOrRemoveCssClass(Qf, !e);
    }, t.prototype.onColumnHover = function() {
      if (this.cellComp && this.beans.gridOptionsService.is("columnHoverHighlight")) {
        var e = this.beans.columnHoverService.isHovered(this.column);
        this.cellComp.addOrRemoveCssClass(tv, e);
      }
    }, t.prototype.onColDefChanged = function() {
      this.cellComp && (this.setWrapText(), this.editing || this.refreshCell({ forceRefresh: !0, suppressFlash: !0 }));
    }, t.prototype.setWrapText = function() {
      var e = this.column.getColDef().wrapText == !0;
      this.cellComp.addOrRemoveCssClass(rv, e);
    }, t.prototype.dispatchCellContextMenuEvent = function(e) {
      var r = this.column.getColDef(), i = this.createEvent(e, g.EVENT_CELL_CONTEXT_MENU);
      this.beans.eventService.dispatchEvent(i), r.onCellContextMenu && window.setTimeout(function() {
        return r.onCellContextMenu(i);
      }, 0);
    }, t.prototype.getCellRenderer = function() {
      return this.cellComp ? this.cellComp.getCellRenderer() : null;
    }, t.prototype.getCellEditor = function() {
      return this.cellComp ? this.cellComp.getCellEditor() : null;
    }, t.prototype.destroy = function() {
      this.onCellCompAttachedFuncs = [], n.prototype.destroy.call(this);
    }, t.prototype.createSelectionCheckbox = function() {
      var e = new vu();
      return this.beans.context.createBean(e), e.init({ rowNode: this.rowNode, column: this.column }), e;
    }, t.prototype.createDndSource = function() {
      var e = new Kf(this.rowNode, this.column, this.beans, this.eGui);
      return this.beans.context.createBean(e), e;
    }, t.prototype.registerRowDragger = function(e, r, i) {
      var o = this;
      if (this.customRowDragComp) {
        this.customRowDragComp.setDragElement(e, r);
        return;
      }
      var s = this.createRowDragComp(e, r, i);
      s && (this.customRowDragComp = s, this.addDestroyFunc(function() {
        o.beans.context.destroyBean(s), o.customRowDragComp = null;
      }));
    }, t.prototype.createRowDragComp = function(e, r, i) {
      var o = this, s = this.beans.gridOptionsService.is("pagination"), a = this.beans.gridOptionsService.is("rowDragManaged"), l = this.beans.gridOptionsService.isRowModelType("clientSide");
      if (a) {
        if (!l) {
          K(function() {
            return console.warn("AG Grid: managed row dragging is only allowed in the Client Side Row Model");
          }, "CellComp.addRowDragging");
          return;
        }
        if (s) {
          K(function() {
            return console.warn("AG Grid: managed row dragging is not possible when doing pagination");
          }, "CellComp.addRowDragging");
          return;
        }
      }
      var u = new $i(function() {
        return o.value;
      }, this.rowNode, this.column, e, r, i);
      return this.beans.context.createBean(u), u;
    }, t.DOM_DATA_KEY_CELL_CTRL = "cellCtrl", t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ov = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), nv = function(n) {
  var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
  if (e)
    return e.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, sv = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, av = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(sv(arguments[t]));
  return n;
}, Re;
(function(n) {
  n.Normal = "Normal", n.FullWidth = "FullWidth", n.FullWidthLoading = "FullWidthLoading", n.FullWidthGroup = "FullWidthGroup", n.FullWidthDetail = "FullWidthDetail";
})(Re || (Re = {}));
var lv = 0, Nt = (
  /** @class */
  function(n) {
    ov(t, n);
    function t(e, r, i, o, s) {
      var a = n.call(this) || this;
      return a.allRowGuis = [], a.active = !0, a.centerCellCtrls = { list: [], map: {} }, a.leftCellCtrls = { list: [], map: {} }, a.rightCellCtrls = { list: [], map: {} }, a.slideInAnimation = {
        left: !1,
        center: !1,
        right: !1,
        fullWidth: !1
      }, a.fadeInAnimation = {
        left: !1,
        center: !1,
        right: !1,
        fullWidth: !1
      }, a.lastMouseDownOnDragger = !1, a.updateColumnListsPending = !1, a.businessKeySanitised = null, a.beans = r, a.rowNode = e, a.paginationPage = a.beans.paginationProxy.getCurrentPage(), a.useAnimationFrameForCreate = o, a.printLayout = s, a.instanceId = e.id + "-" + lv++, a.setAnimateFlags(i), a.initRowBusinessKey(), a.rowFocused = a.beans.focusService.isRowFocused(a.rowNode.rowIndex, a.rowNode.rowPinned), a.rowLevel = a.beans.rowCssClassCalculator.calculateRowLevel(a.rowNode), a.setRowType(), a.addListeners(), a;
    }
    return t.prototype.initRowBusinessKey = function() {
      var e = this.beans.gridOptionsService.get("getBusinessKeyForNode");
      if (typeof e == "function") {
        var r = e(this.rowNode);
        this.businessKeySanitised = it(r);
      }
    }, t.prototype.isSticky = function() {
      return this.rowNode.sticky;
    }, t.prototype.getBeans = function() {
      return this.beans;
    }, t.prototype.getInstanceId = function() {
      return this.instanceId;
    }, t.prototype.setComp = function(e, r, i) {
      var o = { rowComp: e, element: r, containerType: i };
      this.allRowGuis.push(o), i === ge.LEFT ? this.leftGui = o : i === ge.RIGHT ? this.rightGui = o : i === ge.FULL_WIDTH ? this.fullWidthGui = o : this.centerGui = o, this.initialiseRowComp(o), this.rowType !== "FullWidthLoading" && !this.rowNode.rowPinned && this.beans.rowRenderer.dispatchFirstDataRenderedEvent();
    }, t.prototype.unsetComp = function(e) {
      this.allRowGuis = this.allRowGuis.filter(function(r) {
        return r.containerType !== e;
      }), e === ge.LEFT ? this.leftGui = void 0 : e === ge.RIGHT ? this.rightGui = void 0 : e === ge.FULL_WIDTH && (this.fullWidthGui = void 0);
    }, t.prototype.isCacheable = function() {
      return this.rowType === Re.FullWidthDetail && this.beans.gridOptionsService.is("keepDetailRows");
    }, t.prototype.setCached = function(e) {
      var r = e ? "none" : "";
      this.allRowGuis.forEach(function(i) {
        return i.element.style.display = r;
      });
    }, t.prototype.initialiseRowComp = function(e) {
      var r = this, i = this.beans.gridOptionsService;
      this.onRowHeightChanged(e), this.updateRowIndexes(e), this.setFocusedClasses(e), this.setStylesFromGridOptions(e), i.isRowSelection() && this.rowNode.selectable && this.onRowSelected(e), this.updateColumnLists(!this.useAnimationFrameForCreate);
      var o = e.rowComp;
      o.setRole("row");
      var s = this.getInitialRowClasses(e.containerType);
      s.forEach(function(l) {
        return o.addOrRemoveCssClass(l, !0);
      }), this.executeSlideAndFadeAnimations(e), this.rowNode.group && Ue(e.element, this.rowNode.expanded == !0);
      var a = it(this.rowNode.id);
      a != null && o.setRowId(a), this.businessKeySanitised != null && o.setRowBusinessKey(this.businessKeySanitised), this.isFullWidth() && !this.beans.gridOptionsService.is("suppressCellFocus") && o.setTabIndex(-1), i.setDomData(e.element, t.DOM_DATA_KEY_ROW_CTRL, this), this.addDestroyFunc(function() {
        return i.setDomData(e.element, t.DOM_DATA_KEY_ROW_CTRL, null);
      }), this.useAnimationFrameForCreate ? this.beans.animationFrameService.createTask(this.addHoverFunctionality.bind(this, e.element), this.rowNode.rowIndex, "createTasksP2") : this.addHoverFunctionality(e.element), this.isFullWidth() && this.setupFullWidth(e), i.is("rowDragEntireRow") && this.addRowDraggerToRow(e), this.useAnimationFrameForCreate && this.beans.animationFrameService.addDestroyTask(function() {
        r.isAlive() && e.rowComp.addOrRemoveCssClass("ag-after-created", !0);
      }), this.executeProcessRowPostCreateFunc();
    }, t.prototype.executeSlideAndFadeAnimations = function(e) {
      var r = this, i = e.containerType, o = this.slideInAnimation[i];
      o && (_n(function() {
        r.onTopChanged();
      }), this.slideInAnimation[i] = !1);
      var s = this.fadeInAnimation[i];
      s && (_n(function() {
        e.rowComp.addOrRemoveCssClass("ag-opacity-zero", !1);
      }), this.fadeInAnimation[i] = !1);
    }, t.prototype.addRowDraggerToRow = function(e) {
      if (this.beans.gridOptionsService.isEnableRangeSelection()) {
        K(function() {
          console.warn("AG Grid: Setting `rowDragEntireRow: true` in the gridOptions doesn't work with `enableRangeSelection: true`");
        }, "rowDragAndRangeSelectionEnabled");
        return;
      }
      var r = this.beans.localeService.getLocaleTextFunc(), i = new $i(function() {
        return "1 " + r("rowDragRow", "row");
      }, this.rowNode, void 0, e.element, void 0, !0);
      this.createManagedBean(i, this.beans.context);
    }, t.prototype.setupFullWidth = function(e) {
      var r = this.getPinnedForContainer(e.containerType), i = this.createFullWidthParams(e.element, r);
      if (!(this.rowType == Re.FullWidthDetail && !N.assertRegistered(F.MasterDetailModule, "cell renderer 'agDetailCellRenderer' (for master detail)"))) {
        var o;
        switch (this.rowType) {
          case Re.FullWidthDetail:
            o = this.beans.userComponentFactory.getFullWidthDetailCellRendererDetails(i);
            break;
          case Re.FullWidthGroup:
            o = this.beans.userComponentFactory.getFullWidthGroupCellRendererDetails(i);
            break;
          case Re.FullWidthLoading:
            o = this.beans.userComponentFactory.getFullWidthLoadingCellRendererDetails(i);
            break;
          default:
            o = this.beans.userComponentFactory.getFullWidthCellRendererDetails(i);
            break;
        }
        e.rowComp.showFullWidth(o);
      }
    }, t.prototype.isPrintLayout = function() {
      return this.printLayout;
    }, t.prototype.getFullWidthCellRenderer = function() {
      var e, r;
      return (r = (e = this.fullWidthGui) === null || e === void 0 ? void 0 : e.rowComp) === null || r === void 0 ? void 0 : r.getFullWidthCellRenderer();
    }, t.prototype.getCellElement = function(e) {
      var r = this.getCellCtrl(e);
      return r ? r.getGui() : null;
    }, t.prototype.executeProcessRowPostCreateFunc = function() {
      var e, r = this.beans.gridOptionsService.getCallback("processRowPostCreate");
      if (!(!r || !this.areAllContainersReady())) {
        var i = {
          eRow: (e = this.centerGui) === null || e === void 0 ? void 0 : e.element,
          ePinnedLeftRow: this.leftGui ? this.leftGui.element : void 0,
          ePinnedRightRow: this.rightGui ? this.rightGui.element : void 0,
          node: this.rowNode,
          rowIndex: this.rowNode.rowIndex,
          addRenderedRowListener: this.addEventListener.bind(this)
        };
        r(i);
      }
    }, t.prototype.areAllContainersReady = function() {
      var e = !!this.leftGui || !this.beans.columnModel.isPinningLeft(), r = !!this.centerGui, i = !!this.rightGui || !this.beans.columnModel.isPinningRight();
      return e && r && i;
    }, t.prototype.setRowType = function() {
      var e = this.rowNode.stub, r = this.rowNode.isFullWidthCell(), i = this.beans.doingMasterDetail && this.rowNode.detail, o = this.beans.columnModel.isPivotMode(), s = !!this.rowNode.group && !this.rowNode.footer, a = s && this.beans.gridOptionsService.isGroupUseEntireRow(o);
      e ? this.rowType = Re.FullWidthLoading : i ? this.rowType = Re.FullWidthDetail : r ? this.rowType = Re.FullWidth : a ? this.rowType = Re.FullWidthGroup : this.rowType = Re.Normal;
    }, t.prototype.updateColumnLists = function(e, r) {
      var i = this;
      if (e === void 0 && (e = !1), r === void 0 && (r = !1), !this.isFullWidth()) {
        var o = e || this.beans.gridOptionsService.is("suppressAnimationFrame") || this.printLayout;
        if (o) {
          this.updateColumnListsImpl(r);
          return;
        }
        this.updateColumnListsPending || (this.beans.animationFrameService.createTask(function() {
          i.active && i.updateColumnListsImpl(!0);
        }, this.rowNode.rowIndex, "createTasksP1"), this.updateColumnListsPending = !0);
      }
    }, t.prototype.createCellCtrls = function(e, r, i) {
      var o = this;
      i === void 0 && (i = null);
      var s = {
        list: [],
        map: {}
      }, a = function(l, u) {
        s.list.push(u), s.map[l] = u;
      };
      return r.forEach(function(l) {
        var u = l.getInstanceId(), c = e.map[u];
        c || (c = new xt(l, o.rowNode, o.beans, o)), a(u, c);
      }), e.list.forEach(function(l) {
        var u = s.map[l.getColumn().getInstanceId()] != null;
        if (!u) {
          var c = !o.isCellEligibleToBeRemoved(l, i);
          if (c) {
            a(l.getColumn().getInstanceId(), l);
            return;
          }
          l.destroy();
        }
      }), s;
    }, t.prototype.updateColumnListsImpl = function(e) {
      var r = this;
      e === void 0 && (e = !1), this.updateColumnListsPending = !1;
      var i = this.beans.columnModel;
      if (this.printLayout)
        this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, i.getAllDisplayedColumns()), this.leftCellCtrls = { list: [], map: {} }, this.rightCellCtrls = { list: [], map: {} };
      else {
        var o = i.getViewportCenterColumnsForRow(this.rowNode);
        this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, o);
        var s = i.getDisplayedLeftColumnsForRow(this.rowNode);
        this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, s, "left");
        var a = i.getDisplayedRightColumnsForRow(this.rowNode);
        this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, a, "right");
      }
      this.allRowGuis.forEach(function(l) {
        var u = l.containerType === ge.LEFT ? r.leftCellCtrls : l.containerType === ge.RIGHT ? r.rightCellCtrls : r.centerCellCtrls;
        l.rowComp.setCellCtrls(u.list, e);
      });
    }, t.prototype.isCellEligibleToBeRemoved = function(e, r) {
      var i = !0, o = !1, s = e.getColumn();
      if (s.getPinned() != r)
        return i;
      var a = e.isEditing(), l = this.beans.focusService.isCellFocused(e.getCellPosition()), u = a || l;
      if (u) {
        var c = e.getColumn(), p = this.beans.columnModel.getAllDisplayedColumns(), d = p.indexOf(c) >= 0;
        return d ? o : i;
      }
      return i;
    }, t.prototype.setAnimateFlags = function(e) {
      if (!(this.isSticky() || !e)) {
        var r = O(this.rowNode.oldRowTop), i = this.beans.columnModel.isPinningLeft(), o = this.beans.columnModel.isPinningRight();
        r ? (this.slideInAnimation.center = !0, this.slideInAnimation.left = i, this.slideInAnimation.right = o) : (this.fadeInAnimation.center = !0, this.fadeInAnimation.left = i, this.fadeInAnimation.right = o);
      }
    }, t.prototype.isEditing = function() {
      return this.editingRow;
    }, t.prototype.stopRowEditing = function(e) {
      this.stopEditing(e);
    }, t.prototype.isFullWidth = function() {
      return this.rowType !== Re.Normal;
    }, t.prototype.getRowType = function() {
      return this.rowType;
    }, t.prototype.refreshFullWidth = function() {
      var e = this, r = function(u, c) {
        if (!u)
          return !0;
        var p = u.rowComp.getFullWidthCellRenderer();
        if (!p || !p.refresh)
          return !1;
        var d = e.createFullWidthParams(u.element, c), v = p.refresh(d);
        return v;
      }, i = r(this.fullWidthGui, null), o = r(this.centerGui, null), s = r(this.leftGui, "left"), a = r(this.rightGui, "right"), l = i && o && s && a;
      return l;
    }, t.prototype.addListeners = function() {
      var e = this;
      this.addManagedListener(this.rowNode, j.EVENT_HEIGHT_CHANGED, function() {
        return e.onRowHeightChanged();
      }), this.addManagedListener(this.rowNode, j.EVENT_ROW_SELECTED, function() {
        return e.onRowSelected();
      }), this.addManagedListener(this.rowNode, j.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_TOP_CHANGED, this.onTopChanged.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_EXPANDED_CHANGED, this.updateExpandedCss.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_HAS_CHILDREN_CHANGED, this.updateExpandedCss.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_HIGHLIGHT_CHANGED, this.onRowNodeHighlightChanged.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this)), this.addManagedListener(this.rowNode, j.EVENT_UI_LEVEL_CHANGED, this.onUiLevelChanged.bind(this));
      var r = this.beans.eventService;
      this.addManagedListener(r, g.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED, this.onPaginationPixelOffsetChanged.bind(this)), this.addManagedListener(r, g.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this)), this.addManagedListener(r, g.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(r, g.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this)), this.addManagedListener(r, g.EVENT_CELL_FOCUSED, this.onCellFocused.bind(this)), this.addManagedListener(r, g.EVENT_CELL_FOCUS_CLEARED, this.onCellFocusCleared.bind(this)), this.addManagedListener(r, g.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this)), this.addManagedListener(r, g.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this)), this.addManagedListener(r, g.EVENT_COLUMN_MOVED, this.onColumnMoved.bind(this)), this.addListenersForCellComps();
    }, t.prototype.onColumnMoved = function() {
      this.updateColumnLists();
    }, t.prototype.addListenersForCellComps = function() {
      var e = this;
      this.addManagedListener(this.rowNode, j.EVENT_ROW_INDEX_CHANGED, function() {
        e.getAllCellCtrls().forEach(function(r) {
          return r.onRowIndexChanged();
        });
      }), this.addManagedListener(this.rowNode, j.EVENT_CELL_CHANGED, function(r) {
        e.getAllCellCtrls().forEach(function(i) {
          return i.onCellChanged(r);
        });
      });
    }, t.prototype.onRowNodeDataChanged = function(e) {
      if (this.rowNode.detailNode && this.beans.rowRenderer.refreshFullWidthRow(this.rowNode.detailNode), this.isFullWidth()) {
        this.beans.rowRenderer.refreshFullWidthRow(this.rowNode);
        return;
      }
      this.getAllCellCtrls().forEach(function(r) {
        return r.refreshCell({
          suppressFlash: !e.update,
          newData: !e.update
        });
      }), this.onRowSelected(), this.postProcessCss();
    }, t.prototype.onRowNodeCellChanged = function() {
      this.postProcessCss();
    }, t.prototype.postProcessCss = function() {
      this.setStylesFromGridOptions(), this.postProcessClassesFromGridOptions(), this.postProcessRowClassRules(), this.postProcessRowDragging();
    }, t.prototype.onRowNodeHighlightChanged = function() {
      var e = this.rowNode.highlighted;
      this.allRowGuis.forEach(function(r) {
        var i = e === ut.Above, o = e === ut.Below;
        r.rowComp.addOrRemoveCssClass("ag-row-highlight-above", i), r.rowComp.addOrRemoveCssClass("ag-row-highlight-below", o);
      });
    }, t.prototype.onRowNodeDraggingChanged = function() {
      this.postProcessRowDragging();
    }, t.prototype.postProcessRowDragging = function() {
      var e = this.rowNode.dragging;
      this.allRowGuis.forEach(function(r) {
        return r.rowComp.addOrRemoveCssClass("ag-row-dragging", e);
      });
    }, t.prototype.updateExpandedCss = function() {
      var e = this.rowNode.isExpandable(), r = this.rowNode.expanded == !0;
      this.allRowGuis.forEach(function(i) {
        i.rowComp.addOrRemoveCssClass("ag-row-group", e), i.rowComp.addOrRemoveCssClass("ag-row-group-expanded", e && r), i.rowComp.addOrRemoveCssClass("ag-row-group-contracted", e && !r), Ue(i.element, e && r);
      });
    }, t.prototype.onDisplayedColumnsChanged = function() {
      this.updateColumnLists(!0), this.beans.columnModel.wasAutoRowHeightEverActive() && this.rowNode.checkAutoHeights();
    }, t.prototype.onVirtualColumnsChanged = function() {
      this.updateColumnLists(!1, !0);
    }, t.prototype.getRowPosition = function() {
      return {
        rowPinned: wt(this.rowNode.rowPinned),
        rowIndex: this.rowNode.rowIndex
      };
    }, t.prototype.onKeyboardNavigate = function(e) {
      var r = this.allRowGuis.find(function(u) {
        return u.element.contains(e.target);
      }), i = r ? r.element : null, o = i === e.target;
      if (o) {
        var s = this.rowNode, a = this.beans.focusService.getFocusedCell(), l = {
          rowIndex: s.rowIndex,
          rowPinned: s.rowPinned,
          column: a && a.column
        };
        this.beans.navigationService.navigateToNextCell(e, e.key, l, !0), e.preventDefault();
      }
    }, t.prototype.onTabKeyDown = function(e) {
      if (!(e.defaultPrevented || et(e))) {
        var r = this.allRowGuis.find(function(a) {
          return a.element.contains(e.target);
        }), i = r ? r.element : null, o = i === e.target, s = null;
        o || (s = this.beans.focusService.findNextFocusableElement(i, !1, e.shiftKey)), (this.isFullWidth() && o || !s) && this.beans.navigationService.onTabKeyDown(this, e);
      }
    }, t.prototype.onFullWidthRowFocused = function(e) {
      var r, i = this.rowNode, o = e ? this.isFullWidth() && e.rowIndex === i.rowIndex && e.rowPinned == i.rowPinned : !1, s = this.fullWidthGui ? this.fullWidthGui.element : (r = this.centerGui) === null || r === void 0 ? void 0 : r.element;
      s && (s.classList.toggle("ag-full-width-focus", o), o && s.focus({ preventScroll: !0 }));
    }, t.prototype.refreshCell = function(e) {
      this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, e), this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, e), this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, e), this.updateColumnLists();
    }, t.prototype.removeCellCtrl = function(e, r) {
      var i = {
        list: [],
        map: {}
      };
      return e.list.forEach(function(o) {
        o !== r && (i.list.push(o), i.map[o.getInstanceId()] = o);
      }), i;
    }, t.prototype.onMouseEvent = function(e, r) {
      switch (e) {
        case "dblclick":
          this.onRowDblClick(r);
          break;
        case "click":
          this.onRowClick(r);
          break;
        case "touchstart":
        case "mousedown":
          this.onRowMouseDown(r);
          break;
      }
    }, t.prototype.createRowEvent = function(e, r) {
      return {
        type: e,
        node: this.rowNode,
        data: this.rowNode.data,
        rowIndex: this.rowNode.rowIndex,
        rowPinned: this.rowNode.rowPinned,
        context: this.beans.gridOptionsService.context,
        api: this.beans.gridOptionsService.api,
        columnApi: this.beans.gridOptionsService.columnApi,
        event: r
      };
    }, t.prototype.createRowEventWithSource = function(e, r) {
      var i = this.createRowEvent(e, r);
      return i.source = this, i;
    }, t.prototype.onRowDblClick = function(e) {
      if (!et(e)) {
        var r = this.createRowEventWithSource(g.EVENT_ROW_DOUBLE_CLICKED, e);
        this.beans.eventService.dispatchEvent(r);
      }
    }, t.prototype.onRowMouseDown = function(e) {
      if (this.lastMouseDownOnDragger = Mt(e.target, "ag-row-drag", 3), !!this.isFullWidth()) {
        var r = this.rowNode, i = this.beans.columnModel;
        this.beans.rangeService && this.beans.rangeService.removeAllCellRanges(), this.beans.focusService.setFocusedCell({
          rowIndex: r.rowIndex,
          column: i.getAllDisplayedColumns()[0],
          rowPinned: r.rowPinned,
          forceBrowserFocus: !0
        });
      }
    }, t.prototype.onRowClick = function(e) {
      var r = et(e) || this.lastMouseDownOnDragger;
      if (!r) {
        var i = this.createRowEventWithSource(g.EVENT_ROW_CLICKED, e);
        this.beans.eventService.dispatchEvent(i);
        var o = e.ctrlKey || e.metaKey, s = e.shiftKey, a = this.beans.gridOptionsService.is("groupSelectsChildren");
        if (
          // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,
          // so return if it's a group row
          !(a && this.rowNode.group || // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,
          // and we click it, the selection should not change (ie any currently selected row should stay selected)
          !this.rowNode.selectable || // we also don't allow selection of pinned rows
          this.rowNode.rowPinned || // if no selection method enabled, do nothing
          !this.beans.gridOptionsService.isRowSelection() || // if click selection suppressed, do nothing
          this.beans.gridOptionsService.is("suppressRowClickSelection"))
        ) {
          var l = this.beans.gridOptionsService.is("rowMultiSelectWithClick"), u = !this.beans.gridOptionsService.is("suppressRowDeselection"), c = "rowClicked";
          if (this.rowNode.isSelected())
            l ? this.rowNode.setSelectedParams({ newValue: !1, event: e, source: c }) : o ? u && this.rowNode.setSelectedParams({ newValue: !1, event: e, source: c }) : this.rowNode.setSelectedParams({ newValue: !0, clearSelection: !s, rangeSelect: s, event: e, source: c });
          else {
            var p = l ? !1 : !o;
            this.rowNode.setSelectedParams({ newValue: !0, clearSelection: p, rangeSelect: s, event: e, source: c });
          }
        }
      }
    }, t.prototype.setupDetailRowAutoHeight = function(e) {
      var r = this;
      if (this.rowType === Re.FullWidthDetail && this.beans.gridOptionsService.is("detailRowAutoHeight")) {
        var i = function() {
          var s = e.clientHeight;
          if (s != null && s > 0) {
            var a = function() {
              r.rowNode.setRowHeight(s), r.beans.clientSideRowModel ? r.beans.clientSideRowModel.onRowHeightChanged() : r.beans.serverSideRowModel && r.beans.serverSideRowModel.onRowHeightChanged();
            };
            r.beans.frameworkOverrides.setTimeout(a, 0);
          }
        }, o = this.beans.resizeObserverService.observeResize(e, i);
        this.addDestroyFunc(o), i();
      }
    }, t.prototype.createFullWidthParams = function(e, r) {
      var i = this, o = {
        fullWidth: !0,
        data: this.rowNode.data,
        node: this.rowNode,
        value: this.rowNode.key,
        valueFormatted: this.rowNode.key,
        rowIndex: this.rowNode.rowIndex,
        api: this.beans.gridOptionsService.api,
        columnApi: this.beans.gridOptionsService.columnApi,
        context: this.beans.gridOptionsService.context,
        // these need to be taken out, as part of 'afterAttached' now
        eGridCell: e,
        eParentOfValue: e,
        pinned: r,
        addRenderedRowListener: this.addEventListener.bind(this),
        registerRowDragger: function(s, a, l, u) {
          return i.addFullWidthRowDragging(s, a, l, u);
        }
      };
      return o;
    }, t.prototype.addFullWidthRowDragging = function(e, r, i, o) {
      if (i === void 0 && (i = ""), !!this.isFullWidth()) {
        var s = new $i(function() {
          return i;
        }, this.rowNode, void 0, e, r, o);
        this.createManagedBean(s, this.beans.context);
      }
    }, t.prototype.onUiLevelChanged = function() {
      var e = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);
      if (this.rowLevel != e) {
        var r = "ag-row-level-" + e, i = "ag-row-level-" + this.rowLevel;
        this.allRowGuis.forEach(function(o) {
          o.rowComp.addOrRemoveCssClass(r, !0), o.rowComp.addOrRemoveCssClass(i, !1);
        });
      }
      this.rowLevel = e;
    }, t.prototype.isFirstRowOnPage = function() {
      return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();
    }, t.prototype.isLastRowOnPage = function() {
      return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();
    }, t.prototype.onModelUpdated = function() {
      this.refreshFirstAndLastRowStyles();
    }, t.prototype.refreshFirstAndLastRowStyles = function() {
      var e = this.isFirstRowOnPage(), r = this.isLastRowOnPage();
      this.firstRowOnPage !== e && (this.firstRowOnPage = e, this.allRowGuis.forEach(function(i) {
        return i.rowComp.addOrRemoveCssClass("ag-row-first", e);
      })), this.lastRowOnPage !== r && (this.lastRowOnPage = r, this.allRowGuis.forEach(function(i) {
        return i.rowComp.addOrRemoveCssClass("ag-row-last", r);
      }));
    }, t.prototype.stopEditing = function(e) {
      var r, i;
      if (e === void 0 && (e = !1), !this.stoppingRowEdit) {
        var o = this.getAllCellCtrls(), s = this.editingRow;
        this.stoppingRowEdit = !0;
        var a = !1;
        try {
          for (var l = nv(o), u = l.next(); !u.done; u = l.next()) {
            var c = u.value, p = c.stopEditing(e);
            s && !e && !a && p && (a = !0);
          }
        } catch (v) {
          r = { error: v };
        } finally {
          try {
            u && !u.done && (i = l.return) && i.call(l);
          } finally {
            if (r)
              throw r.error;
          }
        }
        if (a) {
          var d = this.createRowEvent(g.EVENT_ROW_VALUE_CHANGED);
          this.beans.eventService.dispatchEvent(d);
        }
        s && this.setEditingRow(!1), this.stoppingRowEdit = !1;
      }
    }, t.prototype.setInlineEditingCss = function(e) {
      this.allRowGuis.forEach(function(r) {
        r.rowComp.addOrRemoveCssClass("ag-row-inline-editing", e), r.rowComp.addOrRemoveCssClass("ag-row-not-inline-editing", !e);
      });
    }, t.prototype.setEditingRow = function(e) {
      this.editingRow = e, this.allRowGuis.forEach(function(i) {
        return i.rowComp.addOrRemoveCssClass("ag-row-editing", e);
      });
      var r = e ? this.createRowEvent(g.EVENT_ROW_EDITING_STARTED) : this.createRowEvent(g.EVENT_ROW_EDITING_STOPPED);
      this.beans.eventService.dispatchEvent(r);
    }, t.prototype.startRowEditing = function(e, r, i, o) {
      if (e === void 0 && (e = null), r === void 0 && (r = null), i === void 0 && (i = null), o === void 0 && (o = null), !this.editingRow) {
        var s = this.getAllCellCtrls().reduce(function(a, l) {
          var u = l === i;
          return u ? l.startEditing(e, r, u, o) : l.startEditing(null, null, u, o), a ? !0 : l.isEditing();
        }, !1);
        s && this.setEditingRow(!0);
      }
    }, t.prototype.getAllCellCtrls = function() {
      if (this.leftCellCtrls.list.length === 0 && this.rightCellCtrls.list.length === 0)
        return this.centerCellCtrls.list;
      var e = av(this.centerCellCtrls.list, this.leftCellCtrls.list, this.rightCellCtrls.list);
      return e;
    }, t.prototype.postProcessClassesFromGridOptions = function() {
      var e = this, r = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode);
      !r || !r.length || r.forEach(function(i) {
        e.allRowGuis.forEach(function(o) {
          return o.rowComp.addOrRemoveCssClass(i, !0);
        });
      });
    }, t.prototype.postProcessRowClassRules = function() {
      var e = this;
      this.beans.rowCssClassCalculator.processRowClassRules(this.rowNode, function(r) {
        e.allRowGuis.forEach(function(i) {
          return i.rowComp.addOrRemoveCssClass(r, !0);
        });
      }, function(r) {
        e.allRowGuis.forEach(function(i) {
          return i.rowComp.addOrRemoveCssClass(r, !1);
        });
      });
    }, t.prototype.setStylesFromGridOptions = function(e) {
      var r = this.processStylesFromGridOptions();
      this.forEachGui(e, function(i) {
        return i.rowComp.setUserStyles(r);
      });
    }, t.prototype.getPinnedForContainer = function(e) {
      var r = e === ge.LEFT ? "left" : e === ge.RIGHT ? "right" : null;
      return r;
    }, t.prototype.getInitialRowClasses = function(e) {
      var r = this.getPinnedForContainer(e), i = {
        rowNode: this.rowNode,
        rowFocused: this.rowFocused,
        fadeRowIn: this.fadeInAnimation[e],
        rowIsEven: this.rowNode.rowIndex % 2 === 0,
        rowLevel: this.rowLevel,
        fullWidthRow: this.isFullWidth(),
        firstRowOnPage: this.isFirstRowOnPage(),
        lastRowOnPage: this.isLastRowOnPage(),
        printLayout: this.printLayout,
        expandable: this.rowNode.isExpandable(),
        pinned: r
      };
      return this.beans.rowCssClassCalculator.getInitialRowClasses(i);
    }, t.prototype.processStylesFromGridOptions = function() {
      var e = this.beans.gridOptionsService.get("rowStyle");
      if (e && typeof e == "function") {
        console.warn("AG Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead");
        return;
      }
      var r = this.beans.gridOptionsService.getCallback("getRowStyle"), i;
      if (r) {
        var o = {
          data: this.rowNode.data,
          node: this.rowNode,
          rowIndex: this.rowNode.rowIndex
        };
        i = r(o);
      }
      return Object.assign({}, e, i);
    }, t.prototype.onRowSelected = function(e) {
      var r = this, i = !!this.rowNode.isSelected();
      this.forEachGui(e, function(o) {
        o.rowComp.addOrRemoveCssClass("ag-row-selected", i), or(o.element, i ? !0 : void 0);
        var s = r.createAriaLabel();
        Vt(o.element, s ?? "");
      });
    }, t.prototype.createAriaLabel = function() {
      var e = this.rowNode.isSelected();
      if (!(e && this.beans.gridOptionsService.is("suppressRowDeselection"))) {
        var r = this.beans.localeService.getLocaleTextFunc(), i = r(e ? "ariaRowDeselect" : "ariaRowSelect", "Press SPACE to " + (e ? "deselect" : "select") + " this row.");
        return i;
      }
    }, t.prototype.isUseAnimationFrameForCreate = function() {
      return this.useAnimationFrameForCreate;
    }, t.prototype.addHoverFunctionality = function(e) {
      var r = this;
      this.active && (this.addManagedListener(e, "mouseenter", function() {
        return r.rowNode.onMouseEnter();
      }), this.addManagedListener(e, "mouseleave", function() {
        return r.rowNode.onMouseLeave();
      }), this.addManagedListener(this.rowNode, j.EVENT_MOUSE_ENTER, function() {
        !r.beans.dragService.isDragging() && !r.beans.gridOptionsService.is("suppressRowHoverHighlight") && (e.classList.add("ag-row-hover"), r.rowNode.setHovered(!0));
      }), this.addManagedListener(this.rowNode, j.EVENT_MOUSE_LEAVE, function() {
        e.classList.remove("ag-row-hover"), r.rowNode.setHovered(!1);
      }));
    }, t.prototype.roundRowTopToBounds = function(e) {
      var r = this.beans.ctrlsService.getGridBodyCtrl(), i = r.getScrollFeature().getVScrollPosition(), o = this.applyPaginationOffset(i.top, !0) - 100, s = this.applyPaginationOffset(i.bottom, !0) + 100;
      return Math.min(Math.max(o, e), s);
    }, t.prototype.getFrameworkOverrides = function() {
      return this.beans.frameworkOverrides;
    }, t.prototype.forEachGui = function(e, r) {
      var i = e ? [e] : this.allRowGuis;
      i.forEach(r);
    }, t.prototype.onRowHeightChanged = function(e) {
      if (this.rowNode.rowHeight != null) {
        var r = this.rowNode.rowHeight, i = this.beans.environment.getDefaultRowHeight(), o = this.beans.gridOptionsService.isGetRowHeightFunction(), s = o ? this.beans.gridOptionsService.getRowHeightForNode(this.rowNode).height : void 0, a = s ? Math.min(i, s) - 2 + "px" : void 0;
        this.forEachGui(e, function(l) {
          l.element.style.height = r + "px", a && l.element.style.setProperty("--ag-line-height", a);
        });
      }
    }, t.prototype.addEventListener = function(e, r) {
      n.prototype.addEventListener.call(this, e, r);
    }, t.prototype.removeEventListener = function(e, r) {
      n.prototype.removeEventListener.call(this, e, r);
    }, t.prototype.destroyFirstPass = function() {
      this.active = !1, this.beans.gridOptionsService.isAnimateRows() && this.setupRemoveAnimation(), this.rowNode.setHovered(!1);
      var e = this.createRowEvent(g.EVENT_VIRTUAL_ROW_REMOVED);
      this.dispatchEvent(e), this.beans.eventService.dispatchEvent(e), n.prototype.destroy.call(this);
    }, t.prototype.setupRemoveAnimation = function() {
      if (!this.isSticky()) {
        var e = this.rowNode.rowTop != null;
        if (e) {
          var r = this.roundRowTopToBounds(this.rowNode.rowTop);
          this.setRowTop(r);
        } else
          this.allRowGuis.forEach(function(i) {
            return i.rowComp.addOrRemoveCssClass("ag-opacity-zero", !0);
          });
      }
    }, t.prototype.destroySecondPass = function() {
      this.allRowGuis.length = 0;
      var e = function(r) {
        return r.list.forEach(function(i) {
          return i.destroy();
        }), { list: [], map: {} };
      };
      this.centerCellCtrls = e(this.centerCellCtrls), this.leftCellCtrls = e(this.leftCellCtrls), this.rightCellCtrls = e(this.rightCellCtrls);
    }, t.prototype.setFocusedClasses = function(e) {
      var r = this;
      this.forEachGui(e, function(i) {
        i.rowComp.addOrRemoveCssClass("ag-row-focus", r.rowFocused), i.rowComp.addOrRemoveCssClass("ag-row-no-focus", !r.rowFocused);
      });
    }, t.prototype.onCellFocused = function() {
      this.onCellFocusChanged();
    }, t.prototype.onCellFocusCleared = function() {
      this.onCellFocusChanged();
    }, t.prototype.onCellFocusChanged = function() {
      var e = this.beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);
      e !== this.rowFocused && (this.rowFocused = e, this.setFocusedClasses()), !e && this.editingRow && this.stopEditing(!1);
    }, t.prototype.onPaginationChanged = function() {
      var e = this.beans.paginationProxy.getCurrentPage();
      this.paginationPage !== e && (this.paginationPage = e, this.onTopChanged()), this.refreshFirstAndLastRowStyles();
    }, t.prototype.onTopChanged = function() {
      this.setRowTop(this.rowNode.rowTop);
    }, t.prototype.onPaginationPixelOffsetChanged = function() {
      this.onTopChanged();
    }, t.prototype.applyPaginationOffset = function(e, r) {
      if (r === void 0 && (r = !1), this.rowNode.isRowPinned())
        return e;
      var i = this.beans.paginationProxy.getPixelOffset(), o = r ? 1 : -1;
      return e + i * o;
    }, t.prototype.setRowTop = function(e) {
      if (!this.printLayout && O(e)) {
        var r = this.applyPaginationOffset(e), i = this.rowNode.isRowPinned() ? r : this.beans.rowContainerHeightService.getRealPixelPosition(r), o = i + "px";
        this.setRowTopStyle(o);
      }
    }, t.prototype.getInitialRowTop = function(e) {
      var r = this.beans.gridOptionsService.is("suppressRowTransform");
      return r ? this.getInitialRowTopShared(e) : void 0;
    }, t.prototype.getInitialTransform = function(e) {
      var r = this.beans.gridOptionsService.is("suppressRowTransform");
      return r ? void 0 : "translateY(" + this.getInitialRowTopShared(e) + ")";
    }, t.prototype.getInitialRowTopShared = function(e) {
      if (this.printLayout)
        return "";
      var r;
      if (this.isSticky())
        r = this.rowNode.stickyRowTop;
      else {
        var i = this.slideInAnimation[e] ? this.roundRowTopToBounds(this.rowNode.oldRowTop) : this.rowNode.rowTop, o = this.applyPaginationOffset(i);
        r = this.rowNode.isRowPinned() ? o : this.beans.rowContainerHeightService.getRealPixelPosition(o);
      }
      return r + "px";
    }, t.prototype.setRowTopStyle = function(e) {
      var r = this.beans.gridOptionsService.is("suppressRowTransform");
      this.allRowGuis.forEach(function(i) {
        return r ? i.rowComp.setTop(e) : i.rowComp.setTransform("translateY(" + e + ")");
      });
    }, t.prototype.getRowNode = function() {
      return this.rowNode;
    }, t.prototype.getCellCtrl = function(e) {
      var r = null;
      return this.getAllCellCtrls().forEach(function(i) {
        i.getColumn() == e && (r = i);
      }), r != null || this.getAllCellCtrls().forEach(function(i) {
        i.getColSpanningList().indexOf(e) >= 0 && (r = i);
      }), r;
    }, t.prototype.onRowIndexChanged = function() {
      this.rowNode.rowIndex != null && (this.onCellFocusChanged(), this.updateRowIndexes(), this.postProcessCss());
    }, t.prototype.updateRowIndexes = function(e) {
      var r = this.rowNode.getRowIndexString(), i = this.beans.headerNavigationService.getHeaderRowCount(), o = this.rowNode.rowIndex % 2 === 0, s = i + this.rowNode.rowIndex + 1;
      this.forEachGui(e, function(a) {
        a.rowComp.setRowIndex(r), a.rowComp.addOrRemoveCssClass("ag-row-even", o), a.rowComp.addOrRemoveCssClass("ag-row-odd", !o), ts(a.element, s);
      });
    }, t.prototype.getPinnedLeftRowElement = function() {
      return this.leftGui ? this.leftGui.element : void 0;
    }, t.prototype.getPinnedRightRowElement = function() {
      return this.rightGui ? this.rightGui.element : void 0;
    }, t.prototype.getBodyRowElement = function() {
      return this.centerGui ? this.centerGui.element : void 0;
    }, t.prototype.getFullWidthRowElement = function() {
      return this.fullWidthGui ? this.fullWidthGui.element : void 0;
    }, t.DOM_DATA_KEY_ROW_CTRL = "renderedRow", t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var uv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Pe = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, cv = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, pv = (
  /** @class */
  function(n) {
    uv(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.element = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.addMouseListeners(), this.mockContextMenuForIPad(), this.addKeyboardEvents();
    }, t.prototype.addKeyboardEvents = function() {
      var e = this, r = ["keydown", "keypress"];
      r.forEach(function(i) {
        var o = e.processKeyboardEvent.bind(e, i);
        e.addManagedListener(e.element, i, o);
      });
    }, t.prototype.addMouseListeners = function() {
      var e = this, r = Yn("touchstart") ? "touchstart" : "mousedown", i = ["dblclick", "contextmenu", "mouseover", "mouseout", "click", r];
      i.forEach(function(o) {
        var s = e.processMouseEvent.bind(e, o);
        e.addManagedListener(e.element, o, s);
      });
    }, t.prototype.processMouseEvent = function(e, r) {
      if (!(!this.mouseEventService.isEventFromThisGrid(r) || et(r))) {
        var i = this.getRowForEvent(r), o = this.mouseEventService.getRenderedCellForEvent(r);
        e === "contextmenu" ? this.handleContextMenuMouseEvent(r, null, i, o) : (o && o.onMouseEvent(e, r), i && i.onMouseEvent(e, r));
      }
    }, t.prototype.mockContextMenuForIPad = function() {
      var e = this;
      if (Ot()) {
        var r = new Ae(this.element), i = function(o) {
          var s = e.getRowForEvent(o.touchEvent), a = e.mouseEventService.getRenderedCellForEvent(o.touchEvent);
          e.handleContextMenuMouseEvent(null, o.touchEvent, s, a);
        };
        this.addManagedListener(r, Ae.EVENT_LONG_TAP, i), this.addDestroyFunc(function() {
          return r.destroy();
        });
      }
    }, t.prototype.getRowForEvent = function(e) {
      for (var r = e.target; r; ) {
        var i = this.gridOptionsService.getDomData(r, Nt.DOM_DATA_KEY_ROW_CTRL);
        if (i)
          return i;
        r = r.parentElement;
      }
      return null;
    }, t.prototype.handleContextMenuMouseEvent = function(e, r, i, o) {
      var s = i ? i.getRowNode() : null, a = o ? o.getColumn() : null, l = null;
      if (a) {
        var u = e || r;
        o.dispatchCellContextMenuEvent(u), l = this.valueService.getValue(a, s);
      }
      var c = this.ctrlsService.getGridBodyCtrl(), p = o ? o.getGui() : c.getGridBodyElement();
      this.contextMenuFactory && this.contextMenuFactory.onContextMenu(e, r, s, a, l, p);
    }, t.prototype.processKeyboardEvent = function(e, r) {
      var i = Hi(this.gridOptionsService, r.target, xt.DOM_DATA_KEY_CELL_CTRL), o = Hi(this.gridOptionsService, r.target, Nt.DOM_DATA_KEY_ROW_CTRL);
      r.defaultPrevented || (i ? this.processCellKeyboardEvent(i, e, r) : o && o.isFullWidth() && this.processFullWidthRowKeyboardEvent(o, e, r));
    }, t.prototype.processCellKeyboardEvent = function(e, r, i) {
      var o = e.getRowNode(), s = e.getColumn(), a = e.isEditing(), l = !ji(this.gridOptionsService, i, o, s, a);
      if (l)
        switch (r) {
          case "keydown":
            var u = !a && this.navigationService.handlePageScrollingKey(i);
            u || e.onKeyDown(i), this.doGridOperations(i, e.isEditing());
            break;
          case "keypress":
            e.onKeyPress(i);
            break;
        }
      if (r === "keydown") {
        var c = e.createEvent(i, g.EVENT_CELL_KEY_DOWN);
        this.eventService.dispatchEvent(c);
      }
      if (r === "keypress") {
        var p = e.createEvent(i, g.EVENT_CELL_KEY_PRESS);
        this.eventService.dispatchEvent(p);
      }
    }, t.prototype.processFullWidthRowKeyboardEvent = function(e, r, i) {
      var o = e.getRowNode(), s = this.focusService.getFocusedCell(), a = s && s.column, l = !ji(this.gridOptionsService, i, o, a, !1);
      if (l) {
        var u = i.key;
        if (r === "keydown")
          switch (u) {
            case _.PAGE_HOME:
            case _.PAGE_END:
              this.navigationService.handlePageScrollingKey(i);
              break;
            case _.UP:
            case _.DOWN:
              e.onKeyboardNavigate(i);
              break;
            case _.TAB:
              e.onTabKeyDown(i);
              break;
          }
      }
      if (r === "keydown") {
        var c = e.createRowEvent(g.EVENT_CELL_KEY_DOWN, i);
        this.eventService.dispatchEvent(c);
      }
      if (r === "keypress") {
        var p = e.createRowEvent(g.EVENT_CELL_KEY_PRESS, i);
        this.eventService.dispatchEvent(p);
      }
    }, t.prototype.doGridOperations = function(e, r) {
      if (!(!e.ctrlKey && !e.metaKey) && !r && this.mouseEventService.isEventFromThisGrid(e)) {
        var i = Kl(e);
        if (i === _.A)
          return this.onCtrlAndA(e);
        if (i === _.C)
          return this.onCtrlAndC(e);
        if (i === _.X)
          return this.onCtrlAndX(e);
        if (i === _.V)
          return this.onCtrlAndV();
        if (i === _.D)
          return this.onCtrlAndD(e);
        if (i === _.Z)
          return this.onCtrlAndZ(e);
        if (i === _.Y)
          return this.onCtrlAndY();
      }
    }, t.prototype.onCtrlAndA = function(e) {
      var r = this, i = r.pinnedRowModel, o = r.paginationProxy, s = r.rangeService;
      if (s && o.isRowsToRender()) {
        var a = cv([
          i.isEmpty("top"),
          i.isEmpty("bottom")
        ], 2), l = a[0], u = a[1], c = l ? null : "top", p = void 0, d = void 0;
        u ? (p = null, d = this.paginationProxy.getRowCount() - 1) : (p = "bottom", d = i.getPinnedBottomRowData().length - 1);
        var v = this.columnModel.getAllDisplayedColumns();
        if (De(v))
          return;
        s.setCellRange({
          rowStartIndex: 0,
          rowStartPinned: c,
          rowEndIndex: d,
          rowEndPinned: p,
          columnStart: v[0],
          columnEnd: q(v)
        });
      }
      e.preventDefault();
    }, t.prototype.onCtrlAndC = function(e) {
      !this.clipboardService || this.gridOptionsService.is("enableCellTextSelection") || (this.clipboardService.copyToClipboard(), e.preventDefault());
    }, t.prototype.onCtrlAndX = function(e) {
      !this.clipboardService || this.gridOptionsService.is("enableCellTextSelection") || this.gridOptionsService.is("suppressCutToClipboard") || (this.clipboardService.cutToClipboard(), e.preventDefault());
    }, t.prototype.onCtrlAndV = function() {
      N.isRegistered(F.ClipboardModule) && !this.gridOptionsService.is("suppressClipboardPaste") && this.clipboardService.pasteFromClipboard();
    }, t.prototype.onCtrlAndD = function(e) {
      N.isRegistered(F.ClipboardModule) && !this.gridOptionsService.is("suppressClipboardPaste") && this.clipboardService.copyRangeDown(), e.preventDefault();
    }, t.prototype.onCtrlAndZ = function(e) {
      this.gridOptionsService.is("undoRedoCellEditing") && (e.preventDefault(), e.shiftKey ? this.undoRedoService.redo("ui") : this.undoRedoService.undo("ui"));
    }, t.prototype.onCtrlAndY = function() {
      this.undoRedoService.redo("ui");
    }, Pe([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), Pe([
      h("valueService")
    ], t.prototype, "valueService", void 0), Pe([
      Y("contextMenuFactory")
    ], t.prototype, "contextMenuFactory", void 0), Pe([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Pe([
      h("navigationService")
    ], t.prototype, "navigationService", void 0), Pe([
      h("focusService")
    ], t.prototype, "focusService", void 0), Pe([
      h("undoRedoService")
    ], t.prototype, "undoRedoService", void 0), Pe([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Pe([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), Pe([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), Pe([
      Y("rangeService")
    ], t.prototype, "rangeService", void 0), Pe([
      Y("clipboardService")
    ], t.prototype, "clipboardService", void 0), Pe([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var dv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ai = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, hv = (
  /** @class */
  function(n) {
    dv(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.centerContainerCtrl = e, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function() {
        e.gridBodyCtrl = e.ctrlsService.getGridBodyCtrl(), e.listenForResize();
      }), this.addManagedListener(this.eventService, g.EVENT_SCROLLBAR_WIDTH_CHANGED, this.onScrollbarWidthChanged.bind(this));
    }, t.prototype.listenForResize = function() {
      var e = this, r = function() {
        return e.onCenterViewportResized();
      };
      this.centerContainerCtrl.registerViewportResizeListener(r), this.gridBodyCtrl.registerBodyViewportResizeListener(r);
    }, t.prototype.onScrollbarWidthChanged = function() {
      this.checkViewportAndScrolls();
    }, t.prototype.onCenterViewportResized = function() {
      if (this.centerContainerCtrl.isViewportVisible()) {
        this.checkViewportAndScrolls();
        var e = this.centerContainerCtrl.getCenterWidth();
        e !== this.centerWidth && (this.centerWidth = e, this.columnModel.refreshFlexedColumns({ viewportWidth: this.centerWidth, updateBodyWidths: !0, fireResizedEvent: !0 }));
      } else
        this.bodyHeight = 0;
    }, t.prototype.checkViewportAndScrolls = function() {
      this.updateScrollVisibleService(), this.checkBodyHeight(), this.onHorizontalViewportChanged(), this.gridBodyCtrl.getScrollFeature().checkScrollLeft();
    }, t.prototype.getBodyHeight = function() {
      return this.bodyHeight;
    }, t.prototype.checkBodyHeight = function() {
      var e = this.gridBodyCtrl.getBodyViewportElement(), r = $r(e);
      if (this.bodyHeight !== r) {
        this.bodyHeight = r;
        var i = {
          type: g.EVENT_BODY_HEIGHT_CHANGED
        };
        this.eventService.dispatchEvent(i);
      }
    }, t.prototype.updateScrollVisibleService = function() {
      this.updateScrollVisibleServiceImpl(), setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);
    }, t.prototype.updateScrollVisibleServiceImpl = function() {
      var e = {
        horizontalScrollShowing: this.isHorizontalScrollShowing(),
        verticalScrollShowing: this.gridBodyCtrl.isVerticalScrollShowing()
      };
      this.scrollVisibleService.setScrollsVisible(e);
    }, t.prototype.isHorizontalScrollShowing = function() {
      return this.centerContainerCtrl.isHorizontalScrollShowing();
    }, t.prototype.onHorizontalViewportChanged = function() {
      var e = this.centerContainerCtrl.getCenterWidth(), r = this.centerContainerCtrl.getViewportScrollLeft();
      this.columnModel.setViewportPosition(e, r);
    }, ai([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), ai([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), ai([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), ai([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var fv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Zs = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, vv = (
  /** @class */
  function(n) {
    fv(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.element = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, g.EVENT_LEFT_PINNED_WIDTH_CHANGED, this.onPinnedLeftWidthChanged.bind(this));
    }, t.prototype.onPinnedLeftWidthChanged = function() {
      var e = this.pinnedWidthService.getPinnedLeftWidth(), r = e > 0;
      k(this.element, r), Be(this.element, e);
    }, t.prototype.getWidth = function() {
      return this.pinnedWidthService.getPinnedLeftWidth();
    }, Zs([
      h("pinnedWidthService")
    ], t.prototype, "pinnedWidthService", void 0), Zs([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var gv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ea = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, yv = (
  /** @class */
  function(n) {
    gv(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.element = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, g.EVENT_RIGHT_PINNED_WIDTH_CHANGED, this.onPinnedRightWidthChanged.bind(this));
    }, t.prototype.onPinnedRightWidthChanged = function() {
      var e = this.pinnedWidthService.getPinnedRightWidth(), r = e > 0;
      k(this.element, r), Be(this.element, e);
    }, t.prototype.getWidth = function() {
      return this.pinnedWidthService.getPinnedRightWidth();
    }, ea([
      h("pinnedWidthService")
    ], t.prototype, "pinnedWidthService", void 0), ea([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Cv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ta = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, wu = (
  /** @class */
  function(n) {
    Cv(t, n);
    function t(e, r) {
      var i = n.call(this) || this;
      return i.eContainer = e, i.eWrapper = r, i;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, g.EVENT_ROW_CONTAINER_HEIGHT_CHANGED, this.onHeightChanged.bind(this));
    }, t.prototype.onHeightChanged = function() {
      var e = this.maxDivHeightScaler.getUiContainerHeight(), r = e != null ? e + "px" : "";
      this.eContainer.style.height = r, this.eWrapper && (this.eWrapper.style.height = r);
    }, ta([
      h("rowContainerHeightService")
    ], t.prototype, "maxDivHeightScaler", void 0), ta([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var mv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), jo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, wv = (
  /** @class */
  function(n) {
    mv(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.eContainer = e, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      if (!(!this.gridOptionsService.isEnableRangeSelection() || // no range selection if no property
      x(this.rangeService))) {
        var r = {
          eElement: this.eContainer,
          onDragStart: this.rangeService.onDragStart.bind(this.rangeService),
          onDragStop: this.rangeService.onDragStop.bind(this.rangeService),
          onDragging: this.rangeService.onDragging.bind(this.rangeService)
        };
        this.dragService.addDragSource(r), this.addDestroyFunc(function() {
          return e.dragService.removeDragSource(r);
        });
      }
    }, jo([
      Y("rangeService")
    ], t.prototype, "rangeService", void 0), jo([
      h("dragService")
    ], t.prototype, "dragService", void 0), jo([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Sv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ko = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Os = (
  /** @class */
  function(n) {
    Sv(t, n);
    function t(e, r) {
      r === void 0 && (r = !1);
      var i = n.call(this) || this;
      return i.callback = e, i.addSpacer = r, i;
    }
    return t.prototype.postConstruct = function() {
      var e = this.setWidth.bind(this);
      this.addManagedPropertyListener("domLayout", e), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, e), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, e), this.addManagedListener(this.eventService, g.EVENT_LEFT_PINNED_WIDTH_CHANGED, e), this.addSpacer && (this.addManagedListener(this.eventService, g.EVENT_RIGHT_PINNED_WIDTH_CHANGED, e), this.addManagedListener(this.eventService, g.EVENT_SCROLL_VISIBILITY_CHANGED, e), this.addManagedListener(this.eventService, g.EVENT_SCROLLBAR_WIDTH_CHANGED, e)), this.setWidth();
    }, t.prototype.setWidth = function() {
      var e = this.columnModel, r = this.gridOptionsService.isDomLayout("print"), i = e.getBodyContainerWidth(), o = e.getDisplayedColumnsLeftWidth(), s = e.getDisplayedColumnsRightWidth(), a;
      if (r)
        a = i + o + s;
      else if (a = i, this.addSpacer) {
        var l = this.gridOptionsService.is("enableRtl") ? o : s;
        l === 0 && this.scrollVisibleService.isVerticalScrollShowing() && (a += this.gridOptionsService.getScrollbarWidth());
      }
      this.callback(a);
    }, ko([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), ko([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), ko([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ev = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ft = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, _v = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Rv = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(_v(arguments[t]));
  return n;
}, S;
(function(n) {
  n.LEFT = "left", n.RIGHT = "right", n.CENTER = "center", n.FULL_WIDTH = "fullWidth", n.TOP_LEFT = "topLeft", n.TOP_RIGHT = "topRight", n.TOP_CENTER = "topCenter", n.TOP_FULL_WIDTH = "topFullWidth", n.STICKY_TOP_LEFT = "stickyTopLeft", n.STICKY_TOP_RIGHT = "stickyTopRight", n.STICKY_TOP_CENTER = "stickyTopCenter", n.STICKY_TOP_FULL_WIDTH = "stickyTopFullWidth", n.BOTTOM_LEFT = "bottomLeft", n.BOTTOM_RIGHT = "bottomRight", n.BOTTOM_CENTER = "bottomCenter", n.BOTTOM_FULL_WIDTH = "bottomFullWidth";
})(S || (S = {}));
var ge;
(function(n) {
  n.LEFT = "left", n.RIGHT = "right", n.CENTER = "center", n.FULL_WIDTH = "fullWidth";
})(ge || (ge = {}));
function Ov(n) {
  switch (n) {
    case S.CENTER:
    case S.TOP_CENTER:
    case S.STICKY_TOP_CENTER:
    case S.BOTTOM_CENTER:
      return ge.CENTER;
    case S.LEFT:
    case S.TOP_LEFT:
    case S.STICKY_TOP_LEFT:
    case S.BOTTOM_LEFT:
      return ge.LEFT;
    case S.RIGHT:
    case S.TOP_RIGHT:
    case S.STICKY_TOP_RIGHT:
    case S.BOTTOM_RIGHT:
      return ge.RIGHT;
    case S.FULL_WIDTH:
    case S.TOP_FULL_WIDTH:
    case S.STICKY_TOP_FULL_WIDTH:
    case S.BOTTOM_FULL_WIDTH:
      return ge.FULL_WIDTH;
    default:
      throw Error("Invalid Row Container Type");
  }
}
var Tv = st([
  [S.CENTER, "ag-center-cols-container"],
  [S.LEFT, "ag-pinned-left-cols-container"],
  [S.RIGHT, "ag-pinned-right-cols-container"],
  [S.FULL_WIDTH, "ag-full-width-container"],
  [S.TOP_CENTER, "ag-floating-top-container"],
  [S.TOP_LEFT, "ag-pinned-left-floating-top"],
  [S.TOP_RIGHT, "ag-pinned-right-floating-top"],
  [S.TOP_FULL_WIDTH, "ag-floating-top-full-width-container"],
  [S.STICKY_TOP_CENTER, "ag-sticky-top-container"],
  [S.STICKY_TOP_LEFT, "ag-pinned-left-sticky-top"],
  [S.STICKY_TOP_RIGHT, "ag-pinned-right-sticky-top"],
  [S.STICKY_TOP_FULL_WIDTH, "ag-sticky-top-full-width-container"],
  [S.BOTTOM_CENTER, "ag-floating-bottom-container"],
  [S.BOTTOM_LEFT, "ag-pinned-left-floating-bottom"],
  [S.BOTTOM_RIGHT, "ag-pinned-right-floating-bottom"],
  [S.BOTTOM_FULL_WIDTH, "ag-floating-bottom-full-width-container"]
]), bv = st([
  [S.CENTER, "ag-center-cols-viewport"],
  [S.TOP_CENTER, "ag-floating-top-viewport"],
  [S.STICKY_TOP_CENTER, "ag-sticky-top-viewport"],
  [S.BOTTOM_CENTER, "ag-floating-bottom-viewport"]
]), Pv = st([
  [S.CENTER, "ag-center-cols-clipper"]
]), Su = (
  /** @class */
  function(n) {
    Ev(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.visible = !0, r.EMPTY_CTRLS = [], r.name = e, r.isFullWithContainer = r.name === S.TOP_FULL_WIDTH || r.name === S.STICKY_TOP_FULL_WIDTH || r.name === S.BOTTOM_FULL_WIDTH || r.name === S.FULL_WIDTH, r;
    }
    return t.getRowContainerCssClasses = function(e) {
      var r = Tv.get(e), i = bv.get(e), o = Pv.get(e);
      return { container: r, viewport: i, wrapper: o };
    }, t.getPinned = function(e) {
      switch (e) {
        case S.BOTTOM_LEFT:
        case S.TOP_LEFT:
        case S.STICKY_TOP_LEFT:
        case S.LEFT:
          return "left";
        case S.BOTTOM_RIGHT:
        case S.TOP_RIGHT:
        case S.STICKY_TOP_RIGHT:
        case S.RIGHT:
          return "right";
        default:
          return null;
      }
    }, t.prototype.postConstruct = function() {
      var e = this;
      this.enableRtl = this.gridOptionsService.is("enableRtl"), this.embedFullWidthRows = this.gridOptionsService.is("embedFullWidthRows"), this.forContainers([S.CENTER], function() {
        return e.viewportSizeFeature = e.createManagedBean(new hv(e));
      });
    }, t.prototype.registerWithCtrlsService = function() {
      switch (this.name) {
        case S.CENTER:
          this.ctrlsService.registerCenterRowContainerCtrl(this);
          break;
        case S.LEFT:
          this.ctrlsService.registerLeftRowContainerCtrl(this);
          break;
        case S.RIGHT:
          this.ctrlsService.registerRightRowContainerCtrl(this);
          break;
        case S.TOP_CENTER:
          this.ctrlsService.registerTopCenterRowContainerCtrl(this);
          break;
        case S.TOP_LEFT:
          this.ctrlsService.registerTopLeftRowContainerCon(this);
          break;
        case S.TOP_RIGHT:
          this.ctrlsService.registerTopRightRowContainerCtrl(this);
          break;
        case S.STICKY_TOP_CENTER:
          this.ctrlsService.registerStickyTopCenterRowContainerCtrl(this);
          break;
        case S.STICKY_TOP_LEFT:
          this.ctrlsService.registerStickyTopLeftRowContainerCon(this);
          break;
        case S.STICKY_TOP_RIGHT:
          this.ctrlsService.registerStickyTopRightRowContainerCtrl(this);
          break;
        case S.BOTTOM_CENTER:
          this.ctrlsService.registerBottomCenterRowContainerCtrl(this);
          break;
        case S.BOTTOM_LEFT:
          this.ctrlsService.registerBottomLeftRowContainerCtrl(this);
          break;
        case S.BOTTOM_RIGHT:
          this.ctrlsService.registerBottomRightRowContainerCtrl(this);
          break;
      }
    }, t.prototype.forContainers = function(e, r) {
      e.indexOf(this.name) >= 0 && r();
    }, t.prototype.getContainerElement = function() {
      return this.eContainer;
    }, t.prototype.getViewportSizeFeature = function() {
      return this.viewportSizeFeature;
    }, t.prototype.setComp = function(e, r, i, o) {
      var s = this;
      this.comp = e, this.eContainer = r, this.eViewport = i, this.eWrapper = o, this.createManagedBean(new pv(this.eContainer)), this.addPreventScrollWhileDragging(), this.listenOnDomOrder(), this.stopHScrollOnPinnedRows();
      var a = [S.TOP_CENTER, S.TOP_LEFT, S.TOP_RIGHT], l = [S.STICKY_TOP_CENTER, S.STICKY_TOP_LEFT, S.STICKY_TOP_RIGHT], u = [S.BOTTOM_CENTER, S.BOTTOM_LEFT, S.BOTTOM_RIGHT], c = [S.CENTER, S.LEFT, S.RIGHT], p = Rv(a, u, c, l), d = [S.CENTER, S.LEFT, S.RIGHT, S.FULL_WIDTH], v = [S.CENTER, S.TOP_CENTER, S.STICKY_TOP_CENTER, S.BOTTOM_CENTER], f = [S.LEFT, S.BOTTOM_LEFT, S.TOP_LEFT, S.STICKY_TOP_LEFT], y = [S.RIGHT, S.BOTTOM_RIGHT, S.TOP_RIGHT, S.STICKY_TOP_RIGHT];
      this.forContainers(f, function() {
        s.pinnedWidthFeature = s.createManagedBean(new vv(s.eContainer)), s.addManagedListener(s.eventService, g.EVENT_LEFT_PINNED_WIDTH_CHANGED, function() {
          return s.onPinnedWidthChanged();
        });
      }), this.forContainers(y, function() {
        s.pinnedWidthFeature = s.createManagedBean(new yv(s.eContainer)), s.addManagedListener(s.eventService, g.EVENT_RIGHT_PINNED_WIDTH_CHANGED, function() {
          return s.onPinnedWidthChanged();
        });
      }), this.forContainers(d, function() {
        return s.createManagedBean(new wu(s.eContainer, s.eWrapper));
      }), this.forContainers(p, function() {
        return s.createManagedBean(new wv(s.eContainer));
      }), this.forContainers(v, function() {
        return s.createManagedBean(new Os(function(C) {
          return s.comp.setContainerWidth(C + "px");
        }));
      }), Jt() && (this.forContainers([S.CENTER], function() {
        var C = s.enableRtl ? g.EVENT_LEFT_PINNED_WIDTH_CHANGED : g.EVENT_RIGHT_PINNED_WIDTH_CHANGED;
        s.addManagedListener(s.eventService, C, function() {
          return s.refreshPaddingForFakeScrollbar();
        });
      }), this.refreshPaddingForFakeScrollbar()), this.addListeners(), this.registerWithCtrlsService();
    }, t.prototype.refreshPaddingForFakeScrollbar = function() {
      var e = this, r = e.enableRtl, i = e.columnModel, o = e.name, s = e.eWrapper, a = e.eContainer, l = r ? S.LEFT : S.RIGHT;
      this.forContainers([S.CENTER, l], function() {
        var u = i.getContainerWidth(l), c = r ? "marginLeft" : "marginRight";
        o === S.CENTER ? s.style[c] = u ? "0px" : "16px" : a.style[c] = u ? "16px" : "0px";
      });
    }, t.prototype.addListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, g.EVENT_SCROLL_VISIBILITY_CHANGED, function() {
        return e.onScrollVisibilityChanged();
      }), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, function() {
        return e.onDisplayedColumnsChanged();
      }), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, function() {
        return e.onDisplayedColumnsWidthChanged();
      }), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_ROWS_CHANGED, function(r) {
        return e.onDisplayedRowsChanged(r.afterScroll);
      }), this.onScrollVisibilityChanged(), this.onDisplayedColumnsChanged(), this.onDisplayedColumnsWidthChanged(), this.onDisplayedRowsChanged();
    }, t.prototype.listenOnDomOrder = function() {
      var e = this, r = [S.STICKY_TOP_CENTER, S.STICKY_TOP_LEFT, S.STICKY_TOP_RIGHT, S.STICKY_TOP_FULL_WIDTH], i = r.indexOf(this.name) >= 0;
      if (i) {
        this.comp.setDomOrder(!0);
        return;
      }
      var o = function() {
        var s = e.gridOptionsService.is("ensureDomOrder"), a = e.gridOptionsService.isDomLayout("print");
        e.comp.setDomOrder(s || a);
      };
      this.addManagedPropertyListener("domLayout", o), o();
    }, t.prototype.stopHScrollOnPinnedRows = function() {
      var e = this;
      this.forContainers([S.TOP_CENTER, S.STICKY_TOP_CENTER, S.BOTTOM_CENTER], function() {
        var r = function() {
          return e.eViewport.scrollLeft = 0;
        };
        e.addManagedListener(e.eViewport, "scroll", r);
      });
    }, t.prototype.onDisplayedColumnsChanged = function() {
      var e = this;
      this.forContainers([S.CENTER], function() {
        return e.onHorizontalViewportChanged();
      });
    }, t.prototype.onDisplayedColumnsWidthChanged = function() {
      var e = this;
      this.forContainers([S.CENTER], function() {
        return e.onHorizontalViewportChanged();
      });
    }, t.prototype.onScrollVisibilityChanged = function() {
      var e = this.gridOptionsService.getScrollbarWidth() || 0;
      if (this.name === S.CENTER) {
        var r = this.scrollVisibleService.isHorizontalScrollShowing(), i = r ? e : 0, o = i == 0 ? "100%" : "calc(100% + " + i + "px)";
        this.comp.setViewportHeight(o);
      }
      if (this.name === S.FULL_WIDTH) {
        var s = Jt() ? 16 : 0, o = "calc(100% - " + s + "px)";
        this.eContainer.style.setProperty("width", o);
      }
    }, t.prototype.addPreventScrollWhileDragging = function() {
      var e = this, r = function(i) {
        e.dragService.isDragging() && i.cancelable && i.preventDefault();
      };
      this.eContainer.addEventListener("touchmove", r, { passive: !1 }), this.addDestroyFunc(function() {
        return e.eContainer.removeEventListener("touchmove", r);
      });
    }, t.prototype.onHorizontalViewportChanged = function() {
      var e = this.getCenterWidth(), r = this.getCenterViewportScrollLeft();
      this.columnModel.setViewportPosition(e, r);
    }, t.prototype.getCenterWidth = function() {
      return po(this.eViewport);
    }, t.prototype.getCenterViewportScrollLeft = function() {
      return jr(this.eViewport, this.enableRtl);
    }, t.prototype.registerViewportResizeListener = function(e) {
      var r = this.resizeObserverService.observeResize(this.eViewport, e);
      this.addDestroyFunc(function() {
        return r();
      });
    }, t.prototype.isViewportVisible = function() {
      return pr(this.eViewport);
    }, t.prototype.getViewportScrollLeft = function() {
      return jr(this.eViewport, this.enableRtl);
    }, t.prototype.isHorizontalScrollShowing = function() {
      var e = this.gridOptionsService.is("alwaysShowHorizontalScroll");
      return e || Vl(this.eViewport);
    }, t.prototype.getViewportElement = function() {
      return this.eViewport;
    }, t.prototype.setContainerTranslateX = function(e) {
      this.eContainer.style.transform = "translateX(" + e + "px)";
    }, t.prototype.getHScrollPosition = function() {
      var e = {
        left: this.eViewport.scrollLeft,
        right: this.eViewport.scrollLeft + this.eViewport.offsetWidth
      };
      return e;
    }, t.prototype.setCenterViewportScrollLeft = function(e) {
      Wi(this.eViewport, e, this.enableRtl);
    }, t.prototype.isContainerVisible = function() {
      var e = t.getPinned(this.name);
      return !e || !!this.pinnedWidthFeature && this.pinnedWidthFeature.getWidth() > 0;
    }, t.prototype.onPinnedWidthChanged = function() {
      var e = this.isContainerVisible();
      this.visible != e && (this.visible = e, this.onDisplayedRowsChanged()), Jt() && this.refreshPaddingForFakeScrollbar();
    }, t.prototype.onDisplayedRowsChanged = function(e) {
      var r = this;
      if (e === void 0 && (e = !1), this.visible) {
        var i = this.gridOptionsService.isDomLayout("print"), o = function(a) {
          var l = a.isFullWidth(), u = r.embedFullWidthRows || i, c = r.isFullWithContainer ? !u && l : u || !l;
          return c;
        }, s = this.getRowCtrls().filter(o);
        this.comp.setRowCtrls(s, e);
      } else
        this.comp.setRowCtrls(this.EMPTY_CTRLS, !1);
    }, t.prototype.getRowCtrls = function() {
      switch (this.name) {
        case S.TOP_CENTER:
        case S.TOP_LEFT:
        case S.TOP_RIGHT:
        case S.TOP_FULL_WIDTH:
          return this.rowRenderer.getTopRowCtrls();
        case S.STICKY_TOP_CENTER:
        case S.STICKY_TOP_LEFT:
        case S.STICKY_TOP_RIGHT:
        case S.STICKY_TOP_FULL_WIDTH:
          return this.rowRenderer.getStickyTopRowCtrls();
        case S.BOTTOM_CENTER:
        case S.BOTTOM_LEFT:
        case S.BOTTOM_RIGHT:
        case S.BOTTOM_FULL_WIDTH:
          return this.rowRenderer.getBottomRowCtrls();
        default:
          return this.rowRenderer.getRowCtrls();
      }
    }, Ft([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), Ft([
      h("dragService")
    ], t.prototype, "dragService", void 0), Ft([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Ft([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Ft([
      h("resizeObserverService")
    ], t.prototype, "resizeObserverService", void 0), Ft([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), Ft([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Dv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ze = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Av = (
  /* html */
  `<div class="ag-root ag-unselectable" role="treegrid">
        <ag-header-root ref="gridHeader"></ag-header-root>
        <div class="ag-floating-top" ref="eTop" role="presentation">
            <ag-row-container ref="topLeftContainer" name="` + S.TOP_LEFT + `"></ag-row-container>
            <ag-row-container ref="topCenterContainer" name="` + S.TOP_CENTER + `"></ag-row-container>
            <ag-row-container ref="topRightContainer" name="` + S.TOP_RIGHT + `"></ag-row-container>
            <ag-row-container ref="topFullWidthContainer" name="` + S.TOP_FULL_WIDTH + `"></ag-row-container>
        </div>
        <div class="ag-body" ref="eBody" role="presentation">
            <div class="ag-body-clipper" ref="eBodyClipper" role="presentation">
                <div class="ag-body-viewport" ref="eBodyViewport" role="presentation">
                    <ag-row-container ref="leftContainer" name="` + S.LEFT + `"></ag-row-container>
                    <ag-row-container ref="centerContainer" name="` + S.CENTER + `"></ag-row-container>
                    <ag-row-container ref="rightContainer" name="` + S.RIGHT + `"></ag-row-container>
                    <ag-row-container ref="fullWidthContainer" name="` + S.FULL_WIDTH + `"></ag-row-container>
                </div>
            </div>
            <ag-fake-vertical-scroll></ag-fake-vertical-scroll>
        </div>
        <div class="ag-sticky-top" ref="eStickyTop" role="presentation">
            <ag-row-container ref="stickyTopLeftContainer" name="` + S.STICKY_TOP_LEFT + `"></ag-row-container>
            <ag-row-container ref="stickyTopCenterContainer" name="` + S.STICKY_TOP_CENTER + `"></ag-row-container>
            <ag-row-container ref="stickyTopRightContainer" name="` + S.STICKY_TOP_RIGHT + `"></ag-row-container>
            <ag-row-container ref="stickyTopFullWidthContainer" name="` + S.STICKY_TOP_FULL_WIDTH + `"></ag-row-container>
        </div>
        <div class="ag-floating-bottom" ref="eBottom" role="presentation">
            <ag-row-container ref="bottomLeftContainer" name="` + S.BOTTOM_LEFT + `"></ag-row-container>
            <ag-row-container ref="bottomCenterContainer" name="` + S.BOTTOM_CENTER + `"></ag-row-container>
            <ag-row-container ref="bottomRightContainer" name="` + S.BOTTOM_RIGHT + `"></ag-row-container>
            <ag-row-container ref="bottomFullWidthContainer" name="` + S.BOTTOM_FULL_WIDTH + `"></ag-row-container>
        </div>
        <ag-fake-horizontal-scroll></ag-fake-horizontal-scroll>
        <ag-overlay-wrapper></ag-overlay-wrapper>
    </div>`
), Fv = (
  /** @class */
  function(n) {
    Dv(t, n);
    function t() {
      return n.call(this, Av) || this;
    }
    return t.prototype.init = function() {
      var e = this, r = function(o, s) {
        var a = o + "px";
        s.style.minHeight = a, s.style.height = a;
      }, i = {
        setRowAnimationCssOnBodyViewport: function(o, s) {
          return e.setRowAnimationCssOnBodyViewport(o, s);
        },
        setColumnCount: function(o) {
          return Ol(e.getGui(), o);
        },
        setRowCount: function(o) {
          return Rl(e.getGui(), o);
        },
        setTopHeight: function(o) {
          return r(o, e.eTop);
        },
        setBottomHeight: function(o) {
          return r(o, e.eBottom);
        },
        setTopDisplay: function(o) {
          return e.eTop.style.display = o;
        },
        setBottomDisplay: function(o) {
          return e.eBottom.style.display = o;
        },
        setStickyTopHeight: function(o) {
          return e.eStickyTop.style.height = o;
        },
        setStickyTopTop: function(o) {
          return e.eStickyTop.style.top = o;
        },
        setStickyTopWidth: function(o) {
          return e.eStickyTop.style.width = o;
        },
        setColumnMovingCss: function(o, s) {
          return e.addOrRemoveCssClass(o, s);
        },
        updateLayoutClasses: function(o, s) {
          var a = [
            e.eBodyViewport.classList,
            e.eBodyClipper.classList,
            e.eBody.classList
          ];
          a.forEach(function(l) {
            l.toggle(se.AUTO_HEIGHT, s.autoHeight), l.toggle(se.NORMAL, s.normal), l.toggle(se.PRINT, s.print);
          }), e.addOrRemoveCssClass(se.AUTO_HEIGHT, s.autoHeight), e.addOrRemoveCssClass(se.NORMAL, s.normal), e.addOrRemoveCssClass(se.PRINT, s.print);
        },
        setAlwaysVerticalScrollClass: function(o, s) {
          return e.eBodyViewport.classList.toggle(Cu, s);
        },
        registerBodyViewportResizeListener: function(o) {
          var s = e.resizeObserverService.observeResize(e.eBodyViewport, o);
          e.addDestroyFunc(function() {
            return s();
          });
        },
        setPinnedTopBottomOverflowY: function(o) {
          return e.eTop.style.overflowY = e.eBottom.style.overflowY = o;
        },
        setCellSelectableCss: function(o, s) {
          [e.eTop, e.eBodyViewport, e.eBottom].forEach(function(a) {
            return a.classList.toggle(yu, s);
          });
        },
        setBodyViewportWidth: function(o) {
          return e.eBodyViewport.style.width = o;
        }
      };
      this.ctrl = this.createManagedBean(new Of()), this.ctrl.setComp(i, this.getGui(), this.eBodyViewport, this.eTop, this.eBottom, this.eStickyTop), (this.rangeService || this.gridOptionsService.get("rowSelection") === "multiple") && _l(this.getGui(), !0);
    }, t.prototype.setRowAnimationCssOnBodyViewport = function(e, r) {
      var i = this.eBodyViewport.classList;
      i.toggle(ur.ANIMATION_ON, r), i.toggle(ur.ANIMATION_OFF, !r);
    }, t.prototype.getFloatingTopBottom = function() {
      return [this.eTop, this.eBottom];
    }, ze([
      h("resizeObserverService")
    ], t.prototype, "resizeObserverService", void 0), ze([
      Y("rangeService")
    ], t.prototype, "rangeService", void 0), ze([
      P("eBodyViewport")
    ], t.prototype, "eBodyViewport", void 0), ze([
      P("eStickyTop")
    ], t.prototype, "eStickyTop", void 0), ze([
      P("eTop")
    ], t.prototype, "eTop", void 0), ze([
      P("eBottom")
    ], t.prototype, "eBottom", void 0), ze([
      P("gridHeader")
    ], t.prototype, "headerRootComp", void 0), ze([
      P("eBodyClipper")
    ], t.prototype, "eBodyClipper", void 0), ze([
      P("eBody")
    ], t.prototype, "eBody", void 0), ze([
      b
    ], t.prototype, "init", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Lv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Uo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Mv = (
  /** @class */
  function(n) {
    Lv(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));
    }, t.prototype.onDisplayedColumnsChanged = function() {
      this.update();
    }, t.prototype.onDisplayedColumnsWidthChanged = function() {
      this.update();
    }, t.prototype.update = function() {
      this.updateImpl(), setTimeout(this.updateImpl.bind(this), 500);
    }, t.prototype.updateImpl = function() {
      var e = this.ctrlsService.getCenterRowContainerCtrl();
      if (e) {
        var r = {
          horizontalScrollShowing: e.isHorizontalScrollShowing(),
          verticalScrollShowing: this.isVerticalScrollShowing()
        };
        this.setScrollsVisible(r);
      }
    }, t.prototype.setScrollsVisible = function(e) {
      var r = this.horizontalScrollShowing !== e.horizontalScrollShowing || this.verticalScrollShowing !== e.verticalScrollShowing;
      if (r) {
        this.horizontalScrollShowing = e.horizontalScrollShowing, this.verticalScrollShowing = e.verticalScrollShowing;
        var i = {
          type: g.EVENT_SCROLL_VISIBILITY_CHANGED
        };
        this.eventService.dispatchEvent(i);
      }
    }, t.prototype.isHorizontalScrollShowing = function() {
      return this.horizontalScrollShowing;
    }, t.prototype.isVerticalScrollShowing = function() {
      return this.verticalScrollShowing;
    }, Uo([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Uo([
      b
    ], t.prototype, "postConstruct", null), t = Uo([
      A("scrollVisibleService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Iv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ra = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, xv = (
  /** @class */
  function(n) {
    Iv(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.gridInstanceId = e.gridInstanceSequence.next(), r;
    }
    e = t, t.prototype.stampTopLevelGridCompWithGridInstance = function(r) {
      r[e.GRID_DOM_KEY] = this.gridInstanceId;
    }, t.prototype.getRenderedCellForEvent = function(r) {
      return Hi(this.gridOptionsService, r.target, xt.DOM_DATA_KEY_CELL_CTRL);
    }, t.prototype.isEventFromThisGrid = function(r) {
      var i = this.isElementInThisGrid(r.target);
      return i;
    }, t.prototype.isElementInThisGrid = function(r) {
      for (var i = r; i; ) {
        var o = i[e.GRID_DOM_KEY];
        if (O(o)) {
          var s = o === this.gridInstanceId;
          return s;
        }
        i = i.parentElement;
      }
      return !1;
    }, t.prototype.getCellPositionForEvent = function(r) {
      var i = this.getRenderedCellForEvent(r);
      return i ? i.getCellPosition() : null;
    }, t.prototype.getNormalisedPosition = function(r) {
      var i = this.gridOptionsService.isDomLayout("normal"), o = r, s, a;
      if (o.clientX != null || o.clientY != null ? (s = o.clientX, a = o.clientY) : (s = o.x, a = o.y), i) {
        var l = this.ctrlsService.getGridBodyCtrl(), u = l.getScrollFeature().getVScrollPosition(), c = l.getScrollFeature().getHScrollPosition();
        s += c.left, a += u.top;
      }
      return { x: s, y: a };
    };
    var e;
    return t.gridInstanceSequence = new sr(), t.GRID_DOM_KEY = "__ag_grid_instance", ra([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t = e = ra([
      A("mouseEventService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Nv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), eo = function() {
  return eo = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, eo.apply(this, arguments);
}, Ee = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Gv = (
  /** @class */
  function(n) {
    Nv(t, n);
    function t() {
      var e = n.call(this) || this;
      return e.onPageDown = Rn(e.onPageDown, 100), e.onPageUp = Rn(e.onPageUp, 100), e;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        e.gridBodyCon = r.gridBodyCtrl;
      });
    }, t.prototype.handlePageScrollingKey = function(e) {
      var r = e.key, i = e.altKey, o = e.ctrlKey || e.metaKey, s = !!this.rangeService && e.shiftKey, a = this.mouseEventService.getCellPositionForEvent(e), l = !1;
      switch (r) {
        case _.PAGE_HOME:
        case _.PAGE_END:
          !o && !i && (this.onHomeOrEndKey(r), l = !0);
          break;
        case _.LEFT:
        case _.RIGHT:
        case _.UP:
        case _.DOWN:
          if (!a)
            return !1;
          o && !i && !s && (this.onCtrlUpDownLeftRight(r, a), l = !0);
          break;
        case _.PAGE_DOWN:
          if (!a)
            return !1;
          !o && !i && (this.onPageDown(a), l = !0);
          break;
        case _.PAGE_UP:
          if (!a)
            return !1;
          !o && !i && (this.onPageUp(a), l = !0);
          break;
      }
      return l && e.preventDefault(), l;
    }, t.prototype.navigateTo = function(e) {
      var r = e.scrollIndex, i = e.scrollType, o = e.scrollColumn, s = e.focusIndex, a = e.focusColumn;
      if (O(o) && !o.isPinned() && this.gridBodyCon.getScrollFeature().ensureColumnVisible(o), O(r) && this.gridBodyCon.getScrollFeature().ensureIndexVisible(r, i), e.isAsync || this.gridBodyCon.getScrollFeature().ensureIndexVisible(s), this.focusService.setFocusedCell({ rowIndex: s, column: a, rowPinned: null, forceBrowserFocus: !0 }), this.rangeService) {
        var l = { rowIndex: s, rowPinned: null, column: a };
        this.rangeService.setRangeToCell(l);
      }
    }, t.prototype.onPageDown = function(e) {
      var r = this.ctrlsService.getGridBodyCtrl(), i = r.getScrollFeature().getVScrollPosition(), o = this.getViewportHeight(), s = this.paginationProxy.getPixelOffset(), a = i.top + o, l = this.paginationProxy.getRowIndexAtPixel(a + s);
      this.columnModel.isAutoRowHeightActive() ? this.navigateToNextPageWithAutoHeight(e, l) : this.navigateToNextPage(e, l);
    }, t.prototype.onPageUp = function(e) {
      var r = this.ctrlsService.getGridBodyCtrl(), i = r.getScrollFeature().getVScrollPosition(), o = this.paginationProxy.getPixelOffset(), s = i.top, a = this.paginationProxy.getRowIndexAtPixel(s + o);
      this.columnModel.isAutoRowHeightActive() ? this.navigateToNextPageWithAutoHeight(e, a, !0) : this.navigateToNextPage(e, a, !0);
    }, t.prototype.navigateToNextPage = function(e, r, i) {
      i === void 0 && (i = !1);
      var o = this.getViewportHeight(), s = this.paginationProxy.getPageFirstRow(), a = this.paginationProxy.getPageLastRow(), l = this.paginationProxy.getPixelOffset(), u = this.paginationProxy.getRow(e.rowIndex), c = i ? (u == null ? void 0 : u.rowHeight) - o - l : o - l, p = (u == null ? void 0 : u.rowTop) + c, d = this.paginationProxy.getRowIndexAtPixel(p + l);
      if (d === e.rowIndex) {
        var v = i ? -1 : 1;
        r = d = e.rowIndex + v;
      }
      var f;
      i ? (f = "bottom", d < s && (d = s), r < s && (r = s)) : (f = "top", d > a && (d = a), r > a && (r = a)), this.isRowTallerThanView(d) && (r = d, f = "top"), this.navigateTo({
        scrollIndex: r,
        scrollType: f,
        scrollColumn: null,
        focusIndex: d,
        focusColumn: e.column
      });
    }, t.prototype.navigateToNextPageWithAutoHeight = function(e, r, i) {
      var o = this;
      i === void 0 && (i = !1), this.navigateTo({
        scrollIndex: r,
        scrollType: i ? "bottom" : "top",
        scrollColumn: null,
        focusIndex: r,
        focusColumn: e.column
      }), setTimeout(function() {
        var s = o.getNextFocusIndexForAutoHeight(e, i);
        o.navigateTo({
          scrollIndex: r,
          scrollType: i ? "bottom" : "top",
          scrollColumn: null,
          focusIndex: s,
          focusColumn: e.column,
          isAsync: !0
        });
      }, 50);
    }, t.prototype.getNextFocusIndexForAutoHeight = function(e, r) {
      var i;
      r === void 0 && (r = !1);
      for (var o = r ? -1 : 1, s = this.getViewportHeight(), a = this.paginationProxy.getPageLastRow(), l = 0, u = e.rowIndex; u >= 0 && u <= a; ) {
        var c = this.paginationProxy.getRow(u);
        if (c) {
          var p = (i = c.rowHeight) !== null && i !== void 0 ? i : 0;
          if (l + p > s)
            break;
          l += p;
        }
        u += o;
      }
      return Math.max(0, Math.min(u, a));
    }, t.prototype.getViewportHeight = function() {
      var e = this.ctrlsService.getGridBodyCtrl(), r = e.getScrollFeature().getVScrollPosition(), i = this.gridOptionsService.getScrollbarWidth(), o = r.bottom - r.top;
      return this.ctrlsService.getCenterRowContainerCtrl().isHorizontalScrollShowing() && (o -= i), o;
    }, t.prototype.isRowTallerThanView = function(e) {
      var r = this.paginationProxy.getRow(e);
      if (!r)
        return !1;
      var i = r.rowHeight;
      return typeof i != "number" ? !1 : i > this.getViewportHeight();
    }, t.prototype.onCtrlUpDownLeftRight = function(e, r) {
      var i = this.cellNavigationService.getNextCellToFocus(e, r, !0), o = i.rowIndex, s = i.column;
      this.navigateTo({
        scrollIndex: o,
        scrollType: null,
        scrollColumn: s,
        focusIndex: o,
        focusColumn: s
      });
    }, t.prototype.onHomeOrEndKey = function(e) {
      var r = e === _.PAGE_HOME, i = this.columnModel.getAllDisplayedColumns(), o = r ? i[0] : q(i), s = r ? this.paginationProxy.getPageFirstRow() : this.paginationProxy.getPageLastRow();
      this.navigateTo({
        scrollIndex: s,
        scrollType: null,
        scrollColumn: o,
        focusIndex: s,
        focusColumn: o
      });
    }, t.prototype.onTabKeyDown = function(e, r) {
      var i = r.shiftKey, o = this.tabToNextCellCommon(e, i, r);
      if (o) {
        r.preventDefault();
        return;
      }
      if (i) {
        var s = e.getRowPosition(), a = s.rowIndex, l = s.rowPinned, u = l ? a === 0 : a === this.paginationProxy.getPageFirstRow();
        u && (this.gridOptionsService.getNum("headerHeight") === 0 ? this.focusService.focusNextGridCoreContainer(!0, !0) : (r.preventDefault(), this.focusService.focusLastHeader(r)));
      } else
        e instanceof xt && e.focusCell(!0), this.focusService.focusNextGridCoreContainer(i) && r.preventDefault();
    }, t.prototype.tabToNextCell = function(e, r) {
      var i = this.focusService.getFocusedCell();
      if (!i)
        return !1;
      var o = this.getCellByPosition(i);
      return !o && (o = this.rowRenderer.getRowByPosition(i), !o || !o.isFullWidth()) ? !1 : this.tabToNextCellCommon(o, e, r);
    }, t.prototype.tabToNextCellCommon = function(e, r, i) {
      var o = e.isEditing();
      if (!o && e instanceof xt) {
        var s = e, a = s.getRowCtrl();
        a && (o = a.isEditing());
      }
      var l;
      return o ? this.gridOptionsService.get("editType") === "fullRow" ? l = this.moveToNextEditingRow(e, r, i) : l = this.moveToNextEditingCell(e, r, i) : l = this.moveToNextCellNotEditing(e, r), l || !!this.focusService.getFocusedHeader();
    }, t.prototype.moveToNextEditingCell = function(e, r, i) {
      i === void 0 && (i = null);
      var o = e.getCellPosition();
      e.getGui().focus(), e.stopEditing();
      var s = this.findNextCellToFocusOn(o, r, !0);
      return s == null ? !1 : (s.startEditing(null, null, !0, i), s.focusCell(!1), !0);
    }, t.prototype.moveToNextEditingRow = function(e, r, i) {
      i === void 0 && (i = null);
      var o = e.getCellPosition(), s = this.findNextCellToFocusOn(o, r, !0);
      if (s == null)
        return !1;
      var a = s.getCellPosition(), l = this.isCellEditable(o), u = this.isCellEditable(a), c = a && o.rowIndex === a.rowIndex && o.rowPinned === a.rowPinned;
      if (l && e.setFocusOutOnEditor(), !c) {
        var p = e.getRowCtrl();
        p.stopEditing();
        var d = s.getRowCtrl();
        d.startRowEditing(void 0, void 0, void 0, i);
      }
      return u ? (s.setFocusInOnEditor(), s.focusCell()) : s.focusCell(!0), !0;
    }, t.prototype.moveToNextCellNotEditing = function(e, r) {
      var i = this.columnModel.getAllDisplayedColumns(), o;
      e instanceof Nt ? o = eo(eo({}, e.getRowPosition()), { column: r ? i[0] : q(i) }) : o = e.getCellPosition();
      var s = this.findNextCellToFocusOn(o, r, !1);
      if (s instanceof xt)
        s.focusCell(!0);
      else if (s)
        return this.tryToFocusFullWidthRow(s.getRowPosition(), r);
      return O(s);
    }, t.prototype.findNextCellToFocusOn = function(e, r, i) {
      for (var o = e; ; ) {
        e !== o && (e = o), r || (o = this.getLastCellOfColSpan(o)), o = this.cellNavigationService.getNextTabbedCell(o, r);
        var s = this.gridOptionsService.getCallback("tabToNextCell");
        if (O(s)) {
          var a = {
            backwards: r,
            editing: i,
            previousCellPosition: e,
            nextCellPosition: o || null
          }, l = s(a);
          O(l) ? (l.floating && (K(function() {
            console.warn("AG Grid: tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?");
          }, "no floating in userCell"), l.rowPinned = l.floating), o = {
            rowIndex: l.rowIndex,
            column: l.column,
            rowPinned: l.rowPinned
          }) : o = null;
        }
        if (!o)
          return null;
        if (o.rowIndex < 0) {
          var u = this.headerNavigationService.getHeaderRowCount();
          return this.focusService.focusHeaderPosition({
            headerPosition: {
              headerRowIndex: u + o.rowIndex,
              column: o.column
            }
          }), null;
        }
        var c = this.gridOptionsService.get("editType") === "fullRow";
        if (i && !c) {
          var p = this.isCellEditable(o);
          if (!p)
            continue;
        }
        this.ensureCellVisible(o);
        var d = this.getCellByPosition(o);
        if (!d) {
          var v = this.rowRenderer.getRowByPosition(o);
          if (!v || !v.isFullWidth() || i)
            continue;
          return v;
        }
        if (!d.isSuppressNavigable())
          return this.rangeService && this.rangeService.setRangeToCell(o), d;
      }
    }, t.prototype.isCellEditable = function(e) {
      var r = this.lookupRowNodeForCell(e);
      return r ? e.column.isCellEditable(r) : !1;
    }, t.prototype.getCellByPosition = function(e) {
      var r = this.rowRenderer.getRowByPosition(e);
      return r ? r.getCellCtrl(e.column) : null;
    }, t.prototype.lookupRowNodeForCell = function(e) {
      return e.rowPinned === "top" ? this.pinnedRowModel.getPinnedTopRow(e.rowIndex) : e.rowPinned === "bottom" ? this.pinnedRowModel.getPinnedBottomRow(e.rowIndex) : this.paginationProxy.getRow(e.rowIndex);
    }, t.prototype.navigateToNextCell = function(e, r, i, o) {
      for (var s = i, a = !1; s && (s === i || !this.isValidNavigateCell(s)); )
        this.gridOptionsService.is("enableRtl") ? r === _.LEFT && (s = this.getLastCellOfColSpan(s)) : r === _.RIGHT && (s = this.getLastCellOfColSpan(s)), s = this.cellNavigationService.getNextCellToFocus(r, s), a = x(s);
      if (a && e && e.key === _.UP && (s = {
        rowIndex: -1,
        rowPinned: null,
        column: i.column
      }), o) {
        var l = this.gridOptionsService.getCallback("navigateToNextCell");
        if (O(l)) {
          var u = {
            key: r,
            previousCellPosition: i,
            nextCellPosition: s || null,
            event: e
          }, c = l(u);
          O(c) ? (c.floating && (K(function() {
            console.warn("AG Grid: tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?");
          }, "no floating in userCell"), c.rowPinned = c.floating), s = {
            rowPinned: c.rowPinned,
            rowIndex: c.rowIndex,
            column: c.column
          }) : s = null;
        }
      }
      if (s) {
        if (s.rowIndex < 0) {
          var p = this.headerNavigationService.getHeaderRowCount();
          this.focusService.focusHeaderPosition({
            headerPosition: { headerRowIndex: p + s.rowIndex, column: i.column },
            event: e || void 0
          });
          return;
        }
        var d = this.getNormalisedPosition(s);
        d ? this.focusPosition(d) : this.tryToFocusFullWidthRow(s);
      }
    }, t.prototype.getNormalisedPosition = function(e) {
      this.ensureCellVisible(e);
      var r = this.getCellByPosition(e);
      return r ? (e = r.getCellPosition(), this.ensureCellVisible(e), e) : null;
    }, t.prototype.tryToFocusFullWidthRow = function(e, r) {
      r === void 0 && (r = !1);
      var i = this.columnModel.getAllDisplayedColumns(), o = this.rowRenderer.getRowByPosition(e);
      if (!o || !o.isFullWidth())
        return !1;
      var s = this.focusService.getFocusedCell(), a = {
        rowIndex: e.rowIndex,
        rowPinned: e.rowPinned,
        column: e.column || (r ? q(i) : i[0])
      };
      this.focusPosition(a);
      var l = s != null ? this.rowPositionUtils.before(a, s) : !1, u = {
        type: g.EVENT_FULL_WIDTH_ROW_FOCUSED,
        rowIndex: a.rowIndex,
        rowPinned: a.rowPinned,
        column: a.column,
        isFullWidthCell: !0,
        floating: a.rowPinned,
        fromBelow: l
      };
      return this.eventService.dispatchEvent(u), !0;
    }, t.prototype.focusPosition = function(e) {
      this.focusService.setFocusedCell({
        rowIndex: e.rowIndex,
        column: e.column,
        rowPinned: e.rowPinned,
        forceBrowserFocus: !0
      }), this.rangeService && this.rangeService.setRangeToCell(e);
    }, t.prototype.isValidNavigateCell = function(e) {
      var r = this.rowPositionUtils.getRowNode(e);
      return !!r;
    }, t.prototype.getLastCellOfColSpan = function(e) {
      var r = this.getCellByPosition(e);
      if (!r)
        return e;
      var i = r.getColSpanningList();
      return i.length === 1 ? e : {
        rowIndex: e.rowIndex,
        column: q(i),
        rowPinned: e.rowPinned
      };
    }, t.prototype.ensureCellVisible = function(e) {
      var r = this.gridOptionsService.is("groupRowsSticky"), i = this.rowModel.getRow(e.rowIndex), o = r && (i == null ? void 0 : i.sticky);
      !o && x(e.rowPinned) && this.gridBodyCon.getScrollFeature().ensureIndexVisible(e.rowIndex), e.column.isPinned() || this.gridBodyCon.getScrollFeature().ensureColumnVisible(e.column);
    }, Ee([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), Ee([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), Ee([
      h("focusService")
    ], t.prototype, "focusService", void 0), Ee([
      Y("rangeService")
    ], t.prototype, "rangeService", void 0), Ee([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Ee([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), Ee([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Ee([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), Ee([
      h("headerNavigationService")
    ], t.prototype, "headerNavigationService", void 0), Ee([
      h("rowPositionUtils")
    ], t.prototype, "rowPositionUtils", void 0), Ee([
      h("cellNavigationService")
    ], t.prototype, "cellNavigationService", void 0), Ee([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), Ee([
      b
    ], t.prototype, "postConstruct", null), t = Ee([
      A("navigationService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Hv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Vv = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Bv = (
  /** @class */
  function(n) {
    Hv(t, n);
    function t(e) {
      var r = n.call(
        this,
        /* html */
        '<div class="ag-popup-editor" tabindex="-1"/>'
      ) || this;
      return r.params = e, r;
    }
    return t.prototype.postConstruct = function() {
      this.gridOptionsService.setDomData(this.getGui(), t.DOM_KEY_POPUP_EDITOR_WRAPPER, !0), this.addKeyDownListener();
    }, t.prototype.addKeyDownListener = function() {
      var e = this, r = this.getGui(), i = this.params, o = function(s) {
        ji(e.gridOptionsService, s, i.node, i.column, !0) || i.onKeyDown(s);
      };
      this.addManagedListener(r, "keydown", o);
    }, t.DOM_KEY_POPUP_EDITOR_WRAPPER = "popupEditorWrapper", Vv([
      b
    ], t.prototype, "postConstruct", null), t;
  }(Qr)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Wv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), jv = (
  /** @class */
  function(n) {
    Wv(t, n);
    function t(e, r, i, o, s) {
      var a = n.call(this) || this;
      a.rendererVersion = 0, a.editorVersion = 0, a.beans = e, a.column = r.getColumn(), a.rowNode = r.getRowNode(), a.rowCtrl = r.getRowCtrl(), a.eRow = o, a.setTemplate(
        /* html */
        '<div comp-id="' + a.getCompId() + '"/>'
      );
      var l = a.getGui();
      a.forceWrapper = r.isForceWrapper(), a.refreshWrapper(!1);
      var u = function(p, d, v) {
        var f = v || l;
        d != null && d != "" ? f.setAttribute(p, d) : f.removeAttribute(p);
      }, c = {
        addOrRemoveCssClass: function(p, d) {
          return a.addOrRemoveCssClass(p, d);
        },
        setUserStyles: function(p) {
          return ds(l, p);
        },
        getFocusableElement: function() {
          return a.getFocusableElement();
        },
        setTabIndex: function(p) {
          return u("tabindex", p.toString());
        },
        setRole: function(p) {
          return ue(l, p);
        },
        setColId: function(p) {
          return u("col-id", p);
        },
        setTitle: function(p) {
          return u("title", p);
        },
        setIncludeSelection: function(p) {
          return a.includeSelection = p;
        },
        setIncludeRowDrag: function(p) {
          return a.includeRowDrag = p;
        },
        setIncludeDndSource: function(p) {
          return a.includeDndSource = p;
        },
        setRenderDetails: function(p, d, v) {
          return a.setRenderDetails(p, d, v);
        },
        setEditDetails: function(p, d, v) {
          return a.setEditDetails(p, d, v);
        },
        getCellEditor: function() {
          return a.cellEditor || null;
        },
        getCellRenderer: function() {
          return a.cellRenderer || null;
        },
        getParentOfValue: function() {
          return a.getParentOfValue();
        }
      };
      return a.cellCtrl = r, r.setComp(c, a.getGui(), a.eCellWrapper, i, s), a;
    }
    return t.prototype.getParentOfValue = function() {
      return this.eCellValue ? this.eCellValue : this.eCellWrapper ? this.eCellWrapper : this.getGui();
    }, t.prototype.setRenderDetails = function(e, r, i) {
      var o = this.cellEditor && !this.cellEditorPopupWrapper;
      if (!o) {
        this.firstRender = this.firstRender == null;
        var s = this.refreshWrapper(!1);
        if (this.refreshEditStyles(!1), e) {
          var a = i || s, l = a ? !1 : this.refreshCellRenderer(e);
          l || (this.destroyRenderer(), this.createCellRendererInstance(e));
        } else
          this.destroyRenderer(), this.insertValueWithoutCellRenderer(r);
      }
    }, t.prototype.setEditDetails = function(e, r, i) {
      e ? this.createCellEditorInstance(e, r, i) : this.destroyEditor();
    }, t.prototype.removeControls = function() {
      this.checkboxSelectionComp = this.beans.context.destroyBean(this.checkboxSelectionComp), this.dndSourceComp = this.beans.context.destroyBean(this.dndSourceComp), this.rowDraggingComp = this.beans.context.destroyBean(this.rowDraggingComp);
    }, t.prototype.refreshWrapper = function(e) {
      var r = this.includeRowDrag || this.includeDndSource || this.includeSelection, i = r || this.forceWrapper, o = i && this.eCellWrapper == null;
      o && (this.eCellWrapper = he(
        /* html */
        '<div class="ag-cell-wrapper" role="presentation"></div>'
      ), this.getGui().appendChild(this.eCellWrapper));
      var s = !i && this.eCellWrapper != null;
      s && (lt(this.eCellWrapper), this.eCellWrapper = void 0), this.addOrRemoveCssClass("ag-cell-value", !i);
      var a = !e && i, l = a && this.eCellValue == null;
      l && (this.eCellValue = he(
        /* html */
        '<span class="ag-cell-value" role="presentation"></span>'
      ), this.eCellWrapper.appendChild(this.eCellValue));
      var u = !a && this.eCellValue != null;
      u && (lt(this.eCellValue), this.eCellValue = void 0);
      var c = o || s || l || u;
      return c && this.removeControls(), e || r && this.addControls(), c;
    }, t.prototype.addControls = function() {
      this.includeRowDrag && this.rowDraggingComp == null && (this.rowDraggingComp = this.cellCtrl.createRowDragComp(), this.rowDraggingComp && this.eCellWrapper.insertBefore(this.rowDraggingComp.getGui(), this.eCellValue)), this.includeDndSource && this.dndSourceComp == null && (this.dndSourceComp = this.cellCtrl.createDndSource(), this.eCellWrapper.insertBefore(this.dndSourceComp.getGui(), this.eCellValue)), this.includeSelection && this.checkboxSelectionComp == null && (this.checkboxSelectionComp = this.cellCtrl.createSelectionCheckbox(), this.eCellWrapper.insertBefore(this.checkboxSelectionComp.getGui(), this.eCellValue));
    }, t.prototype.createCellEditorInstance = function(e, r, i) {
      var o = this, s = this.editorVersion, a = e.newAgStackInstance();
      if (a) {
        var l = e.params;
        a.then(function(c) {
          return o.afterCellEditorCreated(s, c, l, r, i);
        });
        var u = x(this.cellEditor);
        u && l.cellStartedEdit && this.cellCtrl.focusCell(!0);
      }
    }, t.prototype.insertValueWithoutCellRenderer = function(e) {
      var r = this.getParentOfValue();
      Fe(r);
      var i = e != null ? it(e) : null;
      i != null && (r.innerHTML = i);
    }, t.prototype.destroyEditorAndRenderer = function() {
      this.destroyRenderer(), this.destroyEditor();
    }, t.prototype.destroyRenderer = function() {
      var e = this.beans.context;
      this.cellRenderer = e.destroyBean(this.cellRenderer), lt(this.cellRendererGui), this.cellRendererGui = null, this.rendererVersion++;
    }, t.prototype.destroyEditor = function() {
      var e = this.beans.context;
      this.hideEditorPopup && this.hideEditorPopup(), this.hideEditorPopup = void 0, this.cellEditor = e.destroyBean(this.cellEditor), this.cellEditorPopupWrapper = e.destroyBean(this.cellEditorPopupWrapper), lt(this.cellEditorGui), this.cellEditorGui = null, this.editorVersion++;
    }, t.prototype.refreshCellRenderer = function(e) {
      if (this.cellRenderer == null || this.cellRenderer.refresh == null || this.cellRendererClass !== e.componentClass)
        return !1;
      var r = this.cellRenderer.refresh(e.params);
      return r === !0 || r === void 0;
    }, t.prototype.createCellRendererInstance = function(e) {
      var r = this, i = this.beans.gridOptionsService.is("suppressAnimationFrame"), o = !i, s = this.rendererVersion, a = e.componentClass, l = function() {
        var u = r.rendererVersion !== s || !r.isAlive();
        if (!u) {
          var c = e.newAgStackInstance(), p = r.afterCellRendererCreated.bind(r, s, a);
          c && c.then(p);
        }
      };
      o && this.firstRender ? this.beans.animationFrameService.createTask(l, this.rowNode.rowIndex, "createTasksP2") : l();
    }, t.prototype.getCtrl = function() {
      return this.cellCtrl;
    }, t.prototype.getRowCtrl = function() {
      return this.rowCtrl;
    }, t.prototype.getCellRenderer = function() {
      return this.cellRenderer;
    }, t.prototype.getCellEditor = function() {
      return this.cellEditor;
    }, t.prototype.afterCellRendererCreated = function(e, r, i) {
      var o = !this.isAlive() || e !== this.rendererVersion;
      if (o) {
        this.beans.context.destroyBean(i);
        return;
      }
      if (this.cellRenderer = i, this.cellRendererClass = r, this.cellRendererGui = this.cellRenderer.getGui(), this.cellRendererGui != null) {
        var s = this.getParentOfValue();
        Fe(s), s.appendChild(this.cellRendererGui);
      }
    }, t.prototype.afterCellEditorCreated = function(e, r, i, o, s) {
      var a = e !== this.editorVersion;
      if (a) {
        this.beans.context.destroyBean(r);
        return;
      }
      var l = r.isCancelBeforeStart && r.isCancelBeforeStart();
      if (l) {
        this.beans.context.destroyBean(r), this.cellCtrl.stopEditing(!0);
        return;
      }
      if (!r.getGui) {
        console.warn("AG Grid: cellEditor for column " + this.column.getId() + " is missing getGui() method"), this.beans.context.destroyBean(r);
        return;
      }
      this.cellEditor = r, this.cellEditorGui = r.getGui();
      var u = o || r.isPopup !== void 0 && r.isPopup();
      u ? this.addPopupCellEditor(i, s) : this.addInCellEditor(), this.refreshEditStyles(!0, u), r.afterGuiAttached && r.afterGuiAttached();
    }, t.prototype.refreshEditStyles = function(e, r) {
      var i;
      this.addOrRemoveCssClass("ag-cell-inline-editing", e && !r), this.addOrRemoveCssClass("ag-cell-popup-editing", e && !!r), this.addOrRemoveCssClass("ag-cell-not-inline-editing", !e || !!r), (i = this.rowCtrl) === null || i === void 0 || i.setInlineEditingCss(e);
    }, t.prototype.addInCellEditor = function() {
      var e = this.getGui(), r = this.beans.gridOptionsService.getDocument();
      if (e.contains(r.activeElement) && e.focus(), this.destroyRenderer(), this.refreshWrapper(!0), this.clearParentOfValue(), this.cellEditorGui) {
        var i = this.getParentOfValue();
        i.appendChild(this.cellEditorGui);
      }
    }, t.prototype.addPopupCellEditor = function(e, r) {
      var i = this;
      this.beans.gridOptionsService.get("editType") === "fullRow" && console.warn("AG Grid: popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors.");
      var o = this.cellEditor;
      this.cellEditorPopupWrapper = this.beans.context.createBean(new Bv(e));
      var s = this.cellEditorPopupWrapper.getGui();
      this.cellEditorGui && s.appendChild(this.cellEditorGui);
      var a = this.beans.popupService, l = this.beans.gridOptionsService.is("stopEditingWhenCellsLoseFocus"), u = r ?? (o.getPopupPosition ? o.getPopupPosition() : "over"), c = this.beans.gridOptionsService.is("enableRtl"), p = {
        ePopup: s,
        column: this.column,
        rowNode: this.rowNode,
        type: "popupCellEditor",
        eventSource: this.getGui(),
        position: u,
        alignSide: c ? "right" : "left",
        keepWithinBounds: !0
      }, d = a.positionPopupByComponent.bind(a, p), v = this.beans.localeService.getLocaleTextFunc(), f = a.addPopup({
        modal: l,
        eChild: s,
        closeOnEsc: !0,
        closedCallback: function() {
          i.cellCtrl.onPopupEditorClosed();
        },
        anchorToElement: this.getGui(),
        positionCallback: d,
        ariaLabel: v("ariaLabelCellEditor", "Cell Editor")
      });
      f && (this.hideEditorPopup = f.hideFunc);
    }, t.prototype.detach = function() {
      this.eRow.removeChild(this.getGui());
    }, t.prototype.destroy = function() {
      this.cellCtrl.stopEditing(), this.destroyEditorAndRenderer(), this.removeControls(), n.prototype.destroy.call(this);
    }, t.prototype.clearParentOfValue = function() {
      var e = this.getGui(), r = this.beans.gridOptionsService.getDocument();
      e.contains(r.activeElement) && co() && e.focus({ preventScroll: !0 }), Fe(this.getParentOfValue());
    }, t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var kv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Uv = (
  /** @class */
  function(n) {
    kv(t, n);
    function t(e, r, i) {
      var o = n.call(this) || this;
      o.cellComps = {}, o.beans = r, o.rowCtrl = e, o.setTemplate(
        /* html */
        '<div comp-id="' + o.getCompId() + '" style="' + o.getInitialStyle(i) + '"/>'
      );
      var s = o.getGui(), a = s.style, l = {
        setDomOrder: function(u) {
          return o.domOrder = u;
        },
        setCellCtrls: function(u) {
          return o.setCellCtrls(u);
        },
        showFullWidth: function(u) {
          return o.showFullWidth(u);
        },
        getFullWidthCellRenderer: function() {
          return o.getFullWidthCellRenderer();
        },
        addOrRemoveCssClass: function(u, c) {
          return o.addOrRemoveCssClass(u, c);
        },
        setUserStyles: function(u) {
          return ds(s, u);
        },
        setTop: function(u) {
          return a.top = u;
        },
        setTransform: function(u) {
          return a.transform = u;
        },
        setRowIndex: function(u) {
          return s.setAttribute("row-index", u);
        },
        setRole: function(u) {
          return ue(s, u);
        },
        setRowId: function(u) {
          return s.setAttribute("row-id", u);
        },
        setRowBusinessKey: function(u) {
          return s.setAttribute("row-business-key", u);
        },
        setTabIndex: function(u) {
          return s.setAttribute("tabindex", u.toString());
        }
      };
      return e.setComp(l, o.getGui(), i), o.addDestroyFunc(function() {
        e.unsetComp(i);
      }), o;
    }
    return t.prototype.getInitialStyle = function(e) {
      var r = this.rowCtrl.getInitialTransform(e), i = this.rowCtrl.getInitialRowTop(e);
      return r ? "transform: " + r : "top: " + i;
    }, t.prototype.showFullWidth = function(e) {
      var r = this, i = function(s) {
        if (r.isAlive()) {
          var a = s.getGui();
          r.getGui().appendChild(a), r.rowCtrl.setupDetailRowAutoHeight(a), r.setFullWidthRowComp(s);
        } else
          r.beans.context.destroyBean(s);
      }, o = e.newAgStackInstance();
      o && o.then(i);
    }, t.prototype.setCellCtrls = function(e) {
      var r = this, i = Object.assign({}, this.cellComps);
      e.forEach(function(s) {
        var a = s.getInstanceId(), l = r.cellComps[a];
        l == null ? r.newCellComp(s) : i[a] = null;
      });
      var o = rt(i).filter(function(s) {
        return s != null;
      });
      this.destroyCells(o), this.ensureDomOrder(e);
    }, t.prototype.ensureDomOrder = function(e) {
      var r = this;
      if (this.domOrder) {
        var i = [];
        e.forEach(function(o) {
          var s = r.cellComps[o.getInstanceId()];
          s && i.push(s.getGui());
        }), ps(this.getGui(), i);
      }
    }, t.prototype.newCellComp = function(e) {
      var r = new jv(this.beans, e, this.rowCtrl.isPrintLayout(), this.getGui(), this.rowCtrl.isEditing());
      this.cellComps[e.getInstanceId()] = r, this.getGui().appendChild(r.getGui());
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this), this.destroyAllCells();
    }, t.prototype.destroyAllCells = function() {
      var e = rt(this.cellComps).filter(function(r) {
        return r != null;
      });
      this.destroyCells(e);
    }, t.prototype.setFullWidthRowComp = function(e) {
      var r = this;
      this.fullWidthCellRenderer && console.error("AG Grid - should not be setting fullWidthRowComponent twice"), this.fullWidthCellRenderer = e, this.addDestroyFunc(function() {
        r.fullWidthCellRenderer = r.beans.context.destroyBean(r.fullWidthCellRenderer);
      });
    }, t.prototype.getFullWidthCellRenderer = function() {
      return this.fullWidthCellRenderer;
    }, t.prototype.destroyCells = function(e) {
      var r = this;
      e.forEach(function(i) {
        if (i) {
          var o = i.getCtrl().getInstanceId();
          r.cellComps[o] === i && (i.detach(), i.destroy(), r.cellComps[o] = null);
        }
      });
    }, t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var zv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Vn = function() {
  return Vn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Vn.apply(this, arguments);
}, jt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
};
function Kv() {
  var n = W.elementGettingCreated.getAttribute("name"), t = Su.getRowContainerCssClasses(n), e, r = n === S.CENTER, i = n === S.TOP_CENTER || n === S.STICKY_TOP_CENTER || n === S.BOTTOM_CENTER;
  return r ? e = /* html */
  '<div class="' + t.wrapper + `" ref="eWrapper" role="presentation">
                <div class="` + t.viewport + `" ref="eViewport" role="presentation">
                    <div class="` + t.container + `" ref="eContainer"></div>
                </div>
            </div>` : i ? e = /* html */
  '<div class="' + t.viewport + `" ref="eViewport" role="presentation">
                <div class="` + t.container + `" ref="eContainer"></div>
            </div>` : e = /* html */
  '<div class="' + t.container + '" ref="eContainer"></div>', e;
}
var $v = (
  /** @class */
  function(n) {
    zv(t, n);
    function t() {
      var e = n.call(this, Kv()) || this;
      return e.rowComps = {}, e.name = W.elementGettingCreated.getAttribute("name"), e.type = Ov(e.name), e;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = {
        setViewportHeight: function(o) {
          return e.eViewport.style.height = o;
        },
        setRowCtrls: function(o) {
          return e.setRowCtrls(o);
        },
        setDomOrder: function(o) {
          e.domOrder = o;
        },
        setContainerWidth: function(o) {
          return e.eContainer.style.width = o;
        }
      }, i = this.createManagedBean(new Su(this.name));
      i.setComp(r, this.eContainer, this.eViewport, this.eWrapper);
    }, t.prototype.preDestroy = function() {
      this.setRowCtrls([]);
    }, t.prototype.setRowCtrls = function(e) {
      var r = this, i = Vn({}, this.rowComps);
      this.rowComps = {}, this.lastPlacedElement = null;
      var o = function(s) {
        var a = s.getInstanceId(), l = i[a];
        if (l)
          r.rowComps[a] = l, delete i[a], r.ensureDomOrder(l.getGui());
        else {
          var u = new Uv(s, r.beans, r.type);
          r.rowComps[a] = u, r.appendRow(u.getGui());
        }
      };
      e.forEach(o), rt(i).forEach(function(s) {
        r.eContainer.removeChild(s.getGui()), s.destroy();
      }), ue(this.eContainer, e.length ? "rowgroup" : "presentation");
    }, t.prototype.appendRow = function(e) {
      this.domOrder ? Hl(this.eContainer, e, this.lastPlacedElement) : this.eContainer.appendChild(e), this.lastPlacedElement = e;
    }, t.prototype.ensureDomOrder = function(e) {
      this.domOrder && (cs(this.eContainer, e, this.lastPlacedElement), this.lastPlacedElement = e);
    }, jt([
      h("beans")
    ], t.prototype, "beans", void 0), jt([
      P("eViewport")
    ], t.prototype, "eViewport", void 0), jt([
      P("eContainer")
    ], t.prototype, "eContainer", void 0), jt([
      P("eWrapper")
    ], t.prototype, "eWrapper", void 0), jt([
      b
    ], t.prototype, "postConstruct", null), jt([
      ve
    ], t.prototype, "preDestroy", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ia = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Yv = (
  /** @class */
  function() {
    function n(t) {
      this.columnsToAggregate = [], this.columnsToGroup = [], this.columnsToPivot = [], this.pinned = t;
    }
    return n.prototype.onDragEnter = function(t) {
      var e = this;
      if (this.clearColumnsList(), !this.gridOptionsService.is("functionsReadOnly")) {
        var r = t.dragItem.columns;
        r && r.forEach(function(i) {
          i.isPrimary() && (i.isAnyFunctionActive() || (i.isAllowValue() ? e.columnsToAggregate.push(i) : i.isAllowRowGroup() ? e.columnsToGroup.push(i) : i.isAllowPivot() && e.columnsToPivot.push(i)));
        });
      }
    }, n.prototype.getIconName = function() {
      var t = this.columnsToAggregate.length + this.columnsToGroup.length + this.columnsToPivot.length;
      return t > 0 ? this.pinned ? de.ICON_PINNED : de.ICON_MOVE : null;
    }, n.prototype.onDragLeave = function(t) {
      this.clearColumnsList();
    }, n.prototype.clearColumnsList = function() {
      this.columnsToAggregate.length = 0, this.columnsToGroup.length = 0, this.columnsToPivot.length = 0;
    }, n.prototype.onDragging = function(t) {
    }, n.prototype.onDragStop = function(t) {
      this.columnsToAggregate.length > 0 && this.columnModel.addValueColumns(this.columnsToAggregate, "toolPanelDragAndDrop"), this.columnsToGroup.length > 0 && this.columnModel.addRowGroupColumns(this.columnsToGroup, "toolPanelDragAndDrop"), this.columnsToPivot.length > 0 && this.columnModel.addPivotColumns(this.columnsToPivot, "toolPanelDragAndDrop");
    }, ia([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), ia([
      h("gridOptionsService")
    ], n.prototype, "gridOptionsService", void 0), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Cr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, qv = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Qv = (
  /** @class */
  function() {
    function n(t, e) {
      this.needToMoveLeft = !1, this.needToMoveRight = !1, this.lastMovedInfo = null, this.pinned = t, this.eContainer = e, this.centerContainer = !O(t);
    }
    return n.prototype.init = function() {
      var t = this;
      this.ctrlsService.whenReady(function() {
        t.gridBodyCon = t.ctrlsService.getGridBodyCtrl();
      });
    }, n.prototype.getIconName = function() {
      return this.pinned ? de.ICON_PINNED : de.ICON_MOVE;
    }, n.prototype.onDragEnter = function(t) {
      var e = t.dragItem.columns, r = t.dragSource.type === we.ToolPanel;
      if (r)
        this.setColumnsVisible(e, !0, "uiColumnDragged");
      else {
        var i = t.dragItem.visibleState, o = (e || []).filter(function(s) {
          return i[s.getId()];
        });
        this.setColumnsVisible(o, !0, "uiColumnDragged");
      }
      this.setColumnsPinned(e, this.pinned, "uiColumnDragged"), this.onDragging(t, !0, !0);
    }, n.prototype.onDragLeave = function() {
      this.ensureIntervalCleared(), this.lastMovedInfo = null;
    }, n.prototype.setColumnsVisible = function(t, e, r) {
      if (r === void 0 && (r = "api"), t) {
        var i = t.filter(function(o) {
          return !o.getColDef().lockVisible;
        });
        this.columnModel.setColumnsVisible(i, e, r);
      }
    }, n.prototype.setColumnsPinned = function(t, e, r) {
      if (r === void 0 && (r = "api"), t) {
        var i = t.filter(function(o) {
          return !o.getColDef().lockPinned;
        });
        this.columnModel.setColumnsPinned(i, e, r);
      }
    }, n.prototype.onDragStop = function() {
      this.onDragging(this.lastDraggingEvent, !1, !0, !0), this.ensureIntervalCleared(), this.lastMovedInfo = null;
    }, n.prototype.normaliseX = function(t) {
      if (this.gridOptionsService.is("enableRtl")) {
        var e = this.eContainer.clientWidth;
        t = e - t;
      }
      return this.centerContainer && (t += this.ctrlsService.getCenterRowContainerCtrl().getCenterViewportScrollLeft()), t;
    }, n.prototype.checkCenterForScrolling = function(t) {
      if (this.centerContainer) {
        var e = this.ctrlsService.getCenterRowContainerCtrl().getCenterViewportScrollLeft(), r = e + this.ctrlsService.getCenterRowContainerCtrl().getCenterWidth();
        this.gridOptionsService.is("enableRtl") ? (this.needToMoveRight = t < e + 50, this.needToMoveLeft = t > r - 50) : (this.needToMoveLeft = t < e + 50, this.needToMoveRight = t > r - 50), this.needToMoveLeft || this.needToMoveRight ? this.ensureIntervalStarted() : this.ensureIntervalCleared();
      }
    }, n.prototype.onDragging = function(t, e, r, i) {
      var o = this, s;
      if (t === void 0 && (t = this.lastDraggingEvent), e === void 0 && (e = !1), r === void 0 && (r = !1), i === void 0 && (i = !1), i) {
        if (this.lastMovedInfo) {
          var a = this.lastMovedInfo, l = a.columns, u = a.toIndex;
          this.moveColumns(l, u, "uiColumnMoved", !0);
        }
        return;
      }
      if (this.lastDraggingEvent = t, !x(t.hDirection)) {
        var c = this.normaliseX(t.x);
        e || this.checkCenterForScrolling(c);
        var p = this.normaliseDirection(t.hDirection), d = t.dragSource.type, v = ((s = t.dragSource.getDragItem().columns) === null || s === void 0 ? void 0 : s.filter(function(f) {
          return f.getColDef().lockPinned ? f.getPinned() == o.pinned : !0;
        })) || [];
        this.attemptMoveColumns({ dragSourceType: d, allMovingColumns: v, hDirection: p, mouseX: c, fromEnter: e, fakeEvent: r });
      }
    }, n.prototype.normaliseDirection = function(t) {
      if (this.gridOptionsService.is("enableRtl"))
        switch (t) {
          case Xe.Left:
            return Xe.Right;
          case Xe.Right:
            return Xe.Left;
          default:
            console.error("AG Grid: Unknown direction " + t);
        }
      else
        return t;
    }, n.prototype.attemptMoveColumns = function(t) {
      var e = t.dragSourceType, r = t.hDirection, i = t.mouseX, o = t.fromEnter, s = t.fakeEvent, a = r === Xe.Left, l = r === Xe.Right, u = t.allMovingColumns;
      if (e === we.HeaderCell) {
        var c = [];
        u.forEach(function(L) {
          for (var H = null, B = L.getParent(); B != null && B.getDisplayedLeafColumns().length === 1; )
            H = B, B = B.getParent();
          H != null ? H.getLeafColumns().forEach(function(Q) {
            c.includes(Q) || c.push(Q);
          }) : c.includes(L) || c.push(L);
        }), u = c;
      }
      var p = u.slice();
      this.columnModel.sortColumnsLikeGridColumns(p);
      var d = this.calculateValidMoves(p, l, i), v = this.calculateOldIndex(p);
      if (d.length !== 0) {
        var f = d[0], y = v !== null && !o;
        if (e == we.HeaderCell && (y = v !== null), !(y && !s && (a && f >= v || l && f <= v))) {
          for (var C = this.columnModel.getAllDisplayedColumns(), m = [], w = null, E = 0; E < d.length; E++) {
            var R = d[E], D = this.columnModel.getProposedColumnOrder(p, R);
            if (this.columnModel.doesOrderPassRules(D)) {
              var M = D.filter(function(L) {
                return C.includes(L);
              });
              if (w === null)
                w = M;
              else if (!G.areEqual(M, w))
                break;
              var I = this.groupFragCount(D);
              m.push({ move: R, fragCount: I });
            }
          }
          m.length !== 0 && (m.sort(function(L, H) {
            return L.fragCount - H.fragCount;
          }), this.moveColumns(u, m[0].move, "uiColumnMoved", !1));
        }
      }
    }, n.prototype.calculateOldIndex = function(t) {
      var e = this.columnModel.getAllGridColumns(), r = ol(t.map(function(l) {
        return e.indexOf(l);
      })), i = r[0], o = q(r), s = o - i, a = s !== r.length - 1;
      return a ? null : i;
    }, n.prototype.moveColumns = function(t, e, r, i) {
      this.columnModel.moveColumns(t, e, r, i), this.lastMovedInfo = i ? null : { columns: t, toIndex: e };
    }, n.prototype.groupFragCount = function(t) {
      function e(s) {
        for (var a = [], l = s.getOriginalParent(); l != null; )
          a.push(l), l = l.getOriginalParent();
        return a;
      }
      for (var r = 0, i = function(s) {
        var a, l = e(t[s]), u = e(t[s + 1]);
        a = qv(l.length > u.length ? [l, u] : [u, l], 2), l = a[0], u = a[1], l.forEach(function(c) {
          u.indexOf(c) === -1 && r++;
        });
      }, o = 0; o < t.length - 1; o++)
        i(o);
      return r;
    }, n.prototype.calculateValidMoves = function(t, e, r) {
      var i = this.gridOptionsService.is("suppressMovableColumns") || t.some(function(I) {
        return I.getColDef().suppressMovable;
      });
      if (i)
        return [];
      var o = this.columnModel.getDisplayedColumns(this.pinned), s = this.columnModel.getAllGridColumns(), a = o.filter(function(I) {
        return Ve(t, I);
      }), l = o.filter(function(I) {
        return !Ve(t, I);
      }), u = s.filter(function(I) {
        return !Ve(t, I);
      }), c = 0, p = r;
      if (e) {
        var d = 0;
        a.forEach(function(I) {
          return d += I.getActualWidth();
        }), p -= d;
      }
      if (p > 0) {
        for (var v = 0; v < l.length; v++) {
          var f = l[v];
          if (p -= f.getActualWidth(), p < 0)
            break;
          c++;
        }
        e && c++;
      }
      var y;
      if (c > 0) {
        var C = l[c - 1];
        y = u.indexOf(C) + 1;
      } else
        y = u.indexOf(l[0]), y === -1 && (y = 0);
      var m = [y], w = function(I, L) {
        return I - L;
      };
      if (e) {
        for (var E = y + 1, R = s.length - 1; E <= R; )
          m.push(E), E++;
        m.sort(w);
      } else {
        for (var E = y, R = s.length - 1, D = s[E]; E <= R && this.isColumnHidden(o, D); )
          E++, m.push(E), D = s[E];
        E = y - 1;
        for (var M = 0; E >= M; )
          m.push(E), E--;
        m.sort(w).reverse();
      }
      return m;
    }, n.prototype.isColumnHidden = function(t, e) {
      return t.indexOf(e) < 0;
    }, n.prototype.ensureIntervalStarted = function() {
      this.movingIntervalId || (this.intervalCount = 0, this.failedMoveAttempts = 0, this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), 100), this.needToMoveLeft ? this.dragAndDropService.setGhostIcon(de.ICON_LEFT, !0) : this.dragAndDropService.setGhostIcon(de.ICON_RIGHT, !0));
    }, n.prototype.ensureIntervalCleared = function() {
      this.movingIntervalId && (window.clearInterval(this.movingIntervalId), this.movingIntervalId = null, this.dragAndDropService.setGhostIcon(de.ICON_MOVE));
    }, n.prototype.moveInterval = function() {
      var t;
      this.intervalCount++, t = 10 + this.intervalCount * 5, t > 100 && (t = 100);
      var e = null, r = this.gridBodyCon.getScrollFeature();
      if (this.needToMoveLeft ? e = r.scrollHorizontally(-t) : this.needToMoveRight && (e = r.scrollHorizontally(t)), e !== 0)
        this.onDragging(this.lastDraggingEvent), this.failedMoveAttempts = 0;
      else {
        this.failedMoveAttempts++;
        var i = this.lastDraggingEvent.dragItem.columns, o = i.filter(function(a) {
          return !a.getColDef().lockPinned;
        });
        if (o.length > 0 && (this.dragAndDropService.setGhostIcon(de.ICON_PINNED), this.failedMoveAttempts > 7)) {
          var s = this.needToMoveLeft ? "left" : "right";
          this.setColumnsPinned(o, s, "uiColumnDragged"), this.dragAndDropService.nudge();
        }
      }
    }, Cr([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), Cr([
      h("dragAndDropService")
    ], n.prototype, "dragAndDropService", void 0), Cr([
      h("gridOptionsService")
    ], n.prototype, "gridOptionsService", void 0), Cr([
      h("ctrlsService")
    ], n.prototype, "ctrlsService", void 0), Cr([
      b
    ], n.prototype, "init", null), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Xv = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), mr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Jv = (
  /** @class */
  function(n) {
    Xv(t, n);
    function t(e, r) {
      var i = n.call(this) || this;
      return i.pinned = e, i.eContainer = r, i;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        switch (e.pinned) {
          case "left":
            e.eSecondaryContainers = [
              [r.gridBodyCtrl.getBodyViewportElement(), r.leftRowContainerCtrl.getContainerElement()],
              [r.bottomLeftRowContainerCtrl.getContainerElement()],
              [r.topLeftRowContainerCtrl.getContainerElement()]
            ];
            break;
          case "right":
            e.eSecondaryContainers = [
              [r.gridBodyCtrl.getBodyViewportElement(), r.rightRowContainerCtrl.getContainerElement()],
              [r.bottomRightRowContainerCtrl.getContainerElement()],
              [r.topRightRowContainerCtrl.getContainerElement()]
            ];
            break;
          default:
            e.eSecondaryContainers = [
              [r.gridBodyCtrl.getBodyViewportElement(), r.centerRowContainerCtrl.getViewportElement()],
              [r.bottomCenterRowContainerCtrl.getViewportElement()],
              [r.topCenterRowContainerCtrl.getViewportElement()]
            ];
            break;
        }
      });
    }, t.prototype.isInterestedIn = function(e) {
      return e === we.HeaderCell || e === we.ToolPanel && this.gridOptionsService.is("allowDragFromColumnsToolPanel");
    }, t.prototype.getSecondaryContainers = function() {
      return this.eSecondaryContainers;
    }, t.prototype.getContainer = function() {
      return this.eContainer;
    }, t.prototype.init = function() {
      this.moveColumnFeature = this.createManagedBean(new Qv(this.pinned, this.eContainer)), this.bodyDropPivotTarget = this.createManagedBean(new Yv(this.pinned)), this.dragAndDropService.addDropTarget(this);
    }, t.prototype.getIconName = function() {
      return this.currentDropListener.getIconName();
    }, t.prototype.isDropColumnInPivotMode = function(e) {
      return this.columnModel.isPivotMode() && e.dragSource.type === we.ToolPanel;
    }, t.prototype.onDragEnter = function(e) {
      this.currentDropListener = this.isDropColumnInPivotMode(e) ? this.bodyDropPivotTarget : this.moveColumnFeature, this.currentDropListener.onDragEnter(e);
    }, t.prototype.onDragLeave = function(e) {
      this.currentDropListener.onDragLeave(e);
    }, t.prototype.onDragging = function(e) {
      this.currentDropListener.onDragging(e);
    }, t.prototype.onDragStop = function(e) {
      this.currentDropListener.onDragStop(e);
    }, mr([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), mr([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), mr([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), mr([
      b
    ], t.prototype, "postConstruct", null), mr([
      b
    ], t.prototype, "init", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Zv = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, eg = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Zv(arguments[t]));
  return n;
}, Eu = (
  /** @class */
  function() {
    function n() {
    }
    return n.getHeaderClassesFromColDef = function(t, e, r, i) {
      return x(t) ? [] : this.getColumnClassesFromCollDef(t.headerClass, t, e, r, i);
    }, n.getToolPanelClassesFromColDef = function(t, e, r, i) {
      return x(t) ? [] : this.getColumnClassesFromCollDef(t.toolPanelClass, t, e, r, i);
    }, n.getClassParams = function(t, e, r, i) {
      return {
        // bad naming, as colDef here can be a group or a column,
        // however most people won't appreciate the difference,
        // so keeping it as colDef to avoid confusion.
        colDef: t,
        column: r,
        columnGroup: i,
        api: e.api,
        columnApi: e.columnApi,
        context: e.context
      };
    }, n.getColumnClassesFromCollDef = function(t, e, r, i, o) {
      if (x(t))
        return [];
      var s;
      if (typeof t == "function") {
        var a = this.getClassParams(e, r, i, o);
        s = t(a);
      } else
        s = t;
      return typeof s == "string" ? [s] : Array.isArray(s) ? eg(s) : [];
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var tg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), li = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, rg = (
  /** @class */
  function(n) {
    tg(t, n);
    function t(e) {
      var r = n.call(this, t.TEMPLATE, e) || this;
      return r.headerCompVersion = 0, r.column = e.getColumnGroupChild(), r.pinned = e.getPinned(), r;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.getGui(), i = function(a, l, u) {
        var c = u || r;
        l != null && l != "" ? c.setAttribute(a, l) : c.removeAttribute(a);
      }, o = {
        setWidth: function(a) {
          return r.style.width = a;
        },
        addOrRemoveCssClass: function(a, l) {
          return e.addOrRemoveCssClass(a, l);
        },
        setColId: function(a) {
          return i("col-id", a);
        },
        setTitle: function(a) {
          return i("title", a);
        },
        setAriaDescription: function(a) {
          return ml(r, a);
        },
        setAriaSort: function(a) {
          return a ? bl(r, a) : Pl(r);
        },
        setUserCompDetails: function(a) {
          return e.setUserCompDetails(a);
        },
        getUserCompInstance: function() {
          return e.headerComp;
        }
      };
      this.ctrl.setComp(o, this.getGui(), this.eResize, this.eHeaderCompWrapper);
      var s = this.ctrl.getSelectAllGui();
      this.eResize.insertAdjacentElement("afterend", s);
    }, t.prototype.destroyHeaderComp = function() {
      this.headerComp && (this.eHeaderCompWrapper.removeChild(this.headerCompGui), this.headerComp = this.destroyBean(this.headerComp), this.headerCompGui = void 0);
    }, t.prototype.setUserCompDetails = function(e) {
      var r = this;
      this.headerCompVersion++;
      var i = this.headerCompVersion;
      e.newAgStackInstance().then(function(o) {
        return r.afterCompCreated(i, o);
      });
    }, t.prototype.afterCompCreated = function(e, r) {
      if (e != this.headerCompVersion || !this.isAlive()) {
        this.destroyBean(r);
        return;
      }
      this.destroyHeaderComp(), this.headerComp = r, this.headerCompGui = r.getGui(), this.eHeaderCompWrapper.appendChild(this.headerCompGui), this.ctrl.setDragSource(this.getGui());
    }, t.TEMPLATE = `<div class="ag-header-cell" role="columnheader" tabindex="-1">
            <div ref="eResize" class="ag-header-cell-resize" role="presentation"></div>
            <div ref="eHeaderCompWrapper" class="ag-header-cell-comp-wrapper" role="presentation"></div>
        </div>`, li([
      P("eResize")
    ], t.prototype, "eResize", void 0), li([
      P("eHeaderCompWrapper")
    ], t.prototype, "eHeaderCompWrapper", void 0), li([
      b
    ], t.prototype, "postConstruct", null), li([
      ve
    ], t.prototype, "destroyHeaderComp", null), t;
  }(Es)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ig = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), zo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, og = (
  /** @class */
  function(n) {
    ig(t, n);
    function t(e) {
      return n.call(this, t.TEMPLATE, e) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.getGui(), i = function(s, a) {
        return a != null ? r.setAttribute(s, a) : r.removeAttribute(s);
      }, o = {
        addOrRemoveCssClass: function(s, a) {
          return e.addOrRemoveCssClass(s, a);
        },
        setResizableDisplayed: function(s) {
          return k(e.eResize, s);
        },
        setWidth: function(s) {
          return r.style.width = s;
        },
        setColId: function(s) {
          return r.setAttribute("col-id", s);
        },
        setAriaExpanded: function(s) {
          return i("aria-expanded", s);
        },
        setTitle: function(s) {
          return i("title", s);
        },
        setUserCompDetails: function(s) {
          return e.setUserCompDetails(s);
        }
      };
      this.ctrl.setComp(o, r, this.eResize);
    }, t.prototype.setUserCompDetails = function(e) {
      var r = this;
      e.newAgStackInstance().then(function(i) {
        return r.afterHeaderCompCreated(i);
      });
    }, t.prototype.afterHeaderCompCreated = function(e) {
      var r = this, i = function() {
        return r.destroyBean(e);
      };
      if (!this.isAlive()) {
        i();
        return;
      }
      this.getGui().appendChild(e.getGui()), this.addDestroyFunc(i), this.ctrl.setDragSource(e.getGui());
    }, t.TEMPLATE = `<div class="ag-header-group-cell" role="columnheader" tabindex="-1">
            <div ref="eResize" class="ag-header-cell-resize" role="presentation"></div>
        </div>`, zo([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), zo([
      P("eResize")
    ], t.prototype, "eResize", void 0), zo([
      b
    ], t.prototype, "postConstruct", null), t;
  }(Es)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ng = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), oa = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, fe;
(function(n) {
  n.COLUMN_GROUP = "group", n.COLUMN = "column", n.FLOATING_FILTER = "filter";
})(fe || (fe = {}));
var sg = (
  /** @class */
  function(n) {
    ng(t, n);
    function t(e) {
      var r = n.call(this) || this;
      r.headerComps = {};
      var i = e.getType() == fe.COLUMN_GROUP ? "ag-header-row-column-group" : e.getType() == fe.FLOATING_FILTER ? "ag-header-row-column-filter" : "ag-header-row-column";
      return r.setTemplate(
        /* html */
        '<div class="ag-header-row ' + i + '" role="row"></div>'
      ), r.ctrl = e, r;
    }
    return t.prototype.init = function() {
      var e = this, r = {
        setTransform: function(i) {
          return e.getGui().style.transform = i;
        },
        setHeight: function(i) {
          return e.getGui().style.height = i;
        },
        setTop: function(i) {
          return e.getGui().style.top = i;
        },
        setHeaderCtrls: function(i) {
          return e.setHeaderCtrls(i);
        },
        setWidth: function(i) {
          return e.getGui().style.width = i;
        },
        setAriaRowIndex: function(i) {
          return ts(e.getGui(), i);
        }
      };
      this.ctrl.setComp(r);
    }, t.prototype.destroyHeaderCtrls = function() {
      this.setHeaderCtrls([]);
    }, t.prototype.setHeaderCtrls = function(e) {
      var r = this;
      if (this.isAlive()) {
        var i = this.headerComps;
        this.headerComps = {}, e.forEach(function(u) {
          var c = u.getInstanceId(), p = i[c];
          delete i[c], p == null && (p = r.createHeaderComp(u), r.getGui().appendChild(p.getGui())), r.headerComps[c] = p;
        }), J(i, function(u, c) {
          r.getGui().removeChild(c.getGui()), r.destroyBean(c);
        });
        var o = this.gridOptionsService.is("ensureDomOrder"), s = this.gridOptionsService.isDomLayout("print");
        if (o || s) {
          var a = rt(this.headerComps);
          a.sort(function(u, c) {
            var p = u.getCtrl().getColumnGroupChild().getLeft(), d = c.getCtrl().getColumnGroupChild().getLeft();
            return p - d;
          });
          var l = a.map(function(u) {
            return u.getGui();
          });
          ps(this.getGui(), l);
        }
      }
    }, t.prototype.createHeaderComp = function(e) {
      var r;
      switch (this.ctrl.getType()) {
        case fe.COLUMN_GROUP:
          r = new og(e);
          break;
        case fe.FLOATING_FILTER:
          r = new hf(e);
          break;
        default:
          r = new rg(e);
          break;
      }
      return this.createBean(r), r.setParentComponent(this), r;
    }, oa([
      b
    ], t.prototype, "init", null), oa([
      ve
    ], t.prototype, "destroyHeaderCtrls", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ag = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ko = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, lg = 0, vo = (
  /** @class */
  function(n) {
    ag(t, n);
    function t(e, r) {
      var i = n.call(this) || this;
      return i.lastFocusEvent = null, i.columnGroupChild = e, i.parentRowCtrl = r, i.instanceId = e.getUniqueId() + "-" + lg++, i;
    }
    return t.prototype.shouldStopEventPropagation = function(e) {
      var r = this.focusService.getFocusedHeader(), i = r.headerRowIndex, o = r.column;
      return zl(this.gridOptionsService, e, i, o);
    }, t.prototype.getWrapperHasFocus = function() {
      var e = this.gridOptionsService.getDocument(), r = e.activeElement;
      return r === this.eGui;
    }, t.prototype.setGui = function(e) {
      this.eGui = e, this.addDomData();
    }, t.prototype.handleKeyDown = function(e) {
      var r = this.getWrapperHasFocus();
      switch (e.key) {
        case _.PAGE_DOWN:
        case _.PAGE_UP:
        case _.PAGE_HOME:
        case _.PAGE_END:
          r && e.preventDefault();
      }
    }, t.prototype.addDomData = function() {
      var e = this, r = t.DOM_DATA_KEY_HEADER_CTRL;
      this.gridOptionsService.setDomData(this.eGui, r, this), this.addDestroyFunc(function() {
        return e.gridOptionsService.setDomData(e.eGui, r, null);
      });
    }, t.prototype.getGui = function() {
      return this.eGui;
    }, t.prototype.focus = function(e) {
      return this.eGui ? (this.lastFocusEvent = e || null, this.eGui.focus(), !0) : !1;
    }, t.prototype.getRowIndex = function() {
      return this.parentRowCtrl.getRowIndex();
    }, t.prototype.getParentRowCtrl = function() {
      return this.parentRowCtrl;
    }, t.prototype.getPinned = function() {
      return this.parentRowCtrl.getPinned();
    }, t.prototype.getInstanceId = function() {
      return this.instanceId;
    }, t.prototype.getColumnGroupChild = function() {
      return this.columnGroupChild;
    }, t.DOM_DATA_KEY_HEADER_CTRL = "headerCtrl", Ko([
      h("focusService")
    ], t.prototype, "focusService", void 0), Ko([
      h("beans")
    ], t.prototype, "beans", void 0), Ko([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ug = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), cg = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ts = (
  /** @class */
  function(n) {
    ug(t, n);
    function t(e, r, i, o) {
      var s = n.call(this) || this;
      return s.columnOrGroup = e, s.eCell = r, s.ariaEl = s.eCell.querySelector("[role=columnheader]") || s.eCell, s.colsSpanning = o, s.beans = i, s;
    }
    return t.prototype.setColsSpanning = function(e) {
      this.colsSpanning = e, this.onLeftChanged();
    }, t.prototype.getColumnOrGroup = function() {
      return this.beans.gridOptionsService.is("enableRtl") && this.colsSpanning ? q(this.colsSpanning) : this.columnOrGroup;
    }, t.prototype.postConstruct = function() {
      this.addManagedListener(this.columnOrGroup, Z.EVENT_LEFT_CHANGED, this.onLeftChanged.bind(this)), this.setLeftFirstTime(), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onLeftChanged.bind(this)), this.addManagedPropertyListener("domLayout", this.onLeftChanged.bind(this));
    }, t.prototype.setLeftFirstTime = function() {
      var e = this.beans.gridOptionsService.is("suppressColumnMoveAnimation"), r = O(this.columnOrGroup.getOldLeft()), i = this.beans.columnAnimationService.isActive() && r && !e;
      i ? this.animateInLeft() : this.onLeftChanged();
    }, t.prototype.animateInLeft = function() {
      var e = this, r = this.getColumnOrGroup(), i = r.getLeft(), o = r.getOldLeft(), s = this.modifyLeftForPrintLayout(r, o), a = this.modifyLeftForPrintLayout(r, i);
      this.setLeft(s), this.actualLeft = a, this.beans.columnAnimationService.executeNextVMTurn(function() {
        e.actualLeft === a && e.setLeft(a);
      });
    }, t.prototype.onLeftChanged = function() {
      var e = this.getColumnOrGroup(), r = e.getLeft();
      this.actualLeft = this.modifyLeftForPrintLayout(e, r), this.setLeft(this.actualLeft);
    }, t.prototype.modifyLeftForPrintLayout = function(e, r) {
      var i = this.beans.gridOptionsService.isDomLayout("print");
      if (!i || e.getPinned() === "left")
        return r;
      var o = this.beans.columnModel.getDisplayedColumnsLeftWidth();
      if (e.getPinned() === "right") {
        var s = this.beans.columnModel.getBodyContainerWidth();
        return o + s + r;
      }
      return o + r;
    }, t.prototype.setLeft = function(e) {
      O(e) && (this.eCell.style.left = e + "px");
      var r;
      if (this.columnOrGroup instanceof Z)
        r = this.columnOrGroup;
      else {
        var i = this.columnOrGroup, o = i.getLeafColumns();
        if (!o.length)
          return;
        o.length > 1 && Tl(this.ariaEl, o.length), r = o[0];
      }
      var s = this.beans.columnModel.getAriaColumnIndex(r);
      rs(this.ariaEl, s);
    }, cg([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var pg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), na = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, bs = (
  /** @class */
  function(n) {
    pg(t, n);
    function t(e, r) {
      var i = n.call(this) || this;
      return i.columns = e, i.element = r, i;
    }
    return t.prototype.postConstruct = function() {
      this.gridOptionsService.is("columnHoverHighlight") && this.addMouseHoverListeners();
    }, t.prototype.addMouseHoverListeners = function() {
      this.addManagedListener(this.element, "mouseout", this.onMouseOut.bind(this)), this.addManagedListener(this.element, "mouseover", this.onMouseOver.bind(this));
    }, t.prototype.onMouseOut = function() {
      this.columnHoverService.clearMouseOver();
    }, t.prototype.onMouseOver = function() {
      this.columnHoverService.setMouseOver(this.columns);
    }, na([
      h("columnHoverService")
    ], t.prototype, "columnHoverService", void 0), na([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var dg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), $o = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, hg = (
  /** @class */
  function(n) {
    dg(t, n);
    function t(e, r) {
      var i = n.call(this, e, r) || this;
      return i.column = e, i;
    }
    return t.prototype.setComp = function(e, r, i, o) {
      n.prototype.setGui.call(this, r), this.comp = e, this.eButtonShowMainFilter = i, this.eFloatingFilterBody = o;
      var s = this.column.getColDef(), a = !!s.filter || !!s.filterFramework, l = !!s.floatingFilter;
      this.active = a && l, this.setupWidth(), this.setupLeft(), this.setupHover(), this.setupFocus(), this.setupUserComp(), this.setupSyncWithFilter(), this.setupUi(), this.addManagedListener(this.eButtonShowMainFilter, "click", this.showParentFilter.bind(this)), this.active && this.addManagedListener(this.column, Z.EVENT_FILTER_CHANGED, this.updateFilterButton.bind(this));
    }, t.prototype.setupUi = function() {
      if (this.comp.setButtonWrapperDisplayed(!this.suppressFilterButton && this.active), !!this.active) {
        this.comp.addOrRemoveBodyCssClass("ag-floating-filter-full-body", this.suppressFilterButton), this.comp.addOrRemoveBodyCssClass("ag-floating-filter-body", !this.suppressFilterButton);
        var e = oe("filter", this.gridOptionsService, this.column);
        e && this.eButtonShowMainFilter.appendChild(e);
      }
    }, t.prototype.setupFocus = function() {
      this.createManagedBean(new Tt(this.eGui, {
        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),
        onTabKeyDown: this.onTabKeyDown.bind(this),
        handleKeyDown: this.handleKeyDown.bind(this),
        onFocusIn: this.onFocusIn.bind(this)
      }));
    }, t.prototype.onTabKeyDown = function(e) {
      var r = this.gridOptionsService.getDocument(), i = r.activeElement, o = i === this.eGui;
      if (!o) {
        var s = this.focusService.findNextFocusableElement(this.eGui, null, e.shiftKey);
        if (s) {
          this.beans.headerNavigationService.scrollToColumn(this.column), e.preventDefault(), s.focus();
          return;
        }
        var a = this.findNextColumnWithFloatingFilter(e.shiftKey);
        a && this.focusService.focusHeaderPosition({
          headerPosition: {
            headerRowIndex: this.getParentRowCtrl().getRowIndex(),
            column: a
          },
          event: e
        }) && e.preventDefault();
      }
    }, t.prototype.findNextColumnWithFloatingFilter = function(e) {
      var r = this.beans.columnModel, i = this.column;
      do
        if (i = e ? r.getDisplayedColBefore(i) : r.getDisplayedColAfter(i), !i)
          break;
      while (!i.getColDef().filter || !i.getColDef().floatingFilter);
      return i;
    }, t.prototype.handleKeyDown = function(e) {
      n.prototype.handleKeyDown.call(this, e);
      var r = this.getWrapperHasFocus();
      switch (e.key) {
        case _.UP:
        case _.DOWN:
          r || e.preventDefault();
        case _.LEFT:
        case _.RIGHT:
          if (r)
            return;
          e.stopPropagation();
        case _.ENTER:
          r && this.focusService.focusInto(this.eGui) && e.preventDefault();
          break;
        case _.ESCAPE:
          r || this.eGui.focus();
      }
    }, t.prototype.onFocusIn = function(e) {
      var r = this.eGui.contains(e.relatedTarget);
      if (!r) {
        var i = !!e.relatedTarget && !e.relatedTarget.classList.contains("ag-floating-filter"), o = !!e.relatedTarget && Mt(e.relatedTarget, "ag-floating-filter");
        if (i && o && e.target === this.eGui) {
          var s = this.lastFocusEvent, a = !!(s && s.key === _.TAB);
          if (s && a) {
            var l = s.shiftKey;
            this.focusService.focusInto(this.eGui, l);
          }
        }
        var u = this.getRowIndex();
        this.beans.focusService.setFocusedHeader(u, this.column);
      }
    }, t.prototype.setupHover = function() {
      var e = this;
      this.createManagedBean(new bs([this.column], this.eGui));
      var r = function() {
        if (e.gridOptionsService.is("columnHoverHighlight")) {
          var i = e.columnHoverService.isHovered(e.column);
          e.comp.addOrRemoveCssClass("ag-column-hover", i);
        }
      };
      this.addManagedListener(this.eventService, g.EVENT_COLUMN_HOVER_CHANGED, r), r();
    }, t.prototype.setupLeft = function() {
      var e = new Ts(this.column, this.eGui, this.beans);
      this.createManagedBean(e);
    }, t.prototype.setupUserComp = function() {
      var e = this;
      if (this.active) {
        var r = this.column.getColDef();
        this.suppressFilterButton = r.floatingFilterComponentParams ? !!r.floatingFilterComponentParams.suppressFilterButton : !1;
        var i = this.filterManager.getFloatingFilterCompDetails(this.column, function() {
          return e.showParentFilter();
        });
        i && this.comp.setCompDetails(i);
      }
    }, t.prototype.showParentFilter = function() {
      var e = this.suppressFilterButton ? this.eFloatingFilterBody : this.eButtonShowMainFilter;
      this.menuFactory.showMenuAfterButtonClick(this.column, e, "floatingFilter", "filterMenuTab", ["filterMenuTab"]);
    }, t.prototype.setupSyncWithFilter = function() {
      var e = this;
      if (this.active) {
        var r = function(i) {
          var o = e.comp.getFloatingFilterComp();
          if (o) {
            var s = e.filterManager.getCurrentFloatingFilterParentModel(e.column);
            o.then(function(a) {
              a && a.onParentModelChanged(s, i);
            });
          }
        };
        this.addManagedListener(this.column, Z.EVENT_FILTER_CHANGED, r), this.filterManager.isFilterActive(this.column) && r(null);
      }
    }, t.prototype.setupWidth = function() {
      var e = this, r = function() {
        var i = e.column.getActualWidth() + "px";
        e.comp.setWidth(i);
      };
      this.addManagedListener(this.column, Z.EVENT_WIDTH_CHANGED, r), r();
    }, t.prototype.updateFilterButton = function() {
      !this.suppressFilterButton && this.comp && this.comp.setButtonWrapperDisplayed(this.filterManager.isFilterAllowed(this.column));
    }, $o([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), $o([
      h("columnHoverService")
    ], t.prototype, "columnHoverService", void 0), $o([
      h("menuFactory")
    ], t.prototype, "menuFactory", void 0), t;
  }(vo)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var fg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Yo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, vg = (
  /** @class */
  function(n) {
    fg(t, n);
    function t(e, r, i, o, s) {
      var a = n.call(this) || this;
      return a.pinned = e, a.column = r, a.eResize = i, a.comp = o, a.ctrl = s, a;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.column.getColDef(), i = [], o, s, a = function() {
        if (k(e.eResize, o), !!o) {
          var c = e.horizontalResizeService.addResizeBar({
            eResizeBar: e.eResize,
            onResizeStart: e.onResizeStart.bind(e),
            onResizing: e.onResizing.bind(e, !1),
            onResizeEnd: e.onResizing.bind(e, !0)
          });
          if (i.push(c), s) {
            var p = e.gridOptionsService.is("skipHeaderOnAutoSize"), d = function() {
              e.columnModel.autoSizeColumn(e.column, p, "uiColumnResized");
            };
            e.eResize.addEventListener("dblclick", d);
            var v = new Ae(e.eResize);
            v.addEventListener(Ae.EVENT_DOUBLE_TAP, d), e.addDestroyFunc(function() {
              e.eResize.removeEventListener("dblclick", d), v.removeEventListener(Ae.EVENT_DOUBLE_TAP, d), v.destroy();
            });
          }
        }
      }, l = function() {
        i.forEach(function(c) {
          return c();
        }), i.length = 0;
      }, u = function() {
        var c = e.column.isResizable(), p = !e.gridOptionsService.is("suppressAutoSize") && !r.suppressAutoSize, d = c !== o || p !== s;
        d && (o = c, s = p, l(), a());
      };
      u(), this.addDestroyFunc(l), this.ctrl.addRefreshFunction(u);
    }, t.prototype.onResizing = function(e, r) {
      var i = this.normaliseResizeAmount(r), o = [{ key: this.column, newWidth: this.resizeStartWidth + i }];
      this.columnModel.setColumnWidths(o, this.resizeWithShiftKey, e, "uiColumnResized"), e && this.comp.addOrRemoveCssClass("ag-column-resizing", !1);
    }, t.prototype.onResizeStart = function(e) {
      this.resizeStartWidth = this.column.getActualWidth(), this.resizeWithShiftKey = e, this.comp.addOrRemoveCssClass("ag-column-resizing", !0);
    }, t.prototype.normaliseResizeAmount = function(e) {
      var r = e, i = this.pinned !== "left", o = this.pinned === "right";
      return this.gridOptionsService.is("enableRtl") ? i && (r *= -1) : o && (r *= -1), r;
    }, Yo([
      h("horizontalResizeService")
    ], t.prototype, "horizontalResizeService", void 0), Yo([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Yo([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var gg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ui = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, yg = (
  /** @class */
  function(n) {
    gg(t, n);
    function t(e) {
      var r = n.call(this) || this;
      r.cbSelectAllVisible = !1, r.processingEventFromCheckbox = !1, r.column = e;
      var i = e.getColDef();
      return r.filteredOnly = !!(i != null && i.headerCheckboxSelectionFilteredOnly), r.currentPageOnly = !!(i != null && i.headerCheckboxSelectionCurrentPageOnly), r;
    }
    return t.prototype.onSpaceKeyPressed = function(e) {
      var r = this.cbSelectAll, i = this.gridOptionsService.getDocument();
      r.isDisplayed() && !r.getGui().contains(i.activeElement) && (e.preventDefault(), r.setValue(!r.getValue()));
    }, t.prototype.getCheckboxGui = function() {
      return this.cbSelectAll.getGui();
    }, t.prototype.setComp = function(e) {
      this.headerCellCtrl = e, this.cbSelectAll = this.createManagedBean(new kr()), this.cbSelectAll.addCssClass("ag-header-select-all"), ue(this.cbSelectAll.getGui(), "presentation"), this.showOrHideSelectAll(), this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, this.showOrHideSelectAll.bind(this)), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelectAll.bind(this)), this.addManagedListener(this.eventService, g.EVENT_SELECTION_CHANGED, this.onSelectionChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_PAGINATION_CHANGED, this.onSelectionChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_MODEL_UPDATED, this.onModelChanged.bind(this)), this.addManagedListener(this.cbSelectAll, kr.EVENT_CHANGED, this.onCbSelectAll.bind(this)), uo(this.cbSelectAll.getGui(), !0), this.cbSelectAll.getInputElement().setAttribute("tabindex", "-1"), this.refreshSelectAllLabel();
    }, t.prototype.showOrHideSelectAll = function() {
      this.cbSelectAllVisible = this.isCheckboxSelection(), this.cbSelectAll.setDisplayed(this.cbSelectAllVisible, { skipAriaHidden: !0 }), this.cbSelectAllVisible && (this.checkRightRowModelType("selectAllCheckbox"), this.updateStateOfCheckbox()), this.refreshSelectAllLabel();
    }, t.prototype.onModelChanged = function() {
      this.cbSelectAllVisible && this.updateStateOfCheckbox();
    }, t.prototype.onSelectionChanged = function() {
      this.cbSelectAllVisible && this.updateStateOfCheckbox();
    }, t.prototype.updateStateOfCheckbox = function() {
      if (!this.processingEventFromCheckbox) {
        this.processingEventFromCheckbox = !0;
        var e = this.selectionService.getSelectAllState(this.filteredOnly, this.currentPageOnly);
        this.cbSelectAll.setValue(e), this.refreshSelectAllLabel(), this.processingEventFromCheckbox = !1;
      }
    }, t.prototype.refreshSelectAllLabel = function() {
      if (!this.cbSelectAllVisible)
        this.headerCellCtrl.setAriaDescriptionProperty("selectAll", null), this.cbSelectAll.setInputAriaLabel(null);
      else {
        var e = this.localeService.getLocaleTextFunc(), r = this.cbSelectAll.getValue(), i = r ? e("ariaChecked", "checked") : e("ariaUnchecked", "unchecked"), o = e("ariaRowSelectAll", "Press Space to toggle all rows selection");
        this.headerCellCtrl.setAriaDescriptionProperty("selectAll", o + " (" + i + ")"), this.cbSelectAll.setInputAriaLabel(o + " (" + i + ")");
      }
      this.headerCellCtrl.refreshAriaDescription();
    }, t.prototype.checkRightRowModelType = function(e) {
      var r = this.rowModel.getType(), i = r === "clientSide" || r === "serverSide";
      return i ? !0 : (console.warn("AG Grid: " + e + " is only available if using 'clientSide' or 'serverSide' rowModelType, you are using " + r + "."), !1);
    }, t.prototype.onCbSelectAll = function() {
      if (!this.processingEventFromCheckbox && this.cbSelectAllVisible) {
        var e = this.cbSelectAll.getValue(), r = "uiSelectAll";
        this.currentPageOnly ? r = "uiSelectAllCurrentPage" : this.filteredOnly && (r = "uiSelectAllFiltered");
        var i = {
          source: r,
          justFiltered: this.filteredOnly,
          justCurrentPage: this.currentPageOnly
        };
        e ? this.selectionService.selectAllRowNodes(i) : this.selectionService.deselectAllRowNodes(i);
      }
    }, t.prototype.isCheckboxSelection = function() {
      var e = this.column.getColDef().headerCheckboxSelection;
      if (typeof e == "function") {
        var r = e, i = {
          column: this.column,
          colDef: this.column.getColDef(),
          columnApi: this.columnApi,
          api: this.gridApi,
          context: this.gridOptionsService.context
        };
        e = r(i);
      }
      return e ? this.checkRightRowModelType("headerCheckboxSelection") : !1;
    }, ui([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), ui([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), ui([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), ui([
      h("selectionService")
    ], t.prototype, "selectionService", void 0), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Cg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), nt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, mg = (
  /** @class */
  function(n) {
    Cg(t, n);
    function t(e, r) {
      var i = n.call(this, e, r) || this;
      return i.refreshFunctions = [], i.userHeaderClasses = /* @__PURE__ */ new Set(), i.ariaDescriptionProperties = /* @__PURE__ */ new Map(), i.column = e, i;
    }
    return t.prototype.setComp = function(e, r, i, o) {
      var s = this;
      n.prototype.setGui.call(this, r), this.comp = e, this.updateState(), this.setupWidth(), this.setupMovingCss(), this.setupMenuClass(), this.setupSortableClass(), this.setupWrapTextClass(), this.refreshSpanHeaderHeight(), this.setupAutoHeight(o), this.addColumnHoverListener(), this.setupFilterCss(), this.setupColId(), this.setupClassesFromColDef(), this.setupTooltip(), this.addActiveHeaderMouseListeners(), this.setupSelectAll(), this.setupUserComp(), this.refreshAria(), this.createManagedBean(new vg(this.getPinned(), this.column, i, e, this)), this.createManagedBean(new bs([this.column], r)), this.createManagedBean(new Ts(this.column, r, this.beans)), this.createManagedBean(new Tt(r, {
        shouldStopEventPropagation: function(a) {
          return s.shouldStopEventPropagation(a);
        },
        onTabKeyDown: function() {
          return null;
        },
        handleKeyDown: this.handleKeyDown.bind(this),
        onFocusIn: this.onFocusIn.bind(this),
        onFocusOut: this.onFocusOut.bind(this)
      })), this.addManagedListener(this.column, Z.EVENT_COL_DEF_CHANGED, this.onColDefChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_CHANGED, this.onColumnPivotChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_HEADER_HEIGHT_CHANGED, this.onHeaderHeightChanged.bind(this));
    }, t.prototype.setupUserComp = function() {
      var e = this.lookupUserCompDetails();
      this.setCompDetails(e);
    }, t.prototype.setCompDetails = function(e) {
      this.userCompDetails = e, this.comp.setUserCompDetails(e);
    }, t.prototype.lookupUserCompDetails = function() {
      var e = this.createParams(), r = this.column.getColDef();
      return this.userComponentFactory.getHeaderCompDetails(r, e);
    }, t.prototype.createParams = function() {
      var e = this, r = this.column.getColDef(), i = {
        column: this.column,
        displayName: this.displayName,
        enableSorting: r.sortable,
        enableMenu: this.menuEnabled,
        showColumnMenu: function(o) {
          e.gridApi.showColumnMenuAfterButtonClick(e.column, o);
        },
        progressSort: function(o) {
          e.sortController.progressSort(e.column, !!o, "uiColumnSorted");
        },
        setSort: function(o, s) {
          e.sortController.setSortForColumn(e.column, o, !!s, "uiColumnSorted");
        },
        api: this.gridApi,
        columnApi: this.columnApi,
        context: this.gridOptionsService.context,
        eGridHeader: this.getGui()
      };
      return i;
    }, t.prototype.setupSelectAll = function() {
      this.selectAllFeature = this.createManagedBean(new yg(this.column)), this.selectAllFeature.setComp(this);
    }, t.prototype.getSelectAllGui = function() {
      return this.selectAllFeature.getCheckboxGui();
    }, t.prototype.handleKeyDown = function(e) {
      n.prototype.handleKeyDown.call(this, e), e.key === _.SPACE && this.selectAllFeature.onSpaceKeyPressed(e), e.key === _.ENTER && this.onEnterKeyPressed(e);
    }, t.prototype.onEnterKeyPressed = function(e) {
      var r = this.comp.getUserCompInstance();
      if (r) {
        if (e.ctrlKey || e.metaKey)
          this.menuEnabled && r.showMenu && (e.preventDefault(), r.showMenu());
        else if (this.sortable) {
          var i = e.shiftKey;
          this.sortController.progressSort(this.column, i, "uiColumnSorted");
        }
      }
    }, t.prototype.isMenuEnabled = function() {
      return this.menuEnabled;
    }, t.prototype.onFocusIn = function(e) {
      if (!this.getGui().contains(e.relatedTarget)) {
        var r = this.getRowIndex();
        this.focusService.setFocusedHeader(r, this.column);
      }
      this.setActiveHeader(!0);
    }, t.prototype.onFocusOut = function(e) {
      this.getGui().contains(e.relatedTarget) || this.setActiveHeader(!1);
    }, t.prototype.setupTooltip = function() {
      var e = this, r = {
        getColumn: function() {
          return e.column;
        },
        getColDef: function() {
          return e.column.getColDef();
        },
        getGui: function() {
          return e.eGui;
        },
        getLocation: function() {
          return "header";
        },
        getTooltipValue: function() {
          var o = e.column.getColDef().headerTooltip;
          return o;
        }
      }, i = this.createManagedBean(new Rs(r, this.beans));
      i.setComp(this.comp), this.refreshFunctions.push(function() {
        return i.refreshToolTip();
      });
    }, t.prototype.setupClassesFromColDef = function() {
      var e = this, r = function() {
        var i = e.column.getColDef(), o = Eu.getHeaderClassesFromColDef(i, e.gridOptionsService, e.column, null), s = e.userHeaderClasses;
        e.userHeaderClasses = new Set(o), o.forEach(function(a) {
          s.has(a) ? s.delete(a) : e.comp.addOrRemoveCssClass(a, !0);
        }), s.forEach(function(a) {
          return e.comp.addOrRemoveCssClass(a, !1);
        });
      };
      this.refreshFunctions.push(r), r();
    }, t.prototype.setDragSource = function(e) {
      var r = this;
      if (this.dragSourceElement = e, this.removeDragSource(), !!e && this.draggable) {
        var i = !this.gridOptionsService.is("suppressDragLeaveHidesColumns");
        this.moveDragSource = {
          type: we.HeaderCell,
          eElement: e,
          defaultIconName: i ? de.ICON_HIDE : de.ICON_NOT_ALLOWED,
          getDragItem: function() {
            return r.createDragItem();
          },
          dragItemName: this.displayName,
          onDragStarted: function() {
            return r.column.setMoving(!0, "uiColumnMoved");
          },
          onDragStopped: function() {
            return r.column.setMoving(!1, "uiColumnMoved");
          },
          onGridEnter: function(o) {
            var s;
            if (i) {
              var a = ((s = o == null ? void 0 : o.columns) === null || s === void 0 ? void 0 : s.filter(function(l) {
                return !l.getColDef().lockVisible;
              })) || [];
              r.columnModel.setColumnsVisible(a, !0, "uiColumnMoved");
            }
          },
          onGridExit: function(o) {
            var s;
            if (i) {
              var a = ((s = o == null ? void 0 : o.columns) === null || s === void 0 ? void 0 : s.filter(function(l) {
                return !l.getColDef().lockVisible;
              })) || [];
              r.columnModel.setColumnsVisible(a, !1, "uiColumnMoved");
            }
          }
        }, this.dragAndDropService.addDragSource(this.moveDragSource, !0);
      }
    }, t.prototype.createDragItem = function() {
      var e = {};
      return e[this.column.getId()] = this.column.isVisible(), {
        columns: [this.column],
        visibleState: e
      };
    }, t.prototype.removeDragSource = function() {
      this.moveDragSource && (this.dragAndDropService.removeDragSource(this.moveDragSource), this.moveDragSource = void 0);
    }, t.prototype.onColDefChanged = function() {
      this.refresh();
    }, t.prototype.updateState = function() {
      var e = this.column.getColDef();
      this.menuEnabled = this.menuFactory.isMenuEnabled(this.column) && !e.suppressMenu, this.sortable = e.sortable, this.displayName = this.calculateDisplayName(), this.draggable = this.workOutDraggable();
    }, t.prototype.addRefreshFunction = function(e) {
      this.refreshFunctions.push(e);
    }, t.prototype.refresh = function() {
      this.updateState(), this.refreshHeaderComp(), this.refreshAria(), this.refreshFunctions.forEach(function(e) {
        return e();
      });
    }, t.prototype.refreshHeaderComp = function() {
      var e = this.lookupUserCompDetails(), r = this.comp.getUserCompInstance(), i = r != null && this.userCompDetails.componentClass == e.componentClass, o = i ? this.attemptHeaderCompRefresh(e.params) : !1;
      o ? this.setDragSource(this.dragSourceElement) : this.setCompDetails(e);
    }, t.prototype.attemptHeaderCompRefresh = function(e) {
      var r = this.comp.getUserCompInstance();
      if (!r || !r.refresh)
        return !1;
      var i = r.refresh(e);
      return i;
    }, t.prototype.calculateDisplayName = function() {
      return this.columnModel.getDisplayNameForColumn(this.column, "header", !0);
    }, t.prototype.checkDisplayName = function() {
      this.displayName !== this.calculateDisplayName() && this.refresh();
    }, t.prototype.workOutDraggable = function() {
      var e = this.column.getColDef(), r = this.gridOptionsService.is("suppressMovableColumns"), i = !r && !e.suppressMovable && !e.lockPosition;
      return !!i || !!e.enableRowGroup || !!e.enablePivot;
    }, t.prototype.onColumnRowGroupChanged = function() {
      this.checkDisplayName();
    }, t.prototype.onColumnPivotChanged = function() {
      this.checkDisplayName();
    }, t.prototype.onColumnValueChanged = function() {
      this.checkDisplayName();
    }, t.prototype.setupWidth = function() {
      var e = this, r = function() {
        var i = e.column.getActualWidth();
        e.comp.setWidth(i + "px");
      };
      this.addManagedListener(this.column, Z.EVENT_WIDTH_CHANGED, r), r();
    }, t.prototype.setupMovingCss = function() {
      var e = this, r = function() {
        e.comp.addOrRemoveCssClass("ag-header-cell-moving", e.column.isMoving());
      };
      this.addManagedListener(this.column, Z.EVENT_MOVING_CHANGED, r), r();
    }, t.prototype.setupMenuClass = function() {
      var e = this, r = function() {
        e.comp.addOrRemoveCssClass("ag-column-menu-visible", e.column.isMenuVisible());
      };
      this.addManagedListener(this.column, Z.EVENT_MENU_VISIBLE_CHANGED, r), r();
    }, t.prototype.setupSortableClass = function() {
      var e = this, r = function() {
        e.comp.addOrRemoveCssClass("ag-header-cell-sortable", !!e.sortable);
      };
      r(), this.addRefreshFunction(r), this.addManagedListener(this.eventService, Z.EVENT_SORT_CHANGED, this.refreshAriaSort.bind(this));
    }, t.prototype.setupWrapTextClass = function() {
      var e = this, r = function() {
        var i = !!e.column.getColDef().wrapHeaderText;
        e.comp.addOrRemoveCssClass("ag-header-cell-wrap-text", i);
      };
      r(), this.addRefreshFunction(r);
    }, t.prototype.onHeaderHeightChanged = function() {
      this.refreshSpanHeaderHeight();
    }, t.prototype.refreshSpanHeaderHeight = function() {
      var e = this, r = e.eGui, i = e.column, o = e.comp, s = e.columnModel, a = e.gridOptionsService;
      if (i.isSpanHeaderHeight()) {
        var l = this.getColumnGroupPaddingInfo(), u = l.numberOfParents, c = l.isSpanningTotal;
        if (o.addOrRemoveCssClass("ag-header-span-height", u > 0), u !== 0) {
          o.addOrRemoveCssClass("ag-header-span-total", c);
          var p = a.is("pivotMode"), d = p ? s.getPivotGroupHeaderHeight() : s.getGroupHeaderHeight(), v = s.getColumnHeaderRowHeight(), f = u * d;
          r.style.setProperty("top", -f + "px"), r.style.setProperty("height", v + f + "px");
        }
      }
    }, t.prototype.getColumnGroupPaddingInfo = function() {
      var e = this.column.getParent();
      if (!e || !e.isPadding())
        return { numberOfParents: 0, isSpanningTotal: !1 };
      for (var r = e.getPaddingLevel() + 1, i = !0; e; ) {
        if (!e.isPadding()) {
          i = !1;
          break;
        }
        e = e.getParent();
      }
      return { numberOfParents: r, isSpanningTotal: i };
    }, t.prototype.setupAutoHeight = function(e) {
      var r = this, i = function(c) {
        if (r.isAlive()) {
          var p = Bt(r.getGui()), d = p.paddingTop, v = p.paddingBottom, f = p.borderBottomWidth, y = p.borderTopWidth, C = d + v + f + y, m = e.offsetHeight, w = m + C;
          if (c < 5) {
            var E = r.beans.gridOptionsService.getDocument(), R = !E || !E.contains(e), D = w == 0;
            if (R || D) {
              r.beans.frameworkOverrides.setTimeout(function() {
                return i(c + 1);
              }, 0);
              return;
            }
          }
          r.columnModel.setColumnHeaderHeight(r.column, w);
        }
      }, o = !1, s, a = function() {
        var c = r.column.isSpanHeaderHeight(), p = r.column.isAutoHeaderHeight();
        if (c) {
          if (u(), p) {
            var d = "AG Grid: The properties `spanHeaderHeight` and `autoHeaderHeight` cannot be used together in the same column.";
            K(function() {
              return console.warn(d);
            }, "HeaderCellCtrl.spanHeaderHeightAndAutoHeaderHeight");
          }
          return;
        }
        p && !o && l(), !p && o && u();
      }, l = function() {
        o = !0, i(0), r.comp.addOrRemoveCssClass("ag-header-cell-auto-height", !0), s = r.resizeObserverService.observeResize(e, function() {
          return i(0);
        });
      }, u = function() {
        o = !1, s && s(), r.comp.addOrRemoveCssClass("ag-header-cell-auto-height", !1), s = void 0;
      };
      a(), this.addDestroyFunc(function() {
        return u();
      }), this.addManagedListener(this.column, Z.EVENT_WIDTH_CHANGED, function() {
        return o && i(0);
      }), this.addManagedListener(this.eventService, Z.EVENT_SORT_CHANGED, function() {
        o && r.beans.frameworkOverrides.setTimeout(function() {
          return i(0);
        });
      }), this.addRefreshFunction(a);
    }, t.prototype.refreshAriaSort = function() {
      if (this.sortable) {
        var e = this.localeService.getLocaleTextFunc(), r = this.sortController.getDisplaySortForColumn(this.column) || null;
        this.comp.setAriaSort(gl(r)), this.setAriaDescriptionProperty("sort", e("ariaSortableColumn", "Press ENTER to sort."));
      } else
        this.comp.setAriaSort(), this.setAriaDescriptionProperty("sort", null);
    }, t.prototype.refreshAriaMenu = function() {
      if (this.menuEnabled) {
        var e = this.localeService.getLocaleTextFunc();
        this.setAriaDescriptionProperty("menu", e("ariaMenuColumn", "Press CTRL ENTER to open column menu."));
      } else
        this.setAriaDescriptionProperty("menu", null);
    }, t.prototype.setAriaDescriptionProperty = function(e, r) {
      r != null ? this.ariaDescriptionProperties.set(e, r) : this.ariaDescriptionProperties.delete(e);
    }, t.prototype.refreshAriaDescription = function() {
      var e = Array.from(this.ariaDescriptionProperties.values());
      this.comp.setAriaDescription(e.length ? e.join(" ") : void 0);
    }, t.prototype.refreshAria = function() {
      this.refreshAriaSort(), this.refreshAriaMenu(), this.refreshAriaDescription();
    }, t.prototype.addColumnHoverListener = function() {
      var e = this, r = function() {
        if (e.gridOptionsService.is("columnHoverHighlight")) {
          var i = e.columnHoverService.isHovered(e.column);
          e.comp.addOrRemoveCssClass("ag-column-hover", i);
        }
      };
      this.addManagedListener(this.eventService, g.EVENT_COLUMN_HOVER_CHANGED, r), r();
    }, t.prototype.setupFilterCss = function() {
      var e = this, r = function() {
        e.comp.addOrRemoveCssClass("ag-header-cell-filtered", e.column.isFilterActive());
      };
      this.addManagedListener(this.column, Z.EVENT_FILTER_ACTIVE_CHANGED, r), r();
    }, t.prototype.setupColId = function() {
      this.comp.setColId(this.column.getColId());
    }, t.prototype.addActiveHeaderMouseListeners = function() {
      var e = this, r = function(i) {
        return e.setActiveHeader(i.type === "mouseenter");
      };
      this.addManagedListener(this.getGui(), "mouseenter", r), this.addManagedListener(this.getGui(), "mouseleave", r);
    }, t.prototype.setActiveHeader = function(e) {
      this.comp.addOrRemoveCssClass("ag-header-active", e);
    }, nt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), nt([
      h("columnHoverService")
    ], t.prototype, "columnHoverService", void 0), nt([
      h("sortController")
    ], t.prototype, "sortController", void 0), nt([
      h("menuFactory")
    ], t.prototype, "menuFactory", void 0), nt([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), nt([
      h("resizeObserverService")
    ], t.prototype, "resizeObserverService", void 0), nt([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), nt([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), nt([
      ve
    ], t.prototype, "removeDragSource", null), t;
  }(vo)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var wg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ci = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Sg = (
  /** @class */
  function(n) {
    wg(t, n);
    function t(e, r, i, o) {
      var s = n.call(this) || this;
      return s.eResize = r, s.comp = e, s.pinned = i, s.columnGroup = o, s;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      if (!this.columnGroup.isResizable()) {
        this.comp.setResizableDisplayed(!1);
        return;
      }
      var r = this.horizontalResizeService.addResizeBar({
        eResizeBar: this.eResize,
        onResizeStart: this.onResizeStart.bind(this),
        onResizing: this.onResizing.bind(this, !1),
        onResizeEnd: this.onResizing.bind(this, !0)
      });
      if (this.addDestroyFunc(r), !this.gridOptionsService.is("suppressAutoSize")) {
        var i = this.gridOptionsService.is("skipHeaderOnAutoSize");
        this.eResize.addEventListener("dblclick", function() {
          var o = [], s = e.columnGroup.getDisplayedLeafColumns();
          s.forEach(function(a) {
            a.getColDef().suppressAutoSize || o.push(a.getColId());
          }), o.length > 0 && e.columnModel.autoSizeColumns({
            columns: o,
            skipHeader: i,
            stopAtGroup: e.columnGroup,
            source: "uiColumnResized"
          }), e.resizeLeafColumnsToFit("uiColumnResized");
        });
      }
    }, t.prototype.onResizeStart = function(e) {
      var r = this;
      this.calculateInitialValues();
      var i = null;
      if (e && (i = this.columnModel.getDisplayedGroupAfter(this.columnGroup)), i) {
        var o = i.getDisplayedLeafColumns();
        this.resizeTakeFromCols = o.filter(function(s) {
          return s.isResizable();
        }), this.resizeTakeFromStartWidth = 0, this.resizeTakeFromCols.forEach(function(s) {
          return r.resizeTakeFromStartWidth += s.getActualWidth();
        }), this.resizeTakeFromRatios = [], this.resizeTakeFromCols.forEach(function(s) {
          return r.resizeTakeFromRatios.push(s.getActualWidth() / r.resizeTakeFromStartWidth);
        });
      } else
        this.resizeTakeFromCols = null, this.resizeTakeFromStartWidth = null, this.resizeTakeFromRatios = null;
      this.comp.addOrRemoveCssClass("ag-column-resizing", !0);
    }, t.prototype.onResizing = function(e, r, i) {
      i === void 0 && (i = "uiColumnResized");
      var o = this.normaliseDragChange(r), s = this.resizeStartWidth + o;
      this.resizeColumns(s, i, e);
    }, t.prototype.resizeLeafColumnsToFit = function(e) {
      var r = this.autoWidthCalculator.getPreferredWidthForColumnGroup(this.columnGroup);
      this.calculateInitialValues(), r > this.resizeStartWidth && this.resizeColumns(r, e, !0);
    }, t.prototype.resizeColumns = function(e, r, i) {
      i === void 0 && (i = !0);
      var o = [];
      if (o.push({
        columns: this.resizeCols,
        ratios: this.resizeRatios,
        width: e
      }), this.resizeTakeFromCols) {
        var s = e - this.resizeStartWidth;
        o.push({
          columns: this.resizeTakeFromCols,
          ratios: this.resizeTakeFromRatios,
          width: this.resizeTakeFromStartWidth - s
        });
      }
      this.columnModel.resizeColumnSets({
        resizeSets: o,
        finished: i,
        source: r
      }), i && this.comp.addOrRemoveCssClass("ag-column-resizing", !1);
    }, t.prototype.calculateInitialValues = function() {
      var e = this, r = this.columnGroup.getDisplayedLeafColumns();
      this.resizeCols = r.filter(function(i) {
        return i.isResizable();
      }), this.resizeStartWidth = 0, this.resizeCols.forEach(function(i) {
        return e.resizeStartWidth += i.getActualWidth();
      }), this.resizeRatios = [], this.resizeCols.forEach(function(i) {
        return e.resizeRatios.push(i.getActualWidth() / e.resizeStartWidth);
      });
    }, t.prototype.normaliseDragChange = function(e) {
      var r = e;
      return this.gridOptionsService.is("enableRtl") ? this.pinned !== "left" && (r *= -1) : this.pinned === "right" && (r *= -1), r;
    }, ci([
      h("horizontalResizeService")
    ], t.prototype, "horizontalResizeService", void 0), ci([
      h("autoWidthCalculator")
    ], t.prototype, "autoWidthCalculator", void 0), ci([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), ci([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Eg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), _g = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Rg = (
  /** @class */
  function(n) {
    Eg(t, n);
    function t(e, r) {
      var i = n.call(this) || this;
      return i.removeChildListenersFuncs = [], i.columnGroup = r, i.comp = e, i;
    }
    return t.prototype.postConstruct = function() {
      this.addListenersToChildrenColumns(), this.addManagedListener(this.columnGroup, Te.EVENT_DISPLAYED_CHILDREN_CHANGED, this.onDisplayedChildrenChanged.bind(this)), this.onWidthChanged(), this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));
    }, t.prototype.addListenersToChildrenColumns = function() {
      var e = this;
      this.removeListenersOnChildrenColumns();
      var r = this.onWidthChanged.bind(this);
      this.columnGroup.getLeafColumns().forEach(function(i) {
        i.addEventListener("widthChanged", r), i.addEventListener("visibleChanged", r), e.removeChildListenersFuncs.push(function() {
          i.removeEventListener("widthChanged", r), i.removeEventListener("visibleChanged", r);
        });
      });
    }, t.prototype.removeListenersOnChildrenColumns = function() {
      this.removeChildListenersFuncs.forEach(function(e) {
        return e();
      }), this.removeChildListenersFuncs = [];
    }, t.prototype.onDisplayedChildrenChanged = function() {
      this.addListenersToChildrenColumns(), this.onWidthChanged();
    }, t.prototype.onWidthChanged = function() {
      var e = this.columnGroup.getActualWidth();
      this.comp.setWidth(e + "px"), this.comp.addOrRemoveCssClass("ag-hidden", e === 0);
    }, _g([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Og = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), pi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Tg = (
  /** @class */
  function(n) {
    Og(t, n);
    function t(e, r) {
      var i = n.call(this, e, r) || this;
      return i.columnGroup = e, i;
    }
    return t.prototype.setComp = function(e, r, i) {
      n.prototype.setGui.call(this, r), this.comp = e, this.displayName = this.columnModel.getDisplayNameForColumnGroup(this.columnGroup, "header"), this.addClasses(), this.addAttributes(), this.setupMovingCss(), this.setupExpandable(), this.setupTooltip(), this.setupUserComp();
      var o = this.getParentRowCtrl().getPinned(), s = this.columnGroup.getProvidedColumnGroup().getLeafColumns();
      this.createManagedBean(new bs(s, r)), this.createManagedBean(new Ts(this.columnGroup, r, this.beans)), this.createManagedBean(new Rg(e, this.columnGroup)), this.groupResizeFeature = this.createManagedBean(new Sg(e, i, o, this.columnGroup)), this.createManagedBean(new Tt(r, {
        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),
        onTabKeyDown: function() {
        },
        handleKeyDown: this.handleKeyDown.bind(this),
        onFocusIn: this.onFocusIn.bind(this)
      }));
    }, t.prototype.resizeLeafColumnsToFit = function(e) {
      var r, i;
      (r = this.groupResizeFeature) === null || r === void 0 || r.onResizeStart(!1), (i = this.groupResizeFeature) === null || i === void 0 || i.resizeLeafColumnsToFit(e);
    }, t.prototype.setupUserComp = function() {
      var e = this, r = this.displayName, i = {
        displayName: this.displayName,
        columnGroup: this.columnGroup,
        setExpanded: function(u) {
          e.columnModel.setColumnGroupOpened(e.columnGroup.getProvidedColumnGroup(), u, "gridInitializing");
        },
        api: this.gridApi,
        columnApi: this.columnApi,
        context: this.gridOptionsService.context
      };
      if (!r) {
        for (var o = this.columnGroup, s = o.getLeafColumns(); o.getParent() && o.getParent().getLeafColumns().length === s.length; )
          o = o.getParent();
        var a = o.getColGroupDef();
        a && (r = a.headerName), r || (r = s ? this.columnModel.getDisplayNameForColumn(s[0], "header", !0) : "");
      }
      var l = this.userComponentFactory.getHeaderGroupCompDetails(i);
      this.comp.setUserCompDetails(l);
    }, t.prototype.setupTooltip = function() {
      var e = this, r = this.columnGroup.getColGroupDef(), i = {
        getColumn: function() {
          return e.columnGroup;
        },
        getGui: function() {
          return e.eGui;
        },
        getLocation: function() {
          return "headerGroup";
        },
        getTooltipValue: function() {
          return r && r.headerTooltip;
        }
      };
      r && (i.getColDef = function() {
        return r;
      });
      var o = this.createManagedBean(new Rs(i, this.beans));
      o.setComp(this.comp);
    }, t.prototype.setupExpandable = function() {
      var e = this.columnGroup.getProvidedColumnGroup();
      this.refreshExpanded(), this.addManagedListener(e, ie.EVENT_EXPANDABLE_CHANGED, this.refreshExpanded.bind(this)), this.addManagedListener(e, ie.EVENT_EXPANDED_CHANGED, this.refreshExpanded.bind(this));
    }, t.prototype.refreshExpanded = function() {
      var e = this.columnGroup;
      this.expandable = e.isExpandable();
      var r = e.isExpanded();
      this.expandable ? this.comp.setAriaExpanded(r ? "true" : "false") : this.comp.setAriaExpanded(void 0);
    }, t.prototype.addAttributes = function() {
      this.comp.setColId(this.columnGroup.getUniqueId());
    }, t.prototype.addClasses = function() {
      var e = this, r = this.columnGroup.getColGroupDef(), i = Eu.getHeaderClassesFromColDef(r, this.gridOptionsService, null, this.columnGroup);
      if (this.columnGroup.isPadding()) {
        i.push("ag-header-group-cell-no-group");
        var o = this.columnGroup.getLeafColumns();
        o.every(function(s) {
          return s.isSpanHeaderHeight();
        }) && i.push("ag-header-span-height");
      } else
        i.push("ag-header-group-cell-with-group");
      i.forEach(function(s) {
        return e.comp.addOrRemoveCssClass(s, !0);
      });
    }, t.prototype.setupMovingCss = function() {
      var e = this, r = this.columnGroup.getProvidedColumnGroup(), i = r.getLeafColumns(), o = function() {
        return e.comp.addOrRemoveCssClass("ag-header-cell-moving", e.columnGroup.isMoving());
      };
      i.forEach(function(s) {
        e.addManagedListener(s, Z.EVENT_MOVING_CHANGED, o);
      }), o();
    }, t.prototype.onFocusIn = function(e) {
      if (!this.eGui.contains(e.relatedTarget)) {
        var r = this.getRowIndex();
        this.beans.focusService.setFocusedHeader(r, this.columnGroup);
      }
    }, t.prototype.handleKeyDown = function(e) {
      n.prototype.handleKeyDown.call(this, e);
      var r = this.getWrapperHasFocus();
      if (!(!this.expandable || !r) && e.key === _.ENTER) {
        var i = this.columnGroup, o = !i.isExpanded();
        this.columnModel.setColumnGroupOpened(i.getProvidedColumnGroup(), o, "uiColumnExpanded");
      }
    }, t.prototype.setDragSource = function(e) {
      var r = this;
      if (!this.isSuppressMoving()) {
        var i = this.columnGroup.getProvidedColumnGroup().getLeafColumns(), o = !this.gridOptionsService.is("suppressDragLeaveHidesColumns"), s = {
          type: we.HeaderCell,
          eElement: e,
          defaultIconName: o ? de.ICON_HIDE : de.ICON_NOT_ALLOWED,
          dragItemName: this.displayName,
          // we add in the original group leaf columns, so we move both visible and non-visible items
          getDragItem: this.getDragItemForGroup.bind(this),
          onDragStarted: function() {
            return i.forEach(function(a) {
              return a.setMoving(!0, "uiColumnDragged");
            });
          },
          onDragStopped: function() {
            return i.forEach(function(a) {
              return a.setMoving(!1, "uiColumnDragged");
            });
          },
          onGridEnter: function(a) {
            var l;
            if (o) {
              var u = ((l = a == null ? void 0 : a.columns) === null || l === void 0 ? void 0 : l.filter(function(c) {
                return !c.getColDef().lockVisible;
              })) || [];
              r.columnModel.setColumnsVisible(u, !0, "uiColumnMoved");
            }
          },
          onGridExit: function(a) {
            var l;
            if (o) {
              var u = ((l = a == null ? void 0 : a.columns) === null || l === void 0 ? void 0 : l.filter(function(c) {
                return !c.getColDef().lockVisible;
              })) || [];
              r.columnModel.setColumnsVisible(u, !1, "uiColumnMoved");
            }
          }
        };
        this.dragAndDropService.addDragSource(s, !0), this.addDestroyFunc(function() {
          return r.dragAndDropService.removeDragSource(s);
        });
      }
    }, t.prototype.getDragItemForGroup = function() {
      var e = this.columnGroup.getProvidedColumnGroup().getLeafColumns(), r = {};
      e.forEach(function(o) {
        return r[o.getId()] = o.isVisible();
      });
      var i = [];
      return this.columnModel.getAllDisplayedColumns().forEach(function(o) {
        e.indexOf(o) >= 0 && (i.push(o), ye(e, o));
      }), e.forEach(function(o) {
        return i.push(o);
      }), {
        columns: i,
        visibleState: r
      };
    }, t.prototype.isSuppressMoving = function() {
      var e = !1;
      this.columnGroup.getLeafColumns().forEach(function(i) {
        (i.getColDef().suppressMovable || i.getColDef().lockPosition) && (e = !0);
      });
      var r = e || this.gridOptionsService.is("suppressMovableColumns");
      return r;
    }, pi([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), pi([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), pi([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), pi([
      h("columnApi")
    ], t.prototype, "columnApi", void 0), t;
  }(vo)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var bg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), sa = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Pg = 0, qo = (
  /** @class */
  function(n) {
    bg(t, n);
    function t(e, r, i) {
      var o = n.call(this) || this;
      return o.instanceId = Pg++, o.headerCellCtrls = {}, o.rowIndex = e, o.pinned = r, o.type = i, o;
    }
    return t.prototype.getInstanceId = function() {
      return this.instanceId;
    }, t.prototype.setComp = function(e) {
      this.comp = e, this.onRowHeightChanged(), this.onVirtualColumnsChanged(), this.setWidth(), this.addEventListeners(), ot() && this.comp.setTransform("translateZ(0)"), e.setAriaRowIndex(this.rowIndex + 1);
    }, t.prototype.addEventListeners = function() {
      this.addManagedListener(this.eventService, g.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this)), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_HEADER_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_GRID_STYLES_CHANGED, this.onRowHeightChanged.bind(this)), this.addManagedPropertyListener("domLayout", this.onDisplayedColumnsChanged.bind(this)), this.addManagedPropertyListener("headerHeight", this.onRowHeightChanged.bind(this)), this.addManagedPropertyListener("pivotHeaderHeight", this.onRowHeightChanged.bind(this)), this.addManagedPropertyListener("groupHeaderHeight", this.onRowHeightChanged.bind(this)), this.addManagedPropertyListener("pivotGroupHeaderHeight", this.onRowHeightChanged.bind(this)), this.addManagedPropertyListener("floatingFiltersHeight", this.onRowHeightChanged.bind(this));
    }, t.prototype.getHeaderCellCtrl = function(e) {
      return zr(this.headerCellCtrls).find(function(r) {
        return r.getColumnGroupChild() === e;
      });
    }, t.prototype.onDisplayedColumnsChanged = function() {
      this.onVirtualColumnsChanged(), this.setWidth(), this.onRowHeightChanged();
    }, t.prototype.getType = function() {
      return this.type;
    }, t.prototype.onColumnResized = function() {
      this.setWidth();
    }, t.prototype.setWidth = function() {
      var e = this.getWidthForRow();
      this.comp.setWidth(e + "px");
    }, t.prototype.getWidthForRow = function() {
      var e = this.gridOptionsService.isDomLayout("print");
      if (e) {
        var r = this.pinned != null;
        return r ? 0 : this.columnModel.getContainerWidth("right") + this.columnModel.getContainerWidth("left") + this.columnModel.getContainerWidth(null);
      }
      return this.columnModel.getContainerWidth(this.pinned);
    }, t.prototype.onRowHeightChanged = function() {
      var e = this.columnModel.getHeaderRowCount(), r = [], i = 0;
      this.columnModel.hasFloatingFilters() && (e++, i = 1);
      for (var o = this.columnModel.getColumnGroupHeaderRowHeight(), s = this.columnModel.getColumnHeaderRowHeight(), a = 1 + i, l = e - a, u = 0; u < l; u++)
        r.push(o);
      r.push(s);
      for (var u = 0; u < i; u++)
        r.push(this.columnModel.getFloatingFiltersHeight());
      for (var c = 0, u = 0; u < this.rowIndex; u++)
        c += r[u];
      var p = r[this.rowIndex] + "px";
      this.comp.setTop(c + "px"), this.comp.setHeight(p);
    }, t.prototype.getPinned = function() {
      return this.pinned;
    }, t.prototype.getRowIndex = function() {
      return this.rowIndex;
    }, t.prototype.onVirtualColumnsChanged = function() {
      var e = this, r = this.headerCellCtrls;
      this.headerCellCtrls = {};
      var i = this.getColumnsInViewport();
      i.forEach(function(a) {
        if (!a.isEmptyGroup()) {
          var l = a.getUniqueId(), u = r[l];
          delete r[l];
          var c = u && u.getColumnGroupChild() != a;
          if (c && (e.destroyBean(u), u = void 0), u == null)
            switch (e.type) {
              case fe.FLOATING_FILTER:
                u = e.createBean(new hg(a, e));
                break;
              case fe.COLUMN_GROUP:
                u = e.createBean(new Tg(a, e));
                break;
              default:
                u = e.createBean(new mg(a, e));
                break;
            }
          e.headerCellCtrls[l] = u;
        }
      });
      var o = function(a) {
        var l = e.focusService.isHeaderWrapperFocused(a);
        if (!l)
          return !1;
        var u = e.columnModel.isDisplayed(a.getColumnGroupChild());
        return u;
      };
      J(r, function(a, l) {
        var u = o(l);
        u ? e.headerCellCtrls[a] = l : e.destroyBean(l);
      });
      var s = rt(this.headerCellCtrls);
      this.comp.setHeaderCtrls(s);
    }, t.prototype.getColumnsInViewport = function() {
      var e = this.gridOptionsService.isDomLayout("print");
      return e ? this.getColumnsInViewportPrintLayout() : this.getColumnsInViewportNormalLayout();
    }, t.prototype.getColumnsInViewportPrintLayout = function() {
      var e = this;
      if (this.pinned != null)
        return [];
      var r = [], i = this.getActualDepth();
      return ["left", null, "right"].forEach(function(o) {
        var s = e.columnModel.getVirtualHeaderGroupRow(o, i);
        r = r.concat(s);
      }), r;
    }, t.prototype.getActualDepth = function() {
      return this.type == fe.FLOATING_FILTER ? this.rowIndex - 1 : this.rowIndex;
    }, t.prototype.getColumnsInViewportNormalLayout = function() {
      return this.columnModel.getVirtualHeaderGroupRow(this.pinned, this.getActualDepth());
    }, t.prototype.focusHeader = function(e, r) {
      var i = rt(this.headerCellCtrls), o = i.find(function(s) {
        return s.getColumnGroupChild() == e;
      });
      return o ? (o.focus(r), !0) : !1;
    }, t.prototype.destroy = function() {
      var e = this;
      J(this.headerCellCtrls, function(r, i) {
        e.destroyBean(i);
      }), this.headerCellCtrls = {}, n.prototype.destroy.call(this);
    }, sa([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), sa([
      h("focusService")
    ], t.prototype, "focusService", void 0), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Dg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), wr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ag = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Fg = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Ag(arguments[t]));
  return n;
}, Lg = (
  /** @class */
  function(n) {
    Dg(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.hidden = !1, r.groupsRowCtrls = [], r.pinned = e, r;
    }
    return t.prototype.setComp = function(e, r) {
      this.comp = e, this.eViewport = r, this.setupCenterWidth(), this.setupPinnedWidth(), this.setupDragAndDrop(this.eViewport), this.addManagedListener(this.eventService, g.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this)), this.ctrlsService.registerHeaderContainer(this, this.pinned), this.columnModel.isReady() && this.refresh();
    }, t.prototype.setupDragAndDrop = function(e) {
      var r = new Jv(this.pinned, e);
      this.createManagedBean(r);
    }, t.prototype.refresh = function(e) {
      var r = this;
      e === void 0 && (e = !1);
      var i = new sr(), o = this.focusService.getFocusHeaderToUseAfterRefresh(), s = function() {
        var c = r.columnModel.getHeaderRowCount() - 1;
        r.groupsRowCtrls = r.destroyBeans(r.groupsRowCtrls);
        for (var p = 0; p < c; p++) {
          var d = r.createBean(new qo(i.next(), r.pinned, fe.COLUMN_GROUP));
          r.groupsRowCtrls.push(d);
        }
      }, a = function() {
        var c = i.next(), p = !r.hidden && (r.columnsRowCtrl == null || !e || r.columnsRowCtrl.getRowIndex() !== c), d = p || r.hidden;
        d && (r.columnsRowCtrl = r.destroyBean(r.columnsRowCtrl)), p && (r.columnsRowCtrl = r.createBean(new qo(c, r.pinned, fe.COLUMN)));
      }, l = function() {
        var c = r.columnModel.hasFloatingFilters() && !r.hidden, p = function() {
          r.filtersRowCtrl = r.destroyBean(r.filtersRowCtrl);
        };
        if (!c) {
          p();
          return;
        }
        var d = i.next();
        if (r.filtersRowCtrl) {
          var v = r.filtersRowCtrl.getRowIndex() !== d;
          (!e || v) && p();
        }
        r.filtersRowCtrl || (r.filtersRowCtrl = r.createBean(new qo(d, r.pinned, fe.FLOATING_FILTER)));
      };
      s(), a(), l();
      var u = this.getAllCtrls();
      this.comp.setCtrls(u), this.restoreFocusOnHeader(o);
    }, t.prototype.restoreFocusOnHeader = function(e) {
      e == null || e.column.getPinned() != this.pinned || this.focusService.focusHeaderPosition({ headerPosition: e });
    }, t.prototype.getAllCtrls = function() {
      var e = Fg(this.groupsRowCtrls);
      return this.columnsRowCtrl && e.push(this.columnsRowCtrl), this.filtersRowCtrl && e.push(this.filtersRowCtrl), e;
    }, t.prototype.onGridColumnsChanged = function() {
      this.refresh(!0);
    }, t.prototype.setupCenterWidth = function() {
      var e = this;
      this.pinned == null && this.createManagedBean(new Os(function(r) {
        return e.comp.setCenterWidth(r + "px");
      }, !0));
    }, t.prototype.setHorizontalScroll = function(e) {
      this.comp.setViewportScrollLeft(e);
    }, t.prototype.setupPinnedWidth = function() {
      var e = this;
      if (this.pinned != null) {
        var r = this.pinned === "left", i = this.pinned === "right";
        this.hidden = !0;
        var o = function() {
          var s = r ? e.pinnedWidthService.getPinnedLeftWidth() : e.pinnedWidthService.getPinnedRightWidth();
          if (s != null) {
            var a = s == 0, l = e.hidden !== a, u = e.gridOptionsService.is("enableRtl"), c = e.gridOptionsService.getScrollbarWidth(), p = e.scrollVisibleService.isVerticalScrollShowing() && (u && r || !u && i), d = p ? s + c : s;
            e.comp.setPinnedContainerWidth(d + "px"), e.comp.setDisplayed(!a), l && (e.hidden = a, e.refresh());
          }
        };
        this.addManagedListener(this.eventService, g.EVENT_LEFT_PINNED_WIDTH_CHANGED, o), this.addManagedListener(this.eventService, g.EVENT_RIGHT_PINNED_WIDTH_CHANGED, o), this.addManagedListener(this.eventService, g.EVENT_SCROLL_VISIBILITY_CHANGED, o), this.addManagedListener(this.eventService, g.EVENT_SCROLLBAR_WIDTH_CHANGED, o);
      }
    }, t.prototype.getHeaderCtrlForColumn = function(e) {
      if (e instanceof Z)
        return this.columnsRowCtrl ? this.columnsRowCtrl.getHeaderCellCtrl(e) : void 0;
      if (this.groupsRowCtrls.length !== 0)
        for (var r = 0; r < this.groupsRowCtrls.length; r++) {
          var i = this.groupsRowCtrls[r].getHeaderCellCtrl(e);
          if (i)
            return i;
        }
    }, t.prototype.getHtmlElementForColumnHeader = function(e) {
      var r = this.getHeaderCtrlForColumn(e);
      return r ? r.getGui() : null;
    }, t.prototype.getRowType = function(e) {
      var r = this.getAllCtrls(), i = r[e];
      return i ? i.getType() : void 0;
    }, t.prototype.focusHeader = function(e, r, i) {
      var o = this.getAllCtrls(), s = o[e];
      return s ? s.focusHeader(r, i) : !1;
    }, t.prototype.getRowCount = function() {
      return this.groupsRowCtrls.length + (this.columnsRowCtrl ? 1 : 0) + (this.filtersRowCtrl ? 1 : 0);
    }, t.prototype.destroy = function() {
      this.filtersRowCtrl && (this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl)), this.columnsRowCtrl && (this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl)), this.groupsRowCtrls && this.groupsRowCtrls.length && (this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls)), n.prototype.destroy.call(this);
    }, wr([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), wr([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), wr([
      h("pinnedWidthService")
    ], t.prototype, "pinnedWidthService", void 0), wr([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), wr([
      h("focusService")
    ], t.prototype, "focusService", void 0), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Mg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Qo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Xo = (
  /** @class */
  function(n) {
    Mg(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.headerRowComps = {}, r.rowCompsList = [], r.pinned = e, r;
    }
    return t.prototype.init = function() {
      var e = this;
      this.selectAndSetTemplate();
      var r = {
        setDisplayed: function(o) {
          return e.setDisplayed(o);
        },
        setCtrls: function(o) {
          return e.setCtrls(o);
        },
        // only gets called for center section
        setCenterWidth: function(o) {
          return e.eCenterContainer.style.width = o;
        },
        setViewportScrollLeft: function(o) {
          return e.getGui().scrollLeft = o;
        },
        // only gets called for pinned sections
        setPinnedContainerWidth: function(o) {
          var s = e.getGui();
          s.style.width = o, s.style.maxWidth = o, s.style.minWidth = o;
        }
      }, i = this.createManagedBean(new Lg(this.pinned));
      i.setComp(r, this.getGui());
    }, t.prototype.selectAndSetTemplate = function() {
      var e = this.pinned == "left", r = this.pinned == "right", i = e ? t.PINNED_LEFT_TEMPLATE : r ? t.PINNED_RIGHT_TEMPLATE : t.CENTER_TEMPLATE;
      this.setTemplate(i), this.eRowContainer = this.eCenterContainer ? this.eCenterContainer : this.getGui();
    }, t.prototype.destroyRowComps = function() {
      this.setCtrls([]);
    }, t.prototype.destroyRowComp = function(e) {
      this.destroyBean(e), this.eRowContainer.removeChild(e.getGui());
    }, t.prototype.setCtrls = function(e) {
      var r = this, i = this.headerRowComps;
      this.headerRowComps = {}, this.rowCompsList = [];
      var o, s = function(a) {
        var l = a.getGui(), u = l.parentElement != r.eRowContainer;
        u && r.eRowContainer.appendChild(l), o && cs(r.eRowContainer, l, o), o = l;
      };
      e.forEach(function(a) {
        var l = a.getInstanceId(), u = i[l];
        delete i[l];
        var c = u || r.createBean(new sg(a));
        r.headerRowComps[l] = c, r.rowCompsList.push(c), s(c);
      }), rt(i).forEach(function(a) {
        return r.destroyRowComp(a);
      });
    }, t.PINNED_LEFT_TEMPLATE = '<div class="ag-pinned-left-header" role="presentation"></div>', t.PINNED_RIGHT_TEMPLATE = '<div class="ag-pinned-right-header" role="presentation"></div>', t.CENTER_TEMPLATE = `<div class="ag-header-viewport" role="presentation">
            <div class="ag-header-container" ref="eCenterContainer" role="rowgroup"></div>
        </div>`, Qo([
      P("eCenterContainer")
    ], t.prototype, "eCenterContainer", void 0), Qo([
      b
    ], t.prototype, "init", null), Qo([
      ve
    ], t.prototype, "destroyRowComps", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ig = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Sr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Je;
(function(n) {
  n[n.UP = 0] = "UP", n[n.DOWN = 1] = "DOWN", n[n.LEFT = 2] = "LEFT", n[n.RIGHT = 3] = "RIGHT";
})(Je || (Je = {}));
var xg = (
  /** @class */
  function(n) {
    Ig(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        e.gridBodyCon = r.gridBodyCtrl;
      });
    }, t.prototype.getHeaderRowCount = function() {
      var e = this.ctrlsService.getHeaderRowContainerCtrl();
      return e ? e.getRowCount() : 0;
    }, t.prototype.navigateVertically = function(e, r, i) {
      if (r || (r = this.focusService.getFocusedHeader()), !r)
        return !1;
      var o = r.headerRowIndex, s = r.column, a = this.getHeaderRowCount(), l = e === Je.UP, u = l ? this.headerPositionUtils.getColumnVisibleParent(s, o) : this.headerPositionUtils.getColumnVisibleChild(s, o), c = u.nextRow, p = u.nextFocusColumn, d = !1;
      return c < 0 && (c = 0, p = s, d = !0), c >= a && (c = -1), !d && !p ? !1 : this.focusService.focusHeaderPosition({
        headerPosition: { headerRowIndex: c, column: p },
        allowUserOverride: !0,
        event: i
      });
    }, t.prototype.navigateHorizontally = function(e, r, i) {
      r === void 0 && (r = !1);
      var o = this.focusService.getFocusedHeader(), s = e === Je.LEFT, a = this.gridOptionsService.is("enableRtl"), l, u;
      return s !== a ? (u = "Before", l = this.headerPositionUtils.findHeader(o, u)) : (u = "After", l = this.headerPositionUtils.findHeader(o, u)), l || !r ? this.focusService.focusHeaderPosition({
        headerPosition: l,
        direction: u,
        fromTab: r,
        allowUserOverride: !0,
        event: i
      }) : this.focusNextHeaderRow(o, u, i);
    }, t.prototype.focusNextHeaderRow = function(e, r, i) {
      var o = e.headerRowIndex, s = null, a;
      return r === "Before" ? o > 0 && (a = o - 1, s = this.headerPositionUtils.findColAtEdgeForHeaderRow(a, "end")) : (a = o + 1, s = this.headerPositionUtils.findColAtEdgeForHeaderRow(a, "start")), this.focusService.focusHeaderPosition({
        headerPosition: s,
        direction: r,
        fromTab: !0,
        allowUserOverride: !0,
        event: i
      });
    }, t.prototype.scrollToColumn = function(e, r) {
      if (r === void 0 && (r = "After"), !e.getPinned()) {
        var i;
        if (e instanceof Te) {
          var o = e.getDisplayedLeafColumns();
          i = r === "Before" ? q(o) : o[0];
        } else
          i = e;
        this.gridBodyCon.getScrollFeature().ensureColumnVisible(i);
      }
    }, Sr([
      h("focusService")
    ], t.prototype, "focusService", void 0), Sr([
      h("headerPositionUtils")
    ], t.prototype, "headerPositionUtils", void 0), Sr([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Sr([
      b
    ], t.prototype, "postConstruct", null), t = Sr([
      A("headerNavigationService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ng = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), di = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Gg = (
  /** @class */
  function(n) {
    Ng(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setComp = function(e, r, i) {
      this.comp = e, this.eGui = r, this.createManagedBean(new Tt(i, {
        onTabKeyDown: this.onTabKeyDown.bind(this),
        handleKeyDown: this.handleKeyDown.bind(this),
        onFocusOut: this.onFocusOut.bind(this)
      })), this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onPivotModeChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.onPivotModeChanged(), this.setupHeaderHeight(), this.ctrlsService.registerGridHeaderCtrl(this);
    }, t.prototype.setupHeaderHeight = function() {
      var e = this.setHeaderHeight.bind(this);
      e(), this.addManagedPropertyListener("headerHeight", e), this.addManagedPropertyListener("pivotHeaderHeight", e), this.addManagedPropertyListener("groupHeaderHeight", e), this.addManagedPropertyListener("pivotGroupHeaderHeight", e), this.addManagedPropertyListener("floatingFiltersHeight", e), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, e), this.addManagedListener(this.eventService, g.EVENT_COLUMN_HEADER_HEIGHT_CHANGED, e), this.addManagedListener(this.eventService, g.EVENT_GRID_STYLES_CHANGED, e);
    }, t.prototype.getHeaderHeight = function() {
      return this.headerHeight;
    }, t.prototype.setHeaderHeight = function() {
      var e = this.columnModel, r = 0, i = e.getHeaderRowCount(), o, s = e.hasFloatingFilters();
      s && (i++, r = 1);
      var a = this.columnModel.getColumnGroupHeaderRowHeight(), l = this.columnModel.getColumnHeaderRowHeight(), u = 1 + r, c = i - u;
      if (o = r * e.getFloatingFiltersHeight(), o += c * a, o += l, this.headerHeight !== o) {
        this.headerHeight = o;
        var p = o + 1 + "px";
        this.comp.setHeightAndMinHeight(p), this.eventService.dispatchEvent({
          type: g.EVENT_HEADER_HEIGHT_CHANGED
        });
      }
    }, t.prototype.onPivotModeChanged = function() {
      var e = this.columnModel.isPivotMode();
      this.comp.addOrRemoveCssClass("ag-pivot-on", e), this.comp.addOrRemoveCssClass("ag-pivot-off", !e);
    }, t.prototype.onDisplayedColumnsChanged = function() {
      var e = this.columnModel.getAllDisplayedColumns(), r = e.some(function(i) {
        return i.isSpanHeaderHeight();
      });
      this.comp.addOrRemoveCssClass("ag-header-allow-overflow", r);
    }, t.prototype.onTabKeyDown = function(e) {
      var r = this.gridOptionsService.is("enableRtl"), i = e.shiftKey !== r ? Je.LEFT : Je.RIGHT;
      (this.headerNavigationService.navigateHorizontally(i, !0, e) || this.focusService.focusNextGridCoreContainer(e.shiftKey)) && e.preventDefault();
    }, t.prototype.handleKeyDown = function(e) {
      var r = null;
      switch (e.key) {
        case _.LEFT:
          r = Je.LEFT;
        case _.RIGHT:
          O(r) || (r = Je.RIGHT), this.headerNavigationService.navigateHorizontally(r, !1, e);
          break;
        case _.UP:
          r = Je.UP;
        case _.DOWN:
          O(r) || (r = Je.DOWN), this.headerNavigationService.navigateVertically(r, null, e) && e.preventDefault();
          break;
        default:
          return;
      }
    }, t.prototype.onFocusOut = function(e) {
      var r = this.gridOptionsService.getDocument(), i = e.relatedTarget;
      !i && this.eGui.contains(r.activeElement) || this.eGui.contains(i) || this.focusService.clearFocusedHeader();
    }, di([
      h("headerNavigationService")
    ], t.prototype, "headerNavigationService", void 0), di([
      h("focusService")
    ], t.prototype, "focusService", void 0), di([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), di([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Hg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Vg = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Bg = (
  /** @class */
  function(n) {
    Hg(t, n);
    function t() {
      return n.call(this, t.TEMPLATE) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = {
        addOrRemoveCssClass: function(s, a) {
          return e.addOrRemoveCssClass(s, a);
        },
        setHeightAndMinHeight: function(s) {
          e.getGui().style.height = s, e.getGui().style.minHeight = s;
        }
      }, i = this.createManagedBean(new Gg());
      i.setComp(r, this.getGui(), this.getFocusableElement());
      var o = function(s) {
        e.createManagedBean(s), e.appendChild(s);
      };
      o(new Xo("left")), o(new Xo(null)), o(new Xo("right"));
    }, t.TEMPLATE = '<div class="ag-header" role="presentation"/>', Vg([
      b
    ], t.prototype, "postConstruct", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Wg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Jo = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, jg = (
  /** @class */
  function(n) {
    Wg(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.addResizeBar = function(e) {
      var r = this, i = {
        dragStartPixels: e.dragStartPixels || 0,
        eElement: e.eResizeBar,
        onDragStart: this.onDragStart.bind(this, e),
        onDragStop: this.onDragStop.bind(this, e),
        onDragging: this.onDragging.bind(this, e)
      };
      this.dragService.addDragSource(i, !0);
      var o = function() {
        return r.dragService.removeDragSource(i);
      };
      return o;
    }, t.prototype.onDragStart = function(e, r) {
      this.dragStartX = r.clientX, this.setResizeIcons();
      var i = r instanceof MouseEvent && r.shiftKey === !0;
      e.onResizeStart(i);
    }, t.prototype.setResizeIcons = function() {
      var e = this.ctrlsService.getGridCtrl();
      e.setResizeCursor(!0), e.disableUserSelect(!0);
    }, t.prototype.onDragStop = function(e, r) {
      e.onResizeEnd(this.resizeAmount), this.resetIcons();
    }, t.prototype.resetIcons = function() {
      var e = this.ctrlsService.getGridCtrl();
      e.setResizeCursor(!1), e.disableUserSelect(!1);
    }, t.prototype.onDragging = function(e, r) {
      this.resizeAmount = r.clientX - this.dragStartX, e.onResizing(this.resizeAmount);
    }, Jo([
      h("dragService")
    ], t.prototype, "dragService", void 0), Jo([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t = Jo([
      A("horizontalResizeService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var kg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Er = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ug = (
  /** @class */
  function(n) {
    kg(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.hideActiveMenu = function() {
      this.hidePopup && this.hidePopup();
    }, t.prototype.showMenuAfterMouseEvent = function(e, r) {
      var i = this;
      this.showPopup(e, function(o) {
        i.popupService.positionPopupUnderMouseEvent({
          column: e,
          type: "columnMenu",
          mouseEvent: r,
          ePopup: o
        });
      }, "columnMenu", r.target);
    }, t.prototype.showMenuAfterButtonClick = function(e, r, i) {
      var o = this;
      this.showPopup(e, function(s) {
        o.popupService.positionPopupByComponent({
          type: i,
          eventSource: r,
          ePopup: s,
          keepWithinBounds: !0,
          position: "under",
          column: e
        });
      }, i, r);
    }, t.prototype.showPopup = function(e, r, i, o) {
      var s = this, a = this.filterManager.getOrCreateFilterWrapper(e, "COLUMN_MENU");
      if (!a)
        throw new Error("AG Grid - unable to show popup filter, filter instantiation failed");
      var l = document.createElement("div");
      ue(l, "presentation"), l.classList.add("ag-menu"), this.tabListener = this.addManagedListener(l, "keydown", function(y) {
        return s.trapFocusWithin(y, l);
      }), a.guiPromise.then(function(y) {
        return l.appendChild(y);
      });
      var u, c = function() {
        var y;
        return (y = a.filterPromise) === null || y === void 0 ? void 0 : y.then(function(C) {
          var m;
          return (m = C == null ? void 0 : C.afterGuiDetached) === null || m === void 0 ? void 0 : m.call(C);
        });
      }, p = o || this.ctrlsService.getGridBodyCtrl().getGui(), d = function(y) {
        e.setMenuVisible(!1, "contextMenu");
        var C = y instanceof KeyboardEvent;
        if (s.tabListener && (s.tabListener = s.tabListener()), C && o && pr(o)) {
          var m = s.focusService.findTabbableParent(o);
          m && m.focus();
        }
        c();
      }, v = this.localeService.getLocaleTextFunc(), f = this.popupService.addPopup({
        modal: !0,
        eChild: l,
        closeOnEsc: !0,
        closedCallback: d,
        positionCallback: function() {
          return r(l);
        },
        anchorToElement: p,
        ariaLabel: v("ariaLabelColumnMenu", "Column Menu")
      });
      f && (this.hidePopup = u = f.hideFunc), a.filterPromise.then(function(y) {
        r(l), y.afterGuiAttached && y.afterGuiAttached({ container: i, hidePopup: u });
      }), e.setMenuVisible(!0, "contextMenu");
    }, t.prototype.trapFocusWithin = function(e, r) {
      e.key !== _.TAB || e.defaultPrevented || this.focusService.findNextFocusableElement(r, !1, e.shiftKey) || (e.preventDefault(), this.focusService.focusInto(r, e.shiftKey));
    }, t.prototype.isMenuEnabled = function(e) {
      return e.isFilterAllowed() && e.getMenuTabs(["filterMenuTab"]).includes("filterMenuTab");
    }, Er([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), Er([
      h("popupService")
    ], t.prototype, "popupService", void 0), Er([
      h("focusService")
    ], t.prototype, "focusService", void 0), Er([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t = Er([
      A("menuFactory")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var zg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), hi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
};
(function(n) {
  zg(t, n);
  function t(e) {
    var r = n.call(this, t.getTemplate(e.cssClass)) || this;
    return r.items = [], r.tabbedItemScrollMap = /* @__PURE__ */ new Map(), r.params = e, e.items && e.items.forEach(function(i) {
      return r.addItem(i);
    }), r;
  }
  return t.prototype.postConstruct = function() {
    var e = this;
    this.createManagedBean(new Tt(this.getFocusableElement(), {
      onTabKeyDown: this.onTabKeyDown.bind(this),
      handleKeyDown: this.handleKeyDown.bind(this)
    })), this.addDestroyFunc(function() {
      var r, i, o;
      return (o = (i = (r = e.activeItem) === null || r === void 0 ? void 0 : r.tabbedItem) === null || i === void 0 ? void 0 : i.afterDetachedCallback) === null || o === void 0 ? void 0 : o.call(i);
    });
  }, t.getTemplate = function(e) {
    return (
      /* html */
      '<div class="ag-tabs ' + e + `">
            <div ref="eHeader" role="tablist" class="ag-tabs-header ` + (e ? e + "-header" : "") + `"></div>
            <div ref="eBody" role="presentation" class="ag-tabs-body ` + (e ? e + "-body" : "") + `"></div>
        </div>`
    );
  }, t.prototype.handleKeyDown = function(e) {
    var r = this.gridOptionsService.getDocument();
    switch (e.key) {
      case _.RIGHT:
      case _.LEFT:
        if (!this.eHeader.contains(r.activeElement))
          return;
        var i = e.key === _.RIGHT, o = this.gridOptionsService.is("enableRtl"), s = this.items.indexOf(this.activeItem), a = i !== o ? Math.min(s + 1, this.items.length - 1) : Math.max(s - 1, 0);
        if (s === a)
          return;
        e.preventDefault();
        var l = this.items[a];
        this.showItemWrapper(l), l.eHeaderButton.focus();
        break;
      case _.UP:
      case _.DOWN:
        e.stopPropagation();
        break;
    }
  }, t.prototype.onTabKeyDown = function(e) {
    if (!e.defaultPrevented) {
      var r = this, i = r.focusService, o = r.eHeader, s = r.eBody, a = r.activeItem, l = this.gridOptionsService.getDocument(), u = l.activeElement, c = e.target;
      if (e.preventDefault(), o.contains(u)) {
        i.focusInto(s, e.shiftKey);
        return;
      }
      var p = null;
      i.isTargetUnderManagedComponent(s, c) && (e.shiftKey && (p = this.focusService.findFocusableElementBeforeTabGuard(s, c)), p || (p = a.eHeaderButton)), !p && s.contains(u) && (p = i.findNextFocusableElement(s, !1, e.shiftKey), p || (p = a.eHeaderButton)), p && p.focus();
    }
  }, t.prototype.setAfterAttachedParams = function(e) {
    this.afterAttachedParams = e;
  }, t.prototype.showFirstItem = function() {
    this.items.length > 0 && this.showItemWrapper(this.items[0]);
  }, t.prototype.addItem = function(e) {
    var r = document.createElement("span");
    ue(r, "tab"), r.setAttribute("tabIndex", "-1"), r.appendChild(e.title), r.classList.add("ag-tab"), this.eHeader.appendChild(r), Vt(r, e.titleLabel);
    var i = {
      tabbedItem: e,
      eHeaderButton: r
    };
    this.items.push(i), r.addEventListener("click", this.showItemWrapper.bind(this, i));
  }, t.prototype.showItem = function(e) {
    var r = this.items.find(function(i) {
      return i.tabbedItem === e;
    });
    r && this.showItemWrapper(r);
  }, t.prototype.showItemWrapper = function(e) {
    var r = this, i, o, s = e.tabbedItem, a = e.eHeaderButton;
    if (this.params.onItemClicked && this.params.onItemClicked({ item: s }), this.activeItem === e) {
      el(this.params.onActiveItemClicked);
      return;
    }
    this.lastScrollListener && (this.lastScrollListener = this.lastScrollListener()), Fe(this.eBody), s.bodyPromise.then(function(l) {
      r.eBody.appendChild(l);
      var u = !r.focusService.isKeyboardMode();
      if (r.focusService.focusInto(r.eBody, !1, u), s.afterAttachedCallback && s.afterAttachedCallback(r.afterAttachedParams), r.params.keepScrollPosition) {
        var c = s.getScrollableContainer && s.getScrollableContainer() || l;
        r.lastScrollListener = r.addManagedListener(c, "scroll", function() {
          r.tabbedItemScrollMap.set(s.name, c.scrollTop);
        });
        var p = r.tabbedItemScrollMap.get(s.name);
        p !== void 0 && setTimeout(function() {
          c.scrollTop = p;
        }, 0);
      }
    }), this.activeItem && (this.activeItem.eHeaderButton.classList.remove("ag-tab-selected"), (o = (i = this.activeItem.tabbedItem).afterDetachedCallback) === null || o === void 0 || o.call(i)), a.classList.add("ag-tab-selected"), this.activeItem = e;
  }, hi([
    h("focusService")
  ], t.prototype, "focusService", void 0), hi([
    P("eHeader")
  ], t.prototype, "eHeader", void 0), hi([
    P("eBody")
  ], t.prototype, "eBody", void 0), hi([
    b
  ], t.prototype, "postConstruct", null), t;
})(W);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Kg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), $g = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Yg = 50, qg = (
  /** @class */
  function(n) {
    Kg(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.polyfillFunctions = [], e;
    }
    return t.prototype.observeResize = function(e, r) {
      var i = this, o = this.gridOptionsService.getDocument(), s = o.defaultView || window, a = function() {
        var p = new s.ResizeObserver(r);
        return p.observe(e), function() {
          return p.disconnect();
        };
      }, l = function() {
        var p = Ln(e), d = Fn(e), v = !0, f = function() {
          if (v) {
            var y = Ln(e), C = Fn(e), m = y !== p || C !== d;
            m && (p = y, d = C, r()), i.doNextPolyfillTurn(f);
          }
        };
        return f(), function() {
          return v = !1;
        };
      }, u = this.gridOptionsService.is("suppressBrowserResizeObserver"), c = !!s.ResizeObserver;
      return c && !u ? a() : l();
    }, t.prototype.doNextPolyfillTurn = function(e) {
      this.polyfillFunctions.push(e), this.schedulePolyfill();
    }, t.prototype.schedulePolyfill = function() {
      var e = this;
      if (!this.polyfillScheduled) {
        var r = function() {
          var i = e.polyfillFunctions;
          e.polyfillScheduled = !1, e.polyfillFunctions = [], i.forEach(function(o) {
            return o();
          });
        };
        this.polyfillScheduled = !0, this.getFrameworkOverrides().setTimeout(r, Yg);
      }
    }, t = $g([
      A("resizeObserverService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Qg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), fi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Xg = (
  /** @class */
  function(n) {
    Qg(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.createTasksP1 = { list: [], sorted: !1 }, e.createTasksP2 = { list: [], sorted: !1 }, e.destroyTasks = [], e.ticking = !1, e.scrollGoingDown = !0, e.lastPage = 0, e.lastScrollTop = 0, e.taskCount = 0, e.cancelledTasks = /* @__PURE__ */ new Set(), e;
    }
    return t.prototype.setScrollTop = function(e) {
      var r = this.gridOptionsService.is("pagination");
      if (this.scrollGoingDown = e >= this.lastScrollTop, r && e === 0) {
        var i = this.paginationProxy.getCurrentPage();
        i !== this.lastPage && (this.lastPage = i, this.scrollGoingDown = !0);
      }
      this.lastScrollTop = e;
    }, t.prototype.init = function() {
      this.useAnimationFrame = !this.gridOptionsService.is("suppressAnimationFrame");
    }, t.prototype.isOn = function() {
      return this.useAnimationFrame;
    }, t.prototype.verifyAnimationFrameOn = function(e) {
      this.useAnimationFrame === !1 && console.warn("AG Grid: AnimationFrameService." + e + " called but animation frames are off");
    }, t.prototype.createTask = function(e, r, i) {
      this.verifyAnimationFrameOn(i);
      var o = { task: e, index: r, createOrder: ++this.taskCount };
      this.addTaskToList(this[i], o), this.schedule();
    }, t.prototype.cancelTask = function(e) {
      this.cancelledTasks.add(e);
    }, t.prototype.addTaskToList = function(e, r) {
      e.list.push(r), e.sorted = !1;
    }, t.prototype.sortTaskList = function(e) {
      if (!e.sorted) {
        var r = this.scrollGoingDown ? 1 : -1;
        e.list.sort(function(i, o) {
          return i.index !== o.index ? r * (o.index - i.index) : o.createOrder - i.createOrder;
        }), e.sorted = !0;
      }
    }, t.prototype.addDestroyTask = function(e) {
      this.verifyAnimationFrameOn("createTasksP3"), this.destroyTasks.push(e), this.schedule();
    }, t.prototype.executeFrame = function(e) {
      this.verifyAnimationFrameOn("executeFrame");
      for (var r = this.createTasksP1, i = r.list, o = this.createTasksP2, s = o.list, a = this.destroyTasks, l = (/* @__PURE__ */ new Date()).getTime(), u = (/* @__PURE__ */ new Date()).getTime() - l, c = e <= 0, p = this.ctrlsService.getGridBodyCtrl(); c || u < e; ) {
        var d = p.getScrollFeature().scrollGridIfNeeded();
        if (!d) {
          var v = void 0;
          if (i.length)
            this.sortTaskList(r), v = i.pop().task;
          else if (s.length)
            this.sortTaskList(o), v = s.pop().task;
          else if (a.length)
            v = a.pop();
          else {
            this.cancelledTasks.clear();
            break;
          }
          this.cancelledTasks.has(v) || v();
        }
        u = (/* @__PURE__ */ new Date()).getTime() - l;
      }
      i.length || s.length || a.length ? this.requestFrame() : this.stopTicking();
    }, t.prototype.stopTicking = function() {
      this.ticking = !1;
    }, t.prototype.flushAllFrames = function() {
      this.useAnimationFrame && this.executeFrame(-1);
    }, t.prototype.schedule = function() {
      this.useAnimationFrame && (this.ticking || (this.ticking = !0, this.requestFrame()));
    }, t.prototype.requestFrame = function() {
      var e = this.executeFrame.bind(this, 60), r = this.gridOptionsService.getDocument(), i = r.defaultView || window;
      i.requestAnimationFrame ? i.requestAnimationFrame(e) : i.webkitRequestAnimationFrame ? i.webkitRequestAnimationFrame(e) : i.setTimeout(e, 0);
    }, t.prototype.isQueueEmpty = function() {
      return !this.ticking;
    }, t.prototype.debounce = function(e) {
      var r = this, i = !1;
      return function() {
        if (!r.isOn()) {
          r.getFrameworkOverrides().setTimeout(e, 0);
          return;
        }
        i || (i = !0, r.addDestroyTask(function() {
          i = !1, e();
        }));
      };
    }, fi([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), fi([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), fi([
      b
    ], t.prototype, "init", null), t = fi([
      A("animationFrameService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Jg = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), _r = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Zg = (
  /** @class */
  function(n) {
    Jg(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        e.centerRowContainerCtrl = r.centerRowContainerCtrl;
      });
    }, t.prototype.getPreferredWidthForColumn = function(e, r) {
      var i = this.getHeaderCellForColumn(e);
      if (!i)
        return -1;
      var o = this.rowRenderer.getAllCellsForColumn(e);
      return r || o.push(i), this.addElementsToContainerAndGetWidth(o);
    }, t.prototype.getPreferredWidthForColumnGroup = function(e) {
      var r = this.getHeaderCellForColumn(e);
      return r ? this.addElementsToContainerAndGetWidth([r]) : -1;
    }, t.prototype.addElementsToContainerAndGetWidth = function(e) {
      var r = this, i = document.createElement("form");
      i.style.position = "fixed";
      var o = this.centerRowContainerCtrl.getContainerElement();
      o.appendChild(i), e.forEach(function(l) {
        return r.cloneItemIntoDummy(l, i);
      });
      var s = i.offsetWidth;
      o.removeChild(i);
      var a = this.getAutoSizePadding();
      return s + a;
    }, t.prototype.getAutoSizePadding = function() {
      var e = this.gridOptionsService.getNum("autoSizePadding");
      return e != null && e >= 0 ? e : 20;
    }, t.prototype.getHeaderCellForColumn = function(e) {
      var r = null;
      return this.ctrlsService.getHeaderRowContainerCtrls().forEach(function(i) {
        var o = i.getHtmlElementForColumnHeader(e);
        o != null && (r = o);
      }), r;
    }, t.prototype.cloneItemIntoDummy = function(e, r) {
      var i = e.cloneNode(!0);
      i.style.width = "", i.style.position = "static", i.style.left = "";
      var o = document.createElement("div"), s = o.classList, a = ["ag-header-cell", "ag-header-group-cell"].some(function(d) {
        return i.classList.contains(d);
      });
      a ? (s.add("ag-header", "ag-header-row"), o.style.position = "static") : s.add("ag-row");
      for (var l = e.parentElement; l; ) {
        var u = ["ag-header-row", "ag-row"].some(function(d) {
          return l.classList.contains(d);
        });
        if (u) {
          for (var c = 0; c < l.classList.length; c++) {
            var p = l.classList[c];
            p != "ag-row-position-absolute" && s.add(p);
          }
          break;
        }
        l = l.parentElement;
      }
      o.appendChild(i), r.appendChild(o);
    }, _r([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), _r([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), _r([
      h("rowCssClassCalculator")
    ], t.prototype, "rowCssClassCalculator", void 0), _r([
      b
    ], t.prototype, "postConstruct", null), t = _r([
      A("autoWidthCalculator")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ey = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), vi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, ty = function(n) {
  var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
  if (e)
    return e.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, ry = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, iy = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(ry(arguments[t]));
  return n;
}, oy = (
  /** @class */
  function(n) {
    ey(t, n);
    function t(e, r) {
      var i = n.call(this) || this;
      return i.createRowCon = e, i.destroyRowCtrls = r, i.stickyRowCtrls = [], i.containerHeight = 0, i;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.isClientSide = this.rowModel.getType() === "clientSide", this.ctrlsService.whenReady(function(r) {
        e.gridBodyCtrl = r.gridBodyCtrl;
      });
    }, t.prototype.getStickyRowCtrls = function() {
      return this.stickyRowCtrls;
    }, t.prototype.checkStickyRows = function() {
      var e = this, r = 0;
      if (!this.gridOptionsService.is("groupRowsSticky")) {
        this.refreshNodesAndContainerHeight([], r);
        return;
      }
      for (var i = [], o = this.rowRenderer.getFirstVisibleVerticalPixel(), s = function(v) {
        var f, y, C;
        i.push(v);
        var m;
        if (e.isClientSide) {
          for (var w = v; w.expanded; )
            if (w.master)
              w = w.detailNode;
            else if (w.childrenAfterSort) {
              if (w.childrenAfterSort.length === 0)
                break;
              w = q(w.childrenAfterSort);
            }
          m = w.rowTop + w.rowHeight;
        } else {
          var E = (f = v.childStore) === null || f === void 0 ? void 0 : f.getStoreBounds();
          m = ((y = E == null ? void 0 : E.heightPx) !== null && y !== void 0 ? y : 0) + ((C = E == null ? void 0 : E.topPx) !== null && C !== void 0 ? C : 0);
        }
        var R = o + r + v.rowHeight;
        m < R ? v.stickyRowTop = r + (m - R) : v.stickyRowTop = r, r = 0, i.forEach(function(D) {
          var M = D.stickyRowTop + D.rowHeight;
          r < M && (r = M);
        });
      }; ; ) {
        var a = o + r, l = this.rowModel.getRowIndexAtPixel(a), u = this.rowModel.getRow(l);
        if (u == null || u.level < 0)
          break;
        for (var c = [], p = u.parent; p.level >= 0; )
          c.push(p), p = p.parent;
        var d = c.reverse().find(function(v) {
          return i.indexOf(v) < 0 && v.displayed;
        });
        if (d) {
          s(d);
          continue;
        }
        if (u.isExpandable() && u.expanded && u.rowTop < a) {
          s(u);
          continue;
        }
        break;
      }
      this.refreshNodesAndContainerHeight(i, r);
    }, t.prototype.refreshStickyNode = function(e) {
      for (var r = [], i = 0; i < this.stickyRowCtrls.length; i++) {
        var o = this.stickyRowCtrls[i].getRowNode();
        o !== e && r.push(o);
      }
      this.refreshNodesAndContainerHeight(r, this.containerHeight), this.checkStickyRows();
    }, t.prototype.refreshNodesAndContainerHeight = function(e, r) {
      var i, o, s, a = this, l = this.stickyRowCtrls.filter(function(y) {
        return e.indexOf(y.getRowNode()) === -1;
      }), u = e.filter(function(y) {
        return a.stickyRowCtrls.findIndex(function(C) {
          return C.getRowNode() === y;
        }) === -1;
      }), c = {};
      l.forEach(function(y) {
        c[y.getRowNode().id] = y, a.stickyRowCtrls = a.stickyRowCtrls.filter(function(C) {
          return C !== y;
        });
      });
      try {
        for (var p = ty(Object.values(c)), d = p.next(); !d.done; d = p.next()) {
          var v = d.value;
          v.getRowNode().sticky = !1;
        }
      } catch (y) {
        i = { error: y };
      } finally {
        try {
          d && !d.done && (o = p.return) && o.call(p);
        } finally {
          if (i)
            throw i.error;
        }
      }
      this.destroyRowCtrls(c, !1);
      var f = u.map(function(y) {
        return y.sticky = !0, a.createRowCon(y, !1, !1);
      });
      (s = this.stickyRowCtrls).push.apply(s, iy(f)), this.stickyRowCtrls.forEach(function(y) {
        return y.setRowTop(y.getRowNode().stickyRowTop);
      }), this.stickyRowCtrls.sort(function(y, C) {
        return C.getRowNode().rowIndex - y.getRowNode().rowIndex;
      }), this.containerHeight !== r && (this.containerHeight = r, this.gridBodyCtrl.setStickyTopHeight(r));
    }, vi([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), vi([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), vi([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), vi([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ny = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), je = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, sy = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Zo = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(sy(arguments[t]));
  return n;
}, ay = function(n) {
  var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
  if (e)
    return e.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, ly = 10, uy = (
  /** @class */
  function(n) {
    ny(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.destroyFuncsForColumnListeners = [], e.rowCtrlsByRowIndex = {}, e.zombieRowCtrls = {}, e.allRowCtrls = [], e.topRowCtrls = [], e.bottomRowCtrls = [], e.refreshInProgress = !1, e.dataFirstRenderedFired = !1, e;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function() {
        e.gridBodyCtrl = e.ctrlsService.getGridBodyCtrl(), e.initialise();
      });
    }, t.prototype.initialise = function() {
      if (this.addManagedListener(this.eventService, g.EVENT_PAGINATION_CHANGED, this.onPageLoaded.bind(this)), this.addManagedListener(this.eventService, g.EVENT_PINNED_ROW_DATA_CHANGED, this.onPinnedRowDataChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_BODY_SCROLL, this.onBodyScroll.bind(this)), this.addManagedListener(this.eventService, g.EVENT_BODY_HEIGHT_CHANGED, this.redrawAfterScroll.bind(this)), this.addManagedPropertyListener("domLayout", this.onDomLayoutChanged.bind(this)), this.addManagedPropertyListener("rowClass", this.redrawRows.bind(this)), this.gridOptionsService.is("groupRowsSticky")) {
        var e = this.rowModel.getType();
        e != "clientSide" && e != "serverSide" ? K(function() {
          return console.warn("AG Grid: The feature Sticky Row Groups only works with the Client Side or Server Side Row Model");
        }, "rowRenderer.stickyWorksWithCsrmOnly") : this.stickyRowFeature = this.createManagedBean(new oy(this.createRowCon.bind(this), this.destroyRowCtrls.bind(this)));
      }
      this.registerCellEventListeners(), this.initialiseCache(), this.printLayout = this.gridOptionsService.isDomLayout("print"), this.embedFullWidthRows = this.printLayout || this.gridOptionsService.is("embedFullWidthRows"), this.redrawAfterModelUpdate();
    }, t.prototype.initialiseCache = function() {
      if (this.gridOptionsService.is("keepDetailRows")) {
        var e = this.getKeepDetailRowsCount(), r = e ?? 3;
        this.cachedRowCtrls = new cy(r);
      }
    }, t.prototype.getKeepDetailRowsCount = function() {
      var e = this.gridOptionsService.getNum("keepDetailRowsCount");
      return O(e) && e > 0 ? e : ly;
    }, t.prototype.getRowCtrls = function() {
      return this.allRowCtrls;
    }, t.prototype.getStickyTopRowCtrls = function() {
      return this.stickyRowFeature ? this.stickyRowFeature.getStickyRowCtrls() : [];
    }, t.prototype.updateAllRowCtrls = function() {
      var e = rt(this.rowCtrlsByRowIndex), r = this.gridOptionsService.is("ensureDomOrder"), i = this.gridOptionsService.isDomLayout("print");
      (r || i) && e.sort(function(a, l) {
        return a.getRowNode().rowIndex - l.getRowNode.rowIndex;
      });
      var o = rt(this.zombieRowCtrls), s = this.cachedRowCtrls ? this.cachedRowCtrls.getEntries() : [];
      this.allRowCtrls = Zo(e, o, s);
    }, t.prototype.onCellFocusChanged = function(e) {
      this.getAllCellCtrls().forEach(function(r) {
        return r.onCellFocused(e);
      }), this.getFullWidthRowCtrls().forEach(function(r) {
        return r.onFullWidthRowFocused(e);
      });
    }, t.prototype.registerCellEventListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, g.EVENT_CELL_FOCUSED, function(i) {
        e.onCellFocusChanged(i);
      }), this.addManagedListener(this.eventService, g.EVENT_CELL_FOCUS_CLEARED, function() {
        e.onCellFocusChanged();
      }), this.addManagedListener(this.eventService, g.EVENT_FLASH_CELLS, function(i) {
        e.getAllCellCtrls().forEach(function(o) {
          return o.onFlashCells(i);
        });
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_HOVER_CHANGED, function() {
        e.getAllCellCtrls().forEach(function(i) {
          return i.onColumnHover();
        });
      }), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, function() {
        e.getAllCellCtrls().forEach(function(i) {
          return i.onDisplayedColumnsChanged();
        });
      }), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, function() {
        e.printLayout && e.getAllCellCtrls().forEach(function(i) {
          return i.onLeftChanged();
        });
      });
      var r = this.gridOptionsService.isEnableRangeSelection();
      r && (this.addManagedListener(this.eventService, g.EVENT_RANGE_SELECTION_CHANGED, function() {
        e.getAllCellCtrls().forEach(function(i) {
          return i.onRangeSelectionChanged();
        });
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_MOVED, function() {
        e.getAllCellCtrls().forEach(function(i) {
          return i.updateRangeBordersIfRangeCount();
        });
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_PINNED, function() {
        e.getAllCellCtrls().forEach(function(i) {
          return i.updateRangeBordersIfRangeCount();
        });
      }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_VISIBLE, function() {
        e.getAllCellCtrls().forEach(function(i) {
          return i.updateRangeBordersIfRangeCount();
        });
      })), this.refreshListenersToColumnsForCellComps(), this.addManagedListener(this.eventService, g.EVENT_GRID_COLUMNS_CHANGED, this.refreshListenersToColumnsForCellComps.bind(this)), this.addDestroyFunc(this.removeGridColumnListeners.bind(this));
    }, t.prototype.removeGridColumnListeners = function() {
      this.destroyFuncsForColumnListeners.forEach(function(e) {
        return e();
      }), this.destroyFuncsForColumnListeners.length = 0;
    }, t.prototype.refreshListenersToColumnsForCellComps = function() {
      var e = this;
      this.removeGridColumnListeners();
      var r = this.columnModel.getAllGridColumns();
      r && r.forEach(function(i) {
        var o = function(p) {
          e.getAllCellCtrls().forEach(function(d) {
            d.getColumn() === i && p(d);
          });
        }, s = function() {
          o(function(p) {
            return p.onLeftChanged();
          });
        }, a = function() {
          o(function(p) {
            return p.onWidthChanged();
          });
        }, l = function() {
          o(function(p) {
            return p.onFirstRightPinnedChanged();
          });
        }, u = function() {
          o(function(p) {
            return p.onLastLeftPinnedChanged();
          });
        }, c = function() {
          o(function(p) {
            return p.onColDefChanged();
          });
        };
        i.addEventListener("leftChanged", s), i.addEventListener("widthChanged", a), i.addEventListener("firstRightPinnedChanged", l), i.addEventListener("lastLeftPinnedChanged", u), i.addEventListener("colDefChanged", c), e.destroyFuncsForColumnListeners.push(function() {
          i.removeEventListener("leftChanged", s), i.removeEventListener("widthChanged", a), i.removeEventListener("firstRightPinnedChanged", l), i.removeEventListener("lastLeftPinnedChanged", u), i.removeEventListener("colDefChanged", c);
        });
      });
    }, t.prototype.onDomLayoutChanged = function() {
      var e = this.gridOptionsService.isDomLayout("print"), r = e || this.gridOptionsService.is("embedFullWidthRows"), i = r !== this.embedFullWidthRows || this.printLayout !== e;
      this.printLayout = e, this.embedFullWidthRows = r, i && this.redrawAfterModelUpdate({ domLayoutChanged: !0 });
    }, t.prototype.datasourceChanged = function() {
      this.firstRenderedRow = 0, this.lastRenderedRow = -1;
      var e = Object.keys(this.rowCtrlsByRowIndex);
      this.removeRowCtrls(e);
    }, t.prototype.onPageLoaded = function(e) {
      var r = {
        recycleRows: e.keepRenderedRows,
        animate: e.animate,
        newData: e.newData,
        newPage: e.newPage,
        // because this is a model updated event (not pinned rows), we
        // can skip updating the pinned rows. this is needed so that if user
        // is doing transaction updates, the pinned rows are not getting constantly
        // trashed - or editing cells in pinned rows are not refreshed and put into read mode
        onlyBody: !0
      };
      this.redrawAfterModelUpdate(r);
    }, t.prototype.getAllCellsForColumn = function(e) {
      var r = [];
      return this.getAllRowCtrls().forEach(function(i) {
        var o = i.getCellElement(e);
        o && r.push(o);
      }), r;
    }, t.prototype.refreshFloatingRowComps = function() {
      this.refreshFloatingRows(this.topRowCtrls, this.pinnedRowModel.getPinnedTopRowData()), this.refreshFloatingRows(this.bottomRowCtrls, this.pinnedRowModel.getPinnedBottomRowData());
    }, t.prototype.getTopRowCtrls = function() {
      return this.topRowCtrls;
    }, t.prototype.getBottomRowCtrls = function() {
      return this.bottomRowCtrls;
    }, t.prototype.refreshFloatingRows = function(e, r) {
      var i = this;
      e.forEach(function(o) {
        o.destroyFirstPass(), o.destroySecondPass();
      }), e.length = 0, r && r.forEach(function(o) {
        var s = new Nt(o, i.beans, !1, !1, i.printLayout);
        e.push(s);
      });
    }, t.prototype.onPinnedRowDataChanged = function() {
      var e = {
        recycleRows: !0
      };
      this.redrawAfterModelUpdate(e);
    }, t.prototype.getRenderedIndexesForRowNodes = function(e) {
      var r = [];
      return x(e) || J(this.rowCtrlsByRowIndex, function(i, o) {
        var s = o.getRowNode();
        e.indexOf(s) >= 0 && r.push(i);
      }), r;
    }, t.prototype.redrawRows = function(e) {
      var r = e != null && e.length > 0;
      if (r) {
        var i = this.getRenderedIndexesForRowNodes(e);
        this.removeRowCtrls(i);
      }
      this.redrawAfterModelUpdate({
        recycleRows: r
      });
    }, t.prototype.getCellToRestoreFocusToAfterRefresh = function(e) {
      var r = e != null && e.suppressKeepFocus ? null : this.focusService.getFocusCellToUseAfterRefresh();
      if (r == null)
        return null;
      var i = this.gridOptionsService.getDocument(), o = i.activeElement, s = this.gridOptionsService.getDomData(o, xt.DOM_DATA_KEY_CELL_CTRL), a = this.gridOptionsService.getDomData(o, Nt.DOM_DATA_KEY_ROW_CTRL), l = s || a;
      return l ? r : null;
    }, t.prototype.redrawAfterModelUpdate = function(e) {
      e === void 0 && (e = {}), this.getLockOnRefresh();
      var r = this.getCellToRestoreFocusToAfterRefresh(e);
      this.updateContainerHeights(), this.scrollToTopIfNewData(e);
      var i = !e.domLayoutChanged && !!e.recycleRows, o = e.animate && this.gridOptionsService.isAnimateRows(), s = i ? this.recycleRows() : null;
      i || this.removeAllRowComps(), this.redraw(s, o), this.gridBodyCtrl.updateRowCount(), e.onlyBody || this.refreshFloatingRowComps(), this.dispatchDisplayedRowsChanged(), r != null && this.restoreFocusedCell(r), this.releaseLockOnRefresh();
    }, t.prototype.scrollToTopIfNewData = function(e) {
      var r = e.newData || e.newPage, i = this.gridOptionsService.is("suppressScrollOnNewData");
      r && !i && this.gridBodyCtrl.getScrollFeature().scrollToTop();
    }, t.prototype.updateContainerHeights = function() {
      if (this.printLayout) {
        this.rowContainerHeightService.setModelHeight(null);
        return;
      }
      var e = this.paginationProxy.getCurrentPageHeight();
      e === 0 && (e = 1), this.rowContainerHeightService.setModelHeight(e);
    }, t.prototype.getLockOnRefresh = function() {
      if (this.refreshInProgress)
        throw new Error("AG Grid: cannot get grid to draw rows when it is in the middle of drawing rows. Your code probably called a grid API method while the grid was in the render stage. To overcome this, put the API call into a timeout, e.g. instead of api.redrawRows(), call setTimeout(function() { api.redrawRows(); }, 0). To see what part of your code that caused the refresh check this stacktrace.");
      this.refreshInProgress = !0;
    }, t.prototype.releaseLockOnRefresh = function() {
      this.refreshInProgress = !1;
    }, t.prototype.isRefreshInProgress = function() {
      return this.refreshInProgress;
    }, t.prototype.restoreFocusedCell = function(e) {
      e && this.onCellFocusChanged({
        rowIndex: e.rowIndex,
        column: e.column,
        rowPinned: e.rowPinned,
        forceBrowserFocus: !0,
        preventScrollOnBrowserFocus: !0,
        api: this.beans.gridApi,
        columnApi: this.beans.columnApi,
        context: this.beans.gridOptionsService.context,
        type: "mock"
      });
    }, t.prototype.stopEditing = function(e) {
      e === void 0 && (e = !1), this.getAllRowCtrls().forEach(function(r) {
        r.stopEditing(e);
      });
    }, t.prototype.getAllCellCtrls = function() {
      for (var e = [], r = this.getAllRowCtrls(), i = r.length, o = 0; o < i; o++)
        for (var s = r[o].getAllCellCtrls(), a = s.length, l = 0; l < a; l++)
          e.push(s[l]);
      return e;
    }, t.prototype.getAllRowCtrls = function() {
      var e, r, i = this.stickyRowFeature && this.stickyRowFeature.getStickyRowCtrls() || [], o = Zo(this.topRowCtrls, this.bottomRowCtrls, i);
      try {
        for (var s = ay(Object.keys(this.rowCtrlsByRowIndex)), a = s.next(); !a.done; a = s.next()) {
          var l = a.value;
          o.push(this.rowCtrlsByRowIndex[l]);
        }
      } catch (u) {
        e = { error: u };
      } finally {
        try {
          a && !a.done && (r = s.return) && r.call(s);
        } finally {
          if (e)
            throw e.error;
        }
      }
      return o;
    }, t.prototype.addRenderedRowListener = function(e, r, i) {
      var o = this.rowCtrlsByRowIndex[r];
      o && o.addEventListener(e, i);
    }, t.prototype.flashCells = function(e) {
      e === void 0 && (e = {});
      var r = e.flashDelay, i = e.fadeDelay;
      this.getCellCtrls(e.rowNodes, e.columns).forEach(function(o) {
        return o.flashCell({ flashDelay: r, fadeDelay: i });
      });
    }, t.prototype.refreshCells = function(e) {
      e === void 0 && (e = {});
      var r = {
        forceRefresh: e.force,
        newData: !1,
        suppressFlash: e.suppressFlash
      };
      this.getCellCtrls(e.rowNodes, e.columns).forEach(function(i) {
        if (i.refreshShouldDestroy()) {
          var o = i.getRowCtrl();
          o && o.refreshCell(i);
        } else
          i.refreshCell(r);
      }), this.getFullWidthRowCtrls(e.rowNodes).forEach(function(i) {
        i.refreshFullWidth();
      });
    }, t.prototype.getCellRendererInstances = function(e) {
      var r = this, i, o = this.getCellCtrls(e.rowNodes, e.columns).map(function(l) {
        return l.getCellRenderer();
      }).filter(function(l) {
        return l != null;
      });
      if (!((i = e.columns) === null || i === void 0) && i.length)
        return o;
      var s = [], a = this.mapRowNodes(e.rowNodes);
      return this.getAllRowCtrls().forEach(function(l) {
        if (!(a && !r.isRowInMap(l.getRowNode(), a)) && l.isFullWidth()) {
          var u = l.getFullWidthCellRenderer();
          u && s.push(u);
        }
      }), Zo(s, o);
    }, t.prototype.getCellEditorInstances = function(e) {
      var r = [];
      return this.getCellCtrls(e.rowNodes, e.columns).forEach(function(i) {
        var o = i.getCellEditor();
        o && r.push(o);
      }), r;
    }, t.prototype.getEditingCells = function() {
      var e = [];
      return this.getAllCellCtrls().forEach(function(r) {
        if (r.isEditing()) {
          var i = r.getCellPosition();
          e.push(i);
        }
      }), e;
    }, t.prototype.mapRowNodes = function(e) {
      if (e) {
        var r = {
          top: {},
          bottom: {},
          normal: {}
        };
        return e.forEach(function(i) {
          var o = i.id;
          i.rowPinned === "top" ? r.top[o] = i : i.rowPinned === "bottom" ? r.bottom[o] = i : r.normal[o] = i;
        }), r;
      }
    }, t.prototype.isRowInMap = function(e, r) {
      var i = e.id, o = e.rowPinned;
      return o === "bottom" ? r.bottom[i] != null : o === "top" ? r.top[i] != null : r.normal[i] != null;
    }, t.prototype.getCellCtrls = function(e, r) {
      var i = this, o = this.mapRowNodes(e), s = [], a;
      O(r) && (a = {}, r.forEach(function(u) {
        var c = i.columnModel.getGridColumn(u);
        O(c) && (a[c.getId()] = !0);
      }));
      var l = function(u) {
        var c = u.getRowNode();
        o != null && !i.isRowInMap(c, o) || u.getAllCellCtrls().forEach(function(p) {
          var d = p.getColumn().getId(), v = a && !a[d];
          v || s.push(p);
        });
      };
      return this.getAllRowCtrls().forEach(function(u) {
        return l(u);
      }), s;
    }, t.prototype.destroy = function() {
      this.removeAllRowComps(), n.prototype.destroy.call(this);
    }, t.prototype.removeAllRowComps = function() {
      var e = Object.keys(this.rowCtrlsByRowIndex);
      this.removeRowCtrls(e);
    }, t.prototype.recycleRows = function() {
      var e = [];
      J(this.rowCtrlsByRowIndex, function(i, o) {
        var s = o.getRowNode().id == null;
        s && e.push(i);
      }), this.removeRowCtrls(e);
      var r = {};
      return J(this.rowCtrlsByRowIndex, function(i, o) {
        var s = o.getRowNode();
        r[s.id] = o;
      }), this.rowCtrlsByRowIndex = {}, r;
    }, t.prototype.removeRowCtrls = function(e) {
      var r = this;
      e.forEach(function(i) {
        var o = r.rowCtrlsByRowIndex[i];
        o && (o.destroyFirstPass(), o.destroySecondPass()), delete r.rowCtrlsByRowIndex[i];
      });
    }, t.prototype.onBodyScroll = function(e) {
      e.direction === "vertical" && this.redrawAfterScroll();
    }, t.prototype.redrawAfterScroll = function() {
      var e;
      if (this.stickyRowFeature && co() && (e = this.getCellToRestoreFocusToAfterRefresh() || void 0), this.getLockOnRefresh(), this.redraw(null, !1, !0), this.releaseLockOnRefresh(), this.dispatchDisplayedRowsChanged(!0), e != null) {
        var r = this.getCellToRestoreFocusToAfterRefresh();
        e != null && r == null && (this.animationFrameService.flushAllFrames(), this.restoreFocusedCell(e));
      }
    }, t.prototype.removeRowCompsNotToDraw = function(e) {
      var r = {};
      e.forEach(function(s) {
        return r[s] = !0;
      });
      var i = Object.keys(this.rowCtrlsByRowIndex), o = i.filter(function(s) {
        return !r[s];
      });
      this.removeRowCtrls(o);
    }, t.prototype.calculateIndexesToDraw = function(e) {
      var r = this, i = xl(this.firstRenderedRow, this.lastRenderedRow), o = function(s, a) {
        var l = a.getRowNode().rowIndex;
        l != null && (l < r.firstRenderedRow || l > r.lastRenderedRow) && r.doNotUnVirtualiseRow(a) && i.push(l);
      };
      return J(this.rowCtrlsByRowIndex, o), J(e, o), i.sort(function(s, a) {
        return s - a;
      }), i = i.filter(function(s) {
        var a = r.paginationProxy.getRow(s);
        return a && !a.sticky;
      }), i;
    }, t.prototype.redraw = function(e, r, i) {
      var o = this;
      r === void 0 && (r = !1), i === void 0 && (i = !1), this.rowContainerHeightService.updateOffset(), this.workOutFirstAndLastRowsToRender(), this.stickyRowFeature && this.stickyRowFeature.checkStickyRows();
      var s = this.calculateIndexesToDraw(e);
      if (this.removeRowCompsNotToDraw(s), this.printLayout && (r = !1), s.forEach(function(l) {
        var u = o.createOrUpdateRowCtrl(l, e, r, i);
        O(u);
      }), e) {
        var a = i && !this.gridOptionsService.is("suppressAnimationFrame") && !this.printLayout;
        a ? this.beans.animationFrameService.addDestroyTask(function() {
          o.destroyRowCtrls(e, r), o.updateAllRowCtrls(), o.dispatchDisplayedRowsChanged();
        }) : this.destroyRowCtrls(e, r);
      }
      this.updateAllRowCtrls();
    }, t.prototype.dispatchDisplayedRowsChanged = function(e) {
      e === void 0 && (e = !1);
      var r = { type: g.EVENT_DISPLAYED_ROWS_CHANGED, afterScroll: e };
      this.eventService.dispatchEvent(r);
    }, t.prototype.onDisplayedColumnsChanged = function() {
      var e = this.columnModel.isPinningLeft(), r = this.columnModel.isPinningRight(), i = this.pinningLeft !== e || r !== this.pinningRight;
      i && (this.pinningLeft = e, this.pinningRight = r, this.embedFullWidthRows && this.redrawFullWidthEmbeddedRows());
    }, t.prototype.redrawFullWidthEmbeddedRows = function() {
      var e = [];
      this.getFullWidthRowCtrls().forEach(function(r) {
        var i = r.getRowNode().rowIndex;
        e.push(i.toString());
      }), this.refreshFloatingRowComps(), this.removeRowCtrls(e), this.redrawAfterScroll();
    }, t.prototype.getFullWidthRowCtrls = function(e) {
      var r = this, i = this.mapRowNodes(e);
      return this.getAllRowCtrls().filter(function(o) {
        if (!o.isFullWidth())
          return !1;
        var s = o.getRowNode();
        return !(i != null && !r.isRowInMap(s, i));
      });
    }, t.prototype.refreshFullWidthRow = function(e) {
      var r = this.getFullWidthRowCtrls().find(function(o) {
        return o.getRowNode() === e;
      });
      if (r) {
        var i = r.refreshFullWidth();
        i || (e.sticky ? this.stickyRowFeature.refreshStickyNode(e) : this.removeRowCtrls([e.rowIndex]), this.redrawAfterScroll());
      }
    }, t.prototype.createOrUpdateRowCtrl = function(e, r, i, o) {
      var s, a = this.rowCtrlsByRowIndex[e];
      a || (s = this.paginationProxy.getRow(e), O(s) && O(r) && r[s.id] && s.alreadyRendered && (a = r[s.id], r[s.id] = null));
      var l = !a;
      if (l)
        if (s || (s = this.paginationProxy.getRow(e)), O(s))
          a = this.createRowCon(s, i, o);
        else
          return;
      return s && (s.alreadyRendered = !0), this.rowCtrlsByRowIndex[e] = a, a;
    }, t.prototype.destroyRowCtrls = function(e, r) {
      var i = this, o = [];
      J(e, function(s, a) {
        if (a) {
          if (i.cachedRowCtrls && a.isCacheable()) {
            i.cachedRowCtrls.addRow(a);
            return;
          }
          a.destroyFirstPass(), r ? (i.zombieRowCtrls[a.getInstanceId()] = a, o.push(function() {
            a.destroySecondPass(), delete i.zombieRowCtrls[a.getInstanceId()];
          })) : a.destroySecondPass();
        }
      }), r && (o.push(function() {
        i.updateAllRowCtrls(), i.dispatchDisplayedRowsChanged();
      }), Xa(o));
    }, t.prototype.getRowBuffer = function() {
      var e = this.gridOptionsService.getNum("rowBuffer");
      return typeof e == "number" ? e < 0 && (K(function() {
        return console.warn("AG Grid: rowBuffer should not be negative");
      }, "warn rowBuffer negative"), e = 0, this.gridOptionsService.set("rowBuffer", 0)) : e = 10, e;
    }, t.prototype.getRowBufferInPixels = function() {
      var e = this.getRowBuffer(), r = this.gridOptionsService.getRowHeightAsNumber();
      return e * r;
    }, t.prototype.workOutFirstAndLastRowsToRender = function() {
      var e, r;
      if (!this.paginationProxy.isRowsToRender())
        e = 0, r = -1;
      else if (this.printLayout)
        e = this.paginationProxy.getPageFirstRow(), r = this.paginationProxy.getPageLastRow();
      else {
        var i = this.getRowBufferInPixels(), o = this.ctrlsService.getGridBodyCtrl(), s = this.gridOptionsService.is("suppressRowVirtualisation"), a = !1, l = void 0, u = void 0;
        do {
          var c = this.paginationProxy.getPixelOffset(), p = this.paginationProxy.getCurrentPagePixelRange(), d = p.pageFirstPixel, v = p.pageLastPixel, f = this.rowContainerHeightService.getDivStretchOffset(), y = o.getScrollFeature().getVScrollPosition(), C = y.top, m = y.bottom;
          s ? (l = d + f, u = v + f) : (l = Math.max(C + c - i, d) + f, u = Math.min(m + c + i, v) + f), this.firstVisibleVPixel = Math.max(C + c, d) + f, a = this.ensureAllRowsInRangeHaveHeightsCalculated(l, u);
        } while (a);
        var w = this.paginationProxy.getRowIndexAtPixel(l), E = this.paginationProxy.getRowIndexAtPixel(u), R = this.paginationProxy.getPageFirstRow(), D = this.paginationProxy.getPageLastRow();
        w < R && (w = R), E > D && (E = D), e = w, r = E;
      }
      var M = this.gridOptionsService.isDomLayout("normal"), I = this.gridOptionsService.is("suppressMaxRenderedRowRestriction"), L = Math.max(this.getRowBuffer(), 500);
      M && !I && r - e > L && (r = e + L);
      var H = e !== this.firstRenderedRow, B = r !== this.lastRenderedRow;
      if (H || B) {
        this.firstRenderedRow = e, this.lastRenderedRow = r;
        var Q = {
          type: g.EVENT_VIEWPORT_CHANGED,
          firstRow: e,
          lastRow: r
        };
        this.eventService.dispatchEvent(Q);
      }
    }, t.prototype.dispatchFirstDataRenderedEvent = function() {
      var e = this;
      if (!this.dataFirstRenderedFired) {
        this.dataFirstRenderedFired = !0;
        var r = {
          type: g.EVENT_FIRST_DATA_RENDERED,
          firstRow: this.firstRenderedRow,
          lastRow: this.lastRenderedRow
        };
        window.requestAnimationFrame(function() {
          e.beans.eventService.dispatchEvent(r);
        });
      }
    }, t.prototype.ensureAllRowsInRangeHaveHeightsCalculated = function(e, r) {
      var i = this.paginationProxy.ensureRowHeightsValid(e, r, -1, -1);
      return i && this.updateContainerHeights(), i;
    }, t.prototype.getFirstVisibleVerticalPixel = function() {
      return this.firstVisibleVPixel;
    }, t.prototype.getFirstVirtualRenderedRow = function() {
      return this.firstRenderedRow;
    }, t.prototype.getLastVirtualRenderedRow = function() {
      return this.lastRenderedRow;
    }, t.prototype.doNotUnVirtualiseRow = function(e) {
      var r = !1, i = !0, o = e.getRowNode(), s = this.focusService.isRowNodeFocused(o), a = e.isEditing(), l = o.detail, u = s || a || l;
      if (!u)
        return r;
      var c = this.paginationProxy.isRowPresent(o);
      return c ? i : r;
    }, t.prototype.createRowCon = function(e, r, i) {
      var o = this.cachedRowCtrls ? this.cachedRowCtrls.getRow(e) : null;
      if (o)
        return o;
      var s = this.gridOptionsService.is("suppressAnimationFrame"), a = i && !s && !this.printLayout, l = new Nt(e, this.beans, r, a, this.printLayout);
      return l;
    }, t.prototype.getRenderedNodes = function() {
      var e = this.rowCtrlsByRowIndex;
      return Object.keys(e).map(function(r) {
        return e[r].getRowNode();
      });
    }, t.prototype.getRowByPosition = function(e) {
      var r, i = e.rowIndex;
      switch (e.rowPinned) {
        case "top":
          r = this.topRowCtrls[i];
          break;
        case "bottom":
          r = this.bottomRowCtrls[i];
          break;
        default:
          r = this.rowCtrlsByRowIndex[i], r || (r = this.getStickyTopRowCtrls().find(function(o) {
            return o.getRowNode().rowIndex === i;
          }) || null);
          break;
      }
      return r;
    }, t.prototype.getRowNode = function(e) {
      switch (e.rowPinned) {
        case "top":
          return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
        case "bottom":
          return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
        default:
          return this.rowModel.getRow(e.rowIndex);
      }
    }, t.prototype.isRangeInRenderedViewport = function(e, r) {
      var i = e == null || r == null;
      if (i)
        return !1;
      var o = e > this.lastRenderedRow, s = r < this.firstRenderedRow, a = !s && !o;
      return a;
    }, je([
      h("animationFrameService")
    ], t.prototype, "animationFrameService", void 0), je([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), je([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), je([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), je([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), je([
      h("focusService")
    ], t.prototype, "focusService", void 0), je([
      h("beans")
    ], t.prototype, "beans", void 0), je([
      h("rowContainerHeightService")
    ], t.prototype, "rowContainerHeightService", void 0), je([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), je([
      b
    ], t.prototype, "postConstruct", null), t = je([
      A("rowRenderer")
    ], t), t;
  }(T)
), cy = (
  /** @class */
  function() {
    function n(t) {
      this.entriesMap = {}, this.entriesList = [], this.maxCount = t;
    }
    return n.prototype.addRow = function(t) {
      if (this.entriesMap[t.getRowNode().id] = t, this.entriesList.push(t), t.setCached(!0), this.entriesList.length > this.maxCount) {
        var e = this.entriesList[0];
        e.destroyFirstPass(), e.destroySecondPass(), this.removeFromCache(e);
      }
    }, n.prototype.getRow = function(t) {
      if (t == null || t.id == null)
        return null;
      var e = this.entriesMap[t.id];
      if (!e)
        return null;
      this.removeFromCache(e), e.setCached(!1);
      var r = e.getRowNode() != t;
      return r ? null : e;
    }, n.prototype.removeFromCache = function(t) {
      var e = t.getRowNode().id;
      delete this.entriesMap[e], ye(this.entriesList, t);
    }, n.prototype.getEntries = function() {
      return this.entriesList;
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var py = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), aa = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, dy = (
  /** @class */
  function(n) {
    py(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.formatValue = function(e, r, i, o, s) {
      s === void 0 && (s = !0);
      var a = null, l, u = e.getColDef();
      if (o ? l = o : s && (l = u.valueFormatter), l) {
        var c = {
          value: i,
          node: r,
          data: r ? r.data : null,
          colDef: u,
          column: e,
          api: this.gridOptionsService.api,
          columnApi: this.gridOptionsService.columnApi,
          context: this.gridOptionsService.context
        };
        typeof l == "function" ? a = l(c) : a = this.expressionService.evaluate(l, c);
      } else if (u.refData)
        return u.refData[i] || "";
      return a == null && Array.isArray(i) && (a = i.join(", ")), a;
    }, aa([
      h("expressionService")
    ], t.prototype, "expressionService", void 0), t = aa([
      A("valueFormatterService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var hy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), en = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, fy = (
  /** @class */
  function(n) {
    hy(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      this.setPinnedTopRowData(this.gridOptionsService.get("pinnedTopRowData")), this.setPinnedBottomRowData(this.gridOptionsService.get("pinnedBottomRowData"));
    }, t.prototype.isEmpty = function(e) {
      var r = e === "top" ? this.pinnedTopRows : this.pinnedBottomRows;
      return De(r);
    }, t.prototype.isRowsToRender = function(e) {
      return !this.isEmpty(e);
    }, t.prototype.getRowAtPixel = function(e, r) {
      var i = r === "top" ? this.pinnedTopRows : this.pinnedBottomRows;
      if (De(i))
        return 0;
      for (var o = 0; o < i.length; o++) {
        var s = i[o], a = s.rowTop + s.rowHeight - 1;
        if (a >= e)
          return o;
      }
      return i.length - 1;
    }, t.prototype.setPinnedTopRowData = function(e) {
      this.pinnedTopRows = this.createNodesFromData(e, !0);
      var r = {
        type: g.EVENT_PINNED_ROW_DATA_CHANGED
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.setPinnedBottomRowData = function(e) {
      this.pinnedBottomRows = this.createNodesFromData(e, !1);
      var r = {
        type: g.EVENT_PINNED_ROW_DATA_CHANGED
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.createNodesFromData = function(e, r) {
      var i = this, o = [];
      if (e) {
        var s = 0;
        e.forEach(function(a, l) {
          var u = new j(i.beans);
          u.data = a;
          var c = r ? j.ID_PREFIX_TOP_PINNED : j.ID_PREFIX_BOTTOM_PINNED;
          u.id = c + l, u.rowPinned = r ? "top" : "bottom", u.setRowTop(s), u.setRowHeight(i.gridOptionsService.getRowHeightForNode(u).height), u.setRowIndex(l), s += u.rowHeight, o.push(u);
        });
      }
      return o;
    }, t.prototype.getPinnedTopRowData = function() {
      return this.pinnedTopRows;
    }, t.prototype.getPinnedBottomRowData = function() {
      return this.pinnedBottomRows;
    }, t.prototype.getPinnedTopTotalHeight = function() {
      return this.getTotalHeight(this.pinnedTopRows);
    }, t.prototype.getPinnedTopRowCount = function() {
      return this.pinnedTopRows ? this.pinnedTopRows.length : 0;
    }, t.prototype.getPinnedBottomRowCount = function() {
      return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;
    }, t.prototype.getPinnedTopRow = function(e) {
      return this.pinnedTopRows[e];
    }, t.prototype.getPinnedBottomRow = function(e) {
      return this.pinnedBottomRows[e];
    }, t.prototype.forEachPinnedTopRow = function(e) {
      De(this.pinnedTopRows) || this.pinnedTopRows.forEach(e);
    }, t.prototype.forEachPinnedBottomRow = function(e) {
      De(this.pinnedBottomRows) || this.pinnedBottomRows.forEach(e);
    }, t.prototype.getPinnedBottomTotalHeight = function() {
      return this.getTotalHeight(this.pinnedBottomRows);
    }, t.prototype.getTotalHeight = function(e) {
      if (!e || e.length === 0)
        return 0;
      var r = q(e);
      return r.rowTop + r.rowHeight;
    }, en([
      h("beans")
    ], t.prototype, "beans", void 0), en([
      b
    ], t.prototype, "init", null), t = en([
      A("pinnedRowModel")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var la;
(function(n) {
  n.Applied = "Applied", n.StoreNotFound = "StoreNotFound", n.StoreLoading = "StoreLoading", n.StoreWaitingToLoad = "StoreWaitingToLoad", n.StoreLoadingFailed = "StoreLoadingFailed", n.StoreWrongType = "StoreWrongType", n.Cancelled = "Cancelled";
})(la || (la = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Ps = (
  /** @class */
  function() {
    function n(t, e) {
      this.active = !0, this.nodeIdsToColumns = {}, this.mapToItems = {}, this.keepingColumns = t, this.pathRoot = {
        rowNode: e,
        children: null
      }, this.mapToItems[e.id] = this.pathRoot;
    }
    return n.prototype.setInactive = function() {
      this.active = !1;
    }, n.prototype.isActive = function() {
      return this.active;
    }, n.prototype.depthFirstSearchChangedPath = function(t, e) {
      if (t.children)
        for (var r = 0; r < t.children.length; r++)
          this.depthFirstSearchChangedPath(t.children[r], e);
      e(t.rowNode);
    }, n.prototype.depthFirstSearchEverything = function(t, e, r) {
      if (t.childrenAfterGroup)
        for (var i = 0; i < t.childrenAfterGroup.length; i++) {
          var o = t.childrenAfterGroup[i];
          o.childrenAfterGroup ? this.depthFirstSearchEverything(t.childrenAfterGroup[i], e, r) : r && e(o);
        }
      e(t);
    }, n.prototype.forEachChangedNodeDepthFirst = function(t, e, r) {
      e === void 0 && (e = !1), r === void 0 && (r = !1), this.active && !r ? this.depthFirstSearchChangedPath(this.pathRoot, t) : this.depthFirstSearchEverything(this.pathRoot.rowNode, t, e);
    }, n.prototype.executeFromRootNode = function(t) {
      t(this.pathRoot.rowNode);
    }, n.prototype.createPathItems = function(t) {
      for (var e = t, r = 0; !this.mapToItems[e.id]; ) {
        var i = {
          rowNode: e,
          children: null
        };
        this.mapToItems[e.id] = i, r++, e = e.parent;
      }
      return r;
    }, n.prototype.populateColumnsMap = function(t, e) {
      var r = this;
      if (!(!this.keepingColumns || !e))
        for (var i = t; i; )
          this.nodeIdsToColumns[i.id] || (this.nodeIdsToColumns[i.id] = {}), e.forEach(function(o) {
            return r.nodeIdsToColumns[i.id][o.getId()] = !0;
          }), i = i.parent;
    }, n.prototype.linkPathItems = function(t, e) {
      for (var r = t, i = 0; i < e; i++) {
        var o = this.mapToItems[r.id], s = this.mapToItems[r.parent.id];
        s.children || (s.children = []), s.children.push(o), r = r.parent;
      }
    }, n.prototype.addParentNode = function(t, e) {
      if (!(!t || t.isRowPinned())) {
        var r = this.createPathItems(t);
        this.linkPathItems(t, r), this.populateColumnsMap(t, e);
      }
    }, n.prototype.canSkip = function(t) {
      return this.active && !this.mapToItems[t.id];
    }, n.prototype.getValueColumnsForNode = function(t, e) {
      if (!this.keepingColumns)
        return e;
      var r = this.nodeIdsToColumns[t.id], i = e.filter(function(o) {
        return r[o.getId()];
      });
      return i;
    }, n.prototype.getNotValueColumnsForNode = function(t, e) {
      if (!this.keepingColumns)
        return null;
      var r = this.nodeIdsToColumns[t.id], i = e.filter(function(o) {
        return !r[o.getId()];
      });
      return i;
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var vy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Bn = (
  /** @class */
  function(n) {
    vy(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.state = t.STATE_WAITING_TO_LOAD, r.version = 0, r.id = e, r;
    }
    return t.prototype.getId = function() {
      return this.id;
    }, t.prototype.load = function() {
      this.state = t.STATE_LOADING, this.loadFromDatasource();
    }, t.prototype.getVersion = function() {
      return this.version;
    }, t.prototype.setStateWaitingToLoad = function() {
      this.version++, this.state = t.STATE_WAITING_TO_LOAD;
    }, t.prototype.getState = function() {
      return this.state;
    }, t.prototype.pageLoadFailed = function(e) {
      var r = this.isRequestMostRecentAndLive(e);
      r && (this.state = t.STATE_FAILED, this.processServerFail()), this.dispatchLoadCompleted(!1);
    }, t.prototype.success = function(e, r) {
      this.successCommon(e, r);
    }, t.prototype.pageLoaded = function(e, r, i) {
      this.successCommon(e, { rowData: r, rowCount: i });
    }, t.prototype.isRequestMostRecentAndLive = function(e) {
      var r = e === this.version, i = this.isAlive();
      return r && i;
    }, t.prototype.successCommon = function(e, r) {
      this.dispatchLoadCompleted();
      var i = this.isRequestMostRecentAndLive(e);
      i && (this.state = t.STATE_LOADED, this.processServerResult(r));
    }, t.prototype.dispatchLoadCompleted = function(e) {
      e === void 0 && (e = !0);
      var r = {
        type: t.EVENT_LOAD_COMPLETE,
        success: e,
        block: this
      };
      this.dispatchEvent(r);
    }, t.EVENT_LOAD_COMPLETE = "loadComplete", t.STATE_WAITING_TO_LOAD = "needsLoading", t.STATE_LOADING = "loading", t.STATE_LOADED = "loaded", t.STATE_FAILED = "failed", t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var gy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), gi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, yy = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, Cy = (
  /** @class */
  function(n) {
    gy(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.activeBlockLoadsCount = 0, r.blocks = [], r.active = !0, r;
    }
    e = t, t.prototype.postConstruct = function() {
      this.maxConcurrentRequests = this.getMaxConcurrentDatasourceRequests();
      var r = this.gridOptionsService.getNum("blockLoadDebounceMillis");
      r && r > 0 && (this.checkBlockToLoadDebounce = G.debounce(this.performCheckBlocksToLoad.bind(this), r));
    }, t.prototype.setBeans = function(r) {
      this.logger = r.create("RowNodeBlockLoader");
    }, t.prototype.getMaxConcurrentDatasourceRequests = function() {
      var r = this.gridOptionsService.getNum("maxConcurrentDatasourceRequests");
      if (r == null)
        return 2;
      if (!(r <= 0))
        return r;
    }, t.prototype.addBlock = function(r) {
      this.blocks.push(r), r.addEventListener(Bn.EVENT_LOAD_COMPLETE, this.loadComplete.bind(this)), this.checkBlockToLoad();
    }, t.prototype.removeBlock = function(r) {
      G.removeFromArray(this.blocks, r);
    }, t.prototype.destroy = function() {
      n.prototype.destroy.call(this), this.active = !1;
    }, t.prototype.loadComplete = function() {
      this.activeBlockLoadsCount--, this.checkBlockToLoad(), this.dispatchEvent({ type: e.BLOCK_LOADED_EVENT }), this.activeBlockLoadsCount == 0 && this.dispatchEvent({ type: e.BLOCK_LOADER_FINISHED_EVENT });
    }, t.prototype.checkBlockToLoad = function() {
      this.checkBlockToLoadDebounce ? this.checkBlockToLoadDebounce() : this.performCheckBlocksToLoad();
    }, t.prototype.performCheckBlocksToLoad = function() {
      if (this.active) {
        if (this.printCacheStatus(), this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {
          this.logger.log("checkBlockToLoad: max loads exceeded");
          return;
        }
        var r = this.getAvailableLoadingCount(), i = this.blocks.filter(function(o) {
          return o.getState() === Bn.STATE_WAITING_TO_LOAD;
        }).slice(0, r);
        this.registerLoads(i.length), i.forEach(function(o) {
          return o.load();
        }), this.printCacheStatus();
      }
    }, t.prototype.getBlockState = function() {
      if (this.gridOptionsService.isRowModelType("serverSide")) {
        var r = this.rowModel;
        return r.getBlockStates();
      }
      var i = {};
      return this.blocks.forEach(function(o) {
        var s = o.getBlockStateJson(), a = s.id, l = s.state;
        i[a] = l;
      }), i;
    }, t.prototype.printCacheStatus = function() {
      this.logger.isLogging() && this.logger.log("printCacheStatus: activePageLoadsCount = " + this.activeBlockLoadsCount + "," + (" blocks = " + JSON.stringify(this.getBlockState())));
    }, t.prototype.isLoading = function() {
      return this.activeBlockLoadsCount > 0;
    }, t.prototype.registerLoads = function(r) {
      this.activeBlockLoadsCount += r;
    }, t.prototype.getAvailableLoadingCount = function() {
      return this.maxConcurrentRequests !== void 0 ? this.maxConcurrentRequests - this.activeBlockLoadsCount : void 0;
    };
    var e;
    return t.BLOCK_LOADED_EVENT = "blockLoaded", t.BLOCK_LOADER_FINISHED_EVENT = "blockLoaderFinished", gi([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), gi([
      b
    ], t.prototype, "postConstruct", null), gi([
      yy(0, me("loggerFactory"))
    ], t.prototype, "setBeans", null), t = e = gi([
      A("rowNodeBlockLoader")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var my = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), tn = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, wy = (
  /** @class */
  function(n) {
    my(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.currentPage = 0, e.topDisplayedRowIndex = 0, e.bottomDisplayedRowIndex = 0, e.pixelOffset = 0, e.masterRowCount = 0, e;
    }
    return t.prototype.postConstruct = function() {
      this.active = this.gridOptionsService.is("pagination"), this.paginateChildRows = this.isPaginateChildRows(), this.addManagedListener(this.eventService, g.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this)), this.addManagedPropertyListener("pagination", this.onPaginationPageSizeChanged.bind(this)), this.addManagedPropertyListener("paginationPageSize", this.onPaginationPageSizeChanged.bind(this)), this.onModelUpdated();
    }, t.prototype.ensureRowHeightsValid = function(e, r, i, o) {
      var s = this.rowModel.ensureRowHeightsValid(e, r, this.getPageFirstRow(), this.getPageLastRow());
      return s && this.calculatePages(), s;
    }, t.prototype.isPaginateChildRows = function() {
      var e = this.gridOptionsService.is("groupRemoveSingleChildren") || this.gridOptionsService.is("groupRemoveLowestSingleChildren");
      return e ? !0 : this.gridOptionsService.is("paginateChildRows");
    }, t.prototype.onModelUpdated = function(e) {
      this.calculatePages();
      var r = {
        type: g.EVENT_PAGINATION_CHANGED,
        animate: e ? e.animate : !1,
        newData: e ? e.newData : !1,
        newPage: e ? e.newPage : !1,
        keepRenderedRows: e ? e.keepRenderedRows : !1
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.onPaginationPageSizeChanged = function() {
      this.active = this.gridOptionsService.is("pagination"), this.calculatePages();
      var e = {
        type: g.EVENT_PAGINATION_CHANGED,
        animate: !1,
        newData: !1,
        newPage: !1,
        // important to keep rendered rows, otherwise every time grid is resized,
        // we would destroy all the rows.
        keepRenderedRows: !0
      };
      this.eventService.dispatchEvent(e);
    }, t.prototype.goToPage = function(e) {
      if (!(!this.active || this.currentPage === e || typeof this.currentPage != "number")) {
        this.currentPage = e;
        var r = {
          type: g.EVENT_MODEL_UPDATED,
          animate: !1,
          keepRenderedRows: !1,
          newData: !1,
          newPage: !0
        };
        this.onModelUpdated(r);
      }
    }, t.prototype.getPixelOffset = function() {
      return this.pixelOffset;
    }, t.prototype.getRow = function(e) {
      return this.rowModel.getRow(e);
    }, t.prototype.getRowNode = function(e) {
      return this.rowModel.getRowNode(e);
    }, t.prototype.getRowIndexAtPixel = function(e) {
      return this.rowModel.getRowIndexAtPixel(e);
    }, t.prototype.getCurrentPageHeight = function() {
      return x(this.topRowBounds) || x(this.bottomRowBounds) ? 0 : Math.max(this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight - this.topRowBounds.rowTop, 0);
    }, t.prototype.getCurrentPagePixelRange = function() {
      var e = this.topRowBounds ? this.topRowBounds.rowTop : 0, r = this.bottomRowBounds ? this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight : 0;
      return { pageFirstPixel: e, pageLastPixel: r };
    }, t.prototype.isRowPresent = function(e) {
      if (!this.rowModel.isRowPresent(e))
        return !1;
      var r = e.rowIndex >= this.topDisplayedRowIndex && e.rowIndex <= this.bottomDisplayedRowIndex;
      return r;
    }, t.prototype.isEmpty = function() {
      return this.rowModel.isEmpty();
    }, t.prototype.isRowsToRender = function() {
      return this.rowModel.isRowsToRender();
    }, t.prototype.forEachNode = function(e) {
      return this.rowModel.forEachNode(e);
    }, t.prototype.forEachNodeOnPage = function(e) {
      for (var r = this.getPageFirstRow(), i = this.getPageLastRow(), o = r; o <= i; o++) {
        var s = this.getRow(o);
        s && e(s);
      }
    }, t.prototype.getType = function() {
      return this.rowModel.getType();
    }, t.prototype.getRowBounds = function(e) {
      var r = this.rowModel.getRowBounds(e);
      return r.rowIndex = e, r;
    }, t.prototype.getPageFirstRow = function() {
      return this.topRowBounds ? this.topRowBounds.rowIndex : -1;
    }, t.prototype.getPageLastRow = function() {
      return this.bottomRowBounds ? this.bottomRowBounds.rowIndex : -1;
    }, t.prototype.getRowCount = function() {
      return this.rowModel.getRowCount();
    }, t.prototype.getPageForIndex = function(e) {
      return Math.floor(e / this.pageSize);
    }, t.prototype.goToPageWithIndex = function(e) {
      if (this.active) {
        var r = this.getPageForIndex(e);
        this.goToPage(r);
      }
    }, t.prototype.isRowInPage = function(e) {
      if (!this.active)
        return !0;
      var r = this.getPageForIndex(e.rowIndex);
      return r === this.currentPage;
    }, t.prototype.isLastPageFound = function() {
      return this.rowModel.isLastRowIndexKnown();
    }, t.prototype.getCurrentPage = function() {
      return this.currentPage;
    }, t.prototype.goToNextPage = function() {
      this.goToPage(this.currentPage + 1);
    }, t.prototype.goToPreviousPage = function() {
      this.goToPage(this.currentPage - 1);
    }, t.prototype.goToFirstPage = function() {
      this.goToPage(0);
    }, t.prototype.goToLastPage = function() {
      var e = this.rowModel.getRowCount(), r = Math.floor(e / this.pageSize);
      this.goToPage(r);
    }, t.prototype.getPageSize = function() {
      return this.pageSize;
    }, t.prototype.getTotalPages = function() {
      return this.totalPages;
    }, t.prototype.setPageSize = function() {
      this.pageSize = this.gridOptionsService.getNum("paginationPageSize"), (this.pageSize == null || this.pageSize < 1) && (this.pageSize = 100);
    }, t.prototype.calculatePages = function() {
      this.active ? (this.setPageSize(), this.paginateChildRows ? this.calculatePagesAllRows() : this.calculatePagesMasterRowsOnly()) : this.calculatedPagesNotActive(), this.topRowBounds = this.rowModel.getRowBounds(this.topDisplayedRowIndex), this.topRowBounds && (this.topRowBounds.rowIndex = this.topDisplayedRowIndex), this.bottomRowBounds = this.rowModel.getRowBounds(this.bottomDisplayedRowIndex), this.bottomRowBounds && (this.bottomRowBounds.rowIndex = this.bottomDisplayedRowIndex), this.setPixelOffset(O(this.topRowBounds) ? this.topRowBounds.rowTop : 0);
    }, t.prototype.setPixelOffset = function(e) {
      this.pixelOffset !== e && (this.pixelOffset = e, this.eventService.dispatchEvent({ type: g.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED }));
    }, t.prototype.setZeroRows = function() {
      this.masterRowCount = 0, this.topDisplayedRowIndex = 0, this.bottomDisplayedRowIndex = -1, this.currentPage = 0, this.totalPages = 0;
    }, t.prototype.adjustCurrentPageIfInvalid = function() {
      this.currentPage >= this.totalPages && (this.currentPage = this.totalPages - 1), (!isFinite(this.currentPage) || isNaN(this.currentPage) || this.currentPage < 0) && (this.currentPage = 0);
    }, t.prototype.calculatePagesMasterRowsOnly = function() {
      if (this.masterRowCount = this.rowModel.getTopLevelRowCount(), this.masterRowCount <= 0) {
        this.setZeroRows();
        return;
      }
      var e = this.masterRowCount - 1;
      this.totalPages = Math.floor(e / this.pageSize) + 1, this.adjustCurrentPageIfInvalid();
      var r = this.pageSize * this.currentPage, i = this.pageSize * (this.currentPage + 1) - 1;
      if (i > e && (i = e), this.topDisplayedRowIndex = this.rowModel.getTopLevelRowDisplayedIndex(r), i === e)
        this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;
      else {
        var o = this.rowModel.getTopLevelRowDisplayedIndex(i + 1);
        this.bottomDisplayedRowIndex = o - 1;
      }
    }, t.prototype.getMasterRowCount = function() {
      return this.masterRowCount;
    }, t.prototype.calculatePagesAllRows = function() {
      if (this.masterRowCount = this.rowModel.getRowCount(), this.masterRowCount === 0) {
        this.setZeroRows();
        return;
      }
      var e = this.masterRowCount - 1;
      this.totalPages = Math.floor(e / this.pageSize) + 1, this.adjustCurrentPageIfInvalid(), this.topDisplayedRowIndex = this.pageSize * this.currentPage, this.bottomDisplayedRowIndex = this.pageSize * (this.currentPage + 1) - 1, this.bottomDisplayedRowIndex > e && (this.bottomDisplayedRowIndex = e);
    }, t.prototype.calculatedPagesNotActive = function() {
      this.pageSize = this.rowModel.getRowCount(), this.totalPages = 1, this.currentPage = 0, this.topDisplayedRowIndex = 0, this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;
    }, tn([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), tn([
      b
    ], t.prototype, "postConstruct", null), t = tn([
      A("paginationProxy")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Sy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ua = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ey = (
  /** @class */
  function(n) {
    Sy(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.processAllCellClasses = function(e, r, i, o) {
      this.processClassRules(e.cellClassRules, r, i, o), this.processStaticCellClasses(e, r, i);
    }, t.prototype.processClassRules = function(e, r, i, o) {
      if (e != null) {
        for (var s = Object.keys(e), a = {}, l = {}, u = function(d) {
          var v = s[d], f = e[v], y;
          typeof f == "string" ? y = c.expressionService.evaluate(f, r) : typeof f == "function" && (y = f(r)), v.split(" ").forEach(function(C) {
            C == null || C.trim() == "" || (y ? a[C] = !0 : l[C] = !0);
          });
        }, c = this, p = 0; p < s.length; p++)
          u(p);
        o && Object.keys(l).forEach(o), Object.keys(a).forEach(i);
      }
    }, t.prototype.getStaticCellClasses = function(e, r) {
      var i = e.cellClass;
      if (!i)
        return [];
      var o;
      if (typeof i == "function") {
        var s = i;
        o = s(r);
      } else
        o = i;
      return typeof o == "string" && (o = [o]), o || [];
    }, t.prototype.processStaticCellClasses = function(e, r, i) {
      var o = this.getStaticCellClasses(e, r);
      o.forEach(function(s) {
        i(s);
      });
    }, ua([
      h("expressionService")
    ], t.prototype, "expressionService", void 0), t = ua([
      A("stylingService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var _y = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ry = (
  /** @class */
  function(n) {
    _y(t, n);
    function t(e) {
      return n.call(this, e, "ag-toggle-button") || this;
    }
    return t.prototype.setValue = function(e, r) {
      return n.prototype.setValue.call(this, e, r), this.addOrRemoveCssClass("ag-selected", this.getValue()), this;
    }, t;
  }(kr)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Oy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ty = (
  /** @class */
  function(n) {
    Oy(t, n);
    function t(e) {
      return n.call(this, e, "ag-text-area", null, "textarea") || this;
    }
    return t.prototype.setValue = function(e, r) {
      var i = n.prototype.setValue.call(this, e, r);
      return this.eInput.value = e, i;
    }, t.prototype.setCols = function(e) {
      return this.eInput.cols = e, this;
    }, t.prototype.setRows = function(e) {
      return this.eInput.rows = e, this;
    }, t;
  }(at)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var by = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Py = (
  /** @class */
  function(n) {
    by(t, n);
    function t(e) {
      return n.call(this, e, "ag-range-field", "range") || this;
    }
    return t.prototype.postConstruct = function() {
      n.prototype.postConstruct.call(this);
      var e = this.config, r = e.min, i = e.max, o = e.step;
      r != null && this.setMinValue(r), i != null && this.setMaxValue(i), this.setStep(o || 1);
    }, t.prototype.addInputListeners = function() {
      var e = this;
      this.addManagedListener(this.eInput, "input", function(r) {
        var i = r.target.value;
        e.setValue(i);
      });
    }, t.prototype.setMinValue = function(e) {
      return this.min = e, this.eInput.setAttribute("min", e.toString()), this;
    }, t.prototype.setMaxValue = function(e) {
      return this.max = e, this.eInput.setAttribute("max", e.toString()), this;
    }, t.prototype.setStep = function(e) {
      return this.eInput.setAttribute("step", e.toString()), this;
    }, t.prototype.setValue = function(e, r) {
      this.min != null && (e = Math.max(parseFloat(e), this.min).toString()), this.max != null && (e = Math.min(parseFloat(e), this.max).toString());
      var i = n.prototype.setValue.call(this, e, r);
      return this.eInput.value = e, i;
    }, t;
  }(at)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Dy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), yi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ay = (
  /** @class */
  function(n) {
    Dy(t, n);
    function t(e) {
      var r = n.call(this, e, t.TEMPLATE) || this;
      return r.labelAlignment = "top", r;
    }
    return t.prototype.init = function() {
      this.eSlider.addCssClass("ag-slider-field");
    }, t.prototype.onValueChange = function(e) {
      var r = this, i = ar.EVENT_CHANGED;
      return this.addManagedListener(this.eText, i, function() {
        var o = parseFloat(r.eText.getValue());
        r.eSlider.setValue(o.toString(), !0), e(o || 0);
      }), this.addManagedListener(this.eSlider, i, function() {
        var o = r.eSlider.getValue();
        r.eText.setValue(o, !0), e(parseFloat(o));
      }), this;
    }, t.prototype.setSliderWidth = function(e) {
      return this.eSlider.setWidth(e), this;
    }, t.prototype.setTextFieldWidth = function(e) {
      return this.eText.setWidth(e), this;
    }, t.prototype.setMinValue = function(e) {
      return this.eSlider.setMinValue(e), this.eText.setMin(e), this;
    }, t.prototype.setMaxValue = function(e) {
      return this.eSlider.setMaxValue(e), this.eText.setMax(e), this;
    }, t.prototype.getValue = function() {
      return this.eText.getValue();
    }, t.prototype.setValue = function(e) {
      return this.getValue() === e ? this : (this.eText.setValue(e, !0), this.eSlider.setValue(e, !0), this.dispatchEvent({ type: ar.EVENT_CHANGED }), this);
    }, t.prototype.setStep = function(e) {
      return this.eSlider.setStep(e), this.eText.setStep(e), this;
    }, t.TEMPLATE = `<div class="ag-slider">
            <label ref="eLabel"></label>
            <div class="ag-wrapper ag-slider-wrapper">
                <ag-input-range ref="eSlider"></ag-input-range>
                <ag-input-number-field ref="eText"></ag-input-number-field>
            </div>
        </div>`, yi([
      P("eLabel")
    ], t.prototype, "eLabel", void 0), yi([
      P("eSlider")
    ], t.prototype, "eSlider", void 0), yi([
      P("eText")
    ], t.prototype, "eText", void 0), yi([
      b
    ], t.prototype, "init", null), t;
  }(Zl)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Fy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ht = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ly = (
  /** @class */
  function(n) {
    Fy(t, n);
    function t(e) {
      e === void 0 && (e = {});
      var r = n.call(this, t.getTemplate(e)) || this;
      r.suppressEnabledCheckbox = !0, r.suppressOpenCloseIcons = !1;
      var i = e.title, o = e.enabled, s = e.items, a = e.suppressEnabledCheckbox, l = e.suppressOpenCloseIcons;
      return r.title = i, r.cssIdentifier = e.cssIdentifier || "default", r.enabled = o ?? !0, r.items = s || [], r.alignItems = e.alignItems || "center", a != null && (r.suppressEnabledCheckbox = a), l != null && (r.suppressOpenCloseIcons = l), r;
    }
    return t.getTemplate = function(e) {
      var r = e.cssIdentifier || "default", i = e.direction || "vertical";
      return (
        /* html */
        '<div class="ag-group ag-' + r + `-group" role="presentation">
            <div class="ag-group-title-bar ag-` + r + `-group-title-bar ag-unselectable" ref="eTitleBar" role="button">
                <span class="ag-group-title-bar-icon ag-` + r + `-group-title-bar-icon" ref="eGroupOpenedIcon" role="presentation"></span>
                <span class="ag-group-title-bar-icon ag-` + r + `-group-title-bar-icon" ref="eGroupClosedIcon" role="presentation"></span>
                <span ref="eTitle" class="ag-group-title ag-` + r + `-group-title"></span>
            </div>
            <div ref="eToolbar" class="ag-group-toolbar ag-` + r + `-group-toolbar">
                <ag-checkbox ref="cbGroupEnabled"></ag-checkbox>
            </div>
            <div ref="eContainer" class="ag-group-container ag-group-container-` + i + " ag-" + r + `-group-container"></div>
        </div>`
      );
    }, t.prototype.postConstruct = function() {
      if (this.items.length) {
        var e = this.items;
        this.items = [], this.addItems(e);
      }
      var r = this.localeService.getLocaleTextFunc();
      this.cbGroupEnabled.setLabel(r("enabled", "Enabled")), this.title && this.setTitle(this.title), this.enabled && this.setEnabled(this.enabled), this.setAlignItems(this.alignItems), this.hideEnabledCheckbox(this.suppressEnabledCheckbox), this.hideOpenCloseIcons(this.suppressOpenCloseIcons), this.setupExpandContract(), this.refreshAriaStatus(), this.refreshChildDisplay();
    }, t.prototype.setupExpandContract = function() {
      var e = this;
      this.eGroupClosedIcon.appendChild(xe("columnSelectClosed", this.gridOptionsService, null)), this.eGroupOpenedIcon.appendChild(xe("columnSelectOpen", this.gridOptionsService, null)), this.addManagedListener(this.eTitleBar, "click", function() {
        return e.toggleGroupExpand();
      }), this.addManagedListener(this.eTitleBar, "keydown", function(r) {
        switch (r.key) {
          case _.ENTER:
          case _.SPACE:
            r.preventDefault(), e.toggleGroupExpand();
            break;
          case _.RIGHT:
          case _.LEFT:
            r.preventDefault(), e.toggleGroupExpand(r.key === _.RIGHT);
            break;
        }
      });
    }, t.prototype.refreshAriaStatus = function() {
      this.suppressOpenCloseIcons || Ue(this.eTitleBar, this.expanded);
    }, t.prototype.refreshChildDisplay = function() {
      var e = !this.suppressOpenCloseIcons;
      k(this.eToolbar, this.expanded && !this.suppressEnabledCheckbox), k(this.eGroupOpenedIcon, e && this.expanded), k(this.eGroupClosedIcon, e && !this.expanded);
    }, t.prototype.isExpanded = function() {
      return this.expanded;
    }, t.prototype.setAlignItems = function(e) {
      this.alignItems !== e && this.removeCssClass("ag-group-item-alignment-" + this.alignItems), this.alignItems = e;
      var r = "ag-group-item-alignment-" + this.alignItems;
      return this.addCssClass(r), this;
    }, t.prototype.toggleGroupExpand = function(e) {
      return this.suppressOpenCloseIcons ? (this.expanded = !0, this.refreshChildDisplay(), k(this.eContainer, !0), this) : (e = e ?? !this.expanded, this.expanded === e ? this : (this.expanded = e, this.refreshAriaStatus(), this.refreshChildDisplay(), k(this.eContainer, e), this.dispatchEvent({ type: this.expanded ? t.EVENT_EXPANDED : t.EVENT_COLLAPSED }), this));
    }, t.prototype.addItems = function(e) {
      var r = this;
      e.forEach(function(i) {
        return r.addItem(i);
      });
    }, t.prototype.addItem = function(e) {
      var r = this.eContainer, i = e instanceof W ? e.getGui() : e;
      i.classList.add("ag-group-item", "ag-" + this.cssIdentifier + "-group-item"), r.appendChild(i), this.items.push(i);
    }, t.prototype.hideItem = function(e, r) {
      var i = this.items[r];
      k(i, !e);
    }, t.prototype.setTitle = function(e) {
      return this.eTitle.innerText = e, this;
    }, t.prototype.addCssClassToTitleBar = function(e) {
      this.eTitleBar.classList.add(e);
    }, t.prototype.setEnabled = function(e, r) {
      return this.enabled = e, this.refreshDisabledStyles(), this.toggleGroupExpand(e), r || this.cbGroupEnabled.setValue(e), this;
    }, t.prototype.isEnabled = function() {
      return this.enabled;
    }, t.prototype.onEnableChange = function(e) {
      var r = this;
      return this.cbGroupEnabled.onValueChange(function(i) {
        r.setEnabled(i, !0), e(i);
      }), this;
    }, t.prototype.hideEnabledCheckbox = function(e) {
      return this.suppressEnabledCheckbox = e, this.refreshChildDisplay(), this.refreshDisabledStyles(), this;
    }, t.prototype.hideOpenCloseIcons = function(e) {
      return this.suppressOpenCloseIcons = e, e && this.toggleGroupExpand(!0), this;
    }, t.prototype.refreshDisabledStyles = function() {
      this.addOrRemoveCssClass("ag-disabled", !this.enabled), this.suppressEnabledCheckbox && !this.enabled ? (this.eTitleBar.classList.add("ag-disabled-group-title-bar"), this.eTitleBar.removeAttribute("tabindex")) : (this.eTitleBar.classList.remove("ag-disabled-group-title-bar"), this.eTitleBar.setAttribute("tabindex", "0")), this.eContainer.classList.toggle("ag-disabled-group-container", !this.enabled);
    }, t.EVENT_EXPANDED = "expanded", t.EVENT_COLLAPSED = "collapsed", ht([
      P("eTitleBar")
    ], t.prototype, "eTitleBar", void 0), ht([
      P("eGroupOpenedIcon")
    ], t.prototype, "eGroupOpenedIcon", void 0), ht([
      P("eGroupClosedIcon")
    ], t.prototype, "eGroupClosedIcon", void 0), ht([
      P("eToolbar")
    ], t.prototype, "eToolbar", void 0), ht([
      P("cbGroupEnabled")
    ], t.prototype, "cbGroupEnabled", void 0), ht([
      P("eTitle")
    ], t.prototype, "eTitle", void 0), ht([
      P("eContainer")
    ], t.prototype, "eContainer", void 0), ht([
      b
    ], t.prototype, "postConstruct", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var My = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ca = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, er;
(function(n) {
  n.TAB_GUARD = "ag-tab-guard", n.TAB_GUARD_TOP = "ag-tab-guard-top", n.TAB_GUARD_BOTTOM = "ag-tab-guard-bottom";
})(er || (er = {}));
var Iy = (
  /** @class */
  function(n) {
    My(t, n);
    function t(e) {
      var r = n.call(this) || this;
      r.skipTabGuardFocus = !1;
      var i = e.comp, o = e.eTopGuard, s = e.eBottomGuard, a = e.focusInnerElement, l = e.onFocusIn, u = e.onFocusOut, c = e.shouldStopEventPropagation, p = e.onTabKeyDown, d = e.handleKeyDown, v = e.eFocusableElement;
      return r.comp = i, r.eTopGuard = o, r.eBottomGuard = s, r.providedFocusInnerElement = a, r.eFocusableElement = v, r.providedFocusIn = l, r.providedFocusOut = u, r.providedShouldStopEventPropagation = c, r.providedOnTabKeyDown = p, r.providedHandleKeyDown = d, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.createManagedBean(new Tt(this.eFocusableElement, {
        shouldStopEventPropagation: function() {
          return e.shouldStopEventPropagation();
        },
        onTabKeyDown: function(r) {
          return e.onTabKeyDown(r);
        },
        handleKeyDown: function(r) {
          return e.handleKeyDown(r);
        },
        onFocusIn: function(r) {
          return e.onFocusIn(r);
        },
        onFocusOut: function(r) {
          return e.onFocusOut(r);
        }
      })), this.activateTabGuards(), [this.eTopGuard, this.eBottomGuard].forEach(function(r) {
        return e.addManagedListener(r, "focus", e.onFocus.bind(e));
      });
    }, t.prototype.handleKeyDown = function(e) {
      this.providedHandleKeyDown && this.providedHandleKeyDown(e);
    }, t.prototype.tabGuardsAreActive = function() {
      return !!this.eTopGuard && this.eTopGuard.hasAttribute("tabIndex");
    }, t.prototype.shouldStopEventPropagation = function() {
      return this.providedShouldStopEventPropagation ? this.providedShouldStopEventPropagation() : !1;
    }, t.prototype.activateTabGuards = function() {
      this.comp.setTabIndex(this.getGridTabIndex());
    }, t.prototype.deactivateTabGuards = function() {
      this.comp.setTabIndex();
    }, t.prototype.onFocus = function(e) {
      if (this.skipTabGuardFocus) {
        this.skipTabGuardFocus = !1;
        return;
      }
      var r = e.target === this.eBottomGuard;
      this.providedFocusInnerElement ? this.providedFocusInnerElement(r) : this.focusInnerElement(r);
    }, t.prototype.onFocusIn = function(e) {
      this.providedFocusIn && this.providedFocusIn(e) || this.deactivateTabGuards();
    }, t.prototype.onFocusOut = function(e) {
      this.providedFocusOut && this.providedFocusOut(e) || this.eFocusableElement.contains(e.relatedTarget) || this.activateTabGuards();
    }, t.prototype.onTabKeyDown = function(e) {
      var r = this;
      if (this.providedOnTabKeyDown) {
        this.providedOnTabKeyDown(e);
        return;
      }
      if (!e.defaultPrevented) {
        var i = this.tabGuardsAreActive();
        i && this.deactivateTabGuards();
        var o = this.getNextFocusableElement(e.shiftKey);
        i && setTimeout(function() {
          return r.activateTabGuards();
        }, 0), o && (o.focus(), e.preventDefault());
      }
    }, t.prototype.getGridTabIndex = function() {
      return (this.gridOptionsService.getNum("tabIndex") || 0).toString();
    }, t.prototype.focusInnerElement = function(e) {
      e === void 0 && (e = !1);
      var r = this.focusService.findFocusableElements(this.eFocusableElement);
      this.tabGuardsAreActive() && (r.splice(0, 1), r.splice(r.length - 1, 1)), r.length && r[e ? r.length - 1 : 0].focus({ preventScroll: !0 });
    }, t.prototype.getNextFocusableElement = function(e) {
      return this.focusService.findNextFocusableElement(this.eFocusableElement, !1, e);
    }, t.prototype.forceFocusOutOfContainer = function(e) {
      e === void 0 && (e = !1);
      var r = e ? this.eTopGuard : this.eBottomGuard;
      this.activateTabGuards(), this.skipTabGuardFocus = !0, r.focus();
    }, ca([
      h("focusService")
    ], t.prototype, "focusService", void 0), ca([
      b
    ], t.prototype, "postConstruct", null), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var xy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ny = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Gy = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Ny(arguments[t]));
  return n;
}, go = (
  /** @class */
  function(n) {
    xy(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.initialiseTabGuard = function(e) {
      this.eTopGuard = this.createTabGuard("top"), this.eBottomGuard = this.createTabGuard("bottom"), this.eFocusableElement = this.getFocusableElement();
      var r = [this.eTopGuard, this.eBottomGuard], i = {
        setTabIndex: function(o) {
          r.forEach(function(s) {
            return o != null ? s.setAttribute("tabIndex", o) : s.removeAttribute("tabIndex");
          });
        }
      };
      this.addTabGuards(this.eTopGuard, this.eBottomGuard), this.tabGuardCtrl = this.createManagedBean(new Iy({
        comp: i,
        eTopGuard: this.eTopGuard,
        eBottomGuard: this.eBottomGuard,
        eFocusableElement: this.eFocusableElement,
        onFocusIn: e.onFocusIn,
        onFocusOut: e.onFocusOut,
        focusInnerElement: e.focusInnerElement,
        handleKeyDown: e.handleKeyDown,
        onTabKeyDown: e.onTabKeyDown,
        shouldStopEventPropagation: e.shouldStopEventPropagation
      }));
    }, t.prototype.createTabGuard = function(e) {
      var r = document.createElement("div"), i = e === "top" ? er.TAB_GUARD_TOP : er.TAB_GUARD_BOTTOM;
      return r.classList.add(er.TAB_GUARD, i), ue(r, "presentation"), r;
    }, t.prototype.addTabGuards = function(e, r) {
      this.eFocusableElement.insertAdjacentElement("afterbegin", e), this.eFocusableElement.insertAdjacentElement("beforeend", r);
    }, t.prototype.removeAllChildrenExceptTabGuards = function() {
      var e = [this.eTopGuard, this.eBottomGuard];
      Fe(this.getFocusableElement()), this.addTabGuards.apply(this, Gy(e));
    }, t.prototype.forceFocusOutOfContainer = function(e) {
      e === void 0 && (e = !1), this.tabGuardCtrl.forceFocusOutOfContainer(e);
    }, t.prototype.appendChild = function(e, r) {
      qr(e) || (e = e.getGui());
      var i = this.eBottomGuard;
      i ? i.insertAdjacentElement("beforebegin", e) : n.prototype.appendChild.call(this, e, r);
    }, t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Hy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), to = function() {
  return to = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, to.apply(this, arguments);
}, pa = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Vy = (
  /** @class */
  function(n) {
    Hy(t, n);
    function t(e) {
      e === void 0 && (e = 1);
      var r = n.call(
        this,
        /* html */
        '<div class="ag-menu-list" role="tree"></div>'
      ) || this;
      return r.level = e, r.menuItems = [], r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.initialiseTabGuard({
        onTabKeyDown: function(r) {
          return e.onTabKeyDown(r);
        },
        handleKeyDown: function(r) {
          return e.handleKeyDown(r);
        }
      });
    }, t.prototype.onTabKeyDown = function(e) {
      var r = this.getParentComponent(), i = r && r.getGui(), o = i && i.classList.contains("ag-focus-managed");
      o || e.preventDefault(), e.shiftKey && this.closeIfIsChild(e);
    }, t.prototype.handleKeyDown = function(e) {
      switch (e.key) {
        case _.UP:
        case _.RIGHT:
        case _.DOWN:
        case _.LEFT:
          e.preventDefault(), this.handleNavKey(e.key);
          break;
        case _.ESCAPE:
          var r = this.findTopMenu();
          r && this.focusService.focusInto(r.getGui());
          break;
      }
    }, t.prototype.clearActiveItem = function() {
      this.activeMenuItem && (this.activeMenuItem.deactivate(), this.activeMenuItem = null);
    }, t.prototype.addMenuItems = function(e) {
      var r = this;
      e != null && e.forEach(function(i) {
        i === "separator" ? r.addSeparator() : typeof i == "string" ? console.warn("AG Grid: unrecognised menu item " + i) : r.addItem(i);
      });
    }, t.prototype.addItem = function(e) {
      var r = this, i = this.createManagedBean(new Rr(to(to({}, e), { isAnotherSubMenuOpen: function() {
        return r.menuItems.some(function(o) {
          return o.isSubMenuOpen();
        });
      } })));
      i.setParentComponent(this), Sl(i.getGui(), this.level), this.menuItems.push(i), this.appendChild(i.getGui()), this.addManagedListener(i, Rr.EVENT_MENU_ITEM_SELECTED, function(o) {
        r.dispatchEvent(o);
      }), this.addManagedListener(i, Rr.EVENT_MENU_ITEM_ACTIVATED, function(o) {
        r.activeMenuItem && r.activeMenuItem !== o.menuItem && r.activeMenuItem.deactivate(), r.activeMenuItem = o.menuItem;
      });
    }, t.prototype.activateFirstItem = function() {
      var e = this.menuItems.filter(function(r) {
        return !r.isDisabled();
      })[0];
      e && e.activate();
    }, t.prototype.addSeparator = function() {
      var e = (
        /* html */
        `
            <div class="ag-menu-separator" aria-hidden="true">
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
            </div>`
      );
      this.appendChild(he(e));
    }, t.prototype.findTopMenu = function() {
      var e = this.getParentComponent();
      if (!e && this instanceof t)
        return this;
      for (; ; ) {
        var r = e && e.getParentComponent && e.getParentComponent();
        if (!r || !(r instanceof t || r instanceof Rr))
          break;
        e = r;
      }
      return e instanceof t ? e : void 0;
    }, t.prototype.handleNavKey = function(e) {
      switch (e) {
        case _.UP:
        case _.DOWN:
          var r = this.findNextItem(e === _.UP);
          r && r !== this.activeMenuItem && r.activate();
          return;
      }
      var i = this.gridOptionsService.is("enableRtl") ? _.RIGHT : _.LEFT;
      e === i ? this.closeIfIsChild() : this.openChild();
    }, t.prototype.closeIfIsChild = function(e) {
      var r = this.getParentComponent();
      r && r instanceof Rr && (e && e.preventDefault(), r.closeSubMenu(), r.getGui().focus());
    }, t.prototype.openChild = function() {
      this.activeMenuItem && this.activeMenuItem.openSubMenu(!0);
    }, t.prototype.findNextItem = function(e) {
      var r = this.menuItems.filter(function(l) {
        return !l.isDisabled();
      });
      if (r.length) {
        if (!this.activeMenuItem)
          return e ? q(r) : r[0];
        e && r.reverse();
        for (var i, o = !1, s = 0; s < r.length; s++) {
          var a = r[s];
          if (!o) {
            a === this.activeMenuItem && (o = !0);
            continue;
          }
          i = a;
          break;
        }
        return i || this.activeMenuItem;
      }
    }, t.prototype.destroy = function() {
      this.clearActiveItem(), n.prototype.destroy.call(this);
    }, pa([
      h("focusService")
    ], t.prototype, "focusService", void 0), pa([
      b
    ], t.prototype, "postConstruct", null), t;
  }(go)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var By = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Wy = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, jy = (
  /** @class */
  function(n) {
    By(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.wrappedComponent = e, r.setTemplateFromElement(e.getGui()), r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.initialiseTabGuard({
        onTabKeyDown: function(r) {
          return e.onTabKeyDown(r);
        },
        handleKeyDown: function(r) {
          return e.handleKeyDown(r);
        }
      });
    }, t.prototype.handleKeyDown = function(e) {
      e.key === _.ESCAPE && this.closePanel();
    }, t.prototype.onTabKeyDown = function(e) {
      e.defaultPrevented || (this.closePanel(), e.preventDefault());
    }, t.prototype.closePanel = function() {
      var e = this.parentComponent;
      e.closeSubMenu(), setTimeout(function() {
        return e.getGui().focus();
      }, 0);
    }, Wy([
      b
    ], t.prototype, "postConstruct", null), t;
  }(go)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var ky = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), da = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Rr = (
  /** @class */
  function(n) {
    ky(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.params = e, r.isActive = !1, r.subMenuIsOpen = !1, r.setTemplate(
        /* html */
        '<div class="' + r.getClassName() + '" tabindex="-1" role="treeitem"></div>'
      ), r;
    }
    return t.prototype.init = function() {
      var e = this;
      this.addIcon(), this.addName(), this.addShortcut(), this.addSubMenu(), this.addTooltip();
      var r = this.getGui();
      this.params.disabled ? (this.addCssClass(this.getClassName("disabled")), Jn(r, !0)) : (this.addGuiEventListener("click", function(i) {
        return e.onItemSelected(i);
      }), this.addGuiEventListener("keydown", function(i) {
        (i.key === _.ENTER || i.key === _.SPACE) && (i.preventDefault(), e.onItemSelected(i));
      }), this.addGuiEventListener("mousedown", function(i) {
        i.stopPropagation(), i.preventDefault();
      }), this.addGuiEventListener("mouseenter", function() {
        return e.onMouseEnter();
      }), this.addGuiEventListener("mouseleave", function() {
        return e.onMouseLeave();
      })), this.params.cssClasses && this.params.cssClasses.forEach(function(i) {
        return e.addCssClass(i);
      });
    }, t.prototype.isDisabled = function() {
      return !!this.params.disabled;
    }, t.prototype.openSubMenu = function(e) {
      var r = this;
      if (e === void 0 && (e = !1), this.closeSubMenu(), !!this.params.subMenu) {
        var i = he(
          /* html */
          '<div class="ag-menu" role="presentation"></div>'
        ), o;
        if (this.params.subMenu instanceof Array) {
          var s = yl(this.getGui()), a = isNaN(s) ? 1 : s + 1, l = this.createBean(new Vy(a));
          l.setParentComponent(this), l.addMenuItems(this.params.subMenu), i.appendChild(l.getGui()), this.addManagedListener(l, t.EVENT_MENU_ITEM_SELECTED, function(w) {
            return r.dispatchEvent(w);
          }), l.addGuiEventListener("mouseenter", function() {
            return r.cancelDeactivate();
          }), o = function() {
            return r.destroyBean(l);
          }, e && setTimeout(function() {
            return l.activateFirstItem();
          }, 0);
        } else {
          var u = this.params.subMenu, c = this.createBean(new jy(u));
          c.setParentComponent(this);
          var p = c.getGui(), d = "mouseenter", v = function() {
            return r.cancelDeactivate();
          };
          p.addEventListener(d, v), o = function() {
            return p.removeEventListener(d, v);
          }, i.appendChild(p), u.afterGuiAttached && setTimeout(function() {
            return u.afterGuiAttached();
          }, 0);
        }
        var f = this.getGui(), y = this.popupService.positionPopupForMenu.bind(this.popupService, { eventSource: f, ePopup: i }), C = this.localeService.getLocaleTextFunc(), m = this.popupService.addPopup({
          modal: !0,
          eChild: i,
          positionCallback: y,
          anchorToElement: f,
          ariaLabel: C("ariaLabelSubMenu", "SubMenu")
        });
        this.subMenuIsOpen = !0, Ue(f, !0), this.hideSubMenu = function() {
          m && m.hideFunc(), r.subMenuIsOpen = !1, Ue(f, !1), o();
        };
      }
    }, t.prototype.closeSubMenu = function() {
      this.hideSubMenu && (this.hideSubMenu(), this.hideSubMenu = null, Ue(this.getGui(), !1));
    }, t.prototype.isSubMenuOpen = function() {
      return this.subMenuIsOpen;
    }, t.prototype.activate = function(e) {
      var r = this;
      this.cancelActivate(), !this.params.disabled && (this.isActive = !0, this.addCssClass(this.getClassName("active")), this.getGui().focus(), e && this.params.subMenu && window.setTimeout(function() {
        r.isAlive() && r.isActive && r.openSubMenu();
      }, 300), this.onItemActivated());
    }, t.prototype.deactivate = function() {
      this.cancelDeactivate(), this.removeCssClass(this.getClassName("active")), this.isActive = !1, this.subMenuIsOpen && this.hideSubMenu();
    }, t.prototype.addIcon = function() {
      if (!(!this.params.checked && !this.params.icon && this.params.isCompact)) {
        var e = he(
          /* html */
          '<span ref="eIcon" class="' + this.getClassName("part") + " " + this.getClassName("icon") + '" role="presentation"></span>'
        );
        this.params.checked ? e.appendChild(oe("check", this.gridOptionsService)) : this.params.icon && (qr(this.params.icon) ? e.appendChild(this.params.icon) : typeof this.params.icon == "string" ? e.innerHTML = this.params.icon : console.warn("AG Grid: menu item icon must be DOM node or string")), this.getGui().appendChild(e);
      }
    }, t.prototype.addName = function() {
      if (!(!this.params.name && this.params.isCompact)) {
        var e = he(
          /* html */
          '<span ref="eName" class="' + this.getClassName("part") + " " + this.getClassName("text") + '">' + (this.params.name || "") + "</span>"
        );
        this.getGui().appendChild(e);
      }
    }, t.prototype.addTooltip = function() {
      this.params.tooltip && (this.tooltip = this.params.tooltip, this.gridOptionsService.is("enableBrowserTooltips") ? this.getGui().setAttribute("title", this.tooltip) : this.createManagedBean(new ys(this)));
    }, t.prototype.getTooltipParams = function() {
      return {
        location: "menu",
        value: this.tooltip
      };
    }, t.prototype.addShortcut = function() {
      if (!(!this.params.shortcut && this.params.isCompact)) {
        var e = he(
          /* html */
          '<span ref="eShortcut" class="' + this.getClassName("part") + " " + this.getClassName("shortcut") + '">' + (this.params.shortcut || "") + "</span>"
        );
        this.getGui().appendChild(e);
      }
    }, t.prototype.addSubMenu = function() {
      if (!(!this.params.subMenu && this.params.isCompact)) {
        var e = he(
          /* html */
          '<span ref="ePopupPointer" class="' + this.getClassName("part") + " " + this.getClassName("popup-pointer") + '"></span>'
        ), r = this.getGui();
        if (this.params.subMenu) {
          var i = this.gridOptionsService.is("enableRtl") ? "smallLeft" : "smallRight";
          Ue(r, !1), e.appendChild(oe(i, this.gridOptionsService));
        }
        r.appendChild(e);
      }
    }, t.prototype.onItemSelected = function(e) {
      if (this.params.action ? this.params.action() : this.openSubMenu(e && e.type === "keydown"), !(this.params.subMenu && !this.params.action)) {
        var r = {
          type: t.EVENT_MENU_ITEM_SELECTED,
          action: this.params.action,
          checked: this.params.checked,
          cssClasses: this.params.cssClasses,
          disabled: this.params.disabled,
          icon: this.params.icon,
          name: this.params.name,
          shortcut: this.params.shortcut,
          subMenu: this.params.subMenu,
          tooltip: this.params.tooltip,
          event: e
        };
        this.dispatchEvent(r);
      }
    }, t.prototype.onItemActivated = function() {
      var e = {
        type: t.EVENT_MENU_ITEM_ACTIVATED,
        menuItem: this
      };
      this.dispatchEvent(e);
    }, t.prototype.cancelActivate = function() {
      this.activateTimeoutId && (window.clearTimeout(this.activateTimeoutId), this.activateTimeoutId = 0);
    }, t.prototype.cancelDeactivate = function() {
      this.deactivateTimeoutId && (window.clearTimeout(this.deactivateTimeoutId), this.deactivateTimeoutId = 0);
    }, t.prototype.onMouseEnter = function() {
      var e = this;
      this.cancelDeactivate(), this.params.isAnotherSubMenuOpen() ? this.activateTimeoutId = window.setTimeout(function() {
        return e.activate(!0);
      }, t.ACTIVATION_DELAY) : this.activate(!0);
    }, t.prototype.onMouseLeave = function() {
      var e = this;
      this.cancelActivate(), this.isSubMenuOpen() ? this.deactivateTimeoutId = window.setTimeout(function() {
        return e.deactivate();
      }, t.ACTIVATION_DELAY) : this.deactivate();
    }, t.prototype.getClassName = function(e) {
      var r = this.params.isCompact ? "ag-compact-menu-option" : "ag-menu-option";
      return e ? r + "-" + e : r;
    }, t.EVENT_MENU_ITEM_SELECTED = "menuItemSelected", t.EVENT_MENU_ITEM_ACTIVATED = "menuItemActivated", t.ACTIVATION_DELAY = 80, da([
      h("popupService")
    ], t.prototype, "popupService", void 0), da([
      b
    ], t.prototype, "init", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Uy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Or = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, _u = (
  /** @class */
  function(n) {
    Uy(t, n);
    function t(e) {
      var r = n.call(this, t.getTemplate(e)) || this;
      return r.closable = !0, r.config = e, r;
    }
    return t.getTemplate = function(e) {
      var r = e && e.cssIdentifier || "default";
      return (
        /* html */
        '<div class="ag-panel ag-' + r + `-panel" tabindex="-1">
            <div ref="eTitleBar" class="ag-panel-title-bar ag-` + r + `-panel-title-bar ag-unselectable">
                <span ref="eTitle" class="ag-panel-title-bar-title ag-` + r + `-panel-title-bar-title"></span>
                <div ref="eTitleBarButtons" class="ag-panel-title-bar-buttons ag-` + r + `-panel-title-bar-buttons"></div>
            </div>
            <div ref="eContentWrapper" class="ag-panel-content-wrapper ag-` + r + `-panel-content-wrapper"></div>
        </div>`
      );
    }, t.prototype.postConstruct = function() {
      var e = this, r = this.config, i = r.component, o = r.closable, s = r.hideTitleBar, a = r.title, l = r.minWidth, u = l === void 0 ? 250 : l, c = r.width, p = r.minHeight, d = p === void 0 ? 250 : p, v = r.height, f = r.centered, y = r.popup, C = r.x, m = r.y;
      this.positionableFeature = new Jl(this.getGui(), {
        minWidth: u,
        width: c,
        minHeight: d,
        height: v,
        centered: f,
        x: C,
        y: m,
        popup: y,
        calculateTopBuffer: function() {
          return e.positionableFeature.getHeight() - e.getBodyHeight();
        }
      }), this.createManagedBean(this.positionableFeature);
      var w = this.getGui();
      i && this.setBodyComponent(i), s ? k(this.eTitleBar, !1) : (a && this.setTitle(a), this.setClosable(o ?? this.closable)), this.addManagedListener(this.eTitleBar, "mousedown", function(E) {
        var R = e.gridOptionsService.getDocument();
        if (w.contains(E.relatedTarget) || w.contains(R.activeElement) || e.eTitleBarButtons.contains(E.target)) {
          E.preventDefault();
          return;
        }
        var D = e.eContentWrapper.querySelector("button, [href], input, select, textarea, [tabindex]");
        D && D.focus();
      }), !(y && this.positionableFeature.isPositioned()) && (this.renderComponent && this.renderComponent(), this.positionableFeature.initialisePosition(), this.eContentWrapper.style.height = "0");
    }, t.prototype.renderComponent = function() {
      var e = this, r = this.getGui();
      r.focus(), this.close = function() {
        r.parentElement.removeChild(r), e.destroy();
      };
    }, t.prototype.getHeight = function() {
      return this.positionableFeature.getHeight();
    }, t.prototype.setHeight = function(e) {
      this.positionableFeature.setHeight(e);
    }, t.prototype.getWidth = function() {
      return this.positionableFeature.getWidth();
    }, t.prototype.setWidth = function(e) {
      this.positionableFeature.setWidth(e);
    }, t.prototype.setClosable = function(e) {
      if (e !== this.closable && (this.closable = e), e) {
        var r = this.closeButtonComp = new W(t.CLOSE_BTN_TEMPLATE);
        this.getContext().createBean(r);
        var i = r.getGui(), o = oe("close", this.gridOptionsService);
        o.classList.add("ag-panel-title-bar-button-icon"), i.appendChild(o), this.addTitleBarButton(r), r.addManagedListener(i, "click", this.onBtClose.bind(this));
      } else if (this.closeButtonComp) {
        var i = this.closeButtonComp.getGui();
        i.parentElement.removeChild(i), this.closeButtonComp = this.destroyBean(this.closeButtonComp);
      }
    }, t.prototype.setBodyComponent = function(e) {
      e.setParentComponent(this), this.eContentWrapper.appendChild(e.getGui());
    }, t.prototype.addTitleBarButton = function(e, r) {
      var i = this.eTitleBarButtons, o = i.children, s = o.length;
      r == null && (r = s), r = Math.max(0, Math.min(r, s)), e.addCssClass("ag-panel-title-bar-button");
      var a = e.getGui();
      r === 0 ? i.insertAdjacentElement("afterbegin", a) : r === s ? i.insertAdjacentElement("beforeend", a) : o[r - 1].insertAdjacentElement("afterend", a), e.setParentComponent(this);
    }, t.prototype.getBodyHeight = function() {
      return $r(this.eContentWrapper);
    }, t.prototype.getBodyWidth = function() {
      return po(this.eContentWrapper);
    }, t.prototype.setTitle = function(e) {
      this.eTitle.innerText = e;
    }, t.prototype.onBtClose = function() {
      this.close();
    }, t.prototype.destroy = function() {
      this.closeButtonComp && (this.closeButtonComp = this.destroyBean(this.closeButtonComp));
      var e = this.getGui();
      e && e.offsetParent && this.close(), n.prototype.destroy.call(this);
    }, t.CLOSE_BTN_TEMPLATE = '<div class="ag-button"></div>', Or([
      P("eContentWrapper")
    ], t.prototype, "eContentWrapper", void 0), Or([
      P("eTitleBar")
    ], t.prototype, "eTitleBar", void 0), Or([
      P("eTitleBarButtons")
    ], t.prototype, "eTitleBarButtons", void 0), Or([
      P("eTitle")
    ], t.prototype, "eTitle", void 0), Or([
      b
    ], t.prototype, "postConstruct", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var zy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ro = function() {
  return ro = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, ro.apply(this, arguments);
}, Ky = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, $y = (
  /** @class */
  function(n) {
    zy(t, n);
    function t(e) {
      var r = n.call(this, ro(ro({}, e), { popup: !0 })) || this;
      return r.isMaximizable = !1, r.isMaximized = !1, r.maximizeListeners = [], r.resizeListenerDestroy = null, r.lastPosition = {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      }, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r = this.getGui(), i = this.config, o = i.movable, s = i.resizable, a = i.maximizable;
      this.addCssClass("ag-dialog"), n.prototype.postConstruct.call(this), this.addManagedListener(r, "focusin", function(l) {
        r.contains(l.relatedTarget) || e.popupService.bringPopupToFront(r);
      }), o && this.setMovable(o), a && this.setMaximizable(a), s && this.setResizable(s);
    }, t.prototype.renderComponent = function() {
      var e = this.getGui(), r = this.config, i = r.alwaysOnTop, o = r.modal, s = r.title, a = this.localeService.getLocaleTextFunc(), l = this.popupService.addPopup({
        modal: o,
        eChild: e,
        closeOnEsc: !0,
        closedCallback: this.destroy.bind(this),
        alwaysOnTop: i,
        ariaLabel: s || a("ariaLabelDialog", "Dialog")
      });
      l && (this.close = l.hideFunc);
    }, t.prototype.toggleMaximize = function() {
      var e = this.positionableFeature.getPosition();
      if (this.isMaximized) {
        var r = this.lastPosition, i = r.x, o = r.y, s = r.width, a = r.height;
        this.setWidth(s), this.setHeight(a), this.positionableFeature.offsetElement(i, o);
      } else
        this.lastPosition.width = this.getWidth(), this.lastPosition.height = this.getHeight(), this.lastPosition.x = e.x, this.lastPosition.y = e.y, this.positionableFeature.offsetElement(0, 0), this.setHeight("100%"), this.setWidth("100%");
      this.isMaximized = !this.isMaximized, this.refreshMaximizeIcon();
    }, t.prototype.refreshMaximizeIcon = function() {
      k(this.maximizeIcon, !this.isMaximized), k(this.minimizeIcon, this.isMaximized);
    }, t.prototype.clearMaximizebleListeners = function() {
      this.maximizeListeners.length && (this.maximizeListeners.forEach(function(e) {
        return e();
      }), this.maximizeListeners.length = 0), this.resizeListenerDestroy && (this.resizeListenerDestroy(), this.resizeListenerDestroy = null);
    }, t.prototype.destroy = function() {
      this.maximizeButtonComp = this.destroyBean(this.maximizeButtonComp), this.clearMaximizebleListeners(), n.prototype.destroy.call(this);
    }, t.prototype.setResizable = function(e) {
      this.positionableFeature.setResizable(e);
    }, t.prototype.setMovable = function(e) {
      this.positionableFeature.setMovable(e, this.eTitleBar);
    }, t.prototype.setMaximizable = function(e) {
      var r = this;
      if (!e) {
        this.clearMaximizebleListeners(), this.maximizeButtonComp && (this.destroyBean(this.maximizeButtonComp), this.maximizeButtonComp = this.maximizeIcon = this.minimizeIcon = void 0);
        return;
      }
      var i = this.eTitleBar;
      if (!(!i || e === this.isMaximizable)) {
        var o = this.buildMaximizeAndMinimizeElements();
        this.refreshMaximizeIcon(), o.addManagedListener(o.getGui(), "click", this.toggleMaximize.bind(this)), this.addTitleBarButton(o, 0), this.maximizeListeners.push(this.addManagedListener(i, "dblclick", this.toggleMaximize.bind(this))), this.resizeListenerDestroy = this.addManagedListener(this, "resize", function() {
          r.isMaximized = !1, r.refreshMaximizeIcon();
        });
      }
    }, t.prototype.buildMaximizeAndMinimizeElements = function() {
      var e = this.maximizeButtonComp = this.createBean(new W(
        /* html */
        '<div class="ag-dialog-button"></span>'
      )), r = e.getGui();
      return this.maximizeIcon = oe("maximize", this.gridOptionsService), r.appendChild(this.maximizeIcon), this.maximizeIcon.classList.add("ag-panel-title-bar-button-icon"), this.minimizeIcon = oe("minimize", this.gridOptionsService), r.appendChild(this.minimizeIcon), this.minimizeIcon.classList.add("ag-panel-title-bar-button-icon"), e;
    }, Ky([
      h("popupService")
    ], t.prototype, "popupService", void 0), t;
  }(_u)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Yy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Nr = function() {
  return Nr = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Nr.apply(this, arguments);
}, Ke = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, qy = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Qy = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(qy(arguments[t]));
  return n;
}, Gr = (
  /** @class */
  function(n) {
    Yy(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    e = t, t.addKeyboardModeEvents = function(r, i) {
      var o = e.instancesMonitored.get(r);
      o && o.length > 0 ? o.indexOf(i) === -1 && o.push(i) : (e.instancesMonitored.set(r, [i]), r.addEventListener("keydown", e.toggleKeyboardMode), r.addEventListener("mousedown", e.toggleKeyboardMode));
    }, t.removeKeyboardModeEvents = function(r, i) {
      var o = e.instancesMonitored.get(r), s = [];
      o && o.length && (s = Qy(o).filter(function(a) {
        return a !== i;
      }), e.instancesMonitored.set(r, s)), s.length === 0 && (r.removeEventListener("keydown", e.toggleKeyboardMode), r.removeEventListener("mousedown", e.toggleKeyboardMode));
    }, t.toggleKeyboardMode = function(r) {
      var i = e.keyboardModeActive, o = r.type === "keydown";
      if (!(o && (r.ctrlKey || r.metaKey || r.altKey)) && !(i && o || !i && !o)) {
        e.keyboardModeActive = o;
        var s = r.target.ownerDocument;
        if (s) {
          var a = e.instancesMonitored.get(s);
          a && a.forEach(function(l) {
            l.dispatchEvent({ type: o ? g.EVENT_KEYBOARD_FOCUS : g.EVENT_MOUSE_FOCUS });
          });
        }
      }
    }, t.prototype.init = function() {
      var r = this, i = this.clearFocusedCell.bind(this);
      this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_MODE_CHANGED, i), this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverythingChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_GROUP_OPENED, i), this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, i), this.ctrlsService.whenReady(function(o) {
        r.gridCtrl = o.gridCtrl;
        var s = r.gridOptionsService.getDocument();
        e.addKeyboardModeEvents(s, r.gridCtrl), r.addDestroyFunc(function() {
          return r.unregisterGridCompController(r.gridCtrl);
        });
      });
    }, t.prototype.unregisterGridCompController = function(r) {
      var i = this.gridOptionsService.getDocument();
      e.removeKeyboardModeEvents(i, r);
    }, t.prototype.onColumnEverythingChanged = function() {
      if (this.focusedCellPosition) {
        var r = this.focusedCellPosition.column, i = this.columnModel.getGridColumn(r.getId());
        r !== i && this.clearFocusedCell();
      }
    }, t.prototype.isKeyboardMode = function() {
      return e.keyboardModeActive;
    }, t.prototype.getFocusCellToUseAfterRefresh = function() {
      var r = this.gridOptionsService.getDocument();
      return this.gridOptionsService.is("suppressFocusAfterRefresh") || !this.focusedCellPosition || this.isDomDataMissingInHierarchy(r.activeElement, Nt.DOM_DATA_KEY_ROW_CTRL) ? null : this.focusedCellPosition;
    }, t.prototype.getFocusHeaderToUseAfterRefresh = function() {
      var r = this.gridOptionsService.getDocument();
      return this.gridOptionsService.is("suppressFocusAfterRefresh") || !this.focusedHeaderPosition || this.isDomDataMissingInHierarchy(r.activeElement, vo.DOM_DATA_KEY_HEADER_CTRL) ? null : this.focusedHeaderPosition;
    }, t.prototype.isDomDataMissingInHierarchy = function(r, i) {
      for (var o = r; o; ) {
        var s = this.gridOptionsService.getDomData(o, i);
        if (s)
          return !1;
        o = o.parentNode;
      }
      return !0;
    }, t.prototype.getFocusedCell = function() {
      return this.focusedCellPosition;
    }, t.prototype.getFocusEventParams = function() {
      var r = this.focusedCellPosition, i = r.rowIndex, o = r.rowPinned, s = r.column, a = {
        rowIndex: i,
        rowPinned: o,
        column: s,
        isFullWidthCell: !1
      }, l = this.rowRenderer.getRowByPosition({ rowIndex: i, rowPinned: o });
      return l && (a.isFullWidthCell = l.isFullWidth()), a;
    }, t.prototype.clearFocusedCell = function() {
      if (this.focusedCellPosition != null) {
        var r = Nr({ type: g.EVENT_CELL_FOCUS_CLEARED }, this.getFocusEventParams());
        this.focusedCellPosition = null, this.eventService.dispatchEvent(r);
      }
    }, t.prototype.setFocusedCell = function(r) {
      var i = r.column, o = r.rowIndex, s = r.rowPinned, a = r.forceBrowserFocus, l = a === void 0 ? !1 : a, u = r.preventScrollOnBrowserFocus, c = u === void 0 ? !1 : u, p = this.columnModel.getGridColumn(i);
      if (!p) {
        this.focusedCellPosition = null;
        return;
      }
      this.focusedCellPosition = p ? {
        rowIndex: o,
        rowPinned: wt(s),
        column: p
      } : null;
      var d = Nr(Nr({ type: g.EVENT_CELL_FOCUSED }, this.getFocusEventParams()), {
        forceBrowserFocus: l,
        preventScrollOnBrowserFocus: c,
        floating: null
      });
      this.eventService.dispatchEvent(d);
    }, t.prototype.isCellFocused = function(r) {
      return this.focusedCellPosition == null ? !1 : this.focusedCellPosition.column === r.column && this.isRowFocused(r.rowIndex, r.rowPinned);
    }, t.prototype.isRowNodeFocused = function(r) {
      return this.isRowFocused(r.rowIndex, r.rowPinned);
    }, t.prototype.isHeaderWrapperFocused = function(r) {
      if (this.focusedHeaderPosition == null)
        return !1;
      var i = r.getColumnGroupChild(), o = r.getRowIndex(), s = r.getPinned(), a = this.focusedHeaderPosition, l = a.column, u = a.headerRowIndex;
      return i === l && o === u && s == l.getPinned();
    }, t.prototype.clearFocusedHeader = function() {
      this.focusedHeaderPosition = null;
    }, t.prototype.getFocusedHeader = function() {
      return this.focusedHeaderPosition;
    }, t.prototype.setFocusedHeader = function(r, i) {
      this.focusedHeaderPosition = { headerRowIndex: r, column: i };
    }, t.prototype.focusHeaderPosition = function(r) {
      var i = r.direction, o = r.fromTab, s = r.allowUserOverride, a = r.event, l = r.headerPosition;
      if (s) {
        var u = this.getFocusedHeader(), c = this.headerNavigationService.getHeaderRowCount();
        if (o) {
          var p = this.gridOptionsService.getCallback("tabToNextHeader");
          if (p) {
            var d = {
              backwards: i === "Before",
              previousHeaderPosition: u,
              nextHeaderPosition: l,
              headerRowCount: c
            };
            l = p(d);
          }
        } else {
          var p = this.gridOptionsService.getCallback("navigateToNextHeader");
          if (p && a) {
            var v = {
              key: a.key,
              previousHeaderPosition: u,
              nextHeaderPosition: l,
              headerRowCount: c,
              event: a
            };
            l = p(v);
          }
        }
      }
      if (!l)
        return !1;
      if (l.headerRowIndex === -1)
        return this.focusGridView(l.column);
      this.headerNavigationService.scrollToColumn(l.column, i);
      var f = this.ctrlsService.getHeaderRowContainerCtrl(l.column.getPinned()), y = f.focusHeader(l.headerRowIndex, l.column, a);
      return y;
    }, t.prototype.focusFirstHeader = function() {
      var r = this.columnModel.getAllDisplayedColumns()[0];
      return r ? (r.getParent() && (r = this.columnModel.getColumnGroupAtLevel(r, 0)), this.focusHeaderPosition({
        headerPosition: { headerRowIndex: 0, column: r }
      })) : !1;
    }, t.prototype.focusLastHeader = function(r) {
      var i = this.headerNavigationService.getHeaderRowCount() - 1, o = q(this.columnModel.getAllDisplayedColumns());
      return this.focusHeaderPosition({
        headerPosition: { headerRowIndex: i, column: o },
        event: r
      });
    }, t.prototype.isAnyCellFocused = function() {
      return !!this.focusedCellPosition;
    }, t.prototype.isRowFocused = function(r, i) {
      return this.focusedCellPosition == null ? !1 : this.focusedCellPosition.rowIndex === r && this.focusedCellPosition.rowPinned === wt(i);
    }, t.prototype.findFocusableElements = function(r, i, o) {
      o === void 0 && (o = !1);
      var s = Nl, a = as;
      i && (a += ", " + i), o && (a += ', [tabindex="-1"]');
      var l = Array.prototype.slice.apply(r.querySelectorAll(s)), u = Array.prototype.slice.apply(r.querySelectorAll(a));
      if (!u.length)
        return l;
      var c = function(p, d) {
        return p.filter(function(v) {
          return d.indexOf(v) === -1;
        });
      };
      return c(l, u);
    }, t.prototype.focusInto = function(r, i, o) {
      i === void 0 && (i = !1), o === void 0 && (o = !1);
      var s = this.findFocusableElements(r, null, o), a = i ? q(s) : s[0];
      return a ? (a.focus({ preventScroll: !0 }), !0) : !1;
    }, t.prototype.findFocusableElementBeforeTabGuard = function(r, i) {
      if (!i)
        return null;
      var o = this.findFocusableElements(r), s = o.indexOf(i);
      if (s === -1)
        return null;
      for (var a = -1, l = s - 1; l >= 0; l--)
        if (o[l].classList.contains(er.TAB_GUARD_TOP)) {
          a = l;
          break;
        }
      return a <= 0 ? null : o[a - 1];
    }, t.prototype.findNextFocusableElement = function(r, i, o) {
      r === void 0 && (r = this.eGridDiv);
      var s = this.findFocusableElements(r, i ? ':not([tabindex="-1"])' : null), a = this.gridOptionsService.getDocument(), l = a.activeElement, u;
      i ? u = s.findIndex(function(p) {
        return p.contains(l);
      }) : u = s.indexOf(l);
      var c = u + (o ? -1 : 1);
      return c < 0 || c >= s.length ? null : s[c];
    }, t.prototype.isTargetUnderManagedComponent = function(r, i) {
      if (!i)
        return !1;
      var o = r.querySelectorAll("." + Tt.FOCUS_MANAGED_CLASS);
      if (!o.length)
        return !1;
      for (var s = 0; s < o.length; s++)
        if (o[s].contains(i))
          return !0;
      return !1;
    }, t.prototype.findTabbableParent = function(r, i) {
      i === void 0 && (i = 5);
      for (var o = 0; r && Bi(r) === null && ++o <= i; )
        r = r.parentElement;
      return Bi(r) === null ? null : r;
    }, t.prototype.focusGridView = function(r, i) {
      if (this.gridOptionsService.is("suppressCellFocus"))
        return i ? this.focusLastHeader() : this.focusNextGridCoreContainer(!1);
      var o = i ? this.rowPositionUtils.getLastRow() : this.rowPositionUtils.getFirstRow();
      if (!o)
        return !1;
      var s = o.rowIndex, a = o.rowPinned, l = this.getFocusedHeader();
      if (!r && l && (r = l.column), s == null || !r)
        return !1;
      if (this.navigationService.ensureCellVisible({ rowIndex: s, column: r, rowPinned: a }), this.setFocusedCell({
        rowIndex: s,
        column: r,
        rowPinned: wt(a),
        forceBrowserFocus: !0
      }), this.rangeService) {
        var u = { rowIndex: s, rowPinned: a, column: r };
        this.rangeService.setRangeToCell(u);
      }
      return !0;
    }, t.prototype.focusNextGridCoreContainer = function(r, i) {
      return i === void 0 && (i = !1), !i && this.gridCtrl.focusNextInnerContainer(r) ? !0 : ((i || !r && !this.gridCtrl.isDetailGrid()) && this.gridCtrl.forceFocusOutOfContainer(r), !1);
    };
    var e;
    return t.AG_KEYBOARD_FOCUS = "ag-keyboard-focus", t.keyboardModeActive = !1, t.instancesMonitored = /* @__PURE__ */ new Map(), Ke([
      h("eGridDiv")
    ], t.prototype, "eGridDiv", void 0), Ke([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Ke([
      h("headerNavigationService")
    ], t.prototype, "headerNavigationService", void 0), Ke([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), Ke([
      h("rowPositionUtils")
    ], t.prototype, "rowPositionUtils", void 0), Ke([
      Y("rangeService")
    ], t.prototype, "rangeService", void 0), Ke([
      h("navigationService")
    ], t.prototype, "navigationService", void 0), Ke([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Ke([
      b
    ], t.prototype, "init", null), t = e = Ke([
      A("focusService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Xy = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Tr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Jy = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Zy = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Jy(arguments[t]));
  return n;
}, yt;
(function(n) {
  n[n.vertical = 0] = "vertical", n[n.horizontal = 1] = "horizontal";
})(yt || (yt = {}));
var eC = 0, tC = (
  /** @class */
  function(n) {
    Xy(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.popupList = [], r;
    }
    e = t, t.prototype.postConstruct = function() {
      var r = this;
      this.ctrlsService.whenReady(function(i) {
        r.gridCtrl = i.gridCtrl, r.addManagedListener(r.gridCtrl, g.EVENT_KEYBOARD_FOCUS, function() {
          r.popupList.forEach(function(o) {
            return o.element.classList.add(Gr.AG_KEYBOARD_FOCUS);
          });
        }), r.addManagedListener(r.gridCtrl, g.EVENT_MOUSE_FOCUS, function() {
          r.popupList.forEach(function(o) {
            return o.element.classList.remove(Gr.AG_KEYBOARD_FOCUS);
          });
        });
      });
    }, t.prototype.getPopupParent = function() {
      var r = this.gridOptionsService.get("popupParent");
      return r || this.gridCtrl.getGui();
    }, t.prototype.positionPopupForMenu = function(r) {
      var i = r.eventSource.getBoundingClientRect(), o = this.getParentRect(), s = this.keepXYWithinBounds(r.ePopup, i.top - o.top, yt.vertical), a = r.ePopup.clientWidth > 0 ? r.ePopup.clientWidth : 200;
      r.ePopup.style.minWidth = a + "px";
      var l = o.right - o.left, u = l - a, c;
      this.gridOptionsService.is("enableRtl") ? (c = d(), c < 0 && (c = p()), c > u && (c = 0)) : (c = p(), c > u && (c = d()), c < 0 && (c = 0)), r.ePopup.style.left = c + "px", r.ePopup.style.top = s + "px";
      function p() {
        return i.right - o.left - 2;
      }
      function d() {
        return i.left - o.left - a;
      }
    }, t.prototype.positionPopupUnderMouseEvent = function(r) {
      var i = this, o = r.ePopup, s = r.nudgeX, a = r.nudgeY, l = r.skipObserver;
      this.positionPopup({
        ePopup: o,
        nudgeX: s,
        nudgeY: a,
        keepWithinBounds: !0,
        skipObserver: l,
        updatePosition: function() {
          return i.calculatePointerAlign(r.mouseEvent);
        },
        postProcessCallback: function() {
          return i.callPostProcessPopup(r.type, r.ePopup, null, r.mouseEvent, r.column, r.rowNode);
        }
      });
    }, t.prototype.calculatePointerAlign = function(r) {
      var i = this.getParentRect();
      return {
        x: r.clientX - i.left,
        y: r.clientY - i.top
      };
    }, t.prototype.positionPopupByComponent = function(r) {
      var i = this, o = r.eventSource.getBoundingClientRect(), s = r.alignSide || "left", a = r.position || "over", l = this.getParentRect(), u = function() {
        var c = o.left - l.left;
        s === "right" && (c -= r.ePopup.offsetWidth - o.width);
        var p = a === "over" ? o.top - l.top : o.top - l.top + o.height;
        return { x: c, y: p };
      };
      this.positionPopup({
        ePopup: r.ePopup,
        nudgeX: r.nudgeX,
        nudgeY: r.nudgeY,
        keepWithinBounds: r.keepWithinBounds,
        updatePosition: u,
        postProcessCallback: function() {
          return i.callPostProcessPopup(r.type, r.ePopup, r.eventSource, null, r.column, r.rowNode);
        }
      });
    }, t.prototype.callPostProcessPopup = function(r, i, o, s, a, l) {
      var u = this.gridOptionsService.getCallback("postProcessPopup");
      if (u) {
        var c = {
          column: a,
          rowNode: l,
          ePopup: i,
          type: r,
          eventSource: o,
          mouseEvent: s
        };
        u(c);
      }
    }, t.prototype.positionPopup = function(r) {
      var i = this, o = r.ePopup, s = r.keepWithinBounds, a = r.nudgeX, l = r.nudgeY, u = r.skipObserver, c = r.updatePosition, p = { width: 0, height: 0 }, d = function(f) {
        f === void 0 && (f = !1);
        var y = c(), C = y.x, m = y.y;
        f && o.clientWidth === p.width && o.clientHeight === p.height || (p.width = o.clientWidth, p.height = o.clientHeight, a && (C += a), l && (m += l), s && (C = i.keepXYWithinBounds(o, C, yt.horizontal), m = i.keepXYWithinBounds(o, m, yt.vertical)), o.style.left = C + "px", o.style.top = m + "px", r.postProcessCallback && r.postProcessCallback());
      };
      if (d(), !u) {
        var v = this.resizeObserverService.observeResize(o, function() {
          return d(!0);
        });
        setTimeout(function() {
          return v();
        }, e.WAIT_FOR_POPUP_CONTENT_RESIZE);
      }
    }, t.prototype.getActivePopups = function() {
      return this.popupList.map(function(r) {
        return r.element;
      });
    }, t.prototype.getPopupList = function() {
      return this.popupList;
    }, t.prototype.getParentRect = function() {
      var r = this.gridOptionsService.getDocument(), i = this.getPopupParent();
      i === r.body ? i = r.documentElement : getComputedStyle(i).position === "static" && (i = i.offsetParent);
      var o = getComputedStyle(i), s = i.getBoundingClientRect();
      return {
        top: s.top + parseFloat(o.borderTopWidth) || 0,
        left: s.left + parseFloat(o.borderLeftWidth) || 0,
        right: s.right + parseFloat(o.borderRightWidth) || 0,
        bottom: s.bottom + parseFloat(o.borderBottomWidth) || 0
      };
    }, t.prototype.keepXYWithinBounds = function(r, i, o) {
      var s = o === yt.vertical, a = s ? "clientHeight" : "clientWidth", l = s ? "top" : "left", u = s ? "offsetHeight" : "offsetWidth", c = s ? "scrollTop" : "scrollLeft", p = this.gridOptionsService.getDocument(), d = p.documentElement, v = this.getPopupParent(), f = v.getBoundingClientRect(), y = p.documentElement.getBoundingClientRect(), C = v === p.body, m = r[u], w = s ? us : ho, E = C ? w(d) + d[c] : v[a];
      C && (E -= Math.abs(y[l] - f[l]));
      var R = E - m;
      return Math.min(Math.max(i, 0), Math.abs(R));
    }, t.prototype.keepPopupPositionedRelativeTo = function(r) {
      var i = this, o = this.getPopupParent(), s = o.getBoundingClientRect(), a = r.element.getBoundingClientRect(), l = s.top - a.top, u = s.left - a.left, c = l, p = u, d = r.ePopup.style.top, v = parseInt(d.substring(0, d.length - 1), 10), f = r.ePopup.style.left, y = parseInt(f.substring(0, f.length - 1), 10);
      return new Ge(function(C) {
        i.getFrameworkOverrides().setInterval(function() {
          var m = o.getBoundingClientRect(), w = r.element.getBoundingClientRect(), E = w.top == 0 && w.left == 0 && w.height == 0 && w.width == 0;
          if (E) {
            r.hidePopup();
            return;
          }
          var R = m.top - w.top;
          if (R != c) {
            var D = i.keepXYWithinBounds(r.ePopup, v + l - R, yt.vertical);
            r.ePopup.style.top = D + "px";
          }
          c = R;
          var M = m.left - w.left;
          if (M != p) {
            var I = i.keepXYWithinBounds(r.ePopup, y + u - M, yt.horizontal);
            r.ePopup.style.left = I + "px";
          }
          p = M;
        }, 200).then(function(m) {
          var w = function() {
            m != null && window.clearInterval(m);
          };
          C(w);
        });
      });
    }, t.prototype.addPopup = function(r) {
      var i, o = this, s = r.modal, a = r.eChild, l = r.closeOnEsc, u = r.closedCallback, c = r.click, p = r.alwaysOnTop, d = r.afterGuiAttached, v = r.positionCallback, f = r.anchorToElement, y = r.ariaLabel, C = this.gridOptionsService.getDocument(), m = new Ge(function(U) {
        return U(function() {
        });
      });
      if (!C)
        return console.warn("AG Grid: could not find the document, document is empty"), { hideFunc: function() {
        }, stopAnchoringPromise: m };
      var w = this.popupList.findIndex(function(U) {
        return U.element === a;
      });
      if (w !== -1) {
        var E = this.popupList[w];
        return { hideFunc: E.hideFunc, stopAnchoringPromise: E.stopAnchoringPromise };
      }
      var R = this.getPopupParent();
      a.style.top == null && (a.style.top = "0px"), a.style.left == null && (a.style.left = "0px");
      var D = document.createElement("div"), M = this.environment.getTheme().allThemes;
      M.length && (i = D.classList).add.apply(i, Zy(M)), D.classList.add("ag-popup"), a.classList.add(this.gridOptionsService.is("enableRtl") ? "ag-rtl" : "ag-ltr", "ag-popup-child"), a.hasAttribute("role") || ue(a, "dialog"), Vt(a, y), this.focusService.isKeyboardMode() && a.classList.add(Gr.AG_KEYBOARD_FOCUS), D.appendChild(a), R.appendChild(D), p ? this.setAlwaysOnTop(D, !0) : this.bringPopupToFront(D);
      var I = !1, L = function(U) {
        if (D.contains(C.activeElement)) {
          var ce = U.key;
          ce === _.ESCAPE && Q({ keyboardEvent: U });
        }
      }, H = function(U) {
        return Q({ mouseEvent: U });
      }, B = function(U) {
        return Q({ touchEvent: U });
      }, Q = function(U) {
        U === void 0 && (U = {});
        var ce = U.mouseEvent, Se = U.touchEvent, re = U.keyboardEvent;
        // we don't hide popup if the event was on the child, or any
        // children of this child
        o.isEventFromCurrentPopup({ mouseEvent: ce, touchEvent: Se }, a) || // if the event to close is actually the open event, then ignore it
        o.isEventSameChainAsOriginalEvent({ originalMouseEvent: c, mouseEvent: ce, touchEvent: Se }) || // this method should only be called once. the client can have different
        // paths, each one wanting to close, so this method may be called multiple times.
        I || (I = !0, R.removeChild(D), C.removeEventListener("keydown", L), C.removeEventListener("mousedown", H), C.removeEventListener("touchstart", B), C.removeEventListener("contextmenu", H), o.eventService.removeEventListener(g.EVENT_DRAG_STARTED, H), u && u(ce || Se || re), o.popupList = o.popupList.filter(function(X) {
          return X.element !== a;
        }), m && m.then(function(X) {
          return X && X();
        }));
      };
      return d && d({ hidePopup: Q }), window.setTimeout(function() {
        l && C.addEventListener("keydown", L), s && (C.addEventListener("mousedown", H), o.eventService.addEventListener(g.EVENT_DRAG_STARTED, H), C.addEventListener("touchstart", B), C.addEventListener("contextmenu", H));
      }, 0), v && v(), f && (m = this.keepPopupPositionedRelativeTo({
        element: f,
        ePopup: a,
        hidePopup: Q
      })), this.popupList.push({
        element: a,
        wrapper: D,
        hideFunc: Q,
        stopAnchoringPromise: m,
        instanceId: eC++,
        isAnchored: !!f
      }), {
        hideFunc: Q,
        stopAnchoringPromise: m
      };
    }, t.prototype.hasAnchoredPopup = function() {
      return this.popupList.some(function(r) {
        return r.isAnchored;
      });
    }, t.prototype.isEventFromCurrentPopup = function(r, i) {
      var o = r.mouseEvent, s = r.touchEvent, a = o || s;
      if (!a)
        return !1;
      var l = this.popupList.findIndex(function(p) {
        return p.element === i;
      });
      if (l === -1)
        return !1;
      for (var u = l; u < this.popupList.length; u++) {
        var c = this.popupList[u];
        if (Vi(c.element, a))
          return !0;
      }
      return this.isElementWithinCustomPopup(a.target);
    }, t.prototype.isElementWithinCustomPopup = function(r) {
      for (var i = this.gridOptionsService.getDocument(); r && r !== i.body; ) {
        if (r.classList.contains("ag-custom-component-popup") || r.parentElement === null)
          return !0;
        r = r.parentElement;
      }
      return !1;
    }, t.prototype.isEventSameChainAsOriginalEvent = function(r) {
      var i = r.originalMouseEvent, o = r.mouseEvent, s = r.touchEvent, a = null;
      if (o ? a = o : s && (a = s.touches[0]), a && i) {
        var l = o ? o.screenX : 0, u = o ? o.screenY : 0, c = Math.abs(i.screenX - l) < 5, p = Math.abs(i.screenY - u) < 5;
        if (c && p)
          return !0;
      }
      return !1;
    }, t.prototype.getWrapper = function(r) {
      for (; !r.classList.contains("ag-popup") && r.parentElement; )
        r = r.parentElement;
      return r.classList.contains("ag-popup") ? r : null;
    }, t.prototype.setAlwaysOnTop = function(r, i) {
      var o = this.getWrapper(r);
      o && (o.classList.toggle("ag-always-on-top", !!i), i && this.bringPopupToFront(o));
    }, t.prototype.bringPopupToFront = function(r) {
      var i = this.getPopupParent(), o = Array.prototype.slice.call(i.querySelectorAll(".ag-popup")), s = o.length, a = Array.prototype.slice.call(i.querySelectorAll(".ag-popup.ag-always-on-top")), l = a.length, u = this.getWrapper(r);
      if (!(!u || s <= 1 || !i.contains(r))) {
        var c = o.indexOf(u), p = u.querySelectorAll("div"), d = [];
        if (p.forEach(function(C) {
          C.scrollTop !== 0 && d.push([C, C.scrollTop]);
        }), l) {
          var v = u.classList.contains("ag-always-on-top");
          v ? c !== s - 1 && q(a).insertAdjacentElement("afterend", u) : c !== s - l - 1 && a[0].insertAdjacentElement("beforebegin", u);
        } else
          c !== s - 1 && q(o).insertAdjacentElement("afterend", u);
        for (; d.length; ) {
          var f = d.pop();
          f[0].scrollTop = f[1];
        }
        var y = {
          type: "popupToFront",
          api: this.gridOptionsService.api,
          columnApi: this.gridOptionsService.columnApi,
          eWrapper: u
        };
        this.eventService.dispatchEvent(y);
      }
    };
    var e;
    return t.WAIT_FOR_POPUP_CONTENT_RESIZE = 200, Tr([
      h("focusService")
    ], t.prototype, "focusService", void 0), Tr([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Tr([
      h("resizeObserverService")
    ], t.prototype, "resizeObserverService", void 0), Tr([
      b
    ], t.prototype, "postConstruct", null), t = e = Tr([
      A("popupService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var rC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), rn = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
};
(function(n) {
  rC(t, n);
  function t(e, r, i) {
    e === void 0 && (e = "default"), r === void 0 && (r = "listbox");
    var o = n.call(this, t.getTemplate(e)) || this;
    return o.cssIdentifier = e, o.ariaRole = r, o.listName = i, o.renderedRows = /* @__PURE__ */ new Map(), o.rowHeight = 20, o;
  }
  return t.prototype.postConstruct = function() {
    var e = this;
    this.addScrollListener(), this.rowHeight = this.getItemHeight(), this.addResizeObserver(), this.initialiseTabGuard({
      onFocusIn: function(r) {
        return e.onFocusIn(r);
      },
      onFocusOut: function(r) {
        return e.onFocusOut(r);
      },
      focusInnerElement: function(r) {
        return e.focusInnerElement(r);
      },
      onTabKeyDown: function(r) {
        return e.onTabKeyDown(r);
      },
      handleKeyDown: function(r) {
        return e.handleKeyDown(r);
      }
    }), this.setAriaProperties(), this.addManagedListener(this.eventService, g.EVENT_GRID_STYLES_CHANGED, this.onGridStylesChanged.bind(this));
  }, t.prototype.onGridStylesChanged = function() {
    this.rowHeight = this.getItemHeight(), this.refresh();
  }, t.prototype.setAriaProperties = function() {
    var e = this.localeService.getLocaleTextFunc(), r = e("ariaDefaultListName", this.listName || "List"), i = this.eContainer;
    ue(i, this.ariaRole), Vt(i, r);
  }, t.prototype.addResizeObserver = function() {
    var e = this, r = function() {
      return e.drawVirtualRows();
    }, i = this.resizeObserverService.observeResize(this.getGui(), r);
    this.addDestroyFunc(i);
  }, t.prototype.focusInnerElement = function(e) {
    this.focusRow(e ? this.model.getRowCount() - 1 : 0);
  }, t.prototype.onFocusIn = function(e) {
    var r = e.target;
    return r.classList.contains("ag-virtual-list-item") && (this.lastFocusedRowIndex = Cl(r) - 1), !1;
  }, t.prototype.onFocusOut = function(e) {
    return this.getFocusableElement().contains(e.relatedTarget) || (this.lastFocusedRowIndex = null), !1;
  }, t.prototype.handleKeyDown = function(e) {
    switch (e.key) {
      case _.UP:
      case _.DOWN:
        this.navigate(e.key === _.UP) && e.preventDefault();
        break;
    }
  }, t.prototype.onTabKeyDown = function(e) {
    this.navigate(e.shiftKey) ? e.preventDefault() : this.forceFocusOutOfContainer(e.shiftKey);
  }, t.prototype.navigate = function(e) {
    if (this.lastFocusedRowIndex == null)
      return !1;
    var r = this.lastFocusedRowIndex + (e ? -1 : 1);
    return r < 0 || r >= this.model.getRowCount() ? !1 : (this.focusRow(r), !0);
  }, t.prototype.getLastFocusedRow = function() {
    return this.lastFocusedRowIndex;
  }, t.prototype.focusRow = function(e) {
    var r = this;
    this.ensureIndexVisible(e), window.setTimeout(function() {
      if (r.isAlive()) {
        var i = r.renderedRows.get(e);
        i && i.eDiv.focus();
      }
    }, 10);
  }, t.prototype.getComponentAt = function(e) {
    var r = this.renderedRows.get(e);
    return r && r.rowComponent;
  }, t.prototype.forEachRenderedRow = function(e) {
    this.renderedRows.forEach(function(r, i) {
      return e(r.rowComponent, i);
    });
  }, t.getTemplate = function(e) {
    return (
      /* html */
      `
            <div class="ag-virtual-list-viewport ag-` + e + `-virtual-list-viewport" role="presentation">
                <div class="ag-virtual-list-container ag-` + e + `-virtual-list-container" ref="eContainer"></div>
            </div>`
    );
  }, t.prototype.getItemHeight = function() {
    return this.environment.getListItemHeight();
  }, t.prototype.ensureIndexVisible = function(e) {
    var r = this.model.getRowCount();
    if (typeof e != "number" || e < 0 || e >= r) {
      console.warn("AG Grid: invalid row index for ensureIndexVisible: " + e);
      return;
    }
    var i = e * this.rowHeight, o = i + this.rowHeight, s = this.getGui(), a = s.scrollTop, l = s.offsetHeight, u = a + l, c = a > i, p = u < o;
    if (c)
      s.scrollTop = i;
    else if (p) {
      var d = o - l;
      s.scrollTop = d;
    }
  }, t.prototype.setComponentCreator = function(e) {
    this.componentCreator = e;
  }, t.prototype.setComponentUpdater = function(e) {
    this.componentUpdater = e;
  }, t.prototype.getRowHeight = function() {
    return this.rowHeight;
  }, t.prototype.getScrollTop = function() {
    return this.getGui().scrollTop;
  }, t.prototype.setRowHeight = function(e) {
    this.rowHeight = e, this.refresh();
  }, t.prototype.refresh = function(e) {
    var r = this;
    if (!(this.model == null || !this.isAlive())) {
      var i = this.model.getRowCount();
      this.eContainer.style.height = i * this.rowHeight + "px", Za(function() {
        return r.eContainer.clientHeight >= i * r.rowHeight;
      }, function() {
        r.isAlive() && (r.canSoftRefresh(e) ? r.drawVirtualRows(!0) : (r.clearVirtualRows(), r.drawVirtualRows()));
      });
    }
  }, t.prototype.canSoftRefresh = function(e) {
    return !!(e && this.renderedRows.size && typeof this.model.areRowsEqual == "function" && this.componentUpdater);
  }, t.prototype.clearVirtualRows = function() {
    var e = this;
    this.renderedRows.forEach(function(r, i) {
      return e.removeRow(i);
    });
  }, t.prototype.drawVirtualRows = function(e) {
    if (this.isAlive()) {
      var r = this.getGui(), i = r.scrollTop, o = i + r.offsetHeight, s = Math.floor(i / this.rowHeight), a = Math.floor(o / this.rowHeight);
      this.ensureRowsRendered(s, a, e);
    }
  }, t.prototype.ensureRowsRendered = function(e, r, i) {
    var o = this;
    this.renderedRows.forEach(function(a, l) {
      (l < e || l > r) && l !== o.lastFocusedRowIndex && o.removeRow(l);
    }), i && this.refreshRows();
    for (var s = e; s <= r; s++)
      this.renderedRows.has(s) || s < this.model.getRowCount() && this.insertRow(s);
  }, t.prototype.insertRow = function(e) {
    var r = this, i = this.model.getRow(e), o = document.createElement("div");
    if (o.classList.add("ag-virtual-list-item", "ag-" + this.cssIdentifier + "-virtual-list-item"), ue(o, this.ariaRole === "tree" ? "treeitem" : "option"), Zn(o, this.model.getRowCount()), es(o, e + 1), o.setAttribute("tabindex", "-1"), typeof this.model.isRowSelected == "function") {
      var s = this.model.isRowSelected(e);
      or(o, !!s), Dl(o, s);
    }
    o.style.height = this.rowHeight + "px", o.style.top = this.rowHeight * e + "px";
    var a = this.componentCreator(i, o);
    a.addGuiEventListener("focusin", function() {
      return r.lastFocusedRowIndex = e;
    }), o.appendChild(a.getGui()), this.renderedRows.has(e - 1) ? this.renderedRows.get(e - 1).eDiv.insertAdjacentElement("afterend", o) : this.renderedRows.has(e + 1) ? this.renderedRows.get(e + 1).eDiv.insertAdjacentElement("beforebegin", o) : this.eContainer.appendChild(o), this.renderedRows.set(e, { rowComponent: a, eDiv: o, value: i });
  }, t.prototype.removeRow = function(e) {
    var r = this.renderedRows.get(e);
    this.eContainer.removeChild(r.eDiv), this.destroyBean(r.rowComponent), this.renderedRows.delete(e);
  }, t.prototype.refreshRows = function() {
    var e = this, r = this.model.getRowCount();
    this.renderedRows.forEach(function(i, o) {
      var s, a;
      if (o >= r)
        e.removeRow(o);
      else {
        var l = e.model.getRow(o);
        !((a = (s = e.model).areRowsEqual) === null || a === void 0) && a.call(s, i.value, l) ? e.componentUpdater(l, i.rowComponent) : e.removeRow(o);
      }
    });
  }, t.prototype.addScrollListener = function() {
    var e = this;
    this.addGuiEventListener("scroll", function() {
      return e.drawVirtualRows();
    }, { passive: !0 });
  }, t.prototype.setModel = function(e) {
    this.model = e;
  }, t.prototype.destroy = function() {
    this.isAlive() && (this.clearVirtualRows(), n.prototype.destroy.call(this));
  }, rn([
    h("resizeObserverService")
  ], t.prototype, "resizeObserverService", void 0), rn([
    P("eContainer")
  ], t.prototype, "eContainer", void 0), rn([
    b
  ], t.prototype, "postConstruct", null), t;
})(go);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var iC = ["mouseover", "mouseout", "mouseenter", "mouseleave"], oC = ["touchstart", "touchend", "touchmove", "touchcancel"], nC = (
  /** @class */
  function() {
    function n() {
      this.isOutsideAngular = function(t) {
        return Ve(iC, t);
      };
    }
    return n.prototype.setTimeout = function(t, e) {
      window.setTimeout(t, e);
    }, n.prototype.setInterval = function(t, e) {
      return new Ge(function(r) {
        r(window.setInterval(t, e));
      });
    }, n.prototype.addEventListener = function(t, e, r, i) {
      var o = Ve(oC, e);
      t.addEventListener(e, r, { capture: !!i, passive: o });
    }, n.prototype.dispatchEvent = function(t, e, r) {
      e();
    }, n.prototype.frameworkComponent = function(t) {
      return null;
    }, n.prototype.isFrameworkComponent = function(t) {
      return !1;
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var sC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), kt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, aC = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, lC = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(aC(arguments[t]));
  return n;
}, uC = (
  /** @class */
  function(n) {
    sC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getNextCellToFocus = function(e, r, i) {
      return i === void 0 && (i = !1), i ? this.getNextCellToFocusWithCtrlPressed(e, r) : this.getNextCellToFocusWithoutCtrlPressed(e, r);
    }, t.prototype.getNextCellToFocusWithCtrlPressed = function(e, r) {
      var i = e === _.UP, o = e === _.DOWN, s = e === _.LEFT, a, l;
      if (i || o)
        l = i ? this.paginationProxy.getPageFirstRow() : this.paginationProxy.getPageLastRow(), a = r.column;
      else {
        var u = this.columnModel.getAllDisplayedColumns(), c = this.gridOptionsService.is("enableRtl");
        l = r.rowIndex, a = s !== c ? u[0] : q(u);
      }
      return {
        rowIndex: l,
        rowPinned: null,
        column: a
      };
    }, t.prototype.getNextCellToFocusWithoutCtrlPressed = function(e, r) {
      for (var i = r, o = !1; !o; ) {
        switch (e) {
          case _.UP:
            i = this.getCellAbove(i);
            break;
          case _.DOWN:
            i = this.getCellBelow(i);
            break;
          case _.RIGHT:
            this.gridOptionsService.is("enableRtl") ? i = this.getCellToLeft(i) : i = this.getCellToRight(i);
            break;
          case _.LEFT:
            this.gridOptionsService.is("enableRtl") ? i = this.getCellToRight(i) : i = this.getCellToLeft(i);
            break;
          default:
            i = null, console.warn("AG Grid: unknown key for navigation " + e);
            break;
        }
        i ? o = this.isCellGoodToFocusOn(i) : o = !0;
      }
      return i;
    }, t.prototype.isCellGoodToFocusOn = function(e) {
      var r = e.column, i;
      switch (e.rowPinned) {
        case "top":
          i = this.pinnedRowModel.getPinnedTopRow(e.rowIndex);
          break;
        case "bottom":
          i = this.pinnedRowModel.getPinnedBottomRow(e.rowIndex);
          break;
        default:
          i = this.rowModel.getRow(e.rowIndex);
          break;
      }
      if (!i)
        return !1;
      var o = r.isSuppressNavigable(i);
      return !o;
    }, t.prototype.getCellToLeft = function(e) {
      if (!e)
        return null;
      var r = this.columnModel.getDisplayedColBefore(e.column);
      return r ? {
        rowIndex: e.rowIndex,
        column: r,
        rowPinned: e.rowPinned
      } : null;
    }, t.prototype.getCellToRight = function(e) {
      if (!e)
        return null;
      var r = this.columnModel.getDisplayedColAfter(e.column);
      return r ? {
        rowIndex: e.rowIndex,
        column: r,
        rowPinned: e.rowPinned
      } : null;
    }, t.prototype.getRowBelow = function(e) {
      var r = e.rowIndex, i = e.rowPinned;
      if (this.isLastRowInContainer(e))
        switch (i) {
          case "bottom":
            return null;
          case "top":
            return this.rowModel.isRowsToRender() ? { rowIndex: this.paginationProxy.getPageFirstRow(), rowPinned: null } : this.pinnedRowModel.isRowsToRender("bottom") ? { rowIndex: 0, rowPinned: "bottom" } : null;
          default:
            return this.pinnedRowModel.isRowsToRender("bottom") ? { rowIndex: 0, rowPinned: "bottom" } : null;
        }
      var o = this.rowModel.getRow(e.rowIndex), s = this.getNextStickyPosition(o);
      return s || { rowIndex: r + 1, rowPinned: i };
    }, t.prototype.getNextStickyPosition = function(e, r) {
      if (!(!this.gridOptionsService.is("groupRowsSticky") || !e || !e.sticky)) {
        var i = lC(this.rowRenderer.getStickyTopRowCtrls()).sort(function(l, u) {
          return l.getRowNode().rowIndex - u.getRowNode().rowIndex;
        }), o = r ? -1 : 1, s = i.findIndex(function(l) {
          return l.getRowNode().rowIndex === e.rowIndex;
        }), a = i[s + o];
        if (a)
          return { rowIndex: a.getRowNode().rowIndex, rowPinned: null };
      }
    }, t.prototype.getCellBelow = function(e) {
      if (!e)
        return null;
      var r = this.getRowBelow(e);
      return r ? {
        rowIndex: r.rowIndex,
        column: e.column,
        rowPinned: r.rowPinned
      } : null;
    }, t.prototype.isLastRowInContainer = function(e) {
      var r = e.rowPinned, i = e.rowIndex;
      if (r === "top") {
        var o = this.pinnedRowModel.getPinnedTopRowData().length - 1;
        return o <= i;
      }
      if (r === "bottom") {
        var s = this.pinnedRowModel.getPinnedBottomRowData().length - 1;
        return s <= i;
      }
      var a = this.paginationProxy.getPageLastRow();
      return a <= i;
    }, t.prototype.getRowAbove = function(e) {
      var r = e.rowIndex, i = e.rowPinned, o = i ? r === 0 : r === this.paginationProxy.getPageFirstRow();
      if (o)
        return i === "top" ? null : i ? this.rowModel.isRowsToRender() ? this.getLastBodyCell() : this.pinnedRowModel.isRowsToRender("top") ? this.getLastFloatingTopRow() : null : this.pinnedRowModel.isRowsToRender("top") ? this.getLastFloatingTopRow() : null;
      var s = this.rowModel.getRow(e.rowIndex), a = this.getNextStickyPosition(s, !0);
      return a || { rowIndex: r - 1, rowPinned: i };
    }, t.prototype.getCellAbove = function(e) {
      if (!e)
        return null;
      var r = this.getRowAbove({ rowIndex: e.rowIndex, rowPinned: e.rowPinned });
      return r ? {
        rowIndex: r.rowIndex,
        column: e.column,
        rowPinned: r.rowPinned
      } : null;
    }, t.prototype.getLastBodyCell = function() {
      var e = this.paginationProxy.getPageLastRow();
      return { rowIndex: e, rowPinned: null };
    }, t.prototype.getLastFloatingTopRow = function() {
      var e = this.pinnedRowModel.getPinnedTopRowData().length - 1;
      return { rowIndex: e, rowPinned: "top" };
    }, t.prototype.getNextTabbedCell = function(e, r) {
      return r ? this.getNextTabbedCellBackwards(e) : this.getNextTabbedCellForwards(e);
    }, t.prototype.getNextTabbedCellForwards = function(e) {
      var r = this.columnModel.getAllDisplayedColumns(), i = e.rowIndex, o = e.rowPinned, s = this.columnModel.getDisplayedColAfter(e.column);
      if (!s) {
        s = r[0];
        var a = this.getRowBelow(e);
        if (x(a) || !a.rowPinned && !this.paginationProxy.isRowInPage(a))
          return null;
        i = a ? a.rowIndex : null, o = a ? a.rowPinned : null;
      }
      return { rowIndex: i, column: s, rowPinned: o };
    }, t.prototype.getNextTabbedCellBackwards = function(e) {
      var r = this.columnModel.getAllDisplayedColumns(), i = e.rowIndex, o = e.rowPinned, s = this.columnModel.getDisplayedColBefore(e.column);
      if (!s) {
        s = q(r);
        var a = this.getRowAbove({ rowIndex: e.rowIndex, rowPinned: e.rowPinned });
        if (x(a) || !a.rowPinned && !this.paginationProxy.isRowInPage(a))
          return null;
        i = a ? a.rowIndex : null, o = a ? a.rowPinned : null;
      }
      return { rowIndex: i, column: s, rowPinned: o };
    }, kt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), kt([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), kt([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), kt([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), kt([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), t = kt([
      A("cellNavigationService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var cC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), br = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, pC = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, dC = (
  /** @class */
  function(n) {
    cC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.consuming = !1, e;
    }
    return t.prototype.setBeans = function(e) {
      this.logger = e.create("AlignedGridsService");
    }, t.prototype.init = function() {
      this.addManagedListener(this.eventService, g.EVENT_COLUMN_MOVED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_VISIBLE, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_PINNED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_GROUP_OPENED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_RESIZED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, g.EVENT_BODY_SCROLL, this.fireScrollEvent.bind(this));
    }, t.prototype.fireEvent = function(e) {
      if (!this.consuming) {
        var r = this.gridOptionsService.get("alignedGrids");
        r && r.forEach(function(i) {
          if (i.api) {
            var o = i.api.__getAlignedGridService();
            e(o);
          }
        });
      }
    }, t.prototype.onEvent = function(e) {
      this.consuming = !0, e(), this.consuming = !1;
    }, t.prototype.fireColumnEvent = function(e) {
      this.fireEvent(function(r) {
        r.onColumnEvent(e);
      });
    }, t.prototype.fireScrollEvent = function(e) {
      e.direction === "horizontal" && this.fireEvent(function(r) {
        r.onScrollEvent(e);
      });
    }, t.prototype.onScrollEvent = function(e) {
      var r = this;
      this.onEvent(function() {
        var i = r.ctrlsService.getGridBodyCtrl();
        i.getScrollFeature().setHorizontalScrollPosition(e.left);
      });
    }, t.prototype.getMasterColumns = function(e) {
      var r = [];
      return e.columns ? e.columns.forEach(function(i) {
        r.push(i);
      }) : e.column && r.push(e.column), r;
    }, t.prototype.getColumnIds = function(e) {
      var r = [];
      return e.columns ? e.columns.forEach(function(i) {
        r.push(i.getColId());
      }) : e.column && r.push(e.column.getColId()), r;
    }, t.prototype.onColumnEvent = function(e) {
      var r = this;
      this.onEvent(function() {
        switch (e.type) {
          case g.EVENT_COLUMN_MOVED:
          case g.EVENT_COLUMN_VISIBLE:
          case g.EVENT_COLUMN_PINNED:
          case g.EVENT_COLUMN_RESIZED:
            var i = e;
            r.processColumnEvent(i);
            break;
          case g.EVENT_COLUMN_GROUP_OPENED:
            var o = e;
            r.processGroupOpenedEvent(o);
            break;
          case g.EVENT_COLUMN_PIVOT_CHANGED:
            console.warn("AG Grid: pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid.");
            break;
        }
      });
    }, t.prototype.processGroupOpenedEvent = function(e) {
      var r = e.columnGroup, i = null;
      if (r) {
        var o = r.getGroupId();
        i = this.columnModel.getProvidedColumnGroup(o);
      }
      r && !i || (this.logger.log("onColumnEvent-> processing " + e + " expanded = " + r.isExpanded()), this.columnModel.setColumnGroupOpened(i, r.isExpanded(), "alignedGridChanged"));
    }, t.prototype.processColumnEvent = function(e) {
      var r = this, i, o = e.column, s = null;
      if (o && (s = this.columnModel.getPrimaryColumn(o.getColId())), !(o && !s)) {
        var a = this.getMasterColumns(e);
        switch (e.type) {
          case g.EVENT_COLUMN_MOVED:
            {
              var l = e, u = e.columnApi.getColumnState(), c = u.map(function(w) {
                return { colId: w.colId };
              });
              this.columnModel.applyColumnState({ state: c, applyOrder: !0 }, "alignedGridChanged"), this.logger.log("onColumnEvent-> processing " + e.type + " toIndex = " + l.toIndex);
            }
            break;
          case g.EVENT_COLUMN_VISIBLE:
            {
              var p = e, u = e.columnApi.getColumnState(), c = u.map(function(R) {
                return { colId: R.colId, hide: R.hide };
              });
              this.columnModel.applyColumnState({ state: c }, "alignedGridChanged"), this.logger.log("onColumnEvent-> processing " + e.type + " visible = " + p.visible);
            }
            break;
          case g.EVENT_COLUMN_PINNED:
            {
              var d = e, u = e.columnApi.getColumnState(), c = u.map(function(R) {
                return { colId: R.colId, pinned: R.pinned };
              });
              this.columnModel.applyColumnState({ state: c }, "alignedGridChanged"), this.logger.log("onColumnEvent-> processing " + e.type + " pinned = " + d.pinned);
            }
            break;
          case g.EVENT_COLUMN_RESIZED:
            var v = e, f = {};
            a.forEach(function(w) {
              r.logger.log("onColumnEvent-> processing " + e.type + " actualWidth = " + w.getActualWidth()), f[w.getId()] = { key: w.getColId(), newWidth: w.getActualWidth() };
            }), (i = v.flexColumns) === null || i === void 0 || i.forEach(function(w) {
              f[w.getId()] && delete f[w.getId()];
            }), this.columnModel.setColumnWidths(Object.values(f), !1, v.finished, "alignedGridChanged");
            break;
        }
        var y = this.ctrlsService.getGridBodyCtrl(), C = y.isVerticalScrollShowing(), m = this.gridOptionsService.get("alignedGrids");
        m && m.forEach(function(w) {
          w.api && w.api.setAlwaysShowVerticalScroll(C);
        });
      }
    }, br([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), br([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), br([
      pC(0, me("loggerFactory"))
    ], t.prototype, "setBeans", null), br([
      b
    ], t.prototype, "init", null), t = br([
      A("alignedGridsService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var hC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), io = function() {
  return io = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, io.apply(this, arguments);
}, Pr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, fC = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, vC = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, gC = (
  /** @class */
  function(n) {
    hC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setBeans = function(e) {
      this.logger = e.create("selectionService"), this.reset();
    }, t.prototype.init = function() {
      var e = this;
      this.groupSelectsChildren = this.gridOptionsService.is("groupSelectsChildren"), this.addManagedPropertyListener("groupSelectsChildren", function(r) {
        return e.groupSelectsChildren = r.currentValue;
      }), this.rowSelection = this.gridOptionsService.get("rowSelection"), this.addManagedPropertyListener("rowSelection", function(r) {
        return e.rowSelection = r.currentValue;
      }), this.addManagedListener(this.eventService, g.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));
    }, t.prototype.isMultiselect = function() {
      return this.rowSelection === "multiple";
    }, t.prototype.setNodeSelected = function(e) {
      var r, i = e.newValue, o = e.clearSelection, s = e.suppressFinishActions, a = e.rangeSelect;
      e.event;
      var l = e.node, u = e.source, c = u === void 0 ? "api" : u, p = this.groupSelectsChildren && e.groupSelectsFiltered === !0;
      if (l.id === void 0)
        return console.warn("AG Grid: cannot select node until id for node is known"), 0;
      if (l.rowPinned)
        return console.warn("AG Grid: cannot select pinned rows"), 0;
      if (l.footer)
        return this.setNodeSelected(io(io({}, e), { node: l.sibling }));
      var d = this.getLastSelectedNode();
      if (a && d) {
        var v = d !== l;
        if (v && this.isMultiselect()) {
          var f = this.selectRange(l, d, e.newValue, c);
          return this.setLastSelectedNode(l), f;
        }
      }
      var y = p && l.group, C = 0;
      if (!y) {
        var m = l.selectThisNode(i, e.event, c);
        m && C++;
      }
      if (this.groupSelectsChildren && (!((r = l.childrenAfterGroup) === null || r === void 0) && r.length) && (C += this.selectChildren(l, i, p, c)), !s) {
        var w = i && (o || !this.isMultiselect());
        if (w && (C += this.clearOtherNodes(l, c)), C > 0) {
          this.updateGroupsFromChildrenSelections(c);
          var E = {
            type: g.EVENT_SELECTION_CHANGED,
            source: c
          };
          this.eventService.dispatchEvent(E);
        }
        i && this.setLastSelectedNode(l);
      }
      return C;
    }, t.prototype.selectRange = function(e, r, i, o) {
      var s = this;
      i === void 0 && (i = !0);
      var a = this.rowModel.getNodesInRangeForSelection(e, r), l = 0;
      a.forEach(function(c) {
        if (!(c.group && s.groupSelectsChildren || i === !1 && e === c)) {
          var p = c.selectThisNode(i, void 0, o);
          p && l++;
        }
      }), this.updateGroupsFromChildrenSelections(o);
      var u = {
        type: g.EVENT_SELECTION_CHANGED,
        source: o
      };
      return this.eventService.dispatchEvent(u), l;
    }, t.prototype.selectChildren = function(e, r, i, o) {
      var s = i ? e.childrenAfterAggFilter : e.childrenAfterGroup;
      if (G.missing(s))
        return 0;
      for (var a = 0, l = 0; l < s.length; l++)
        a += s[l].setSelectedParams({
          newValue: r,
          clearSelection: !1,
          suppressFinishActions: !0,
          groupSelectsFiltered: i,
          source: o
        });
      return a;
    }, t.prototype.setLastSelectedNode = function(e) {
      this.lastSelectedNode = e;
    }, t.prototype.getLastSelectedNode = function() {
      return this.lastSelectedNode;
    }, t.prototype.getSelectedNodes = function() {
      var e = [];
      return J(this.selectedNodes, function(r, i) {
        i && e.push(i);
      }), e;
    }, t.prototype.getSelectedRows = function() {
      var e = [];
      return J(this.selectedNodes, function(r, i) {
        i && i.data && e.push(i.data);
      }), e;
    }, t.prototype.getSelectionCount = function() {
      return Object.values(this.selectedNodes).length;
    }, t.prototype.filterFromSelection = function(e) {
      var r = {};
      Object.entries(this.selectedNodes).forEach(function(i) {
        var o = vC(i, 2), s = o[0], a = o[1], l = a && e(a);
        l && (r[s] = a);
      }), this.selectedNodes = r;
    }, t.prototype.updateGroupsFromChildrenSelections = function(e, r) {
      if (!this.groupSelectsChildren || this.rowModel.getType() !== "clientSide")
        return !1;
      var i = this.rowModel, o = i.getRootNode();
      r || (r = new Ps(!0, o), r.setInactive());
      var s = !1;
      return r.forEachChangedNodeDepthFirst(function(a) {
        if (a !== o) {
          var l = a.calculateSelectedFromChildren();
          s = a.selectThisNode(l === null ? !1 : l, void 0, e) || s;
        }
      }), s;
    }, t.prototype.clearOtherNodes = function(e, r) {
      var i = this, o = {}, s = 0;
      return J(this.selectedNodes, function(a, l) {
        if (l && l.id !== e.id) {
          var u = i.selectedNodes[l.id];
          s += u.setSelectedParams({
            newValue: !1,
            clearSelection: !1,
            suppressFinishActions: !0,
            source: r
          }), i.groupSelectsChildren && l.parent && (o[l.parent.id] = l.parent);
        }
      }), J(o, function(a, l) {
        var u = l.calculateSelectedFromChildren();
        l.selectThisNode(u === null ? !1 : u, void 0, r);
      }), s;
    }, t.prototype.onRowSelected = function(e) {
      var r = e.node;
      this.groupSelectsChildren && r.group || (r.isSelected() ? this.selectedNodes[r.id] = r : delete this.selectedNodes[r.id]);
    }, t.prototype.syncInRowNode = function(e, r) {
      this.syncInOldRowNode(e, r), this.syncInNewRowNode(e);
    }, t.prototype.syncInOldRowNode = function(e, r) {
      var i = O(r) && e.id !== r.id;
      if (i && r) {
        var o = r.id, s = this.selectedNodes[o] == e;
        s && (this.selectedNodes[r.id] = r);
      }
    }, t.prototype.syncInNewRowNode = function(e) {
      O(this.selectedNodes[e.id]) ? (e.setSelectedInitialValue(!0), this.selectedNodes[e.id] = e) : e.setSelectedInitialValue(!1);
    }, t.prototype.reset = function() {
      this.logger.log("reset"), this.selectedNodes = {}, this.lastSelectedNode = null;
    }, t.prototype.getBestCostNodeSelection = function() {
      if (this.rowModel.getType() !== "clientSide")
        return;
      var e = this.rowModel, r = e.getTopLevelNodes();
      if (r === null)
        return;
      var i = [];
      function o(s) {
        for (var a = 0, l = s.length; a < l; a++) {
          var u = s[a];
          if (u.isSelected())
            i.push(u);
          else {
            var c = u;
            c.group && c.children && o(c.children);
          }
        }
      }
      return o(r), i;
    }, t.prototype.isEmpty = function() {
      var e = 0;
      return J(this.selectedNodes, function(r, i) {
        i && e++;
      }), e === 0;
    }, t.prototype.deselectAllRowNodes = function(e) {
      var r = function(u) {
        return u.selectThisNode(!1, void 0, o);
      }, i = this.rowModel.getType() === "clientSide", o = e.source, s = e.justFiltered, a = e.justCurrentPage;
      if (a || s) {
        if (!i) {
          console.error("AG Grid: selecting just filtered only works when gridOptions.rowModelType='clientSide'");
          return;
        }
        this.getNodesToSelect(s, a).forEach(r);
      } else
        J(this.selectedNodes, function(u, c) {
          c && r(c);
        }), this.reset();
      i && this.groupSelectsChildren && this.updateGroupsFromChildrenSelections(o);
      var l = {
        type: g.EVENT_SELECTION_CHANGED,
        source: o
      };
      this.eventService.dispatchEvent(l);
    }, t.prototype.getSelectAllState = function(e, r) {
      var i = this, o = 0, s = 0, a = function(l) {
        i.groupSelectsChildren && l.group || (l.isSelected() ? o++ : l.selectable && s++);
      };
      return this.getNodesToSelect(e, r).forEach(a), o === 0 && s === 0 ? !1 : o > 0 && s > 0 ? null : o > 0;
    }, t.prototype.getNodesToSelect = function(e, r) {
      var i = this;
      if (e === void 0 && (e = !1), r === void 0 && (r = !1), this.rowModel.getType() !== "clientSide")
        throw new Error("selectAll only available when rowModelType='clientSide', ie not " + this.rowModel.getType());
      var o = [];
      if (r)
        return this.paginationProxy.forEachNodeOnPage(function(a) {
          if (!a.group) {
            o.push(a);
            return;
          }
          if (!a.expanded) {
            var l = function(u) {
              var c;
              o.push(u), !((c = u.childrenAfterFilter) === null || c === void 0) && c.length && u.childrenAfterFilter.forEach(l);
            };
            l(a);
            return;
          }
          i.groupSelectsChildren || o.push(a);
        }), o;
      var s = this.rowModel;
      return e ? (s.forEachNodeAfterFilter(function(a) {
        o.push(a);
      }), o) : (s.forEachNode(function(a) {
        o.push(a);
      }), o);
    }, t.prototype.selectAllRowNodes = function(e) {
      if (this.rowModel.getType() !== "clientSide")
        throw new Error("selectAll only available when rowModelType='clientSide', ie not " + this.rowModel.getType());
      var r = e.source, i = e.justFiltered, o = e.justCurrentPage, s = function(l) {
        return l.selectThisNode(!0, void 0, r);
      };
      this.getNodesToSelect(i, o).forEach(s), this.rowModel.getType() === "clientSide" && this.groupSelectsChildren && this.updateGroupsFromChildrenSelections(r);
      var a = {
        type: g.EVENT_SELECTION_CHANGED,
        source: r
      };
      this.eventService.dispatchEvent(a);
    }, t.prototype.getServerSideSelectionState = function() {
      return null;
    }, t.prototype.setServerSideSelectionState = function(e) {
    }, Pr([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), Pr([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), Pr([
      fC(0, me("loggerFactory"))
    ], t.prototype, "setBeans", null), Pr([
      b
    ], t.prototype, "init", null), t = Pr([
      A("selectionService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var on = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, yC = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.sizeColumnsToFit = function(t) {
      typeof t > "u" && console.error("AG Grid: missing parameter to columnApi.sizeColumnsToFit(gridWidth)"), this.columnModel.sizeColumnsToFit(t, "api");
    }, n.prototype.setColumnGroupOpened = function(t, e) {
      this.columnModel.setColumnGroupOpened(t, e, "api");
    }, n.prototype.getColumnGroup = function(t, e) {
      return this.columnModel.getColumnGroup(t, e);
    }, n.prototype.getProvidedColumnGroup = function(t) {
      return this.columnModel.getProvidedColumnGroup(t);
    }, n.prototype.getDisplayNameForColumn = function(t, e) {
      return this.columnModel.getDisplayNameForColumn(t, e) || "";
    }, n.prototype.getDisplayNameForColumnGroup = function(t, e) {
      return this.columnModel.getDisplayNameForColumnGroup(t, e) || "";
    }, n.prototype.getColumn = function(t) {
      return this.columnModel.getPrimaryColumn(t);
    }, n.prototype.getColumns = function() {
      return this.columnModel.getAllPrimaryColumns();
    }, n.prototype.applyColumnState = function(t) {
      return this.columnModel.applyColumnState(t, "api");
    }, n.prototype.getColumnState = function() {
      return this.columnModel.getColumnState();
    }, n.prototype.resetColumnState = function() {
      this.columnModel.resetColumnState("api");
    }, n.prototype.getColumnGroupState = function() {
      return this.columnModel.getColumnGroupState();
    }, n.prototype.setColumnGroupState = function(t) {
      this.columnModel.setColumnGroupState(t, "api");
    }, n.prototype.resetColumnGroupState = function() {
      this.columnModel.resetColumnGroupState("api");
    }, n.prototype.isPinning = function() {
      return this.columnModel.isPinningLeft() || this.columnModel.isPinningRight();
    }, n.prototype.isPinningLeft = function() {
      return this.columnModel.isPinningLeft();
    }, n.prototype.isPinningRight = function() {
      return this.columnModel.isPinningRight();
    }, n.prototype.getDisplayedColAfter = function(t) {
      return this.columnModel.getDisplayedColAfter(t);
    }, n.prototype.getDisplayedColBefore = function(t) {
      return this.columnModel.getDisplayedColBefore(t);
    }, n.prototype.setColumnVisible = function(t, e) {
      this.columnModel.setColumnVisible(t, e, "api");
    }, n.prototype.setColumnsVisible = function(t, e) {
      this.columnModel.setColumnsVisible(t, e, "api");
    }, n.prototype.setColumnPinned = function(t, e) {
      this.columnModel.setColumnPinned(t, e, "api");
    }, n.prototype.setColumnsPinned = function(t, e) {
      this.columnModel.setColumnsPinned(t, e, "api");
    }, n.prototype.getAllGridColumns = function() {
      return this.columnModel.getAllGridColumns();
    }, n.prototype.getDisplayedLeftColumns = function() {
      return this.columnModel.getDisplayedLeftColumns();
    }, n.prototype.getDisplayedCenterColumns = function() {
      return this.columnModel.getDisplayedCenterColumns();
    }, n.prototype.getDisplayedRightColumns = function() {
      return this.columnModel.getDisplayedRightColumns();
    }, n.prototype.getAllDisplayedColumns = function() {
      return this.columnModel.getAllDisplayedColumns();
    }, n.prototype.getAllDisplayedVirtualColumns = function() {
      return this.columnModel.getViewportColumns();
    }, n.prototype.moveColumn = function(t, e) {
      this.columnModel.moveColumn(t, e, "api");
    }, n.prototype.moveColumnByIndex = function(t, e) {
      this.columnModel.moveColumnByIndex(t, e, "api");
    }, n.prototype.moveColumns = function(t, e) {
      this.columnModel.moveColumns(t, e, "api");
    }, n.prototype.moveRowGroupColumn = function(t, e) {
      this.columnModel.moveRowGroupColumn(t, e);
    }, n.prototype.setColumnAggFunc = function(t, e) {
      this.columnModel.setColumnAggFunc(t, e);
    }, n.prototype.setColumnWidth = function(t, e, r, i) {
      r === void 0 && (r = !0), this.columnModel.setColumnWidths([{ key: t, newWidth: e }], !1, r, i);
    }, n.prototype.setColumnWidths = function(t, e, r) {
      e === void 0 && (e = !0), this.columnModel.setColumnWidths(t, !1, e, r);
    }, n.prototype.setPivotMode = function(t) {
      this.columnModel.setPivotMode(t);
    }, n.prototype.isPivotMode = function() {
      return this.columnModel.isPivotMode();
    }, n.prototype.getPivotResultColumn = function(t, e) {
      return this.columnModel.getSecondaryPivotColumn(t, e);
    }, n.prototype.setValueColumns = function(t) {
      this.columnModel.setValueColumns(t, "api");
    }, n.prototype.getValueColumns = function() {
      return this.columnModel.getValueColumns();
    }, n.prototype.removeValueColumn = function(t) {
      this.columnModel.removeValueColumn(t, "api");
    }, n.prototype.removeValueColumns = function(t) {
      this.columnModel.removeValueColumns(t, "api");
    }, n.prototype.addValueColumn = function(t) {
      this.columnModel.addValueColumn(t, "api");
    }, n.prototype.addValueColumns = function(t) {
      this.columnModel.addValueColumns(t, "api");
    }, n.prototype.setRowGroupColumns = function(t) {
      this.columnModel.setRowGroupColumns(t, "api");
    }, n.prototype.removeRowGroupColumn = function(t) {
      this.columnModel.removeRowGroupColumn(t, "api");
    }, n.prototype.removeRowGroupColumns = function(t) {
      this.columnModel.removeRowGroupColumns(t, "api");
    }, n.prototype.addRowGroupColumn = function(t) {
      this.columnModel.addRowGroupColumn(t, "api");
    }, n.prototype.addRowGroupColumns = function(t) {
      this.columnModel.addRowGroupColumns(t, "api");
    }, n.prototype.getRowGroupColumns = function() {
      return this.columnModel.getRowGroupColumns();
    }, n.prototype.setPivotColumns = function(t) {
      this.columnModel.setPivotColumns(t, "api");
    }, n.prototype.removePivotColumn = function(t) {
      this.columnModel.removePivotColumn(t, "api");
    }, n.prototype.removePivotColumns = function(t) {
      this.columnModel.removePivotColumns(t, "api");
    }, n.prototype.addPivotColumn = function(t) {
      this.columnModel.addPivotColumn(t, "api");
    }, n.prototype.addPivotColumns = function(t) {
      this.columnModel.addPivotColumns(t, "api");
    }, n.prototype.getPivotColumns = function() {
      return this.columnModel.getPivotColumns();
    }, n.prototype.getLeftDisplayedColumnGroups = function() {
      return this.columnModel.getDisplayedTreeLeft();
    }, n.prototype.getCenterDisplayedColumnGroups = function() {
      return this.columnModel.getDisplayedTreeCentre();
    }, n.prototype.getRightDisplayedColumnGroups = function() {
      return this.columnModel.getDisplayedTreeRight();
    }, n.prototype.getAllDisplayedColumnGroups = function() {
      return this.columnModel.getAllDisplayedTrees();
    }, n.prototype.autoSizeColumn = function(t, e) {
      return this.columnModel.autoSizeColumn(t, e, "api");
    }, n.prototype.autoSizeColumns = function(t, e) {
      this.columnModel.autoSizeColumns({ columns: t, skipHeader: e });
    }, n.prototype.autoSizeAllColumns = function(t) {
      this.columnModel.autoSizeAllColumns(t, "api");
    }, n.prototype.setPivotResultColumns = function(t) {
      this.columnModel.setSecondaryColumns(t, "api");
    }, n.prototype.getPivotResultColumns = function() {
      return this.columnModel.getSecondaryColumns();
    }, n.prototype.cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid = function() {
      setTimeout(G.removeAllReferences.bind(window, this, "Column API"), 100);
    }, n.prototype.getAllColumns = function() {
      return ae("28.0", "getAllColumns", "getColumns"), this.getColumns();
    }, n.prototype.getOriginalColumnGroup = function(t) {
      return ae("27.0", "getOriginalColumnGroup", "getProvidedColumnGroup"), this.columnModel.getProvidedColumnGroup(t);
    }, n.prototype.getPrimaryColumns = function() {
      return ae("28.0", "getPrimaryColumns", "getColumns"), this.getColumns();
    }, n.prototype.getSecondaryColumns = function() {
      return ae("28.0", "getSecondaryColumns", "getPivotResultColumns"), this.getPivotResultColumns();
    }, n.prototype.setSecondaryColumns = function(t) {
      ae("28.0", "setSecondaryColumns", "setPivotResultColumns"), this.setPivotResultColumns(t);
    }, n.prototype.getSecondaryPivotColumn = function(t, e) {
      return ae("28.0", "getSecondaryPivotColumn", "getPivotResultColumn"), this.getPivotResultColumn(t, e);
    }, on([
      h("columnModel")
    ], n.prototype, "columnModel", void 0), on([
      ve
    ], n.prototype, "cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid", null), n = on([
      A("columnApi")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var CC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Dr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, mC = (
  /** @class */
  function(n) {
    CC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.initialised = !1, e;
    }
    return t.prototype.init = function() {
      var e = this;
      this.cellExpressions = this.gridOptionsService.is("enableCellExpressions"), this.isTreeData = this.gridOptionsService.is("treeData"), this.initialised = !0, this.eventService.addEventListener(g.EVENT_CELL_VALUE_CHANGED, function(r) {
        return e.callColumnCellValueChangedHandler(r);
      }, this.gridOptionsService.useAsyncEvents()), this.addManagedPropertyListener("treeData", function(r) {
        return e.isTreeData = r.currentValue;
      });
    }, t.prototype.getValue = function(e, r, i, o) {
      if (i === void 0 && (i = !1), o === void 0 && (o = !1), this.initialised || this.init(), !!r) {
        var s = e.getColDef(), a = s.field, l = e.getColId(), u = r.data, c, p = r.groupData && r.groupData[l] !== void 0, d = !o && r.aggData && r.aggData[l] !== void 0;
        if (i && s.filterValueGetter ? c = this.executeFilterValueGetter(s.filterValueGetter, u, e, r) : this.isTreeData && d ? c = r.aggData[l] : this.isTreeData && s.valueGetter ? c = this.executeValueGetter(s.valueGetter, u, e, r) : this.isTreeData && a && u ? c = Ni(u, a, e.isFieldContainsDots()) : p ? c = r.groupData[l] : d ? c = r.aggData[l] : s.valueGetter ? c = this.executeValueGetter(s.valueGetter, u, e, r) : a && u && (c = Ni(u, a, e.isFieldContainsDots())), this.cellExpressions && typeof c == "string" && c.indexOf("=") === 0) {
          var v = c.substring(1);
          c = this.executeValueGetter(v, u, e, r);
        }
        if (c == null) {
          var f = this.getOpenedGroup(r, e);
          if (f != null)
            return f;
        }
        return c;
      }
    }, t.prototype.getOpenedGroup = function(e, r) {
      if (this.gridOptionsService.is("showOpenedGroup")) {
        var i = r.getColDef();
        if (i.showRowGroup)
          for (var o = r.getColDef().showRowGroup, s = e.parent; s != null; ) {
            if (s.rowGroupColumn && (o === !0 || o === s.rowGroupColumn.getColId()))
              return s.key;
            s = s.parent;
          }
      }
    }, t.prototype.setValue = function(e, r, i, o) {
      var s = this.columnModel.getPrimaryColumn(r);
      if (!e || !s)
        return !1;
      x(e.data) && (e.data = {});
      var a = s.getColDef(), l = a.field, u = a.valueSetter;
      if (x(l) && x(u))
        return console.warn("AG Grid: you need either field or valueSetter set on colDef for editing to work"), !1;
      var c = {
        node: e,
        data: e.data,
        oldValue: this.getValue(s, e),
        newValue: i,
        colDef: s.getColDef(),
        column: s,
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi,
        context: this.gridOptionsService.context
      };
      c.newValue = i;
      var p;
      if (O(u) ? typeof u == "function" ? p = u(c) : p = this.expressionService.evaluate(u, c) : p = this.setValueUsingField(e.data, l, i, s.isFieldContainsDots()), p === void 0 && (p = !0), !p)
        return !1;
      e.resetQuickFilterAggregateText(), this.valueCache.onDataChanged(), c.newValue = this.getValue(s, e);
      var d = {
        type: g.EVENT_CELL_VALUE_CHANGED,
        event: null,
        rowIndex: e.rowIndex,
        rowPinned: e.rowPinned,
        column: c.column,
        api: c.api,
        columnApi: c.columnApi,
        colDef: c.colDef,
        context: c.context,
        data: e.data,
        node: e,
        oldValue: c.oldValue,
        newValue: c.newValue,
        value: c.newValue,
        source: o
      };
      return this.eventService.dispatchEvent(d), !0;
    }, t.prototype.callColumnCellValueChangedHandler = function(e) {
      var r = e.colDef.onCellValueChanged;
      typeof r == "function" && r({
        node: e.node,
        data: e.data,
        oldValue: e.oldValue,
        newValue: e.newValue,
        colDef: e.colDef,
        column: e.column,
        api: e.api,
        columnApi: e.columnApi,
        context: e.context
      });
    }, t.prototype.setValueUsingField = function(e, r, i, o) {
      if (!r)
        return !1;
      var s = !1;
      if (!o)
        s = e[r] == i, s || (e[r] = i);
      else
        for (var a = r.split("."), l = e; a.length > 0 && l; ) {
          var u = a.shift();
          a.length === 0 ? (s = l[u] == i, s || (l[u] = i)) : l = l[u];
        }
      return !s;
    }, t.prototype.executeFilterValueGetter = function(e, r, i, o) {
      var s = {
        data: r,
        node: o,
        column: i,
        colDef: i.getColDef(),
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi,
        context: this.gridOptionsService.context,
        getValue: this.getValueCallback.bind(this, o)
      };
      return typeof e == "function" ? e(s) : this.expressionService.evaluate(e, s);
    }, t.prototype.executeValueGetter = function(e, r, i, o) {
      var s = i.getColId(), a = this.valueCache.getValue(o, s);
      if (a !== void 0)
        return a;
      var l = {
        data: r,
        node: o,
        column: i,
        colDef: i.getColDef(),
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi,
        context: this.gridOptionsService.context,
        getValue: this.getValueCallback.bind(this, o)
      }, u;
      return typeof e == "function" ? u = e(l) : u = this.expressionService.evaluate(e, l), this.valueCache.setValue(o, s, u), u;
    }, t.prototype.getValueCallback = function(e, r) {
      var i = this.columnModel.getPrimaryColumn(r);
      return i ? this.getValue(i, e) : null;
    }, t.prototype.getKeyForNode = function(e, r) {
      var i = this.getValue(e, r), o = e.getColDef().keyCreator, s = i;
      if (o) {
        var a = {
          value: i,
          colDef: e.getColDef(),
          column: e,
          node: r,
          data: r.data,
          api: this.gridOptionsService.api,
          columnApi: this.gridOptionsService.columnApi,
          context: this.gridOptionsService.context
        };
        s = o(a);
      }
      return typeof s == "string" || s == null || (s = String(s), s === "[object Object]" && K(function() {
        console.warn("AG Grid: a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (se AG Grid docs) or b) to toString() on the object to return a key");
      }, "getKeyForNode - warn about [object,object]")), s;
    }, Dr([
      h("expressionService")
    ], t.prototype, "expressionService", void 0), Dr([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Dr([
      h("valueCache")
    ], t.prototype, "valueCache", void 0), Dr([
      b
    ], t.prototype, "init", null), t = Dr([
      A("valueService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var wC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ha = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, SC = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, EC = (
  /** @class */
  function(n) {
    wC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.expressionToFunctionCache = {}, e;
    }
    return t.prototype.setBeans = function(e) {
      this.logger = e.create("ExpressionService");
    }, t.prototype.evaluate = function(e, r) {
      if (typeof e == "string")
        return this.evaluateExpression(e, r);
      console.error("AG Grid: value should be either a string or a function", e);
    }, t.prototype.evaluateExpression = function(e, r) {
      try {
        var i = this.createExpressionFunction(e), o = i(r.value, r.context, r.oldValue, r.newValue, r.value, r.node, r.data, r.colDef, r.rowIndex, r.api, r.columnApi, r.getValue, r.column, r.columnGroup);
        return o;
      } catch (s) {
        return console.log("Processing of the expression failed"), console.log("Expression = " + e), console.log("Params =", r), console.log("Exception = " + s), null;
      }
    }, t.prototype.createExpressionFunction = function(e) {
      if (this.expressionToFunctionCache[e])
        return this.expressionToFunctionCache[e];
      var r = this.createFunctionBody(e), i = new Function("x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, columnApi, getValue, column, columnGroup", r);
      return this.expressionToFunctionCache[e] = i, i;
    }, t.prototype.createFunctionBody = function(e) {
      return e.indexOf("return") >= 0 ? e : "return " + e + ";";
    }, ha([
      SC(0, me("loggerFactory"))
    ], t.prototype, "setBeans", null), t = ha([
      A("expressionService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var _C = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), RC = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, OC = (
  /** @class */
  function(n) {
    _C(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.templateCache = {}, e.waitingCallbacks = {}, e;
    }
    return t.prototype.getTemplate = function(e, r) {
      var i = this.templateCache[e];
      if (i)
        return i;
      var o = this.waitingCallbacks[e], s = this;
      if (!o) {
        o = [], this.waitingCallbacks[e] = o;
        var a = new XMLHttpRequest();
        a.onload = function() {
          s.handleHttpResult(this, e);
        }, a.open("GET", e), a.send();
      }
      return r && o.push(r), null;
    }, t.prototype.handleHttpResult = function(e, r) {
      if (e.status !== 200 || e.response === null) {
        console.warn("AG Grid: Unable to get template error " + e.status + " - " + r);
        return;
      }
      this.templateCache[r] = e.response || e.responseText;
      for (var i = this.waitingCallbacks[r], o = 0; o < i.length; o++) {
        var s = i[o];
        s();
      }
    }, t = RC([
      A("templateService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var TC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), fa = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, bC = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, PC = (
  /** @class */
  function(n) {
    TC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setBeans = function(e) {
      this.logging = e.is("debug");
    }, t.prototype.create = function(e) {
      return new Wn(e, this.isLogging.bind(this));
    }, t.prototype.isLogging = function() {
      return this.logging;
    }, fa([
      bC(0, me("gridOptionsService"))
    ], t.prototype, "setBeans", null), t = fa([
      A("loggerFactory")
    ], t), t;
  }(T)
), Wn = (
  /** @class */
  function() {
    function n(t, e) {
      this.name = t, this.isLoggingFunc = e;
    }
    return n.prototype.isLogging = function() {
      return this.isLoggingFunc();
    }, n.prototype.log = function(t) {
      this.isLoggingFunc() && console.log("AG Grid." + this.name + ": " + t);
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var DC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ut = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, AC = (
  /** @class */
  function(n) {
    DC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setComp = function(e, r, i) {
      var o = this;
      this.view = e, this.eGridHostDiv = r, this.eGui = i, this.dragAndDropService.addDropTarget({
        getContainer: function() {
          return o.eGui;
        },
        isInterestedIn: function(a) {
          return a === we.HeaderCell || a === we.ToolPanel;
        },
        getIconName: function() {
          return de.ICON_NOT_ALLOWED;
        }
      }), this.mouseEventService.stampTopLevelGridCompWithGridInstance(r), this.createManagedBean(new _s(this.view)), this.addRtlSupport(), this.addManagedListener(this, g.EVENT_KEYBOARD_FOCUS, function() {
        o.view.addOrRemoveKeyboardFocusClass(!0);
      }), this.addManagedListener(this, g.EVENT_MOUSE_FOCUS, function() {
        o.view.addOrRemoveKeyboardFocusClass(!1);
      });
      var s = this.resizeObserverService.observeResize(this.eGridHostDiv, this.onGridSizeChanged.bind(this));
      this.addDestroyFunc(function() {
        return s();
      }), this.ctrlsService.registerGridCtrl(this);
    }, t.prototype.isDetailGrid = function() {
      var e, r = this.focusService.findTabbableParent(this.getGui());
      return ((e = r == null ? void 0 : r.getAttribute("row-id")) === null || e === void 0 ? void 0 : e.startsWith("detail")) || !1;
    }, t.prototype.showDropZones = function() {
      return N.isRegistered(F.RowGroupingModule);
    }, t.prototype.showSideBar = function() {
      return N.isRegistered(F.SideBarModule);
    }, t.prototype.showStatusBar = function() {
      return N.isRegistered(F.StatusBarModule);
    }, t.prototype.showWatermark = function() {
      return N.isRegistered(F.EnterpriseCoreModule);
    }, t.prototype.onGridSizeChanged = function() {
      var e = {
        type: g.EVENT_GRID_SIZE_CHANGED,
        clientWidth: this.eGridHostDiv.clientWidth,
        clientHeight: this.eGridHostDiv.clientHeight
      };
      this.eventService.dispatchEvent(e);
    }, t.prototype.addRtlSupport = function() {
      var e = this.gridOptionsService.is("enableRtl") ? "ag-rtl" : "ag-ltr";
      this.view.setRtlClass(e);
    }, t.prototype.destroyGridUi = function() {
      this.view.destroyGridUi();
    }, t.prototype.getGui = function() {
      return this.eGui;
    }, t.prototype.setResizeCursor = function(e) {
      this.view.setCursor(e ? "ew-resize" : null);
    }, t.prototype.disableUserSelect = function(e) {
      this.view.setUserSelect(e ? "none" : null);
    }, t.prototype.focusNextInnerContainer = function(e) {
      var r = this.gridOptionsService.getDocument(), i = this.view.getFocusableContainers(), o = i.findIndex(function(a) {
        return a.contains(r.activeElement);
      }), s = o + (e ? -1 : 1);
      return s <= 0 || s >= i.length ? !1 : this.focusService.focusInto(i[s]);
    }, t.prototype.focusInnerElement = function(e) {
      var r = this.view.getFocusableContainers(), i = this.columnModel.getAllDisplayedColumns();
      if (e) {
        if (r.length > 1)
          return this.focusService.focusInto(q(r), !0);
        var o = q(i);
        if (this.focusService.focusGridView(o, !0))
          return !0;
      }
      return this.gridOptionsService.getNum("headerHeight") === 0 ? this.focusService.focusGridView(i[0]) : this.focusService.focusFirstHeader();
    }, t.prototype.forceFocusOutOfContainer = function(e) {
      e === void 0 && (e = !1), this.view.forceFocusOutOfContainer(e);
    }, Ut([
      h("focusService")
    ], t.prototype, "focusService", void 0), Ut([
      h("resizeObserverService")
    ], t.prototype, "resizeObserverService", void 0), Ut([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Ut([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), Ut([
      h("mouseEventService")
    ], t.prototype, "mouseEventService", void 0), Ut([
      h("dragAndDropService")
    ], t.prototype, "dragAndDropService", void 0), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var FC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ar = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, LC = (
  /** @class */
  function(n) {
    FC(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.eGridDiv = e, r;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.logger = this.loggerFactory.create("GridComp");
      var r = {
        destroyGridUi: function() {
          return e.destroyBean(e);
        },
        setRtlClass: function(o) {
          return e.addCssClass(o);
        },
        addOrRemoveKeyboardFocusClass: function(o) {
          return e.addOrRemoveCssClass(Gr.AG_KEYBOARD_FOCUS, o);
        },
        forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),
        updateLayoutClasses: this.updateLayoutClasses.bind(this),
        getFocusableContainers: this.getFocusableContainers.bind(this),
        setUserSelect: function(o) {
          e.getGui().style.userSelect = o ?? "", e.getGui().style.webkitUserSelect = o ?? "";
        },
        setCursor: function(o) {
          e.getGui().style.cursor = o ?? "";
        }
      };
      this.ctrl = this.createManagedBean(new AC());
      var i = this.createTemplate();
      this.setTemplate(i), this.ctrl.setComp(r, this.eGridDiv, this.getGui()), this.insertGridIntoDom(), this.initialiseTabGuard({
        // we want to override the default behaviour to do nothing for onTabKeyDown
        onTabKeyDown: function() {
        },
        focusInnerElement: function(o) {
          return e.ctrl.focusInnerElement(o);
        }
      });
    }, t.prototype.insertGridIntoDom = function() {
      var e = this, r = this.getGui();
      this.eGridDiv.appendChild(r), this.addDestroyFunc(function() {
        e.eGridDiv.removeChild(r), e.logger.log("Grid removed from DOM");
      });
    }, t.prototype.updateLayoutClasses = function(e, r) {
      var i = this.eRootWrapperBody.classList;
      i.toggle(se.AUTO_HEIGHT, r.autoHeight), i.toggle(se.NORMAL, r.normal), i.toggle(se.PRINT, r.print), this.addOrRemoveCssClass(se.AUTO_HEIGHT, r.autoHeight), this.addOrRemoveCssClass(se.NORMAL, r.normal), this.addOrRemoveCssClass(se.PRINT, r.print);
    }, t.prototype.createTemplate = function() {
      var e = this.ctrl.showDropZones() ? "<ag-grid-header-drop-zones></ag-grid-header-drop-zones>" : "", r = this.ctrl.showSideBar() ? '<ag-side-bar ref="sideBar"></ag-side-bar>' : "", i = this.ctrl.showStatusBar() ? '<ag-status-bar ref="statusBar"></ag-status-bar>' : "", o = this.ctrl.showWatermark() ? "<ag-watermark></ag-watermark>" : "", s = (
        /* html */
        `<div class="ag-root-wrapper" role="presentation">
                ` + e + `
                <div class="ag-root-wrapper-body" ref="rootWrapperBody" role="presentation">
                    <ag-grid-body ref="gridBody"></ag-grid-body>
                    ` + r + `
                </div>
                ` + i + `
                <ag-pagination></ag-pagination>
                ` + o + `
            </div>`
      );
      return s;
    }, t.prototype.getFocusableElement = function() {
      return this.eRootWrapperBody;
    }, t.prototype.getFocusableContainers = function() {
      var e = [
        this.gridBodyComp.getGui()
      ];
      return this.sideBarComp && e.push(this.sideBarComp.getGui()), e.filter(function(r) {
        return pr(r);
      });
    }, Ar([
      h("loggerFactory")
    ], t.prototype, "loggerFactory", void 0), Ar([
      P("gridBody")
    ], t.prototype, "gridBodyComp", void 0), Ar([
      P("sideBar")
    ], t.prototype, "sideBarComp", void 0), Ar([
      P("rootWrapperBody")
    ], t.prototype, "eRootWrapperBody", void 0), Ar([
      b
    ], t.prototype, "postConstruct", null), t;
  }(go)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var MC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), va = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Li = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Fr = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Li(arguments[t]));
  return n;
}, IC = (
  /** @class */
  function(n) {
    MC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    e = t, t.prototype.progressSort = function(r, i, o) {
      var s = this.getNextSortDirection(r);
      this.setSortForColumn(r, s, i, o);
    }, t.prototype.setSortForColumn = function(r, i, o, s) {
      i !== "asc" && i !== "desc" && (i = null);
      var a = this.gridOptionsService.isColumnsSortingCoupledToGroup(), l = [r];
      if (a && r.getColDef().showRowGroup) {
        r.getColDef().field || (l = []);
        var u = this.columnModel.getSourceColumnsForGroupColumn(r), c = u == null ? void 0 : u.filter(function(d) {
          return d.getColDef().sortable;
        });
        c && (l = Fr(l, c));
      }
      l.forEach(function(d) {
        return d.setSort(i, s);
      });
      var p = (o || this.gridOptionsService.is("alwaysMultiSort")) && !this.gridOptionsService.is("suppressMultiSort");
      p || this.clearSortBarTheseColumns(l, s), this.updateSortIndex(r), this.dispatchSortChangedEvents(s);
    }, t.prototype.updateSortIndex = function(r) {
      var i = this.gridOptionsService.isColumnsSortingCoupledToGroup(), o = this.columnModel.getGroupDisplayColumnForGroup(r.getId()), s = i && o || r, a = this.getColumnsWithSortingOrdered(!0);
      this.columnModel.getPrimaryAndSecondaryAndAutoColumns().forEach(function(c) {
        return c.setSortIndex(null);
      });
      var l = a.filter(function(c) {
        return c !== s;
      }), u = s.getSort() ? Fr(l, [s]) : l;
      u.forEach(function(c, p) {
        return c.setSortIndex(p);
      });
    }, t.prototype.onSortChanged = function(r) {
      this.dispatchSortChangedEvents(r);
    }, t.prototype.isSortActive = function() {
      var r = this.columnModel.getPrimaryAndSecondaryAndAutoColumns(), i = r.filter(function(o) {
        return !!o.getSort();
      });
      return i && i.length > 0;
    }, t.prototype.dispatchSortChangedEvents = function(r) {
      var i = {
        type: g.EVENT_SORT_CHANGED,
        source: r
      };
      this.eventService.dispatchEvent(i);
    }, t.prototype.clearSortBarTheseColumns = function(r, i) {
      this.columnModel.getPrimaryAndSecondaryAndAutoColumns().forEach(function(o) {
        r.includes(o) || o.setSort(void 0, i);
      });
    }, t.prototype.getNextSortDirection = function(r) {
      var i;
      if (r.getColDef().sortingOrder ? i = r.getColDef().sortingOrder : this.gridOptionsService.get("sortingOrder") ? i = this.gridOptionsService.get("sortingOrder") : i = e.DEFAULT_SORTING_ORDER, !Array.isArray(i) || i.length <= 0)
        return console.warn("AG Grid: sortingOrder must be an array with at least one element, currently it's " + i), null;
      var o = r.getColDef().field ? r.getSort() : this.getDisplaySortForColumn(r), s = i[0];
      if (o !== "mixed") {
        var a = i.indexOf(o), l = a < 0, u = a == i.length - 1;
        l || u ? s = i[0] : s = i[a + 1];
      }
      return e.DEFAULT_SORTING_ORDER.indexOf(s) < 0 ? (console.warn("AG Grid: invalid sort type " + s), null) : s;
    }, t.prototype.getIndexedSortMap = function(r) {
      var i = this;
      r === void 0 && (r = !1);
      var o = this.columnModel.getPrimaryAndSecondaryAndAutoColumns().filter(function(c) {
        return !!c.getSort();
      });
      !r && this.columnModel.isPivotMode() && (o = o.filter(function(c) {
        return !!c.getAggFunc() || !c.isPrimary() || i.columnModel.getGroupDisplayColumnForGroup(c.getId());
      }));
      var s = this.columnModel.getRowGroupColumns().filter(function(c) {
        return !!c.getSort();
      }), a = this.gridOptionsService.isColumnsSortingCoupledToGroup() && !!s.length;
      a && (o = Fr(new Set(
        // if linked sorting, replace all columns with the display group column for index purposes, and ensure uniqueness
        o.map(function(c) {
          var p;
          return (p = i.columnModel.getGroupDisplayColumnForGroup(c.getId())) !== null && p !== void 0 ? p : c;
        })
      )));
      var l = {};
      o.forEach(function(c, p) {
        return l[c.getId()] = p;
      }), o.sort(function(c, p) {
        var d = c.getSortIndex(), v = p.getSortIndex();
        if (d != null && v != null)
          return d - v;
        if (d == null && v == null) {
          var f = l[c.getId()], y = l[p.getId()];
          return f > y ? 1 : -1;
        } else
          return v == null ? -1 : 1;
      });
      var u = /* @__PURE__ */ new Map();
      return o.forEach(function(c, p) {
        return u.set(c, p);
      }), a && s.forEach(function(c) {
        var p = i.columnModel.getGroupDisplayColumnForGroup(c.getId());
        u.set(c, u.get(p));
      }), u;
    }, t.prototype.getColumnsWithSortingOrdered = function(r) {
      return r === void 0 && (r = !1), Fr(this.getIndexedSortMap(r).entries()).sort(function(i, o) {
        var s = Li(i, 2);
        s[0];
        var a = s[1], l = Li(o, 2);
        l[0];
        var u = l[1];
        return a - u;
      }).map(function(i) {
        var o = Li(i, 1), s = o[0];
        return s;
      });
    }, t.prototype.getSortModel = function() {
      return this.getColumnsWithSortingOrdered(!0).map(function(r) {
        return {
          sort: r.getSort(),
          colId: r.getId()
        };
      });
    }, t.prototype.getSortOptions = function() {
      return this.getColumnsWithSortingOrdered().map(function(r) {
        return {
          sort: r.getSort(),
          column: r
        };
      });
    }, t.prototype.canColumnDisplayMixedSort = function(r) {
      var i = this.gridOptionsService.isColumnsSortingCoupledToGroup(), o = !!r.getColDef().showRowGroup;
      return i && o;
    }, t.prototype.getDisplaySortForColumn = function(r) {
      var i = this.columnModel.getSourceColumnsForGroupColumn(r);
      if (!this.canColumnDisplayMixedSort(r) || !(i != null && i.length))
        return r.getSort();
      var o = !!r.getColDef().field, s = o ? Fr([r], i) : i, a = s[0].getSort(), l = s.every(function(u) {
        return u.getSort() == a;
      });
      return l ? a : "mixed";
    }, t.prototype.getDisplaySortIndexForColumn = function(r) {
      return this.getIndexedSortMap().get(r);
    };
    var e;
    return t.DEFAULT_SORTING_ORDER = ["asc", "desc", null], va([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), t = e = va([
      A("sortController")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var xC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), NC = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, GC = (
  /** @class */
  function(n) {
    xC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.setMouseOver = function(e) {
      this.selectedColumns = e;
      var r = {
        type: g.EVENT_COLUMN_HOVER_CHANGED
      };
      this.eventService.dispatchEvent(r);
    }, t.prototype.clearMouseOver = function() {
      this.selectedColumns = null;
      var e = {
        type: g.EVENT_COLUMN_HOVER_CHANGED
      };
      this.eventService.dispatchEvent(e);
    }, t.prototype.isHovered = function(e) {
      return !!this.selectedColumns && this.selectedColumns.indexOf(e) >= 0;
    }, t = NC([
      A("columnHoverService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var HC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), nn = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, VC = (
  /** @class */
  function(n) {
    HC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.executeNextFuncs = [], e.executeLaterFuncs = [], e.active = !1, e.animationThreadCount = 0, e;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        return e.gridBodyCtrl = r.gridBodyCtrl;
      });
    }, t.prototype.isActive = function() {
      return this.active;
    }, t.prototype.start = function() {
      this.active || this.gridOptionsService.is("suppressColumnMoveAnimation") || this.gridOptionsService.is("enableRtl") || (this.ensureAnimationCssClassPresent(), this.active = !0);
    }, t.prototype.finish = function() {
      this.active && (this.flush(), this.active = !1);
    }, t.prototype.executeNextVMTurn = function(e) {
      this.active ? this.executeNextFuncs.push(e) : e();
    }, t.prototype.executeLaterVMTurn = function(e) {
      this.active ? this.executeLaterFuncs.push(e) : e();
    }, t.prototype.ensureAnimationCssClassPresent = function() {
      var e = this;
      this.animationThreadCount++;
      var r = this.animationThreadCount;
      this.gridBodyCtrl.setColumnMovingCss(!0), this.executeLaterFuncs.push(function() {
        e.animationThreadCount === r && e.gridBodyCtrl.setColumnMovingCss(!1);
      });
    }, t.prototype.flush = function() {
      var e = this.executeNextFuncs;
      this.executeNextFuncs = [];
      var r = this.executeLaterFuncs;
      this.executeLaterFuncs = [], !(e.length === 0 && r.length === 0) && (window.setTimeout(function() {
        return e.forEach(function(i) {
          return i();
        });
      }, 0), window.setTimeout(function() {
        return r.forEach(function(i) {
          return i();
        });
      }, 300));
    }, nn([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), nn([
      b
    ], t.prototype, "postConstruct", null), t = nn([
      A("columnAnimationService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var BC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), sn = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, WC = (
  /** @class */
  function(n) {
    BC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      this.ctrlsService.whenReady(function(r) {
        e.centerRowContainerCon = r.centerRowContainerCtrl, e.addManagedListener(e.eventService, g.EVENT_BODY_HEIGHT_CHANGED, e.checkPageSize.bind(e)), e.addManagedListener(e.eventService, g.EVENT_SCROLL_VISIBILITY_CHANGED, e.checkPageSize.bind(e)), e.checkPageSize();
      });
    }, t.prototype.notActive = function() {
      return !this.gridOptionsService.is("paginationAutoPageSize") || this.centerRowContainerCon == null;
    }, t.prototype.checkPageSize = function() {
      var e = this;
      if (!this.notActive()) {
        var r = this.centerRowContainerCon.getViewportSizeFeature().getBodyHeight();
        if (r > 0) {
          var i = function() {
            var o = e.gridOptionsService.getRowHeightAsNumber(), s = Math.floor(r / o);
            e.gridOptionsService.set("paginationPageSize", s);
          };
          this.isBodyRendered ? Ze(function() {
            return i();
          }, 50)() : (i(), this.isBodyRendered = !0);
        } else
          this.isBodyRendered = !1;
      }
    }, sn([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), sn([
      b
    ], t.prototype, "postConstruct", null), t = sn([
      A("paginationAutoPageSizeService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var jC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ga = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, kC = (
  /** @class */
  function(n) {
    jC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.cacheVersion = 0, e;
    }
    return t.prototype.init = function() {
      this.active = this.gridOptionsService.is("valueCache"), this.neverExpires = this.gridOptionsService.is("valueCacheNeverExpires");
    }, t.prototype.onDataChanged = function() {
      this.neverExpires || this.expire();
    }, t.prototype.expire = function() {
      this.cacheVersion++;
    }, t.prototype.setValue = function(e, r, i) {
      this.active && (e.__cacheVersion !== this.cacheVersion && (e.__cacheVersion = this.cacheVersion, e.__cacheData = {}), e.__cacheData[r] = i);
    }, t.prototype.getValue = function(e, r) {
      if (!(!this.active || e.__cacheVersion !== this.cacheVersion))
        return e.__cacheData[r];
    }, ga([
      b
    ], t.prototype, "init", null), t = ga([
      A("valueCache")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var UC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ci = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, zC = "paste", KC = (
  /** @class */
  function(n) {
    UC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      this.rowModel.getType() === "clientSide" && (this.clientSideRowModel = this.rowModel), this.addManagedListener(this.eventService, g.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged.bind(this));
    }, t.prototype.onCellValueChanged = function(e) {
      e.source !== zC && this.doChangeDetection(e.node, e.column);
    }, t.prototype.doChangeDetection = function(e, r) {
      if (!this.gridOptionsService.is("suppressChangeDetection")) {
        if (this.clientSideRowModel && !e.isRowPinned()) {
          var i = this.gridOptionsService.is("aggregateOnlyChangedColumns"), o = new Ps(i, this.clientSideRowModel.getRootNode());
          o.addParentNode(e.parent, [r]), this.clientSideRowModel.doAggregate(o);
        }
        this.rowRenderer.refreshCells();
      }
    }, Ci([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), Ci([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), Ci([
      b
    ], t.prototype, "init", null), t = Ci([
      A("changeDetectionService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var $C = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ya = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, YC = (
  /** @class */
  function(n) {
    $C(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.adaptFunction = function(e, r) {
      var i = this.componentMetadataProvider.retrieve(e);
      return i && i.functionAdapter ? i.functionAdapter(r) : null;
    }, t.prototype.adaptCellRendererFunction = function(e) {
      var r = (
        /** @class */
        function() {
          function i() {
          }
          return i.prototype.refresh = function(o) {
            return !1;
          }, i.prototype.getGui = function() {
            return this.eGui;
          }, i.prototype.init = function(o) {
            var s = e(o), a = typeof s;
            if (a === "string" || a === "number" || a === "boolean") {
              this.eGui = he("<span>" + s + "</span>");
              return;
            }
            if (s == null) {
              this.eGui = he("<span></span>");
              return;
            }
            this.eGui = s;
          }, i;
        }()
      );
      return r;
    }, t.prototype.doesImplementIComponent = function(e) {
      return e ? e.prototype && "getGui" in e.prototype : !1;
    }, ya([
      h("componentMetadataProvider")
    ], t.prototype, "componentMetadataProvider", void 0), t = ya([
      A("agComponentUtils")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var qC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), an = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, QC = (
  /** @class */
  function(n) {
    qC(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.componentMetaData = {
        dateComponent: {
          mandatoryMethodList: ["getDate", "setDate"],
          optionalMethodList: ["afterGuiAttached", "setInputPlaceholder", "setInputAriaLabel"]
        },
        detailCellRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        headerComponent: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh"]
        },
        headerGroupComponent: {
          mandatoryMethodList: [],
          optionalMethodList: []
        },
        loadingCellRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: []
        },
        loadingOverlayComponent: {
          mandatoryMethodList: [],
          optionalMethodList: []
        },
        noRowsOverlayComponent: {
          mandatoryMethodList: [],
          optionalMethodList: []
        },
        floatingFilterComponent: {
          mandatoryMethodList: ["onParentModelChanged"],
          optionalMethodList: ["afterGuiAttached"]
        },
        floatingFilterWrapperComponent: {
          mandatoryMethodList: [],
          optionalMethodList: []
        },
        cellRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh", "afterGuiAttached"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        cellEditor: {
          mandatoryMethodList: ["getValue"],
          optionalMethodList: ["isPopup", "isCancelBeforeStart", "isCancelAfterEnd", "getPopupPosition", "focusIn", "focusOut", "afterGuiAttached"]
        },
        innerRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["afterGuiAttached"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        fullWidthCellRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh", "afterGuiAttached"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        groupRowRenderer: {
          mandatoryMethodList: [],
          optionalMethodList: ["afterGuiAttached"],
          functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
        },
        filter: {
          mandatoryMethodList: ["isFilterActive", "doesFilterPass", "getModel", "setModel"],
          optionalMethodList: ["afterGuiAttached", "afterGuiDetached", "onNewRowsLoaded", "getModelAsString", "onFloatingFilterChanged", "onAnyFilterChanged"]
        },
        filterComponent: {
          mandatoryMethodList: ["isFilterActive", "doesFilterPass", "getModel", "setModel"],
          optionalMethodList: ["afterGuiAttached", "afterGuiDetached", "onNewRowsLoaded", "getModelAsString", "onFloatingFilterChanged", "onAnyFilterChanged"]
        },
        statusPanel: {
          mandatoryMethodList: [],
          optionalMethodList: ["afterGuiAttached"]
        },
        toolPanel: {
          mandatoryMethodList: [],
          optionalMethodList: ["refresh", "afterGuiAttached"]
        },
        tooltipComponent: {
          mandatoryMethodList: [],
          optionalMethodList: []
        }
      };
    }, t.prototype.retrieve = function(e) {
      return this.componentMetaData[e];
    }, an([
      h("agComponentUtils")
    ], t.prototype, "agComponentUtils", void 0), an([
      b
    ], t.prototype, "postConstruct", null), t = an([
      A("componentMetadataProvider")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var XC = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ln = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, JC = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, ZC = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(JC(arguments[t]));
  return n;
}, em = 25, Ca = 10, un = 8, tm = 4, cn = 4, pn = 6, rm = {
  // this item is required for custom themes
  "ag-theme-custom": {
    headerHeight: 25,
    headerCellMinWidth: 24,
    listItemHeight: tm * 5,
    rowHeight: 25,
    chartMenuPanelWidth: 220
  },
  "ag-theme-material": {
    headerHeight: un * 7,
    headerCellMinWidth: 48,
    listItemHeight: un * 4,
    rowHeight: un * 6,
    chartMenuPanelWidth: 240
  },
  "ag-theme-balham": {
    headerHeight: cn * 8,
    headerCellMinWidth: 24,
    listItemHeight: cn * 6,
    rowHeight: cn * 7,
    chartMenuPanelWidth: 220
  },
  "ag-theme-alpine": {
    headerHeight: pn * 8,
    headerCellMinWidth: 36,
    listItemHeight: pn * 4,
    rowHeight: pn * 7,
    chartMenuPanelWidth: 240
  }
}, ma = {
  headerHeight: ["ag-header-row"],
  headerCellMinWidth: ["ag-header-cell"],
  listItemHeight: ["ag-virtual-list-item"],
  rowHeight: ["ag-row"],
  chartMenuPanelWidth: ["ag-chart-docked-container"]
}, im = (
  /** @class */
  function(n) {
    XC(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.calculatedSizes = {}, e;
    }
    return t.prototype.postConstruct = function() {
      var e = this, r, i = (r = this.getTheme().el) !== null && r !== void 0 ? r : this.eGridDiv;
      this.mutationObserver = new MutationObserver(function() {
        e.calculatedSizes = {}, e.fireGridStylesChangedEvent();
      }), this.mutationObserver.observe(i || this.eGridDiv, {
        attributes: !0,
        attributeFilter: ["class"]
      });
    }, t.prototype.fireGridStylesChangedEvent = function() {
      var e = {
        type: g.EVENT_GRID_STYLES_CHANGED
      };
      this.eventService.dispatchEvent(e);
    }, t.prototype.getSassVariable = function(e) {
      var r = this.getTheme(), i = r.themeFamily, o = r.el;
      if (!(!i || i.indexOf("ag-theme") !== 0)) {
        this.calculatedSizes || (this.calculatedSizes = {}), this.calculatedSizes[i] || (this.calculatedSizes[i] = {});
        var s = this.calculatedSizes[i][e];
        return s ?? (this.calculatedSizes[i][e] = this.calculateValueForSassProperty(e, i, o), this.calculatedSizes[i][e]);
      }
    }, t.prototype.calculateValueForSassProperty = function(e, r, i) {
      var o, s = "ag-theme-" + (r.match("material") ? "material" : r.match("balham") ? "balham" : r.match("alpine") ? "alpine" : "custom"), a = rm[s][e], l = this.gridOptionsService.getDocument();
      if (i || (i = this.eGridDiv), !ma[e])
        return a;
      var u = ma[e], c = l.createElement("div"), p = Array.from(i.classList);
      (o = c.classList).add.apply(o, ZC([r], p)), c.style.position = "absolute";
      var d = u.reduce(function(y, C) {
        var m = l.createElement("div");
        return m.style.position = "static", m.classList.add(C), y.appendChild(m), m;
      }, c), v = 0;
      if (l.body) {
        l.body.appendChild(c);
        var f = e.toLowerCase().indexOf("height") !== -1 ? "height" : "width";
        v = parseInt(window.getComputedStyle(d)[f], 10), l.body.removeChild(c);
      }
      return v || a;
    }, t.prototype.isThemeDark = function() {
      var e = this.getTheme().theme;
      return !!e && e.indexOf("dark") >= 0;
    }, t.prototype.chartMenuPanelWidth = function() {
      return this.getSassVariable("chartMenuPanelWidth");
    }, t.prototype.getTheme = function() {
      for (var e = /\bag-(material|(?:theme-([\w\-]*)))\b/g, r = this.eGridDiv, i = null, o = []; r; )
        if (i = e.exec(r.className), !i)
          r = r.parentElement || void 0;
        else {
          var s = r.className.match(e);
          s && (o = s);
          break;
        }
      if (!i)
        return { allThemes: o };
      var a = i[0];
      return { theme: a, el: r, themeFamily: a.replace(/-dark$/, ""), allThemes: o };
    }, t.prototype.getFromTheme = function(e, r) {
      var i;
      return (i = this.getSassVariable(r)) !== null && i !== void 0 ? i : e;
    }, t.prototype.getDefaultRowHeight = function() {
      return this.getFromTheme(em, "rowHeight");
    }, t.prototype.getListItemHeight = function() {
      return this.getFromTheme(20, "listItemHeight");
    }, t.prototype.setRowHeightVariable = function(e) {
      var r = this.eGridDiv.style.getPropertyValue("--ag-line-height").trim(), i = e + "px";
      r != i && this.eGridDiv.style.setProperty("--ag-line-height", i);
    }, t.prototype.getMinColWidth = function() {
      var e = this.getFromTheme(null, "headerCellMinWidth");
      return O(e) ? Math.max(e, Ca) : Ca;
    }, t.prototype.destroy = function() {
      this.calculatedSizes = null, this.mutationObserver && this.mutationObserver.disconnect(), n.prototype.destroy.call(this);
    }, ln([
      h("eGridDiv")
    ], t.prototype, "eGridDiv", void 0), ln([
      b
    ], t.prototype, "postConstruct", null), t = ln([
      A("environment")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var om = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), mi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, nm = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, sm = (
  /** @class */
  function(n) {
    om(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.scrollY = 0, e.uiBodyHeight = 0, e;
    }
    return t.prototype.agWire = function(e) {
      this.logger = e.create("RowContainerHeightService");
    }, t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, g.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this)), this.maxDivHeight = Al(), this.logger.log("maxDivHeight = " + this.maxDivHeight);
    }, t.prototype.isStretching = function() {
      return this.stretching;
    }, t.prototype.getDivStretchOffset = function() {
      return this.divStretchOffset;
    }, t.prototype.updateOffset = function() {
      if (this.stretching) {
        var e = this.ctrlsService.getGridBodyCtrl(), r = e.getScrollFeature().getVScrollPosition().top, i = this.getUiBodyHeight(), o = r !== this.scrollY || i !== this.uiBodyHeight;
        o && (this.scrollY = r, this.uiBodyHeight = i, this.calculateOffset());
      }
    }, t.prototype.calculateOffset = function() {
      this.setUiContainerHeight(this.maxDivHeight), this.pixelsToShave = this.modelHeight - this.uiContainerHeight, this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;
      var e = this.scrollY / this.maxScrollY, r = e * this.pixelsToShave;
      this.logger.log("Div Stretch Offset = " + r + " (" + this.pixelsToShave + " * " + e + ")"), this.setDivStretchOffset(r);
    }, t.prototype.setUiContainerHeight = function(e) {
      e !== this.uiContainerHeight && (this.uiContainerHeight = e, this.eventService.dispatchEvent({ type: g.EVENT_ROW_CONTAINER_HEIGHT_CHANGED }));
    }, t.prototype.clearOffset = function() {
      this.setUiContainerHeight(this.modelHeight), this.pixelsToShave = 0, this.setDivStretchOffset(0);
    }, t.prototype.setDivStretchOffset = function(e) {
      var r = typeof e == "number" ? Math.floor(e) : null;
      this.divStretchOffset !== r && (this.divStretchOffset = r, this.eventService.dispatchEvent({ type: g.EVENT_HEIGHT_SCALE_CHANGED }));
    }, t.prototype.setModelHeight = function(e) {
      this.modelHeight = e, this.stretching = e != null && this.maxDivHeight > 0 && e > this.maxDivHeight, this.stretching ? this.calculateOffset() : this.clearOffset();
    }, t.prototype.getUiContainerHeight = function() {
      return this.uiContainerHeight;
    }, t.prototype.getRealPixelPosition = function(e) {
      return e - this.divStretchOffset;
    }, t.prototype.getUiBodyHeight = function() {
      var e = this.ctrlsService.getGridBodyCtrl(), r = e.getScrollFeature().getVScrollPosition();
      return r.bottom - r.top;
    }, t.prototype.getScrollPositionForPixel = function(e) {
      if (this.pixelsToShave <= 0)
        return e;
      var r = this.modelHeight - this.getUiBodyHeight(), i = e / r, o = this.maxScrollY * i;
      return o;
    }, mi([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), mi([
      nm(0, me("loggerFactory"))
    ], t.prototype, "agWire", null), mi([
      b
    ], t.prototype, "postConstruct", null), t = mi([
      A("rowContainerHeightService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var am = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), wa = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, lm = (
  /** @class */
  function(n) {
    am(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      this.groupSelectsChildren = this.gridOptionsService.is("groupSelectsChildren"), this.isRowSelectableFunc = this.gridOptionsService.get("isRowSelectable");
    }, t.prototype.updateSelectableAfterGrouping = function(e) {
      if (this.isRowSelectableFunc) {
        var r = function(i) {
          return i.childrenAfterGroup;
        };
        this.recurseDown(e.childrenAfterGroup, r);
      }
    }, t.prototype.recurseDown = function(e, r) {
      var i = this;
      e && e.forEach(function(o) {
        if (o.group) {
          o.hasChildren() && i.recurseDown(r(o), r);
          var s;
          if (i.groupSelectsChildren) {
            var a = (r(o) || []).find(function(l) {
              return l.selectable === !0;
            });
            s = O(a);
          } else
            s = i.isRowSelectableFunc ? i.isRowSelectableFunc(o) : !1;
          o.setRowSelectable(s);
        }
      });
    }, wa([
      b
    ], t.prototype, "init", null), t = wa([
      A("selectableService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var um = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ie = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, cm = (
  /** @class */
  function(n) {
    um(t, n);
    function t() {
      var e = n.call(this) || this;
      return e.previousAndFirstButtonsDisabled = !1, e.nextButtonDisabled = !1, e.lastButtonDisabled = !1, e.areListenersSetup = !1, e;
    }
    return t.prototype.postConstruct = function() {
      var e = this.gridOptionsService.is("enableRtl");
      this.setTemplate(this.getTemplate()), this.btFirst.insertAdjacentElement("afterbegin", oe(e ? "last" : "first", this.gridOptionsService)), this.btPrevious.insertAdjacentElement("afterbegin", oe(e ? "next" : "previous", this.gridOptionsService)), this.btNext.insertAdjacentElement("afterbegin", oe(e ? "previous" : "next", this.gridOptionsService)), this.btLast.insertAdjacentElement("afterbegin", oe(e ? "first" : "last", this.gridOptionsService)), this.addManagedPropertyListener("pagination", this.onPaginationChanged.bind(this)), this.addManagedPropertyListener("suppressPaginationPanel", this.onPaginationChanged.bind(this)), this.onPaginationChanged();
    }, t.prototype.onPaginationChanged = function() {
      var e = this.gridOptionsService.is("pagination"), r = e && !this.gridOptionsService.is("suppressPaginationPanel");
      this.setDisplayed(r), r && (this.setupListeners(), this.enableOrDisableButtons(), this.updateRowLabels(), this.setCurrentPageLabel(), this.setTotalLabels());
    }, t.prototype.setupListeners = function() {
      var e = this;
      this.areListenersSetup || (this.addManagedListener(this.eventService, g.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this)), [
        { el: this.btFirst, fn: this.onBtFirst.bind(this) },
        { el: this.btPrevious, fn: this.onBtPrevious.bind(this) },
        { el: this.btNext, fn: this.onBtNext.bind(this) },
        { el: this.btLast, fn: this.onBtLast.bind(this) }
      ].forEach(function(r) {
        var i = r.el, o = r.fn;
        e.addManagedListener(i, "click", o), e.addManagedListener(i, "keydown", function(s) {
          (s.key === _.ENTER || s.key === _.SPACE) && (s.preventDefault(), o());
        });
      }), this.areListenersSetup = !0);
    }, t.prototype.onBtFirst = function() {
      this.previousAndFirstButtonsDisabled || this.paginationProxy.goToFirstPage();
    }, t.prototype.setCurrentPageLabel = function() {
      var e = this.paginationProxy.getTotalPages() > 0, r = this.paginationProxy.getCurrentPage(), i = e ? r + 1 : 0;
      this.lbCurrent.innerHTML = this.formatNumber(i);
    }, t.prototype.formatNumber = function(e) {
      var r = this.gridOptionsService.getCallback("paginationNumberFormatter");
      if (r) {
        var i = { value: e };
        return r(i);
      }
      var o = this.localeService.getLocaleTextFunc(), s = o("thousandSeparator", ","), a = o("decimalSeparator", ".");
      return ss(e, s, a);
    }, t.prototype.getTemplate = function() {
      var e = this.localeService.getLocaleTextFunc(), r = e("page", "Page"), i = e("to", "to"), o = e("of", "of"), s = e("firstPage", "First Page"), a = e("previousPage", "Previous Page"), l = e("nextPage", "Next Page"), u = e("lastPage", "Last Page"), c = this.getCompId();
      return (
        /* html */
        '<div class="ag-paging-panel ag-unselectable" id="ag-' + c + `">
                <span class="ag-paging-row-summary-panel" role="status">
                    <span id="ag-` + c + `-first-row" ref="lbFirstRowOnPage" class="ag-paging-row-summary-panel-number"></span>
                    <span id="ag-` + c + '-to">' + i + `</span>
                    <span id="ag-` + c + `-last-row" ref="lbLastRowOnPage" class="ag-paging-row-summary-panel-number"></span>
                    <span id="ag-` + c + '-of">' + o + `</span>
                    <span id="ag-` + c + `-row-count" ref="lbRecordCount" class="ag-paging-row-summary-panel-number"></span>
                </span>
                <span class="ag-paging-page-summary-panel" role="presentation">
                    <div ref="btFirst" class="ag-paging-button" role="button" aria-label="` + s + `"></div>
                    <div ref="btPrevious" class="ag-paging-button" role="button" aria-label="` + a + `"></div>
                    <span class="ag-paging-description" role="status">
                        <span id="ag-` + c + '-start-page">' + r + `</span>
                        <span id="ag-` + c + `-start-page-number" ref="lbCurrent" class="ag-paging-number"></span>
                        <span id="ag-` + c + '-of-page">' + o + `</span>
                        <span id="ag-` + c + `-of-page-number" ref="lbTotal" class="ag-paging-number"></span>
                    </span>
                    <div ref="btNext" class="ag-paging-button" role="button" aria-label="` + l + `"></div>
                    <div ref="btLast" class="ag-paging-button" role="button" aria-label="` + u + `"></div>
                </span>
            </div>`
      );
    }, t.prototype.onBtNext = function() {
      this.nextButtonDisabled || this.paginationProxy.goToNextPage();
    }, t.prototype.onBtPrevious = function() {
      this.previousAndFirstButtonsDisabled || this.paginationProxy.goToPreviousPage();
    }, t.prototype.onBtLast = function() {
      this.lastButtonDisabled || this.paginationProxy.goToLastPage();
    }, t.prototype.enableOrDisableButtons = function() {
      var e = this.paginationProxy.getCurrentPage(), r = this.paginationProxy.isLastPageFound(), i = this.paginationProxy.getTotalPages();
      this.previousAndFirstButtonsDisabled = e === 0, this.toggleButtonDisabled(this.btFirst, this.previousAndFirstButtonsDisabled), this.toggleButtonDisabled(this.btPrevious, this.previousAndFirstButtonsDisabled);
      var o = this.isZeroPagesToDisplay(), s = r && e === i - 1;
      this.nextButtonDisabled = s || o, this.lastButtonDisabled = !r || o || e === i - 1, this.toggleButtonDisabled(this.btNext, this.nextButtonDisabled), this.toggleButtonDisabled(this.btLast, this.lastButtonDisabled);
    }, t.prototype.toggleButtonDisabled = function(e, r) {
      Jn(e, r), e.classList.toggle("ag-disabled", r), r ? e.removeAttribute("tabindex") : e.setAttribute("tabindex", "0");
    }, t.prototype.updateRowLabels = function() {
      var e = this.paginationProxy.getCurrentPage(), r = this.paginationProxy.getPageSize(), i = this.paginationProxy.isLastPageFound(), o = this.paginationProxy.isLastPageFound() ? this.paginationProxy.getMasterRowCount() : null, s, a;
      if (this.isZeroPagesToDisplay() ? s = a = 0 : (s = r * e + 1, a = s + r - 1, i && a > o && (a = o)), this.lbFirstRowOnPage.innerHTML = this.formatNumber(s), this.rowNodeBlockLoader.isLoading()) {
        var l = this.localeService.getLocaleTextFunc();
        this.lbLastRowOnPage.innerHTML = l("pageLastRowUnknown", "?");
      } else
        this.lbLastRowOnPage.innerHTML = this.formatNumber(a);
    }, t.prototype.isZeroPagesToDisplay = function() {
      var e = this.paginationProxy.isLastPageFound(), r = this.paginationProxy.getTotalPages();
      return e && r === 0;
    }, t.prototype.setTotalLabels = function() {
      var e = this.paginationProxy.isLastPageFound(), r = this.paginationProxy.getTotalPages(), i = e ? this.paginationProxy.getMasterRowCount() : null;
      if (i === 1) {
        var o = this.paginationProxy.getRow(0), s = o && o.group && !(o.groupData || o.aggData);
        if (s) {
          this.setTotalLabelsToZero();
          return;
        }
      }
      if (e)
        this.lbTotal.innerHTML = this.formatNumber(r), this.lbRecordCount.innerHTML = this.formatNumber(i);
      else {
        var a = this.localeService.getLocaleTextFunc()("more", "more");
        this.lbTotal.innerHTML = a, this.lbRecordCount.innerHTML = a;
      }
    }, t.prototype.setTotalLabelsToZero = function() {
      this.lbFirstRowOnPage.innerHTML = this.formatNumber(0), this.lbCurrent.innerHTML = this.formatNumber(0), this.lbLastRowOnPage.innerHTML = this.formatNumber(0), this.lbTotal.innerHTML = this.formatNumber(0), this.lbRecordCount.innerHTML = this.formatNumber(0);
    }, Ie([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), Ie([
      h("rowNodeBlockLoader")
    ], t.prototype, "rowNodeBlockLoader", void 0), Ie([
      P("btFirst")
    ], t.prototype, "btFirst", void 0), Ie([
      P("btPrevious")
    ], t.prototype, "btPrevious", void 0), Ie([
      P("btNext")
    ], t.prototype, "btNext", void 0), Ie([
      P("btLast")
    ], t.prototype, "btLast", void 0), Ie([
      P("lbRecordCount")
    ], t.prototype, "lbRecordCount", void 0), Ie([
      P("lbFirstRowOnPage")
    ], t.prototype, "lbFirstRowOnPage", void 0), Ie([
      P("lbLastRowOnPage")
    ], t.prototype, "lbLastRowOnPage", void 0), Ie([
      P("lbCurrent")
    ], t.prototype, "lbCurrent", void 0), Ie([
      P("lbTotal")
    ], t.prototype, "lbTotal", void 0), Ie([
      b
    ], t.prototype, "postConstruct", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var pm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), zt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Qt;
(function(n) {
  n[n.Loading = 0] = "Loading", n[n.NoRows = 1] = "NoRows";
})(Qt || (Qt = {}));
var dm = (
  /** @class */
  function(n) {
    pm(t, n);
    function t() {
      var e = n.call(this, t.TEMPLATE) || this;
      return e.inProgress = !1, e.destroyRequested = !1, e.manuallyDisplayed = !1, e;
    }
    return t.prototype.updateLayoutClasses = function(e, r) {
      var i = this.eOverlayWrapper.classList;
      i.toggle(se.AUTO_HEIGHT, r.autoHeight), i.toggle(se.NORMAL, r.normal), i.toggle(se.PRINT, r.print);
    }, t.prototype.postConstruct = function() {
      this.createManagedBean(new _s(this)), this.setDisplayed(!1, { skipAriaHidden: !0 }), this.addManagedListener(this.eventService, g.EVENT_ROW_DATA_UPDATED, this.onRowDataUpdated.bind(this)), this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this)), this.gridOptionsService.isRowModelType("clientSide") && !this.gridOptionsService.get("rowData") && this.showLoadingOverlay(), this.gridApi.registerOverlayWrapperComp(this);
    }, t.prototype.setWrapperTypeClass = function(e) {
      var r = this.eOverlayWrapper.classList;
      r.toggle("ag-overlay-loading-wrapper", e === Qt.Loading), r.toggle("ag-overlay-no-rows-wrapper", e === Qt.NoRows);
    }, t.prototype.showLoadingOverlay = function() {
      if (!this.gridOptionsService.is("suppressLoadingOverlay")) {
        var e = {}, r = this.userComponentFactory.getLoadingOverlayCompDetails(e), i = r.newAgStackInstance();
        this.showOverlay(i, Qt.Loading);
      }
    }, t.prototype.showNoRowsOverlay = function() {
      if (!this.gridOptionsService.is("suppressNoRowsOverlay")) {
        var e = {}, r = this.userComponentFactory.getNoRowsOverlayCompDetails(e), i = r.newAgStackInstance();
        this.showOverlay(i, Qt.NoRows);
      }
    }, t.prototype.showOverlay = function(e, r) {
      var i = this;
      this.inProgress || (this.setWrapperTypeClass(r), this.destroyActiveOverlay(), this.inProgress = !0, e && e.then(function(o) {
        i.inProgress = !1, i.eOverlayWrapper.appendChild(o.getGui()), i.activeOverlay = o, i.destroyRequested && (i.destroyRequested = !1, i.destroyActiveOverlay());
      }), this.manuallyDisplayed = this.columnModel.isReady() && !this.paginationProxy.isEmpty(), this.setDisplayed(!0, { skipAriaHidden: !0 }));
    }, t.prototype.destroyActiveOverlay = function() {
      if (this.inProgress) {
        this.destroyRequested = !0;
        return;
      }
      this.activeOverlay && (this.activeOverlay = this.getContext().destroyBean(this.activeOverlay), Fe(this.eOverlayWrapper));
    }, t.prototype.hideOverlay = function() {
      this.manuallyDisplayed = !1, this.destroyActiveOverlay(), this.setDisplayed(!1, { skipAriaHidden: !0 });
    }, t.prototype.destroy = function() {
      this.destroyActiveOverlay(), n.prototype.destroy.call(this);
    }, t.prototype.showOrHideOverlay = function() {
      var e = this.paginationProxy.isEmpty(), r = this.gridOptionsService.is("suppressNoRowsOverlay");
      e && !r ? this.showNoRowsOverlay() : this.hideOverlay();
    }, t.prototype.onRowDataUpdated = function() {
      this.showOrHideOverlay();
    }, t.prototype.onNewColumnsLoaded = function() {
      this.columnModel.isReady() && !this.paginationProxy.isEmpty() && !this.manuallyDisplayed && this.hideOverlay();
    }, t.TEMPLATE = `
        <div class="ag-overlay" aria-hidden="true">
            <div class="ag-overlay-panel">
                <div class="ag-overlay-wrapper" ref="eOverlayWrapper"></div>
            </div>
        </div>`, zt([
      h("userComponentFactory")
    ], t.prototype, "userComponentFactory", void 0), zt([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), zt([
      h("gridApi")
    ], t.prototype, "gridApi", void 0), zt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), zt([
      P("eOverlayWrapper")
    ], t.prototype, "eOverlayWrapper", void 0), zt([
      b
    ], t.prototype, "postConstruct", null), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var hm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), wi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, fm = (
  /** @class */
  function(n) {
    hm(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getFirstRow = function() {
      var e = 0, r;
      return this.pinnedRowModel.getPinnedTopRowCount() ? r = "top" : this.rowModel.getRowCount() ? (r = null, e = this.paginationProxy.getPageFirstRow()) : this.pinnedRowModel.getPinnedBottomRowCount() && (r = "bottom"), r === void 0 ? null : { rowIndex: e, rowPinned: r };
    }, t.prototype.getLastRow = function() {
      var e, r = null, i = this.pinnedRowModel.getPinnedBottomRowCount(), o = this.pinnedRowModel.getPinnedTopRowCount();
      return i ? (r = "bottom", e = i - 1) : this.rowModel.getRowCount() ? (r = null, e = this.paginationProxy.getPageLastRow()) : o && (r = "top", e = o - 1), e === void 0 ? null : { rowIndex: e, rowPinned: r };
    }, t.prototype.getRowNode = function(e) {
      switch (e.rowPinned) {
        case "top":
          return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
        case "bottom":
          return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
        default:
          return this.rowModel.getRow(e.rowIndex);
      }
    }, t.prototype.sameRow = function(e, r) {
      return !e && !r ? !0 : e && !r || !e && r ? !1 : e.rowIndex === r.rowIndex && e.rowPinned == r.rowPinned;
    }, t.prototype.before = function(e, r) {
      switch (e.rowPinned) {
        case "top":
          if (r.rowPinned !== "top")
            return !0;
          break;
        case "bottom":
          if (r.rowPinned !== "bottom")
            return !1;
          break;
        default:
          if (O(r.rowPinned))
            return r.rowPinned !== "top";
          break;
      }
      return e.rowIndex < r.rowIndex;
    }, t.prototype.rowMax = function(e) {
      var r = this, i;
      return e.forEach(function(o) {
        (i === void 0 || r.before(i, o)) && (i = o);
      }), i;
    }, t.prototype.rowMin = function(e) {
      var r = this, i;
      return e.forEach(function(o) {
        (i === void 0 || r.before(o, i)) && (i = o);
      }), i;
    }, wi([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), wi([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), wi([
      h("paginationProxy")
    ], t.prototype, "paginationProxy", void 0), t = wi([
      A("rowPositionUtils")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var vm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), gm = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, ym = (
  /** @class */
  function(n) {
    vm(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.createId = function(e) {
      var r = e.rowIndex, i = e.rowPinned, o = e.column;
      return this.createIdFromValues({ rowIndex: r, column: o, rowPinned: i });
    }, t.prototype.createIdFromValues = function(e) {
      var r = e.rowIndex, i = e.rowPinned, o = e.column;
      return r + "." + (i ?? "null") + "." + o.getId();
    }, t.prototype.equals = function(e, r) {
      var i = e.column === r.column, o = e.rowPinned === r.rowPinned, s = e.rowIndex === r.rowIndex;
      return i && o && s;
    }, t = gm([
      A("cellPositionUtils")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Cm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Mr = (
  /** @class */
  function() {
    function n(t) {
      this.cellValueChanges = t;
    }
    return n;
  }()
), dn = (
  /** @class */
  function(n) {
    Cm(t, n);
    function t(e, r, i, o) {
      var s = n.call(this, e) || this;
      return s.initialRange = r, s.finalRange = i, s.ranges = o, s;
    }
    return t;
  }(Mr)
), Sa = (
  /** @class */
  function() {
    function n(t) {
      this.actionStack = [], this.maxStackSize = t || n.DEFAULT_STACK_SIZE, this.actionStack = new Array(this.maxStackSize);
    }
    return n.prototype.pop = function() {
      return this.actionStack.pop();
    }, n.prototype.push = function(t) {
      var e = t.cellValueChanges && t.cellValueChanges.length > 0;
      e && (this.actionStack.length === this.maxStackSize && this.actionStack.shift(), this.actionStack.push(t));
    }, n.prototype.clear = function() {
      this.actionStack = [];
    }, n.prototype.getCurrentStackSize = function() {
      return this.actionStack.length;
    }, n.DEFAULT_STACK_SIZE = 10, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var mm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), oo = function() {
  return oo = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, oo.apply(this, arguments);
}, $e = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, wm = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Sm = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(wm(arguments[t]));
  return n;
}, Em = (
  /** @class */
  function(n) {
    mm(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.cellValueChanges = [], e.activeCellEdit = null, e.activeRowEdit = null, e.isPasting = !1, e.isRangeInAction = !1, e.onCellValueChanged = function(r) {
        var i = { column: r.column, rowIndex: r.rowIndex, rowPinned: r.rowPinned }, o = e.activeCellEdit !== null && e.cellPositionUtils.equals(e.activeCellEdit, i), s = e.activeRowEdit !== null && e.rowPositionUtils.sameRow(e.activeRowEdit, i), a = o || s || e.isPasting || e.isRangeInAction;
        if (a) {
          var l = r.rowPinned, u = r.rowIndex, c = r.column, p = r.oldValue, d = r.value, v = {
            rowPinned: l,
            rowIndex: u,
            columnId: c.getColId(),
            newValue: d,
            oldValue: p
          };
          e.cellValueChanges.push(v);
        }
      }, e.clearStacks = function() {
        e.undoStack.clear(), e.redoStack.clear();
      }, e;
    }
    return t.prototype.init = function() {
      var e = this;
      if (this.gridOptionsService.is("undoRedoCellEditing")) {
        var r = this.gridOptionsService.getNum("undoRedoCellEditingLimit");
        r <= 0 || (this.undoStack = new Sa(r), this.redoStack = new Sa(r), this.addRowEditingListeners(), this.addCellEditingListeners(), this.addPasteListeners(), this.addFillListeners(), this.addCellKeyListeners(), this.addManagedListener(this.eventService, g.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged), this.addManagedListener(this.eventService, g.EVENT_MODEL_UPDATED, function(i) {
          i.keepUndoRedoStack || e.clearStacks();
        }), this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.clearStacks), this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, this.clearStacks), this.addManagedListener(this.eventService, g.EVENT_COLUMN_GROUP_OPENED, this.clearStacks), this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, this.clearStacks), this.addManagedListener(this.eventService, g.EVENT_COLUMN_MOVED, this.clearStacks), this.addManagedListener(this.eventService, g.EVENT_COLUMN_PINNED, this.clearStacks), this.addManagedListener(this.eventService, g.EVENT_COLUMN_VISIBLE, this.clearStacks), this.addManagedListener(this.eventService, g.EVENT_ROW_DRAG_END, this.clearStacks), this.ctrlsService.whenReady(function() {
          e.gridBodyCtrl = e.ctrlsService.getGridBodyCtrl();
        }));
      }
    }, t.prototype.getCurrentUndoStackSize = function() {
      return this.undoStack ? this.undoStack.getCurrentStackSize() : 0;
    }, t.prototype.getCurrentRedoStackSize = function() {
      return this.redoStack ? this.redoStack.getCurrentStackSize() : 0;
    }, t.prototype.undo = function(e) {
      var r = {
        type: g.EVENT_UNDO_STARTED,
        source: e
      };
      this.eventService.dispatchEvent(r);
      var i = this.undoRedo(this.undoStack, this.redoStack, "initialRange", "oldValue", "undo"), o = {
        type: g.EVENT_UNDO_ENDED,
        source: e,
        operationPerformed: i
      };
      this.eventService.dispatchEvent(o);
    }, t.prototype.redo = function(e) {
      var r = {
        type: g.EVENT_REDO_STARTED,
        source: e
      };
      this.eventService.dispatchEvent(r);
      var i = this.undoRedo(this.redoStack, this.undoStack, "finalRange", "newValue", "redo"), o = {
        type: g.EVENT_REDO_ENDED,
        source: e,
        operationPerformed: i
      };
      this.eventService.dispatchEvent(o);
    }, t.prototype.undoRedo = function(e, r, i, o, s) {
      if (!e)
        return !1;
      var a = e.pop();
      return !a || !a.cellValueChanges ? !1 : (this.processAction(a, function(l) {
        return l[o];
      }, s), a instanceof dn ? this.processRange(a.ranges || [a[i]]) : this.processCell(a.cellValueChanges), r.push(a), !0);
    }, t.prototype.processAction = function(e, r, i) {
      var o = this;
      e.cellValueChanges.forEach(function(s) {
        var a = s.rowIndex, l = s.rowPinned, u = s.columnId, c = { rowIndex: a, rowPinned: l }, p = o.getRowNode(c);
        p.displayed && p.setDataValue(u, r(s), i);
      });
    }, t.prototype.processRange = function(e) {
      var r = this, i;
      this.rangeService.removeAllCellRanges(!0), e.forEach(function(o, s) {
        if (o) {
          var a = o.startRow, l = o.endRow;
          s === e.length - 1 && (i = {
            rowPinned: a.rowPinned,
            rowIndex: a.rowIndex,
            columnId: o.startColumn.getColId()
          }, r.setLastFocusedCell(i));
          var u = {
            rowStartIndex: a.rowIndex,
            rowStartPinned: a.rowPinned,
            rowEndIndex: l.rowIndex,
            rowEndPinned: l.rowPinned,
            columnStart: o.startColumn,
            columns: o.columns
          };
          r.rangeService.addCellRange(u);
        }
      });
    }, t.prototype.processCell = function(e) {
      var r = e[0], i = r.rowIndex, o = r.rowPinned, s = { rowIndex: i, rowPinned: o }, a = this.getRowNode(s), l = {
        rowPinned: r.rowPinned,
        rowIndex: a.rowIndex,
        columnId: r.columnId
      };
      this.setLastFocusedCell(l, !!this.rangeService);
    }, t.prototype.setLastFocusedCell = function(e, r) {
      var i = e.rowIndex, o = e.columnId, s = e.rowPinned, a = this.gridBodyCtrl.getScrollFeature(), l = this.columnModel.getGridColumn(o);
      if (l) {
        a.ensureIndexVisible(i), a.ensureColumnVisible(l);
        var u = { rowIndex: i, column: l, rowPinned: s };
        this.focusService.setFocusedCell(oo(oo({}, u), { forceBrowserFocus: !0 })), r && this.rangeService.setRangeToCell(u);
      }
    }, t.prototype.addRowEditingListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, g.EVENT_ROW_EDITING_STARTED, function(r) {
        e.activeRowEdit = { rowIndex: r.rowIndex, rowPinned: r.rowPinned };
      }), this.addManagedListener(this.eventService, g.EVENT_ROW_EDITING_STOPPED, function() {
        var r = new Mr(e.cellValueChanges);
        e.pushActionsToUndoStack(r), e.activeRowEdit = null;
      });
    }, t.prototype.addCellEditingListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, g.EVENT_CELL_EDITING_STARTED, function(r) {
        e.activeCellEdit = { column: r.column, rowIndex: r.rowIndex, rowPinned: r.rowPinned };
      }), this.addManagedListener(this.eventService, g.EVENT_CELL_EDITING_STOPPED, function(r) {
        e.activeCellEdit = null;
        var i = r.valueChanged && !e.activeRowEdit && !e.isPasting && !e.isRangeInAction;
        if (i) {
          var o = new Mr(e.cellValueChanges);
          e.pushActionsToUndoStack(o);
        }
      });
    }, t.prototype.addPasteListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, g.EVENT_PASTE_START, function() {
        e.isPasting = !0;
      }), this.addManagedListener(this.eventService, g.EVENT_PASTE_END, function() {
        var r = new Mr(e.cellValueChanges);
        e.pushActionsToUndoStack(r), e.isPasting = !1;
      });
    }, t.prototype.addFillListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, g.EVENT_FILL_START, function() {
        e.isRangeInAction = !0;
      }), this.addManagedListener(this.eventService, g.EVENT_FILL_END, function(r) {
        var i = new dn(e.cellValueChanges, r.initialRange, r.finalRange);
        e.pushActionsToUndoStack(i), e.isRangeInAction = !1;
      });
    }, t.prototype.addCellKeyListeners = function() {
      var e = this;
      this.addManagedListener(this.eventService, g.EVENT_KEY_SHORTCUT_CHANGED_CELL_START, function() {
        e.isRangeInAction = !0;
      }), this.addManagedListener(this.eventService, g.EVENT_KEY_SHORTCUT_CHANGED_CELL_END, function() {
        var r;
        e.rangeService && e.gridOptionsService.isEnableRangeSelection() ? r = new dn(e.cellValueChanges, void 0, void 0, Sm(e.rangeService.getCellRanges())) : r = new Mr(e.cellValueChanges), e.pushActionsToUndoStack(r), e.isRangeInAction = !1;
      });
    }, t.prototype.pushActionsToUndoStack = function(e) {
      this.undoStack.push(e), this.cellValueChanges = [], this.redoStack.clear();
    }, t.prototype.getRowNode = function(e) {
      switch (e.rowPinned) {
        case "top":
          return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
        case "bottom":
          return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
        default:
          return this.rowModel.getRow(e.rowIndex);
      }
    }, $e([
      h("focusService")
    ], t.prototype, "focusService", void 0), $e([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), $e([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), $e([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), $e([
      h("cellPositionUtils")
    ], t.prototype, "cellPositionUtils", void 0), $e([
      h("rowPositionUtils")
    ], t.prototype, "rowPositionUtils", void 0), $e([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), $e([
      Y("rangeService")
    ], t.prototype, "rangeService", void 0), $e([
      b
    ], t.prototype, "init", null), t = $e([
      A("undoRedoService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var _m = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), hn = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Rm = (
  /** @class */
  function(n) {
    _m(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.findHeader = function(e, r) {
      var i, o, s;
      if (e.column instanceof Te ? (o = "getDisplayedGroup" + r, i = this.columnModel[o](e.column)) : (s = "getDisplayedCol" + r, i = this.columnModel[s](e.column)), !!i) {
        var a = e.headerRowIndex, l = this.getHeaderRowType(a);
        if (l === fe.COLUMN_GROUP) {
          var u = i;
          if (u.isPadding() && this.isAnyChildSpanningHeaderHeight(u)) {
            var c = this.getColumnVisibleChild(u, a, r), p = c.nextFocusColumn, d = c.nextRow;
            p && (i = p, a = d);
          }
        }
        return {
          column: i,
          headerRowIndex: a
        };
      }
    }, t.prototype.isAnyChildSpanningHeaderHeight = function(e) {
      return e ? e.getLeafColumns().some(function(r) {
        return r.isSpanHeaderHeight();
      }) : !1;
    }, t.prototype.getColumnVisibleParent = function(e, r) {
      var i = this.getHeaderRowType(r), o = i === fe.FLOATING_FILTER, s = i === fe.COLUMN, a = o ? e : e.getParent(), l = r - 1;
      if (s && this.isAnyChildSpanningHeaderHeight(e.getParent())) {
        for (; a && a.isPadding(); )
          a = a.getParent(), l--;
        l < 0 && (a = e, l = r);
      }
      return { nextFocusColumn: a, nextRow: l };
    }, t.prototype.getColumnVisibleChild = function(e, r, i) {
      i === void 0 && (i = "After");
      var o = this.getHeaderRowType(r), s = e, a = r + 1;
      if (o === fe.COLUMN_GROUP) {
        var l = e.getLeafColumns(), u = i === "After" ? l[0] : q(l);
        if (this.isAnyChildSpanningHeaderHeight(u.getParent())) {
          s = u;
          for (var c = u.getParent(); c && c !== e; )
            c = c.getParent(), a++;
        } else
          s = e.getDisplayedChildren()[0];
      }
      return { nextFocusColumn: s, nextRow: a };
    }, t.prototype.getHeaderRowType = function(e) {
      var r = this.ctrlsService.getHeaderRowContainerCtrl();
      if (r)
        return r.getRowType(e);
    }, t.prototype.findColAtEdgeForHeaderRow = function(e, r) {
      var i = this.columnModel.getAllDisplayedColumns(), o = i[r === "start" ? 0 : i.length - 1];
      if (o) {
        var s = this.ctrlsService.getHeaderRowContainerCtrl(o.getPinned()), a = s.getRowType(e);
        if (a == fe.COLUMN_GROUP) {
          var l = this.columnModel.getColumnGroupAtLevel(o, e);
          return {
            headerRowIndex: e,
            column: l
          };
        }
        return {
          // if type==null, means the header level didn't exist
          headerRowIndex: a == null ? -1 : e,
          column: o
        };
      }
    }, hn([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), hn([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t = hn([
      A("headerPositionUtils")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Om = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Tm = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.buildColumnDefs = function(t, e, r) {
      var i = this, o = [], s = {};
      return t.forEach(function(a) {
        for (var l = i.createDefFromColumn(a, e, r), u = !0, c = l, p = a.getOriginalParent(); p; ) {
          var d = null;
          if (p.isPadding()) {
            p = p.getOriginalParent();
            continue;
          }
          var v = s[p.getGroupId()];
          if (v) {
            v.children.push(c), u = !1;
            break;
          }
          d = i.createDefFromGroup(p), d && (d.children = [c], s[d.groupId] = d, c = d, p = p.getOriginalParent());
        }
        u && o.push(c);
      }), o;
    }, n.prototype.createDefFromGroup = function(t) {
      var e = xi(t.getColGroupDef(), ["children"]);
      return e && (e.groupId = t.getGroupId()), e;
    }, n.prototype.createDefFromColumn = function(t, e, r) {
      var i = xi(t.getColDef());
      return i.colId = t.getColId(), i.width = t.getActualWidth(), i.rowGroup = t.isRowGroupActive(), i.rowGroupIndex = t.isRowGroupActive() ? e.indexOf(t) : null, i.pivot = t.isPivotActive(), i.pivotIndex = t.isPivotActive() ? r.indexOf(t) : null, i.aggFunc = t.isValueActive() ? t.getAggFunc() : null, i.hide = t.isVisible() ? void 0 : !0, i.pinned = t.isPinned() ? t.getPinned() : null, i.sort = t.getSort() ? t.getSort() : null, i.sortIndex = t.getSortIndex() != null ? t.getSortIndex() : null, i;
    }, n = Om([
      A("columnDefFactory")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var fn = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, bm = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getInitialRowClasses = function(t) {
      var e = [];
      return O(t.extraCssClass) && e.push(t.extraCssClass), e.push("ag-row"), e.push(t.rowFocused ? "ag-row-focus" : "ag-row-no-focus"), t.fadeRowIn && e.push("ag-opacity-zero"), e.push(t.rowIsEven ? "ag-row-even" : "ag-row-odd"), t.rowNode.isRowPinned() && e.push("ag-row-pinned"), t.rowNode.isSelected() && e.push("ag-row-selected"), t.rowNode.footer && e.push("ag-row-footer"), e.push("ag-row-level-" + t.rowLevel), t.rowNode.stub && e.push("ag-row-loading"), t.fullWidthRow && e.push("ag-full-width-row"), t.expandable && (e.push("ag-row-group"), e.push(t.rowNode.expanded ? "ag-row-group-expanded" : "ag-row-group-contracted")), t.rowNode.dragging && e.push("ag-row-dragging"), Tn(e, this.processClassesFromGridOptions(t.rowNode)), Tn(e, this.preProcessRowClassRules(t.rowNode)), e.push(t.printLayout ? "ag-row-position-relative" : "ag-row-position-absolute"), t.firstRowOnPage && e.push("ag-row-first"), t.lastRowOnPage && e.push("ag-row-last"), t.fullWidthRow && (t.pinned === "left" && e.push("ag-cell-last-left-pinned"), t.pinned === "right" && e.push("ag-cell-first-right-pinned")), e;
    }, n.prototype.processClassesFromGridOptions = function(t) {
      var e = [], r = function(l) {
        typeof l == "string" ? e.push(l) : Array.isArray(l) && l.forEach(function(u) {
          return e.push(u);
        });
      }, i = this.gridOptionsService.get("rowClass");
      if (i) {
        if (typeof i == "function")
          return console.warn("AG Grid: rowClass should not be a function, please use getRowClass instead"), [];
        r(i);
      }
      var o = this.gridOptionsService.getCallback("getRowClass");
      if (o) {
        var s = {
          data: t.data,
          node: t,
          rowIndex: t.rowIndex
        }, a = o(s);
        r(a);
      }
      return e;
    }, n.prototype.preProcessRowClassRules = function(t) {
      var e = [];
      return this.processRowClassRules(t, function(r) {
        e.push(r);
      }, function(r) {
      }), e;
    }, n.prototype.processRowClassRules = function(t, e, r) {
      var i = {
        data: t.data,
        node: t,
        rowIndex: t.rowIndex,
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi,
        context: this.gridOptionsService.context
      };
      this.stylingService.processClassRules(this.gridOptionsService.get("rowClassRules"), i, e, r);
    }, n.prototype.calculateRowLevel = function(t) {
      return t.group ? t.level : t.parent ? t.parent.level + 1 : 0;
    }, fn([
      h("stylingService")
    ], n.prototype, "stylingService", void 0), fn([
      h("gridOptionsService")
    ], n.prototype, "gridOptionsService", void 0), n = fn([
      A("rowCssClassCalculator")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Pm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Si = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Dm = (
  /** @class */
  function(n) {
    Pm(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      var e = this;
      this.isAccentedSort = this.gridOptionsService.is("accentedSort"), this.primaryColumnsSortGroups = this.gridOptionsService.isColumnsSortingCoupledToGroup(), this.addManagedPropertyListener("accentedSort", function(r) {
        return e.isAccentedSort = r.currentValue;
      }), this.addManagedPropertyListener("autoGroupColumnDef", function() {
        return e.primaryColumnsSortGroups = e.gridOptionsService.isColumnsSortingCoupledToGroup();
      });
    }, t.prototype.doFullSort = function(e, r) {
      var i = function(s, a) {
        return { currentPos: a, rowNode: s };
      }, o = e.map(i);
      return o.sort(this.compareRowNodes.bind(this, r)), o.map(function(s) {
        return s.rowNode;
      });
    }, t.prototype.compareRowNodes = function(e, r, i) {
      for (var o = r.rowNode, s = i.rowNode, a = 0, l = e.length; a < l; a++) {
        var u = e[a], c = u.sort === "desc", p = this.getValue(o, u.column), d = this.getValue(s, u.column), v = void 0, f = this.getComparator(u, o);
        f ? v = f(p, d, o, s, c) : v = G.defaultComparator(p, d, this.isAccentedSort);
        var y = !isNaN(v);
        if (y && v !== 0)
          return u.sort === "asc" ? v : v * -1;
      }
      return r.currentPos - i.currentPos;
    }, t.prototype.getComparator = function(e, r) {
      var i = e.column, o = i.getColDef().comparator;
      if (o != null)
        return o;
      if (i.getColDef().showRowGroup) {
        var s = !r.group && i.getColDef().field;
        if (s) {
          var a = this.columnModel.getPrimaryColumn(s);
          if (a)
            return a.getColDef().comparator;
        }
      }
    }, t.prototype.getValue = function(e, r) {
      var i, o;
      if (!this.primaryColumnsSortGroups)
        return this.valueService.getValue(r, e, !1, !1);
      var s = e.rowGroupColumn === r;
      if (s) {
        var a = this.gridOptionsService.isGroupUseEntireRow(this.columnModel.isPivotActive());
        if (a) {
          var l = r.getColDef().keyCreator;
          if (l)
            return e.key;
          var u = (i = e.allLeafChildren) === null || i === void 0 ? void 0 : i[0];
          return u ? this.valueService.getValue(r, u, !1, !1) : void 0;
        }
        var c = this.columnModel.getGroupDisplayColumnForGroup(r.getId());
        return c ? (o = e.groupData) === null || o === void 0 ? void 0 : o[c.getId()] : void 0;
      }
      if (!(e.group && r.getColDef().showRowGroup))
        return this.valueService.getValue(r, e, !1, !1);
    }, Si([
      h("valueService")
    ], t.prototype, "valueService", void 0), Si([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Si([
      b
    ], t.prototype, "init", null), t = Si([
      A("rowNodeSorter")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Am = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Fm = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Lm = (
  /** @class */
  function(n) {
    Am(t, n);
    function t() {
      var r = n !== null && n.apply(this, arguments) || this;
      return r.ready = !1, r.readyCallbacks = [], r;
    }
    e = t, t.prototype.checkReady = function() {
      if (this.ready = this.gridCtrl != null && this.gridBodyCtrl != null && this.centerRowContainerCtrl != null && this.leftRowContainerCtrl != null && this.rightRowContainerCtrl != null && this.bottomCenterRowContainerCtrl != null && this.bottomLeftRowContainerCtrl != null && this.bottomRightRowContainerCtrl != null && this.topCenterRowContainerCtrl != null && this.topLeftRowContainerCtrl != null && this.topRightRowContainerCtrl != null && this.stickyTopCenterRowContainerCtrl != null && this.stickyTopLeftRowContainerCtrl != null && this.stickyTopRightRowContainerCtrl != null && this.centerHeaderRowContainerCtrl != null && this.leftHeaderRowContainerCtrl != null && this.rightHeaderRowContainerCtrl != null && this.fakeHScrollComp != null && this.fakeVScrollComp != null && this.gridHeaderCtrl != null, this.ready) {
        var r = this.createReadyParams();
        this.readyCallbacks.forEach(function(i) {
          return i(r);
        }), this.readyCallbacks.length = 0;
      }
    }, t.prototype.whenReady = function(r) {
      this.ready ? r(this.createReadyParams()) : this.readyCallbacks.push(r);
    }, t.prototype.createReadyParams = function() {
      return {
        centerRowContainerCtrl: this.centerRowContainerCtrl,
        leftRowContainerCtrl: this.leftRowContainerCtrl,
        rightRowContainerCtrl: this.rightRowContainerCtrl,
        bottomCenterRowContainerCtrl: this.bottomCenterRowContainerCtrl,
        bottomLeftRowContainerCtrl: this.bottomLeftRowContainerCtrl,
        bottomRightRowContainerCtrl: this.bottomRightRowContainerCtrl,
        topCenterRowContainerCtrl: this.topCenterRowContainerCtrl,
        topLeftRowContainerCtrl: this.topLeftRowContainerCtrl,
        topRightRowContainerCtrl: this.topRightRowContainerCtrl,
        stickyTopCenterRowContainerCtrl: this.stickyTopCenterRowContainerCtrl,
        stickyTopLeftRowContainerCtrl: this.stickyTopLeftRowContainerCtrl,
        stickyTopRightRowContainerCtrl: this.stickyTopRightRowContainerCtrl,
        centerHeaderRowContainerCtrl: this.centerHeaderRowContainerCtrl,
        leftHeaderRowContainerCtrl: this.leftHeaderRowContainerCtrl,
        rightHeaderRowContainerCtrl: this.rightHeaderRowContainerCtrl,
        fakeHScrollComp: this.fakeHScrollComp,
        fakeVScrollComp: this.fakeVScrollComp,
        gridBodyCtrl: this.gridBodyCtrl,
        gridCtrl: this.gridCtrl,
        gridHeaderCtrl: this.gridHeaderCtrl
      };
    }, t.prototype.registerFakeHScrollComp = function(r) {
      this.fakeHScrollComp = r, this.checkReady();
    }, t.prototype.registerFakeVScrollComp = function(r) {
      this.fakeVScrollComp = r, this.checkReady();
    }, t.prototype.registerGridHeaderCtrl = function(r) {
      this.gridHeaderCtrl = r, this.checkReady();
    }, t.prototype.registerCenterRowContainerCtrl = function(r) {
      this.centerRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerLeftRowContainerCtrl = function(r) {
      this.leftRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerRightRowContainerCtrl = function(r) {
      this.rightRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerTopCenterRowContainerCtrl = function(r) {
      this.topCenterRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerTopLeftRowContainerCon = function(r) {
      this.topLeftRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerTopRightRowContainerCtrl = function(r) {
      this.topRightRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerStickyTopCenterRowContainerCtrl = function(r) {
      this.stickyTopCenterRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerStickyTopLeftRowContainerCon = function(r) {
      this.stickyTopLeftRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerStickyTopRightRowContainerCtrl = function(r) {
      this.stickyTopRightRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerBottomCenterRowContainerCtrl = function(r) {
      this.bottomCenterRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerBottomLeftRowContainerCtrl = function(r) {
      this.bottomLeftRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerBottomRightRowContainerCtrl = function(r) {
      this.bottomRightRowContainerCtrl = r, this.checkReady();
    }, t.prototype.registerHeaderContainer = function(r, i) {
      switch (i) {
        case "left":
          this.leftHeaderRowContainerCtrl = r;
          break;
        case "right":
          this.rightHeaderRowContainerCtrl = r;
          break;
        default:
          this.centerHeaderRowContainerCtrl = r;
          break;
      }
      this.checkReady();
    }, t.prototype.registerGridBodyCtrl = function(r) {
      this.gridBodyCtrl = r, this.checkReady();
    }, t.prototype.registerGridCtrl = function(r) {
      this.gridCtrl = r, this.checkReady();
    }, t.prototype.getFakeHScrollComp = function() {
      return this.fakeHScrollComp;
    }, t.prototype.getFakeVScrollComp = function() {
      return this.fakeVScrollComp;
    }, t.prototype.getGridHeaderCtrl = function() {
      return this.gridHeaderCtrl;
    }, t.prototype.getGridCtrl = function() {
      return this.gridCtrl;
    }, t.prototype.getCenterRowContainerCtrl = function() {
      return this.centerRowContainerCtrl;
    }, t.prototype.getTopCenterRowContainerCtrl = function() {
      return this.topCenterRowContainerCtrl;
    }, t.prototype.getBottomCenterRowContainerCtrl = function() {
      return this.bottomCenterRowContainerCtrl;
    }, t.prototype.getStickyTopCenterRowContainerCtrl = function() {
      return this.stickyTopCenterRowContainerCtrl;
    }, t.prototype.getGridBodyCtrl = function() {
      return this.gridBodyCtrl;
    }, t.prototype.getHeaderRowContainerCtrls = function() {
      return [this.leftHeaderRowContainerCtrl, this.rightHeaderRowContainerCtrl, this.centerHeaderRowContainerCtrl];
    }, t.prototype.getHeaderRowContainerCtrl = function(r) {
      switch (r) {
        case "left":
          return this.leftHeaderRowContainerCtrl;
        case "right":
          return this.rightHeaderRowContainerCtrl;
        default:
          return this.centerHeaderRowContainerCtrl;
      }
    };
    var e;
    return t.NAME = "ctrlsService", t = e = Fm([
      A(e.NAME)
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Mm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Im = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, xm = (
  /** @class */
  function(n) {
    Mm(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.registry = {}, e;
    }
    return t.prototype.register = function(e) {
      this.registry[e.controllerName] = e.controllerClass;
    }, t.prototype.getInstance = function(e) {
      var r = this.registry[e];
      if (r != null)
        return new r();
    }, t = Im([
      A("ctrlsFactory")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Nm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ei = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ru = (
  /** @class */
  function(n) {
    Nm(t, n);
    function t(e, r) {
      var i = n.call(this, e) || this;
      return i.direction = r, i.hideTimeout = null, i;
    }
    return t.prototype.postConstruct = function() {
      this.addManagedListener(this.eventService, g.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this)), this.onScrollVisibilityChanged(), this.addOrRemoveCssClass("ag-apple-scrollbar", ns() || Ot());
    }, t.prototype.initialiseInvisibleScrollbar = function() {
      this.invisibleScrollbar === void 0 && (this.invisibleScrollbar = Jt(), this.invisibleScrollbar && (this.hideAndShowInvisibleScrollAsNeeded(), this.addActiveListenerToggles()));
    }, t.prototype.addActiveListenerToggles = function() {
      var e = this, r = ["mouseenter", "mousedown", "touchstart"], i = ["mouseleave", "touchend"], o = this.getGui();
      r.forEach(function(s) {
        return e.addManagedListener(o, s, function() {
          return e.addOrRemoveCssClass("ag-scrollbar-active", !0);
        });
      }), i.forEach(function(s) {
        return e.addManagedListener(o, s, function() {
          return e.addOrRemoveCssClass("ag-scrollbar-active", !1);
        });
      });
    }, t.prototype.onScrollVisibilityChanged = function() {
      this.invisibleScrollbar === void 0 && this.initialiseInvisibleScrollbar(), this.setScrollVisible();
    }, t.prototype.hideAndShowInvisibleScrollAsNeeded = function() {
      var e = this;
      this.addManagedListener(this.eventService, g.EVENT_BODY_SCROLL, function(r) {
        r.direction === e.direction && (e.hideTimeout !== null && (window.clearTimeout(e.hideTimeout), e.hideTimeout = null), e.addOrRemoveCssClass("ag-scrollbar-scrolling", !0));
      }), this.addManagedListener(this.eventService, g.EVENT_BODY_SCROLL_END, function() {
        e.hideTimeout = window.setTimeout(function() {
          e.addOrRemoveCssClass("ag-scrollbar-scrolling", !1), e.hideTimeout = null;
        }, 400);
      });
    }, t.prototype.getViewport = function() {
      return this.eViewport;
    }, t.prototype.getContainer = function() {
      return this.eContainer;
    }, Ei([
      P("eViewport")
    ], t.prototype, "eViewport", void 0), Ei([
      P("eContainer")
    ], t.prototype, "eContainer", void 0), Ei([
      h("scrollVisibleService")
    ], t.prototype, "scrollVisibleService", void 0), Ei([
      h("ctrlsService")
    ], t.prototype, "ctrlsService", void 0), t;
  }(W)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Gm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Lr = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Hm = (
  /** @class */
  function(n) {
    Gm(t, n);
    function t() {
      return n.call(this, t.TEMPLATE, "horizontal") || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this;
      n.prototype.postConstruct.call(this);
      var r = this.setFakeHScrollSpacerWidths.bind(this);
      this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, r), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, r), this.addManagedListener(this.eventService, g.EVENT_PINNED_ROW_DATA_CHANGED, this.onPinnedRowDataChanged.bind(this)), this.addManagedPropertyListener("domLayout", r), this.ctrlsService.registerFakeHScrollComp(this), this.createManagedBean(new Os(function(i) {
        return e.eContainer.style.width = i + "px";
      }));
    }, t.prototype.initialiseInvisibleScrollbar = function() {
      this.invisibleScrollbar === void 0 && (this.enableRtl = this.gridOptionsService.is("enableRtl"), n.prototype.initialiseInvisibleScrollbar.call(this), this.invisibleScrollbar && this.refreshCompBottom());
    }, t.prototype.onPinnedRowDataChanged = function() {
      this.refreshCompBottom();
    }, t.prototype.refreshCompBottom = function() {
      if (this.invisibleScrollbar) {
        var e = this.pinnedRowModel.getPinnedBottomTotalHeight();
        this.getGui().style.bottom = e + "px";
      }
    }, t.prototype.onScrollVisibilityChanged = function() {
      n.prototype.onScrollVisibilityChanged.call(this), this.setFakeHScrollSpacerWidths();
    }, t.prototype.setFakeHScrollSpacerWidths = function() {
      var e = this.scrollVisibleService.isVerticalScrollShowing(), r = this.columnModel.getDisplayedColumnsRightWidth(), i = !this.enableRtl && e, o = this.gridOptionsService.getScrollbarWidth();
      i && (r += o), Be(this.eRightSpacer, r), this.eRightSpacer.classList.toggle("ag-scroller-corner", r <= o);
      var s = this.columnModel.getDisplayedColumnsLeftWidth(), a = this.enableRtl && e;
      a && (s += o), Be(this.eLeftSpacer, s), this.eLeftSpacer.classList.toggle("ag-scroller-corner", s <= o);
    }, t.prototype.setScrollVisible = function() {
      var e = this.scrollVisibleService.isHorizontalScrollShowing(), r = this.invisibleScrollbar, i = this.gridOptionsService.is("suppressHorizontalScroll"), o = e && this.gridOptionsService.getScrollbarWidth() || 0, s = o === 0 && r ? 16 : o, a = i ? 0 : s;
      this.addOrRemoveCssClass("ag-scrollbar-invisible", r), It(this.getGui(), a), It(this.eViewport, a), It(this.eContainer, a), this.setDisplayed(e, { skipAriaHidden: !0 });
    }, t.TEMPLATE = `<div class="ag-body-horizontal-scroll" aria-hidden="true">
            <div class="ag-horizontal-left-spacer" ref="eLeftSpacer"></div>
            <div class="ag-body-horizontal-scroll-viewport" ref="eViewport">
                <div class="ag-body-horizontal-scroll-container" ref="eContainer"></div>
            </div>
            <div class="ag-horizontal-right-spacer" ref="eRightSpacer"></div>
        </div>`, Lr([
      P("eLeftSpacer")
    ], t.prototype, "eLeftSpacer", void 0), Lr([
      P("eRightSpacer")
    ], t.prototype, "eRightSpacer", void 0), Lr([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Lr([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), Lr([
      b
    ], t.prototype, "postConstruct", null), t;
  }(Ru)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Vm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), vn = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Bm = (
  /** @class */
  function(n) {
    Vm(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      var e = this.checkContainerWidths.bind(this);
      this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_CHANGED, e), this.addManagedListener(this.eventService, g.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, e), this.addManagedPropertyListener("domLayout", e);
    }, t.prototype.checkContainerWidths = function() {
      var e = this.gridOptionsService.isDomLayout("print"), r = e ? 0 : this.columnModel.getDisplayedColumnsLeftWidth(), i = e ? 0 : this.columnModel.getDisplayedColumnsRightWidth();
      r != this.leftWidth && (this.leftWidth = r, this.eventService.dispatchEvent({ type: g.EVENT_LEFT_PINNED_WIDTH_CHANGED })), i != this.rightWidth && (this.rightWidth = i, this.eventService.dispatchEvent({ type: g.EVENT_RIGHT_PINNED_WIDTH_CHANGED }));
    }, t.prototype.getPinnedRightWidth = function() {
      return this.rightWidth;
    }, t.prototype.getPinnedLeftWidth = function() {
      return this.leftWidth;
    }, vn([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), vn([
      b
    ], t.prototype, "postConstruct", null), t = vn([
      A("pinnedWidthService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Wm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), _i = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, jm = (
  /** @class */
  function(n) {
    Wm(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.events = [], e;
    }
    return t.prototype.postConstruct = function() {
      this.rowModel.getType() == "clientSide" && (this.clientSideRowModel = this.rowModel);
    }, t.prototype.dispatchExpanded = function(e) {
      var r = this;
      if (this.clientSideRowModel == null) {
        this.eventService.dispatchEvent(e);
        return;
      }
      this.events.push(e);
      var i = function() {
        r.clientSideRowModel && r.clientSideRowModel.onRowGroupOpened(), r.events.forEach(function(o) {
          return r.eventService.dispatchEvent(o);
        }), r.events = [];
      };
      this.dispatchExpandedDebounced == null && (this.dispatchExpandedDebounced = this.animationFrameService.debounce(i)), this.dispatchExpandedDebounced();
    }, _i([
      h("animationFrameService")
    ], t.prototype, "animationFrameService", void 0), _i([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), _i([
      b
    ], t.prototype, "postConstruct", null), t = _i([
      A("rowNodeEventThrottle")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var jn = function() {
  return jn = Object.assign || function(n) {
    for (var t, e = 1, r = arguments.length; e < r; e++) {
      t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, jn.apply(this, arguments);
}, ft = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Ea = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, km = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Um = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(km(arguments[t]));
  return n;
};
function zm(n) {
  if (typeof n == "number")
    return n;
  if (typeof n == "string")
    return parseInt(n, 10);
}
function _a(n) {
  return n === !0 || n === "true";
}
var Km = (
  /** @class */
  function() {
    function n() {
      this.destroyed = !1, this.domDataKey = "__AG_" + Math.random().toString(), this.propertyEventService = new Rt();
    }
    return Object.defineProperty(n.prototype, "context", {
      // This is quicker then having code call gridOptionsService.get('context')
      get: function() {
        return this.gridOptions.context;
      },
      enumerable: !1,
      configurable: !0
    }), n.prototype.agWire = function(t, e) {
      this.gridOptions.api = t, this.gridOptions.columnApi = e, this.api = t, this.columnApi = e;
    }, n.prototype.init = function() {
      this.gridOptionLookup = new Set(Um(Ai.ALL_PROPERTIES, Ai.EVENT_CALLBACKS));
      var t = !this.is("suppressAsyncEvents");
      this.eventService.addGlobalListener(this.globalEventHandler.bind(this), t), this.getScrollbarWidth();
    }, n.prototype.destroy = function() {
      this.gridOptions.api = null, this.gridOptions.columnApi = null, this.destroyed = !0;
    }, n.prototype.is = function(t) {
      return _a(this.gridOptions[t]);
    }, n.prototype.get = function(t) {
      return this.gridOptions[t];
    }, n.prototype.getNum = function(t) {
      return zm(this.gridOptions[t]);
    }, n.prototype.getCallback = function(t) {
      return this.mergeGridCommonParams(this.gridOptions[t]);
    }, n.prototype.exists = function(t) {
      return O(this.gridOptions[t]);
    }, n.prototype.mergeGridCommonParams = function(t) {
      var e = this;
      if (t) {
        var r = function(i) {
          var o = i;
          return o.api = e.api, o.columnApi = e.columnApi, o.context = e.context, t(o);
        };
        return r;
      }
      return t;
    }, n.prototype.set = function(t, e, r, i) {
      if (r === void 0 && (r = !1), i === void 0 && (i = {}), this.gridOptionLookup.has(t)) {
        var o = this.gridOptions[t];
        if (r || o !== e) {
          this.gridOptions[t] = e;
          var s = jn({ type: t, currentValue: e, previousValue: o }, i);
          this.propertyEventService.dispatchEvent(s);
        }
      }
    }, n.prototype.addEventListener = function(t, e) {
      this.propertyEventService.addEventListener(t, e);
    }, n.prototype.removeEventListener = function(t, e) {
      this.propertyEventService.removeEventListener(t, e);
    }, n.prototype.globalEventHandler = function(t, e) {
      if (!this.destroyed) {
        var r = Ai.getCallbackForEvent(t);
        typeof this.gridOptions[r] == "function" && this.gridOptions[r](e);
      }
    }, n.prototype.getScrollbarWidth = function() {
      if (this.scrollbarWidth == null) {
        var t = typeof this.gridOptions.scrollbarWidth == "number" && this.gridOptions.scrollbarWidth >= 0, e = t ? this.gridOptions.scrollbarWidth : Ml();
        e != null && (this.scrollbarWidth = e, this.eventService.dispatchEvent({
          type: g.EVENT_SCROLLBAR_WIDTH_CHANGED
        }));
      }
      return this.scrollbarWidth;
    }, n.prototype.isRowModelType = function(t) {
      return this.gridOptions.rowModelType === t || t === "clientSide" && x(this.gridOptions.rowModelType);
    }, n.prototype.isDomLayout = function(t) {
      var e, r = (e = this.gridOptions.domLayout) !== null && e !== void 0 ? e : "normal";
      return r === t;
    }, n.prototype.isRowSelection = function() {
      return this.gridOptions.rowSelection === "single" || this.gridOptions.rowSelection === "multiple";
    }, n.prototype.useAsyncEvents = function() {
      return !this.is("suppressAsyncEvents");
    }, n.prototype.isGetRowHeightFunction = function() {
      return typeof this.gridOptions.getRowHeight == "function";
    }, n.prototype.getRowHeightForNode = function(t, e, r) {
      if (e === void 0 && (e = !1), r == null && (r = this.environment.getDefaultRowHeight()), this.isGetRowHeightFunction()) {
        if (e)
          return { height: r, estimated: !0 };
        var i = {
          node: t,
          data: t.data
        }, o = this.getCallback("getRowHeight")(i);
        if (this.isNumeric(o))
          return o === 0 && K(function() {
            return console.warn("AG Grid: The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead.");
          }, "invalidRowHeight"), { height: Math.max(1, o), estimated: !1 };
      }
      if (t.detail && this.is("masterDetail"))
        return this.getMasterDetailRowHeight();
      var s = this.gridOptions.rowHeight && this.isNumeric(this.gridOptions.rowHeight) ? this.gridOptions.rowHeight : r;
      return { height: s, estimated: !1 };
    }, n.prototype.getMasterDetailRowHeight = function() {
      return this.is("detailRowAutoHeight") ? { height: 1, estimated: !1 } : this.isNumeric(this.gridOptions.detailRowHeight) ? { height: this.gridOptions.detailRowHeight, estimated: !1 } : { height: 300, estimated: !1 };
    }, n.prototype.getRowHeightAsNumber = function() {
      if (!this.gridOptions.rowHeight || x(this.gridOptions.rowHeight))
        return this.environment.getDefaultRowHeight();
      var t = this.gridOptions.rowHeight;
      return t && this.isNumeric(t) ? (this.environment.setRowHeightVariable(t), t) : (console.warn("AG Grid row height must be a number if not using standard row model"), this.environment.getDefaultRowHeight());
    }, n.prototype.isNumeric = function(t) {
      return !isNaN(t) && typeof t == "number" && isFinite(t);
    }, n.prototype.getDomDataKey = function() {
      return this.domDataKey;
    }, n.prototype.getDomData = function(t, e) {
      var r = t[this.getDomDataKey()];
      return r ? r[e] : void 0;
    }, n.prototype.setDomData = function(t, e, r) {
      var i = this.getDomDataKey(), o = t[i];
      x(o) && (o = {}, t[i] = o), o[e] = r;
    }, n.prototype.getDocument = function() {
      var t = null;
      return this.gridOptions.getDocument && O(this.gridOptions.getDocument) ? t = this.gridOptions.getDocument() : this.eGridDiv && (t = this.eGridDiv.ownerDocument), t && O(t) ? t : document;
    }, n.prototype.getRootNode = function() {
      return this.eGridDiv.getRootNode();
    }, n.prototype.getRowIdFunc = function() {
      var t = this.getCallback("getRowId");
      if (t)
        return t;
      var e = this.gridOptions.getRowNodeId;
      if (e)
        return function(r) {
          return e(r.data);
        };
    }, n.prototype.getAsyncTransactionWaitMillis = function() {
      return O(this.gridOptions.asyncTransactionWaitMillis) ? this.gridOptions.asyncTransactionWaitMillis : 50;
    }, n.prototype.isAnimateRows = function() {
      return this.is("ensureDomOrder") ? !1 : this.is("animateRows");
    }, n.prototype.isTreeData = function() {
      return this.is("treeData") && N.assertRegistered(F.RowGroupingModule, "Tree Data");
    }, n.prototype.isMasterDetail = function() {
      return this.is("masterDetail") && N.assertRegistered(F.MasterDetailModule, "masterDetail");
    }, n.prototype.isEnableRangeSelection = function() {
      return this.is("enableRangeSelection") && N.isRegistered(F.RangeSelectionModule);
    }, n.prototype.isColumnsSortingCoupledToGroup = function() {
      var t = this.gridOptions.autoGroupColumnDef, e = this.isRowModelType("clientSide");
      return e && !(t != null && t.comparator) && !this.isTreeData();
    }, n.prototype.getGroupAggFiltering = function() {
      var t = this.gridOptions.groupAggFiltering;
      if (typeof t == "function")
        return this.getCallback("groupAggFiltering");
      if (_a(t))
        return function() {
          return !0;
        };
    }, n.prototype.isGroupMultiAutoColumn = function() {
      return this.gridOptions.groupDisplayType ? Pn("multipleColumns", this.gridOptions.groupDisplayType) : this.is("groupHideOpenParents");
    }, n.prototype.isGroupUseEntireRow = function(t) {
      return t ? !1 : this.gridOptions.groupDisplayType ? Pn("groupRows", this.gridOptions.groupDisplayType) : !1;
    }, ft([
      h("gridOptions")
    ], n.prototype, "gridOptions", void 0), ft([
      h("eventService")
    ], n.prototype, "eventService", void 0), ft([
      h("environment")
    ], n.prototype, "environment", void 0), ft([
      h("eGridDiv")
    ], n.prototype, "eGridDiv", void 0), ft([
      Ea(0, me("gridApi")),
      Ea(1, me("columnApi"))
    ], n.prototype, "agWire", null), ft([
      b
    ], n.prototype, "init", null), ft([
      ve
    ], n.prototype, "destroy", null), n = ft([
      A("gridOptionsService")
    ], n), n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var $m = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ym = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, qm = (
  /** @class */
  function(n) {
    $m(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getLocaleTextFunc = function() {
      var e = this.gridOptionsService.getCallback("getLocaleText");
      if (e)
        return function(o, s, a) {
          var l = {
            key: o,
            defaultValue: s,
            variableValues: a
          };
          return e(l);
        };
      var r = this.gridOptionsService.get("localeTextFunc");
      if (r)
        return r;
      var i = this.gridOptionsService.get("localeText");
      return function(o, s, a) {
        var l = i && i[o];
        if (l && a && a.length)
          for (var u = 0; !(u >= a.length); ) {
            var c = l.indexOf("${variable}");
            if (c === -1)
              break;
            l = l.replace("${variable}", a[u++]);
          }
        return l ?? s;
      };
    }, t = Ym([
      A("localeService")
    ], t), t;
  }(T)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Qm = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Xm = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Jm = (
  /** @class */
  function(n) {
    Qm(t, n);
    function t() {
      return n.call(this, t.TEMPLATE, "vertical") || this;
    }
    return t.prototype.postConstruct = function() {
      n.prototype.postConstruct.call(this), this.createManagedBean(new wu(this.eContainer)), this.ctrlsService.registerFakeVScrollComp(this);
    }, t.prototype.setScrollVisible = function() {
      var e = this.scrollVisibleService.isVerticalScrollShowing(), r = this.invisibleScrollbar, i = e && this.gridOptionsService.getScrollbarWidth() || 0, o = i === 0 && r ? 16 : i;
      this.addOrRemoveCssClass("ag-scrollbar-invisible", r), Be(this.getGui(), o), Be(this.eViewport, o), Be(this.eContainer, o), this.setDisplayed(e, { skipAriaHidden: !0 });
    }, t.TEMPLATE = `<div class="ag-body-vertical-scroll" aria-hidden="true">
            <div class="ag-body-vertical-scroll-viewport" ref="eViewport">
                <div class="ag-body-vertical-scroll-container" ref="eContainer"></div>
            </div>
        </div>`, Xm([
      b
    ], t.prototype, "postConstruct", null), t;
  }(Ru)
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Zm = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Ra = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(Zm(arguments[t]));
  return n;
}, ew = (
  /** @class */
  function() {
    function n(t, e, r) {
      if (!e) {
        console.error("AG Grid: no gridOptions provided to the grid");
        return;
      }
      this.gridOptions = e, new tw().create(t, e, function(i) {
        var o = new LC(t);
        i.createBean(o);
      }, void 0, r);
    }
    return n.prototype.destroy = function() {
      this.gridOptions && this.gridOptions.api && this.gridOptions.api.destroy();
    }, n;
  }()
), tw = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.create = function(t, e, r, i, o) {
      var s = this, a = !!e.debug, l = this.getRegisteredModules(o), u = this.createBeansList(e.rowModelType, l), c = this.createProvidedBeans(t, e, o);
      if (u) {
        var p = {
          providedBeanInstances: c,
          beanClasses: u,
          debug: a
        }, d = new Wn("AG Grid", function() {
          return e.debug;
        }), v = new Wn("Context", function() {
          return p.debug;
        }), f = new Hc(p, v), y = f.getBean("beans");
        this.registerModuleUserComponents(y, l), this.registerStackComponents(y, l), this.registerControllers(y, l), r(f), y.ctrlsService.whenReady(function() {
          s.setColumnsAndData(y), s.dispatchGridReadyEvent(y);
          var C = N.isRegistered(F.EnterpriseCoreModule);
          d.log("initialised successfully, enterprise = " + C);
        }), i && i(f);
      }
    }, n.prototype.registerControllers = function(t, e) {
      e.forEach(function(r) {
        r.controllers && r.controllers.forEach(function(i) {
          return t.ctrlsFactory.register(i);
        });
      });
    }, n.prototype.registerStackComponents = function(t, e) {
      var r = this.createAgStackComponentsList(e);
      t.agStackComponentsRegistry.setupComponents(r);
    }, n.prototype.getRegisteredModules = function(t) {
      var e = t ? t.modules : null, r = N.getRegisteredModules(), i = [], o = {};
      function s(a, l) {
        function u(c) {
          o[c.moduleName] || (o[c.moduleName] = !0, i.push(c), N.register(c, a));
        }
        u(l), l.dependantModules && l.dependantModules.forEach(s.bind(null, a));
      }
      return e && e.forEach(s.bind(null, !0)), r && r.forEach(s.bind(null, !N.isPackageBased())), i;
    }, n.prototype.registerModuleUserComponents = function(t, e) {
      var r = this.extractModuleEntity(e, function(i) {
        return i.userComponents ? i.userComponents : [];
      });
      r.forEach(function(i) {
        t.userComponentRegistry.registerDefaultComponent(i.componentName, i.componentClass);
      });
    }, n.prototype.createProvidedBeans = function(t, e, r) {
      var i = r ? r.frameworkOverrides : null;
      x(i) && (i = new nC());
      var o = {
        gridOptions: e,
        eGridDiv: t,
        globalEventListener: r ? r.globalEventListener : null,
        frameworkOverrides: i
      };
      return r && r.providedBeanInstances && Object.assign(o, r.providedBeanInstances), o;
    }, n.prototype.createAgStackComponentsList = function(t) {
      var e = [
        { componentName: "AgCheckbox", componentClass: kr },
        { componentName: "AgRadioButton", componentClass: eu },
        { componentName: "AgToggleButton", componentClass: Ry },
        { componentName: "AgInputTextField", componentClass: dr },
        { componentName: "AgInputTextArea", componentClass: Ty },
        { componentName: "AgInputNumberField", componentClass: ms },
        { componentName: "AgInputRange", componentClass: Py },
        { componentName: "AgSelect", componentClass: Ui },
        { componentName: "AgSlider", componentClass: Ay },
        { componentName: "AgGridBody", componentClass: Fv },
        { componentName: "AgHeaderRoot", componentClass: Bg },
        { componentName: "AgSortIndicator", componentClass: Ss },
        { componentName: "AgPagination", componentClass: cm },
        { componentName: "AgOverlayWrapper", componentClass: dm },
        { componentName: "AgGroupComponent", componentClass: Ly },
        { componentName: "AgPanel", componentClass: _u },
        { componentName: "AgDialog", componentClass: $y },
        { componentName: "AgRowContainer", componentClass: $v },
        { componentName: "AgFakeHorizontalScroll", componentClass: Hm },
        { componentName: "AgFakeVerticalScroll", componentClass: Jm }
      ], r = this.extractModuleEntity(t, function(i) {
        return i.agStackComponents ? i.agStackComponents : [];
      });
      return e = e.concat(r), e;
    }, n.prototype.createBeansList = function(t, e) {
      t === void 0 && (t = "clientSide");
      var r = e.filter(function(l) {
        return !l.rowModel || l.rowModel === t;
      }), i = {
        clientSide: F.ClientSideRowModelModule,
        infinite: F.InfiniteRowModelModule,
        serverSide: F.ServerSideRowModelModule,
        viewport: F.ViewportRowModelModule
      };
      if (!i[t]) {
        console.error("AG Grid: could not find row model for rowModelType = " + t);
        return;
      }
      if (N.assertRegistered(i[t], "rowModelType = '" + t + "'")) {
        var o = [
          mu,
          fm,
          ym,
          Rm,
          WC,
          lf,
          Wh,
          YC,
          QC,
          qg,
          nf,
          sm,
          jg,
          qm,
          lp,
          fy,
          af,
          Ap,
          Rt,
          Km,
          tC,
          gC,
          cf,
          Rp,
          xg,
          wy,
          uy,
          EC,
          rp,
          OC,
          dC,
          Gv,
          kC,
          mC,
          PC,
          bp,
          Zg,
          Ug,
          de,
          yC,
          Gr,
          xv,
          im,
          uC,
          dy,
          Ey,
          Mv,
          IC,
          GC,
          VC,
          lm,
          dp,
          KC,
          Xg,
          Em,
          Mp,
          Tm,
          bm,
          Cy,
          Dm,
          Lm,
          Bm,
          jm,
          xm
        ], s = this.extractModuleEntity(r, function(l) {
          return l.beans ? l.beans : [];
        });
        o.push.apply(o, Ra(s));
        var a = [];
        return o.forEach(function(l) {
          a.indexOf(l) < 0 && a.push(l);
        }), a;
      }
    }, n.prototype.extractModuleEntity = function(t, e) {
      return [].concat.apply([], Ra(t.map(e)));
    }, n.prototype.setColumnsAndData = function(t) {
      var e = t.gridOptionsService.get("columnDefs");
      t.columnModel.setColumnDefs(e || [], "gridInitializing"), t.rowModel.start();
    }, n.prototype.dispatchGridReadyEvent = function(t) {
      var e = {
        type: g.EVENT_GRID_READY
      };
      t.eventService.dispatchEvent(e);
    }, n;
  }()
);
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var Oa;
(function(n) {
  n.InsideBase = "insideBase", n.InsideEnd = "insideEnd", n.Center = "center", n.OutsideEnd = "outsideEnd";
})(Oa || (Oa = {}));
/**
 * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue
 * @version v29.3.5
 * @link https://www.ag-grid.com/
 * @license MIT
 */
var hr = typeof global > "u" ? {} : global;
hr.HTMLElement = typeof HTMLElement > "u" ? {} : HTMLElement;
hr.HTMLButtonElement = typeof HTMLButtonElement > "u" ? {} : HTMLButtonElement;
hr.HTMLSelectElement = typeof HTMLSelectElement > "u" ? {} : HTMLSelectElement;
hr.HTMLInputElement = typeof HTMLInputElement > "u" ? {} : HTMLInputElement;
hr.Node = typeof Node > "u" ? {} : Node;
hr.MouseEvent = typeof MouseEvent > "u" ? {} : MouseEvent;
var rw = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Ta = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(rw(arguments[t]));
  return n;
}, iw = (
  /** @class */
  function() {
    function n(t, e, r, i, o, s) {
      this.nextId = 0, this.allNodesMap = {}, this.rootNode = t, this.gridOptionsService = e, this.eventService = r, this.columnModel = i, this.beans = s, this.selectionService = o, this.rootNode.group = !0, this.rootNode.level = -1, this.rootNode.id = n.ROOT_NODE_ID, this.rootNode.allLeafChildren = [], this.rootNode.childrenAfterGroup = [], this.rootNode.childrenAfterSort = [], this.rootNode.childrenAfterAggFilter = [], this.rootNode.childrenAfterFilter = [], this.postConstruct();
    }
    return n.prototype.postConstruct = function() {
      this.suppressParentsInRowNodes = this.gridOptionsService.is("suppressParentsInRowNodes"), this.isRowMasterFunc = this.gridOptionsService.get("isRowMaster"), this.doingTreeData = this.gridOptionsService.isTreeData(), this.doingMasterDetail = this.gridOptionsService.isMasterDetail();
    }, n.prototype.getCopyOfNodesMap = function() {
      return G.cloneObject(this.allNodesMap);
    }, n.prototype.getRowNode = function(t) {
      return this.allNodesMap[t];
    }, n.prototype.setRowData = function(t) {
      var e = this;
      if (typeof t == "string") {
        console.warn("AG Grid: rowData must be an array, however you passed in a string. If you are loading JSON, make sure you convert the JSON string to JavaScript objects first");
        return;
      }
      var r = this.rootNode, i = this.rootNode.sibling;
      r.childrenAfterFilter = null, r.childrenAfterGroup = null, r.childrenAfterAggFilter = null, r.childrenAfterSort = null, r.childrenMapped = null, r.updateHasChildren(), this.nextId = 0, this.allNodesMap = {}, t ? r.allLeafChildren = t.map(function(o) {
        return e.createNode(o, e.rootNode, n.TOP_LEVEL);
      }) : (r.allLeafChildren = [], r.childrenAfterGroup = []), i && (i.childrenAfterFilter = r.childrenAfterFilter, i.childrenAfterGroup = r.childrenAfterGroup, i.childrenAfterAggFilter = r.childrenAfterAggFilter, i.childrenAfterSort = r.childrenAfterSort, i.childrenMapped = r.childrenMapped, i.allLeafChildren = r.allLeafChildren);
    }, n.prototype.updateRowData = function(t, e) {
      var r = {
        remove: [],
        update: [],
        add: []
      }, i = [];
      return this.executeRemove(t, r, i), this.executeUpdate(t, r, i), this.executeAdd(t, r), this.updateSelection(i, "rowDataChanged"), e && G.sortRowNodesByOrder(this.rootNode.allLeafChildren, e), r;
    }, n.prototype.updateSelection = function(t, e) {
      var r = t.length > 0;
      if (r && t.forEach(function(o) {
        o.setSelected(!1, !1, !0, e);
      }), this.selectionService.updateGroupsFromChildrenSelections(e), r) {
        var i = {
          type: g.EVENT_SELECTION_CHANGED,
          source: e
        };
        this.eventService.dispatchEvent(i);
      }
    }, n.prototype.executeAdd = function(t, e) {
      var r = this, i, o = t.add, s = t.addIndex;
      if (!G.missingOrEmpty(o)) {
        var a = o.map(function(f) {
          return r.createNode(f, r.rootNode, n.TOP_LEVEL);
        });
        if (typeof s == "number" && s >= 0) {
          var l = this.rootNode.allLeafChildren, u = l.length, c = s;
          if (this.doingTreeData && s > 0 && u > 0) {
            for (var p = 0; p < u; p++)
              if (((i = l[p]) === null || i === void 0 ? void 0 : i.rowIndex) == s - 1) {
                c = p + 1;
                break;
              }
          }
          var d = l.slice(0, c), v = l.slice(c, l.length);
          this.rootNode.allLeafChildren = Ta(d, a, v);
        } else
          this.rootNode.allLeafChildren = Ta(this.rootNode.allLeafChildren, a);
        this.rootNode.sibling && (this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren), e.add = a;
      }
    }, n.prototype.executeRemove = function(t, e, r) {
      var i = this, o = t.remove;
      if (!G.missingOrEmpty(o)) {
        var s = {};
        o.forEach(function(a) {
          var l = i.lookupRowNode(a);
          l && (l.isSelected() && r.push(l), l.clearRowTopAndRowIndex(), s[l.id] = !0, delete i.allNodesMap[l.id], e.remove.push(l));
        }), this.rootNode.allLeafChildren = this.rootNode.allLeafChildren.filter(function(a) {
          return !s[a.id];
        }), this.rootNode.sibling && (this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren);
      }
    }, n.prototype.executeUpdate = function(t, e, r) {
      var i = this, o = t.update;
      G.missingOrEmpty(o) || o.forEach(function(s) {
        var a = i.lookupRowNode(s);
        a && (a.updateData(s), !a.selectable && a.isSelected() && r.push(a), i.setMasterForRow(a, s, n.TOP_LEVEL, !1), e.update.push(a));
      });
    }, n.prototype.lookupRowNode = function(t) {
      var e = this.gridOptionsService.getRowIdFunc(), r;
      if (e) {
        var i = e({ data: t, level: 0 });
        if (r = this.allNodesMap[i], !r)
          return console.error("AG Grid: could not find row id=" + i + ", data item was not found for this id"), null;
      } else if (r = this.rootNode.allLeafChildren.find(function(o) {
        return o.data === t;
      }), !r)
        return console.error("AG Grid: could not find data item as object was not found", t), console.error("Consider using getRowId to help the Grid find matching row data"), null;
      return r || null;
    }, n.prototype.createNode = function(t, e, r) {
      var i = new j(this.beans);
      return i.group = !1, this.setMasterForRow(i, t, r, !0), e && !this.suppressParentsInRowNodes && (i.parent = e), i.level = r, i.setDataAndId(t, this.nextId.toString()), this.allNodesMap[i.id] && console.warn("AG Grid: duplicate node id '" + i.id + "' detected from getRowId callback, this could cause issues in your grid."), this.allNodesMap[i.id] = i, this.nextId++, i;
    }, n.prototype.setMasterForRow = function(t, e, r, i) {
      if (this.doingTreeData)
        t.setMaster(!1), i && (t.expanded = !1);
      else if (this.doingMasterDetail ? this.isRowMasterFunc ? t.setMaster(this.isRowMasterFunc(e)) : t.setMaster(!0) : t.setMaster(!1), i) {
        var o = this.columnModel.getRowGroupColumns(), s = o ? o.length : 0, a = r + s;
        t.expanded = t.master ? this.isExpanded(a) : !1;
      }
    }, n.prototype.isExpanded = function(t) {
      var e = this.gridOptionsService.getNum("groupDefaultExpanded");
      return e === -1 ? !0 : t < e;
    }, n.TOP_LEVEL = 0, n.ROOT_NODE_ID = "ROOT_NODE_ID", n;
  }()
), ow = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), _e = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, nw = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, Ri = function() {
  for (var n = [], t = 0; t < arguments.length; t++)
    n = n.concat(nw(arguments[t]));
  return n;
}, qe;
(function(n) {
  n[n.Normal = 0] = "Normal", n[n.AfterFilter = 1] = "AfterFilter", n[n.AfterFilterAndSort = 2] = "AfterFilterAndSort", n[n.PivotNodes = 3] = "PivotNodes";
})(qe || (qe = {}));
var sw = (
  /** @class */
  function(n) {
    ow(t, n);
    function t() {
      var e = n !== null && n.apply(this, arguments) || this;
      return e.onRowHeightChanged_debounced = G.debounce(e.onRowHeightChanged.bind(e), 100), e.rowsToDisplay = [], e;
    }
    return t.prototype.init = function() {
      var e = this.refreshModel.bind(this, { step: $.EVERYTHING }), r = !this.gridOptionsService.is("suppressAnimationFrame"), i = this.refreshModel.bind(this, {
        step: $.EVERYTHING,
        afterColumnsChanged: !0,
        keepRenderedRows: !0,
        animate: r
      });
      this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, i), this.addManagedListener(this.eventService, g.EVENT_COLUMN_ROW_GROUP_CHANGED, e), this.addManagedListener(this.eventService, g.EVENT_COLUMN_VALUE_CHANGED, this.onValueChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_CHANGED, this.refreshModel.bind(this, { step: $.PIVOT })), this.addManagedListener(this.eventService, g.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_SORT_CHANGED, this.onSortChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_COLUMN_PIVOT_MODE_CHANGED, e), this.addManagedListener(this.eventService, g.EVENT_GRID_STYLES_CHANGED, this.onGridStylesChanges.bind(this));
      var o = this.refreshModel.bind(this, {
        step: $.MAP,
        keepRenderedRows: !0,
        animate: r
      });
      this.addManagedPropertyListener("groupRemoveSingleChildren", o), this.addManagedPropertyListener("groupRemoveLowestSingleChildren", o), this.rootNode = new j(this.beans), this.nodeManager = new iw(this.rootNode, this.gridOptionsService, this.eventService, this.columnModel, this.selectionService, this.beans);
    }, t.prototype.start = function() {
      var e = this.gridOptionsService.get("rowData");
      e && this.setRowData(e);
    }, t.prototype.ensureRowHeightsValid = function(e, r, i, o) {
      var s, a = !1;
      do {
        s = !1;
        for (var l = this.getRowIndexAtPixel(e), u = this.getRowIndexAtPixel(r), c = Math.max(l, i), p = Math.min(u, o), d = c; d <= p; d++) {
          var v = this.getRow(d);
          if (v.rowHeightEstimated) {
            var f = this.gridOptionsService.getRowHeightForNode(v);
            v.setRowHeight(f.height), s = !0, a = !0;
          }
        }
        s && this.setRowTopAndRowIndex();
      } while (s);
      return a;
    }, t.prototype.setRowTopAndRowIndex = function() {
      for (var e = this.environment.getDefaultRowHeight(), r = 0, i = /* @__PURE__ */ new Set(), o = this.gridOptionsService.isDomLayout("normal"), s = 0; s < this.rowsToDisplay.length; s++) {
        var a = this.rowsToDisplay[s];
        if (a.id != null && i.add(a.id), a.rowHeight == null) {
          var l = this.gridOptionsService.getRowHeightForNode(a, o, e);
          a.setRowHeight(l.height, l.estimated);
        }
        a.setRowTop(r), a.setRowIndex(s), r += a.rowHeight;
      }
      return i;
    }, t.prototype.clearRowTopAndRowIndex = function(e, r) {
      var i = e.isActive(), o = function(a) {
        a && a.id != null && !r.has(a.id) && a.clearRowTopAndRowIndex();
      }, s = function(a) {
        if (o(a), o(a.detailNode), o(a.sibling), a.hasChildren() && a.childrenAfterGroup) {
          var l = a.level == -1, u = i && !l && !a.expanded;
          u || a.childrenAfterGroup.forEach(s);
        }
      };
      s(this.rootNode);
    }, t.prototype.ensureRowsAtPixel = function(e, r, i) {
      var o = this;
      i === void 0 && (i = 0);
      var s = this.getRowIndexAtPixel(r), a = this.getRow(s), l = !this.gridOptionsService.is("suppressAnimationFrame");
      return a === e[0] ? !1 : (e.forEach(function(u) {
        G.removeFromArray(o.rootNode.allLeafChildren, u);
      }), e.forEach(function(u, c) {
        G.insertIntoArray(o.rootNode.allLeafChildren, u, Math.max(s + i, 0) + c);
      }), this.refreshModel({
        step: $.EVERYTHING,
        keepRenderedRows: !0,
        keepEditingRows: !0,
        animate: l
      }), !0);
    }, t.prototype.highlightRowAtPixel = function(e, r) {
      var i = r != null ? this.getRowIndexAtPixel(r) : null, o = i != null ? this.getRow(i) : null;
      if (!o || !e || o === e || r == null) {
        this.lastHighlightedRow && (this.lastHighlightedRow.setHighlighted(null), this.lastHighlightedRow = null);
        return;
      }
      var s = this.getHighlightPosition(r, o);
      this.lastHighlightedRow && this.lastHighlightedRow !== o && (this.lastHighlightedRow.setHighlighted(null), this.lastHighlightedRow = null), o.setHighlighted(s), this.lastHighlightedRow = o;
    }, t.prototype.getHighlightPosition = function(e, r) {
      if (!r) {
        var i = this.getRowIndexAtPixel(e);
        if (r = this.getRow(i || 0), !r)
          return ut.Below;
      }
      var o = r.rowTop, s = r.rowHeight;
      return e - o < s / 2 ? ut.Above : ut.Below;
    }, t.prototype.getLastHighlightedRowNode = function() {
      return this.lastHighlightedRow;
    }, t.prototype.isLastRowIndexKnown = function() {
      return !0;
    }, t.prototype.getRowCount = function() {
      return this.rowsToDisplay ? this.rowsToDisplay.length : 0;
    }, t.prototype.getTopLevelRowCount = function() {
      var e = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;
      if (e)
        return 1;
      var r = this.rootNode.childrenAfterAggFilter;
      return r ? r.length : 0;
    }, t.prototype.getTopLevelRowDisplayedIndex = function(e) {
      var r = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;
      if (r)
        return e;
      var i = this.rootNode.childrenAfterSort[e];
      if (this.gridOptionsService.is("groupHideOpenParents"))
        for (; i.expanded && i.childrenAfterSort && i.childrenAfterSort.length > 0; )
          i = i.childrenAfterSort[0];
      return i.rowIndex;
    }, t.prototype.getRowBounds = function(e) {
      if (G.missing(this.rowsToDisplay))
        return null;
      var r = this.rowsToDisplay[e];
      return r ? {
        rowTop: r.rowTop,
        rowHeight: r.rowHeight
      } : null;
    }, t.prototype.onRowGroupOpened = function() {
      var e = this.gridOptionsService.isAnimateRows();
      this.refreshModel({ step: $.MAP, keepRenderedRows: !0, animate: e });
    }, t.prototype.onFilterChanged = function(e) {
      if (!e.afterDataChange) {
        var r = this.gridOptionsService.isAnimateRows(), i = e.columns.length === 0 || e.columns.some(function(s) {
          return s.isPrimary();
        }), o = i ? $.FILTER : $.FILTER_AGGREGATES;
        this.refreshModel({ step: o, keepRenderedRows: !0, animate: r });
      }
    }, t.prototype.onSortChanged = function() {
      var e = this.gridOptionsService.isAnimateRows();
      this.refreshModel({ step: $.SORT, keepRenderedRows: !0, animate: e, keepEditingRows: !0 });
    }, t.prototype.getType = function() {
      return "clientSide";
    }, t.prototype.onValueChanged = function() {
      this.columnModel.isPivotActive() ? this.refreshModel({ step: $.PIVOT }) : this.refreshModel({ step: $.AGGREGATE });
    }, t.prototype.createChangePath = function(e) {
      var r = G.missingOrEmpty(e), i = new Ps(!1, this.rootNode);
      return (r || this.gridOptionsService.isTreeData()) && i.setInactive(), i;
    }, t.prototype.isSuppressModelUpdateAfterUpdateTransaction = function(e) {
      if (!this.gridOptionsService.is("suppressModelUpdateAfterUpdateTransaction") || e.rowNodeTransactions == null)
        return !1;
      var r = e.rowNodeTransactions.filter(function(o) {
        return o.add != null && o.add.length > 0 || o.remove != null && o.remove.length > 0;
      }), i = r == null || r.length == 0;
      return i;
    }, t.prototype.buildRefreshModelParams = function(e) {
      var r = $.EVERYTHING, i = {
        everything: $.EVERYTHING,
        group: $.EVERYTHING,
        filter: $.FILTER,
        map: $.MAP,
        aggregate: $.AGGREGATE,
        sort: $.SORT,
        pivot: $.PIVOT
      };
      if (G.exists(e) && (r = i[e]), G.missing(r)) {
        console.error("AG Grid: invalid step " + e + ", available steps are " + Object.keys(i).join(", "));
        return;
      }
      var o = !this.gridOptionsService.is("suppressAnimationFrame"), s = {
        step: r,
        keepRenderedRows: !0,
        keepEditingRows: !0,
        animate: o
      };
      return s;
    }, t.prototype.refreshModel = function(e) {
      var r = typeof e == "object" && "step" in e ? e : this.buildRefreshModelParams(e);
      if (r && !this.isSuppressModelUpdateAfterUpdateTransaction(r)) {
        var i = this.createChangePath(r.rowNodeTransactions);
        switch (r.step) {
          case $.EVERYTHING:
            this.doRowGrouping(r.groupState, r.rowNodeTransactions, r.rowNodeOrder, i, !!r.afterColumnsChanged);
          case $.FILTER:
            this.doFilter(i);
          case $.PIVOT:
            this.doPivot(i);
          case $.AGGREGATE:
            this.doAggregate(i);
          case $.FILTER_AGGREGATES:
            this.doFilterAggregates(i);
          case $.SORT:
            this.doSort(r.rowNodeTransactions, i);
          case $.MAP:
            this.doRowsToDisplay();
        }
        var o = this.setRowTopAndRowIndex();
        this.clearRowTopAndRowIndex(i, o);
        var s = {
          type: g.EVENT_MODEL_UPDATED,
          animate: r.animate,
          keepRenderedRows: r.keepRenderedRows,
          newData: r.newData,
          newPage: !1,
          keepUndoRedoStack: r.keepUndoRedoStack
        };
        this.eventService.dispatchEvent(s);
      }
    }, t.prototype.isEmpty = function() {
      var e = G.missing(this.rootNode.allLeafChildren) || this.rootNode.allLeafChildren.length === 0;
      return G.missing(this.rootNode) || e || !this.columnModel.isReady();
    }, t.prototype.isRowsToRender = function() {
      return G.exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0;
    }, t.prototype.getNodesInRangeForSelection = function(e, r) {
      var i = !r, o = !1, s, a = [], l = this.gridOptionsService.is("groupSelectsChildren");
      return this.forEachNodeAfterFilterAndSort(function(u) {
        var c = i && !o;
        i || (u === r || u === e) && (i = !0);
        var p = u.group && l;
        if (!p) {
          var d = i && !o, v = u.isParentOfNode(s);
          (d || v) && a.push(u);
        }
        c && (u === r || u === e) && (o = !0, u === r ? s = r : s = e);
      }), a;
    }, t.prototype.setDatasource = function(e) {
      console.error("AG Grid: should never call setDatasource on clientSideRowController");
    }, t.prototype.getTopLevelNodes = function() {
      return this.rootNode ? this.rootNode.childrenAfterGroup : null;
    }, t.prototype.getRootNode = function() {
      return this.rootNode;
    }, t.prototype.getRow = function(e) {
      return this.rowsToDisplay[e];
    }, t.prototype.isRowPresent = function(e) {
      return this.rowsToDisplay.indexOf(e) >= 0;
    }, t.prototype.getRowIndexAtPixel = function(e) {
      if (this.isEmpty() || this.rowsToDisplay.length === 0)
        return -1;
      var r = 0, i = this.rowsToDisplay.length - 1;
      if (e <= 0)
        return 0;
      var o = G.last(this.rowsToDisplay);
      if (o.rowTop <= e)
        return this.rowsToDisplay.length - 1;
      for (var s = -1, a = -1; ; ) {
        var l = Math.floor((r + i) / 2), u = this.rowsToDisplay[l];
        if (this.isRowInPixel(u, e))
          return l;
        u.rowTop < e ? r = l + 1 : u.rowTop > e && (i = l - 1);
        var c = s === r && a === i;
        if (c)
          return l;
        s = r, a = i;
      }
    }, t.prototype.isRowInPixel = function(e, r) {
      var i = e.rowTop, o = e.rowTop + e.rowHeight, s = i <= r && o > r;
      return s;
    }, t.prototype.forEachLeafNode = function(e) {
      this.rootNode.allLeafChildren && this.rootNode.allLeafChildren.forEach(function(r, i) {
        return e(r, i);
      });
    }, t.prototype.forEachNode = function(e, r) {
      r === void 0 && (r = !1), this.recursivelyWalkNodesAndCallback({
        nodes: Ri(this.rootNode.childrenAfterGroup || []),
        callback: e,
        recursionType: qe.Normal,
        index: 0,
        includeFooterNodes: r
      });
    }, t.prototype.forEachNodeAfterFilter = function(e, r) {
      r === void 0 && (r = !1), this.recursivelyWalkNodesAndCallback({
        nodes: Ri(this.rootNode.childrenAfterAggFilter || []),
        callback: e,
        recursionType: qe.AfterFilter,
        index: 0,
        includeFooterNodes: r
      });
    }, t.prototype.forEachNodeAfterFilterAndSort = function(e, r) {
      r === void 0 && (r = !1), this.recursivelyWalkNodesAndCallback({
        nodes: Ri(this.rootNode.childrenAfterSort || []),
        callback: e,
        recursionType: qe.AfterFilterAndSort,
        index: 0,
        includeFooterNodes: r
      });
    }, t.prototype.forEachPivotNode = function(e, r) {
      r === void 0 && (r = !1), this.recursivelyWalkNodesAndCallback({
        nodes: [this.rootNode],
        callback: e,
        recursionType: qe.PivotNodes,
        index: 0,
        includeFooterNodes: r
      });
    }, t.prototype.recursivelyWalkNodesAndCallback = function(e) {
      var r, i = e.nodes, o = e.callback, s = e.recursionType, a = e.includeFooterNodes, l = e.index, u = i[0];
      a && (!((r = u == null ? void 0 : u.parent) === null || r === void 0) && r.sibling) && i.push(u.parent.sibling);
      for (var c = 0; c < i.length; c++) {
        var p = i[c];
        if (o(p, l++), p.hasChildren() && !p.footer) {
          var d = null;
          switch (s) {
            case qe.Normal:
              d = p.childrenAfterGroup;
              break;
            case qe.AfterFilter:
              d = p.childrenAfterAggFilter;
              break;
            case qe.AfterFilterAndSort:
              d = p.childrenAfterSort;
              break;
            case qe.PivotNodes:
              d = p.leafGroup ? null : p.childrenAfterSort;
              break;
          }
          d && (l = this.recursivelyWalkNodesAndCallback({
            nodes: Ri(d),
            callback: o,
            recursionType: s,
            index: l,
            includeFooterNodes: a
          }));
        }
      }
      return l;
    }, t.prototype.doAggregate = function(e) {
      this.aggregationStage && this.aggregationStage.execute({ rowNode: this.rootNode, changedPath: e });
    }, t.prototype.doFilterAggregates = function(e) {
      this.filterAggregatesStage ? this.filterAggregatesStage.execute({ rowNode: this.rootNode, changedPath: e }) : this.rootNode.childrenAfterAggFilter = this.rootNode.childrenAfterFilter;
    }, t.prototype.expandOrCollapseAll = function(e) {
      var r = this.gridOptionsService.isTreeData(), i = this.columnModel.isPivotActive(), o = function(l) {
        l && l.forEach(function(u) {
          var c = function() {
            u.expanded = e, o(u.childrenAfterGroup);
          };
          if (r) {
            var p = G.exists(u.childrenAfterGroup);
            p && c();
            return;
          }
          if (i) {
            var d = !u.leafGroup;
            d && c();
            return;
          }
          var v = u.group;
          v && c();
        });
      };
      this.rootNode && o(this.rootNode.childrenAfterGroup), this.refreshModel({ step: $.MAP });
      var s = e ? "expandAll" : "collapseAll", a = {
        type: g.EVENT_EXPAND_COLLAPSE_ALL,
        source: s
      };
      this.eventService.dispatchEvent(a);
    }, t.prototype.doSort = function(e, r) {
      this.sortStage.execute({
        rowNode: this.rootNode,
        rowNodeTransactions: e,
        changedPath: r
      });
    }, t.prototype.doRowGrouping = function(e, r, i, o, s) {
      if (this.groupStage) {
        if (r ? this.groupStage.execute({
          rowNode: this.rootNode,
          rowNodeTransactions: r,
          rowNodeOrder: i,
          changedPath: o
        }) : (this.groupStage.execute({
          rowNode: this.rootNode,
          changedPath: o,
          afterColumnsChanged: s
        }), this.restoreGroupState(e)), this.gridOptionsService.is("groupSelectsChildren")) {
          var a = this.selectionService.updateGroupsFromChildrenSelections("rowGroupChanged", o);
          if (a) {
            var l = {
              type: g.EVENT_SELECTION_CHANGED,
              source: "rowGroupChanged"
            };
            this.eventService.dispatchEvent(l);
          }
        }
      } else
        this.rootNode.childrenAfterGroup = this.rootNode.allLeafChildren, this.rootNode.sibling && (this.rootNode.sibling.childrenAfterGroup = this.rootNode.childrenAfterGroup), this.rootNode.updateHasChildren();
    }, t.prototype.restoreGroupState = function(e) {
      e && G.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function(r, i) {
        typeof e[i] == "boolean" && (r.expanded = e[i]);
      });
    }, t.prototype.doFilter = function(e) {
      this.filterStage.execute({ rowNode: this.rootNode, changedPath: e });
    }, t.prototype.doPivot = function(e) {
      this.pivotStage && this.pivotStage.execute({ rowNode: this.rootNode, changedPath: e });
    }, t.prototype.getGroupState = function() {
      if (!this.rootNode.childrenAfterGroup || !this.gridOptionsService.is("rememberGroupStateWhenNewData"))
        return null;
      var e = {};
      return G.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function(r, i) {
        return e[i] = r.expanded;
      }), e;
    }, t.prototype.getCopyOfNodesMap = function() {
      return this.nodeManager.getCopyOfNodesMap();
    }, t.prototype.getRowNode = function(e) {
      var r = typeof e == "string" && e.indexOf(j.ID_PREFIX_ROW_GROUP) == 0;
      if (r) {
        var i = void 0;
        return this.forEachNode(function(o) {
          o.id === e && (i = o);
        }), i;
      }
      return this.nodeManager.getRowNode(e);
    }, t.prototype.setRowData = function(e) {
      var r = this.getGroupState();
      this.nodeManager.setRowData(e), this.selectionService.reset(), this.filterManager.onNewRowsLoaded("rowDataUpdated");
      var i = {
        type: g.EVENT_ROW_DATA_UPDATED
      };
      this.eventService.dispatchEvent(i), this.refreshModel({
        step: $.EVERYTHING,
        groupState: r,
        newData: !0
      });
    }, t.prototype.batchUpdateRowData = function(e, r) {
      var i = this;
      if (this.applyAsyncTransactionsTimeout == null) {
        this.rowDataTransactionBatch = [];
        var o = this.gridOptionsService.getAsyncTransactionWaitMillis();
        this.applyAsyncTransactionsTimeout = window.setTimeout(function() {
          i.executeBatchUpdateRowData();
        }, o);
      }
      this.rowDataTransactionBatch.push({ rowDataTransaction: e, callback: r });
    }, t.prototype.flushAsyncTransactions = function() {
      this.applyAsyncTransactionsTimeout != null && (clearTimeout(this.applyAsyncTransactionsTimeout), this.executeBatchUpdateRowData());
    }, t.prototype.executeBatchUpdateRowData = function() {
      var e = this;
      this.valueCache.onDataChanged();
      var r = [], i = [], o = !1;
      if (this.rowDataTransactionBatch && this.rowDataTransactionBatch.forEach(function(a) {
        var l = e.nodeManager.updateRowData(a.rowDataTransaction, void 0);
        i.push(l), a.callback && r.push(a.callback.bind(null, l)), typeof a.rowDataTransaction.addIndex == "number" && (o = !0);
      }), this.commonUpdateRowData(i, void 0, o), r.length > 0 && window.setTimeout(function() {
        r.forEach(function(a) {
          return a();
        });
      }, 0), i.length > 0) {
        var s = {
          type: g.EVENT_ASYNC_TRANSACTIONS_FLUSHED,
          results: i
        };
        this.eventService.dispatchEvent(s);
      }
      this.rowDataTransactionBatch = null, this.applyAsyncTransactionsTimeout = void 0;
    }, t.prototype.updateRowData = function(e, r) {
      this.valueCache.onDataChanged();
      var i = this.nodeManager.updateRowData(e, r), o = typeof e.addIndex == "number";
      return this.commonUpdateRowData([i], r, o), i;
    }, t.prototype.createRowNodeOrder = function() {
      var e = this.gridOptionsService.is("suppressMaintainUnsortedOrder");
      if (!e) {
        var r = {};
        if (this.rootNode && this.rootNode.allLeafChildren)
          for (var i = 0; i < this.rootNode.allLeafChildren.length; i++) {
            var o = this.rootNode.allLeafChildren[i];
            r[o.id] = i;
          }
        return r;
      }
    }, t.prototype.commonUpdateRowData = function(e, r, i) {
      var o = !this.gridOptionsService.is("suppressAnimationFrame");
      i && (r = this.createRowNodeOrder()), this.refreshModel({
        step: $.EVERYTHING,
        rowNodeTransactions: e,
        rowNodeOrder: r,
        keepRenderedRows: !0,
        keepEditingRows: !0,
        animate: o
      }), this.filterManager.onNewRowsLoaded("rowDataUpdated");
      var s = {
        type: g.EVENT_ROW_DATA_UPDATED
      };
      this.eventService.dispatchEvent(s);
    }, t.prototype.doRowsToDisplay = function() {
      this.rowsToDisplay = this.flattenStage.execute({ rowNode: this.rootNode });
    }, t.prototype.onRowHeightChanged = function() {
      this.refreshModel({ step: $.MAP, keepRenderedRows: !0, keepEditingRows: !0, keepUndoRedoStack: !0 });
    }, t.prototype.onRowHeightChangedDebounced = function() {
      this.onRowHeightChanged_debounced();
    }, t.prototype.resetRowHeights = function() {
      var e = this.resetRowHeightsForAllRowNodes();
      this.rootNode.setRowHeight(this.rootNode.rowHeight, !0), e && this.onRowHeightChanged();
    }, t.prototype.resetRowHeightsForAllRowNodes = function() {
      var e = !1;
      return this.forEachNode(function(r) {
        r.setRowHeight(r.rowHeight, !0);
        var i = r.detailNode;
        i && i.setRowHeight(i.rowHeight, !0), e = !0;
      }), e;
    }, t.prototype.onGridStylesChanges = function() {
      this.columnModel.isAutoRowHeightActive() || this.resetRowHeights();
    }, _e([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), _e([
      h("selectionService")
    ], t.prototype, "selectionService", void 0), _e([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), _e([
      h("valueCache")
    ], t.prototype, "valueCache", void 0), _e([
      h("beans")
    ], t.prototype, "beans", void 0), _e([
      h("filterStage")
    ], t.prototype, "filterStage", void 0), _e([
      h("sortStage")
    ], t.prototype, "sortStage", void 0), _e([
      h("flattenStage")
    ], t.prototype, "flattenStage", void 0), _e([
      Y("groupStage")
    ], t.prototype, "groupStage", void 0), _e([
      Y("aggregationStage")
    ], t.prototype, "aggregationStage", void 0), _e([
      Y("pivotStage")
    ], t.prototype, "pivotStage", void 0), _e([
      Y("filterAggregatesStage")
    ], t.prototype, "filterAggregatesStage", void 0), _e([
      b
    ], t.prototype, "init", null), t = _e([
      A("rowModel")
    ], t), t;
  }(T)
), aw = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), ba = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, lw = (
  /** @class */
  function(n) {
    aw(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.execute = function(e) {
      var r = e.changedPath;
      this.filterService.filter(r);
    }, ba([
      h("filterService")
    ], t.prototype, "filterService", void 0), t = ba([
      A("filterStage")
    ], t), t;
  }(T)
), uw = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Oi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, cw = (
  /** @class */
  function(n) {
    uw(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.execute = function(e) {
      var r = this, i = this.sortController.getSortOptions(), o = G.exists(i) && i.length > 0, s = o && G.exists(e.rowNodeTransactions) && this.gridOptionsService.is("deltaSort"), a = i.some(function(l) {
        return !!r.columnModel.getGroupDisplayColumnForGroup(l.column.getId());
      });
      this.sortService.sort(i, o, s, e.rowNodeTransactions, e.changedPath, a);
    }, Oi([
      h("sortService")
    ], t.prototype, "sortService", void 0), Oi([
      h("sortController")
    ], t.prototype, "sortController", void 0), Oi([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), t = Oi([
      A("sortStage")
    ], t), t;
  }(T)
), pw = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), gn = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, dw = (
  /** @class */
  function(n) {
    pw(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.execute = function(e) {
      var r = e.rowNode, i = [], o = { value: 0 }, s = this.columnModel.isPivotMode(), a = s && r.leafGroup, l = a ? [r] : r.childrenAfterSort;
      this.recursivelyAddToRowsToDisplay(l, i, o, s, 0);
      var u = i.length > 0, c = !a && u && this.gridOptionsService.is("groupIncludeTotalFooter");
      return c && (r.createFooter(), this.addRowNodeToRowsToDisplay(r.sibling, i, o, 0)), i;
    }, t.prototype.recursivelyAddToRowsToDisplay = function(e, r, i, o, s) {
      if (!G.missingOrEmpty(e))
        for (var a = this.gridOptionsService.is("groupHideOpenParents"), l = this.gridOptionsService.is("groupRemoveSingleChildren"), u = !l && this.gridOptionsService.is("groupRemoveLowestSingleChildren"), c = 0; c < e.length; c++) {
          var p = e[c], d = p.hasChildren(), v = o && !d, f = l && d && p.childrenAfterGroup.length === 1, y = u && d && p.leafGroup && p.childrenAfterGroup.length === 1, C = o && p.leafGroup, m = a && p.expanded && !p.master && !C, w = !v && !m && !f && !y;
          if (w && this.addRowNodeToRowsToDisplay(p, r, i, s), !(o && p.leafGroup)) {
            if (d) {
              var E = f || y;
              if (p.expanded || E) {
                var R = E ? s : s + 1;
                this.recursivelyAddToRowsToDisplay(p.childrenAfterSort, r, i, o, R), this.gridOptionsService.is("groupIncludeFooter") && this.addRowNodeToRowsToDisplay(p.sibling, r, i, s);
              }
            } else if (p.master && p.expanded) {
              var D = this.createDetailNode(p);
              this.addRowNodeToRowsToDisplay(D, r, i, s);
            }
          }
        }
    }, t.prototype.addRowNodeToRowsToDisplay = function(e, r, i, o) {
      var s = this.gridOptionsService.isGroupMultiAutoColumn();
      r.push(e), e.setUiLevel(s ? 0 : o);
    }, t.prototype.createDetailNode = function(e) {
      if (G.exists(e.detailNode))
        return e.detailNode;
      var r = new j(this.beans);
      return r.detail = !0, r.selectable = !1, r.parent = e, G.exists(e.id) && (r.id = "detail_" + e.id), r.data = e.data, r.level = e.level + 1, e.detailNode = r, r;
    }, gn([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), gn([
      h("beans")
    ], t.prototype, "beans", void 0), t = gn([
      A("flattenStage")
    ], t), t;
  }(T)
), hw = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Ti = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, fw = (
  /** @class */
  function(n) {
    hw(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      this.postSortFunc = this.getPostSortFunc();
    }, t.prototype.sort = function(e, r, i, o, s, a) {
      var l = this, u = this.gridOptionsService.is("groupMaintainOrder"), c = this.columnModel.getAllGridColumns().some(function(f) {
        return f.isRowGroupActive();
      }), p = {};
      i && o && (p = this.calculateDirtyNodes(o));
      var d = this.columnModel.isPivotMode(), v = function(f) {
        l.pullDownGroupDataForHideOpenParents(f.childrenAfterAggFilter, !0);
        var y = d && f.leafGroup, C = u && c && !f.leafGroup && !a;
        if (C) {
          var m = f.childrenAfterAggFilter.slice(0);
          if (f.childrenAfterSort) {
            var w = {};
            f.childrenAfterSort.forEach(function(R, D) {
              w[R.id] = D;
            }), m.sort(function(R, D) {
              var M, I;
              return ((M = w[R.id]) !== null && M !== void 0 ? M : 0) - ((I = w[D.id]) !== null && I !== void 0 ? I : 0);
            });
          }
          f.childrenAfterSort = m;
        } else
          !r || y ? f.childrenAfterSort = f.childrenAfterAggFilter.slice(0) : i ? f.childrenAfterSort = l.doDeltaSort(f, p, s, e) : f.childrenAfterSort = l.rowNodeSorter.doFullSort(f.childrenAfterAggFilter, e);
        if (f.sibling && (f.sibling.childrenAfterSort = f.childrenAfterSort), l.updateChildIndexes(f), l.postSortFunc) {
          var E = { nodes: f.childrenAfterSort };
          l.postSortFunc(E);
        }
      };
      s && s.forEachChangedNodeDepthFirst(v), this.updateGroupDataForHideOpenParents(s);
    }, t.prototype.getPostSortFunc = function() {
      var e = this.gridOptionsService.getCallback("postSortRows");
      if (e)
        return e;
      var r = this.gridOptionsService.get("postSort");
      if (r)
        return function(i) {
          return r(i.nodes);
        };
    }, t.prototype.calculateDirtyNodes = function(e) {
      var r = {}, i = function(o) {
        o && o.forEach(function(s) {
          return r[s.id] = !0;
        });
      };
      return e && e.forEach(function(o) {
        i(o.add), i(o.update), i(o.remove);
      }), r;
    }, t.prototype.doDeltaSort = function(e, r, i, o) {
      var s = this, a = e.childrenAfterAggFilter, l = e.childrenAfterSort;
      if (!l)
        return this.rowNodeSorter.doFullSort(a, o);
      var u = {}, c = [];
      a.forEach(function(f) {
        r[f.id] || !i.canSkip(f) ? c.push(f) : u[f.id] = !0;
      });
      var p = l.filter(function(f) {
        return u[f.id];
      }), d = function(f, y) {
        return { currentPos: y, rowNode: f };
      }, v = c.map(d).sort(function(f, y) {
        return s.rowNodeSorter.compareRowNodes(o, f, y);
      });
      return this.mergeSortedArrays(o, v, p.map(d)).map(function(f) {
        var y = f.rowNode;
        return y;
      });
    }, t.prototype.mergeSortedArrays = function(e, r, i) {
      for (var o = [], s = 0, a = 0; s < r.length && a < i.length; ) {
        var l = this.rowNodeSorter.compareRowNodes(e, r[s], i[a]);
        l < 0 ? o.push(r[s++]) : o.push(i[a++]);
      }
      for (; s < r.length; )
        o.push(r[s++]);
      for (; a < i.length; )
        o.push(i[a++]);
      return o;
    }, t.prototype.updateChildIndexes = function(e) {
      if (!G.missing(e.childrenAfterSort))
        for (var r = e.childrenAfterSort, i = 0; i < r.length; i++) {
          var o = r[i], s = i === 0, a = i === e.childrenAfterSort.length - 1;
          o.setFirstChild(s), o.setLastChild(a), o.setChildIndex(i);
        }
    }, t.prototype.updateGroupDataForHideOpenParents = function(e) {
      var r = this;
      if (this.gridOptionsService.is("groupHideOpenParents")) {
        if (this.gridOptionsService.isTreeData()) {
          var i = "AG Grid: The property hideOpenParents dose not work with Tree Data. This is because Tree Data has values at the group level, it doesn't make sense to hide them (as opposed to Row Grouping, which only has Aggregated Values at the group level).";
          return G.doOnce(function() {
            return console.warn(i);
          }, "sortService.hideOpenParentsWithTreeData"), !1;
        }
        var o = function(s) {
          r.pullDownGroupDataForHideOpenParents(s.childrenAfterSort, !1), s.childrenAfterSort.forEach(function(a) {
            a.hasChildren() && o(a);
          });
        };
        e && e.executeFromRootNode(function(s) {
          return o(s);
        });
      }
    }, t.prototype.pullDownGroupDataForHideOpenParents = function(e, r) {
      var i = this;
      !this.gridOptionsService.is("groupHideOpenParents") || G.missing(e) || e.forEach(function(o) {
        var s = i.columnModel.getGroupDisplayColumns();
        s.forEach(function(a) {
          var l = a.getColDef().showRowGroup;
          if (typeof l != "string") {
            console.error("AG Grid: groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup");
            return;
          }
          var u = l, c = i.columnModel.getPrimaryColumn(u), p = c === o.rowGroupColumn;
          if (!p)
            if (r)
              o.setGroupValue(a.getId(), void 0);
            else {
              var d = o.getFirstChildOfFirstChild(c);
              d && o.setGroupValue(a.getId(), d.key);
            }
        });
      });
    }, Ti([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Ti([
      h("rowNodeSorter")
    ], t.prototype, "rowNodeSorter", void 0), Ti([
      b
    ], t.prototype, "init", null), t = Ti([
      A("sortService")
    ], t), t;
  }(T)
), vw = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Pa = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, gw = (
  /** @class */
  function(n) {
    vw(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.filter = function(e) {
      var r = this.filterManager.isColumnFilterPresent() || this.filterManager.isQuickFilterPresent() || this.filterManager.isExternalFilterPresent();
      this.filterNodes(r, e);
    }, t.prototype.filterNodes = function(e, r) {
      var i = this, o = function(u, c) {
        u.hasChildren() && e && !c ? u.childrenAfterFilter = u.childrenAfterGroup.filter(function(p) {
          var d = p.childrenAfterFilter && p.childrenAfterFilter.length > 0, v = p.data && i.filterManager.doesRowPassFilter({ rowNode: p });
          return d || v;
        }) : u.childrenAfterFilter = u.childrenAfterGroup, u.sibling && (u.sibling.childrenAfterFilter = u.childrenAfterFilter);
      };
      if (this.doingTreeDataFiltering()) {
        var s = function(u, c) {
          if (u.childrenAfterGroup)
            for (var p = 0; p < u.childrenAfterGroup.length; p++) {
              var d = u.childrenAfterGroup[p], v = c || i.filterManager.doesRowPassFilter({ rowNode: d });
              d.childrenAfterGroup ? s(u.childrenAfterGroup[p], v) : o(d, v);
            }
          o(u, c);
        }, a = function(u) {
          return s(u, !1);
        };
        r.executeFromRootNode(a);
      } else {
        var l = function(u) {
          return o(u, !1);
        };
        r.forEachChangedNodeDepthFirst(l, !0);
      }
    }, t.prototype.doingTreeDataFiltering = function() {
      return this.gridOptionsService.isTreeData() && !this.gridOptionsService.is("excludeChildrenWhenTreeDataFiltering");
    }, Pa([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), t = Pa([
      A("filterService")
    ], t), t;
  }(T)
), yw = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), bi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Cw = function(n, t) {
  var e = typeof Symbol == "function" && n[Symbol.iterator];
  if (!e)
    return n;
  var r = e.call(n), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (e = r.return) && e.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}, mw = (
  /** @class */
  function(n) {
    yw(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.rowModel.getType() === "clientSide" && (this.clientSideRowModel = this.rowModel);
    }, t.prototype.isActive = function() {
      var e = this.gridOptionsService.exists("getRowId"), r = this.gridOptionsService.is("immutableData"), i = this.gridOptionsService.is("resetRowDataOnUpdate");
      return i ? !1 : e || r;
    }, t.prototype.setRowData = function(e) {
      var r = this.createTransactionForRowData(e);
      if (r) {
        var i = Cw(r, 2), o = i[0], s = i[1];
        this.clientSideRowModel.updateRowData(o, s);
      }
    }, t.prototype.createTransactionForRowData = function(e) {
      if (G.missing(this.clientSideRowModel)) {
        console.error("AG Grid: ImmutableService only works with ClientSideRowModel");
        return;
      }
      var r = this.gridOptionsService.getRowIdFunc();
      if (r == null) {
        console.error("AG Grid: ImmutableService requires getRowId() callback to be implemented, your row data needs IDs!");
        return;
      }
      var i = {
        remove: [],
        update: [],
        add: []
      }, o = this.clientSideRowModel.getCopyOfNodesMap(), s = this.gridOptionsService.is("suppressMaintainUnsortedOrder"), a = s ? void 0 : {};
      return G.exists(e) && e.forEach(function(l, u) {
        var c = r({ data: l, level: 0 }), p = o[c];
        if (a && (a[c] = u), p) {
          var d = p.data !== l;
          d && i.update.push(l), o[c] = void 0;
        } else
          i.add.push(l);
      }), G.iterateObject(o, function(l, u) {
        u && i.remove.push(u.data);
      }), [i, a];
    }, bi([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), bi([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), bi([
      b
    ], t.prototype, "postConstruct", null), t = bi([
      A("immutableService")
    ], t), t;
  }(T)
), ww = "29.3.5", Sw = {
  version: ww,
  moduleName: F.ClientSideRowModelModule,
  rowModel: "clientSide",
  beans: [sw, lw, cw, dw, fw, gw, mw]
}, Ew = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), yn = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Da = (
  /** @class */
  function(n) {
    Ew(t, n);
    function t(e, r, i) {
      var o = n.call(this, e) || this;
      return o.parentCache = r, o.params = i, o.startRow = e * i.blockSize, o.endRow = o.startRow + i.blockSize, o;
    }
    return t.prototype.postConstruct = function() {
      this.createRowNodes();
    }, t.prototype.getBlockStateJson = function() {
      return {
        id: "" + this.getId(),
        state: {
          blockNumber: this.getId(),
          startRow: this.getStartRow(),
          endRow: this.getEndRow(),
          pageStatus: this.getState()
        }
      };
    }, t.prototype.setDataAndId = function(e, r, i) {
      !e.id && e.alreadyRendered && (e.alreadyRendered = !1), G.exists(r) ? e.setDataAndId(r, i.toString()) : e.setDataAndId(void 0, void 0);
    }, t.prototype.loadFromDatasource = function() {
      var e = this, r = this.createLoadParams();
      if (G.missing(this.params.datasource.getRows)) {
        console.warn("AG Grid: datasource is missing getRows method");
        return;
      }
      window.setTimeout(function() {
        e.params.datasource.getRows(r);
      }, 0);
    }, t.prototype.processServerFail = function() {
    }, t.prototype.createLoadParams = function() {
      var e = {
        startRow: this.getStartRow(),
        endRow: this.getEndRow(),
        successCallback: this.pageLoaded.bind(this, this.getVersion()),
        failCallback: this.pageLoadFailed.bind(this, this.getVersion()),
        sortModel: this.params.sortModel,
        filterModel: this.params.filterModel,
        context: this.gridOptionsService.context
      };
      return e;
    }, t.prototype.forEachNode = function(e, r, i) {
      var o = this;
      this.rowNodes.forEach(function(s, a) {
        var l = o.startRow + a;
        l < i && e(s, r.next());
      });
    }, t.prototype.getLastAccessed = function() {
      return this.lastAccessed;
    }, t.prototype.getRow = function(e, r) {
      r === void 0 && (r = !1), r || (this.lastAccessed = this.params.lastAccessedSequence.next());
      var i = e - this.startRow;
      return this.rowNodes[i];
    }, t.prototype.getStartRow = function() {
      return this.startRow;
    }, t.prototype.getEndRow = function() {
      return this.endRow;
    }, t.prototype.createRowNodes = function() {
      this.rowNodes = [];
      for (var e = 0; e < this.params.blockSize; e++) {
        var r = this.startRow + e, i = new j(this.beans);
        i.setRowHeight(this.params.rowHeight), i.uiLevel = 0, i.setRowIndex(r), i.setRowTop(this.params.rowHeight * r), this.rowNodes.push(i);
      }
    }, t.prototype.processServerResult = function(e) {
      var r = this;
      this.rowNodes.forEach(function(o, s) {
        var a = e.rowData ? e.rowData[s] : void 0;
        r.setDataAndId(o, a, r.startRow + s);
      });
      var i = e.rowCount != null && e.rowCount >= 0 ? e.rowCount : void 0;
      this.parentCache.pageLoaded(this, i);
    }, t.prototype.destroyRowNodes = function() {
      this.rowNodes.forEach(function(e) {
        e.clearRowTopAndRowIndex();
      });
    }, yn([
      h("beans")
    ], t.prototype, "beans", void 0), yn([
      b
    ], t.prototype, "postConstruct", null), yn([
      ve
    ], t.prototype, "destroyRowNodes", null), t;
  }(Bn)
), _w = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Pi = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Rw = function(n, t) {
  return function(e, r) {
    t(e, r, n);
  };
}, Ow = (
  /** @class */
  function(n) {
    _w(t, n);
    function t(e) {
      var r = n.call(this) || this;
      return r.lastRowIndexKnown = !1, r.blocks = {}, r.blockCount = 0, r.rowCount = e.initialRowCount, r.params = e, r;
    }
    return t.prototype.setBeans = function(e) {
      this.logger = e.create("InfiniteCache");
    }, t.prototype.getRow = function(e, r) {
      r === void 0 && (r = !1);
      var i = Math.floor(e / this.params.blockSize), o = this.blocks[i];
      if (!o) {
        if (r)
          return;
        o = this.createBlock(i);
      }
      return o.getRow(e);
    }, t.prototype.createBlock = function(e) {
      var r = this.createBean(new Da(e, this, this.params));
      return this.blocks[r.getId()] = r, this.blockCount++, this.purgeBlocksIfNeeded(r), this.params.rowNodeBlockLoader.addBlock(r), r;
    }, t.prototype.refreshCache = function() {
      var e = this.blockCount == 0;
      if (e) {
        this.purgeCache();
        return;
      }
      this.getBlocksInOrder().forEach(function(r) {
        return r.setStateWaitingToLoad();
      }), this.params.rowNodeBlockLoader.checkBlockToLoad();
    }, t.prototype.destroyAllBlocks = function() {
      var e = this;
      this.getBlocksInOrder().forEach(function(r) {
        return e.destroyBlock(r);
      });
    }, t.prototype.getRowCount = function() {
      return this.rowCount;
    }, t.prototype.isLastRowIndexKnown = function() {
      return this.lastRowIndexKnown;
    }, t.prototype.pageLoaded = function(e, r) {
      this.isAlive() && (this.logger.log("onPageLoaded: page = " + e.getId() + ", lastRow = " + r), this.checkRowCount(e, r), this.onCacheUpdated());
    }, t.prototype.purgeBlocksIfNeeded = function(e) {
      var r = this, i = this.getBlocksInOrder().filter(function(u) {
        return u != e;
      }), o = function(u, c) {
        return c.getLastAccessed() - u.getLastAccessed();
      };
      i.sort(o);
      var s = this.params.maxBlocksInCache > 0, a = s ? this.params.maxBlocksInCache - 1 : null, l = t.MAX_EMPTY_BLOCKS_TO_KEEP - 1;
      i.forEach(function(u, c) {
        var p = u.getState() === Da.STATE_WAITING_TO_LOAD && c >= l, d = s ? c >= a : !1;
        if (p || d) {
          if (r.isBlockCurrentlyDisplayed(u) || r.isBlockFocused(u))
            return;
          r.removeBlockFromCache(u);
        }
      });
    }, t.prototype.isBlockFocused = function(e) {
      var r = this.focusService.getFocusCellToUseAfterRefresh();
      if (!r || r.rowPinned != null)
        return !1;
      var i = e.getStartRow(), o = e.getEndRow(), s = r.rowIndex >= i && r.rowIndex < o;
      return s;
    }, t.prototype.isBlockCurrentlyDisplayed = function(e) {
      var r = e.getStartRow(), i = e.getEndRow() - 1;
      return this.rowRenderer.isRangeInRenderedViewport(r, i);
    }, t.prototype.removeBlockFromCache = function(e) {
      e && this.destroyBlock(e);
    }, t.prototype.checkRowCount = function(e, r) {
      if (typeof r == "number" && r >= 0)
        this.rowCount = r, this.lastRowIndexKnown = !0;
      else if (!this.lastRowIndexKnown) {
        var i = (e.getId() + 1) * this.params.blockSize, o = i + this.params.overflowSize;
        this.rowCount < o && (this.rowCount = o);
      }
    }, t.prototype.setRowCount = function(e, r) {
      this.rowCount = e, G.exists(r) && (this.lastRowIndexKnown = r), this.lastRowIndexKnown || this.rowCount % this.params.blockSize === 0 && this.rowCount++, this.onCacheUpdated();
    }, t.prototype.forEachNodeDeep = function(e) {
      var r = this, i = new sr();
      this.getBlocksInOrder().forEach(function(o) {
        return o.forEachNode(e, i, r.rowCount);
      });
    }, t.prototype.getBlocksInOrder = function() {
      var e = function(i, o) {
        return i.getId() - o.getId();
      }, r = G.getAllValuesInObject(this.blocks).sort(e);
      return r;
    }, t.prototype.destroyBlock = function(e) {
      delete this.blocks[e.getId()], this.destroyBean(e), this.blockCount--, this.params.rowNodeBlockLoader.removeBlock(e);
    }, t.prototype.onCacheUpdated = function() {
      if (this.isAlive()) {
        this.destroyAllBlocksPastVirtualRowCount();
        var e = {
          type: g.EVENT_STORE_UPDATED
        };
        this.eventService.dispatchEvent(e);
      }
    }, t.prototype.destroyAllBlocksPastVirtualRowCount = function() {
      var e = this, r = [];
      this.getBlocksInOrder().forEach(function(i) {
        var o = i.getId() * e.params.blockSize;
        o >= e.rowCount && r.push(i);
      }), r.length > 0 && r.forEach(function(i) {
        return e.destroyBlock(i);
      });
    }, t.prototype.purgeCache = function() {
      var e = this;
      this.getBlocksInOrder().forEach(function(r) {
        return e.removeBlockFromCache(r);
      }), this.lastRowIndexKnown = !1, this.rowCount === 0 && (this.rowCount = this.params.initialRowCount), this.onCacheUpdated();
    }, t.prototype.getRowNodesInRange = function(e, r) {
      var i = this, o = [], s = -1, a = !1, l = new sr();
      G.missing(e) && (a = !0);
      var u = !1;
      this.getBlocksInOrder().forEach(function(p) {
        if (!u) {
          if (a && s + 1 !== p.getId()) {
            u = !0;
            return;
          }
          s = p.getId(), p.forEachNode(function(d) {
            var v = d === e || d === r;
            (a || v) && o.push(d), v && (a = !a);
          }, l, i.rowCount);
        }
      });
      var c = u || a;
      return c ? [] : o;
    }, t.MAX_EMPTY_BLOCKS_TO_KEEP = 2, Pi([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), Pi([
      h("focusService")
    ], t.prototype, "focusService", void 0), Pi([
      Rw(0, me("loggerFactory"))
    ], t.prototype, "setBeans", null), Pi([
      ve
    ], t.prototype, "destroyAllBlocks", null), t;
  }(T)
), Tw = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), vt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, bw = (
  /** @class */
  function(n) {
    Tw(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.getRowBounds = function(e) {
      return {
        rowHeight: this.rowHeight,
        rowTop: this.rowHeight * e
      };
    }, t.prototype.ensureRowHeightsValid = function(e, r, i, o) {
      return !1;
    }, t.prototype.init = function() {
      var e = this;
      this.gridOptionsService.isRowModelType("infinite") && (this.rowHeight = this.gridOptionsService.getRowHeightAsNumber(), this.addEventListeners(), this.addDestroyFunc(function() {
        return e.destroyCache();
      }), this.verifyProps());
    }, t.prototype.verifyProps = function() {
      if (this.gridOptionsService.exists("initialGroupOrderComparator") || this.gridOptionsService.exists("defaultGroupOrderComparator")) {
        var e = "AG Grid: initialGroupOrderComparator cannot be used with Infinite Row Model. If using Infinite Row Model, then sorting is done on the server side, nothing to do with the client.";
        G.doOnce(function() {
          return console.warn(e);
        }, "IRM.InitialGroupOrderComparator");
      }
    }, t.prototype.start = function() {
      this.setDatasource(this.gridOptionsService.get("datasource"));
    }, t.prototype.destroyDatasource = function() {
      this.datasource && (this.getContext().destroyBean(this.datasource), this.rowRenderer.datasourceChanged(), this.datasource = null);
    }, t.prototype.addEventListeners = function() {
      this.addManagedListener(this.eventService, g.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_SORT_CHANGED, this.onSortChanged.bind(this)), this.addManagedListener(this.eventService, g.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverything.bind(this)), this.addManagedListener(this.eventService, g.EVENT_STORE_UPDATED, this.onCacheUpdated.bind(this));
    }, t.prototype.onFilterChanged = function() {
      this.reset();
    }, t.prototype.onSortChanged = function() {
      this.reset();
    }, t.prototype.onColumnEverything = function() {
      var e;
      this.cacheParams ? e = this.isSortModelDifferent() : e = !0, e && this.reset();
    }, t.prototype.isSortModelDifferent = function() {
      return !G.jsonEquals(this.cacheParams.sortModel, this.sortController.getSortModel());
    }, t.prototype.getType = function() {
      return "infinite";
    }, t.prototype.setDatasource = function(e) {
      this.destroyDatasource(), this.datasource = e, e && this.reset();
    }, t.prototype.isEmpty = function() {
      return !this.infiniteCache;
    }, t.prototype.isRowsToRender = function() {
      return !!this.infiniteCache;
    }, t.prototype.getNodesInRangeForSelection = function(e, r) {
      return this.infiniteCache ? this.infiniteCache.getRowNodesInRange(e, r) : [];
    }, t.prototype.reset = function() {
      if (this.datasource) {
        var e = this.gridOptionsService.getRowIdFunc(), r = e != null;
        r || this.selectionService.reset(), this.resetCache();
        var i = this.createModelUpdatedEvent();
        this.eventService.dispatchEvent(i);
      }
    }, t.prototype.createModelUpdatedEvent = function() {
      return {
        type: g.EVENT_MODEL_UPDATED,
        // not sure if these should all be false - noticed if after implementing,
        // maybe they should be true?
        newPage: !1,
        newData: !1,
        keepRenderedRows: !0,
        animate: !1
      };
    }, t.prototype.resetCache = function() {
      this.destroyCache(), this.cacheParams = {
        // the user provided datasource
        datasource: this.datasource,
        // sort and filter model
        filterModel: this.filterManager.getFilterModel(),
        sortModel: this.sortController.getSortModel(),
        rowNodeBlockLoader: this.rowNodeBlockLoader,
        // properties - this way we take a snapshot of them, so if user changes any, they will be
        // used next time we create a new cache, which is generally after a filter or sort change,
        // or a new datasource is set
        initialRowCount: this.defaultIfInvalid(this.gridOptionsService.getNum("infiniteInitialRowCount"), 1),
        maxBlocksInCache: this.gridOptionsService.getNum("maxBlocksInCache"),
        rowHeight: this.gridOptionsService.getRowHeightAsNumber(),
        // if user doesn't provide overflow, we use default overflow of 1, so user can scroll past
        // the current page and request first row of next page
        overflowSize: this.defaultIfInvalid(this.gridOptionsService.getNum("cacheOverflowSize"), 1),
        // page size needs to be 1 or greater. having it at 1 would be silly, as you would be hitting the
        // server for one page at a time. so the default if not specified is 100.
        blockSize: this.defaultIfInvalid(this.gridOptionsService.getNum("cacheBlockSize"), 100),
        // the cache could create this, however it is also used by the pages, so handy to create it
        // here as the settings are also passed to the pages
        lastAccessedSequence: new sr()
      }, this.infiniteCache = this.createBean(new Ow(this.cacheParams));
    }, t.prototype.defaultIfInvalid = function(e, r) {
      return e > 0 ? e : r;
    }, t.prototype.destroyCache = function() {
      this.infiniteCache && (this.infiniteCache = this.destroyBean(this.infiniteCache));
    }, t.prototype.onCacheUpdated = function() {
      var e = this.createModelUpdatedEvent();
      this.eventService.dispatchEvent(e);
    }, t.prototype.getRow = function(e) {
      if (this.infiniteCache && !(e >= this.infiniteCache.getRowCount()))
        return this.infiniteCache.getRow(e);
    }, t.prototype.getRowNode = function(e) {
      var r;
      return this.forEachNode(function(i) {
        i.id === e && (r = i);
      }), r;
    }, t.prototype.forEachNode = function(e) {
      this.infiniteCache && this.infiniteCache.forEachNodeDeep(e);
    }, t.prototype.getTopLevelRowCount = function() {
      return this.getRowCount();
    }, t.prototype.getTopLevelRowDisplayedIndex = function(e) {
      return e;
    }, t.prototype.getRowIndexAtPixel = function(e) {
      if (this.rowHeight !== 0) {
        var r = Math.floor(e / this.rowHeight), i = this.getRowCount() - 1;
        return r > i ? i : r;
      }
      return 0;
    }, t.prototype.getRowCount = function() {
      return this.infiniteCache ? this.infiniteCache.getRowCount() : 0;
    }, t.prototype.isRowPresent = function(e) {
      var r = this.getRowNode(e.id);
      return !!r;
    }, t.prototype.refreshCache = function() {
      this.infiniteCache && this.infiniteCache.refreshCache();
    }, t.prototype.purgeCache = function() {
      this.infiniteCache && this.infiniteCache.purgeCache();
    }, t.prototype.isLastRowIndexKnown = function() {
      return this.infiniteCache ? this.infiniteCache.isLastRowIndexKnown() : !1;
    }, t.prototype.setRowCount = function(e, r) {
      this.infiniteCache && this.infiniteCache.setRowCount(e, r);
    }, vt([
      h("filterManager")
    ], t.prototype, "filterManager", void 0), vt([
      h("sortController")
    ], t.prototype, "sortController", void 0), vt([
      h("selectionService")
    ], t.prototype, "selectionService", void 0), vt([
      h("rowRenderer")
    ], t.prototype, "rowRenderer", void 0), vt([
      h("rowNodeBlockLoader")
    ], t.prototype, "rowNodeBlockLoader", void 0), vt([
      b
    ], t.prototype, "init", null), vt([
      ve
    ], t.prototype, "destroyDatasource", null), t = vt([
      A("rowModel")
    ], t), t;
  }(T)
), Pw = "29.3.5", Dw = {
  version: Pw,
  moduleName: F.InfiniteRowModelModule,
  rowModel: "infinite",
  beans: [bw]
}, Aw = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.setBeans = function(t) {
      this.beans = t;
    }, n.prototype.getFileName = function(t) {
      var e = this.getDefaultFileExtension();
      return (t == null || !t.length) && (t = this.getDefaultFileName()), t.indexOf(".") === -1 ? t + "." + e : t;
    }, n.prototype.getData = function(t) {
      var e = this.createSerializingSession(t), r = this.beans.gridSerializer.serialize(e, t);
      return r;
    }, n;
  }()
), Fw = (
  /** @class */
  function() {
    function n(t) {
      this.groupColumns = [];
      var e = t.columnModel, r = t.valueService, i = t.gridOptionsService, o = t.processCellCallback, s = t.processHeaderCallback, a = t.processGroupHeaderCallback, l = t.processRowGroupCallback;
      this.columnModel = e, this.valueService = r, this.gridOptionsService = i, this.processCellCallback = o, this.processHeaderCallback = s, this.processGroupHeaderCallback = a, this.processRowGroupCallback = l;
    }
    return n.prototype.prepare = function(t) {
      this.groupColumns = t.filter(function(e) {
        return !!e.getColDef().showRowGroup;
      });
    }, n.prototype.extractHeaderValue = function(t) {
      var e = this.getHeaderName(this.processHeaderCallback, t);
      return e ?? "";
    }, n.prototype.extractRowCellValue = function(t, e, r, i, o) {
      var s = this.gridOptionsService.is("groupHideOpenParents"), a = (!s || o.footer) && this.shouldRenderGroupSummaryCell(o, t, e) ? this.createValueForGroupNode(o) : this.valueService.getValue(t, o), l = this.processCell({
        accumulatedRowIndex: r,
        rowNode: o,
        column: t,
        value: a,
        processCellCallback: this.processCellCallback,
        type: i
      });
      return l ?? "";
    }, n.prototype.shouldRenderGroupSummaryCell = function(t, e, r) {
      var i, o = t && t.group;
      if (!o)
        return !1;
      var s = this.groupColumns.indexOf(e);
      if (s !== -1) {
        if (!((i = t.groupData) === null || i === void 0) && i[e.getId()])
          return !0;
        if (t.footer && t.level === -1) {
          var a = e.getColDef(), l = a == null || a.showRowGroup === !0;
          return l || a.showRowGroup === this.columnModel.getRowGroupColumns()[0].getId();
        }
      }
      var u = this.gridOptionsService.isGroupUseEntireRow(this.columnModel.isPivotMode());
      return r === 0 && u;
    }, n.prototype.getHeaderName = function(t, e) {
      return t ? t({
        column: e,
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi,
        context: this.gridOptionsService.context
      }) : this.columnModel.getDisplayNameForColumn(e, "csv", !0);
    }, n.prototype.createValueForGroupNode = function(t) {
      if (this.processRowGroupCallback)
        return this.processRowGroupCallback({
          node: t,
          api: this.gridOptionsService.api,
          columnApi: this.gridOptionsService.columnApi,
          context: this.gridOptionsService.context
        });
      var e = t.footer, r = [t.key];
      if (!this.gridOptionsService.isGroupMultiAutoColumn())
        for (; t.parent; )
          t = t.parent, r.push(t.key);
      var i = r.reverse().join(" -> ");
      return e ? "Total " + i : i;
    }, n.prototype.processCell = function(t) {
      var e = t.accumulatedRowIndex, r = t.rowNode, i = t.column, o = t.value, s = t.processCellCallback, a = t.type;
      return s ? s({
        accumulatedRowIndex: e,
        column: i,
        node: r,
        value: o,
        api: this.gridOptionsService.api,
        columnApi: this.gridOptionsService.columnApi,
        context: this.gridOptionsService.context,
        type: a
      }) : o ?? "";
    }, n;
  }()
), Lw = (
  /** @class */
  function() {
    function n() {
    }
    return n.download = function(t, e) {
      var r = document.defaultView || window;
      if (!r) {
        console.warn("AG Grid: There is no `window` associated with the current `document`");
        return;
      }
      var i = document.createElement("a"), o = r.URL.createObjectURL(e);
      i.setAttribute("href", o), i.setAttribute("download", t), i.style.display = "none", document.body.appendChild(i), i.dispatchEvent(new MouseEvent("click", {
        bubbles: !1,
        cancelable: !0,
        view: r
      })), document.body.removeChild(i), r.setTimeout(function() {
        r.URL.revokeObjectURL(o);
      }, 0);
    }, n;
  }()
), Mw = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Aa = `\r
`, Iw = (
  /** @class */
  function(n) {
    Mw(t, n);
    function t(e) {
      var r = n.call(this, e) || this;
      r.isFirstLine = !0, r.result = "";
      var i = e.suppressQuotes, o = e.columnSeparator;
      return r.suppressQuotes = i, r.columnSeparator = o, r;
    }
    return t.prototype.addCustomContent = function(e) {
      var r = this;
      e && (typeof e == "string" ? (/^\s*\n/.test(e) || this.beginNewLine(), e = e.replace(/\r?\n/g, Aa), this.result += e) : e.forEach(function(i) {
        r.beginNewLine(), i.forEach(function(o, s) {
          s !== 0 && (r.result += r.columnSeparator), r.result += r.putInQuotes(o.data.value || ""), o.mergeAcross && r.appendEmptyCells(o.mergeAcross);
        });
      }));
    }, t.prototype.onNewHeaderGroupingRow = function() {
      return this.beginNewLine(), {
        onColumn: this.onNewHeaderGroupingRowColumn.bind(this)
      };
    }, t.prototype.onNewHeaderGroupingRowColumn = function(e, r, i, o) {
      i != 0 && (this.result += this.columnSeparator), this.result += this.putInQuotes(r), this.appendEmptyCells(o);
    }, t.prototype.appendEmptyCells = function(e) {
      for (var r = 1; r <= e; r++)
        this.result += this.columnSeparator + this.putInQuotes("");
    }, t.prototype.onNewHeaderRow = function() {
      return this.beginNewLine(), {
        onColumn: this.onNewHeaderRowColumn.bind(this)
      };
    }, t.prototype.onNewHeaderRowColumn = function(e, r) {
      r != 0 && (this.result += this.columnSeparator), this.result += this.putInQuotes(this.extractHeaderValue(e));
    }, t.prototype.onNewBodyRow = function() {
      return this.beginNewLine(), {
        onColumn: this.onNewBodyRowColumn.bind(this)
      };
    }, t.prototype.onNewBodyRowColumn = function(e, r, i) {
      r != 0 && (this.result += this.columnSeparator), this.result += this.putInQuotes(this.extractRowCellValue(e, r, r, "csv", i));
    }, t.prototype.putInQuotes = function(e) {
      if (this.suppressQuotes)
        return e;
      if (e == null)
        return '""';
      var r;
      typeof e == "string" ? r = e : typeof e.toString == "function" ? r = e.toString() : (console.warn("AG Grid: unknown value type during csv conversion"), r = "");
      var i = r.replace(/"/g, '""');
      return '"' + i + '"';
    }, t.prototype.parse = function() {
      return this.result;
    }, t.prototype.beginNewLine = function() {
      this.isFirstLine || (this.result += Aa), this.isFirstLine = !1;
    }, t;
  }(Fw)
), xw = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), Kt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Nw = (
  /** @class */
  function(n) {
    xw(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.postConstruct = function() {
      this.setBeans({
        gridSerializer: this.gridSerializer,
        gridOptionsService: this.gridOptionsService
      });
    }, t.prototype.getMergedParams = function(e) {
      var r = this.gridOptionsService.get("defaultCsvExportParams");
      return Object.assign({}, r, e);
    }, t.prototype.export = function(e) {
      if (this.isExportSuppressed())
        return console.warn("AG Grid: Export cancelled. Export is not allowed as per your configuration."), "";
      var r = this.getMergedParams(e), i = this.getData(r), o = new Blob(["\uFEFF", i], { type: "text/plain" });
      return Lw.download(this.getFileName(r.fileName), o), i;
    }, t.prototype.exportDataAsCsv = function(e) {
      return this.export(e);
    }, t.prototype.getDataAsCsv = function(e, r) {
      r === void 0 && (r = !1);
      var i = r ? Object.assign({}, e) : this.getMergedParams(e);
      return this.getData(i);
    }, t.prototype.getDefaultFileName = function() {
      return "export.csv";
    }, t.prototype.getDefaultFileExtension = function() {
      return "csv";
    }, t.prototype.createSerializingSession = function(e) {
      var r = this, i = r.columnModel, o = r.valueService, s = r.gridOptionsService, a = e, l = a.processCellCallback, u = a.processHeaderCallback, c = a.processGroupHeaderCallback, p = a.processRowGroupCallback, d = a.suppressQuotes, v = a.columnSeparator;
      return new Iw({
        columnModel: i,
        valueService: o,
        gridOptionsService: s,
        processCellCallback: l || void 0,
        processHeaderCallback: u || void 0,
        processGroupHeaderCallback: c || void 0,
        processRowGroupCallback: p || void 0,
        suppressQuotes: d || !1,
        columnSeparator: v || ","
      });
    }, t.prototype.isExportSuppressed = function() {
      return this.gridOptionsService.is("suppressCsvExport");
    }, Kt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), Kt([
      h("valueService")
    ], t.prototype, "valueService", void 0), Kt([
      h("gridSerializer")
    ], t.prototype, "gridSerializer", void 0), Kt([
      h("gridOptionsService")
    ], t.prototype, "gridOptionsService", void 0), Kt([
      b
    ], t.prototype, "postConstruct", null), t = Kt([
      A("csvCreator")
    ], t), t;
  }(Aw)
), Gw = function() {
  var n = function(t, e) {
    return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, i) {
      r.__proto__ = i;
    } || function(r, i) {
      for (var o in i)
        Object.prototype.hasOwnProperty.call(i, o) && (r[o] = i[o]);
    }, n(t, e);
  };
  return function(t, e) {
    n(t, e);
    function r() {
      this.constructor = t;
    }
    t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
  };
}(), gt = function(n, t, e, r) {
  var i = arguments.length, o = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, t, e, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, e, o) : s(t, e)) || o);
  return i > 3 && o && Object.defineProperty(t, e, o), o;
}, Fa;
(function(n) {
  n[n.HEADER_GROUPING = 0] = "HEADER_GROUPING", n[n.HEADER = 1] = "HEADER", n[n.BODY = 2] = "BODY";
})(Fa || (Fa = {}));
var Hw = (
  /** @class */
  function(n) {
    Gw(t, n);
    function t() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return t.prototype.serialize = function(e, r) {
      r === void 0 && (r = {});
      var i = this.getColumnsToExport(r.allColumns, r.columnKeys), o = G.compose(
        // first pass, put in the header names of the cols
        this.prepareSession(i),
        this.prependContent(r),
        this.exportColumnGroups(r, i),
        this.exportHeaders(r, i),
        this.processPinnedTopRows(r, i),
        this.processRows(r, i),
        this.processPinnedBottomRows(r, i),
        this.appendContent(r)
      );
      return o(e).parse();
    }, t.prototype.processRow = function(e, r, i, o) {
      var s = r.shouldRowBeSkipped || function() {
        return !1;
      }, a = this.gridOptionsService.context, l = this.gridOptionsService.api, u = this.gridOptionsService.columnApi, c = this.gridOptionsService.is("groupRemoveSingleChildren"), p = this.gridOptionsService.is("groupRemoveLowestSingleChildren"), d = r.rowPositions != null, v = d || !!r.onlySelected, f = this.gridOptionsService.is("groupHideOpenParents") && !v, y = this.columnModel.isPivotMode() ? o.leafGroup : !o.group, C = !!o.footer, m = r.skipGroups || r.skipRowGroups, w = p && o.leafGroup, E = o.allChildrenCount === 1 && (c || w);
      if (m && r.skipGroups && G.doOnce(function() {
        return console.warn("AG Grid: Since v25.2 `skipGroups` has been renamed to `skipRowGroups`.");
      }, "gridSerializer-skipGroups"), !(!y && !C && (r.skipRowGroups || E || f) || r.onlySelected && !o.isSelected() || r.skipPinnedTop && o.rowPinned === "top" || r.skipPinnedBottom && o.rowPinned === "bottom")) {
        var R = o.level === -1;
        if (!(R && !y && !C)) {
          var D = s({ node: o, api: l, columnApi: u, context: a });
          if (!D) {
            var M = e.onNewBodyRow();
            if (i.forEach(function(L, H) {
              M.onColumn(L, H, o);
            }), r.getCustomContentBelowRow) {
              var I = r.getCustomContentBelowRow({ node: o, api: l, columnApi: u, context: a });
              I && e.addCustomContent(I);
            }
          }
        }
      }
    }, t.prototype.appendContent = function(e) {
      return function(r) {
        var i = e.customFooter || e.appendContent;
        return i && (e.customFooter && G.doOnce(function() {
          return console.warn("AG Grid: Since version 25.2.0 the `customFooter` param has been deprecated. Use `appendContent` instead.");
        }, "gridSerializer-customFooter"), r.addCustomContent(i)), r;
      };
    }, t.prototype.prependContent = function(e) {
      return function(r) {
        var i = e.customHeader || e.prependContent;
        return i && (e.customHeader && G.doOnce(function() {
          return console.warn("AG Grid: Since version 25.2.0 the `customHeader` param has been deprecated. Use `prependContent` instead.");
        }, "gridSerializer-customHeader"), r.addCustomContent(i)), r;
      };
    }, t.prototype.prepareSession = function(e) {
      return function(r) {
        return r.prepare(e), r;
      };
    }, t.prototype.exportColumnGroups = function(e, r) {
      var i = this;
      return function(o) {
        if (e.skipColumnGroupHeaders)
          e.columnGroups && G.doOnce(function() {
            return console.warn("AG Grid: Since v25.2 the `columnGroups` param has deprecated, and groups are exported by default.");
          }, "gridSerializer-columnGroups");
        else {
          var s = new dl(), a = i.displayedGroupCreator.createDisplayedGroups(r, i.columnModel.getGridBalancedTree(), s, null);
          i.recursivelyAddHeaderGroups(a, o, e.processGroupHeaderCallback);
        }
        return o;
      };
    }, t.prototype.exportHeaders = function(e, r) {
      return function(i) {
        if (!e.skipHeader && !e.skipColumnHeaders) {
          var o = i.onNewHeaderRow();
          r.forEach(function(s, a) {
            o.onColumn(s, a, void 0);
          });
        } else
          e.skipHeader && G.doOnce(function() {
            return console.warn("AG Grid: Since v25.2 the `skipHeader` param has been renamed to `skipColumnHeaders`.");
          }, "gridSerializer-skipHeader");
        return i;
      };
    }, t.prototype.processPinnedTopRows = function(e, r) {
      var i = this;
      return function(o) {
        var s = i.processRow.bind(i, o, e, r);
        return e.rowPositions ? e.rowPositions.filter(function(a) {
          return a.rowPinned === "top";
        }).sort(function(a, l) {
          return a.rowIndex - l.rowIndex;
        }).map(function(a) {
          return i.pinnedRowModel.getPinnedTopRow(a.rowIndex);
        }).forEach(s) : i.pinnedRowModel.forEachPinnedTopRow(s), o;
      };
    }, t.prototype.processRows = function(e, r) {
      var i = this;
      return function(o) {
        var s = i.rowModel, a = s.getType(), l = a === "clientSide", u = a === "serverSide", c = !l && e.onlySelected, p = i.processRow.bind(i, o, e, r), d = e.exportedRows, v = d === void 0 ? "filteredAndSorted" : d;
        if (e.rowPositions)
          e.rowPositions.filter(function(y) {
            return y.rowPinned == null;
          }).sort(function(y, C) {
            return y.rowIndex - C.rowIndex;
          }).map(function(y) {
            return s.getRow(y.rowIndex);
          }).forEach(p);
        else if (i.columnModel.isPivotMode())
          l ? s.forEachPivotNode(p, !0) : s.forEachNode(p);
        else if (e.onlySelectedAllPages || c) {
          var f = i.selectionService.getSelectedNodes();
          i.replicateSortedOrder(f), f.forEach(p);
        } else
          v === "all" ? s.forEachNode(p) : l ? s.forEachNodeAfterFilterAndSort(p, !0) : u ? s.forEachNodeAfterFilterAndSort(p) : s.forEachNode(p);
        return o;
      };
    }, t.prototype.replicateSortedOrder = function(e) {
      var r = this, i = this.sortController.getSortOptions(), o = function(s, a) {
        var l, u, c, p;
        return s.rowIndex != null && a.rowIndex != null ? s.rowIndex - a.rowIndex : s.level === a.level ? ((l = s.parent) === null || l === void 0 ? void 0 : l.id) === ((u = a.parent) === null || u === void 0 ? void 0 : u.id) ? r.rowNodeSorter.compareRowNodes(i, {
          rowNode: s,
          currentPos: (c = s.rowIndex) !== null && c !== void 0 ? c : -1
        }, {
          rowNode: a,
          currentPos: (p = a.rowIndex) !== null && p !== void 0 ? p : -1
        }) : o(s.parent, a.parent) : s.level > a.level ? o(s.parent, a) : o(s, a.parent);
      };
      e.sort(o);
    }, t.prototype.processPinnedBottomRows = function(e, r) {
      var i = this;
      return function(o) {
        var s = i.processRow.bind(i, o, e, r);
        return e.rowPositions ? e.rowPositions.filter(function(a) {
          return a.rowPinned === "bottom";
        }).sort(function(a, l) {
          return a.rowIndex - l.rowIndex;
        }).map(function(a) {
          return i.pinnedRowModel.getPinnedBottomRow(a.rowIndex);
        }).forEach(s) : i.pinnedRowModel.forEachPinnedBottomRow(s), o;
      };
    }, t.prototype.getColumnsToExport = function(e, r) {
      e === void 0 && (e = !1);
      var i = this.columnModel.isPivotMode();
      if (r && r.length)
        return this.columnModel.getGridColumns(r);
      if (e && !i) {
        var o = this.gridOptionsService.isTreeData() ? this.columnModel.getGridColumns([Vr]) : [];
        return o.concat(this.columnModel.getAllPrimaryColumns() || []);
      }
      return this.columnModel.getAllDisplayedColumns();
    }, t.prototype.recursivelyAddHeaderGroups = function(e, r, i) {
      var o = [];
      e.forEach(function(s) {
        var a = s;
        a.getChildren && a.getChildren().forEach(function(l) {
          return o.push(l);
        });
      }), e.length > 0 && e[0] instanceof Te && this.doAddHeaderHeader(r, e, i), o && o.length > 0 && this.recursivelyAddHeaderGroups(o, r, i);
    }, t.prototype.doAddHeaderHeader = function(e, r, i) {
      var o = this, s = e.onNewHeaderGroupingRow(), a = 0;
      r.forEach(function(l) {
        var u = l, c;
        i ? c = i({
          columnGroup: u,
          api: o.gridOptionsService.api,
          columnApi: o.gridOptionsService.columnApi,
          context: o.gridOptionsService.context
        }) : c = o.columnModel.getDisplayNameForColumnGroup(u, "header");
        var p = u.getLeafColumns().reduce(function(d, v, f, y) {
          var C = G.last(d), m = v.getColumnGroupShow() === "open";
          return m ? (!C || C[1] != null) && (C = [f], d.push(C)) : C && C[1] == null && (C[1] = f - 1), f === y.length - 1 && C && C[1] == null && (C[1] = f), d;
        }, []);
        s.onColumn(u, c || "", a++, u.getLeafColumns().length - 1, p);
      });
    }, gt([
      h("displayedGroupCreator")
    ], t.prototype, "displayedGroupCreator", void 0), gt([
      h("columnModel")
    ], t.prototype, "columnModel", void 0), gt([
      h("rowModel")
    ], t.prototype, "rowModel", void 0), gt([
      h("pinnedRowModel")
    ], t.prototype, "pinnedRowModel", void 0), gt([
      h("selectionService")
    ], t.prototype, "selectionService", void 0), gt([
      h("rowNodeSorter")
    ], t.prototype, "rowNodeSorter", void 0), gt([
      h("sortController")
    ], t.prototype, "sortController", void 0), t = gt([
      A("gridSerializer")
    ], t), t;
  }(T)
), Vw = "29.3.5", Bw = {
  version: Vw,
  moduleName: F.CsvExportModule,
  beans: [Nw, Hw]
}, Ww = [Sw, Dw, Bw];
N.registerModules(Ww);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var Ne = function() {
  return Ne = Object.assign || function(t) {
    for (var e, r = 1, i = arguments.length; r < i; r++) {
      e = arguments[r];
      for (var o in e)
        Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
    }
    return t;
  }, Ne.apply(this, arguments);
}, jw = (
  /** @class */
  function() {
    function n(t) {
      this.options = t, this.listeners = {};
    }
    return n.prototype.on = function(t, e) {
      var r = this.listeners[t] || [];
      this.listeners[t] = r.concat([e]);
    }, n.prototype.triggerEvent = function(t, e) {
      var r = this, i = this.listeners[t] || [];
      i.forEach(function(o) {
        return o({ target: r, event: e });
      });
    }, n;
  }()
), cr;
(function(n) {
  n[n.Add = 0] = "Add", n[n.Remove = 1] = "Remove";
})(cr || (cr = {}));
var kw = (
  /** @class */
  function() {
    function n() {
      this.notifications = [];
    }
    return n.prototype.push = function(t) {
      this.notifications.push(t), this.updateFn(t, cr.Add, this.notifications);
    }, n.prototype.splice = function(t, e) {
      var r = this.notifications.splice(t, e)[0];
      return this.updateFn(r, cr.Remove, this.notifications), r;
    }, n.prototype.indexOf = function(t) {
      return this.notifications.indexOf(t);
    }, n.prototype.onUpdate = function(t) {
      this.updateFn = t;
    }, n;
  }()
), mt;
(function(n) {
  n.Dismiss = "dismiss", n.Click = "click";
})(mt || (mt = {}));
var La = {
  types: [
    {
      type: "success",
      className: "notyf__toast--success",
      backgroundColor: "#3dc763",
      icon: {
        className: "notyf__icon--success",
        tagName: "i"
      }
    },
    {
      type: "error",
      className: "notyf__toast--error",
      backgroundColor: "#ed3d3d",
      icon: {
        className: "notyf__icon--error",
        tagName: "i"
      }
    }
  ],
  duration: 2e3,
  ripple: !0,
  position: {
    x: "right",
    y: "bottom"
  },
  dismissible: !1
}, Uw = (
  /** @class */
  function() {
    function n() {
      this.notifications = [], this.events = {}, this.X_POSITION_FLEX_MAP = {
        left: "flex-start",
        center: "center",
        right: "flex-end"
      }, this.Y_POSITION_FLEX_MAP = {
        top: "flex-start",
        center: "center",
        bottom: "flex-end"
      };
      var t = document.createDocumentFragment(), e = this._createHTMLElement({ tagName: "div", className: "notyf" });
      t.appendChild(e), document.body.appendChild(t), this.container = e, this.animationEndEventName = this._getAnimationEndEventName(), this._createA11yContainer();
    }
    return n.prototype.on = function(t, e) {
      var r;
      this.events = Ne(Ne({}, this.events), (r = {}, r[t] = e, r));
    }, n.prototype.update = function(t, e) {
      e === cr.Add ? this.addNotification(t) : e === cr.Remove && this.removeNotification(t);
    }, n.prototype.removeNotification = function(t) {
      var e = this, r = this._popRenderedNotification(t), i;
      if (r) {
        i = r.node, i.classList.add("notyf__toast--disappear");
        var o;
        i.addEventListener(this.animationEndEventName, o = function(s) {
          s.target === i && (i.removeEventListener(e.animationEndEventName, o), e.container.removeChild(i));
        });
      }
    }, n.prototype.addNotification = function(t) {
      var e = this._renderNotification(t);
      this.notifications.push({ notification: t, node: e }), this._announce(t.options.message || "Notification");
    }, n.prototype._renderNotification = function(t) {
      var e, r = this._buildNotificationCard(t), i = t.options.className;
      return i && (e = r.classList).add.apply(e, i.split(" ")), this.container.appendChild(r), r;
    }, n.prototype._popRenderedNotification = function(t) {
      for (var e = -1, r = 0; r < this.notifications.length && e < 0; r++)
        this.notifications[r].notification === t && (e = r);
      if (e !== -1)
        return this.notifications.splice(e, 1)[0];
    }, n.prototype.getXPosition = function(t) {
      var e;
      return ((e = t == null ? void 0 : t.position) === null || e === void 0 ? void 0 : e.x) || "right";
    }, n.prototype.getYPosition = function(t) {
      var e;
      return ((e = t == null ? void 0 : t.position) === null || e === void 0 ? void 0 : e.y) || "bottom";
    }, n.prototype.adjustContainerAlignment = function(t) {
      var e = this.X_POSITION_FLEX_MAP[this.getXPosition(t)], r = this.Y_POSITION_FLEX_MAP[this.getYPosition(t)], i = this.container.style;
      i.setProperty("justify-content", r), i.setProperty("align-items", e);
    }, n.prototype._buildNotificationCard = function(t) {
      var e = this, r = t.options, i = r.icon;
      this.adjustContainerAlignment(r);
      var o = this._createHTMLElement({ tagName: "div", className: "notyf__toast" }), s = this._createHTMLElement({ tagName: "div", className: "notyf__ripple" }), a = this._createHTMLElement({ tagName: "div", className: "notyf__wrapper" }), l = this._createHTMLElement({ tagName: "div", className: "notyf__message" });
      l.innerHTML = r.message || "";
      var u = r.background || r.backgroundColor;
      if (i) {
        var c = this._createHTMLElement({ tagName: "div", className: "notyf__icon" });
        if ((typeof i == "string" || i instanceof String) && (c.innerHTML = new String(i).valueOf()), typeof i == "object") {
          var p = i.tagName, d = p === void 0 ? "i" : p, v = i.className, f = i.text, y = i.color, C = y === void 0 ? u : y, m = this._createHTMLElement({ tagName: d, className: v, text: f });
          C && (m.style.color = C), c.appendChild(m);
        }
        a.appendChild(c);
      }
      if (a.appendChild(l), o.appendChild(a), u && (r.ripple ? (s.style.background = u, o.appendChild(s)) : o.style.background = u), r.dismissible) {
        var w = this._createHTMLElement({ tagName: "div", className: "notyf__dismiss" }), E = this._createHTMLElement({
          tagName: "button",
          className: "notyf__dismiss-btn"
        });
        w.appendChild(E), a.appendChild(w), o.classList.add("notyf__toast--dismissible"), E.addEventListener("click", function(D) {
          var M, I;
          (I = (M = e.events)[mt.Dismiss]) === null || I === void 0 || I.call(M, { target: t, event: D }), D.stopPropagation();
        });
      }
      o.addEventListener("click", function(D) {
        var M, I;
        return (I = (M = e.events)[mt.Click]) === null || I === void 0 ? void 0 : I.call(M, { target: t, event: D });
      });
      var R = this.getYPosition(r) === "top" ? "upper" : "lower";
      return o.classList.add("notyf__toast--" + R), o;
    }, n.prototype._createHTMLElement = function(t) {
      var e = t.tagName, r = t.className, i = t.text, o = document.createElement(e);
      return r && (o.className = r), o.textContent = i || null, o;
    }, n.prototype._createA11yContainer = function() {
      var t = this._createHTMLElement({ tagName: "div", className: "notyf-announcer" });
      t.setAttribute("aria-atomic", "true"), t.setAttribute("aria-live", "polite"), t.style.border = "0", t.style.clip = "rect(0 0 0 0)", t.style.height = "1px", t.style.margin = "-1px", t.style.overflow = "hidden", t.style.padding = "0", t.style.position = "absolute", t.style.width = "1px", t.style.outline = "0", document.body.appendChild(t), this.a11yContainer = t;
    }, n.prototype._announce = function(t) {
      var e = this;
      this.a11yContainer.textContent = "", setTimeout(function() {
        e.a11yContainer.textContent = t;
      }, 100);
    }, n.prototype._getAnimationEndEventName = function() {
      var t = document.createElement("_fake"), e = {
        MozTransition: "animationend",
        OTransition: "oAnimationEnd",
        WebkitTransition: "webkitAnimationEnd",
        transition: "animationend"
      }, r;
      for (r in e)
        if (t.style[r] !== void 0)
          return e[r];
      return "animationend";
    }, n;
  }()
), zw = (
  /** @class */
  function() {
    function n(t) {
      var e = this;
      this.dismiss = this._removeNotification, this.notifications = new kw(), this.view = new Uw();
      var r = this.registerTypes(t);
      this.options = Ne(Ne({}, La), t), this.options.types = r, this.notifications.onUpdate(function(i, o) {
        return e.view.update(i, o);
      }), this.view.on(mt.Dismiss, function(i) {
        var o = i.target, s = i.event;
        e._removeNotification(o), o.triggerEvent(mt.Dismiss, s);
      }), this.view.on(mt.Click, function(i) {
        var o = i.target, s = i.event;
        return o.triggerEvent(mt.Click, s);
      });
    }
    return n.prototype.error = function(t) {
      var e = this.normalizeOptions("error", t);
      return this.open(e);
    }, n.prototype.success = function(t) {
      var e = this.normalizeOptions("success", t);
      return this.open(e);
    }, n.prototype.open = function(t) {
      var e = this.options.types.find(function(o) {
        var s = o.type;
        return s === t.type;
      }) || {}, r = Ne(Ne({}, e), t);
      this.assignProps(["ripple", "position", "dismissible"], r);
      var i = new jw(r);
      return this._pushNotification(i), i;
    }, n.prototype.dismissAll = function() {
      for (; this.notifications.splice(0, 1); )
        ;
    }, n.prototype.assignProps = function(t, e) {
      var r = this;
      t.forEach(function(i) {
        e[i] = e[i] == null ? r.options[i] : e[i];
      });
    }, n.prototype._pushNotification = function(t) {
      var e = this;
      this.notifications.push(t);
      var r = t.options.duration !== void 0 ? t.options.duration : this.options.duration;
      r && setTimeout(function() {
        return e._removeNotification(t);
      }, r);
    }, n.prototype._removeNotification = function(t) {
      var e = this.notifications.indexOf(t);
      e !== -1 && this.notifications.splice(e, 1);
    }, n.prototype.normalizeOptions = function(t, e) {
      var r = { type: t };
      return typeof e == "string" ? r.message = e : typeof e == "object" && (r = Ne(Ne({}, r), e)), r;
    }, n.prototype.registerTypes = function(t) {
      var e = (t && t.types || []).slice(), r = La.types.map(function(i) {
        var o = -1;
        e.forEach(function(a, l) {
          a.type === i.type && (o = l);
        });
        var s = o !== -1 ? e.splice(o, 1)[0] : {};
        return Ne(Ne({}, i), s);
      });
      return r.concat(e);
    }, n;
  }()
);
function Kw() {
  const n = new zw(), e = {
    subject: new Va(),
    subscribe: (f) => e.subject.pipe(wc()).subscribe(f),
    refresh: async () => fetch("/agent-scheduler/v1/queue?limit=1000").then((f) => f.json()).then((f) => {
      const y = f.pending_tasks.map((C) => ({
        ...C,
        params: JSON.parse(C.params),
        status: C.id === f.current_task_id ? "running" : "pending"
      }));
      e.subject.next({
        ...f,
        pending_tasks: y
      });
    }),
    pauseQueue: async () => fetch("/agent-scheduler/v1/pause", { method: "POST" }).then((f) => f.json()).then((f) => (f.success ? n.success(f.message) : n.error(f.message), e.refresh())),
    resumeQueue: async () => fetch("/agent-scheduler/v1/resume", { method: "POST" }).then((f) => f.json()).then((f) => (f.success ? n.success(f.message) : n.error(f.message), e.refresh())),
    runTask: async (f) => fetch(`/agent-scheduler/v1/run/${f}`, { method: "POST" }).then((y) => y.json()).then((y) => (y.success ? n.success(y.message) : n.error(y.message), e.refresh())),
    deleteTask: async (f) => fetch(`/agent-scheduler/v1/delete/${f}`, { method: "POST" }).then((y) => y.json()).then((y) => (y.success ? n.success(y.message) : n.error(y.message), e.refresh())),
    moveTask: async (f, y) => fetch(`/agent-scheduler/v1/move/${f}/${y}`, { method: "POST" }).then((C) => C.json()).then((C) => (C.success ? n.success(C.message) : n.error(C.message), e.refresh()))
  };
  e.subject.next({
    current_task_id: null,
    total_pending_tasks: 0,
    pending_tasks: [],
    paused: !1
  }), window.submit_enqueue = function() {
    var y = randomId(), C = create_submit_args(arguments);
    C[0] = y;
    const m = document.querySelector("#txt2img_enqueue");
    return m && (m.innerHTML = "Queued", setTimeout(() => {
      m.innerHTML = "Enqueue", e.refresh();
    }, 1e3)), C;
  }, window.submit_enqueue_img2img = function() {
    var y = randomId(), C = create_submit_args(arguments);
    C[0] = y, C[1] = get_tab_index("mode_img2img");
    const m = document.querySelector("#img2img_enqueue");
    return m && (m.innerHTML = "Queued", setTimeout(() => {
      m.innerHTML = "Enqueue", e.refresh();
    }, 1e3)), C;
  };
  const r = gradioApp().querySelector(".interrogate-col");
  r.childElementCount > 2 && r.classList.add("has-queue-button"), new MutationObserver(function(f) {
    const y = f.find((C) => C.attributeName === "style");
    y && y.target.style.display === "block" && e.refresh();
  }).observe(document.getElementById("tab_agent_scheduler"), { attributes: !0 });
  const o = gradioApp().querySelector("#agent_scheduler_action_refresh"), s = gradioApp().querySelector("#agent_scheduler_action_pause"), a = gradioApp().querySelector("#agent_scheduler_action_resume");
  o.addEventListener("click", e.refresh), s.addEventListener("click", e.pauseQueue), a.addEventListener("click", e.resumeQueue);
  const l = gradioApp().querySelector("#agent_scheduler_action_search");
  l.className = "ts-search", l.innerHTML = `
  <div class="ts-search-icon">
  <svg width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
    <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
    <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0"/>
    <path d="M21 21l-6 -6"/>
  </svg>
  </div>
  <input type="text" id="agent_scheduler_search_input" class="ts-search-input" placeholder="Search" required>
`;
  const u = (f) => {
    f && requestProgress(
      f,
      gradioApp().querySelector("#agent_scheduler_current_task_progress"),
      gradioApp().querySelector("#agent_scheduler_current_task_images"),
      () => {
        setTimeout(() => {
          e.refresh();
        }, 1e3);
      }
    );
  };
  e.subscribe({
    next: ([f, y]) => {
      f.current_task_id !== y.current_task_id && u(y.current_task_id), y.paused ? (s.classList.add("hide"), a.classList.remove("hide")) : (s.classList.remove("hide"), a.classList.add("hide"));
    }
  });
  const c = `
    <svg width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
      <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
      <path d="M4 7l16 0"/>
      <path d="M10 11l0 6"/>
      <path d="M14 11l0 6"/>
      <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"/>
      <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"/>
    </svg>`, p = `
    <svg width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
      <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
      <path d="M18 6l-12 12"/>
      <path d="M6 6l12 12"/>
    </svg>
  `, d = {
    // domLayout: 'autoHeight',
    // default col def properties get applied to all columns
    defaultColDef: {
      sortable: !1,
      filter: !0,
      resizable: !0,
      suppressMenu: !0
    },
    // each entry here represents one column
    columnDefs: [
      {
        field: "id",
        headerName: "Task Id",
        minWidth: 240,
        maxWidth: 240,
        pinned: "left",
        rowDrag: !0,
        cellClass: ({ data: f }) => [
          (f == null ? void 0 : f.status) === "running" ? "task-running" : ""
        ]
      },
      {
        field: "type",
        headerName: "Type",
        minWidth: 80,
        maxWidth: 80
      },
      {
        field: "priority",
        headerName: "Priority",
        hide: !0
      },
      {
        headerName: "Params",
        children: [
          {
            field: "params.prompt",
            headerName: "Prompt",
            minWidth: 400,
            autoHeight: !0,
            wrapText: !0,
            cellStyle: { "line-height": "24px", "padding-top": "8px", "padding-bottom": "8px" }
          },
          {
            field: "params.negative_prompt",
            headerName: "Negative Prompt",
            minWidth: 400,
            autoHeight: !0,
            wrapText: !0,
            cellStyle: { "line-height": "24px", "padding-top": "8px", "padding-bottom": "8px" }
          },
          {
            field: "params.checkpoint",
            headerName: "Checkpoint",
            minWidth: 150,
            maxWidth: 300,
            valueFormatter: ({ value: f }) => f || "System"
          },
          {
            field: "params.sampler_name",
            headerName: "Sampler",
            width: 150,
            minWidth: 150
          },
          {
            field: "params.steps",
            headerName: "Steps",
            minWidth: 80,
            maxWidth: 80,
            filter: "agNumberColumnFilter"
          },
          {
            field: "params.cfg_scale",
            headerName: "CFG Scale",
            width: 100,
            minWidth: 100,
            filter: "agNumberColumnFilter"
          },
          {
            field: "params.size",
            headerName: "Size",
            minWidth: 110,
            maxWidth: 110,
            valueGetter: ({ data: f }) => f ? `${f.params.width}x${f.params.height}` : ""
          },
          {
            field: "params.batch",
            headerName: "Batching",
            minWidth: 100,
            maxWidth: 100,
            valueGetter: ({ data: f }) => f ? `${f.params.n_iter}x${f.params.batch_size}` : "1x1"
          }
        ]
      },
      { field: "created_at", headerName: "Date", minWidth: 200 },
      {
        headerName: "Action",
        pinned: "right",
        minWidth: 110,
        maxWidth: 110,
        resizable: !1,
        valueGetter: ({ data: f }) => f == null ? void 0 : f.id,
        cellRenderer: ({ api: f, value: y, data: C }) => {
          const m = `
            <div class="inline-flex rounded-md shadow-sm mt-1.5" role="group">
              <button type="button" ${C.status === "running" ? "disabled" : ""} class="ts-btn-action ts-btn-run">
                <svg width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                  <path d="M7 4v16l13 -8z"/>
                </svg>
              </button>
              <button type="button" class="ts-btn-action ts-btn-delete">
                ${C.status === "pending" ? c : p}
              </button>
            </div>
            `, w = document.createElement("div");
          w.innerHTML = m;
          const E = w.firstElementChild;
          return E.querySelector("button.ts-btn-run").addEventListener("click", () => {
            console.log("run", y), f.showLoadingOverlay(), e.runTask(y).then(() => f.hideOverlay());
          }), E.querySelector("button.ts-btn-delete").addEventListener("click", () => {
            console.log("delete", y), f.showLoadingOverlay(), e.deleteTask(y).then(() => f.hideOverlay());
          }), E;
        }
      }
    ],
    getRowId: ({ data: f }) => f.id,
    rowData: [],
    rowSelection: "single",
    // allow rows to be selected
    animateRows: !0,
    // have rows animate to new positions when sorted
    pagination: !0,
    paginationPageSize: 10,
    suppressCopyRowsToClipboard: !0,
    suppressRowTransform: !0,
    suppressRowClickSelection: !0,
    enableBrowserTooltips: !0,
    onGridReady: ({ api: f }) => {
      const y = l.querySelector(
        "input#agent_scheduler_search_input"
      );
      En(y, "keyup").pipe(mc(() => Cc(200))).subscribe((C) => {
        f.setQuickFilter(C.target.value);
      }), e.subscribe({
        next: ([C, m]) => {
          if (f.setRowData(m.pending_tasks), m.current_task_id) {
            const w = f.getRowNode(m.current_task_id);
            w && f.refreshCells({ rowNodes: [w], force: !0 });
          }
          f.sizeColumnsToFit();
        }
      }), e.refresh();
    },
    onRowDragEnd: ({ api: f, node: y, overNode: C }) => {
      var E, R;
      const m = (E = y.data) == null ? void 0 : E.id, w = (R = C == null ? void 0 : C.data) == null ? void 0 : R.id;
      m && w && m !== w && (f.showLoadingOverlay(), e.moveTask(m, w).then(() => f.hideOverlay()));
    }
  }, v = gradioApp().querySelector(
    "#agent_scheduler_pending_tasks_grid"
  );
  document.querySelector(".dark") && (v.className = "ag-theme-alpine-dark"), v.style.height = window.innerHeight - 240 + "px", new ew(v, d), e.refresh();
}
onUiLoaded(Kw);
